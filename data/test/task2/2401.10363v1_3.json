{
  "paper_id": "2401.10363v1",
  "title": "Verification and Enforcement of Strong State-Based Opacity for Discrete-Event Systems",
  "sections": {
    "enforcement of k𝐾k-sso in definition 3": "In this subsection, we design an efficient algorithm in the proposed opacity-enforcement framework to enforce K𝐾K-SSO in Definition 3 using the concurrent-composition structures C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) (proposed in Section 3) and C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)).\nIt is noted that C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) is a slight variant of the parallel composition G||Obs(G)G||Obs(G) in the current special case that the events of O​b​s​(G)𝑂𝑏𝑠𝐺Obs(G) are also events of G𝐺G and O​b​s​(G)𝑂𝑏𝑠𝐺Obs(G) does not have unobservable events.\nSpecifically, C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) can be obtained from G||Obs(G)G||Obs(G) by extending the scalar events of G||Obs(G)G||Obs(G) to the events of vector form by doubling events.\nHowever, in more general cases, these two composition operations are remarkably different, see [ref]17 for details.\nNote that, the parallel composition G||Obs(G)G||Obs(G) has been employed to enforce standard CSO under the supervisory control framework with a number of assumptions [ref]23 .\nNow we recall the properties of C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G))/G||Obs(G)G||Obs(G).\nDetails see [ref]23 and/or . Given a system G=(X,Σ,δ,G=(X,\\Sigma,\\delta, X0)X_{0}), a projection map P𝑃P w.r.t. a set ΣosubscriptΣ𝑜\\Sigma_{o} of observable events, and a set XSsubscript𝑋𝑆X_{S} of secret states, let O​b​s​(G)𝑂𝑏𝑠𝐺Obs(G) be the observer of G𝐺G.\nThen For any q∈Xo​b​s𝑞subscript𝑋𝑜𝑏𝑠q\\in X_{obs} and any x∈q𝑥𝑞x\\in q, (x,q)𝑥𝑞(x,q) is a state in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)); (x,q)𝑥𝑞(x,q) is a state in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) if and only if there exists a string s∈ℒ​(G)𝑠ℒ𝐺s\\in\\mathcal{L}(G) that leads to state x𝑥x in G𝐺G and whose projection leads to estimate q𝑞q in O​b​s​(G)𝑂𝑏𝑠𝐺Obs(G); G𝐺G is standard CSO w.r.t. ΣosubscriptΣ𝑜\\Sigma_{o} and XSsubscript𝑋𝑆X_{S} if and only if there exists no state (x,q)𝑥𝑞(x,q) in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) such that q⊆XS𝑞subscript𝑋𝑆q\\subseteq X_{S}. The following result establishes the relationship between the initial states in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) and the corresponding states in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)). Given a system G=(X,Σ,δ,X0)𝐺𝑋Σ𝛿subscript𝑋0G=(X,\\Sigma,\\delta,X_{0}) and a set XSsubscript𝑋𝑆X_{S} of secret states, let C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) and C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) be two corresponding concurrent compositions.\nThen for any initial state (x,q~0)∈X^c​c,0𝑥subscript~𝑞0subscript^𝑋𝑐𝑐0(x,\\tilde{q}_{0})\\in\\hat{X}_{cc,0} in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}), there exists at least one corresponding state (x,q)𝑥𝑞(x,q) in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) such that q~0=q∖XSsubscript~𝑞0𝑞subscript𝑋𝑆\\tilde{q}_{0}=q\\setminus X_{S}. Proof  By definitions of C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) and C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}), this proof trivially holds.\n□□\\square By Proposition 4.2, we conclude that when an initial state (x,q~0)∈X^c​c,0𝑥subscript~𝑞0subscript^𝑋𝑐𝑐0(x,\\tilde{q}_{0})\\in\\hat{X}_{cc,0} of C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) violates K𝐾K-SSO in Definition 3, in order to prevent it from being generated, in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) we need to cut off all runs ended with state (x,q)𝑥𝑞(x,q) by disabling the corresponding controllable transitions, where q~0=q∖XSsubscript~𝑞0𝑞subscript𝑋𝑆\\tilde{q}_{0}=q\\setminus X_{S}.\nBased on the above preparation, we design Algorithm 2 to enforce K𝐾K-SSO in Definition 3. Now, let us intuitively explain Algorithm 2.\nTo enforce K𝐾K-SSO in Definition 3, we first need to know whether there exists a leaking-secret run that violates K𝐾K-SSO in Definition 3 in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}).\nIf such a leaking-secret run exists, by Theorem 3.1, in Line 888 we compute the set ΘΘ\\Theta consisting of all states of the form (⋅,∅)⋅(\\cdot,\\emptyset) that are observationally reachable from X^c​c,0subscript^𝑋𝑐𝑐0\\hat{X}_{cc,0} within K𝐾K steps.\nIn Lines 101010 to 131313, we need to further capture whether there exists an uncontrollable leaking-secret run (x,q~0)→e(⋅,∅)superscript→𝑒𝑥subscript~𝑞0⋅(x,\\tilde{q}_{0})\\stackrel{{\\scriptstyle e}}{{\\rightarrow}}(\\cdot,\\emptyset) of observational length at most K𝐾K in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) and its an uncontrollable predecessor run (x0,q0)→e~(x,q)superscript→~𝑒subscript𝑥0subscript𝑞0𝑥𝑞(x_{0},q_{0})\\stackrel{{\\scriptstyle\\tilde{e}}}{{\\rightarrow}}(x,q) in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)), where q~0=q∖XSsubscript~𝑞0𝑞subscript𝑋𝑆\\tilde{q}_{0}=q\\setminus X_{S}.\nIf such an uncontrollable leaking-secret run exists, then G𝐺G cannot be enforced to be K𝐾K-SSO in Definition 3.\nWhereas if all leaking-secret runs that violate K𝐾K-SSO in Definition 3 are controllable, in order to cut off them, our strategy is to disable the last controllable transition along each one of them666A transition (x1,q1)⟶(σ,σ~)(x2,q2)superscript⟶𝜎~𝜎subscript𝑥1subscript𝑞1subscript𝑥2subscript𝑞2(x_{1},q_{1})\\stackrel{{\\scriptstyle{(\\sigma,\\tilde{\\sigma}})}}{{\\longrightarrow}}(x_{2},q_{2}) in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) (resp., C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G))) is called controllable if σ∈Σc𝜎subscriptΣ𝑐\\sigma\\in\\Sigma_{c}.\nA controllable run in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) (resp., C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G))) is a run that contains a controllable transition..\nThis process can be done in Lines 161616 to 181818.\nNote that, the set ΛΛ\\Lambda in Line 161616 can be computed using the “Breadth-First Search Algorithm” in .\nIt is worth noting that when we disable a controllable transition in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) or C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)), it may make a non-leaking-secret run to become leaking-secret. (see Example 4.4 below).\nTo this end, in Line 232323, we repeatedly update A​c​(C​c​(G^,G~o​b​s))𝐴𝑐𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Ac(Cc(\\hat{G},\\tilde{G}_{obs})) and A​C​(C​c​(G,O​b​s​(G)))𝐴𝐶𝐶𝑐𝐺𝑂𝑏𝑠𝐺AC(Cc(G,Obs(G))). In particular, when K=0𝐾0K=0, the enforcement of 00-SSO in Definition 3 (i.e., standard CSO) in Algorithm 2 can be simplified using the concurrent composition C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) based on Proposition 4.1.\nC​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) is not needed. Next, we prove the correctness of Algorithm 2 for enforcing K𝐾K-SSO in Definition 3. A subset ℰc⊆𝒯cGsubscriptℰ𝑐superscriptsubscript𝒯𝑐𝐺\\mathcal{E}_{c}\\subseteq\\mathcal{T}_{c}^{G} returned by Algorithm 2 (if exists) is a solution to Problem 1 on K𝐾K-SSO in Definition 3. Proof  There are two cases: 1) When ℰc=∅subscriptℰ𝑐\\mathcal{E}_{c}=\\emptyset, i.e., there exists no state of the form (⋅,∅)⋅(\\cdot,\\emptyset) in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) that is observationally reachable from X^c​c,0subscript^𝑋𝑐𝑐0\\hat{X}_{cc,0} within K𝐾K steps.\nThen by Theorem 3.1, G\\ℰc=Gsubscript𝐺\\absentsubscriptℰ𝑐𝐺G_{\\backslash\\mathcal{E}_{c}}=G is K𝐾K-SSO.\nObviously, ℰc=∅subscriptℰ𝑐\\mathcal{E}_{c}=\\emptyset is a solution to Problem 1 on K𝐾K-SSO in Definition 3.\n2) When ℰc≠∅subscriptℰ𝑐\\mathcal{E}_{c}\\neq\\emptyset, by Algorithm 2, we conclude that in the most updated A​c​(C​c​(G^,G~o​b​s))𝐴𝑐𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Ac(Cc(\\hat{G},\\tilde{G}_{obs})) (if exists777When Algorithm 2 outputs ℰc≠∅subscriptℰ𝑐\\mathcal{E}_{c}\\neq\\emptyset, it is possible that all secret states in XSsubscript𝑋𝑆X_{S} have been removed in the most updated G𝐺G. In this case, A​c​(C​c​(G^,G~o​b​s))𝐴𝑐𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Ac(Cc(\\hat{G},\\tilde{G}_{obs})) disappears and the subsystem G\\ℰcsubscript𝐺\\absentsubscriptℰ𝑐G_{\\backslash\\mathcal{E}_{c}} is K𝐾K-SSO in Definition 3.) there is no state of the form (⋅,∅)⋅(\\cdot,\\emptyset) that is observationally reachable from the initial-state set within K𝐾K steps.\nThen by Theorem 3.1, the subsystem G\\ℰcsubscript𝐺\\absentsubscriptℰ𝑐G_{\\backslash\\mathcal{E}_{c}} is K𝐾K-SSO.\nTaken together, Algorithm 2 can correctly enforce K𝐾K-SSO in Definition 3 for a given system G𝐺G, a set XS⊆Xsubscript𝑋𝑆𝑋X_{S}\\subseteq X of secret states, and a non-negative integer K𝐾K.\n□□\\square Let us consider again the system G𝐺G depicted in Fig. 1.\nAccording to Example 3.2, G𝐺G is not 222-SSO in Definition 3.\nNow we demonstrate how Algorithm 2 works for solving Problem 1 on 222-SSO.\nAssume that only event c𝑐c is uncontrollable, i.e., Σu​c={c}subscriptΣ𝑢𝑐𝑐\\Sigma_{uc}=\\{c\\}.\nIn order to prevent C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) depicted in Fig. 2(e) from reaching state (8,∅)8(8,\\emptyset) in 222 observational steps, we need to cut off controllable transition (7,{1,2,3,4})⟶(b,b)(8,{2})superscript⟶𝑏𝑏7123482(7,\\{1,2,3,4\\})\\stackrel{{\\scriptstyle(b,b)}}{{\\longrightarrow}}(8,\\{2\\}).\nThis equivalently means that controllable transition 7→b8superscript→𝑏787\\stackrel{{\\scriptstyle b}}{{\\rightarrow}}8 in G𝐺G needs to be disabled.\nHence, we obtain the subsystem G1superscript𝐺1G^{1} and its corresponding concurrent composition C​c​(G^1,G~o​b​s1)𝐶𝑐superscript^𝐺1subscriptsuperscript~𝐺1𝑜𝑏𝑠Cc(\\hat{G}^{1},\\tilde{G}^{1}_{obs}) shown in Fig. 4(a) and Fig. 4(b), respectively. By Fig. 4(b), initial state (5,∅)5(5,\\emptyset) of C​c​(G^1,G~o​b​s1)𝐶𝑐superscript^𝐺1subscriptsuperscript~𝐺1𝑜𝑏𝑠Cc(\\hat{G}^{1},\\tilde{G}^{1}_{obs}) should also be removed.\nFurthermore, since transition (5,{2})⟶(c,c)(5,∅)superscript⟶𝑐𝑐525(5,\\{2\\})\\stackrel{{\\scriptstyle(c,c)}}{{\\longrightarrow}}(5,\\emptyset) is uncontrollable, initial state (5,{2})52(5,\\{2\\}) should also be removed.\nIn order to prevent these two initial states (5,{2})52(5,\\{2\\}) and (5,∅)5(5,\\emptyset) from being reached, we construct the concurrent composition C​c​(G1,O​b​s​(G1))𝐶𝑐superscript𝐺1𝑂𝑏𝑠superscript𝐺1Cc(G^{1},Obs(G^{1})), as shown in Fig. 5.\nSince initial states (5,{2})52(5,\\{2\\}) and (5,∅)5(5,\\emptyset) in C​c​(G^1,G~o​b​s1)𝐶𝑐superscript^𝐺1subscriptsuperscript~𝐺1𝑜𝑏𝑠Cc(\\hat{G}^{1},\\tilde{G}^{1}_{obs}) correspond to states (5,{2,5})525(5,\\{2,5\\}) and (5,{5})55(5,\\{5\\}) in C​c​(G1,O​b​s​(G1))𝐶𝑐superscript𝐺1𝑂𝑏𝑠superscript𝐺1Cc(G^{1},Obs(G^{1})), respectively, we cut off controllable transition (4,{1−4,7})⟶(b,b)(5,{2,5})superscript⟶𝑏𝑏4147525(4,\\{1-4,7\\})\\stackrel{{\\scriptstyle(b,b)}}{{\\longrightarrow}}(5,\\{2,5\\}) ( i.e., 4→b5superscript→𝑏454\\stackrel{{\\scriptstyle b}}{{\\rightarrow}}5 in G1subscript𝐺1G_{1}).\nThis results in the subsystem G2superscript𝐺2G^{2} shown in Fig. 6(a), whose corresponding concurrent composition C​c​(G^2,G~o​b​s2)𝐶𝑐superscript^𝐺2subscriptsuperscript~𝐺2𝑜𝑏𝑠Cc(\\hat{G}^{2},\\tilde{G}^{2}_{obs}) is shown in Fig. 6(b).\nBy Theorem 3.1, G2=G\\ℰcsuperscript𝐺2subscript𝐺\\absentsubscriptℰ𝑐G^{2}=G_{\\backslash\\mathcal{E}_{c}} is 222-SSO in Definition 3, where ℰc={4→b5,7→b8}subscriptℰ𝑐formulae-sequencesuperscript→𝑏45superscript→𝑏78\\mathcal{E}_{c}=\\{4\\stackrel{{\\scriptstyle b}}{{\\rightarrow}}5,7\\stackrel{{\\scriptstyle b}}{{\\rightarrow}}8\\}.\nThus, subset ℰc={4→b5,7→b8}subscriptℰ𝑐formulae-sequencesuperscript→𝑏45superscript→𝑏78\\mathcal{E}_{c}=\\{4\\stackrel{{\\scriptstyle b}}{{\\rightarrow}}5,7\\stackrel{{\\scriptstyle b}}{{\\rightarrow}}8\\} is a solution of Problem 1 on 222-SSO in Definition 3. The following result reveals that Problem 1 on K𝐾K-SSO in Definition 3 has a solution if and only if Algorithm 2 outputs “Yes” and a subset ℰc⊆𝒯cGsubscriptℰ𝑐superscriptsubscript𝒯𝑐𝐺\\mathcal{E}_{c}\\subseteq\\mathcal{T}_{c}^{G}. Given a system G=(X,Σ,δ,X0)𝐺𝑋Σ𝛿subscript𝑋0G=(X,\\Sigma,\\delta,X_{0}), a set Σo⊆ΣsubscriptΣ𝑜Σ\\Sigma_{o}\\subseteq\\Sigma of observable events, a set Σc⊆ΣsubscriptΣ𝑐Σ\\Sigma_{c}\\subseteq\\Sigma of controllable events, a set XS⊆Xsubscript𝑋𝑆𝑋X_{S}\\subseteq X of secret states, and a non-negative integer K𝐾K,\nif Algorithm 2 outputs “No” (i.e., no subset ℰc⊆𝒯cGsubscriptℰ𝑐superscriptsubscript𝒯𝑐𝐺\\mathcal{E}_{c}\\subseteq\\mathcal{T}_{c}^{G} is returned by Algorithm 2), then Problem 1 on K𝐾K-SSO in Definition 3 has no solution. Proof  Assume that Algorithm 2 outputs “No”.\nThen there are two cases. 1) There exists at least one uncontrollable leaking-secret run (x,q~0)→e(⋅,∅)superscript→𝑒𝑥subscript~𝑞0⋅(x,\\tilde{q}_{0})\\stackrel{{\\scriptstyle e}}{{\\rightarrow}}(\\cdot,\\emptyset) of observational length at most K𝐾K in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) and at least one uncontrollable predecessor run (x0,q0)→e~(x,q)superscript→~𝑒subscript𝑥0subscript𝑞0𝑥𝑞(x_{0},q_{0})\\stackrel{{\\scriptstyle\\tilde{e}}}{{\\rightarrow}}(x,q) in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)), where (x,q~0)∈X^c​c,0𝑥subscript~𝑞0subscript^𝑋𝑐𝑐0(x,\\tilde{q}_{0})\\in\\hat{X}_{cc,0}, (x0,q0)subscript𝑥0subscript𝑞0(x_{0},q_{0}) is an initial state of C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)), and q~0=q∖XSsubscript~𝑞0𝑞subscript𝑋𝑆\\tilde{q}_{0}=q\\setminus X_{S}.\nBy the constructions of both C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) and C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)), we conclude that when G𝐺G generates the run x0→e~​(L)x→e​(L)⋅superscript→~𝑒𝐿subscript𝑥0𝑥superscript→𝑒𝐿⋅x_{0}\\stackrel{{\\scriptstyle\\tilde{e}(L)}}{{\\rightarrow}}x\\stackrel{{\\scriptstyle e(L)}}{{\\rightarrow}}\\cdot, an intruder determines for sure that G𝐺G is at some secret states after e~​(L)~𝑒𝐿\\tilde{e}(L) has just been generated within additional K𝐾K observable steps given that the observations are P​(e~​(L)​e​(L))𝑃~𝑒𝐿𝑒𝐿P(\\tilde{e}(L)e(L)).\nSince the leaking-secret run x0→e~​(L)x→e​(L)⋅superscript→~𝑒𝐿subscript𝑥0𝑥superscript→𝑒𝐿⋅x_{0}\\stackrel{{\\scriptstyle\\tilde{e}(L)}}{{\\rightarrow}}x\\stackrel{{\\scriptstyle e(L)}}{{\\rightarrow}}\\cdot is uncontrollable, it cannot be prevented from being generated.\nHence, Problem 1 on K𝐾K-SSO in Definition 3 has no solution. 2) Assume initially that there exists at least one controllable leaking-secret run, and there exists no uncontrollable leaking-secret run, but after Algorithm 2 runs for a while, an uncontrollable leaking-secret run appears.\nIn this case, Algorithm 2 outputs “No”.\nDenote the secret runs corresponding to this process by r(i):=x0(i)→e~(i)x1(i)→e(i)x2(i)assignsuperscript𝑟𝑖superscriptsubscript𝑥0𝑖superscript~𝑒𝑖→superscriptsubscript𝑥1𝑖superscript𝑒𝑖→superscriptsubscript𝑥2𝑖r^{(i)}:=x_{0}^{(i)}\\xrightarrow[]{\\tilde{e}^{(i)}}x_{1}^{(i)}\\xrightarrow[]{e^{(i)}}x_{2}^{(i)}, where x0(i)∈X0superscriptsubscript𝑥0𝑖subscript𝑋0x_{0}^{(i)}\\in X_{0}, x1(i)∈XSsuperscriptsubscript𝑥1𝑖subscript𝑋𝑆x_{1}^{(i)}\\in X_{S}, |P​(e(i))|≤K𝑃superscript𝑒𝑖𝐾|P(e^{(i)})|\\leq K, i=1,2,…,n𝑖12…𝑛i=1,2,\\dots,n,\ne~(j)​e(j)superscript~𝑒𝑗superscript𝑒𝑗\\tilde{e}^{(j)}e^{(j)} contains at least one controllable event, j=1,2,…,n−1𝑗12…𝑛1j=1,2,\\dots,n-1, e~(n)​e(n)superscript~𝑒𝑛superscript𝑒𝑛\\tilde{e}^{(n)}e^{(n)} contains no controllable event.\nAlso assume initially only r(1)superscript𝑟1r^{(1)} is a leaking-secret run among r(1),r(2),…,r(n)superscript𝑟1superscript𝑟2…superscript𝑟𝑛r^{(1)},r^{(2)},\\dots,r^{(n)}.\nAssume after the for-loop since Line 17 starts, after the j𝑗j-th execution of the for-loop, j=1,2,…,n−1𝑗12…𝑛1j=1,2,\\dots,n-1,\nthe last controllable transition of run r(j)superscript𝑟𝑗r^{(j)} is disabled, and then run r(j+1)superscript𝑟𝑗1r^{(j+1)} becomes leaking-secret.\nThen finally, r(n)superscript𝑟𝑛r^{(n)} becomes an uncontrollable leaking-secret run, and Algorithm 2 returns “No”. Next, we show that if during each execution of the for-loop, Algorithm 2 does not necessarily disable the “last” controllable transitions, but arbitrarily choose controllable transitions to disable, Algorithm 2 still will return “No”.\nNow we make the setting of the for-loop to be more flexible as follows: in the first execution of the for-loop, we do not only disable the last controllable transition of r(1)superscript𝑟1r^{(1)}, but choose an arbitrary number of controllable transitions (may including the last controllable transition of r(1)superscript𝑟1r^{(1)}) to disable to cut off all runs whose label sequences are the same as the label sequence of r(1)superscript𝑟1r^{(1)}, then we will have all runs r(k)superscript𝑟𝑘r^{(k)} are cut off with 1≤k<l11𝑘subscript𝑙11\\leq k<l_{1} for some 1<l1≤n1subscript𝑙1𝑛1<l_{1}\\leq n, and run r(l1)superscript𝑟subscript𝑙1r^{(l_{1})} becomes a leaking-secret run.\nThen we do the same thing to r(l1)superscript𝑟subscript𝑙1r^{(l_{1})}, and will have r(l2)superscript𝑟subscript𝑙2r^{(l_{2})} becomes a leaking-secret run, where l1<l2≤nsubscript𝑙1subscript𝑙2𝑛l_{1}<l_{2}\\leq n.\nAfter repeating this for no more than n−1𝑛1n-1 times, we will have all runs r(i)superscript𝑟𝑖r^{(i)} (1≤i<n1𝑖𝑛1\\leq i<n) are cut off, and r(n)superscript𝑟𝑛r^{(n)} becomes an uncontrollable leaking-secret run.\nThen we cannot make the currently updated G𝐺G become K𝐾K-SSO in Definition 3 by choosing an arbitrary number of controllable transitions to disable.\nTherefore, system G𝐺G cannot be enforced to be K𝐾K-SSO in Definition 3.\n□□\\square Consider the system G𝐺G depicted in Fig. 7 in which Σo={a,b,c}subscriptΣ𝑜𝑎𝑏𝑐\\Sigma_{o}=\\{a,b,c\\}, Σc={u,v}subscriptΣ𝑐𝑢𝑣\\Sigma_{c}=\\{u,v\\}, X0={0}subscript𝑋00X_{0}=\\{0\\}, and XS={4,13,16}subscript𝑋𝑆41316X_{S}=\\{4,13,16\\}.\nThe corresponding concurrent composition C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) is shown in Fig. 8.\nBy Theorem 3.1, G𝐺G is 111-SSO in Definition 3, but not 222-SSO. Next, we want to know whether the enforcement of 222-SSO of G𝐺G can be done using Algorithm 2.\nSpecifically, in order to prevent state (5,∅)5(5,\\emptyset) in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) from being reached within 222 observational steps,\nstates (4,{3,11,15})431115(4,\\{3,11,15\\}) and (5,{12})512(5,\\{12\\}) should be removed since events a𝑎a and b𝑏b are uncontrollable.\nTo this end, we construct the concurrent composition C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)).\nFor the sake of simplicity, it is enough to depict part of C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) in Fig. 9.\nSince state (4,{3,11,15})431115(4,\\{3,11,15\\}) in C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) corresponds to state (4,{3,4,11,15})4341115(4,\\{3,4,11,15\\}) in C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)), we cut off controllable transition\n(3,{3,4,11,15})⟶(v,ϵ)(4,{3,4,11,15})superscript⟶𝑣italic-ϵ33411154341115(3,\\{3,4,11,15\\})\\stackrel{{\\scriptstyle(v,\\epsilon)}}{{\\longrightarrow}}(4,\\{3,4,11,15\\}) ( i.e., 3→v4superscript→𝑣343\\stackrel{{\\scriptstyle v}}{{\\rightarrow}}4 in G𝐺G).\nThis results in the subsystem G1superscript𝐺1G^{1} shown in Fig. 10(a), whose corresponding concurrent composition C​c​(G^1,G~o​b​s1)𝐶𝑐superscript^𝐺1subscriptsuperscript~𝐺1𝑜𝑏𝑠Cc(\\hat{G}^{1},\\tilde{G}^{1}_{obs}) is shown in Fig. 10(b).\nBy Theorem 3.1, states (13,12)1312(13,12) and (13,∅)13(13,\\emptyset) in C​c​(G^1,G~o​b​s1)𝐶𝑐superscript^𝐺1subscriptsuperscript~𝐺1𝑜𝑏𝑠Cc(\\hat{G}^{1},\\tilde{G}^{1}_{obs}) should be forbidden to be reached.\nTherefore, we construct part of the concurrent composition C​c​(G1,O​b​s​(G1))𝐶𝑐superscript𝐺1𝑂𝑏𝑠superscript𝐺1Cc(G^{1},Obs(G^{1})), as shown in Fig. 11.\nIn order to prevent states (13,{12,13,16})13121316(13,\\{12,13,16\\}) and (13,{13})1313(13,\\{13\\}) in C​c​(G1,O​b​s​(G1))𝐶𝑐superscript𝐺1𝑂𝑏𝑠superscript𝐺1Cc(G^{1},Obs(G^{1})) from being reached, we cut off controllable transition (9,{1,2,7,9,10,14})⟶(u,ϵ)(10,{1,2,7,9,10,14})superscript⟶𝑢italic-ϵ9127910141012791014(9,\\{1,2,7,9,10,14\\})\\stackrel{{\\scriptstyle(u,\\epsilon)}}{{\\longrightarrow}}(10,\\{1,2,7,9,10,14\\}) ( i.e., 9→u10superscript→𝑢9109\\stackrel{{\\scriptstyle u}}{{\\rightarrow}}10 in G1superscript𝐺1G^{1}).\nWe obtain the subsystem G2superscript𝐺2G^{2} shown in Fig. 12, whose corresponding concurrent composition C​c​(G^2,G~o​b​s2)𝐶𝑐superscript^𝐺2subscriptsuperscript~𝐺2𝑜𝑏𝑠Cc(\\hat{G}^{2},\\tilde{G}^{2}_{obs}) is shown in Fig. 12.\nIn C​c​(G^2,G~o​b​s2)𝐶𝑐superscript^𝐺2subscriptsuperscript~𝐺2𝑜𝑏𝑠Cc(\\hat{G}^{2},\\tilde{G}^{2}_{obs}), initial state (16,∅)16(16,\\emptyset) should be forbidden to be reached.\nToward that end, we construct part of the concurrent composition C​c​(G2,O​b​s​(G2))𝐶𝑐superscript𝐺2𝑂𝑏𝑠superscript𝐺2Cc(G^{2},Obs(G^{2})) in Fig. 13 in which state (16,{16})1616(16,\\{16\\}) corresponds to state (16,∅)16(16,\\emptyset) in C​c​(G^2,G~o​b​s2)𝐶𝑐superscript^𝐺2subscriptsuperscript~𝐺2𝑜𝑏𝑠Cc(\\hat{G}^{2},\\tilde{G}^{2}_{obs}).\nSince the only run ended with state (16,{16})1616(16,\\{16\\}) is uncontrollable, Algorithm 2 outputs “No”.\nTherefore, G𝐺G cannot be enforced to be 222-SSO.\nNote that, it is not difficult to conclude that G𝐺G cannot be enforced to be 222-SSO no matter how to cut off its controllable transitions. We analyze the time complexity of using Algorithm 2 to do enforcement for K𝐾K-SSO in Definition 3.\nFirstly, the time consumption for computing C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) is 𝒪​((|Σo|​|Σu​o|+|Σ|)​|X|2​2|X|)𝒪subscriptΣ𝑜subscriptΣ𝑢𝑜Σsuperscript𝑋2superscript2𝑋\\mathcal{O}((|\\Sigma_{o}||\\Sigma_{uo}|+|\\Sigma|)|X|^{2}2^{|X|}) (See Remark 5 for details).\nPerforming the process of Lines 333 to 101010 can be done in the size of C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}), i.e., 𝒪​(|Σ|​|X|2​2|X|+|X|​2|X|)𝒪Σsuperscript𝑋2superscript2𝑋𝑋superscript2𝑋\\mathcal{O}(|\\Sigma||X|^{2}2^{|X|}+|X|2^{|X|}).\nSecondly, computing C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) has also time complexity 𝒪​((|Σo|​|Σu​o|+|Σ|)​|X|2​2|X|)𝒪subscriptΣ𝑜subscriptΣ𝑢𝑜Σsuperscript𝑋2superscript2𝑋\\mathcal{O}((|\\Sigma_{o}||\\Sigma_{uo}|+|\\Sigma|)|X|^{2}2^{|X|}).\nFurther, the time cost for performing the process of Lines 111111 to 161616 is 𝒪​(|Σ|​|X|2​2|X|+|X|​2|X|)𝒪Σsuperscript𝑋2superscript2𝑋𝑋superscript2𝑋\\mathcal{O}(|\\Sigma||X|^{2}2^{|X|}+|X|2^{|X|}) using the “Breadth-First Search Algorithm” in .\nThirdly, in order to cut off all runs generated by C​c​(G^,G~o​b​s)𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Cc(\\hat{G},\\tilde{G}_{obs}) or C​c​(G,O​b​s​(G))𝐶𝑐𝐺𝑂𝑏𝑠𝐺Cc(G,Obs(G)) that violate K𝐾K-SSO in Definition 3, in Lines 171717 to 181818 we need to disable each controllable transition in ΛΛ\\Lambda, which has time complexity 𝒪​(|X|2​|Σc|)𝒪superscript𝑋2subscriptΣ𝑐\\mathcal{O}(|X|^{2}|\\Sigma_{c}|).\nIn Line 232323, updating A​c​(C​c​(G^,G~o​b​s))𝐴𝑐𝐶𝑐^𝐺subscript~𝐺𝑜𝑏𝑠Ac(Cc(\\hat{G},\\tilde{G}_{obs})) and A​c​(C​c​(G,O​b​s​(G)))𝐴𝑐𝐶𝑐𝐺𝑂𝑏𝑠𝐺Ac(Cc(G,Obs(G))) takes time 𝒪​((|Σo|​|Σu​o|+|Σ|)​|X|2​2|X|)𝒪subscriptΣ𝑜subscriptΣ𝑢𝑜Σsuperscript𝑋2superscript2𝑋\\mathcal{O}((|\\Sigma_{o}||\\Sigma_{uo}|+|\\Sigma|)|X|^{2}2^{|X|}).\nTaken together, the overall time complexity for enforcing K𝐾K-SSO in Definition 3 using Algorithm 2 is 𝒪​((|Σo|​|Σu​o|+|Σ|)​|Σc|​|X|4​2|X|)𝒪subscriptΣ𝑜subscriptΣ𝑢𝑜ΣsubscriptΣ𝑐superscript𝑋4superscript2𝑋\\mathcal{O}((|\\Sigma_{o}||\\Sigma_{uo}|+|\\Sigma|)|\\Sigma_{c}||X|^{4}2^{|X|}). Analogously, two notions of K𝐾K-SSO in Definitions 1 and 2 can also be enforced under the proposed enforcement framework using their verification structures in [ref]17 and .\nIn particular, the authors in [ref]46 considered the enforcement of K𝐾K-SSO in Definition 1 under the supervisory control framework using the so-called K𝐾K-step recognizer (K𝐾K-SR).\nThey provided an approach to synthesize a supremal permissive supervisor for enforcing K𝐾K-SSO in Definition 1 under the assumption of Σc⊆ΣosubscriptΣ𝑐subscriptΣ𝑜\\Sigma_{c}\\subseteq\\Sigma_{o}, which has time complexity 𝒪​(|Σo|​2(K+2)​|X|)𝒪subscriptΣ𝑜superscript2𝐾2𝑋\\mathcal{O}(|\\Sigma_{o}|2^{(K+2)|X|}).\nWhereas our proposed enforcement approach for K𝐾K-SSO in Definition 1 works in a remarkably different way and does not require any assumption.\nFurthermore, our approach has lower time complexity than that of [ref]46."
  },
  "reference_labels": [
    {
      "index": 0,
      "title": "On the history of diagnosability and opacity in discrete event systems",
      "abstract": "",
      "year": "2018",
      "venue": "Annual Reviews in Control",
      "authors": "S. Lafortune, F. Lin, and C.N. Hadjicostis"
    },
    {
      "index": 1,
      "title": "Estimation and Inference in Discrete Event Systems",
      "abstract": "",
      "year": "2020",
      "venue": "Springer, Switzerland AG",
      "authors": "C.N. Hadjicostis"
    },
    {
      "index": 2,
      "title": "Opacity enforcement for confidential robust control in linear cyber-physical systems",
      "abstract": "",
      "year": "2020",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "L. An and G. Yang"
    },
    {
      "index": 3,
      "title": "Notions of Centralized and Decentralized Opacity in Linear Systems∗,+",
      "abstract": "",
      "year": "2020",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "B. Ramasubramanian, W.R. Cleaveland, and S. Marcus",
      "orig_title": "Notions of centralized and decentralized opacity in linear systems",
      "paper_id": "1903.06869v1"
    },
    {
      "index": 4,
      "title": "On Approximate Opacity of Cyber-Physical Systems",
      "abstract": "",
      "year": "2021",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "X. Yin, M. Zamani, and S. Liu",
      "orig_title": "On approximate opacity of cyber-physical systems",
      "paper_id": "1902.09411v1"
    },
    {
      "index": 5,
      "title": "Using unification for opacity properties",
      "abstract": "",
      "year": "2004",
      "venue": "Workshop on Issues in the Theory of Security",
      "authors": "L. Mazare´´𝑒\\acute{e}"
    },
    {
      "index": 6,
      "title": "Modelling opacity using Petri nets",
      "abstract": "",
      "year": "2005",
      "venue": "Electronic Notes in Theoretical Computer Science",
      "authors": "J.W. Bryans, M. Koutny, and P. Ryan"
    },
    {
      "index": 7,
      "title": "Concurrent secrets",
      "abstract": "",
      "year": "2007",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "E. Badouel, M. Bednarczyk, A. Borzyszkowski, et al."
    },
    {
      "index": 8,
      "title": "Notions of security and opaicty in discrete event systems",
      "abstract": "",
      "year": "2007",
      "venue": "46th IEEE Conference on Decision and Control",
      "authors": "A. Saboori and C.N. Hadjicostis"
    },
    {
      "index": 9,
      "title": "Opacity generalised to transition systems",
      "abstract": "",
      "year": "2008",
      "venue": "Internationa Journal of Information Security",
      "authors": "J.W. Bryans, M. Koutny, L. Mazare´´𝑒\\acute{e}, and P. Ryan"
    },
    {
      "index": 10,
      "title": "Overview of discrete event systems opacity: Models, validation, and quantification",
      "abstract": "",
      "year": "2016",
      "venue": "Annual Reviews in Control",
      "authors": "R. Jacob, J.J. Lesage, and J.M. Faure"
    },
    {
      "index": 11,
      "title": "Verification of initial-state opacity in security appications of discrete event systems",
      "abstract": "",
      "year": "2013",
      "venue": "Information Sciences",
      "authors": "A. Saboori and C.N. Hadjicostis"
    },
    {
      "index": 12,
      "title": "Verification of K𝐾K-step opacity and analysis of its complexity",
      "abstract": "",
      "year": "2011",
      "venue": "IEEE Transactions on Automation Science and Engineering",
      "authors": "A. Saboori and C.N. Hadjicostis"
    },
    {
      "index": 13,
      "title": "Verification of infinite-step opacity and complexity considerations",
      "abstract": "",
      "year": "2012",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "A. Saboori and C.N. Hadjicostis"
    },
    {
      "index": 14,
      "title": "Opacity of discrete event systems and its applications",
      "abstract": "",
      "year": "2011",
      "venue": "Automatica",
      "authors": "F. Lin"
    },
    {
      "index": 15,
      "title": "Comparative analysis of related notions of opacity in centralized and coordinated architectures",
      "abstract": "",
      "year": "2013",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "Y. Wu and S. Lafortune"
    },
    {
      "index": 16,
      "title": "A unified concurrent-composition method to state/event inference and concealment in labeled finite-state automata as discrete-event systems",
      "abstract": "",
      "year": "2023",
      "venue": "Annual Reviews in Control",
      "authors": "K. Zhang"
    },
    {
      "index": 17,
      "title": "Verifying Weak and Strong k-Step Opacity in Discrete-Event Systems",
      "abstract": "",
      "year": "2023",
      "venue": "Automatica",
      "authors": "J. Balun and T. Masopust",
      "orig_title": "Verifying weak and strong k𝑘k-step opacity in discrete-event systems",
      "paper_id": "2204.01286v3"
    },
    {
      "index": 18,
      "title": "Comparing the notions of opacity for discrete-event systems",
      "abstract": "",
      "year": "2021",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "J. Balun and T. Masopust"
    },
    {
      "index": 19,
      "title": "Supervisory control for opacity",
      "abstract": "",
      "year": "2010",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "J. Dubreil, P. Darondeau, and H. Marchand"
    },
    {
      "index": 20,
      "title": "Opacity-enforcing supervisory strategies via state estimator constructions",
      "abstract": "",
      "year": "2012",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "A. Saboori and C.N. Hadjicostis"
    },
    {
      "index": 21,
      "title": "A uniform approach for synthesizing property-enforcing supervisors for partially-observed discrete-event systems",
      "abstract": "",
      "year": "2016",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "X. Yin and S. Lafortune"
    },
    {
      "index": 22,
      "title": "Current-state opacity enforcement in discrete event systems under incomparable observations",
      "abstract": "",
      "year": "2018",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "Y. Tong, Z. Li, C. Seatzu, and A. Giua"
    },
    {
      "index": 23,
      "title": "Using Subobservers to Synthesize Opacity-Enforcing Supervisors",
      "abstract": "",
      "year": "2022",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "R.H. Moulton, B.B. Hamgini, Z.A. Khouzani, et al.",
      "orig_title": "Using subobservers to synthesize opacity-enforcing supervisors",
      "paper_id": "2110.04334v4"
    },
    {
      "index": 24,
      "title": "Synthesis of insertion functions for enforcement of opacity security properties",
      "abstract": "",
      "year": "2014",
      "venue": "Automatica",
      "authors": "Y. Wu and S. Lafortune"
    },
    {
      "index": 25,
      "title": "Enforcement of opacity by public and private insertion functions",
      "abstract": "",
      "year": "2018",
      "venue": "Automatica",
      "authors": "Y. Ji, Y. Wu, and S. Lafortune"
    },
    {
      "index": 26,
      "title": "Opacity enforcement using nondeterministic publicly-known edit functions",
      "abstract": "",
      "year": "2019",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "Y. Ji, X. Yin, and S. Lafortune"
    },
    {
      "index": 27,
      "title": "Enforcement for infinite-step opacity and K𝐾K-step opacity via insertion mechanism",
      "abstract": "",
      "year": "2022",
      "venue": "Automatica",
      "authors": "R. Liu and J. Lu"
    },
    {
      "index": 28,
      "title": "Extended insertion functions for opacity enforcement in discrete-event systems",
      "abstract": "",
      "year": "2022",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "X. Li, C.N. Hadjicostis, and Z. Li"
    },
    {
      "index": 29,
      "title": "Synthesis of opaque systems with static and dynamic masks",
      "abstract": "",
      "year": "2012",
      "venue": "Formal Methods in System Design",
      "authors": "F. Cassez, J. Dubreil, and H. Marchand"
    },
    {
      "index": 30,
      "title": "Maximum information release while ensuring opacity in discrete event systems",
      "abstract": "",
      "year": "2015",
      "venue": "IEEE Transactions on Automation Science and Engineering",
      "authors": "B. Zhang, S. Shu, and F. Lin"
    },
    {
      "index": 31,
      "title": "Synthesis of dynamic masks for infinite-step opacity",
      "abstract": "",
      "year": "2020",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "X. Yin and S. Li"
    },
    {
      "index": 32,
      "title": "Verification of state-based opacity using Petri nets",
      "abstract": "",
      "year": "2017",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "Y. Tong, Z. Li, C. Seatzu, and A. Giua"
    },
    {
      "index": 33,
      "title": "Opacity of nondeterministic transition systems: A (bi)simulation relation approach",
      "abstract": "",
      "year": "2019",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "K. Zhang, X. Yin, and M. Zamani",
      "orig_title": "Opacity of nondeterministic transition systems: A (bi)simulation relation approach",
      "paper_id": "1802.03321v2"
    },
    {
      "index": 34,
      "title": "Probabilistic system opacity in discrete event systems",
      "abstract": "",
      "year": "2018",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "C. Keroglou and C.N. Hadjicostis"
    },
    {
      "index": 35,
      "title": "Infinite-step opacity and K𝐾K-step opacity of stochastic discrete-event systems",
      "abstract": "",
      "year": "2019",
      "venue": "Automatica",
      "authors": "X. Yin, Z. Li, W. Wang, and C. Liu"
    },
    {
      "index": 36,
      "title": "Opacity measures of fuzzy discrete event systems",
      "abstract": "",
      "year": "2020",
      "venue": "IEEE Transactions on Fuzzy Systems",
      "authors": "W. Deng, D. Qiu, and J. Yang"
    },
    {
      "index": 37,
      "title": "State-based opacity of labeled real-time automata",
      "abstract": "",
      "year": "2024",
      "venue": "Theoretical Computer Science",
      "authors": "K. Zhang"
    },
    {
      "index": 38,
      "title": "A Framework for Current-State Opacity under Dynamic Information Release Mechanism",
      "abstract": "",
      "year": "2022",
      "venue": "Automatica",
      "authors": "J. Hou, X. Yin, and S. Li",
      "orig_title": "A framework for current-state opacity under dynamic information release mechanism",
      "paper_id": "2012.04874v2"
    },
    {
      "index": 39,
      "title": "Opacity of discrete-event systems under nondeterministic observation mechanism",
      "abstract": "",
      "year": "2023",
      "venue": "Asian Journal of Control",
      "authors": "J. Zhang, Q. Chu, X. Han, et al."
    },
    {
      "index": 40,
      "title": "Coverage analysis of mobile agent trajectory via state-based opacity formulations",
      "abstract": "",
      "year": "2011",
      "venue": "Control Engineering Practice",
      "authors": "A. Saboori and C.N. Hadjicostis"
    },
    {
      "index": 41,
      "title": "Ensuring privacy in location-based services: An approach based on opacity enforcement",
      "abstract": "",
      "year": "2014",
      "venue": "12th International Workshop on Discrete Event Systems",
      "authors": "Y. Wu, K. Sankararaman, and S. Lafortune"
    },
    {
      "index": 42,
      "title": "On the verification of opacity in web services and their composition",
      "abstract": "",
      "year": "2017",
      "venue": "IEEE Transactions on Services Computing",
      "authors": "A. Bourouis, K. Klai, N.B. Hadj-Alouane, and Y.E. Touati"
    },
    {
      "index": 43,
      "title": "Information control in networked discrete event systems and its application to battery management systems",
      "abstract": "",
      "year": "2020",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "F. Lin, W. Chen, W. Wang, and F. Wang"
    },
    {
      "index": 44,
      "title": "Enforcement and validation (at runtime) of various notions of opacity",
      "abstract": "",
      "year": "2015",
      "venue": "Discrete Event Dynamic Systems",
      "authors": "Y. Falcone and H. Marchand"
    },
    {
      "index": 45,
      "title": "Verification and enforcement of strong infinite- and k𝑘k-step opacity using state recognizers",
      "abstract": "",
      "year": "2021",
      "venue": "Automatica",
      "authors": "Z. Ma, X. Yin, and Z. Li"
    },
    {
      "index": 46,
      "title": "Strong current-state and initial-state opacity of discrete-event systems",
      "abstract": "",
      "year": "2023",
      "venue": "Automatica",
      "authors": "X. Han, K. Zhang, J. Zhang, Z. Li, and Z. Chen",
      "orig_title": "Strong current-state and initial-state opacity of discrete-event systems",
      "paper_id": "2109.05475v1"
    },
    {
      "index": 47,
      "title": "A new framework for discrete-event systems",
      "abstract": "",
      "year": "2023",
      "venue": "Foundations and Trends® in Systems and Control",
      "authors": "K. Zhang"
    },
    {
      "index": 48,
      "title": "Polynomial-time verification and enforcement of delayed strong detectability for discrete-event systems",
      "abstract": "",
      "year": "2023",
      "venue": "IEEE Transactions on Automatic Control",
      "authors": "K. Zhang"
    },
    {
      "index": 49,
      "title": "Verification of Strong 𝐾-Step Opacity for Discrete-Event Systems",
      "abstract": "",
      "year": "2022",
      "venue": "61th IEEE Conference on Decision and Control",
      "authors": "X. Han, K. Zhang, and Z. Li",
      "orig_title": "Verification of strong K𝐾K-step opacity for discrete-event systems",
      "paper_id": "2204.04698v1"
    },
    {
      "index": 50,
      "title": "Introduction to Automata Theory, Languages, and Computation",
      "abstract": "",
      "year": "2001",
      "venue": "Addison-Wesley",
      "authors": "J.E. Hopcroft, R. Motwani, and J.D. Ullman"
    },
    {
      "index": 51,
      "title": "Introduction to Disctete Event Systems",
      "abstract": "",
      "year": "2021",
      "venue": "Springer, Switzerland AG",
      "authors": "C.G. Cassandras and S. Lafortune"
    },
    {
      "index": 52,
      "title": "Introduction to Algorithms",
      "abstract": "",
      "year": "2009",
      "venue": "MIT Press",
      "authors": "T. H. Cormen, C. E. Leiserson, R. L. Rivest, and C. Stein"
    },
    {
      "index": 53,
      "title": "A new approach for the verification of infinite-step and K-step opacity using two-way observers",
      "abstract": "",
      "year": "2017",
      "venue": "Automatica",
      "authors": "X. Yin and S. Lafortune"
    },
    {
      "index": 54,
      "title": "Supervisory control of a class of discrete event processes",
      "abstract": "",
      "year": "1987",
      "venue": "SIAM Journal on Control and Optimization",
      "authors": "P.J. Ramadge and W.M. Wonham"
    }
  ]
}