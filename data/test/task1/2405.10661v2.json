{
  "paper_id": "2405.10661v2",
  "title": "Verification Algorithms for Automated Separation Logic Verifiers",
  "abstract": "Abstract\nMost automated program verifiers for separation logic use either symbolic execution or verification condition generation to extract proof obligations, which are then handed over to an SMT solver. Existing verification algorithms are designed to be sound, but differ in performance and completeness. These characteristics may also depend on the programs and properties to be verified. Consequently, developers and users of program verifiers have to select a verification algorithm carefully for their application domain. Taking an informed decision requires a systematic comparison of the performance and completeness characteristics of the verification algorithms used by modern separation logic verifiers, but such a comparison does not exist.\nThis paper describes five verification algorithms for separation logic, three that are used in existing tools and two novel algorithms that combine characteristics of existing symbolic execution and verification condition generation algorithms. A detailed evaluation of implementations of these five algorithms in the Viper infrastructure assesses their performance and completeness for different classes of input programs. Based on the experimental results, we identify candidate portfolios of algorithms that maximize completeness and performance.",
  "reference_labels": [
    {
      "index": 0,
      "title": "Permission-based verification of red-black trees and their merging",
      "abstract": "",
      "year": "2021",
      "venue": "FormaliSE@ICSE",
      "authors": "Armborst, L., Huisman, M."
    },
    {
      "index": 1,
      "title": "A generic methodology for the modular verification of security protocol implementations",
      "abstract": "",
      "year": "2023",
      "venue": "CCS",
      "authors": "Arquint, L., Schwerhoff, M., Mehta, V., Müller, P."
    },
    {
      "index": 2,
      "title": "Leveraging Uniqueness for Modular Verification of Heap-Manipulating Programs",
      "abstract": "",
      "year": "2024",
      "venue": "",
      "authors": "Astrauskas, V."
    },
    {
      "index": 3,
      "title": "Leveraging Rust types for modular specification and verification",
      "abstract": "",
      "year": "2019",
      "venue": "ACM Program. Lang.",
      "authors": "Astrauskas, V., Müller, P., Poli, F., Summers, A.J."
    },
    {
      "index": 4,
      "title": "CVC5: A versatile and industrial-strength SMT solver",
      "abstract": "",
      "year": "2022",
      "venue": "TACAS",
      "authors": "Barbosa, H., Barrett, C.W., Brain, M., Kremer, G., Lachnitt, H., Mann, M., Mohamed, A., Mohamed, M., Niemetz, A., Nötzli, A., Ozdemir, A., Preiner, M., Reynolds, A., Sheng, Y., Tinelli, C., Zohar, Y."
    },
    {
      "index": 5,
      "title": "Boogie: A modular reusable verifier for object-oriented programs",
      "abstract": "",
      "year": "2005",
      "venue": "FMCO",
      "authors": "Barnett, M., Chang, B.E., DeLine, R., Jacobs, B., Leino, K.R.M."
    },
    {
      "index": 6,
      "title": "Weakest-precondition of unstructured programs",
      "abstract": "",
      "year": "2005",
      "venue": "PASTE",
      "authors": "Barnett, M., Leino, K.R.M."
    },
    {
      "index": 7,
      "title": "Smallfoot: Modular automatic assertion checking with separation logic",
      "abstract": "",
      "year": "2005",
      "venue": "FMCO",
      "authors": "Berdine, J., Calcagno, C., O’Hearn, P.W."
    },
    {
      "index": 8,
      "title": "The VerCors tool for verification of concurrent programs",
      "abstract": "",
      "year": "2014",
      "venue": "FM",
      "authors": "Blom, S., Huisman, M."
    },
    {
      "index": 9,
      "title": "Heaps and data structures: A challenge for automated provers",
      "abstract": "",
      "year": "2011",
      "venue": "CADE",
      "authors": "Böhme, S., Moskal, M."
    },
    {
      "index": 10,
      "title": "Permission accounting in separation logic",
      "abstract": "",
      "year": "2005",
      "venue": "POPL",
      "authors": "Bornat, R., Calcagno, C., O’Hearn, P.W., Parkinson, M.J."
    },
    {
      "index": 11,
      "title": "Checking interference with fractional permissions",
      "abstract": "",
      "year": "2003",
      "venue": "SAS",
      "authors": "Boyland, J."
    },
    {
      "index": 12,
      "title": "Rich Specifications for Ethereum Smart Contract Verification",
      "abstract": "",
      "year": "2021",
      "venue": "ACM Program. Lang.",
      "authors": "Bräm, C., Eilers, M., Müller, P., Sierra, R., Summers, A.J.",
      "orig_title": "Rich specifications for Ethereum smart contract verification",
      "paper_id": "2104.10274v2"
    },
    {
      "index": 13,
      "title": "Explicit-state and symbolic model checking of nuclear i&c systems: A comparison",
      "abstract": "",
      "year": "2017",
      "venue": "IECON",
      "authors": "Buzhinsky, I., Pakonen, A., Vyatkin, V."
    },
    {
      "index": 14,
      "title": "Automated verification of shape, size and bag properties via user-defined predicates in separation logic",
      "abstract": "",
      "year": "2012",
      "venue": "Sci. Comput. Program.",
      "authors": "Chin, W., David, C., Nguyen, H.H., Qin, S."
    },
    {
      "index": 15,
      "title": "Simplify: a theorem prover for program checking",
      "abstract": "",
      "year": "2005",
      "venue": "J. ACM",
      "authors": "Detlefs, D., Nelson, G., Saxe, J.B."
    },
    {
      "index": 16,
      "title": "Caper - automatic verification for fine-grained concurrency",
      "abstract": "",
      "year": "2017",
      "venue": "ESOP",
      "authors": "Dinsdale-Young, T., da Rocha Pinto, P., Andersen, K.J., Birkedal, L."
    },
    {
      "index": 17,
      "title": "VerifyThis 2019: A Program Verification Competition",
      "abstract": "",
      "year": "2021",
      "venue": "Int. J. Softw. Tools Technol. Transf.",
      "authors": "Dross, C., Furia, C.A., Huisman, M., Monahan, R., Müller, P.",
      "orig_title": "VerifyThis 2019: a program verification competition",
      "paper_id": "2008.13610v3"
    },
    {
      "index": 18,
      "title": "Translating Pedagogical Exercises to Viper’s Go Front-End",
      "abstract": "",
      "year": "2023",
      "venue": "",
      "authors": "Egli, T."
    },
    {
      "index": 19,
      "title": "Modular Specification and Verification of Security Properties for Mainstream Languages",
      "abstract": "",
      "year": "2022",
      "venue": "",
      "authors": "Eilers, M."
    },
    {
      "index": 20,
      "title": "Product programs in the wild: Retrofitting program verifiers to check information flow security",
      "abstract": "",
      "year": "2021",
      "venue": "CAV",
      "authors": "Eilers, M., Meier, S., Müller, P."
    },
    {
      "index": 21,
      "title": "Nagini: A static verifier for Python",
      "abstract": "",
      "year": "2018",
      "venue": "CAV",
      "authors": "Eilers, M., Müller, P."
    },
    {
      "index": 22,
      "title": "Modular product programs",
      "abstract": "",
      "year": "2020",
      "venue": "ACM Trans. Program. Lang. Syst.",
      "authors": "Eilers, M., Müller, P., Hitz, S."
    },
    {
      "index": 23,
      "title": "SecCSL: Security concurrent separation logic",
      "abstract": "",
      "year": "2019",
      "venue": "CAV",
      "authors": "Ernst, G., Murray, T."
    },
    {
      "index": 24,
      "title": "Why3 - where programs meet provers",
      "abstract": "",
      "year": "2013",
      "venue": "ESOP",
      "authors": "Filliâtre, J., Paskevich, A."
    },
    {
      "index": 25,
      "title": "Static Verification of the SCION Router Implementation",
      "abstract": "",
      "year": "2018",
      "venue": "",
      "authors": "Forster, S."
    },
    {
      "index": 26,
      "title": "Translating Pedagogical Verification Exercises to Viper",
      "abstract": "",
      "year": "2023",
      "venue": "",
      "authors": "Frei, B."
    },
    {
      "index": 27,
      "title": "Steel: proof-oriented programming in a dependently typed concurrent separation logic",
      "abstract": "",
      "year": "2021",
      "venue": "ACM Program. Lang.",
      "authors": "Fromherz, A., Rastogi, A., Swamy, N., Gibson, S., Martínez, G., Merigoux, D., Ramananandro, T."
    },
    {
      "index": 28,
      "title": "Verification condition generation for permission logics with abstract predicates and abstraction functions",
      "abstract": "",
      "year": "2013",
      "venue": "ECOOP",
      "authors": "Heule, S., Kassios, I.T., Müller, P., Summers, A.J."
    },
    {
      "index": 29,
      "title": "VeriFast: A powerful, sound, predictable, fast verifier for C and Java",
      "abstract": "",
      "year": "2011",
      "venue": "NASA Formal Methods",
      "authors": "Jacobs, B., Smans, J., Philippaerts, P., Vogels, F., Penninckx, W., Piessens, F."
    },
    {
      "index": 30,
      "title": "Iris from the ground up: A modular foundation for higher-order concurrent separation logic",
      "abstract": "",
      "year": "2018",
      "venue": "J. Funct. Program.",
      "authors": "Jung, R., Krebbers, R., Jourdan, J., Bizjak, A., Birkedal, L., Dreyer, D."
    },
    {
      "index": 31,
      "title": "Comparing verification condition generation with symbolic execution: An experience report",
      "abstract": "",
      "year": "2012",
      "venue": "VSTTE",
      "authors": "Kassios, I.T., Müller, P., Schwerhoff, M."
    },
    {
      "index": 32,
      "title": "Powering the static driver verifier using Corral",
      "abstract": "",
      "year": "2014",
      "venue": "SIGSOFT FSE",
      "authors": "Lal, A., Qadeer, S."
    },
    {
      "index": 33,
      "title": "This is Boogie 2",
      "abstract": "",
      "year": "",
      "venue": "",
      "authors": "Leino, K.R.M."
    },
    {
      "index": 34,
      "title": "Dafny: An automatic program verifier for functional correctness",
      "abstract": "",
      "year": "2010",
      "venue": "LPAR (Dakar)",
      "authors": "Leino, K.R.M."
    },
    {
      "index": 35,
      "title": "Program Proofs",
      "abstract": "",
      "year": "2023",
      "venue": "MIT Press",
      "authors": "Leino, K.R.M."
    },
    {
      "index": 36,
      "title": "Verification of concurrent programs with Chalice",
      "abstract": "",
      "year": "2009",
      "venue": "FOSAD",
      "authors": "Leino, K.R.M., Müller, P., Smans, J."
    },
    {
      "index": 37,
      "title": "Gillian, part II: real-world verification for JavaScript and C",
      "abstract": "",
      "year": "2021",
      "venue": "CAV",
      "authors": "Maksimovic, P., Ayoun, S., Santos, J.F., Gardner, P."
    },
    {
      "index": 38,
      "title": "Z3: an efficient SMT solver",
      "abstract": "",
      "year": "2008",
      "venue": "TACAS",
      "authors": "de Moura, L.M., Bjørner, N.S."
    },
    {
      "index": 39,
      "title": "Portfolio solving for Dafny",
      "abstract": "",
      "year": "2024",
      "venue": "Dafny Workshop",
      "authors": "Mugnier, E., McLaughlin, S., Tomb, A."
    },
    {
      "index": 40,
      "title": "Automatic Verification of Iterated Separating Conjunctions using Symbolic Execution",
      "abstract": "",
      "year": "2016",
      "venue": "CAV",
      "authors": "Müller, P., Schwerhoff, M., Summers, A.J.",
      "orig_title": "Automatic verification of iterated separating conjunctions using symbolic execution",
      "paper_id": "1603.00649v3"
    },
    {
      "index": 41,
      "title": "Viper: A verification infrastructure for permission-based reasoning",
      "abstract": "",
      "year": "2016",
      "venue": "VMCAI",
      "authors": "Müller, P., Schwerhoff, M., Summers, A.J."
    },
    {
      "index": 42,
      "title": "Separation logic and abstraction",
      "abstract": "",
      "year": "2005",
      "venue": "POPL",
      "authors": "Parkinson, M.J., Bierman, G.M."
    },
    {
      "index": 43,
      "title": "The relationship between separation logic and implicit dynamic frames",
      "abstract": "",
      "year": "2011",
      "venue": "ESOP",
      "authors": "Parkinson, M.J., Summers, A.J."
    },
    {
      "index": 44,
      "title": "Protocols to Code: Formal Verification of a Next-Generation Internet Router",
      "abstract": "",
      "year": "2024",
      "venue": "",
      "authors": "Pereira, J.C., Klenze, T., Giampietro, S., Limbeck, M., Spiliopoulos, D., Wolf, F.A., Eilers, M., Sprenger, C., Basin, D., Müller, P., Perrig, A.",
      "orig_title": "Protocols to code: Formal verification of a next-generation internet router",
      "paper_id": "2405.06074v1"
    },
    {
      "index": 45,
      "title": "Grasshopper - complete heap verification with mixed specifications",
      "abstract": "",
      "year": "2014",
      "venue": "TACAS",
      "authors": "Piskac, R., Wies, T., Zufferey, D."
    },
    {
      "index": 46,
      "title": "Reasoning about Interior Mutability in Rust using Library-Defined Capabilities",
      "abstract": "",
      "year": "2024",
      "venue": "",
      "authors": "Poli, F., Denis, X., Müller, P., Summers, A.J.",
      "orig_title": "Reasoning about interior mutability in Rust using library-defined capabilities",
      "paper_id": "2405.08372v1"
    },
    {
      "index": 47,
      "title": "Separation logic: A logic for shared mutable data structures",
      "abstract": "",
      "year": "2002",
      "venue": "LICS",
      "authors": "Reynolds, J.C."
    },
    {
      "index": 48,
      "title": "TaDA: A logic for time and data abstraction",
      "abstract": "",
      "year": "2014",
      "venue": "ECOOP",
      "authors": "da Rocha Pinto, P., Dinsdale-Young, T., Gardner, P."
    },
    {
      "index": 49,
      "title": "A generic approach to the verification of the permutation property of sequential and parallel swap-based sorting algorithms",
      "abstract": "",
      "year": "2020",
      "venue": "IFM",
      "authors": "Safari, M., Huisman, M."
    },
    {
      "index": 50,
      "title": "Formal verification of parallel prefix sum and stream compaction algorithms in CUDA",
      "abstract": "",
      "year": "2022",
      "venue": "Theor. Comput. Sci.",
      "authors": "Safari, M., Huisman, M."
    },
    {
      "index": 51,
      "title": "RefinedC: automating the foundational verification of C code with refined ownership types",
      "abstract": "",
      "year": "2021",
      "venue": "PLDI",
      "authors": "Sammler, M., Lepigre, R., Krebbers, R., Memarian, K., Dreyer, D., Garg, D."
    },
    {
      "index": 52,
      "title": "Gillian, part i: a multi-language platform for symbolic execution",
      "abstract": "",
      "year": "2020",
      "venue": "PLDI",
      "authors": "Santos, J.F., Maksimovic, P., Ayoun, S., Gardner, P."
    },
    {
      "index": 53,
      "title": "JaVerT 2.0: compositional symbolic execution for JavaScript",
      "abstract": "",
      "year": "2019",
      "venue": "ACM Program. Lang.",
      "authors": "Santos, J.F., Maksimovic, P., Sampaio, G., Gardner, P."
    },
    {
      "index": 54,
      "title": "Advancing Automated, Permission-Based Program Verification Using Symbolic Execution",
      "abstract": "",
      "year": "2016",
      "venue": "",
      "authors": "Schwerhoff, M."
    },
    {
      "index": 55,
      "title": "Lightweight support for magic wands in an automatic verifier",
      "abstract": "",
      "year": "2015",
      "venue": "ECOOP",
      "authors": "Schwerhoff, M., Summers, A.J."
    },
    {
      "index": 56,
      "title": "Implicit dynamic frames: Combining dynamic frames and separation logic",
      "abstract": "",
      "year": "2009",
      "venue": "ECOOP",
      "authors": "Smans, J., Jacobs, B., Piessens, F."
    },
    {
      "index": 57,
      "title": "Igloo: Soundly Linking Compositional Refinement and Separation Logic for Distributed System Verification",
      "abstract": "",
      "year": "2020",
      "venue": "ACM Program. Lang.",
      "authors": "Sprenger, C., Klenze, T., Eilers, M., Wolf, F.A., Müller, P., Clochard, M., Basin, D.A.",
      "orig_title": "Igloo: soundly linking compositional refinement and separation logic for distributed system verification",
      "paper_id": "2010.04749v1"
    },
    {
      "index": 58,
      "title": "Automating deductive verification for weak-memory programs",
      "abstract": "",
      "year": "2018",
      "venue": "TACAS",
      "authors": "Summers, A.J., Müller, P."
    },
    {
      "index": 59,
      "title": "Verifying higher-order programs with the Dijkstra monad",
      "abstract": "",
      "year": "2013",
      "venue": "PLDI",
      "authors": "Swamy, N., Weinberger, J., Schlesinger, C., Chen, J., Livshits, B."
    },
    {
      "index": 60,
      "title": "Modular verification of heap reachability properties in separation logic",
      "abstract": "",
      "year": "2019",
      "venue": "ACM Program. Lang.",
      "authors": "Ter-Gabrielyan, A., Summers, A.J., Müller, P."
    },
    {
      "index": 61,
      "title": "Relaxed separation logic: a program logic for C11 concurrency",
      "abstract": "",
      "year": "2013",
      "venue": "OOPSLA",
      "authors": "Vafeiadis, V., Narayan, C."
    },
    {
      "index": 62,
      "title": "Gobra: Modular specification and verification of Go programs",
      "abstract": "",
      "year": "2021",
      "venue": "CAV",
      "authors": "Wolf, F.A., Arquint, L., Clochard, M., Oortwijn, W., Pereira, J.C., Müller, P."
    },
    {
      "index": 63,
      "title": "Concise outlines for a complex logic: A proof outline checker for TaDA",
      "abstract": "",
      "year": "2021",
      "venue": "",
      "authors": "Wolf, F.A., Schwerhoff, M., Müller, P."
    }
  ]
}