{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Rare Gems: Finding Lottery Tickets at Initialization\n\nPaper Abstract: \n\nPaper Section Text:\nWe repeated the comparison of Gem-Miner with the baselines on MobileNet-V2 on TinyImagenet as well as ResNet-18 on CIFAR-10. We show the results in Fig.¬†8. Similar to our earlier experiments, we have the following observations. Note that Gem-Miner outperforms IMP (with warmup) in the sparse regime. Also, as is expected, Gem-Miner has non-trivial accuracy before finetune, which is higher than both EP and significantly higher than IMP. Gem-Miner shows a significant deterioration in performance when subjected to the sanity checks suggested in Frankle et¬†al. . Therefore, Gem-Miner is considered to pass the sanity checks.\nFinally Gem-Miner (at initialization) nearly achieves the performance of Renda et al. (Learning rate rewinding) in the sparse regime. This is particularly impressive given that Renda et al. is a pruning-after-training method i.e., it prunes and trains iteratively, never finding a subnetwork at or even near initiailization. Recall that subnetworks identified by Gem-Miner outperform random subnetworks found by sampling based on smart ratio (SR)¬†. However, SR performs surprisingly well given that it is still random pruning. Therefore, we tried improving SR to see how far we could take random pruning. For simplicity, we call these different versions of SR starting with v1 which is the original algorithm suggested by Su et¬†al. .\nTable¬†16 compares the post-finetune accuracy of subnetworks found by training randomly initialized subnetworks at initialization, each using ‚Äúsmart ratios‚Äù found by increasingly sophisticated means. Given LùêøL-layer network, each version of SR uses its own sparsity pattern ùíë=[p1,‚ãØ,pL]ùíësubscriptùëù1‚ãØsubscriptùëùùêø{\\bm{p}}=[p_{1},\\cdots,p_{L}] to generate random subnetwork, where each layer randomly picks 0<pl‚â§10subscriptùëùùëô10<p_{l}\\leq 1 fraction of weights to use. The sparsity patterns are identified as follows: SR-v1: vanilla SR suggested in¬† SR-v2: set pl=plSRsubscriptùëùùëôsuperscriptsubscriptùëùùëôSRp_{l}=p_{l}^{\\operatorname{SR}} for 2‚â§l‚â§L‚àí12ùëôùêø12\\leq l\\leq L-1 and pl=plGMsubscriptùëùùëôsuperscriptsubscriptùëùùëôGMp_{l}=p_{l}^{\\operatorname{GM}} for l‚àà{1,L}ùëô1ùêøl\\in\\{1,L\\} SR-v3: set pl=plSRsubscriptùëùùëôsuperscriptsubscriptùëùùëôSRp_{l}=p_{l}^{\\operatorname{SR}} for 2‚â§l‚â§L‚àí12ùëôùêø12\\leq l\\leq L-1 and pl=1subscriptùëùùëô1p_{l}=1 for l‚àà{1,L}ùëô1ùêøl\\in\\{1,L\\} SR-v4: start with ùíëIMPsuperscriptùíëIMP{\\bm{p}}^{\\operatorname{IMP}} and search sparsity patterns in a small ball around it. SR-v5: start with the sparsity pattern of v2, and tune plsubscriptùëùùëôp_{l} using Eq¬†(1) SR-v6: start with the sparsity pattern of v4, and tune plsubscriptùëùùëôp_{l} using Eq¬†(1) The vanilla SR proposed by Su et¬†al.  is denoted by SR-v1. Motivated by the fact that (i) Gem-Miner outperforms SR and (ii) Gem-Miner and SR primarily differ in the layerwise sparsity plsubscriptùëùùëôp_{l} for the first and the last layers (refer Figure¬†7), we construct SR-v2. It uses the layerwise sparsity of SR-v1 for intermediate layers (2‚â§l‚â§L2ùëôùêø2\\leq l\\leq L) and layerwise sparsity of Gem-Miner for l‚àà{1,L}ùëô1ùêøl\\in\\{1,L\\}. As a simple variant of SR-v2, we also considered using full dense layer (pl=1subscriptùëùùëô1p_{l}=1) for the first and the last layer, which is denoted by SR-v3. This was because we observed that the first and last layers found by Gem-Miner were relatively dense compared to SR-v1.\nSR-v4 searches a few points around the sparsity pattern of IMP and chooses the best option. We chose only a few options based on intuition to make the search computationally tractable. Finally, we tried to write finding the optimal random pruning method by writing it as an optimization problem in plsubscriptùëùùëôp_{l} as follows: Intuitively, this is equivalent to choosing plsubscriptùëùùëôp_{l} such that the loss of the random subnetwork generated by sampling the mask of layer lùëôl with probability plsubscriptùëùùëôp_{l} is minimized. In order to make the problem more tractable, we set the output of previous versions as the initial value of plsubscriptùëùùëôp_{l}. Choosing pl(0)superscriptsubscriptùëùùëô0p_{l}^{(0)} as the plSR-v2superscriptsubscriptùëùùëôSR-v2p_{l}^{\\text{SR-v2}} and then applying SGD on Eq¬†1 gives us SR-v5. Repeating this with pl(0)=plSR-v4superscriptsubscriptùëùùëô0superscriptsubscriptùëùùëôSR-v4p_{l}^{(0)}=p_{l}^{\\text{SR-v4}} results in SR-v6. The results of Table¬†16 show that different strategies in random pruning can improve the performance of random pruning, but Gem-Miner still has an 8% accuracy gap with the best random network we found for ResNet-20, CIFAR-10 classification, when the target sparsity is 1.44%. Recall that rare gems need to have not only high post-finetune accuracy but also non-trivial pre-finetune accuracy. Since the latter is a lower bound on post-finetune accuracy, we design Gem-Miner to just maximize the accuracy at initialization.\nHowever, it is not clear that this actually maximizes post-finetune accuracy. In fact, the performance of EP and IMP clearly show that it is neither a necessary nor sufficient condition. Fig.¬†9 shows both pre and post finetune accuracies for Gem-Miner (GM), edge-popup (EP), and smart ratio (SR), at both 1.4% and 0.5% sparsity, for CIFAR-10 classification using VGG-16. For Gem-Miner, we show the results of using four different learning rates Œ∑=0.01,0.001,0.0001,0.00001ùúÇ0.010.0010.00010.00001\\eta=0.01,0.001,0.0001,0.00001 for 200 epochs using lighter colors to indicate lower learning rates. It turns out that Œ∑=0.01ùúÇ0.01\\eta=0.01 has the best pre and post-finetune accuracies for both sparsities.\nMoreover, it shows that there is some correlation between pre-finetune and post-finetune accuracy i.e., subnetworks that have higher pre-finetune accuracies typically have higher accuracy after finetuning as well. However, comparing Gem-Miner‚Äôs results for 0.5% sparsity with Œ∑=0.0001ùúÇ0.0001\\eta=0.0001 and Œ∑=0.00001ùúÇ0.00001\\eta=0.00001 shows that this pattern does not always hold. With Œ∑=0.00001ùúÇ0.00001\\eta=0.00001, Gem-Miner achieves a higher pre-finetune accuracy but ends up with lower accuracy after finetuning. Therefore, we conclude that while pre-finetune accuracy is a reasonable proxy for accuracy after finetuning, it does not guarantee it in any way.\nNote that both points for EP have ‚Äúpost-finetune accuracy‚Äù ‚âÉsimilar-to-or-equals\\simeq ‚Äúpre-finetune accuracy‚Äù, which confirms the observation by Ramanujan et¬†al. [ref]31 that subnetworks found by EP are not lottery tickets i.e., they are not conducive to further training. For completeness, we also tried different variants of IMP. We refer to it as ‚Äúcold‚Äù IMP when the weights are rewound to initialization, while ‚Äúwarm‚Äù IMP rewinds to some early iteration, i.e., after training for a few epochs. Further, we classify it depending on the number of epochs per magnitude pruning. We say IMP is ‚Äúshort‚Äù if it only trains for a few epochs (e.g., 8 epochs for ResNet-20 on CIFAR-10) before pruning, and ‚Äúlong‚Äù if it takes a considerably larger number of epochs before pruning (e.g., 160 epochs for ResNet-20 on CIFAR-10). Regardless of ‚Äúlong‚Äù or ‚Äúshort‚Äù, the number of epochs to finetune the pruned model are the same. With these informal definitions, we can categorize IMP into four different versions:\n\n\na) short-coldIMP,\n\nb) short-warmIMP,\n\nc) long-coldIMP, and\n\nd) long-warmIMP.\n\n In the literature, only long variants have been studied thoroughly. Frankle et¬†al. [ref]10 noted that for large networks and difficult tasks, long-cold IMP fails to find lottery tickets, which is why they introduce long-warm IMP. Somewhat surprisingly, as shown in Fig. 10,\nwe find that short versions of IMP can achieve the same or an even better accuracy-sparsity tradeoff especially in the sparse regime.\nIn particular, short-cold IMP matches the performance of long-warm one without any warmup, i.e., short-cold IMP can find lottery-tickets at initialization.\nHowever, note that short-cold IMP only finds lottery tickets, not rare gems in that the subnetworks it finds have accuracy close to that of random guessing.\n\nReference markers found: [31]\n\nContext windows for each [ref]:\n[ref]31: does not guarantee it in any way.\nNote that both points for EP have ‚Äúpost-finetune accuracy‚Äù ‚âÉsimilar-to-or-equals\\simeq ‚Äúpre-finetune accuracy‚Äù, which confirms the observation by Ramanujan et¬†al. [ref]31 that subnetworks found by EP are not lottery tickets i.e., they are not conducive to further training. For completeness, we also tried different variants of IMP. We refer to it as ‚Äúcold‚Äù IMP\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 31,\n            \"titles\": [\n                \"Comparing Rewinding and Fine-tuning in Neural Network Pruning\",\n                \"Prospect Pruning: Finding Trainable Weights at Initialization using Meta-Gradients\",\n                \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n                \"The Lottery Ticket Hypothesis for Pre-trained BERT Networks\",\n                \"A Unified Lottery Ticket Hypothesis for Graph Neural Networks\",\n                \"BinaryConnect: Training Deep Neural Networks with binary weights during propagations\",\n                \"Multi-Prize Lottery Ticket Hypothesis: Finding Accurate Binary Neural Networks by Pruning A Randomly Weighted Network\",\n                \"Learning generative visual models from few training examples: An incremental bayesian approach tested on 101 object categories\",\n                \"Towards strong pruning for lottery tickets with non-zero biases\",\n                \"The Lottery Ticket Hypothesis: Finding Sparse, Trainable Neural Networks\",\n                \"Linear Mode Connectivity and the Lottery Ticket Hypothesis\",\n                \"Pruning Neural Networks at Initialization: Why Are We Missing the Mark?\",\n                \"The state of sparsity in deep neural networks\",\n                \"The lottery ticket hypothesis for object recognition\",\n                \"Learning both Weights and Connections for Efficient Neural Networks\",\n                \"Deep Compression: Compressing Deep Neural Networks with Pruning, Trained Quantization and Huffman Coding\",\n                \"Second order derivatives for network pruning: Optimal Brain Surgeon\",\n                \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Binarized neural networks\",\n                \"Quantized neural networks: Training neural networks with low precision weights and activations\",\n                \"Adam: A method for stochastic optimization\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Optimal Brain Damage\",\n                \"SNIP: Single-shot Network Pruning based on Connection Sensitivity\",\n                \"LotteryFL: Personalized and Communication-Efficient Federated Learning with Lottery Ticket Hypothesis on Non-IID Datasets\",\n                \"Sanity checks for lottery tickets: Does your winning ticket really win the jackpot?\",\n                \"Proving the Lottery Ticket Hypothesis: Pruning is All You Need\",\n                \"Skeletonization: A Technique for Trimming the Fat from a Network via Relevance Assessment\",\n                \"Logarithmic Pruning is All You Need\",\n                \"Optimal Lottery Tickets via SubsetSum: Logarithmic Over-Parameterization is Sufficient\",\n                \"What‚Äôs Hidden in a Randomly Weighted Neural Network?\",\n                \"MobileNetV2: Inverted Residuals and Linear Bottlenecks\",\n                \"A review of binarized neural networks\",\n                \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n                \"Finding Everything within Random Binary Networks\",\n                \"Sanity-checking pruning methods: Random tickets can win the jackpot\",\n                \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n                \"Picking winning tickets before training by preserving gradient flow\",\n                \"Wide Residual Networks\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]31 based on the context and research area of Rare Gems: Finding Lottery Tickets at Initialization. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}