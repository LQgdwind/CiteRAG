{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: On Efficient Training of Large-Scale Deep Learning Models: A Literature Review\n\nPaper Abstract: \n\nPaper Section Text:\nBoth the increasing amount of parameters and growing dataset size make the training process of large-scale deep learning models even more time-consuming, which also requires that more advanced frameworks and systems should be developed to further accelerate the training process and reduce costs. Below, we first introduce several commonly used large-scale deep learning models and the corresponding training datasets. Since Vaswani et al.  proposed Transformer in 2017, it has become the dominated model in NLP, leading to a boom of large language models (LLMs) and Vision Transformers (ViTs).\nSeveral (pre-trained) Transformer models demonstrate the development of efficient training, both in model structure improvements and in the application of efficient training techniques.\nFor NLP, there is a trend of rapid growth in the number of model parameters since GPT (117M parameters) , the first pre-trained Transformer which is built of Transformer decoders and pre-trained unsupervised on BookCorpus [ref]307.\nUnlike the structure of GPT, BERT (340M) [ref]48 is composed of multiple layers of bidirectional Transformer encoders that can capture the relationship between positions.\nGPT-2 (1.5B)  has much more parameters than GPT-1 and is trained on larger datasets.\nUsing large-scale networks to train language models has proven to be a very effective strategy, and the growth of datasets, efficient model structures, and breakthroughs in hardware and software have made it possible, motivating models such as Turing-NLG (17.2B) , GPT-3 (175B) , Megatron-Turing NLG (530B)  and Switch Transformer (1.6T)  to further increase the number of parameters.\nAs for CV, ViT (86M for ViT-Base)  is a milestone in the application of Transformers in this field. Recently, inspired by the breakthroughs of large language models driven by scaling up Transformers, Dehghani et al.  propose an efficient and stable training recipe that scales up ViT to 22B parameters (ViT-22B).\nIn the cross-modal or multi-modal area, CLIP  turns the classification task into an image-text matching task by jointly training an image encoder and a text encoder, with ResNet-50  or ViT as the visual backbone and Transformer as the linguistic backbone. It is also released with DALL-E , a 12B parameter version of GPT-3 which is able to generate images from input text based on the pretraining of text-image pairs.\nMost of the above models are among or based on the Foundation Models defined by Bommasani et al. , i.e., models trained on a wide range of data generally using scaled self-supervision and can be adapted (e.g. finetuned) to a wide range of downstream tasks. With the proposed general-purpose large-scale model BEiT-3 by Wang et al. , they point out that the research on large-scale models in different domains is gradually approaching “a big convergence”: firstly, Transformers have become a common backbone architecture, secondly, generative pre-training has become the most important self-supervised learning method, and thirdly, scaling up data and model size further improves the performance of large-scale models.\nAlthough models are diverse, even the most gigantic models are composed of the basic modules of linear, convolution, and attention layers. For this reason, we summarize general accelerated methods and techniques for training large-scale deep learning models, learned from the mainstream pre-trained foundation models and some other work that is not limited to self-supervised training. Large language models require pre-training on vast datasets to learn common language representations for downstream tasks.\nFor example, the BERT [ref]48 model is trained on two large datasets, the BooksCorpus (800M words) [ref]307 and English Wikipedia (2,500M words).\nMore recent and larger databases such as C4 (Colossal, Cleaned Crawl Corpus) , Pile , OSCAR (Open Super-large Crawled Aggregated coRpus) , mC4 (extended multilingual version of C4) , BigScience ROOTS Corpus (350B tokens)  are used by current models, such as LLaMA Touvron et al. [ref]253 that mixes resources from C4, GitHub, Wikipedia, Gutenberg (a project containing public books) and Books3 (a section of the Pile), ArXiv, and Stack Exchange.\nTwo of the largest multilingual datasets are OSCAR, which includes 152 languages and is 9.4TB in size as of January 2023, and mC4 which includes 101 languages and is 27T in size.\nDatasets for selected language models from GPT-1  to Gopher  are summarized by Thompson . A large dataset may contain filtered web pages, books, articles, wikis, news, source code, and social media conversations. The model can learn based on a quantity- and quality-weighted sampling  [ref]253 of different parts of the dataset.\nIn computer vision, ImageNet  is a well-known large dataset of annotated photographs.\nIts most commonly used subset, ILSVRC  (ImageNet Large Scale Visual Recognition Challenge) , contains over 1 million images spanning 1,000 object classes.\nAs an example of the dataset for pre-trained models, the recent ViT-22B  is trained on a version of JFT  that extends to approximately 4B images . Table 2 shows some of the notation specifications used in this review. We use the capital letter to represent the matrix. d𝑑d is the size of the model. m𝑚m is the size of the dataset. H𝐻H is the feature map (intermediate variable) in the training process. ϕ​(⋅)italic-ϕ⋅\\phi(\\cdot) is the activation function and Φ​(⋅)Φ⋅\\Phi(\\cdot) is the normalization function. n𝑛n is the number of tokens in transformer models. h,bℎ𝑏h,b are the height and weight of the input sample (image). L𝐿L is the cross-entropy loss. N𝑁N is the number of non-embedding model parameters. D𝐷D is the dataset size in tokens as D=n​m𝐷𝑛𝑚D=nm. Cminsubscript𝐶C_{\\min} is the minimum computation to approach the target loss or target accuracy.\n\nReference markers found: [307]\n\nContext windows for each [ref]:\n[ref]307: of rapid growth in the number of model parameters since GPT (117M parameters) , the first pre-trained Transformer which is built of Transformer decoders and pre-trained unsupervised on BookCorpus [ref]307.\nUnlike the structure of GPT, BERT (340M) [ref]48 is composed of multiple layers of bidirectional Transformer encoders that can capture the relationship between positions.\nGPT-2 (1.5B)  has\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 307,\n            \"titles\": [\n                \"A Survey on Efficient Training of Transformers\",\n                \"Iterative procedures for nonlinear integral equations\",\n                \"GPT-NeoX: Large Scale Autoregressive Language Modeling in PyTorch\",\n                \"Towards Understanding Sharpness-Aware Minimization\",\n                \"How Important is Importance Sampling for Deep Budgeted Training?\",\n                \"Adaptive Input Representations for Neural Language Modeling\",\n                \"Efficient data loader for fast sampling-based gnn training on large graphs\",\n                \"BEiT: BERT Pre-Training of Image Transformers\",\n                \"Greedy layer-wise training of deep networks\",\n                \"Curriculum learning\",\n                \"Quasi-newton methods for machine learning: forget the past, just sample\",\n                \"Colossal-ai: A unified deep learning system for large-scale parallel training\",\n                \"Maximizing Parallelism in Distributed Training for Huge Neural Networks\",\n                \"GPT-NeoX-20B: An Open-Source Autoregressive Language Model\",\n                \"Token Merging: Your ViT But Faster\",\n                \"On the opportunities and risks of foundation models\",\n                \"JAX: composable transformations of Python+NumPy programs\",\n                \"FreezeOut: Accelerate Training by Progressively Freezing Layers\",\n                \"Language Models are Few-Shot Learners\",\n                \"Efficientvit: Enhanced linear attention for high-resolution low-computation visual recognition\",\n                \"Improving Deep Learning by Inverse Square Root Linear Units (ISRLUs)\",\n                \"Avalanche: A PyTorch Library for Deep Continual Learning\",\n                \"Scatterbrain: Unifying sparse and low-rank attention\",\n                \"Transmix: Attend to mix for vision transformers\",\n                \"REX: Revisiting Budgeted Training with an Improved Schedule\",\n                \"Data-Efficient GAN Training Beyond (Just) Augmentations: A Lottery Ticket Perspective\",\n                \"Training deep nets with sublinear memory cost\",\n                \"A Simple Framework for Contrastive Learning of Visual Representations\",\n                \"Symbolic Discovery of Optimization Algorithms\",\n                \"Mask-guided vision transformer (mg-vit) for few-shot learning\",\n                \"Masked-attention mask transformer for universal image segmentation\",\n                \"Fast 2d convolution algorithms for convolutional neural networks\",\n                \"Rethinking attention with performers\",\n                \"PaLM: Scaling Language Modeling with Pathways\",\n                \"Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs)\",\n                \"Turing-NLG: A 17-billion-parameter language model by Microsoft\",\n                \"Autoaugment: Learning augmentation policies from data\",\n                \"Randaugment: Practical automated data augmentation with a reduced search space\",\n                \"Supermix: Supervising the mixing data augmentation\",\n                \"Chataug: Leveraging chatgpt for text data augmentation\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]307 based on the context and research area of On Efficient Training of Large-Scale Deep Learning Models: A Literature Review. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}