{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Trinary Tools for Continuously Valued Binary Classifiers\n\nPaper Abstract: \n\nPaper Section Text:\nPerformance Assessment for Binary Classifiers:\nClassification models are assessed empirically: a practitioner considers a testing set with known correct answers.\nWhile the most basic assessment counts the proportion correct (accuracy), other metrics consider the kinds of errors and/or the likelihood of guessing . A variety of metrics summarize performance in different ways, see  for an overview. For example, recall emphasizes false negatives while the Matthews Correlation Coefficient (MCC) considers the base rates to compare a classifier to chance  .\nThese metrics summarize performance into a single number, hiding the mixture of kinds of errors and details of which items the classifier gets right or wrong. Assessment of Continuously Valued Classifiers:\nMany binary classifiers provide a continuously valued score\nthat is thresholded.\nAdjusting the threshold allows for trade-offs in the types of errors.\nThe appropriate balance depends on the scenario.\nFor a given operating point (i.e., value of the threshold(s)), binary assessment metrics can be applied.\nMetrics can be optimized, but this requires knowing criteria and weights appropriate for the scenario.\nClassifiers can be compared at specific operating points. Non-threshold metrics  allow for more general comparison of models. Such metrics include the Receiver Operating Characteristic (ROC) curve and the Precision/Recall curve.\nThe ROC is often summarized by the area under the curve (AUC).\nSuch summary metrics hide details about the errors. Calibration:\nUse of the classification score beyond thresholding assumes that the value of the score has meaning, i.e., that more extreme scores are more likely or confidently correct.\nEarly approaches to understanding the distribution of prediction scores provided methods for assessing calibration , and a rich set of metrics are available .\nSimple visualizations are common to summarize calibration, and inspire our Reliability Curve view and Performance Confidence view.\nOur work enhances the common views to integrate into workflows that support detailed assessment. Not all classification models are able to provide useful scores 4 .\nCalibration is a desirable property for a classifier   . An over-confident classifier (that gives extreme scores in situations where is is incorrect) or under-confident classifier (that gives scores near the threshold even when correct) means that the scores cannot be used. In contrast, a calibrated\nclassifier whose scores reflect the likelihood of its correctness allows the score to be used in interpreting its results . The desire to have calibrated scores has lead to a long-standing effort in the machine learning community to extend classification methods (e.g.,  9  ). Other methods post-process classifier outputs to improve calibration . Another approach is to create a separate score of the reliability of a classifier as a trust score  or rejection score . Such scores can be combined with classifier predictions in our approach.\nSome views including calibration curves and reliability diagrams     have been developed for assessing calibration. We integrate these into our approach to support detailed assessment of classifier calibration. Trinary Classification:\n\nIn some scenarios, classifiers are given the option to reject, choosing not to make a decision if the likelihood of error is too high . The rejection criteria may be embedded into the design of the classifier, or may be performed post-hoc based on the classifier’s decision scores if they are sufficiently calibrated. We focus on the latter case. Rejection classifiers have two thresholds that provide trade-offs between error types and failing to predict. With an embedded classifier, these may be different thresholds for the score and rejection level; for post-hoc rejection they may be viewed as a “bandwidth” around a single central threshold or as an upper and lower bound. The selection of an operating point requires choosing these two parameters. Given costs of the error types and a model of the posterior likelihoods of the population, optimal parameter values can be determined . However, in practice, the costs may be hard to determine and vary, and performance can only be assessed over testing populations. Therefore, practitioners typically need to assess the trade-offs carefully. Performance metrics for rejection classifiers must consider both correctness and number of rejections. According to , “There is no adequate standard measure for the assessment of the performance of a classifier with rejection.” Single numbers fail to capture the tradeoffs between correctness and rejection rate.\nExisting metrics (e.g., ) do not consider error types or class imbalances. Rejection classifiers are typically examined using curves that show their correctness/rejection trade-offs.\nWhile a number of options exist , the most common approach is to plot correctness (accuracy or error rate) as a function of rejection rate, known as an Accuracy Rejection Curve (ARC) .\nARCs (and their variants) show the impact of different rejection rates, and, therefore, the rejection thresholds or bandwidths that determine them. However, they do not allow for considering both thresholds in a coordinated fashion. [ref]2 suggested the use of a 3D version of ROC curves, but such curves are challenging to interpret. ARCs are useful not only for determining rejection thresholds, but also for comparing the calibration of classifiers . This is used in selecting classifiers that provide a meaningful range of trade-offs. However, the approach has not been coupled with other tools for detailed analysis, and does not support the tuning of both rejection rate and decision threshold.\n\nReference markers found: [2]\n\nContext windows for each [ref]:\n[ref]2: impact of different rejection rates, and, therefore, the rejection thresholds or bandwidths that determine them. However, they do not allow for considering both thresholds in a coordinated fashion. [ref]2 suggested the use of a 3D version of ROC curves, but such curves are challenging to interpret. ARCs are useful not only for determining rejection thresholds, but also for comparing the\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 2,\n            \"titles\": [\n                \"Performance measures for classification systems with rejection\",\n                \"On optimum recognition error and reject tradeoff\",\n                \"The interaction between classification and reject performance for distance-based reject-option classifiers\",\n                \"UCI machine learning repository\",\n                \"FairVis: Visual Analytics for Discovering Intersectional Bias in Machine Learning\",\n                \"Fairsight: Visual analytics for fairness in decision making\",\n                \"The Case against Accuracy Estimation for Comparing Induction Algorithms\",\n                \"Evaluation: From Precision, Recall and F-Measure to ROC, Informedness, Markedness and Correllation\",\n                \"An Analysis of Performance Measures for Binary Classifiers\",\n                \"The advantages of the Matthews correlation coefficient (MCC) over F1 score and accuracy in binary classification evaluation\",\n                \"AUC: A Better Measure than Accuracy in Comparing Learning Algorithms\",\n                \"Verification of forecasts expressed in terms of probability\",\n                \"Probabilistic forecasts, calibration and sharpness\",\n                \"Guess: projecting machine learning scores to well-calibrated probability estimates for clinical decision-making\",\n                \"On Calibration of Modern Neural Networks\",\n                \"Calibrated structured prediction\",\n                \"Accurate probability calibration for multiple classifiers\",\n                \"Probabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods\",\n                \"Toward Bayesian Classifiers with Accurate Probabilities\",\n                \"To Trust Or Not To Trust A Classifier\",\n                \"Learning with Rejection\",\n                \"Predicting good probabilities with supervised learning\",\n                \"Scikit-learn: Machine learning in Python\",\n                \"Temporal probability calibration\",\n                \"Performance visualization spaces for classification with rejection option\",\n                \"Accuracy-Rejection Curves (ARCs) for Comparing Classification Methods with a Reject Option\",\n                \"A Framework for Considering Comprehensibility in Modeling\",\n                \"The Mythos of Model Interpretability\",\n                \"Modeltracker: Redesigning performance analysis tools for machine learning\",\n                \"Interacting with Predictions: Visual Inspection of Black-box Machine Learning Models\",\n                \"Squares: Supporting interactive performance analysis for multiclass classifiers\",\n                \"Visual methods for analyzing probabilistic classification data\",\n                \"Clavis: An interactive visual comparison system for classifiers\",\n                \"Manifold: A Model-Agnostic Framework for Interpretation and Diagnosis of Machine Learning Models\",\n                \"The What-If Tool: Interactive Probing of Machine Learning Models\",\n                \"Boxer: Interactive Comparison of Classifier Results\",\n                \"Questo: Interactive construction of objective functions for classification tasks\",\n                \"Interactive optimization for steering machine classification\",\n                \"ViCE: Visual counterfactual explanations for machine learning models\",\n                \"HypoML: Visual Analysis for Hypothesis-based Evaluation of Machine Learning Models\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]2 based on the context and research area of Trinary Tools for Continuously Valued Binary Classifiers. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}