{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Neural Mixture Models with Expectation-Maximization for End-to-end Deep Clustering\n\nPaper Abstract: \n\nPaper Section Text:\nClustering identifies similarities among data points and groups similar data points together. Such automatic data grouping is significant when manually annotating classes is overwhelming, or human understanding is insufficient to annotate (e.g., non-image data). Usually, with the absence of labels, clustering algorithms have to learn both the cluster representations (modeled by parameters) and the member assignment. Most clustering algorithms do this by iteratively alternating between two steps:\n1) assign samples (soft or hard) to clusters according to the degree of match to the cluster representations and,\n2) based on the cluster assignments, update current cluster representations.\nThis iterative nature shares the intuition of the Expectation-Maximization (EM)  algorithm. Mixture models discover the existence of subpopulations within a given population. Such sub-populations can be used cumulatively to describe the properties of the whole population. In the clustering context, this can be thought of as discovering underlying homogeneous groups within a dataset and interpreting the dataset’s properties from the discovered groups. Mixture models use hand-designed distributions (e.g., Gaussian or Bernoulli) with pre-defined parameters (e.g., a probability or mean and covariance) to represent clusters. A mixture of such distributions is fitted to the observed data points to maximize the total likelihood. This likelihood optimization is conducted via Expectation-Maximization, where the distribution parameters and posterior member assignments are iteratively refined, keeping one constant at a time. However, these statistical distributions contain a limited number of parameters to learn. Thus, traditional mixture models show poor cluster representations when directly used to cluster data with high dimensionality or high complexity. Since the strength of a clustering algorithm relies on its ability to represent clusters, we look into modeling advanced clusters with more freedom in the complexity of the discovered cluster distributions. Such distributions are not pre-defined and are adaptive to the dataset. Neural Networks are universal approximators that can approximate any measurable function when provided with an adequate amount of learning, a sufficient number of hidden units, and a deterministic relationship between network inputs and outputs [ref]2. Therefore, a NN is an ideal candidate for such advanced modeling of cluster distributions. If we employ a NN for such cluster modeling, we can let each final layer neuron approximate the relevance of a given observation (NN input) to a particular cluster. We can further transform such relevance to the respective cluster\ndistribution output/likelihood of the observation for that particular cluster. Once we have such cluster likelihoods for a batch of observations, we can calculate the posterior probabilities cluster assignment and formulate the EM objective as conventional mixture modeling. The EM objective can then be backpropagated to update the NN parameters. In this way, the NN parameters learn to represent shared and cluster-specific cluster parameters, leading to advanced cluster distributions. To our knowledge, an effort to employ a deep NN to directly model cluster distributions via their output nodes in mixture modeling has not been recorded yet. This paper adopts EM-based mixture modeling as the clustering objective to train a NN end-to-end, where the NN itself models the cluster distributions. We formulate an EM-based learning algorithm in batch-wise iterations to learn the cluster representations and the cluster assignment concurrently. The contributions of this paper are three-fold. Firstly, we approximate each cluster distribution for a given batch by the parametric function of the network from the input to the corresponding final layer neuron, followed by an additional transformation. We impose such additional transformation to regulate the transformed final layer neuron to behave as a probability density function of the input. This prevents a single cluster distribution from overpowering other distributions to capture all datapoints, leading to the trivial solution of assigning all datapoints to that dominant cluster. The proposed transformation normalizes the output of each final layer neuron over the batch to have a zero batch-mean and further constraints to the most linear region of the sigmoidsigmoid\\mathrm{sigmoid} activation. The sigmoidsigmoid\\mathrm{sigmoid} activation maps its zero batch-mean linear region input to a continuous non-negative value, the distribution output. Constraining the final-layer neurons to have a zero batch-mean and within the most linear portion of the sigmoidsigmoid\\mathrm{sigmoid} enables all cluster distributions to share a common integral over the sample space, as shown later. Thus, the approximated distributions act as probability density functions of the observation, preventing trivial solutions. Secondly, we propose a batch-wise EM optimization to train the network end-to-end. We calculate the posterior probabilities of member assignments using the approximated cluster likelihoods. As shown later, these posteriors are approximated by the softmaxsoftmax\\mathrm{softmax} of the normalized final-layer neurons. We formulate the EM loss to backpropagate using the calculated posteriors and cluster likelihoods. The optimization process of the network performs EM iterations batch-wise in an online fashion. For each iteration, we feed a batch of observations to the network. The forward pass through the network corresponds to the E-step, where we calculate the cluster likelihoods and posterior probabilities from the NN output for the given batch of observations and derive the EM loss. The backward pass through the network corresponds to the M-step, where we perform a gradient step in optimizing the EM loss. Fig. 1 illustrates the overview of the proposed Mixture-EM optimization using a NN. Thirdly, we integrate the EM optimization to consistency optimization between original and augmented datapoints for image clustering. It is essential to let the neural network learn general semantically important features and prevent the network from overfitting to only the lower-level information in data in clustering images. While this can be done by either learning a self-supervised pretext task [ref]3 or learning to output a consistent model response to the original and its transform versions [ref]4  , we choose the latter and integrate it to our mixture-EM optimization. Our consistency optimization includes minimization of the Kullback–Leibler (KL) divergence  between the model responses to original images and their transformed versions. We embed this optimization into the EM process, resulting in a two-fold optimization. We show that this two-fold optimization shows accelerated and better convergence than the consistency optimization alone. Our framework does not use any conventional clustering techniques such as k-means. The proposed optimization performs EM iterations batch-wise in an online fashion, thus, eliminates the need to iterate over the entire sample space for a single update. Using a NN allows learning complex cluster representations rather than limiting them to hand-designed parameters. The transformation of the final layer neurons to regulate cluster distributions as probability density functions prevents the model from collapsing to trivial solutions. Thus, this simple transformation eliminates additional effort to force the model to divide the samples among the clusters evenly. The training process consists of only the EM optimization in a multi-layer perceptron for vector data and the EM optimization along with the consistency optimization or any representation learning technique in a convolutional neural network for image data. The implementation is straightforward compared to many deep approaches.\n\nReference markers found: [2]\n\nContext windows for each [ref]:\n[ref]2: can approximate any measurable function when provided with an adequate amount of learning, a sufficient number of hidden units, and a deterministic relationship between network inputs and outputs [ref]2. Therefore, a NN is an ideal candidate for such advanced modeling of cluster distributions. If we employ a NN for such cluster modeling, we can let each final layer neuron approximate the\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 2,\n            \"titles\": [\n                \"Unsupervised Deep Embedding for Clustering Analysis\",\n                \"Maximum likelihood from incomplete data via the em algorithm\",\n                \"Multilayer feedforward networks are universal approximators\",\n                \"Temporal Ensembling for Semi-Supervised Learning\",\n                \"Invariant Information Clustering for Unsupervised Image Classification and Segmentation\",\n                \"Deep embedding clustering based on contractive autoencoder\",\n                \"On information and sufficiency\",\n                \"Hierarchical clustering schemes\",\n                \"Some methods for classification and analysis of multivariate observations\",\n                \"Finite mixture models\",\n                \"A density-based algorithm for discovering clusters in large spatial databases with noise.\",\n                \"Direct clustering of a data matrix\",\n                \"Pattern recognition and machine learning: springer new york\",\n                \"Associative deep clustering: Training a classification network with no labels\",\n                \"Deep clustering for unsupervised learning of visual features\",\n                \"Deep adaptive image clustering\",\n                \"Deep comprehensive correlation mining for image clustering\",\n                \"Mitigating embedding and class assignment mismatch in unsupervised image classification\",\n                \"k-meansnet: When k-means meets differentiable programming\",\n                \"Learning Latent Representations in Neural Networks for Clustering through Pseudo Supervision and Graph-based Activity Regularization\",\n                \"Clustering-friendly Representation Learning via Instance Discrimination and Feature Decorrelation\",\n                \"Neural Expectation Maximization\",\n                \"SCAN: Learning to Classify Images without Labels\",\n                \"MiCE: Mixture of Contrastive Experts for Unsupervised Image Clustering\",\n                \"Contractive auto-encoders: Explicit invariance during feature extraction\",\n                \"Unsupervised Feature Learning via Non-Parametric Instance Discrimination\",\n                \"Improving Unsupervised Image Clustering With Robust Learning\",\n                \"Masked Capsule Autoencoders\",\n                \"Maximum z scores and outliers\",\n                \"The monte carlo method\",\n                \"Gradient-based learning applied to document recognition\",\n                \"Principal component analysis\",\n                \"Visualizing Data using GTSNE\",\n                \"Nonlinear principal component analysis using autoassociative neural networks\",\n                \"Adam: A method for stochastic optimization\",\n                \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n                \"An analysis of single-layer networks in unsupervised feature learning\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Self-tuning spectral clustering\",\n                \"Optimized Cartesian 𝐾-Means\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]2 based on the context and research area of Neural Mixture Models with Expectation-Maximization for End-to-end Deep Clustering. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}