{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Relative Timing Information and Orthology in Evolutionary Scenarios\n\nPaper Abstract: \n\nPaper Section Text:\nCographs naturally appear as graph structures associated with\nvertex-labeled trees and more generally in the context of binary relations\nassociated with reconciliations of gene trees and species trees. For\nexample, orthology graphs in scenarios without horizontal gene transfer are\ncographs [ref]35. As we shall see below, both G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S})\nand G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}) are cographs for all relaxed scenarios 𝒮𝒮\\mathscr{S}. In\ncontrast, G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) is a cograph only under some additional\nconstraints. It is, however, always a so-called perfect graph. [50, Lemma 8] Let\n𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. Then G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S})\nis a cograph. It may not come as a surprise, therefore, that an analogous result holds for\nG>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}): Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. Then G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S})\nis a cograph. Set A≔σ​(a)≔𝐴𝜎𝑎A\\coloneqq\\sigma(a), B≔σ​(b)≔𝐵𝜎𝑏B\\coloneqq\\sigma(b), C≔σ​(c)≔𝐶𝜎𝑐C\\coloneqq\\sigma(c), and D≔σ​(d)≔𝐷𝜎𝑑D\\coloneqq\\sigma(d). Suppose for contradiction that\nG>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}) is not a cograph, i.e., it contains an induced P4subscript𝑃4P_{4}\na−b−c−d𝑎𝑏𝑐𝑑a-b-c-d. By Prop. 2, T𝑇T displays the informative\ntriples a​c|bconditional𝑎𝑐𝑏ac|b and b​d|cconditional𝑏𝑑𝑐bd|c. Hence,\nT|abcd=((a,c),(b,d))T_{|abcd}=((a,c),(b,d)) and, therefore, lcaT⁡(a,d)=lcaT⁡(b,c)subscriptlca𝑇𝑎𝑑subscriptlca𝑇𝑏𝑐\\operatorname{lca}_{T}(a,d)=\\operatorname{lca}_{T}(b,c).\nMoreover, by Cor. 1, we know that A≠C𝐴𝐶A\\neq C, A≠D𝐴𝐷A\\neq D, and B≠D𝐵𝐷B\\neq D.\nTherefore, we have to consider the cases\n(i) |{A,B,C,D}|=4𝐴𝐵𝐶𝐷4|\\{A,B,C,D\\}|=4;\n(ii) |{A,B,C,D}|=2𝐴𝐵𝐶𝐷2|\\{A,B,C,D\\}|=2;\n(iii) |{A,B,C,D}|=3𝐴𝐵𝐶𝐷3|\\{A,B,C,D\\}|=3 and A=B𝐴𝐵A=B, C𝐶C, and D𝐷D are pairwise\ndistinct;\n(iv) |{A,B,C,D}|=3𝐴𝐵𝐶𝐷3|\\{A,B,C,D\\}|=3 and A𝐴A, B𝐵B, and C=D𝐶𝐷C=D are pairwise\ndistinct; and\n(v) |{A,B,C,D}|=3𝐴𝐵𝐶𝐷3|\\{A,B,C,D\\}|=3 and A𝐴A, B=C𝐵𝐶B=C, and D𝐷D are pairwise\ndistinct. In Case (i), A𝐴A, B𝐵B, C𝐶C, and D𝐷D are pairwise distinct. By\nProp. 2, S𝑆S displays the informative triples A​B|Dconditional𝐴𝐵𝐷AB|D and C​D|Aconditional𝐶𝐷𝐴CD|A (see Definition 6.b’).\nThus, S|ABCD=((A,B),(C,D))S_{|ABCD}=((A,B),(C,D)) and we have lcaS⁡(B,C)=lcaS⁡(A,D)subscriptlca𝑆𝐵𝐶subscriptlca𝑆𝐴𝐷\\operatorname{lca}_{S}(B,C)=\\operatorname{lca}_{S}(A,D). In Case (ii), we must have A=B𝐴𝐵A=B and C=D𝐶𝐷C=D. Thus, we again\nobtain lcaS⁡(B,C)=lcaS⁡(A,D)subscriptlca𝑆𝐵𝐶subscriptlca𝑆𝐴𝐷\\operatorname{lca}_{S}(B,C)=\\operatorname{lca}_{S}(A,D). In Case (iii), Prop. 2 implies that S𝑆S displays the\ninformative triple C​D|A(=C​D|B)annotatedconditional𝐶𝐷𝐴absentconditional𝐶𝐷𝐵CD|A(=CD|B). Thus, we have lcaS⁡(B,C)=lcaS⁡(A,D)subscriptlca𝑆𝐵𝐶subscriptlca𝑆𝐴𝐷\\operatorname{lca}_{S}(B,C)=\\operatorname{lca}_{S}(A,D). In Case (iv), Prop. 2 implies that S𝑆S\ndisplays the informative triple A​B|D(=A​B|C)annotatedconditional𝐴𝐵𝐷absentconditional𝐴𝐵𝐶AB|D(=AB|C). Thus, we have\nlcaS⁡(B,C)=lcaS⁡(A,D)subscriptlca𝑆𝐵𝐶subscriptlca𝑆𝐴𝐷\\operatorname{lca}_{S}(B,C)=\\operatorname{lca}_{S}(A,D). In Case (v), Prop. 2\nimplies that S𝑆S displays the informative triples A​B|Dconditional𝐴𝐵𝐷AB|D and\nC​D|A(=B​D|A)annotatedconditional𝐶𝐷𝐴absentconditional𝐵𝐷𝐴CD|A(=BD|A). Since S𝑆S cannot displays both of these\ntriples, Case (v) can be immediately excluded. In Cases (i)–(iv), we have lcaT⁡(a,d)=lcaT⁡(b,c)subscriptlca𝑇𝑎𝑑subscriptlca𝑇𝑏𝑐\\operatorname{lca}_{T}(a,d)=\\operatorname{lca}_{T}(b,c) and lcaS⁡(B,C)=lcaS⁡(A,D)subscriptlca𝑆𝐵𝐶subscriptlca𝑆𝐴𝐷\\operatorname{lca}_{S}(B,C)=\\operatorname{lca}_{S}(A,D). Together with b​c∈E​(G>​(𝒮))𝑏𝑐𝐸subscript𝐺𝒮bc\\in E(G_{{}_{>}}(\\mathscr{S})), it follows\nτT​(lcaT⁡(a,d))=τT​(lcaT⁡(b,c))>τS​(lcaS⁡(B,C))=τS​(lcaS⁡(A,D))subscript𝜏𝑇subscriptlca𝑇𝑎𝑑subscript𝜏𝑇subscriptlca𝑇𝑏𝑐subscript𝜏𝑆subscriptlca𝑆𝐵𝐶subscript𝜏𝑆subscriptlca𝑆𝐴𝐷\\tau_{T}(\\operatorname{lca}_{T}(a,d))=\\tau_{T}(\\operatorname{lca}_{T}(b,c))>\\tau_{S}(\\operatorname{lca}_{S}(B,C))=\\tau_{S}(\\operatorname{lca}_{S}(A,D));\na contradiction to a​d∉E​(G>​(𝒮))𝑎𝑑𝐸subscript𝐺𝒮ad\\notin E(G_{{}_{>}}(\\mathscr{S})). In summary, G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}) does not contain an induced P4subscript𝑃4P_{4} and thus it is\na cograph.\n∎ Lemmas 14 and 15 naturally suggest to\nask whether an analogous result holds for G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}), i.e., whether\nthe EDT graph is always a cograph. If this is the case,\n{G<​(𝒮),G=​(𝒮),G>​(𝒮)}subscript𝐺𝒮subscript𝐺𝒮subscript𝐺𝒮\\{G_{{}_{<}}(\\mathscr{S}),G_{{}_{=}}(\\mathscr{S}),G_{{}_{>}}(\\mathscr{S})\\} form a “cograph 3-partition” in\nthe sense of  . As illustrated in\nFig. 3, this is not the case in general. Therefore, we\ninvestigate in the following conditions under which G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) may or may\nnot be a cograph and their implications for the underlying tree structure. Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. If\n(G=​(𝒮),σ)subscript𝐺𝒮𝜎(G_{{}_{=}}(\\mathscr{S}),\\sigma) contains an induced P4subscript𝑃4P_{4} a−b−c−d𝑎𝑏𝑐𝑑a-b-c-d on two colors,\nthen T|abcd=((a,d),b,c)T_{|{abcd}}=((a,d),b,c). By assumption and by Cor. 1, A≔σ​(a)=σ​(c)≔𝐴𝜎𝑎𝜎𝑐A\\coloneqq\\sigma(a)=\\sigma(c), B≔σ​(b)=σ​(d)≔𝐵𝜎𝑏𝜎𝑑B\\coloneqq\\sigma(b)=\\sigma(d), and A≠B𝐴𝐵A\\neq B. Therefore,\nand since a​b,b​c,c​d∈E​(G=​(𝒮))𝑎𝑏𝑏𝑐𝑐𝑑𝐸subscript𝐺𝒮ab,bc,cd\\in E(G_{{}_{=}}(\\mathscr{S})), we have τT​(lcaT⁡(a,b))=τT​(lcaT⁡(b,c))=τT​(lcaT⁡(c,d))=τS​(lcaS⁡(A,B))subscript𝜏𝑇subscriptlca𝑇𝑎𝑏subscript𝜏𝑇subscriptlca𝑇𝑏𝑐subscript𝜏𝑇subscriptlca𝑇𝑐𝑑subscript𝜏𝑆subscriptlca𝑆𝐴𝐵\\tau_{T}(\\operatorname{lca}_{T}(a,b))=\\tau_{T}(\\operatorname{lca}_{T}(b,c))=\\tau_{T}(\\operatorname{lca}_{T}(c,d))=\\tau_{S}(\\operatorname{lca}_{S}(A,B)).\nDef. 1 together with τT​(lcaT⁡(a,b))=τT​(lcaT⁡(b,c))subscript𝜏𝑇subscriptlca𝑇𝑎𝑏subscript𝜏𝑇subscriptlca𝑇𝑏𝑐\\tau_{T}(\\operatorname{lca}_{T}(a,b))=\\tau_{T}(\\operatorname{lca}_{T}(b,c)) implies that we can have neither lcaT⁡(a,b)≺TlcaT⁡(b,c)subscriptprecedes𝑇subscriptlca𝑇𝑎𝑏subscriptlca𝑇𝑏𝑐\\operatorname{lca}_{T}(a,b)\\prec_{T}\\operatorname{lca}_{T}(b,c) nor lcaT⁡(b,c)≺TlcaT⁡(a,b)subscriptprecedes𝑇subscriptlca𝑇𝑏𝑐subscriptlca𝑇𝑎𝑏\\operatorname{lca}_{T}(b,c)\\prec_{T}\\operatorname{lca}_{T}(a,b). Since lcaT⁡(a,b)subscriptlca𝑇𝑎𝑏\\operatorname{lca}_{T}(a,b)\nand lcaT⁡(b,c)subscriptlca𝑇𝑏𝑐\\operatorname{lca}_{T}(b,c) are both ancestors of b𝑏b and thus comparable in T𝑇T,\nwe conclude lcaT⁡(a,b)=lcaT⁡(b,c)subscriptlca𝑇𝑎𝑏subscriptlca𝑇𝑏𝑐\\operatorname{lca}_{T}(a,b)=\\operatorname{lca}_{T}(b,c). Similarly, we obtain\nlcaT⁡(b,c)=lcaT⁡(c,d)subscriptlca𝑇𝑏𝑐subscriptlca𝑇𝑐𝑑\\operatorname{lca}_{T}(b,c)=\\operatorname{lca}_{T}(c,d). Moreover, since a​d∉E​(G=​(𝒮))𝑎𝑑𝐸subscript𝐺𝒮ad\\notin E(G_{{}_{=}}(\\mathscr{S})), we\nhave τT​(lcaT⁡(a,d))≠τS​(lcaS⁡(A,B))=τT​(lcaT⁡(a,b))subscript𝜏𝑇subscriptlca𝑇𝑎𝑑subscript𝜏𝑆subscriptlca𝑆𝐴𝐵subscript𝜏𝑇subscriptlca𝑇𝑎𝑏\\tau_{T}(\\operatorname{lca}_{T}(a,d))\\neq\\tau_{S}(\\operatorname{lca}_{S}(A,B))=\\tau_{T}(\\operatorname{lca}_{T}(a,b)) and thus\nlcaT⁡(a,d)≠lcaT⁡(a,b)subscriptlca𝑇𝑎𝑑subscriptlca𝑇𝑎𝑏\\operatorname{lca}_{T}(a,d)\\neq\\operatorname{lca}_{T}(a,b), which implies that T𝑇T displays one of the\ntriples t1=a​b|dsubscript𝑡1conditional𝑎𝑏𝑑t_{1}=ab|d or t1′=a​d|bsubscriptsuperscript𝑡′1conditional𝑎𝑑𝑏t^{\\prime}_{1}=ad|b. By similar arguments, T𝑇T\ndisplays one of the triples t2=c​d|asubscript𝑡2conditional𝑐𝑑𝑎t_{2}=cd|a or t2′=a​d|csubscriptsuperscript𝑡′2conditional𝑎𝑑𝑐t^{\\prime}_{2}=ad|c. We\nnext examine the possible combination of these triples. If T𝑇T displays t1subscript𝑡1t_{1} and t2subscript𝑡2t_{2}, then T|abcd=((a,b),(c,d))T_{|abcd}=((a,b),(c,d)), in\nwhich case lcaT⁡(a,b)≠lcaT⁡(b,c)subscriptlca𝑇𝑎𝑏subscriptlca𝑇𝑏𝑐\\operatorname{lca}_{T}(a,b)\\neq\\operatorname{lca}_{T}(b,c); a contradiction. If T𝑇T\ndisplays t1subscript𝑡1t_{1} and t2′subscriptsuperscript𝑡′2t^{\\prime}_{2}, then T|abcd=(((a,b),d),c)T_{|abcd}=(((a,b),d),c). Again\nlcaT⁡(a,b)≠lcaT⁡(b,c)subscriptlca𝑇𝑎𝑏subscriptlca𝑇𝑏𝑐\\operatorname{lca}_{T}(a,b)\\neq\\operatorname{lca}_{T}(b,c); again a contradiction. If T𝑇T displays\nt1′subscriptsuperscript𝑡′1t^{\\prime}_{1} and t2subscript𝑡2t_{2}, then T|abcd=(((c,d),a),b)T_{|abcd}=(((c,d),a),b). Hence lcaT⁡(a,b)≠lcaT⁡(c,d)subscriptlca𝑇𝑎𝑏subscriptlca𝑇𝑐𝑑\\operatorname{lca}_{T}(a,b)\\neq\\operatorname{lca}_{T}(c,d); a contradiction. If T𝑇T displays t1′subscriptsuperscript𝑡′1t^{\\prime}_{1} and t2′subscriptsuperscript𝑡′2t^{\\prime}_{2},\nthen T|abcdT_{|abcd} is either of the form (((a,d),c),b)𝑎𝑑𝑐𝑏(((a,d),c),b),\n(((a,d),b),c)𝑎𝑑𝑏𝑐(((a,d),b),c), ((a,d),b,c)𝑎𝑑𝑏𝑐((a,d),b,c), or ((a,d),(b,c))𝑎𝑑𝑏𝑐((a,d),(b,c)). For the first two\ncases, we obtain lcaT⁡(a,b)≠lcaT⁡(c,d)subscriptlca𝑇𝑎𝑏subscriptlca𝑇𝑐𝑑\\operatorname{lca}_{T}(a,b)\\neq\\operatorname{lca}_{T}(c,d), while for the latter case\nwe obtain lcaT⁡(b,c)≠lcaT⁡(c,d)subscriptlca𝑇𝑏𝑐subscriptlca𝑇𝑐𝑑\\operatorname{lca}_{T}(b,c)\\neq\\operatorname{lca}_{T}(c,d). Thus we reach a contradiction in all\nthree cases, leaving T|abcd=((a,d),b,c)T_{|abcd}=((a,d),b,c) as the only possibility.\n∎ Note that the tree T|abcd=((a,d),b,c)T_{|{abcd}}=((a,d),b,c) in\nLemma 16 is displayed by T𝑇T but not binary. Hence, we\nobtain Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. If (G=​(𝒮),σ)subscript𝐺𝒮𝜎(G_{{}_{=}}(\\mathscr{S}),\\sigma) contains a\n2-colored P4subscript𝑃4P_{4}, then T𝑇T is not a binary tree. Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. If (G=​(𝒮),σ)subscript𝐺𝒮𝜎(G_{{}_{=}}(\\mathscr{S}),\\sigma) contains an\ninduced P4subscript𝑃4P_{4} a−b−c−a′𝑎𝑏𝑐superscript𝑎′a-b-c-a^{\\prime} on three distinct colors with\nA=σ​(a)=σ​(a′)𝐴𝜎𝑎𝜎superscript𝑎′A=\\sigma(a)=\\sigma(a^{\\prime}), B=σ​(b)𝐵𝜎𝑏B=\\sigma(b), and C=σ​(c)𝐶𝜎𝑐C=\\sigma(c), then\nS|ABC=(A,B,C)S_{|ABC}=(A,B,C). In particular, S𝑆S is not a binary tree. Moreover,\nwe have T|abca′=((a,c),(b,a′))T_{|{abca^{\\prime}}}=((a,c),(b,a^{\\prime})). By assumption P3=a−b−csubscript𝑃3𝑎𝑏𝑐P_{3}=a-b-c is an induced path.\nLemma 12 thus imply that S𝑆S does not display A​B|Cconditional𝐴𝐵𝐶AB|C\nand B​C|Aconditional𝐵𝐶𝐴BC|A. Similarly, the induced P3=b−c−a′subscript𝑃3𝑏𝑐superscript𝑎′P_{3}=b-c-a^{\\prime} implies that S𝑆S does\nnot display B​C|Aconditional𝐵𝐶𝐴BC|A and A​C|Bconditional𝐴𝐶𝐵AC|B. This leaves S|ABC=(A,B,C)S_{|ABC}=(A,B,C) as the\nonly possibility. By Lemma 12, we immediately see\nthat a​c,b​a′∈G<​(𝒮)𝑎𝑐𝑏superscript𝑎′subscript𝐺𝒮ac,ba^{\\prime}\\in G_{{}_{<}}(\\mathscr{S}) since otherwise S𝑆S would display A​C|Bconditional𝐴𝐶𝐵AC|B or\nA​B|Cconditional𝐴𝐵𝐶AB|C. This, together with Lemma 8 and a​b,b​c,c​a′∉G<​(𝒮)𝑎𝑏𝑏𝑐𝑐superscript𝑎′subscript𝐺𝒮ab,bc,ca^{\\prime}\\notin G_{{}_{<}}(\\mathscr{S}), implies that T𝑇T displays a​c|bconditional𝑎𝑐𝑏ac|b and b​a′|cconditional𝑏superscript𝑎′𝑐ba^{\\prime}|c and,\ntherefore, T|abca′=((a,c),(b,a′))T_{|{abca^{\\prime}}}=((a,c),(b,a^{\\prime})).\n∎ Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. If E​(G=​(𝒮))𝐸subscript𝐺𝒮E(G_{{}_{=}}(\\mathscr{S})) contains an\ninduced P4subscript𝑃4P_{4} a−b−c−b′𝑎𝑏𝑐superscript𝑏′a-b-c-b^{\\prime} on three distinct colors with A=σ​(a)𝐴𝜎𝑎A=\\sigma(a),\nB=σ​(b)=σ​(b′)𝐵𝜎𝑏𝜎superscript𝑏′B=\\sigma(b)=\\sigma(b^{\\prime}) and C=σ​(c)𝐶𝜎𝑐C=\\sigma(c), then S|ABC=((A,C),B)S_{|ABC}=((A,C),B)\nand T|abcb′=((a,b′),b,c)T_{|abcb^{\\prime}}=((a,b^{\\prime}),b,c). Suppose that G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) contains an induced P4subscript𝑃4P_{4} a−b−c−b′𝑎𝑏𝑐superscript𝑏′a-b-c-b^{\\prime} on three\ndistinct colors A=σ​(a)𝐴𝜎𝑎A=\\sigma(a), B=σ​(b)=σ​(b′)𝐵𝜎𝑏𝜎superscript𝑏′B=\\sigma(b)=\\sigma(b^{\\prime}), and\nC=σ​(c)=C𝐶𝜎𝑐𝐶C=\\sigma(c)=C. By Lemma 11, T𝑇T displays\nneither b​c|b′conditional𝑏𝑐superscript𝑏′bc|b^{\\prime} nor b′​c|bconditionalsuperscript𝑏′𝑐𝑏b^{\\prime}c|b. Hence, we have to consider two cases: (1)\nT|bcb′=(b,c,b′)T_{|bcb^{\\prime}}=(b,c,b^{\\prime}), or (2) T|bcb′=b​b′|cT_{|bcb^{\\prime}}=bb^{\\prime}|c. By similar arguments,\nwe have either (I) T|abc=(a,b,c)T_{|abc}=(a,b,c) or\n(II) T|abc=a​c|bT_{|abc}=ac|b. We proceed by combining these alternatives: Case (1,I) yields (i) T|abcb′=(a,b,c,b′)T_{|abcb^{\\prime}}=(a,b,c,b^{\\prime}) or (ii)\nT|abcb′=((a,b′),b,c)T_{|abcb^{\\prime}}=((a,b^{\\prime}),b,c), Case (1,II) yields T|abcb′=((a,c),b,b′)T_{|abcb^{\\prime}}=((a,c),b,b^{\\prime}),\nCase (2,I) yields T|abcb′=((b,b′),a,c)T_{|abcb^{\\prime}}=((b,b^{\\prime}),a,c), and Case (2,II) yields\nT|abcb′=((b,b′),(a,c))T_{|abcb^{\\prime}}=((b,b^{\\prime}),(a,c)). In all cases except Case (1,I,ii), we have\nlcaT⁡(a,b)=lcaT⁡(a,b′)subscriptlca𝑇𝑎𝑏subscriptlca𝑇𝑎superscript𝑏′\\operatorname{lca}_{T}(a,b)=\\operatorname{lca}_{T}(a,b^{\\prime}) and a​b∈E​(G=​(𝒮))𝑎𝑏𝐸subscript𝐺𝒮ab\\in E(G_{{}_{=}}(\\mathscr{S})) thus\nimplies τS​(lcaS⁡(A,B))=τT​(lcaT⁡(a,b))=τT​(lcaT⁡(a,b′))subscript𝜏𝑆subscriptlca𝑆𝐴𝐵subscript𝜏𝑇subscriptlca𝑇𝑎𝑏subscript𝜏𝑇subscriptlca𝑇𝑎superscript𝑏′\\tau_{S}(\\operatorname{lca}_{S}(A,B))=\\tau_{T}(\\operatorname{lca}_{T}(a,b))=\\tau_{T}(\\operatorname{lca}_{T}(a,b^{\\prime}))\nand a​b′∈E​(G=​(𝒮))𝑎superscript𝑏′𝐸subscript𝐺𝒮ab^{\\prime}\\in E(G_{{}_{=}}(\\mathscr{S})); a contradiction. This leaves Case\n(1,I,ii), T|abcb′=((a,b′),b,c)T_{|abcb^{\\prime}}=((a,b^{\\prime}),b,c), as the only possibility.\nLemma 12 together with a​b,b​c∈E​(G=​(𝒮))𝑎𝑏𝑏𝑐𝐸subscript𝐺𝒮ab,bc\\in E(G_{{}_{=}}(\\mathscr{S})) and\na​c∉E​(G=​(𝒮))𝑎𝑐𝐸subscript𝐺𝒮ac\\notin E(G_{{}_{=}}(\\mathscr{S})) implies that either S|ABC=(A,B,C)S_{|ABC}=(A,B,C) or\nS|ABC=A​C|BS_{|ABC}=AC|B. In the first case, we have lcaS⁡(A,C)=lcaS⁡(B,C)subscriptlca𝑆𝐴𝐶subscriptlca𝑆𝐵𝐶\\operatorname{lca}_{S}(A,C)=\\operatorname{lca}_{S}(B,C).\nTogether with T|abcb′=((a,b′),b,c)T_{|abcb^{\\prime}}=((a,b^{\\prime}),b,c) (and thus\nlcaT⁡(b,c)=lcaT⁡(a,c)subscriptlca𝑇𝑏𝑐subscriptlca𝑇𝑎𝑐\\operatorname{lca}_{T}(b,c)=\\operatorname{lca}_{T}(a,c)) and b​c∈E​(G=​(𝒮))𝑏𝑐𝐸subscript𝐺𝒮bc\\in E(G_{{}_{=}}(\\mathscr{S})), we obtain\nτS​(lcaS⁡(A,C))=τS​(lcaS⁡(B,C))=τT​(lcaT⁡(b,c))=τT​(lcaT⁡(a,c))subscript𝜏𝑆subscriptlca𝑆𝐴𝐶subscript𝜏𝑆subscriptlca𝑆𝐵𝐶subscript𝜏𝑇subscriptlca𝑇𝑏𝑐subscript𝜏𝑇subscriptlca𝑇𝑎𝑐\\tau_{S}(\\operatorname{lca}_{S}(A,C))=\\tau_{S}(\\operatorname{lca}_{S}(B,C))=\\tau_{T}(\\operatorname{lca}_{T}(b,c))=\\tau_{T}(\\operatorname{lca}_{T}(a,c)). Therefore, we must have a​c∈E​(G=)𝑎𝑐𝐸subscript𝐺ac\\in E(G_{{}_{=}}); a\ncontradiction. In summary, therefore, we have S|ABC=((A,C),B)S_{|ABC}=((A,C),B) and\nT|abcb′=((a,b′),b,c)T_{|abcb^{\\prime}}=((a,b^{\\prime}),b,c).\n∎ Fig. 4 shows two examples of scenarios that realize EDT\ngraphs containing P4subscript𝑃4P_{4}s on three colors as described in\nLemma 17 and Lemma 18, respectively. Instead of considering the three graphs G<subscript𝐺G_{{}_{<}}, G=subscript𝐺G_{{}_{=}}, and G>subscript𝐺G_{{}_{>}} in\nisolation, we can alternatively think of a graph 333-partition\n𝒢={G<,G=,G>,σ}𝒢subscript𝐺subscript𝐺subscript𝐺𝜎\\mathscr{G}=\\{G_{{}_{<}},G_{{}_{=}},G_{{}_{>}},\\sigma\\} as a complete graph Knsubscript𝐾𝑛K_{n} whose edges are\ncolored with three different colors depending on whether they are contained\nin E​(G<)𝐸subscript𝐺E(G_{{}_{<}}), E​(G=)𝐸subscript𝐺E(G_{{}_{=}}), or E​(G>)𝐸subscript𝐺E(G_{{}_{>}}). This links our results to the\nliterature on edge-colored graphs. Complete edge-colored permutation\ngraphs are characterized  as the edge-partitions of\nKnsubscript𝐾𝑛K_{n} such that (i) each color class induces a permutation graph in the\nusual sense , and (ii) the edge coloring is a Gallai\ncoloring, i.e., it contains no “rainbow triangle” with three distinct\ncolors. While every cograph is also a permutation graph ,\nrainbow triangles may appear in the edge-coloring defined by\n{G<,G=,G>}subscript𝐺subscript𝐺subscript𝐺\\{G_{{}_{<}},G_{{}_{=}},G_{{}_{>}}\\} that is explained by a relaxed scenario. In fact, induced\nP4subscript𝑃4P_{4}s in G=subscript𝐺G_{{}_{=}} are always associated with rainbow triangles. Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. If\nG=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) contains an induced P4=a−b−c−dsubscript𝑃4𝑎𝑏𝑐𝑑P_{4}=a-b-c-d, then either a​d∈E​(G<​(𝒮))𝑎𝑑𝐸subscript𝐺𝒮ad\\in E(G_{{}_{<}}(\\mathscr{S})) and a​c,b​d∈E​(G>​(𝒮))𝑎𝑐𝑏𝑑𝐸subscript𝐺𝒮ac,bd\\in E(G_{{}_{>}}(\\mathscr{S})) or a​d∈E​(G>​(𝒮))𝑎𝑑𝐸subscript𝐺𝒮ad\\in E(G_{{}_{>}}(\\mathscr{S})) and\na​c,b​d∈E​(G<​(𝒮))𝑎𝑐𝑏𝑑𝐸subscript𝐺𝒮ac,bd\\in E(G_{{}_{<}}(\\mathscr{S})). In either case, both {a,b,d}𝑎𝑏𝑑\\{a,b,d\\} and\n{a,c,d}𝑎𝑐𝑑\\{a,c,d\\} are rainbow triangles. Suppose G=≔G=​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{=}}\\coloneqq G_{{}_{=}}(\\mathscr{S}) contains an induced P4=a−b−c−dsubscript𝑃4𝑎𝑏𝑐𝑑P_{4}=a-b-c-d and,\ntherefore, a​c,a​d,b​d∉E​(G=)𝑎𝑐𝑎𝑑𝑏𝑑𝐸subscript𝐺ac,ad,bd\\notin E(G_{{}_{=}}). Since G=subscript𝐺G_{{}_{=}}, G<≔G<​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{<}}\\coloneqq G_{{}_{<}}(\\mathscr{S}) and G>≔G>​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{>}}\\coloneqq G_{{}_{>}}(\\mathscr{S}) are edge-disjoint, and G<subscript𝐺G_{{}_{<}}\nand G>subscript𝐺G_{{}_{>}} are cographs (cf. Lemmas 14\nand 15), the cases a​c,a​d,b​d∈E​(G<)𝑎𝑐𝑎𝑑𝑏𝑑𝐸subscript𝐺ac,ad,bd\\in E(G_{{}_{<}}) and a​c,a​d,b​d∈E​(G>)𝑎𝑐𝑎𝑑𝑏𝑑𝐸subscript𝐺ac,ad,bd\\in E(G_{{}_{>}}) are not possible because otherwise b−d−a−c𝑏𝑑𝑎𝑐b-d-a-c is an induced\nP4subscript𝑃4P_{4}. Moreover, ab|c,bc|a∈ℱT(𝒢(𝒮))ab|c,bc|a\\in\\mathscr{F}_{T}(\\mathscr{G}(\\mathscr{S})) as well\nas cd|b,bc|d∈ℱT(𝒢(𝒮))cd|b,bc|d\\in\\mathscr{F}_{T}(\\mathscr{G}(\\mathscr{S})) and thus T𝑇T displays\nneither of these two triples by Prop. 2. We consider\ntwo cases: If a​d∈E​(G<)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{<}}) then at most one of the edges a​c𝑎𝑐ac and b​d𝑏𝑑bd can be\ncontained in G<subscript𝐺G_{{}_{<}}. Suppose, for contradiction, that a​c∈E​(G>)𝑎𝑐𝐸subscript𝐺ac\\in E(G_{{}_{>}}) and\nb​d∈E​(G<)𝑏𝑑𝐸subscript𝐺bd\\in E(G_{{}_{<}}). Then a​d,b​d∈E​(G<)𝑎𝑑𝑏𝑑𝐸subscript𝐺ad,bd\\in E(G_{{}_{<}}) and a​c,b​c,c​d∉E​(G<)𝑎𝑐𝑏𝑐𝑐𝑑𝐸subscript𝐺ac,bc,cd\\notin E(G_{{}_{<}}).\nProp. 2 implies that T𝑇T displays the informative\ntriples a​d|cconditional𝑎𝑑𝑐ad|c and b​d|cconditional𝑏𝑑𝑐bd|c. Hence, T𝑇T also displays a​b|cconditional𝑎𝑏𝑐ab|c; a contradiction to a​b|c∈ℱT​(𝒢​(𝒮))conditional𝑎𝑏𝑐subscriptℱ𝑇𝒢𝒮ab|c\\in\\mathscr{F}_{T}(\\mathscr{G}(\\mathscr{S})). By similar\narguments, a​c∈E​(G<)𝑎𝑐𝐸subscript𝐺ac\\in E(G_{{}_{<}}) and b​d∈E​(G>)𝑏𝑑𝐸subscript𝐺bd\\in E(G_{{}_{>}}) implies that T𝑇T displays\nc​d|bconditional𝑐𝑑𝑏cd|b; a contradiction to c​d|b∈ℱT​(𝒢​(𝒮))conditional𝑐𝑑𝑏subscriptℱ𝑇𝒢𝒮cd|b\\in\\mathscr{F}_{T}(\\mathscr{G}(\\mathscr{S})).\nThis leaves a​c,b​d∈E​(G>)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{>}}) as the only possible case. If a​d∈E​(G>)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{>}}) then at most one of the edges a​c𝑎𝑐ac and b​d𝑏𝑑bd can be\ncontained in G>subscript𝐺G_{{}_{>}}. Suppose, for contradiction, that a​c∈E​(G>)𝑎𝑐𝐸subscript𝐺ac\\in E(G_{{}_{>}}) and\nb​d∈E​(G<)𝑏𝑑𝐸subscript𝐺bd\\in E(G_{{}_{<}}). Then b​d∈E​(G<)𝑏𝑑𝐸subscript𝐺bd\\in E(G_{{}_{<}}) and a​b,a​d∉E​(G<)𝑎𝑏𝑎𝑑𝐸subscript𝐺ab,ad\\notin E(G_{{}_{<}}).\nProp. 2 implies that T𝑇T displays b​d|aconditional𝑏𝑑𝑎bd|a. Moreover,\na​c,a​d∈E​(G>)𝑎𝑐𝑎𝑑𝐸subscript𝐺ac,ad\\in E(G_{{}_{>}}) and c​d∉E​(G>)𝑐𝑑𝐸subscript𝐺cd\\notin E(G_{{}_{>}}) imply that T𝑇T displays c​d|aconditional𝑐𝑑𝑎cd|a. Thus, T𝑇T displays b​c|aconditional𝑏𝑐𝑎bc|a; a contradiction. By similar\narguments, a​c∈E​(G<)𝑎𝑐𝐸subscript𝐺ac\\in E(G_{{}_{<}}) and b​d∈E​(G>)𝑏𝑑𝐸subscript𝐺bd\\in E(G_{{}_{>}}) implies that T𝑇T displays\nb​c|dconditional𝑏𝑐𝑑bc|d; a contradiction to b​c|d∈ℱT​(𝒢​(𝒮))conditional𝑏𝑐𝑑subscriptℱ𝑇𝒢𝒮bc|d\\in\\mathscr{F}_{T}(\\mathscr{G}(\\mathscr{S})).\nAgain, we are left with a​c,b​d∈E​(G<)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{<}}) as the only possibility. In summary, we have a​d∈E​(G<)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{<}}) and a​c,b​d∈E​(G>)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{>}}) or a​d∈E​(G>)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{>}}) and a​c,b​d∈E​(G<)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{<}}), and thus both {a,b,d}𝑎𝑏𝑑\\{a,b,d\\} and {a,c,d}𝑎𝑐𝑑\\{a,c,d\\}\nform a rainbow triangle in the edge coloring defined by 𝒢​(𝒮)𝒢𝒮\\mathscr{G}(\\mathscr{S}).\n∎ As an immediate consequence, we obtain If the edge-coloring defined by 𝒢​(𝒮)𝒢𝒮\\mathscr{G}(\\mathscr{S}) does not contain a\nrainbow triangle, then G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) is a cograph. The converse of Cor. 4, however, is not true in\ngeneral. A counterexample is given in Fig. 5. Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. Suppose that (G=​(𝒮),σ)subscript𝐺𝒮𝜎(G_{{}_{=}}(\\mathscr{S}),\\sigma)\ncontains an induced P4=a−b−c−dsubscript𝑃4𝑎𝑏𝑐𝑑P_{4}=a-b-c-d on four distinct colors\nσ​(a)=A𝜎𝑎𝐴\\sigma(a)=A, σ​(b)=B𝜎𝑏𝐵\\sigma(b)=B, σ​(c)=C𝜎𝑐𝐶\\sigma(c)=C, and σ​(d)=D𝜎𝑑𝐷\\sigma(d)=D. Then,\nexactly one of the following alternatives holds: a​d∈E​(G<​(𝒮))𝑎𝑑𝐸subscript𝐺𝒮ad\\in E(G_{{}_{<}}(\\mathscr{S})), a​c,b​d∈E​(G>​(𝒮))𝑎𝑐𝑏𝑑𝐸subscript𝐺𝒮ac,bd\\in E(G_{{}_{>}}(\\mathscr{S})),\nS|ABCD=((A,C),(B,D))S_{|ABCD}=((A,C),(B,D)) and T|abcd=((a,d),b,c)T_{|abcd}=((a,d),b,c) or a​d∈E​(G>​(𝒮))𝑎𝑑𝐸subscript𝐺𝒮ad\\in E(G_{{}_{>}}(\\mathscr{S})), a​c,b​d∈E​(G<​(𝒮))𝑎𝑐𝑏𝑑𝐸subscript𝐺𝒮ac,bd\\in E(G_{{}_{<}}(\\mathscr{S})), S|ABCD=((A,D),B,C)S_{|ABCD}=((A,D),B,C) and T|abcd=((a,c),(b,d))T_{|abcd}=((a,c),(b,d)). Set 𝒢≔𝒢​(𝒮)≔𝒢𝒢𝒮\\mathscr{G}\\coloneqq\\mathscr{G}(\\mathscr{S}), G<≔G<​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{<}}\\coloneqq G_{{}_{<}}(\\mathscr{S}),\nG=≔G=​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{=}}\\coloneqq G_{{}_{=}}(\\mathscr{S}), and G>≔G>​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{>}}\\coloneqq G_{{}_{>}}(\\mathscr{S}). By\nLemma 19, we have exactly one of the following\ntwo alternatives (i’) a​d∈E​(G<)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{<}}) and a​c,b​d∈E​(G>)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{>}}) or (ii’)\na​d∈E​(G>)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{>}}), a​c,b​d∈E​(G<)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{<}}). Case (i’): Since a​c,b​d∈E​(G>)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{>}}) and a​b,b​c,c​d∉E​(G>)𝑎𝑏𝑏𝑐𝑐𝑑𝐸subscript𝐺ab,bc,cd\\notin E(G_{{}_{>}}), S𝑆S displays the informative triples AC|B,BD|C∈ℛS(𝒢)AC|B,BD|C\\in\\mathscr{R}_{S}(\\mathscr{G}) by Prop 2. Hence, S|ABCD=((A,C),(B,D))S_{|ABCD}=((A,C),(B,D)). Furthermore, by\nProp. 2, T𝑇T displays ad|b,ad|c∈ℛT(𝒢)ad|b,ad|c\\in\\mathscr{R}_{T}(\\mathscr{G}) and\nnone of ab|c,bc|a,bc|d,cd|b∈ℱT(𝒢)ab|c,bc|a,bc|d,cd|b\\in\\mathscr{F}_{T}(\\mathscr{G}). If T𝑇T displays\na​c|bconditional𝑎𝑐𝑏ac|b, then this together with T𝑇T displaying a​d|bconditional𝑎𝑑𝑏ad|b\nimplies that T𝑇T also displays c​d|bconditional𝑐𝑑𝑏cd|b; a\ncontradiction. Thus, it holds T|abc=(a,b,c)T_{|abc}=(a,b,c). Together with the\nfact that T𝑇T displays a​d|bconditional𝑎𝑑𝑏ad|b, this implies T|abcd=((a,d),b,c)T_{|abcd}=((a,d),b,c).\nIn summary, Case (i) is satisfied. Case (ii’): Since a​c,b​d∈E​(G<)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{<}}) and a​b,b​c,c​d∉E​(G>)𝑎𝑏𝑏𝑐𝑐𝑑𝐸subscript𝐺ab,bc,cd\\notin E(G_{{}_{>}}), T𝑇T displays the informative triples ac|b,bd|c∈ℛT(𝒢)ac|b,bd|c\\in\\mathscr{R}_{T}(\\mathscr{G}) by Prop. 2. Hence, T|abcd=((a,c),(b,d))T_{|abcd}=((a,c),(b,d)). Furthermore, by\nProp 2, S𝑆S displays AD|B,AD|C∈ℛS(𝒢)AD|B,AD|C\\in\\mathscr{R}_{S}(\\mathscr{G}) and\nnone of AB|C,BC|A,BC|D,CD|B∈ℱS(𝒢)AB|C,BC|A,BC|D,CD|B\\in\\mathscr{F}_{S}(\\mathscr{G}). Re-using analogous\narguments as for T𝑇T in Case (i’), we conclude that S|ABCD=((A,D),B,C)S_{|ABCD}=((A,D),B,C). In summary, Case (ii) is satisfied.\n∎ Cor. 1 implies that two adjacent vertices in\nG=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) cannot have the same color. The 2−limit-from22-, 3−limit-from33- and 444-colored\nP4subscript𝑃4P_{4}s considered in Lemmas 16, 17,\n18, and 20 therefore cover all possible\ncolorings of an induced P4subscript𝑃4P_{4} in (G=​(𝒮),σ)subscript𝐺𝒮𝜎(G_{{}_{=}}(\\mathscr{S}),\\sigma). Moreover, in each\ncase, the existence of a P4subscript𝑃4P_{4} in (G=​(𝒮),σ)subscript𝐺𝒮𝜎(G_{{}_{=}}(\\mathscr{S}),\\sigma) implies that at\nleast one of S𝑆S and T𝑇T is non-binary. We summarize this discussion and\nLemmas 14 and 15 in the following Let 𝒮=(T,S,σ,μ,τT,τS)𝒮𝑇𝑆𝜎𝜇subscript𝜏𝑇subscript𝜏𝑆\\mathscr{S}=(T,S,\\sigma,\\mu,\\tau_{T},\\tau_{S}) be a relaxed scenario. Then\nG<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S}) and G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}) are cographs. If both S𝑆S and T𝑇T are\nbinary trees, then G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) is also a cograph. In the case of HGT-free scenarios, the condition that S𝑆S and T𝑇T are\nbinary is no longer necessary: Let 𝒮𝒮\\mathscr{S} be a relaxed scenario without HGT-edges. Then G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) is\na cograph. By Cor. 2, G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S}) is edge-less. Therefore,\nG=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) is the complement of the cograph G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S})\n(cf. Lemma 15) and thus, by Prop. 1,\nalso a cograph.\n∎ The similarities of 𝒢𝒢\\mathscr{G} and edge-colored permutations graphs noted\nabove naturally lead to the question whether G=subscript𝐺G_{{}_{=}} is a permutation\ngraph. The example in Figure 7 shows that this is not the\ncase, however: The cycle on six vertices, C6subscript𝐶6C_{6}, is not a permutation graph\n[ref]21. If 𝒮𝒮\\mathscr{S} is a relaxed scenario, then G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) does not contain an\ninduced P6subscript𝑃6P_{6}. Set G<≔G<​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{<}}\\coloneqq G_{{}_{<}}(\\mathscr{S}), G=≔G=​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{=}}\\coloneqq G_{{}_{=}}(\\mathscr{S}), and\nG>≔G>​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{>}}\\coloneqq G_{{}_{>}}(\\mathscr{S}). Suppose, for contradiction, that G=subscript𝐺G_{{}_{=}}\ncontains an induced P6=a−b−c−d−e−fsubscript𝑃6𝑎𝑏𝑐𝑑𝑒𝑓P_{6}=a-b-c-d-e-f (where the colors of these six\nvertices are not necessarily all distinct). Since a−b−c−d𝑎𝑏𝑐𝑑a-b-c-d is an\ninduced P4subscript𝑃4P_{4} in G=subscript𝐺G_{{}_{=}} in this case, Lemma 19\nimplies that either (i) a​d∈E​(G<)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{<}}) and a​c,b​d∈E​(G>)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{>}}) or (ii)\na​d∈E​(G>)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{>}}) and a​c,b​d∈E​(G<)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{<}}). Consider Case (i). Since b−c−d−e𝑏𝑐𝑑𝑒b-c-d-e\nis an induced P4subscript𝑃4P_{4} in G=subscript𝐺G_{{}_{=}} and b​d∈E​(G>)𝑏𝑑𝐸subscript𝐺bd\\in E(G_{{}_{>}}),\nLemma 19 implies b​e∈E​(G<)𝑏𝑒𝐸subscript𝐺be\\in E(G_{{}_{<}}) and c​e∈E​(G>)𝑐𝑒𝐸subscript𝐺ce\\in E(G_{{}_{>}}). Repeating this argument for the induced P4subscript𝑃4P_{4} c−d−e−f𝑐𝑑𝑒𝑓c-d-e-f in G=subscript𝐺G_{{}_{=}}\nnow yields c​f∈E​(G<)𝑐𝑓𝐸subscript𝐺cf\\in E(G_{{}_{<}}) and d​f∈E​(G>)𝑑𝑓𝐸subscript𝐺df\\in E(G_{{}_{>}}). Consider the pair a​f𝑎𝑓af. If\na​f∈E​(G<)𝑎𝑓𝐸subscript𝐺af\\in E(G_{{}_{<}}), then G<subscript𝐺G_{{}_{<}} contains the induced P4subscript𝑃4P_{4} d−a−f−c𝑑𝑎𝑓𝑐d-a-f-c, a\ncontradiction to Lemma 14. Similarly, if a​f∈E​(G>)𝑎𝑓𝐸subscript𝐺af\\in E(G_{{}_{>}}), then G<subscript𝐺G_{{}_{<}} contains the induced P4subscript𝑃4P_{4} d−f−a−c𝑑𝑓𝑎𝑐d-f-a-c, a\ncontradiction to Lemma 15. Thus, only a​f∈E​(G=)𝑎𝑓𝐸subscript𝐺af\\in E(G_{{}_{=}}) remains, which contradicts that a−b−c−d−e−f𝑎𝑏𝑐𝑑𝑒𝑓a-b-c-d-e-f is an induced P6subscript𝑃6P_{6}\nin G=subscript𝐺G_{{}_{=}}. Case (ii) is not possible for analogous reasons. Hence,\nG=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) cannot contain an induced P6subscript𝑃6P_{6}.\n∎ P6subscript𝑃6P_{6}-free graphs have been characterized in  .\nSince any induced Pksubscript𝑃𝑘P_{k} with k≥6𝑘6k\\geq 6 also contains an induced P6subscript𝑃6P_{6},\nLemma 22 implies that the longest possible induced path in an\nEDT graph has 555 vertices. Figure 7 shows that this\nsituation can indeed be realized. In particular, the P5subscript𝑃5P_{5}s in these\nexamples are part of induced cycles on six vertices. Using\nLemma 19 and the arguments in the proof of\nLemma 22, we can conclude that 𝒢​(𝒮1)𝒢subscript𝒮1\\mathscr{G}(\\mathscr{S}_{1}) and\n𝒢​(𝒮2)𝒢subscript𝒮2\\mathscr{G}(\\mathscr{S}_{2}), as shown in Fig. 7, are the only two\nconfigurations for an induced C6subscript𝐶6C_{6} that can appear in an EDT graph. A graph is odd-hole free it it does not contain an induced cycle of\nodd length greater than three . If 𝒮𝒮\\mathscr{S} is a relaxed scenario, then G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) does not contain an\ninduced C5subscript𝐶5C_{5} and induced cycles Cℓsubscript𝐶ℓC_{\\ell} on ℓ≥7ℓ7\\ell\\geq 7 vertices. In\nparticular, EDT graphs are odd-hole free. Set G<≔G<​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{<}}\\coloneqq G_{{}_{<}}(\\mathscr{S}), G=≔G=​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{=}}\\coloneqq G_{{}_{=}}(\\mathscr{S}), and\nG>≔G>​(𝒮)≔subscript𝐺subscript𝐺𝒮G_{{}_{>}}\\coloneqq G_{{}_{>}}(\\mathscr{S}). Suppose, for contradiction, that G=subscript𝐺G_{{}_{=}}\ncontains an induced C5subscript𝐶5C_{5} on vertices a,b,c,d,e𝑎𝑏𝑐𝑑𝑒a,b,c,d,e with a​b,b​c,c​d,d​e,e​a∈E​(G=)𝑎𝑏𝑏𝑐𝑐𝑑𝑑𝑒𝑒𝑎𝐸subscript𝐺ab,bc,cd,de,ea\\in E(G_{{}_{=}}). Thus, a−b−c−d𝑎𝑏𝑐𝑑a-b-c-d is an induced P4subscript𝑃4P_{4} in G=subscript𝐺G_{{}_{=}} and\nLemma 19 implies that either (i) a​d∈E​(G<)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{<}})\nand a​c,b​d∈E​(G>)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{>}}) or (ii) a​d∈E​(G>)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{>}}) and a​c,b​d∈E​(G<)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{<}}). In\nCase (i), we have a​d∈E​(G<)𝑎𝑑𝐸subscript𝐺ad\\in E(G_{{}_{<}}) and a​c,b​d∈E​(G>)𝑎𝑐𝑏𝑑𝐸subscript𝐺ac,bd\\in E(G_{{}_{>}}). Since b−c−d−e𝑏𝑐𝑑𝑒b-c-d-e\nis an induced P4subscript𝑃4P_{4} in G=subscript𝐺G_{{}_{=}} and b​d∈E​(G>)𝑏𝑑𝐸subscript𝐺bd\\in E(G_{{}_{>}}),\nLemma 19 implies b​e∈E​(G<)𝑏𝑒𝐸subscript𝐺be\\in E(G_{{}_{<}}) and c​e∈E​(G>)𝑐𝑒𝐸subscript𝐺ce\\in E(G_{{}_{>}}). Repeating this argument for the induced P4subscript𝑃4P_{4} c−d−e−a𝑐𝑑𝑒𝑎c-d-e-a in G=subscript𝐺G_{{}_{=}}\nnow yields a​c∈E​(G<)𝑎𝑐𝐸subscript𝐺ac\\in E(G_{{}_{<}}); a contradiction. Case (ii) is not possible\nfor analogous reasons. Hence, G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) cannot contain an induced\nC5subscript𝐶5C_{5}. Moreover, by Lemma 22, G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) does not contain\ninduced P6subscript𝑃6P_{6}s. Since every induced Cℓsubscript𝐶ℓC_{\\ell} with ℓ≥7ℓ7\\ell\\geq 7 contains\nan induced P6subscript𝑃6P_{6}, such induced cycles cannot be part of an EDT graph. In\nparticular, this implies that EDT graphs are odd-hole free.\n∎ Prop. 3 implies that not every P6subscript𝑃6P_{6}-free graph\n(G,σ)𝐺𝜎(G,\\sigma) is an EDT graph, even if we restrict ourselves to\nproperly-colored graphs. In particular, the cycle on 555 vertices with\npairwise distinct colors is a properly colored P6subscript𝑃6P_{6}-free graph that is not\nan EDT graph. Moreover, the example in Fig. 7 shows that an\nEDT graph may contain induced C6subscript𝐶6C_{6}s, i.e., they are in general not\neven-hole free. Moreover, EDT graphs may contain induced C4subscript𝐶4C_{4}s. To see\nthis, consider the trees T=((a1,a2),(b1.b2))T=((a_{1},a_{2}),(b_{1}.b_{2})), S=(A,B)𝑆𝐴𝐵S=(A,B) and assume\nthat σ​(ai)=A𝜎subscript𝑎𝑖𝐴\\sigma(a_{i})=A and σ​(bi)=B𝜎subscript𝑏𝑖𝐵\\sigma(b_{i})=B, 1≤i≤21𝑖21\\leq i\\leq 2. Now put\nμ​(ρT)=ρS𝜇subscript𝜌𝑇subscript𝜌𝑆\\mu(\\rho_{T})=\\rho_{S} and μ​(lcaT⁡(a1,a2))=ρS​A𝜇subscriptlca𝑇subscript𝑎1subscript𝑎2subscript𝜌𝑆𝐴\\mu(\\operatorname{lca}_{T}(a_{1},a_{2}))=\\rho_{S}A and\nμ​(lcaT⁡(b1,b2))=ρS​B𝜇subscriptlca𝑇subscript𝑏1subscript𝑏2subscript𝜌𝑆𝐵\\mu(\\operatorname{lca}_{T}(b_{1},b_{2}))=\\rho_{S}B. It is now an easy exercise to verify that\na1,b1,a2,b2subscript𝑎1subscript𝑏1subscript𝑎2subscript𝑏2a_{1},b_{1},a_{2},b_{2} form an induced C4subscript𝐶4C_{4} in G=subscript𝐺G_{{}_{=}}. A graph G𝐺G is perfect, if the chromatic number of every induced\nsubgraph equals the order of the largest clique of that subgraph\n. A Berge graph is a graph that contains no odd-hole\nand no odd-antihole (the complement of an odd-hole) .\nThe strong perfect graph theorem  asserts that a graph\nis perfect iff it is a Berge graph. If 𝒮𝒮\\mathscr{S} is a relaxed scenario, then G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) is a perfect graph. By Prop. 3, G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) is odd-hole free. By the\nstrong perfect graph theorem, it suffices, therefore, to show that\nG=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) does not contain an odd-antihole. Assume, for\ncontradiction, that G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) contains an odd-antihole K𝐾K. Its\ncomplement K¯¯𝐾\\overline{K} is, thus, an odd cycle that is entirely composed\nof edges of G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S}) and G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}). Since K¯¯𝐾\\overline{K} is a cycle\nof odd length ≥5absent5\\geq 5, the edges along this cycle cannot be alternatingly\ntaken from G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S}) and G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}). In other words, in K¯¯𝐾\\overline{K} there are at least two incident edges a​b,b​c𝑎𝑏𝑏𝑐ab,bc that are either both\ncontained in G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S}) or G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}). In addition, K¯¯𝐾\\overline{K}\nmust contain an edge c​d𝑐𝑑cd and thus, c​d∉E​(G=​(𝒮))𝑐𝑑𝐸subscript𝐺𝒮cd\\notin E(G_{{}_{=}}(\\mathscr{S})). This,\nhowever, implies that G=​(𝒮)subscript𝐺𝒮G_{{}_{=}}(\\mathscr{S}) contains an induced P4subscript𝑃4P_{4}\nc−a−d−b𝑐𝑎𝑑𝑏c-a-d-b. By Lemma 19, {c,a,b}𝑐𝑎𝑏\\{c,a,b\\}\nshould induce a rainbow triangle, which is a contradiction since a​b𝑎𝑏ab\nand b​c𝑏𝑐bc are both either in the graph G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S}) or G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}).\n∎ Since perfect graphs are closed under complementation we obtain If 𝒮𝒮\\mathscr{S} is a relaxed scenario, then G<​(𝒮)∪G>​(𝒮)subscript𝐺𝒮subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S})\\cup G_{{}_{>}}(\\mathscr{S}) is a\nperfect graph. The converse of Prop. 4 does not hold as shown\nby the examples in Fig. 8, even under the restriction to\nproperly-colored graphs. Suppose the graph (G,σ)𝐺𝜎(G,\\sigma) in\nFig. 8(A) is explained by a relaxed scenario 𝒮𝒮\\mathscr{S}. Put\nA≔σ​(a)=σ​(a′)≔𝐴𝜎𝑎𝜎superscript𝑎′A\\coloneqq\\sigma(a)=\\sigma(a^{\\prime}), B≔σ​(b)=σ​(b′)≔𝐵𝜎𝑏𝜎superscript𝑏′B\\coloneqq\\sigma(b)=\\sigma(b^{\\prime}),\nC≔σ​(c)=σ​(c′)≔𝐶𝜎𝑐𝜎superscript𝑐′C\\coloneqq\\sigma(c)=\\sigma(c^{\\prime}), and D≔σ​(d)=σ​(d′)≔𝐷𝜎𝑑𝜎superscript𝑑′D\\coloneqq\\sigma(d)=\\sigma(d^{\\prime}).\nBy Lemma 20, the induced P4=a−b−c−dsubscript𝑃4𝑎𝑏𝑐𝑑P_{4}=a-b-c-d implies that\nS|ABCD=((A,C),(B,D))S_{|ABCD}=((A,C),(B,D)) or S|ABCD=((A,D),B,C)S_{|ABCD}=((A,D),B,C), and the induced\nP4=c′−a′−d′−b′subscript𝑃4superscript𝑐′superscript𝑎′superscript𝑑′superscript𝑏′P_{4}=c^{\\prime}-a^{\\prime}-d^{\\prime}-b^{\\prime} implies that S|ABCD=((A,B),(C,D))S_{|ABCD}=((A,B),(C,D)) or S|ABCD=((B,C),A,D)S_{|ABCD}=((B,C),A,D); a contradiction. Clearly, G𝐺G contains no odd hole and no odd\nantihole and, thus, it is a perfect graph. Moreover, it is not\nsufficient to require that (G′,σ)superscript𝐺′𝜎(G^{\\prime},\\sigma) is a properly colored cograph.\nTo see this, suppose that the cograph (G′,σ′)superscript𝐺′superscript𝜎′(G^{\\prime},\\sigma^{\\prime}) in\nFig. 8(B) is explained by a relaxed scenario 𝒮𝒮\\mathscr{S}. All\npossible assignments for the edges a​c𝑎𝑐ac and a​d𝑎𝑑ad are shown on the\nright-hand side, i.e., we have a​c∈E​(G>​(𝒮))𝑎𝑐𝐸subscript𝐺𝒮ac\\in E(G_{{}_{>}}(\\mathscr{S})), a​d∈E​(G>​(𝒮))𝑎𝑑𝐸subscript𝐺𝒮ad\\in E(G_{{}_{>}}(\\mathscr{S})), or a​c,a​d∈E​(G<​(𝒮))𝑎𝑐𝑎𝑑𝐸subscript𝐺𝒮ac,ad\\in E(G_{{}_{<}}(\\mathscr{S})) yielding the informative\ntriples (for the species tree S𝑆S) A​C|Bconditional𝐴𝐶𝐵AC|B, A​D|Bconditional𝐴𝐷𝐵AD|B, and C​D|Aconditional𝐶𝐷𝐴CD|A,\nrespectively. However, all of these three triples are forbidden triples for\nS𝑆S as a consequence of the three smaller connected components of\n(G′,σ′)superscript𝐺′superscript𝜎′(G^{\\prime},\\sigma^{\\prime}); a contradiction.\n\nReference markers found: [35]\n\nContext windows for each [ref]:\n[ref]35: generally in the context of binary relations\nassociated with reconciliations of gene trees and species trees. For\nexample, orthology graphs in scenarios without horizontal gene transfer are\ncographs [ref]35. As we shall see below, both G<​(𝒮)subscript𝐺𝒮G_{{}_{<}}(\\mathscr{S})\nand G>​(𝒮)subscript𝐺𝒮G_{{}_{>}}(\\mathscr{S}) are cographs for all relaxed scenarios 𝒮𝒮\\mathscr{S}. In\ncontrast,\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 35,\n            \"titles\": [\n                \"A Short Note on Undirected Fitch Graphs\",\n                \"Inferring a tree from lowest common ancestors with an application to the optimization of relational expressions\",\n                \"Efficient algorithms for the reconciliation problem with gene duplication, horizontal transfer and loss\",\n                \"The level ancestor problem simplified\",\n                \"Lowest common ancestors in trees and directed acyclic graphs\",\n                \"Färbung von Graphen, deren sämtliche bzw. deren ungerade Kreise starr sind (Zusammenfassung)\",\n                \"Finding level-ancestors in trees\",\n                \"The ancestor of modern Holozoa acquired the CCA-adding enzyme from Alphaproteobacteria by horizontal gene transfer\",\n                \"Pattern matching for permutations\",\n                \"Extension operations on sets of leaf-labelled trees\",\n                \"Recognizing Berge graphs\",\n                \"The strong perfect graph theorem\",\n                \"Decomposition of odd-hole-free graphs by double star cutsets and 2-joins\",\n                \"Complement reducible graphs\",\n                \"A linear recognition algorithm for cographs\",\n                \"Xenolog classification\",\n                \"PhyloSift: phylogenetic analysis of genomes and metagenomes\",\n                \"Reconstruction methods for derivation trees\",\n                \"Distinguishing homologous from analogous proteins\",\n                \"Homology: a personal view on some of the problems\",\n                \"A method for investigating relative timing information on phylogenetic trees\",\n                \"Transitiv orientierbare graphen\",\n                \"Reconstructing Gene Trees From Fitch’s Xenology Relation\",\n                \"Best Match Graphs and Reconciliation of Gene Trees with Species Trees\",\n                \"Reciprocal best match graphs\",\n                \"H-trees: a model of evolutionary scenarios with horizontal gene transfer\",\n                \"Evolution of antibiotic resistance genes: The DNA sequence of a kanamycin resistance gene from Staphylococcus aureus\",\n                \"Reconstruction of ancient molecular phylogeny\",\n                \"Complete Edge-Colored Permutation Graphs\",\n                \"Inferring phylogenetic relationships avoiding forbidden rooted triplets\",\n                \"Biologically Feasible Gene Trees, Reconciliation Maps and Informative Triples\",\n                \"Alternative characterizations of Fitch’s xenology relation\",\n                \"On Symbolic Ultrametrics, Cotree Representations, and Cograph Edge Decompositions and Partitions\",\n                \"From sequence data incl. orthologs, paralogs, and xenologs to gene and species trees\",\n                \"On tree representations of relations and graphs: Symbolic ultrametrics and cograph edge decompositions\",\n                \"Orthology relations, symbolic ultrametrics, and cographs\",\n                \"From event-labeled gene trees to species trees\",\n                \"A new characterization of P6subscript𝑃6P_{6}-free graphs\",\n                \"Determining the consistency of resolved triplets and fan triplets\",\n                \"Orthology and paralogy constraints: satisfiability and consistency\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]35 based on the context and research area of Relative Timing Information and Orthology in Evolutionary Scenarios. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}