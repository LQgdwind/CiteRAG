{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: The complexity of computing in continuous time: space complexity is precision\n\nPaper Abstract: \n\nPaper Section Text:\nDynamical Systems are often used to model natural phenomena and in many applied fields. The last decades have seen an impressive use of computers in studying and analysing dynamical systems, with several visible theoretical breakthroughs. A famous, notable example is the discovery of strange attractors in models such as Lorenz attractors through numerical simulations , with only 40 years later the mathematical proof of their existence . The mathematical proof was obtained by checking some quantitative invariant holds through computer-certified computations. From a mathematical point of view, a discrete-time dynamical system is given by a set D𝐷D, called domain and some (possibly partial) function 𝐮𝐮\\mathbf{u} from D𝐷D to D𝐷D. A trajectory the system\nis a sequence 𝐟​(t)𝐟𝑡\\mathbf{f}(t) evolving according to 𝐮𝐮\\mathbf{u}: that is 𝐟​(t+1)=𝐮​(𝐟​(t))𝐟𝑡1𝐮𝐟𝑡\\mathbf{f}(t+1)=\\mathbf{u}\\left(\\mathbf{f}(t)\\right) for all t𝑡t.\nA dynamical system can equivalently be described by its flow ΦΦ\\Phi: by definition, Φ​(𝐟0,t)Φsubscript𝐟0𝑡\\Phi(\\mathbf{f}_{0},t) gives the position of the dynamics at time t𝑡t, for an initial position 𝐟​(0)=𝐟0𝐟0subscript𝐟0\\mathbf{f}(0)=\\mathbf{f}_{0}. It satisfies the flow property for all t,t′𝑡superscript𝑡′t,t^{\\prime}. The transition dynamic 𝐮𝐮\\mathbf{u} can be recovered from the flow function since 𝐮(.)=Φ(.,1)\\mathbf{u}(.)=\\Phi(.,1). Hence, describing a dynamical system by its dynamic 𝐮𝐮\\mathbf{u} or by a flow function is equivalent.\nAll of this can be parametrised by some parameter 𝐱𝐱\\mathbf{x}: 𝐮𝐮\\mathbf{u} is also some function of 𝐱𝐱\\mathbf{x}, and 𝐟​(t+1)=𝐮​(𝐟​(t),𝐱)𝐟𝑡1𝐮𝐟𝑡𝐱\\mathbf{f}(t+1)=\\mathbf{u}\\left(\\mathbf{f}(t),\\mathbf{x}\\right) for all t𝑡t, and the flow function is Φ𝐱​(𝐟0,t)subscriptΦ𝐱subscript𝐟0𝑡\\Phi_{\\mathbf{x}}(\\mathbf{f}_{0},t). Up to that point, we were considering discrete-time systems, but we can also consider continuous-time dynamical systems: a continuous-time dynamical system is given by a\nset D⊆ℝd𝐷superscriptℝ𝑑D\\subseteq\\mathbb{R}^{d} and some ODE of the form (𝐟′superscript𝐟′\\mathbf{f}^{\\prime} denotes the derivative with respect to time variable t𝑡t) on D𝐷D. A trajectory starting from 𝐟0subscript𝐟0\\mathbf{f}_{0} is a solution of the associated Initial Value Problem (IVP), with 𝐟​(0)=𝐟0𝐟0subscript𝐟0\\mathbf{f}(0)=\\mathbf{f}_{0}. If we consider Φ​(𝐟0,t)Φsubscript𝐟0𝑡\\Phi(\\mathbf{f}_{0},t) as giving the value of the solution at time t𝑡t, starting from 𝐟0subscript𝐟0\\mathbf{f}_{0}, it still satisfies the flow property (1). Assuming sufficient regularity on ΦΦ\\Phi (namely that it is differentiable), ΦΦ\\Phi satisfies some ODE, and hence giving a dynamical system is equivalent to giving its flow: 𝐮(.)\\mathbf{u}(.) can be recovered by 𝐮′=Φ′(.,0)\\mathbf{u}^{\\prime}=\\Phi^{\\prime}(.,0). Here, we can still consider that all of this is parameterised by some 𝐱𝐱\\mathbf{x}. Hence, in a very general view, a dynamical system is given by some function ΦΦ\\Phi satisfying the flow property. The fact that it is continuous time or discrete time, is related to the nature of its time (i.e. second) variable, that belongs to ℕℕ\\mathbb{N} or ℤℤ\\mathbb{Z} in the latter case, and to ℝℝ\\mathbb{R} in the former. See  for a monography on the theory of dynamical systems from a mathematical point of view. In all previous discussions, we considered homogeneous dynamics in the sense that 𝐮𝐮\\mathbf{u} was only a function of 𝐟​(t)𝐟𝑡\\mathbf{f}(t) and not also of t𝑡t: but, for example, for discrete-time, to cover the case 𝐟​(t+1)=𝐮​(t,f​(t))𝐟𝑡1𝐮𝑡𝑓𝑡\\mathbf{f}(t+1)=\\mathbf{u}\\left(t,f(t)\\right) for all t𝑡t, it is sufficient to consider 𝐟¯​(t)=(𝐟​(t),t)¯𝐟𝑡𝐟𝑡𝑡\\overline{\\mathbf{f}}(t)=(\\mathbf{f}(t),t), and we come back to the previous settings, as we can write 𝐟¯​(t+1)=𝐮¯​(𝐟¯​(t))¯𝐟𝑡1¯𝐮¯𝐟𝑡\\overline{\\mathbf{f}}(t+1)=\\overline{\\mathbf{u}}(\\overline{\\mathbf{f}}(t)), with 𝐮¯​(𝐟,t)=(𝐮​(𝐟,t),t+1)¯𝐮𝐟𝑡𝐮𝐟𝑡𝑡1\\overline{\\mathbf{u}}(\\mathbf{f},t)=(\\mathbf{u}(\\mathbf{f},t),t+1), that is a homogeneous dynamic. As this is well-known, dynamical systems exhibit a very rich class of possible behaviours. In particular, many dynamical systems are chaotic. We do not intend here to recall how chaoticity can be defined in mathematical terms (see  ), but this includes at least high sensitivity to initial conditions. From our point of view, we just need to say this leads, in practice, to high unpredictability in the long run. As observed in , while countless papers exist in the literature about computations in dynamical systems, only a small fraction of them address the problem rigorously; i.e., how far is the sought actual quantity from the computed one? And can a computer perform such computation up to a very small pre-specified error?\nAn important example where these questions are of interest is given by the reachability problem: given a (finite) description of a dynamical system, a description of its initial state, and the description of some “unsafe” states, the question is to tell whether a trajectory can reach an unsafe state. In the long run, dynamical systems may exhibit attractors. Although there is a clear agreement about this intuitive concept, corresponding to the set of points to which most points evolve, it is a hard task to provide a mathematical definition covering all cases, and we refer to [ref]49 for discussions of many possible ways of defining this concept, and their relations. In the general case, the attractors of dynamical systems, even if the system is very simple, can be very rich. We refer to  for a characterisation of the hardness of computing attractors from a computable analysis point of view. We will somehow restrict to a very robust one (numerically stable ones) for which the problem is tractable. Somehow, our results state that the uncomputability discussed in  is intrinsically due to the non-numerical stability of the considered dynamical systems there. The van der Pol equation gives a very famous example of a dynamical system admitting an attractor\ny′′−μ​(1−y2)​x′+y=0superscript𝑦′′𝜇1superscript𝑦2superscript𝑥′𝑦0y^{\\prime\\prime}-\\mu\\left(1-y^{2}\\right)x^{\\prime}+y=0\nwhere μ𝜇\\mu is a parameter.\nIntroducing z=y−y3/3−y˙/μ𝑧𝑦superscript𝑦33˙𝑦𝜇z=y-y^{3}/3-\\dot{y}/\\mu, it can be also described by y′=μ​(y−13​y3−z)superscript𝑦′𝜇𝑦13superscript𝑦3𝑧y^{\\prime}=\\mu\\left(y-\\frac{1}{3}y^{3}-z\\right), z′=1μ​ysuperscript𝑧′1𝜇𝑦z^{\\prime}=\\frac{1}{\\mu}y.\nIt is a classical mathematical exercise to prove that the system has a limit cycle: this is usually done as an application of Liénard’s theorem, which is established by studying the flow of the dynamics, using qualitative arguments based on some formal mathematical statements: see, e.g. . Formally, a discrete-time dynamical system is given by a set D𝐷D, called domain and some (possibly partial) function 𝐮𝐮\\mathbf{u} from D𝐷D to D𝐷D. A trajectory the system\nis a sequence 𝐟​(t)𝐟𝑡\\mathbf{f}(t) evolving according to 𝐮𝐮\\mathbf{u}: that is 𝐟​(t+1)=𝐮​(𝐟​(t))𝐟𝑡1𝐮𝐟𝑡\\mathbf{f}(t+1)=\\mathbf{u}\\left(\\mathbf{f}(t)\\right) for all t𝑡t.\nA continuous-time dynamical system is given by a\nset D⊆ℝd𝐷superscriptℝ𝑑D\\subseteq\\mathbb{R}^{d} and some ODE of the form on D𝐷D. A trajectory starting from 𝐟0subscript𝐟0\\mathbf{f}_{0} is a solution of the associated Initial Value Problem (IVP), with 𝐟​(0)=𝐟0𝐟0subscript𝐟0\\mathbf{f}(0)=\\mathbf{f}_{0}.\nA dynamical system can equivalently be described by its flow: Φ​(𝐟0,t)Φsubscript𝐟0𝑡\\Phi(\\mathbf{f}_{0},t) gives the position of the dynamics at time t𝑡t, for an initial position 𝐟​(0)=𝐟0𝐟0subscript𝐟0\\mathbf{f}(0)=\\mathbf{f}_{0}. It satisfies the flow property The dynamics or the flow can be parametrised by some parameter 𝐱𝐱\\mathbf{x}: 𝐮𝐮\\mathbf{u} is also some function of 𝐱𝐱\\mathbf{x} and the flow function is Φ𝐱​(𝐟0,t)subscriptΦ𝐱subscript𝐟0𝑡\\Phi_{\\mathbf{x}}(\\mathbf{f}_{0},t). In the long run, dynamical systems may exhibit attractors. We refer to [ref]49 for discussions of many possible ways of defining this concept, and to  for a characterisation of the hardness of computing attractors from a computable analysis point of view. Somehow, our coming results state that the uncomputability discussed in  is intrinsically due to the non-numerical stability of the considered dynamical systems there.\n\nReference markers found: [49]\n\nContext windows for each [ref]:\n[ref]49: agreement about this intuitive concept, corresponding to the set of points to which most points evolve, it is a hard task to provide a mathematical definition covering all cases, and we refer to [ref]49 for discussions of many possible ways of defining this concept, and their relations. In the general case, the attractors of dynamical systems, even if the system is very simple, can be very\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 49,\n            \"titles\": [\n                \"Computational complexity of solving polynomial differential equations over unbounded domains\",\n                \"The failure in computable analysis of a classical existence theorem for differential equations\",\n                \"Training Fully Connected Neural Networks is ∃ℝℝ\\\\exists\\\\mathbb{R}-Complete\",\n                \"A characterization of polynomial time computable functions from the integers to the reals using discrete ordinary differential equations\",\n                \"A characterisation of functions computable in polynomial time and space over the reals with discrete ordinary differential equations: Simulation of turing machines with analytic discrete odes (MFCS’2023 best paper award)\",\n                \"Simulation of turing machines with analytic discrete ODEs: FPTIME and FPSPACE over the reals characterised with discrete ordinary differential equations\",\n                \"Quantifiying the robustness of dynamical systems. relating time and space to length and precision\",\n                \"Complexity and Real Computation\",\n                \"On a theory of computation and complexity over the real numbers; NP completeness, recursive functions and universal machines\",\n                \"Recursion schemes, discrete differential equations and characterization of polynomial time computation\",\n                \"A characterization of functions over the integers computable in polynomial time using discrete ordinary differential equations\",\n                \"A continuous characterization of PSPACE using polynomial ordinary differential equations\",\n                \"On the Functions Generated by the General Purpose Analog Computer\",\n                \"Computing with polynomial ordinary differential equations\",\n                \"On the complexity of solving initial value problems\",\n                \"Polynomial Time corresponds to Solutions of Polynomial Ordinary Differential Equations of Polynomial Length. The General Purpose Analog Computer and Computable Analysis are two efficiently equivalent models of computations (ICALP’2017 Track B best paper award)\",\n                \"Polynomial Time corresponds to Solutions of Polynomial Ordinary Differential Equations of Polynomial Length\",\n                \"A Universal Ordinary Differential Equation\",\n                \"A Survey on Analog Models of Computation\",\n                \"Universal computation and other capabilities of hybrid and continuous dynamical systems\",\n                \"A tutorial on computable analysis\",\n                \"Hyperbolic Julia sets are poly-time computable\",\n                \"Iteration, inequalities, and differentiability in analog computers\",\n                \"Neural Ordinary Differential Equations\",\n                \"Computational models and function algebras\",\n                \"Boolean functions and computation models\",\n                \"The intrinsic computational difficulty of functions\",\n                \"Effective computability of solutions of ordinary differential equations the thousand monkeys approach\",\n                \"Effective Computability of Solutions of Differential Inclusions The Ten Thousand Monkeys Approach\",\n                \"Analyse Numérique et Équations Différentielles\",\n                \"An Introduction to Chaotic Dynamical Systems\",\n                \"On the complexity of Nash equilibria and other fixed points\",\n                \"Strong turing completeness of continuous chemical reaction networks and compilation of mixed analog-digital programs\",\n                \"Analog Characterization of Complexity Classes\",\n                \"Computability with Polynomial Differential Equations\",\n                \"Robust simulations of Turing machines with analytic maps and flows\",\n                \"Analog computers and recursive functions over the reals\",\n                \"Computability, noncomputability and undecidability of maximal intervals of IVPs\",\n                \"Handbook of Computability and Complexity in Analysis, chapter Computability of Differential Equations\",\n                \"Robust non-computability and stability of dynamical systems\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]49 based on the context and research area of The complexity of computing in continuous time: space complexity is precision. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}