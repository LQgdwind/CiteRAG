{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Geometrical discretisations for unfitted finite elements on explicit boundary representations\n\nPaper Abstract: \n\nPaper Section Text:\nLet us consider an open Lipschitz domain Ω⊂ℝ3Ωsuperscriptℝ3\\Omega\\subset\\mathbb{R}^{3} (the 2D case is an obvious restriction) in which we want to approximate a system of PDEs. In this work, we are interested in domains that are described as the interior of an oriented surface polygonal mesh ℬℬ\\mathcal{B} of ∂ΩΩ\\partial\\Omega. PDEs usually involve Dirichlet boundary conditions on ΓDsubscriptΓ𝐷\\Gamma_{D} and Neumann boundary conditions on ΓNsubscriptΓ𝑁\\Gamma_{N}, where ΓDsubscriptΓ𝐷\\Gamma_{D} and ΓNsubscriptΓ𝑁\\Gamma_{N} are a partition of ∂ΩΩ\\partial\\Omega. Such partition must be respected by the geometrical representation, e.g., the STL model. Thus, we consider that ℬDsubscriptℬ𝐷\\mathcal{B}_{D} and ℬNsubscriptℬ𝑁\\mathcal{B}_{N} are geometrical discretisations of ΓDsubscriptΓ𝐷\\Gamma_{D} and ΓNsubscriptΓ𝑁\\Gamma_{N}, resp., and ℬ≐ℬD∪ℬNapproaches-limitℬsubscriptℬ𝐷subscriptℬ𝑁\\mathcal{B}\\doteq\\mathcal{B}_{D}\\cup\\mathcal{B}_{N}. Our motivation in this work is to enable the use of grid-based unfitted numerical schemes that are automatically generated from ℬℬ\\mathcal{B}, due to its industrial and scientific relevance. Embedded discretisation techniques alleviate geometrical constraints, because they do not rely on body-fitted meshes. Instead, these techniques make use of a background partition 𝒯bgsuperscript𝒯bg\\mathcal{T}^{\\mathrm{bg}} of an arbitrary artificial domain ΩartsuperscriptΩart\\Omega^{\\mathrm{art}} such that Ω⊂ΩartΩsuperscriptΩart\\Omega\\subset\\Omega^{\\mathrm{art}}. The artificial domain can be trivial, e.g., it can be a bounding box of ΩΩ\\Omega. Thus, the computation of 𝒯bgsuperscript𝒯bg\\mathcal{T}^{\\mathrm{bg}} is much simpler (and cheaper) than a body-fitted partition of ΩΩ\\Omega. In this work, we consider a Cartesian mesh 𝒯bgsuperscript𝒯bg\\mathcal{T}^{\\mathrm{bg}} for simplicity in the exposition, even though the proposed approach could readily be extended, e.g., to a tetrahedral structured background mesh obtained after simplex decomposition. The abstract exposition of unfitted formulations considered in this work is general and accommodates different unfitted FE techniques that have been proposed in the literature, e.g. the  extended finite element method (XFEM)  (for unfitted interface problems), the cutFEM method  based on ghost penalty stabilisation, the AgFEM , the finite cell method  and DG methods with cell aggregation [ref]13, to mention a few. In order to define a FE space on unfitted meshes, we do the following cell classification. The cells in the background partition with null intersection with ΩΩ\\Omega are exterior cells. The set of exterior cells in 𝒯bgsuperscript𝒯bg\\mathcal{T}^{\\mathrm{bg}} is denoted by 𝒯outsuperscript𝒯out\\mathcal{T}^{\\mathrm{out}} is not considered in the functional discretisation and can be discarded. 𝒯≐𝒯bg∖𝒯outapproaches-limit𝒯superscript𝒯bgsuperscript𝒯out\\mathcal{T}\\doteq\\mathcal{T}^{\\mathrm{bg}}\\setminus\\mathcal{T}^{\\mathrm{out}} is the active mesh (see Figure 1(a)). The above mentioned techniques make use of standard FE spaces on 𝒯𝒯\\mathcal{T} to define the finite-dimensional space V𝑉V in which to seek the solution and also test the weak form of the PDE. The unfitted problem reads as follows: find u∈V𝑢𝑉u\\in V such that where and The bulk terms LΩsubscript𝐿ΩL_{\\Omega} and FΩsubscript𝐹ΩF_{\\Omega} include the differential operator (in weak sense), the source term and possibly some other numerical stabilisation terms. The operators LDsubscript𝐿𝐷L_{D} and FDsubscript𝐹𝐷F_{D} integrated on ΓDsubscriptΓ𝐷\\Gamma_{D} represent the terms related to the weak imposition of Dirichlet boundary conditions, e.g., the so-called Nitsche’s method, which is commonly used in unfitted formulations. The term FNsubscript𝐹𝑁F_{N} on ΓNsubscriptΓ𝑁\\Gamma_{N} represents the Neumann boundary conditions of the problem at hand. We denote with ℱℱ\\mathcal{F} the skeleton of the active mesh, i.e., the set of interior faces of 𝒯𝒯\\mathcal{T}. The term Lsksubscript𝐿skL_{\\mathrm{sk}} collects additional penalty terms that include weak imposition of continuity in DG methods or ghost penalty stabilisation techniques. ∈𝒯absent𝒯\\in\\mathcal{T}    ∈ℬabsentℬ\\in\\mathcal{B}\n\n\n ∈𝒯cutabsentsuperscript𝒯cut\\in\\mathcal{T}^{\\mathrm{cut}}    ∈ℬcutabsentsuperscriptℬcut\\in\\mathcal{B}^{\\mathrm{cut}}\n\n\n Since FE methods are piecewise polynomials, the integration of all this terms rely on a cell-wise decomposition (of bulk and surface terms). However, in order to respect the geometry and solve the PDE on the right domain, one must perform these integrals on domain interiors. In particular, we have As commented above, the surface mesh ℬℬ\\mathcal{B} in which we aim to integrate the boundary terms and the background mesh that defines the cell-wise polynomial FE functions are not connected, i.e., one is not the boundary restriction of the other. Thus, the integration of boundary terms must be computed cell-wise as follows: We note that, even though it does not represent any problem for the machinery we want to propose here, skeleton terms (common in ghost penalty and DG methods) can still be integrated on the whole skeleton faces, and there is no need in general to reduce these integrals to the domain interior. As a result, the only geometrical complication of unfitted finite element schemes is the integral over K∩Ω𝐾ΩK\\cap\\Omega and K∩ℬ𝐾ℬK\\cap\\mathcal{B} (or more specifically, ℬNsubscriptℬ𝑁\\mathcal{B}_{N} and ℬDsubscriptℬ𝐷\\mathcal{B}_{D}). Such operations (and specially the first one) are hard for ∂ΩΩ\\partial\\Omega representing a complex shape explicitly determined by an STL model and will be the target of the next section.\nLet us stress the fact that the tools described below are only used for integration purposes. The functional spaces are defined in the background mesh, which provides lots of flexibility (no inter-cell consistency or shape regularity requirements) compared to unstructured mesh generation. In particular, the geometrical queries that are required by unfitted formulations can be solved as follows. First, the intersection of the surface cells in ℬℬ\\mathcal{B} against all background cells in 𝒯𝒯\\mathcal{T} produces a new surface mesh ℬcutsuperscriptℬcut\\mathcal{B}^{\\mathrm{cut}} that is a refinement of ℬℬ\\mathcal{B} that describes the same geometry (up to machine precision). It can be indexed as a two-level mesh, in which first one computes its portion for a cell K∈𝒯𝐾𝒯K\\in\\mathcal{T}, ℬKcut≐{S∩K:S∈ℬ}approaches-limitsubscriptsuperscriptℬcut𝐾conditional-set𝑆𝐾𝑆ℬ\\mathcal{B}^{\\mathrm{cut}}_{K}\\doteq\\{S\\cap K:S\\in\\mathcal{B}\\}\nand ℬcut≐⋃K∈𝒯ℬKcutapproaches-limitsuperscriptℬcutsubscript𝐾𝒯subscriptsuperscriptℬcut𝐾\\mathcal{B}^{\\mathrm{cut}}\\doteq\\bigcup_{K\\in\\mathcal{T}}\\mathcal{B}^{\\mathrm{cut}}_{K}. Thus, ℬcutsuperscriptℬcut\\mathcal{B}^{\\mathrm{cut}} can readily be used for the integration of the boundary terms in (5); we can analogously use ℬDsubscriptℬ𝐷\\mathcal{B}_{D} (resp., ℬNsubscriptℬ𝑁\\mathcal{B}_{N}) to produce ℬDcutsubscriptsuperscriptℬcut𝐷\\mathcal{B}^{\\mathrm{cut}}_{D} (resp., ℬNcutsubscriptsuperscriptℬcut𝑁\\mathcal{B}^{\\mathrm{cut}}_{N}). In any case, ℬcutsuperscriptℬcut\\mathcal{B}^{\\mathrm{cut}} preserves global conformity in 3D and can also be understood as a standard one-level polytopal mesh. Second, for each cell K∈𝒯𝐾𝒯K\\in\\mathcal{T}, we want to compute a sub-mesh 𝒯Ksubscript𝒯𝐾\\mathcal{T}_{K} (composed of convex polyhedra) of the interior of the cell, i.e., K∩Ω𝐾ΩK\\cap\\Omega. We represent with 𝒯cut≐{𝒯K:K∈𝒯}approaches-limitsuperscript𝒯cutconditional-setsubscript𝒯𝐾𝐾𝒯\\mathcal{T}^{\\mathrm{cut}}\\doteq\\{\\mathcal{T}_{K}:K\\in\\mathcal{T}\\} the resulting two-level mesh such that ⋃K∈𝒯⋃L∈𝒯KL=Ωsubscript𝐾𝒯subscript𝐿subscript𝒯𝐾𝐿Ω\\bigcup_{K\\in\\mathcal{T}}\\bigcup_{L\\in\\mathcal{T}_{K}}L=\\Omega (up to machine precision). This two-level integration mesh can readily be used to compute the integrals in (4). 𝒯cutsuperscript𝒯cut\\mathcal{T}^{\\mathrm{cut}} is not conforming across background cells, since this mesh is is only needed for the numerical integration. Since the result of this algorithm is a set of meshes 𝒯Ksubscript𝒯𝐾\\mathcal{T}_{K} composed of general convex polytopes, we can now use numerical quadratures for the integration on these polytopes. For these purposes, one can use quadrature rules on general polytopes (see, e.g., ) or a straightforward simplex decomposition and standard quadrature rules on triangles/tetrahedra. Figure 1 illustrates the construction of ℬcutsuperscriptℬcut\\mathcal{B}^{\\mathrm{cut}} and 𝒯cutsuperscript𝒯cut\\mathcal{T}^{\\mathrm{cut}}.\n\nReference markers found: [13]\n\nContext windows for each [ref]:\n[ref]13: finite element method (XFEM)  (for unfitted interface problems), the cutFEM method  based on ghost penalty stabilisation, the AgFEM , the finite cell method  and DG methods with cell aggregation [ref]13, to mention a few. In order to define a FE space on unfitted meshes, we do the following cell classification. The cells in the background partition with null intersection with ΩΩ\\Omega are\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 13,\n            \"titles\": [\n                \"The aggregated unfitted finite element method for elliptic problems\",\n                \"TetGen, a delaunay-based quality tetrahedral mesh generator\",\n                \"Tetrahedral meshing in the wild\",\n                \"Isogeometric analysis: CAD, finite elements, NURBS, exact geometry and mesh refinement\",\n                \"A software package for partitioning unstructured graphs, partitioning meshes, and computing fill-reducing orderings of sparse matrices. Version 5.1.0\",\n                \"A scalable parallel finite element framework for growing geometries. application to metal additive manufacturing\",\n                \"Immersed Boundary Methods\",\n                \"The aggregated unfitted finite element method on parallel tree-based adaptive meshes\",\n                \"Space-Filling Curves: An Introduction With Applications in Scientific Computing\",\n                \"p4est: Scalable algorithms for parallel adaptive mesh refinement on forests of octrees\",\n                \"Condition number analysis and preconditioning of the finite cell method\",\n                \"Ghost penalty\",\n                \"CutFEM: Discretizing Geometry and Partial Differential Equations\",\n                \"A high-order discontinuous Galerkin method for compressible flows with immersed boundaries\",\n                \"Mixed aggregated finite element methods for the unfitted discretisation of the Stokes problem\",\n                \"Distributed-memory parallelization of the aggregated unfitted finite element method\",\n                \"Higher-order meshing of implicit geometries—part I: Integration and interpolation in cut elements\",\n                \"Efficient implementation of finite element methods on nonmatching and overlapping meshes in three dimensions\",\n                \"Multimesh finite element methods: Solving PDEs on multiple intersecting meshes\",\n                \"Conditioning of a hybrid high-order scheme on meshes with small faces\",\n                \"Mollified finite element approximants of arbitrary order and smoothness\",\n                \"Reentrant polygon clipping\",\n                \"A polyhedron clipping and capping algorithm and a display system for three dimensional finite element models\",\n                \"VOFTools - a software package of calculation tools for volume of fluid methods using general convex grids\",\n                \"Non-convex analytical and geometrical tools for volume truncation, initialization and conservation enforcement in VOF methods\",\n                \"A Robust and Consistent Algorithm for Intersecting Convex Polyhedra\",\n                \"An exact general remeshing scheme applied to physically conservative voxelization\",\n                \"Convex partitions of polyhedra: A lower bound and worst-case optimal algorithm\",\n                \"Exact minkowksi sums of polyhedra and exact and efficient decomposition of polyhedra into convex pieces\",\n                \"Thingi10K: A Dataset of 10,000 3D-Printing Models\",\n                \"STLCutters\",\n                \"Arbitrary discontinuities in finite elements\",\n                \"The Finite Cell Method: A review in the context of higher-order structural analysis of CAD and image-based geometric models\",\n                \"An efficient method to integrate polynomials over polytopes and curved solids\",\n                \"CGAL User and Reference Manual\",\n                \"Julia: A fresh approach to numerical computing\",\n                \"Gridap: An extensible Finite Element toolbox in Julia\",\n                \"GridapEmbedded. Version 0.7.\",\n                \"MeshIO. Version 0.4.\",\n                \"Preconditioners. Version 0.3.\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]13 based on the context and research area of Geometrical discretisations for unfitted finite elements on explicit boundary representations. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}