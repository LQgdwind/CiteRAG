{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Neural Network Bandits\n\nPaper Abstract: \n\nPaper Section Text:\nGraph neural networks are effective models for learning complex functions defined on graphs.\nAs in Du et al. , we consider graph networks that have a single graph convolutional layer and L𝐿L fully-connected ReLU layers of equal width m𝑚m. Such a network fGNN​(G;𝜽):𝒢→ℝ:subscript𝑓GNN𝐺𝜽→𝒢ℝf_{\\mathrm{GNN}}(G;{\\bm{\\theta}}):{\\mathcal{G}}\\rightarrow\\mathbb{R} may be recursively defined as follows: where 𝜽≔(𝑾(i))i≤L+1≔𝜽subscriptsuperscript𝑾𝑖𝑖𝐿1{\\bm{\\theta}}\\coloneqq({\\bm{W}}^{(i)})_{i\\leq L+1} is initialized randomly with standard normal i.i.d. entries, and σrelu​(𝒙)≔max⁡(𝟎,𝒙)≔subscript𝜎relu𝒙0𝒙\\sigma_{\\text{relu}}({\\bm{x}})\\coloneqq\\max(\\bm{0},{\\bm{x}}). The network operates on aggregated node features 𝒉¯G,jsubscript¯𝒉𝐺𝑗\\bar{\\bm{h}}_{G,j} as typical in Graph Convolutional Networks .\nFor convenience, we assume that at initialization fGNN​(G;𝜽0)=0subscript𝑓GNN𝐺superscript𝜽00f_{\\mathrm{GNN}}(G;{\\bm{\\theta}}^{0})=0, for all G∈𝒢𝐺𝒢G\\in{\\mathcal{G}}, similar to  . This assumption can be fulfilled without loss of generality, with a similar treatment as in [25, Appendix B.2]. Embedded Invariances. In this work, we use graph neural networks to estimate the unknown reward function f∗superscript𝑓f^{*}.\nThis choice is motivated by the expressiveness of the GNN, the fact that it scales well with graph size, and particularly due to the invariances embedded in its structure.\nWe observe that the graph neural network fGNNsubscript𝑓GNNf_{\\mathrm{GNN}} is invariant to node permutations, i.e., for all G∈𝒢𝐺𝒢G\\in{\\mathcal{G}} and c∈PN𝑐subscript𝑃𝑁c\\in P_{N}, The key step to show this property is proving that fGNNsubscript𝑓GNNf_{\\mathrm{GNN}} can be expressed as an additive model of L𝐿L-layer fully-connected ReLU networks, where fNNsubscript𝑓NNf_{\\mathrm{NN}} has a similar recursive definition as fGNNsubscript𝑓GNNf_{\\mathrm{GNN}} (see Equation A.1).\nThe above properties are formalized in Lemma A.1 and Lemma A.2. Lazy (NTK) Regime. We initialize and train fGNNsubscript𝑓GNNf_{\\mathrm{GNN}} in the well-known lazy regime [ref]11.\nIn this initialization regime, when the width m𝑚m is large, training with gradient descent using a small learning rate causes little change in the network’s parameters.\nLet 𝒈GNN​(G,𝜽)=∇𝜽fGNN​(G,𝜽)subscript𝒈GNN𝐺𝜽subscript∇𝜽subscript𝑓GNN𝐺𝜽{\\bm{g}}_{\\mathrm{GNN}}(G,{\\bm{\\theta}})=\\nabla_{\\bm{\\theta}}f_{\\mathrm{GNN}}(G,{\\bm{\\theta}}) denote the gradient of the network. It can be shown that during training, for all G∈𝒢𝐺𝒢G\\in{\\mathcal{G}}, the network remains close to fGNN​(G,𝜽0)+𝒈GNNT​(G,𝜽0)​(𝜽−𝜽0)subscript𝑓GNN𝐺superscript𝜽0superscriptsubscript𝒈GNN𝑇𝐺superscript𝜽0𝜽superscript𝜽0f_{\\mathrm{GNN}}(G,{\\bm{\\theta}}^{0})+{\\bm{g}}_{\\mathrm{GNN}}^{T}(G,{\\bm{\\theta}}^{0})({\\bm{\\theta}}-{\\bm{\\theta}}^{0}), that is, its first order approximation around initialization parameters 𝜽0superscript𝜽0{\\bm{\\theta}}^{0}.\nTraining this linearized model with a squared error loss is equivalent to kernel regression with a tangent kernel\nk~GNN​(G,G′):=𝒈GNNT​(G;𝜽0)​𝒈GNN​(G′;𝜽0)assignsubscript~𝑘GNN𝐺superscript𝐺′superscriptsubscript𝒈GNN𝑇𝐺superscript𝜽0subscript𝒈GNNsuperscript𝐺′superscript𝜽0\\tilde{k}_{\\mathrm{GNN}}(G,G^{\\prime}):={\\bm{g}}_{\\mathrm{GNN}}^{T}(G;{\\bm{\\theta}}^{0})\\;{\\bm{g}}_{\\mathrm{GNN}}(G^{\\prime};{\\bm{\\theta}}^{0}).\nFor networks of finite width, this kernel function is random since it depends on the random network parameters at initialization. We show in Proposition 3.1, that in the infinite width limit, the tangent kernel converges to a deterministic kernel. This proposition introduces the Graph Neural Tangent Kernel as the limiting kernel, and links it to the Neural Tangent Kernel (, also defined in Appendix A). Consider any two graphs G𝐺G and G′superscript𝐺′G^{\\prime} with N𝑁N nodes and d𝑑d-dimensional node features. In the infinite width limit, the tangent kernel k~GNN​(G,G′)/msubscript~𝑘GNN𝐺superscript𝐺′𝑚\\tilde{k}_{\\mathrm{GNN}}(G,G^{\\prime})/m converges to a deterministic kernel, which we refer to as the Graph Neural Tangent Kernel (GNTK). Moreover, where kNN:𝕊d−1×𝕊d−1→ℝ:subscript𝑘NN→superscript𝕊𝑑1superscript𝕊𝑑1ℝ{k_{\\mathrm{NN}}}:{\\mathbb{S}}^{d-1}\\times{\\mathbb{S}}^{d-1}\\rightarrow{\\mathbb{R}} is the Neural Tangent Kernel. The proof is given in Section A.1.\nWe note that 𝒉¯G,jsubscript¯𝒉𝐺𝑗\\bar{\\bm{h}}_{G,j} lies on the d𝑑d-dimensional sphere, since the aggregated node features are normalized. The NTK is bounded by 111 for any two points on the sphere . Therefore, Proposition 3.1 implies that the GNTK is also bounded, i.e., kGNN​(G,G′)≤1subscript𝑘GNN𝐺superscript𝐺′1{k_{\\mathrm{GNN}}}(G,G^{\\prime})\\leq 1 for any G,G′∈𝒢𝐺superscript𝐺′𝒢G,G^{\\prime}\\in{\\mathcal{G}}.\nThis proposition yields a kernel which captures the behaviour of the lazy GNN.\nWhile defined on graphs with N​d𝑁𝑑Nd dimensional representations, the effective input domain of this kernel is d𝑑d-dimensional. This advantage directly stems from the additive construction of the GNTK.\nThe next proposition uncovers the embedded structure of the GNTK by showing a novel connection between the GNTK and k¯¯𝑘\\bar{k}, the permutation invariant additive kernel from Eq. 1.\nThe proof is presented in Section A.1. Consider k¯¯𝑘\\bar{k} from Eq. 1, where for every 1≤j≤N1𝑗𝑁1\\leq j\\leq N the base kernel k(j)superscript𝑘𝑗k^{(j)} is set to be equal to kNNsubscript𝑘NN{k_{\\mathrm{NN}}}, Then the permutation invariant additive kernel and the GNTK are identical, i.e., for all G,G′∈𝒢𝐺superscript𝐺′𝒢G,\\,G^{\\prime}\\in{\\mathcal{G}}, This result implies that kGNNsubscript𝑘GNN{k_{\\mathrm{GNN}}} inherits the favorable properties of the permutation invariant additive kernel class.\nHence, functions residing in ℋGNNsubscriptℋGNN{\\mathcal{H}}_{\\mathrm{GNN}}, the RKHS of kGNNsubscript𝑘GNN{k_{\\mathrm{GNN}}}, are additive, invariant to node permutations, and act on G𝐺G through its aggregated node features.\nWhile we use the GNTK as an analytical tool, this kernel can be of independent interest in kernel methods over graph domains.\nIn particular, calculating kGNNsubscript𝑘GNN{k_{\\mathrm{GNN}}} requires significantly fewer operations compared to a kernel k¯¯𝑘\\bar{k} with an arbitrary choice of k(j)superscript𝑘𝑗k^{(j)}, for which calculating k¯​(G,G′)¯𝑘𝐺superscript𝐺′\\bar{k}(G,G^{\\prime}) requires super-exponentially many operations in N𝑁N (See Eq. 1). In contrast, due to the decomposition in Eq. 4, calculating kGNNsubscript𝑘GNN{k_{\\mathrm{GNN}}} only costs a quadratic number of summations.\n\nReference markers found: [11]\n\nContext windows for each [ref]:\n[ref]11: (see Equation A.1).\nThe above properties are formalized in Lemma A.1 and Lemma A.2. Lazy (NTK) Regime. We initialize and train fGNNsubscript𝑓GNNf_{\\mathrm{GNN}} in the well-known lazy regime [ref]11.\nIn this initialization regime, when the width m𝑚m is large, training with gradient descent using a small learning rate causes little change in the network’s parameters.\nLet\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 11,\n            \"titles\": [\n                \"On Kernelized Multi-armed Bandits\",\n                \"SMILES, a line notation and computerized interpreter for chemical structures\",\n                \"On exact computation with an infinitely wide neural net\",\n                \"Finite-time analysis of the multiarmed bandit problem\",\n                \"Near-optimal regret bounds for reinforcement learning\",\n                \"Deep Equals Shallow for ReLU Networks in Kernel Regimes\",\n                \"On the sample complexity of learning under geometric stability\",\n                \"Misspecified Gaussian Process Bandit Optimization\",\n                \"Truncated Variance Reduction: A Unified Approach to Bayesian Optimization and Level-Set Estimation\",\n                \"A Robust Phased Elimination Algorithm for Corruption-Tolerant Gaussian Process Bandits\",\n                \"Generalization Bounds of Stochastic Gradient Descent for Wide and Deep Neural Networks\",\n                \"On Lazy Training in Differentiable Programming\",\n                \"Parallel gaussian process optimization with upper confidence bound and pure exploration\",\n                \"Exponential regret bounds for Gaussian process bandits with deterministic observations\",\n                \"Graph neural tangent kernel: Fusing graph neural networks with graph kernels\",\n                \"Structure-based protein function prediction using graph convolutional networks\",\n                \"Automatic Chemical Design Using a Data-Driven Continuous Representation of Molecules\",\n                \"Constrained Bayesian optimization for automatic chemical design using variational autoencoders\",\n                \"Batched neural bandits\",\n                \"A semi-supervised approach to architected materials design using graph neural networks\",\n                \"Neural Tangent Kernel: Convergence and Generalization in Neural Networks\",\n                \"Could graph neural networks learn better molecular representation for drug discovery? a comparison study of descriptor-based and graph-based models\",\n                \"Junction Tree Variational Autoencoder for Molecular Graph Generation\",\n                \"High Dimensional Bayesian Optimisation and Bandits via Additive Models\",\n                \"Neural contextual bandits without regret\",\n                \"Adam: A method for stochastic optimization\",\n                \"Semi-Supervised Classification with Graph Convolutional Networks\",\n                \"Chembo: Bayesian optimization of small organic molecules with synthesizable recommendations\",\n                \"Contextual Gaussian process bandit optimization\",\n                \"Gaussian process bandit optimization with few batches\",\n                \"Information-Theoretic Confidence Bounds for Reinforcement Learning\",\n                \"Learning with invariances in random features and kernel models\",\n                \"Neural Tangents: Fast and Easy Infinite Neural Networks in Python\",\n                \"Automatic differentiation in PyTorch\",\n                \"High-dimensional Bayesian optimization via additive models with overlapping groups\",\n                \"Learning to optimize via posterior sampling\",\n                \"Gaussian process optimization in the bandit setting: No regret and experimental design\",\n                \"Accelerating Bayesian Optimization for Biological Sequence Design with Denoising Autoencoders\",\n                \"On the likelihood that one unknown probability exceeds another in view of the evidence of two samples\",\n                \"Optimal Order Simple Regret for Gaussian Process Bandits\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]11 based on the context and research area of Graph Neural Network Bandits. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}