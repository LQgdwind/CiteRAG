{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Optimizing Data Collection for Machine Learning\n\nPaper Abstract: \n\nPaper Section Text:\nWe now summarize the data collection and training process used to create the above piecewise-linear functions for each data set and task.\nAll models were implemented using PyTorch and trained on machines with up to eight NVIDIA V100 GPU cards.\nTable 4 details each task and data set size. Image Classification Tasks. For all experiments with CIFAR-10 and CIFAR-100, we use a ResNet18  following the same procedure as in Coleman et al. [ref]56. For ImageNet, we use a ResNet34  using the procedure in Coleman et al. [ref]56.\nAll models are trained with cross entropy loss using SGD with momentum. We evaluate all models on Top-1 Accuracy. For all experiments, we set the initial data set at q0=10%subscript𝑞0percent10q_{0}=10\\% of the data. In data collection, we create five subsets containing 2%,4%,⋯,10%percent2percent4⋯percent102\\%,4\\%,\\cdots,10\\% of the training data, five subsets containing 12%,14%,⋯,20%percent12percent14⋯percent2012\\%,14\\%,\\cdots,20\\% of the training data, and eight subsets containing 30%,40%,⋯,100%percent30percent40⋯percent10030\\%,40\\%,\\cdots,100\\% of the data. Note that we use higher granularity in the early stage as this is where the dynamics of the learning curve vary the most. With more data, the learning curve eventually has a nearly zero slope.\nFor each subset, we train our respective model and evaluate performance. VOC.\nWe use the Single-Shot Detector 300 (SSD300)  based on a VGG16 backbone , following the same procedure as in Elezi et al. . All models are trained using SGD with momentum. We evaluate all models on mean AP. For all experiments, we set the initial data set at q0=10%subscript𝑞0percent10q_{0}=10\\% of the data.\nIn data collection, we sample twenty subsets at 5%percent55\\% intervals, i.e., 5%,10%,15%,⋯,100%percent5percent10percent15⋯percent1005\\%,10\\%,15\\%,\\cdots,100\\% of the training data. BDD100K.\nWe use Deeplabv3 [ref]39 with ResNet50 backbone. We use random initialization for the backbone. We use the original data set split from Yu et al. [ref]40 with 7,00070007,000 and 1,00010001,000 data points in the train and validation sets respectively. The evaluation metrics is mean Intersection over Union (IoU).\nWe follow the same protocol used in the Image classification tasks to create our subsets of data. nuScenes.\nWe use the “Lift Splat” architecture , which is used for BEV segmentation from driving scenes, following the steps from the original paper to train this model. We evaluate on mean IoU. Our data collection procedure follows the same steps and percentages of the data set as used for BDD100K and the Image classification tasks. CIFAR-100 (2 Types).\nWe partition this data set into two subsets 𝒟1superscript𝒟1\\mathcal{D}^{1} and 𝒟2superscript𝒟2\\mathcal{D}^{2} of 25,0002500025,000 images each containing the first 50 and last 50 classes, respectively. We then train a ResNet18  using different fractions of the two subsets. We follow the same training procedure as in the single-variate case except with one difference. Since some of the data sets will naturally be imbalanced (e.g., if we train with half of the first subset and all of the second subset), we employ a class-balanced cross entropy loss using the inverse frequency of samples per class. For each 𝒟ksuperscript𝒟𝑘\\mathcal{D}^{k} subsets, respectively, we follow the same subsampling procedure used in the single-variate case. That is, we let q01=10%subscriptsuperscript𝑞10percent10q^{1}_{0}=10\\% of the first data subset and q02=10%subscriptsuperscript𝑞20percent10q^{2}_{0}=10\\% of the second data subset. For each subset, we create 101010 subsampled sets at intervals of 2%,4%,6%,⋯,20%percent2percent4percent6⋯percent202\\%,4\\%,6\\%,\\cdots,20\\% of the respective data subset. We then create eight further subsampled sets at 30%,40%,⋯,100%percent30percent40⋯percent10030\\%,40\\%,\\cdots,100\\% of the respective data subset.\nFinally, we train our model and evaluate the score on every combination of the subsampled subsets of 𝒟1×𝒟2superscript𝒟1superscript𝒟2\\mathcal{D}^{1}\\times\\mathcal{D}^{2}. BDD100K (Semi-supervised).\nFor this task, we consider semi-supervised segmentation via pseudo-labeling the unlabeled data set in BDD100K. The data is partitioned into two subsets 𝒟1superscript𝒟1\\mathcal{D}^{1} and 𝒟2superscript𝒟2\\mathcal{D}^{2} containing 7,00070007,000 labeled and 70,0007000070,000 unlabeled scenes. As before, we use the Deeplabv3 [ref]39 architecture with a ResNet50 backbone. Here however, we: First train with a labeled subset of 𝒟1superscript𝒟1\\mathcal{D}^{1} via supervised learning. Pseudo-label an unlabeled subset of 𝒟2superscript𝒟2\\mathcal{D}^{2} using the trained model. Re-train the model with the labeled subset and the pseudo-labeled subset. We follow the same procedure as in the single-variate case for both training steps, except we weigh the unlabeled data by 0.20.20.2 to reduce its contribution to the loss. Training via semi-supervised learning on BDD100K requires long compute times, so we reduce the number of subsets used in this experiment.\nFor the labeled set 𝒟1superscript𝒟1\\mathcal{D}^{1}, we create subsets with 5%,10%,15%,20%,40%,60%,80%,100%percent5percent10percent15percent20percent40percent60percent80percent1005\\%,10\\%,15\\%,20\\%,40\\%,60\\%,80\\%,100\\% of the data.\nFor the unlabeled set 𝒟2superscript𝒟2\\mathcal{D}^{2}, we create subsets with 0%,10%,25%,50%,100%percent0percent10percent25percent50percent1000\\%,10\\%,25\\%,50\\%,100\\% of the data.\nNote that we have five settings of unlabeled data since we include the case of training with no unlabeled data as well.\n\nReference markers found: [56]\n\nContext windows for each [ref]:\n[ref]56: cards.\nTable 4 details each task and data set size. Image Classification Tasks. For all experiments with CIFAR-10 and CIFAR-100, we use a ResNet18  following the same procedure as in Coleman et al. [ref]56. For ImageNet, we use a ResNet34  using the procedure in Coleman et al. [ref]56.\nAll models are trained with cross entropy loss using SGD with momentum. We evaluate all models on Top-1\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 56,\n            \"titles\": [\n                \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n                \"Efficient Interactive Annotation of Segmentation Datasets with Polygon-RNN++\",\n                \"How Much More Data Do I Need? Estimating Requirements for Downstream Tasks\",\n                \"Modeling decision tree performance with the power law\",\n                \"Modelling classification performance for large data sets\",\n                \"Deep Learning Scaling is Predictable, Empirically\",\n                \"A constructive prediction of the generalization error across scales\",\n                \"Scaling Laws for Neural Language Models\",\n                \"Learning Curves for Analysis of Deep Networks\",\n                \"Explaining Neural Scaling Laws\",\n                \"A Theoretical‐Empirical Approach to Estimating Sample Complexity of DNNs\",\n                \"A scaling law for synthetic-to-real transfer: How much is your pre-training effective?\",\n                \"𝑓-Domain-Adversarial Learning: Theory and Algorithms\",\n                \"Self-Supervised Real-to-Sim Scene Generation\",\n                \"Domain Adversarial Training A Game Perspective\",\n                \"An introduction to power and sample size estimation\",\n                \"Revisiting Unreasonable Effectiveness of Data in Deep Learning Era\",\n                \"Predicting sample size required for classification performance\",\n                \"The Shape of Learning Curves: a Review\",\n                \"Scaling Vision Transformers\",\n                \"Active learning literature survey\",\n                \"Active Learning for Convolutional Neural Networks: A Core-Set Approach\",\n                \"Learning Loss for Active Learning\",\n                \"Variational Adversarial Active Learning\",\n                \"Low-Budget Active Learning via Wasserstein Distance: An Integer Programming Approach\",\n                \"Neurips 2020 competition: Predicting generalization in deep learning\",\n                \"Methods and analysis of the first competition in predicting generalization of deep learning\",\n                \"On the standard deviations of adjusted and interpolated values of an observed polynomial function and its constants and the guidance they give towards a proper choice of the distribution of observations\",\n                \"Neural network exploration using optimal experiment design\",\n                \"Optimal experiment design\",\n                \"The power of optimization over randomization in designing experiments involving small samples\",\n                \"Optimal data collection for randomized control trials\",\n                \"Dynamic learning and decision making via basis weight vectors\",\n                \"Learning from class-imbalanced data: Review of methods and applications\",\n                \"A survey on semi-supervised learning\",\n                \"A theory of learning from different domains\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Imagenet: A large-scale hierarchical image database\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Rethinking atrous convolution for semantic image segmentation\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]56 based on the context and research area of Optimizing Data Collection for Machine Learning. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}