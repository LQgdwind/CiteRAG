{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Faster Non-Convex Federated Learning via Global and Local Momentum\n\nPaper Abstract: \n\nPaper Section Text:\nFederated learning (FL) is a new edge-computing approach that advocates training statistical models directly on remote devices by leveraging enhanced local resources on each device [ref]24. In a standard FL setting, there are n𝑛n clients, each having its own training data, and a central server that is trying to train a model, parameterized by 𝒘∈ℝd𝒘superscriptℝ𝑑\\bm{w}\\in\\mathbb{R}^{d}, using the clients’ data.\nSuppose the data distribution of the ithsuperscript𝑖thi^{\\text{th}} client is 𝒟isubscript𝒟𝑖\\mathcal{D}_{i}.\nThen the ithsuperscript𝑖thi^{\\text{th}} client has an objective function fi​(𝒘)subscript𝑓𝑖𝒘f_{i}(\\bm{w}) which is the expected loss, with respect to some loss function ℓℓ\\ell, over data drawn from 𝒟isubscript𝒟𝑖\\mathcal{D}_{i}, and the goal of the central server is to optimize the average 111In general this may be a weighted average, but here we only consider uniform weights, i.e., each weight is 1/n1𝑛{1}/{n}.\nloss f​(𝒘)𝑓𝒘f(\\bm{w}), over the n𝑛n clients, i.e., The setting where the data distributions of all the clients are identical, i.e. 𝒟1=…=𝒟nsubscript𝒟1…subscript𝒟𝑛\\mathcal{D}_{1}=\\ldots=\\mathcal{D}_{n}, is typically known as the “homogeneous” setting. Otherwise, the settings where the data distributions are not identical are referred to as the “heterogeneous” settings. The core algorithmic idea of FL – in the form of FedAvg – was introduced in [ref]24. In FedAvg (summarized in Algorithm 3), a subset of the clients perform multiple steps of gradient descent based updates on their local data and then communicate back their respective updates to the server, which then averages them to update the global model (hence the name FedAvg). This idea of performing multiple local updates before averaging once mitigates the communication cost required for training. Another strategy to cut down the communication cost is to have the clients send compressed/quantized messages to the server in every round – this is of particular significance for training deep learning models where the number of model parameters is in millions or more. In practice however, performing multiple local updates on clients with heterogeneous data distributions leads to the so-called phenomenon of “client-drift”, wherein the individual client updates do not align well (due to over-fitting on the local client data) inhibiting the convergence of FedAvg to the optimum of the average loss over all the clients. At the heart of this issue is the high variance associated with the simple averaging step of FedAvg for the global update. Ever since the development of FL, significant attention has been devoted to analyzing FedAvg under different settings, modifying FedAvg using ideas from centralized optimization to accelerate the training or to reduce the communication cost; we discuss these works in Section 2. Compared to centralized optimization, a formidable challenge in the theoretical analysis of FL algorithms is the use of multiple local updates in the clients which is compounded by the heterogeneous nature of data distribution among the clients. To limit the extent of client heterogeneity, a standard\nassumption in FL theory is the bounded client dissimilarity (BCD) assumption, i.e., for some large enough constant G𝐺G (e.g., see A1 in ). However, it is hard to verify in practice and does not allow for arbitrary client heterogeneity. Recently, [ref]3 showed that the stochastic first-order complexity of any\nalgorithm in the centralized setting to reach an ϵitalic-ϵ\\epsilon-stationary point (i.e., 𝔼​[‖∇f​(𝒙)‖2]≤ϵ𝔼delimited-[]superscriptnorm∇𝑓𝒙2italic-ϵ\\mathbb{E}[\\|\\nabla f(\\bm{x})\\|^{2}]\\leq\\epsilon) for smooth non-convex functions is Ω​(ϵ−1.5)Ωsuperscriptitalic-ϵ1.5\\Omega(\\epsilon^{-1.5}). It is well known that vanilla SGD has a suboptimal complexity of 𝒪​(ϵ−2)𝒪superscriptitalic-ϵ2\\mathcal{O}(\\epsilon^{-2}) as it cannot mitigate the high variance of the stochastic gradient noise. Recognizing this issue, variance-reducing techniques for SGD [ref]10    have been proposed that attain the optimal complexity of 𝒪​(ϵ−1.5)𝒪superscriptitalic-ϵ1.5\\mathcal{O}(\\epsilon^{-1.5}).\nComing to the federated setting, in addition to the noise in the local client-level stochastic gradients, one has to also contend with the high variance associated with the global server aggregation step which depends on the client heterogeneity and the number of local update steps. In this case, applying only local client-level variance-reduction is not enough for improving the iteration complexity of vanilla FedAvg. To that end, we propose a novel FL algorithm with compressed communication called FedGLOMO (Algorithm 1 and 2) which applies Global as well as LOcal variance-reducing MOmentum to the server update and client updates, respectively.\nWe prove that the iteration complexity of FedGLOMO is 𝒪​(ϵ−1.5)𝒪superscriptitalic-ϵ1.5\\mathcal{O}(\\epsilon^{-1.5}) in the smooth non-convex case, which is better than the 𝒪​(ϵ−2)𝒪superscriptitalic-ϵ2\\mathcal{O}(\\epsilon^{-2}) complexity of related works in the FL setting; see Table 1 and Theorem 1.\nFurther, our theory does not use the BCD assumption, i.e. eq. 2, which is a standard assumption in related works. Instead, we propose and use 4, which is more realistic and empirically verified, allowing for arbitrary client heterogeneity.\nIt is worth mentioning here that for FL,  also propose an algorithm (MimeMVR) which is shown to attain this improved complexity of 𝒪​(ϵ−1.5)𝒪superscriptitalic-ϵ1.5\\mathcal{O}(\\epsilon^{-1.5}) but with the BCD assumption and no compressed communication; we talk about this at the end of Section 2.\n\n\nWe summarize our contributions next:\n\n\n(a) We propose FedGLOMO (Alg. 1 and 2), in which we apply a novel global momentum term at the server in addition to SVRG-style local momentum at the clients. The design of FedGLOMO is motivated by two critical issues that need to be alleviated to accelerate convergence in FL; these are the high variances associated with: (i) the global server aggregation step due to heterogeneity of clients when there are multiple local updates, and (ii) the noise of local client-level stochastic gradients. Global and local momentum result in variance reduction for the global server update and the local client updates, allowing us to tackle (i) and (ii), respectively. This enables FedGLOMO to converge to an ϵitalic-ϵ\\epsilon-stationary point (i.e., 𝔼​[‖∇f​(𝒙)‖2]≤ϵ𝔼delimited-[]superscriptnorm∇𝑓𝒙2italic-ϵ\\mathbb{E}[\\|\\nabla f(\\bm{x})\\|^{2}]\\leq\\epsilon) for smooth non-convex functions in 𝒪​(ϵ−1.5)𝒪superscriptitalic-ϵ1.5\\mathcal{O}(\\epsilon^{-1.5}) gradient-based updates, which is better than the 𝒪​(ϵ−2)𝒪superscriptitalic-ϵ2\\mathcal{O}(\\epsilon^{-2}) complexity of most related works in the FL setting; see Table 1 and Theorem 1.\n\n\n(b) Unlike prior work, our theory does not use the hard to verify bounded client dissimilarity assumption (i.e., eq. 2). Instead, to tighten our convergence result, we propose and use 4 – which is a novel and empirically verified assumption, even allowing for arbitrary client heterogeneity. Moreover, this assumption is not specific to FedGLOMO; we empirically verify that it also holds for FedAvg and derive a novel convergence result for FedAvg using this assumption and without eq. 2 (see Appendix G).Refer to the discussion after 4 and Remark 2 for details.\n\n\n(c) Further, FedGLOMO is the first FL algorithm achieving 𝒪​(ϵ−1.5)𝒪superscriptitalic-ϵ1.5\\mathcal{O}(\\epsilon^{-1.5}) complexity while allowing compressed client-to-server communication. For theory, applying compression in FedGLOMO is not trivial and the most obvious approach to do so does not work; see Remark 3.\n\n\n(d) In Section 6, experiments with neural networks on CIFAR-10 and Fashion-MNIST  show that in a highly heterogeneous setting of at most two classes per client, FedGLOMO requires only about one-third the number of bits used by FedAvg with compressed communication, while this ratio further improves to one-fifth in the homogeneous setting; see Figure 1.Our experiments also illustrate the variance reduction provided by our scheme which implicitly mitigates client-drift under heterogeneous data distribution and promotes communication-efficiency.\n\nReference markers found: [24]\n\nContext windows for each [ref]:\n[ref]24: Federated learning (FL) is a new edge-computing approach that advocates training statistical models directly on remote devices by leveraging enhanced local resources on each device [ref]24. In a standard FL setting, there are n𝑛n clients, each having its own training data, and a central server that is trying to train a model, parameterized by\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 24,\n            \"titles\": [\n                \"Communication trade-offs for synchronized distributed SGD with large step size\",\n                \"QSGD: Communication-Efficient SGD via Gradient Quantization and Encoding\",\n                \"The Convergence of Sparsified Gradient Methods\",\n                \"Lower bounds for non-convex stochastic optimization\",\n                \"Qsparse-local-SGD: Distributed SGD with Quantization, Sparsification, and Local Computations\",\n                \"Tighter theory for local sgd on identical and heterogeneous data\",\n                \"signSGD: Compressed Optimisation for Non-Convex Problems\",\n                \"Stochastic gradient descent tricks\",\n                \"Communication-efficient algorithms for decentralized optimization over directed graphs\",\n                \"Momentum-Based Variance Reduction in Non-Convex SGD\",\n                \"Spider: Near-Optimal Non-Convex Optimization via Stochastic Path Integrated Differential Estimator\",\n                \"MARINA: Faster Non-Convex Distributed Learning with Compression\",\n                \"Federated learning with compression: Unified analysis and sharp guarantees\",\n                \"On the Benefits of Multiple Gossip Steps in Communication-Constrained Decentralized Optimization\",\n                \"Stochastic distributed learning with gradient quantization and variance reduction\",\n                \"Faster On-Device Training Using New Federated Momentum Algorithm\",\n                \"Mime: Mimicking Centralized Stochastic Algorithms in Federated Learning\",\n                \"Scaffold: Stochastic controlled averaging for federated learning\",\n                \"A Unified Theory of Decentralized SGD with Changing Topology and Local Updates\",\n                \"Federated optimization in heterogeneous networks\",\n                \"On the Convergence of FedAvg on Non-IID Data\",\n                \"Variance reduced local sgd with lower communication complexity\",\n                \"Deep Gradient Compression: Reducing the Communication Bandwidth for Distributed Training\",\n                \"An optimal hybrid variance-reduced algorithm for stochastic composite nonconvex optimization\",\n                \"Communication-efficient learning of deep networks from decentralized data\",\n                \"A Distributed Stochastic Gradient Tracking Method\",\n                \"Federated learning’s blessing: Fedavg has linear speedup\",\n                \"Adaptive Federated Optimization\",\n                \"Fedpaq: A communication-efficient federated learning method with periodic averaging and quantization\",\n                \"Local SGD Converges Fast and Communicates Little\",\n                \"Sparsified SGD with Memory\",\n                \"The error-feedback framework: Better rates for sgd with delayed gradients and compressed communication\",\n                \"Distributed Mean Estimation with Limited Communication\",\n                \"Communication Compression for Decentralized Training\",\n                \"Cooperative SGD: A Unified Framework for the Design and Analysis of Communication-Efficient SGD Algorithms\",\n                \"SlowMo: Improving Communication-Efficient Distributed SGD with Slow Momentum\",\n                \"Is local sgd better than minibatch sgd?\",\n                \"Error Compensated Quantized SGD and its Applications to Large-scale Distributed Optimization\",\n                \"Fashion-MNIST: a Novel Image Dataset for Benchmarking Machine Learning Algorithms\",\n                \"Parallel restarted sgd for non-convex optimization with faster convergence and less communication\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]24 based on the context and research area of Faster Non-Convex Federated Learning via Global and Local Momentum. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}