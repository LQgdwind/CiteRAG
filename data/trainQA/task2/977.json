{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Instance Weighted Incremental Evolution Strategies for Reinforcement Learning in Dynamic Environments\n\nPaper Abstract: \n\nPaper Section Text:\nReinforcement learning (RL) is commonly studied based on the Markov decision process (MDP) formalism.\nAn MDP is a tuple ⟨S,A,T,R,γ⟩𝑆𝐴𝑇𝑅𝛾\\langle S,A,T,R,\\gamma\\rangle, where S𝑆S is the set of states, A𝐴A is the set of actions, T:S×A×S→ :𝑇→𝑆𝐴𝑆01T:S\\times A\\times S\\to  is the state transition probability, R:S×A→ℝ:𝑅→𝑆𝐴ℝR:S\\times A\\to\\mathbb{R} is the reward function, and γ∈(0,1]𝛾01\\gamma\\in(0,1] is the discounting factor.\nA policy is defined as a function π:S×A→ :𝜋→𝑆𝐴01\\pi:S\\times A\\to , a probability distribution that maps actions to states, and ∑a∈Aπ​(a|s)=1,∀s∈Sformulae-sequencesubscript𝑎𝐴𝜋conditional𝑎𝑠1for-all𝑠𝑆\\sum_{a\\in A}\\pi(a|s)=1,\\forall s\\in S.\nThe goal of RL is to find an optimal policy π∗superscript𝜋\\pi^{*} that maximizes the expected long-term return J​(π)𝐽𝜋J(\\pi): where τ=(s0,a0,s1,a1,…)𝜏subscript𝑠0subscript𝑎0subscript𝑠1subscript𝑎1…\\tau=(s_{0},a_{0},s_{1},a_{1},...) is the learning episode, π​(τ)=p​(s0)​Πi=0∞​π​(ai|si)​p​(si+1|si,ai)𝜋𝜏𝑝subscript𝑠0superscriptsubscriptΠ𝑖0𝜋conditionalsubscript𝑎𝑖subscript𝑠𝑖𝑝conditionalsubscript𝑠𝑖1subscript𝑠𝑖subscript𝑎𝑖\\pi(\\tau)=p(s_{0})\\Pi_{i=0}^{\\infty}\\pi(a_{i}|s_{i})p(s_{i+1}|s_{i},a_{i}), risubscript𝑟𝑖r_{i} is the instant reward received when executing action aisubscript𝑎𝑖a_{i} in state sisubscript𝑠𝑖s_{i}. Inspired by natural evolution, ES is designed to cope with high-dimensional continuous-valued domains and has remained an active field of research for more than four decades 2.\nES algorithms address the following search problem: maximize a non-linear fitness function that is a mapping from search space 𝒮⊆ℝd𝒮superscriptℝ𝑑\\mathcal{S}\\subseteq\\mathbb{R}^{d} to ℝℝ\\mathbb{R}.\nAt each iteration (generation), a population of parameter vectors (gnomes) is perturbed (mutated) and optionally recombined (merged) via crossover.\nThe mutation is usually carried out by adding a realization of a normally distributed random vector.\nEach resultant offspring is evaluated by a fitness function, and the highest scoring parameter vectors are then recombined to form the population for the next generation.\nRecent research highlights the scalability of ES algorithms on many high-dimensional RL tasks while offering unique benefits over traditional gradient-based RL methods 4.\nMost notably, ES is highly parallelizable and well suited to modern distributed computer systems with a near-linear speedup in wall-clock runtime.\nSalimans et al. 3 reported that, with hundreds of parallel CPUs, ES is able to achieve roughly the same performance on Atari games with the same DNN architecture in 1 hour as A3C  did in 24 hours. Algorithms in the ES class differ in their representations of population and methods of recombination.\nThe version of ES used in this paper belongs to the class of natural evolution strategies (NES) , which constitutes a well-principled approach with a clean derivation from first principles.\nThe core idea is to iteratively update parameters of the search distribution using the sampled gradient of expected fitness.\nThe search distribution can be taken to be a multinormal distribution, but could in principle be any distribution of which the log-density is differentiable.\nLet 𝜽𝜽\\bm{\\theta} denote parameters of the search distribution’s density p​(𝒛|𝜽)𝑝conditional𝒛𝜽p(\\bm{z}|\\bm{\\theta}), and f​(𝒛)𝑓𝒛f(\\bm{z}) denotes the fitness function (e.g., received return) for instance 𝒛𝒛\\bm{z}.\nAt each generation, a population of search instances is produced by the parameterized search distribution, and the fitness function is evaluated at each instance.\nThe expected fitness under the search distribution is written as: In a fashion similar to REINFORCE [ref]35, NES takes gradient steps on 𝜽𝜽\\bm{\\theta} with the following estimator: We can obtain the Monte Carlo estimate of the search gradient for instances in a population (𝒛1,…,𝒛msubscript𝒛1…subscript𝒛𝑚\\bm{z}_{1},...,\\bm{z}_{m}) as: where m𝑚m is the population size.\nFor each generation, NES estimates a search gradient on the parameters towards higher expected fitness in promising regions.\nInstead of using the plain stochastic gradient for updates, NES follows the natural gradient, which helps mitigate the slow convergence of plain gradient ascent in optimization landscapes with ridges and plateaus.\nThe direction of the natural gradient is associated with the Fisher information matrix of the given parametric family of the search distribution: If 𝑭𝑭\\bm{F} is invertible, the natural gradient amounts to The local structure of the fitness function is adaptively captured by the search distribution’s parameters, e.g., the mean and covariance matrix in a Gaussian distribution.\nThe evolutionary process re-iterates until a stopping criterion is met. In RL domains, NES directly searches in the parameter space of a neural network to find an effective policy.\nFor scalability to high-dimensional problems, the population {𝒛i}i=1msuperscriptsubscriptsubscript𝒛𝑖𝑖1𝑚\\{\\bm{z}_{i}\\}_{i=1}^{m} is typically instantiated as a multivariate Gaussian with diagonal covariance matrix centered at 𝜽𝜽\\bm{\\theta}, i.e., 𝒛i=𝜽+σ​ϵisubscript𝒛𝑖𝜽𝜎subscriptbold-italic-ϵ𝑖\\bm{z}_{i}=\\bm{\\theta}+\\sigma\\bm{\\epsilon}_{i}, where σ𝜎\\sigma is the noise standard deviation.\nThe following gradient estimator: can be estimated with samples: and then parameters 𝜽𝜽\\bm{\\theta} are updated iteratively by 𝜽←𝜽+α​∇𝜽J​(𝜽)←𝜽𝜽𝛼subscript∇𝜽𝐽𝜽\\bm{\\theta}\\leftarrow\\bm{\\theta}+\\alpha\\nabla_{\\bm{\\theta}}J(\\bm{\\theta}) till convergence, where α𝛼\\alpha is the learning rate.\nIn this way, the gradient estimation reduces to sampling unit Gaussian perturbation vectors ϵ∼𝒩​(𝟎,𝑰)similar-tobold-italic-ϵ𝒩0𝑰\\bm{\\epsilon}\\!\\sim\\!\\mathcal{N}(\\bm{0},\\bm{I}), evaluating the performance (fitness) of the perturbed policies and aggregating the results over a population of search instances. If the random seeds between workers are synchronized before optimization, each worker can know the perturbations used by other workers.\nIn this way, only a single scalar (fitness) needs to be communicated among the workers to agree on a parameter update, thus resulting in highly parallelizable implementations.\nMore details about ES can be found in  3.\n\nReference markers found: [35]\n\nContext windows for each [ref]:\n[ref]35: by the parameterized search distribution, and the fitness function is evaluated at each instance.\nThe expected fitness under the search distribution is written as: In a fashion similar to REINFORCE [ref]35, NES takes gradient steps on 𝜽𝜽\\bm{\\theta} with the following estimator: We can obtain the Monte Carlo estimate of the search gradient for instances in a population\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 35,\n            \"titles\": [\n                \"Domain Randomization for Transferring Deep Neural Networks from Simulation to the Real World\",\n                \"Reinforcement Learning: An Introduction\",\n                \"Kernel-based least squares policy iteration for reinforcement learning\",\n                \"Model-free optimal tracking control via critic-only Q-learning\",\n                \"Reusable reinforcement learning via shallow trails\",\n                \"Deep reinforcement learning-based automatic exploration for navigation in unknown environment\",\n                \"Quantum reinforcement learning during human decision-making\",\n                \"Human-level control through deep reinforcement learning\",\n                \"Mastering the game of Go without human knowledge\",\n                \"Benchmarking Deep Reinforcement Learning for Continuous Control\",\n                \"Hoeffding and bernstein races for selecting policies in evolutionary direct policy search\",\n                \"Neuroevolution in Games: State of the Art and Open Challenges\",\n                \"The Theory of Evolution Strategies\",\n                \"Evolution strategies as a scalable alternative to reinforcement learning\",\n                \"Improving Exploration in Evolution Strategies for Deep Reinforcement Learning via a Population of Novelty-Seeking Agents\",\n                \"Evolution-Guided Policy Gradient in Reinforcement Learning\",\n                \"Trust region evolution strategies\",\n                \"Multi-agent Reinforcement Learning with Sparse Interactions by Negotiation and Knowledge Transfer\",\n                \"Reinforcement based mobile robot navigation in dynamic environment\",\n                \"Learning to Adapt in Dynamic, Real-World Environments through Meta-Reinforcement Learning\",\n                \"Transfer learning based dynamic multiobjective optimization algorithms\",\n                \"Population-based incremental learning with associative memory for dynamic environments\",\n                \"Multisource transfer double DQN based on actor learning\",\n                \"Incremental reinforcement learning with prioritized sweeping for dynamic environments\",\n                \"Incremental reinforcement learning in continuous spaces via policy relaxation and importance weighting\",\n                \"Lifelong incremental reinforcement learning with online Bayesian inference\",\n                \"ImageNet Large Scale Visual Recognition Challenge\",\n                \"How transferable are features in deep neural networks?\",\n                \"Incremental learning from stream data\",\n                \"Incremental learning of concept drift in nonstationary environments\",\n                \"Incremental learning for robust visual tracking\",\n                \"Incremental learning of full body motion primitives and their sequencing through human motion observation\",\n                \"Incremental spatiotemporal learning for online modeling of distributed parameter systems\",\n                \"Asynchronous methods for deep reinforcement learning\",\n                \"Natural evolution strategies\",\n                \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n                \"Assessing Transferability from Simulation to Reality for Reinforcement Learning\",\n                \"Using data-driven domain randomization to transfer robust control policies to mobile robots\",\n                \"Hardware Conditioned Policies for Multi-Robot Transfer Learning\",\n                \"Preparing for the Unknown: Learning a Universal Policy with Online System Identification\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]35 based on the context and research area of Instance Weighted Incremental Evolution Strategies for Reinforcement Learning in Dynamic Environments. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}