{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Using BERT Encoding and Sentence-Level Language Model for Sentence Ordering\n\nPaper Abstract: \n\nPaper Section Text:\nWe proposed Sentence-level Language Model (SLM) for Sentence Ordering compose of Sentence Encoder, Story Encoder, and Sentence Organizer. The architecture of the proposed model is shown in Figure1.\nSentence encoder gets sentence as input and encoded it into a vector using a fine-tuned pre-trained SBERT-WK[ref]39. The embedding pays more attention to the sentence’s crucial parts, such as the verbs and clue words. Furthermore, stop words are omitted. Then, Story Encoder takes the sentence encoder as an input and learns the sentence level language model using an encoder-decoder architecture based on universal transformers (UT) [ref]11. UT couples parallelism with the global receptive field in a feed-forward model. The UT model also includes position-based halting [ref]11. The UT-based encoder-decoder component corrects vector representations for each position (sentence) in parallel by combining information from different positions using self-attention and applying a repetitive transfer function [ref]11. Hence dependencies between the sentences are captured. The vector is learned from the hidden state and then decodes the vector and indicates the next sentence’s candidate. What matters at runtime is that during training, information are transferred to all nodes at time t+1𝑡1t+1 from all nodes at time t𝑡t. Thus, parallelism is created, which allows all tokens processed at the same time [ref]11. In the Sentence Organizer, we can rate each sentence and the candidate based on their similarity. We use the cosine similarity as the scoring function. The arrangement is made using a Brute Force search in all state spaces to maximize the sum of the cosine similarity between two consecutive sentences like the sentence ordering component in , as follow: where S​(si′,sj)𝑆subscriptsuperscript𝑠′𝑖subscript𝑠𝑗S(s^{\\prime}_{i},s_{j}) represents the cosine similarity between si′subscriptsuperscript𝑠′𝑖s^{\\prime}_{i} and sjsubscript𝑠𝑗s_{j}, and si′subscriptsuperscript𝑠′𝑖s^{\\prime}_{i} is the candidate for the next sentence of the i𝑖i-th sentence, represented with sisubscript𝑠𝑖s_{i}. s​(oi)𝑠subscript𝑜𝑖s(o_{i}) represents the i𝑖i-th sentence in the order of output, and sisubscript𝑠𝑖s_{i} is the i𝑖i-th sentence in the non-ordered permutation of sentences or the input’s order. Our model is trained again using the universal sentence encoder (USE) embeddings  to compare them to SBERT-WK embeddings, and additionally, we employ the BiLSTM  network to learn the LM. Also, we apply the nearest neighbor search, which is a greedy algorithm. The NN search calculations for sentence ordering are presented in . Consequently, we train, evaluate, and test nine different models, including the following: Fine-tuned pretrained SBERT-WK + UT + BFS, Pretrained SBERT-WK + UT + BFS, Pretrained SBERT-WK + BiLSTM + BFS, Pretrained SBERT-WK + UT + NN, Pretrained SBERT-WK + BiLSTM + NN, USE + UT + BFS, USE + BiLSTM + BFS, USE + UT + NN, USE + BiLSTM + NN, So we can assess the effect of change on each component.\n\nReference markers found: [39]\n\nContext windows for each [ref]:\n[ref]39: and Sentence Organizer. The architecture of the proposed model is shown in Figure1.\nSentence encoder gets sentence as input and encoded it into a vector using a fine-tuned pre-trained SBERT-WK[ref]39. The embedding pays more attention to the sentence’s crucial parts, such as the verbs and clue words. Furthermore, stop words are omitted. Then, Story Encoder takes the sentence encoder as an\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 39,\n            \"titles\": [\n                \"SBERT-WK: A Sentence Embedding Method by Dissecting BERT-based Word Models\",\n                \"Texas (Nov 2016). https://doi.org/10.18653/v1/D16-1091\",\n                \"Sort story: Sorting jumbled images and captions into stories\",\n                \"Inferring strategies for sentence ordering in multidocument news summarization\",\n                \"Modeling local coherence: An entity-based approach\",\n                \"Catching the drift: Probabilistic content models, with applications to generation and summarization\",\n                \"A neural probabilistic language model\",\n                \"A bottom-up approach to sentence ordering for multi-document summarization\",\n                \"Discourse-Aware Neural Rewards for Coherent Text Generation\",\n                \"Universal sentence encoder for English\",\n                \"Unsupervised learning of narrative event chains\",\n                \"Unsupervised learning of narrative schemas and their participants\",\n                \"Universal Transformers\",\n                \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n                \"A unified local and global model for discourse coherence\",\n                \"End-to-End Neural Sentence Ordering Using Pointer Network\",\n                \"Handling oov words in nmt using unsupervised bilingual embedding\",\n                \"Long short-term memory\",\n                \"Exploring the limits of language modeling\",\n                \"Skip-Thought Vectors\",\n                \"Open vocabulary handwriting recognition using combined word-level and character-level language models\",\n                \"Deep attentive ranking networks for learning to order sentences\",\n                \"Probabilistic text structuring: Experiments with sentence ordering\",\n                \"Automatic evaluation of information ordering: Kendall’s tau\",\n                \"Neural Net Models of Open-domain Discourse Coherence\",\n                \"Automatic evaluation of machine translation quality using longest common subsequence and skip-bigram statistics\",\n                \"Sentence Ordering and Coherence Modeling using Recurrent Neural Networks\",\n                \"Recurrent neural networks\",\n                \"Efficient estimation of word representations in vector space\",\n                \"Empirical evaluation and combination of advanced language modeling techniques\",\n                \"From Event to Story Understanding\",\n                \"A corpus and cloze evaluation for deeper understanding of commonsense stories\",\n                \"Caters: Causal and temporal relation scheme for semantic annotation of event structures\",\n                \"Lsdsem 2017 shared task: The story cloze test\",\n                \"A Decomposable Attention Model for Natural Language Inference\",\n                \"Using Sentence-Level LSTM Language Models for Script Inference\",\n                \"A new sentence ordering method using bert pretrained model\",\n                \"Bidirectional recurrent neural networks\",\n                \"Neural machine translation of rare words with subword units\",\n                \"Sequence to sequence learning with neural networks\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]39 based on the context and research area of Using BERT Encoding and Sentence-Level Language Model for Sentence Ordering. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}