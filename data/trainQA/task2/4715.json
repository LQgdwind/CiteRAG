{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Rethinking Missing Data: Aleatoric Uncertainty-Aware Recommendation\n\nPaper Abstract: \n\nPaper Section Text:\nDatasets. \nWe conduct experiments on four benchmark datasets, namely Yelp2018, Amazon-book, Adressa, and MovieLens-10M, which we abbreviate as Yelp, Amazon, Adressa, and ML-10M, respectively. For Yelp and Amazon, we follow the same setting as LightGCN  to filter users and items and split each dataset into training and testing sets. For Adressa and ML-10M, we adopt the setting of MACR  to filter the datasets. To evaluate the performance of tail item recommendation, we define tail items as items with fewer interactions and make sure that they comprise 50% of all interactions in the corresponding dataset. The remaining items are treated as head items. On Yelp and Amazon, 86.3% and 84% of the items were tail items, respectively. As for the Adressa and ML-10M datasets, approximately 85% of the items were tail items. Evaluation Protocols. \nTo measure the recommendation performance, we adopt two widely-used evaluation metrics: R​e​c​a​l​l​@​K𝑅𝑒𝑐𝑎𝑙𝑙@𝐾Recall@K and N​D​C​G​@​K𝑁𝐷𝐶𝐺@𝐾NDCG@K (K=20​o​r​ 50𝐾20𝑜𝑟50K=20\\,or\\,50). To evaluate both the overall recommendation and tail item recommendation performance, we define three evaluation protocols to rank items and compute the above metrics, as following: Overall evaluation. In this protocol, we conduct all-ranking  – all items that are not interacted by a user are the candidates and report the normal Recall and NDCG. Indeed, it measures the trade-off between recommendation of head items and tail items. Tail Absolute evaluation. In this protocol, we focus on measuring the accuracy of recommending tail items when both head and tail items are candidates. We still conduct all-ranking, but just take the positive tail items in the testing set as ground-truth. We adjust the evaluation metrics,\ne.g., R​e​c​a​l​l​@​K=1|𝒰|​∑u|𝒯u∩ℛuK||𝒯u|𝑅𝑒𝑐𝑎𝑙𝑙@𝐾1𝒰subscript𝑢subscript𝒯𝑢subscriptsuperscriptℛ𝐾𝑢subscript𝒯𝑢Recall@K=\\frac{1}{|\\mathcal{U}|}\\sum_{u}\\frac{|\\mathcal{T}_{u}\\cap\\mathcal{R}^{K}_{u}|}{|\\mathcal{T}_{u}|},\nwhere Tusubscript𝑇𝑢T_{u} denotes the set of tail items that are interacted by the user u𝑢u in the testing set. ℛuKsubscriptsuperscriptℛ𝐾𝑢\\mathcal{R}^{K}_{u} denotes the top-K𝐾K recommended items among all candidates in the all-ranking protocol, and |⋅||\\cdot| denotes the size of the corresponding set. Tail Relative evaluation. Refer to , it also evaluates the tail recommendation performance but focuses on the ranking of tail items where all tail items not interacted by a user are the candidates. Correspondingly, we adjust the metric\nR​e​c​a​l​l​@​K=1|𝒰|​∑u|𝒯u∩ℛ′uK||𝒯u|𝑅𝑒𝑐𝑎𝑙𝑙@𝐾1𝒰subscript𝑢subscript𝒯𝑢subscriptsuperscriptsuperscriptℛ′𝐾𝑢subscript𝒯𝑢Recall@K=\\frac{1}{|\\mathcal{U}|}\\sum_{u}\\frac{|\\mathcal{T}_{u}\\cap{\\mathcal{R}^{{}^{\\prime}}}^{K}_{u}|}{|\\mathcal{T}_{u}|},\nwhere ℛ′uKsubscriptsuperscriptsuperscriptℛ′𝐾𝑢{\\mathcal{R}^{{}^{\\prime}}}^{K}_{u} denotes the top-K𝐾{K} recommended tail items. Compared Methods. The proposed AUR generates recommendations with the consideration of uncertainties. To verify the effectiveness of the AUR framework, we implement AUR with three backbone models (MF, LGCN, and VAE), and compare AUR with corresponding backbone models that generate recommendations just based on expectations. MF [ref]8. This refers to the Matrix Factorization method, which predicts user preference on an item as the inner product of user and item embedding. LGCN  refers to LightGCN, which takes the simplified graph convolution networks (GCN) to better capture the collaborative information in the user-item interaction graph. We fix the number of GCN layers to 333 due to its good performance on both Yelp and Amazon . VAE [ref]16 refers to MultiVAE. This is an item-based CF method built with the variational autoencoder (VAE).\nWe set the network architecture as: 1024→512→1024→1024512→10241024\\to 512\\to 1024 and take Equation (5)\nas the optimization objective. MF-AUR/LGCN-AUR/VAE-AUR, refer to the AUR with MF, LGCN, and VAE as the expectation estimator, respectively. We set the network size of qisubscript𝑞𝑖q_{i} and pisubscript𝑝𝑖p_{i} in the uncertainty estimator as 1024 to fairly compare with VAE. To verify the ability of AUR to mitigate the popularity bias, we also compare MF-AUR with the following methods designed for addressing popularity bias applied to MF: IPS . This is a famous de-biasing method — inverse propensity scoring, which re-weights training samples to improve the tail recommendation.\n MACR . This is a SOTA method to eliminate the popularity bias in recommendation. It takes the counterfactual inference to remove the influence of popularity on recommendations, promoting the recommendation of tail items. We use the code released by the authors and tune hyperparameters in the same range as the MACR paper. PopBias . This is a method to reduce the model bias to achieve both high accuracy and high debias performance. It extends the existing BPR Loss with a new regularization term which regulates the score differences within positive and negative items. In our experiments, we choose the Z​e​r​o​S​u​m𝑍𝑒𝑟𝑜𝑆𝑢𝑚ZeroSum around all variations proposed in the paper. Moreover, we compare MF-AUR with two well-known probabilistic recommender models: PMF , which assumes that latent features and labels obey different Gaussian distributions. The variance of each distribution is treated as a hyper-parameter.\nFor fair comparison, we implement PMF with the same mini-batch strategy as AUR and tune all hyper-parameters in the ranges taken by the PMF paper. ExpoMF .\nExpoMF incorporates user exposure to items into collaborative filtering. It could avoid suppressing potential positive but mislabeled samples by decreasing the weights of negative samples exposed with lower probabilities. Regarding the exposure model of ExpoMF, we follow the ’per-item’ strategy to implement exposure covariates, i.e., encoding exposure via item popularity. Hyper-parameter Settings. \nWe optimize all models with Adam  and use the default learning rate 1​e​-​41𝑒-41e\\text{-}4 and default mini-batch size 323232. The L2subscript𝐿2L_{2} regularization coefficient is searched in the range of {1​e​-​4,1​e​-​3,1​e​-​2,1​e​-​1}1𝑒-41𝑒-31𝑒-21𝑒-1\\{1e\\text{-}4,1e\\text{-}3,1e\\text{-}2,1e\\text{-}1\\}. For baselines with embedding layers (MF, LGCN, IPS, and MACR) and the expectation estimators of MF-AUR and LGCN-AUR, the embedding size is fixed to 128128128. For MF, LGCN, VAE and all the expectation estimators of AUR, we take use of the same training strategy described in Section 2.2.1, and the sampling rate μ𝜇\\mu of this strategy is searched in the range of {0.01,0.1,0.2,0.4}0.010.10.20.4\\{0.01,0.1,0.2,0.4\\}, and in most case the optimal value of μ𝜇\\mu is 0.10.10.1. For AUR, γ𝛾\\gamma is searched in the range of {1​e​-​3,1​e​-​2}1𝑒-31𝑒-2\\{1e\\text{-}3,1e\\text{-}2\\}, and the best values are 1​e​-​31𝑒-31e\\text{-}3 and 1​e​-​21𝑒-21e\\text{-}2 for Yelp and Amazon, respectively; β𝛽\\beta is fixed to 1​e​-​21𝑒-21e\\text{-}2, and α𝛼\\alpha is searched in the range of {1,2,3,4,5}12345\\{1,2,3,4,5\\} and the default choice is 111; λ𝜆\\lambda is searched from {0,0.2,0.4,0.6,0.8,1.0}00.20.40.60.81.0\\{0,0.2,0.4,0.6,0.8,1.0\\}.\n\nReference markers found: [8]\n\nContext windows for each [ref]:\n[ref]8: of the AUR framework, we implement AUR with three backbone models (MF, LGCN, and VAE), and compare AUR with corresponding backbone models that generate recommendations just based on expectations. MF [ref]8. This refers to the Matrix Factorization method, which predicts user preference on an item as the inner product of user and item embedding. LGCN  refers to LightGCN, which takes the simplified\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 8,\n            \"titles\": [\n                \"Modeling User Exposure in Recommendation\",\n                \"Embedding-based news recommendation for millions of users\",\n                \"Billion-scale Commodity Embedding for E-commerce Recommendation in Alibaba\",\n                \"The youtube video recommendation system\",\n                \"Data sparsity issues in the collaborative filtering framework\",\n                \"Causal intervention for leveraging popularity bias in recommendation\",\n                \"One-class collaborative filtering\",\n                \"BPR: bayesian personalized ranking from implicit feedback\",\n                \"Collaborative filtering for implicit feedback datasets\",\n                \"Unbiased recommender learning from missing-not-at-random implicit feedback\",\n                \"What Uncertainties Do We Need in Bayesian Deep Learning for Computer Vision?\",\n                \"Rectifying Pseudo Label Learning via Uncertainty Estimation for Domain Adaptive Semantic Segmentation\",\n                \"A Review of Uncertainty Quantification in Deep Learning: Techniques, Applications and Challenges\",\n                \"Scalable recommendation with poisson factorization\",\n                \"Matrix factorization techniques for recommender systems\",\n                \"Variational Autoencoders for Collaborative Filtering\",\n                \"LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation\",\n                \"Probabilistic matrix factorization\",\n                \"Factorization meets the neighborhood: a multifaceted collaborative filtering model\",\n                \"Sampler Design for Implicit Feedback Data by Noisy-label Robust Learning\",\n                \"Statistical inference\",\n                \"Improving one-class collaborative filtering by incorporating rich user information\",\n                \"Model-Agnostic Counterfactual Reasoning for Eliminating Popularity Bias in Recommender System\",\n                \"Challenging the long tail recommendation\",\n                \"Causal inference for recommendation\",\n                \"Countering popularity bias by regularizing score differences\",\n                \"Adam: A method for stochastic optimization\",\n                \"The feasibility of ludgate’s analytical machine.\",\n                \"Aleatoric and epistemic uncertainty in machine learning: A tutorial introduction\",\n                \"Aleatoric uncertainty estimation with test-time augmentation for medical image segmentation with convolutional neural networks\",\n                \"Deep-learning-based neural network training for state estimation enhancement: Application to attitude estimation\",\n                \"Leveraging uncertainty information from deep neural networks for disease detection\",\n                \"Uncertainty-Aware Learning Against Label Noise on Imbalanced Datasets\",\n                \"Deep density networks and uncertainty in recommender systems\",\n                \"Bayesian deep learning based exploration-exploitation for personalized recommendations\",\n                \"M2GRL: A Multi-task Multi-view Graph Representation Learning Framework for Web-scale Recommender Systems\",\n                \"Personalised context-aware re-ranking in recommender system\",\n                \"Modeling Sequences as Distributions with Uncertainty for Sequential Recommendation\",\n                \"Convolutional Gaussian Embeddings for Personalized Recommendation with Uncertainty\",\n                \"Metaedl: Meta evidential learning for uncertainty-aware cold-start recommendations\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]8 based on the context and research area of Rethinking Missing Data: Aleatoric Uncertainty-Aware Recommendation. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}