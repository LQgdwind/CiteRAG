{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Fair Allocation Algorithms for Indivisible Items under Structured Conflict Constraints\n\nPaper Abstract: \n\nPaper Section Text:\nA tree decomposition of a graph G𝐺G is a pair\n(T,{Bt}t∈V​(T))𝑇subscriptsubscript𝐵𝑡𝑡𝑉𝑇(T,\\{B_{t}\\}_{t\\in V(T)}) consisting of a tree T𝑇T and an assignment of a set Bt⊆V​(G)subscript𝐵𝑡𝑉𝐺B_{t}\\subseteq V(G) called a bag to each node of T𝑇T such that (i) every vertex of G𝐺G is contained in a bag, (ii) for every edge {u,v}∈E​(G)𝑢𝑣𝐸𝐺\\{u,v\\}\\in E(G) there exists a bag containing both u𝑢u and v𝑣v, and (iii) for every vertex u∈V​(G)𝑢𝑉𝐺u\\in V(G) the subgraph of T𝑇T induced by the set {t∈V​(T):u∈Bt}conditional-set𝑡𝑉𝑇𝑢subscript𝐵𝑡\\{t\\in V(T)\\,:\\,u\\in B_{t}\\} is connected.\nIn our previous work , pseudopolynomial algorithms for Fair k𝑘k-Division Under Conflicts were developed for the case when the conflict graph is either chordal or has bounded treewidth.\nBoth algorithms are based on a dynamic programming approach along a tree decomposition of the conflict graph.\nIn the case of chordal graphs, each bag is a clique, while\nin the case of bounded treewidth, bags of the tree decomposition have bounded cardinality.\nIn both cases, the approach works because any optimal solution, that is, a partial k𝑘k-coloring (X1,…,Xk)subscript𝑋1…subscript𝑋𝑘(X_{1},\\ldots,X_{k}) of G𝐺G, intersects each bag only in a bounded number of vertices. This key property allows in fact for a generalization of both algorithms in a unified way, by requiring the conflict graph G𝐺G to be equipped with a tree decomposition with bounded independence number, that is, the maximum size of an independent set of G𝐺G contained in a bag.\nThe minimum independence number of a tree decomposition of a graph G𝐺G is called the tree-independence number of G𝐺G and denoted by 𝗍𝗋𝖾𝖾​-​α​(G)𝗍𝗋𝖾𝖾-𝛼𝐺\\mathsf{tree}\\textnormal{-}\\alpha(G).\nThis parameter was introduced independently by Yolov  and by Dallard, Milanič, and Štorgel [ref]20.\nGraph classes with bounded treewidth have bounded tree-independence number, but bounded tree-independence number also holds for several classes of dense graphs such as chordal graphs, circular-arc graphs, or more generally H𝐻H-graphs, that is, intersection graphs of connected subgraphs of a subdivision of a fixed multigraph H𝐻H (see    [ref]31) or intersection graphs of connected subgraphs of a graph with bounded treewidth , classes of graphs in which all minimal separators are of bounded size 1, and classes of graphs excluding a single fixed graph H𝐻H as an induced minor, where H𝐻H is either K5−superscriptsubscript𝐾5K_{5}^{-}, W4subscript𝑊4W_{4}, or a complete bipartite graph K2,nsubscript𝐾2𝑛K_{2,n} for some n𝑛n .\nFurthermore, several recent works (see   ) use tree decompositions with special properties of bags that imply bounded tree-independence number. Yolov , Dallard, Milanič, and Štorgel [ref]20, and Milanič and Rza̧żewski 1 identified several algorithmic problems that can be solved in polynomial time if the input graph is equipped with a tree decomposition with bounded independence number.\nThese include the Maximum Weight Independent Packing problem, which is a common generalization of the Independent Set and Induced Matching problems, and the problem of finding a large induced sparse subgraph satisfying an arbitrary but fixed property expressible in counting monadic second-order logic.\nAs shown by Dallard et al. [ref]19, for every constant k≥4𝑘4k\\geq 4 it is NP-complete to decide if a given graph has tree-independence number at most k𝑘k.\nHowever, for algorithmic applications of bounded tree-independence number, this is not necessarily an obstacle, since Dallard et al. also gave an algorithm that, given an n𝑛n-vertex graph G𝐺G and an integer k𝑘k, in time 2𝒪​(k2)​n𝒪​(k)superscript2𝒪superscript𝑘2superscript𝑛𝒪𝑘2^{\\mathcal{O}(k^{2})}n^{\\mathcal{O}(k)} either outputs a tree decomposition of G𝐺G with independence number at most 8​k8𝑘8k, or determines that the tree-independence number of G𝐺G is larger than k𝑘k. The approach developed in our previous work  leading to dynamic programming algorithms for Fair k𝑘k-Division Under Conflicts in chordal graphs and graphs with bounded treewidth can also be used to prove the following more general result. For every two positive integers k𝑘k and ℓℓ\\ell, Fair k𝑘k-Division Under Conflicts is solvable in time 𝒪​(b​nk​ℓ+1​(Q+1)2​k)𝒪𝑏superscript𝑛𝑘ℓ1superscript𝑄12𝑘\\mathcal{O}(bn^{k\\ell+1}(Q+1)^{2k}) if the input n𝑛n-vertex conflict graph G𝐺G is equipped with a tree decomposition with b𝑏b bags and independence number at most ℓℓ\\ell, where Q=max1≤j≤k⁡pj​(V​(G))𝑄subscript1𝑗𝑘subscript𝑝𝑗𝑉𝐺Q=\\max_{1\\leq j\\leq k}p_{j}(V(G)). The approach is a straightforward adaptation of the approach used in Sections 3.3 and 3.4 of , hence we only explain the main ideas.\nGiven a tree decomposition of G𝐺G with b𝑏b bags and independence number at most ℓℓ\\ell, we first invoke [20, Lemma 5.1] to compute in time 𝒪​(n2​b)𝒪superscript𝑛2𝑏\\mathcal{O}(n^{2}b) a nice rooted tree decomposition 𝒯=(T,{Bt}t∈V​(T))𝒯𝑇subscriptsubscript𝐵𝑡𝑡𝑉𝑇\\mathcal{T}=(T,\\{B_{t}\\}_{t\\in V(T)}) of G𝐺G with 𝒪​(n​b)𝒪𝑛𝑏\\mathcal{O}(nb) bags and independence number at most ℓℓ\\ell (we refer to  for the definition of a nice tree decomposition).\nFor a node t𝑡t of T𝑇T, let Vtsubscript𝑉𝑡V_{t} denote the union of all bags Bt′subscript𝐵superscript𝑡′B_{t^{\\prime}} such that t′∈V​(T)superscript𝑡′𝑉𝑇t^{\\prime}\\in V(T) is a (not necessarily proper) descendant of t𝑡t in T𝑇T.\nIn our dynamic programming approach we then traverse the tree T𝑇T bottom-up and compute, for every node t∈V​(T)𝑡𝑉𝑇t\\in V(T) and every partial k𝑘k-coloring c𝑐c of the subgraph of G𝐺G induced by Btsubscript𝐵𝑡B_{t}, the family P​(t,c)𝑃𝑡𝑐P(t,c) of all profit profiles of partial k𝑘k-colorings of the graph G​[Vt]𝐺delimited-[]subscript𝑉𝑡G[V_{t}] that agree with c𝑐c on Btsubscript𝐵𝑡B_{t}.\nThe maximum satisfaction level over all profit profiles in the set P​(c,t)𝑃𝑐𝑡P(c,t) where t𝑡t is the root of T𝑇T will give the optimal value of Fair k𝑘k-Division Under Conflicts for (G,p1,…,pk)G,p_{1},\\ldots,p_{k}). Since each bag induces a subgraph with independence number at most ℓℓ\\ell, each partial k𝑘k-coloring c=(X1,…,Xk)𝑐subscript𝑋1…subscript𝑋𝑘c=(X_{1},\\ldots,X_{k}) of the subgraph of G𝐺G induced by Btsubscript𝐵𝑡B_{t} satisfies |Xj|≤ℓsubscript𝑋𝑗ℓ|X_{j}|\\leq\\ell for all j∈[ℓ]𝑗delimited-[]ℓj\\in[\\ell].\nIt follows that the number of such partial k𝑘k-colorings is bounded by 𝒪​(nk​ℓ)𝒪superscript𝑛𝑘ℓ\\mathcal{O}(n^{k\\ell}).\nFor a given node t𝑡t of T𝑇T and a partial k𝑘k-coloring c𝑐c of G​[Bt]𝐺delimited-[]subscript𝐵𝑡G[B_{t}], the family P​(t,c)𝑃𝑡𝑐P(t,c) of profit profiles of partial k𝑘k-colorings of the graph G​[Vt]𝐺delimited-[]subscript𝑉𝑡G[V_{t}] that agree with c𝑐c on Btsubscript𝐵𝑡B_{t} can be computed from the analogous families already computed at the children of t𝑡t (if any).\nThis is done by using exactly the same recurrence relations as the ones used for graphs of bounded treewidth, see Section 3.4 of .\nIndeed, the proof of correctness of those relations does not depend on the structure of the subgraphs induced by the bags, the only difference resulting from replacing bounded treewidth with bounded tree-independence number is in the running time.\nFor a given node t𝑡t of T𝑇T and a partial k𝑘k-coloring c𝑐c of G​[Bt]𝐺delimited-[]subscript𝐵𝑡G[B_{t}], the set P​(t,c)𝑃𝑡𝑐P(t,c) can be computed in time 𝒪​((Q+1)2​k)𝒪superscript𝑄12𝑘\\mathcal{O}((Q+1)^{2k}).\nSince T𝑇T has 𝒪​(b​n)𝒪𝑏𝑛\\mathcal{O}(bn) nodes and for each node t𝑡t there are 𝒪​(nk​ℓ)𝒪superscript𝑛𝑘ℓ\\mathcal{O}(n^{k\\ell}) partial k𝑘k-colorings c𝑐c of the graph G​[Bt]𝐺delimited-[]subscript𝐵𝑡G[B_{t}], the total number of families P​(t,c)𝑃𝑡𝑐P(t,c) to compute is of the order 𝒪​(b​nk​ℓ+1)𝒪𝑏superscript𝑛𝑘ℓ1\\mathcal{O}(bn^{k\\ell+1}).\nThe claimed time complexity of the algorithm follows.\n∎ The case of chordal graphs corresponds to ℓ=1ℓ1\\ell=1 and b=𝒪​(n)𝑏𝒪𝑛b=\\mathcal{O}(n) (see, e.g., 2) and indeed, for these values of ℓℓ\\ell and p𝑝p, Theorem 5 implies [12, Theorem 19].\nFor graphs of bounded treewidth Theorem 5 also implies a pseudopolynomial algorithm, although its running time does not match the corresponding tailor-made result of [12, Theorem 20].\n\nReference markers found: [20]\n\nContext windows for each [ref]:\n[ref]20: the tree-independence number of G𝐺G and denoted by 𝗍𝗋𝖾𝖾​-​α​(G)𝗍𝗋𝖾𝖾-𝛼𝐺\\mathsf{tree}\\textnormal{-}\\alpha(G).\nThis parameter was introduced independently by Yolov  and by Dallard, Milanič, and Štorgel [ref]20.\nGraph classes with bounded treewidth have bounded tree-independence number, but bounded tree-independence number also holds for several classes of dense graphs such as chordal graphs,\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 20,\n            \"titles\": [\n                \"Treewidth versus clique number. III. Tree-independence number of graphs with a forbidden structure\",\n                \"The Santa Claus problem\",\n                \"Minimax relations for the partial q𝑞q-colorings of a graph\",\n                \"A logic-based algorithmic meta-theorem for mim-width\",\n                \"Precoloring extension. I. Interval graphs\",\n                \"Linear-time register allocation for a fixed number of registers\",\n                \"On the complexity of scheduling incompatible jobs with unit-times\",\n                \"On the thinness and proper thinness of a graph\",\n                \"Intersection models and forbidden pattern characterizations for 2-thin and proper 2-thin graphs\",\n                \"Testing for the consecutive ones property, interval graphs, and graph planarity using PQ-tree algorithms\",\n                \"Kernelization of graph Hamiltonicity: proper H𝐻H-graphs\",\n                \"On H𝐻H-topological intersection graphs\",\n                \"Fair allocation of indivisible items with conflict graphs\",\n                \"On the relationship between clique-width and treewidth\",\n                \"Computations by fly-automata beyond monadic second-order logic\",\n                \"Handle-rewriting hypergraph grammars\",\n                \"Linear time solvable optimization problems on graphs of bounded clique-width\",\n                \"Upper bounds to the clique width of graphs\",\n                \"Parameterized algorithms\",\n                \"Computing tree decompositions with small independence number\",\n                \"Treewidth versus clique number. II. Tree-independence number\",\n                \"Paths, trees and matchings under disjunctive constraints\",\n                \"A framework for exponential-time-hypothesis-tight algorithms and lower bounds in geometric intersection graphs\",\n                \"Packing independent sets and transversals\",\n                \"On List 𝑘-Coloring Convex Bipartite Graphs\",\n                \"Classes of graphs with small rank decompositions are χ𝜒\\\\chi-bounded\",\n                \"How to solve NP-hard graph problems on clique-width bounded graphs in polynomial time\",\n                \"Scheduling with conflicts: online and offline algorithms\",\n                \"Clique-width is NP-complete\",\n                \"Subexponential parameterized algorithms and kernelization on almost chordal graphs\",\n                \"On the tractability of optimization problems on H𝐻H-graphs\",\n                \"Fast FPT-Approximation of Branchwidth\",\n                \"Algorithms for vertex-partitioning problems on graphs with fixed clique-width\",\n                \"Geometric algorithms and combinatorial optimization, volume 2 of Algorithms and Combinatorics: Study and Research Texts\",\n                \"A comparison of two approaches for polynomial time algorithms computing basic graph parameters\",\n                \"Structural Parameterizations with Modulator Oblivion\",\n                \"Mim-Width I. Induced path problems\",\n                \"Finding branch-decompositions of matroids, hypergraphs, and more\",\n                \"Efficient algorithms for finding maximum matchings in convex bipartite graphs and related problems\",\n                \"The stable set problem and the thinness of a graph\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]20 based on the context and research area of Fair Allocation Algorithms for Indivisible Items under Structured Conflict Constraints. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}