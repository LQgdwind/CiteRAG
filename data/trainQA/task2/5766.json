{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: A template for Arxiv Style Citation: Authors. Title. Pages…. DOI:000000/11111.\n\nPaper Abstract: \n\nPaper Section Text:\nFrom Sections 3.2 and 4, we know how a Verifier can get access to at least one weight shard ω𝜔\\omega snapshotted during a large-scale training run.\nIn this section, we will show how the Verifier can use this weight shard to determine whether the associated training run followed the agreed-upon rules. On its own, knowing ω𝜔\\omega is useless to the Verifier, since the Verifier does not know the values of the other weight-shards comprising the NN, or even how many other weight shards there are.\nYet ω𝜔\\omega holds the key to the training run’s history.\nAny given weight-shard vector is incredibly unlikely to be yielded by the training process (there are ≫2106much-greater-thanabsentsuperscript2superscript106\\gg 2^{10^{6}} possibilities even if we round to 1-bit precision).\nBut this particular ω𝜔\\omega is the nearly-deterministic result of the training run’s hyperparameters 𝕄𝕄\\mathbb{M} (including its random seed) and sequence of training data 𝔻𝔻\\mathbb{D}.\nWe refer to this information, along with information yielded throughout the training run 𝕎𝕎\\mathbb{W} (such as intermediate weight snapshots), as the model’s training transcript 𝕋={𝕄,𝔻,𝕎}𝕋𝕄𝔻𝕎\\mathbb{T}=\\{\\mathbb{M},\\mathbb{D},\\mathbb{W}\\}.\nIt is plausible that it would be very difficult for the Prover to find a second “legitimate” training transcript 𝕋′={𝕄′,𝔻′,𝕎′}≠𝕋superscript𝕋′superscript𝕄′superscript𝔻′superscript𝕎′𝕋\\mathbb{T}^{\\prime}=\\{\\mathbb{M}^{\\prime},\\mathbb{D}^{\\prime},\\mathbb{W}^{\\prime}\\}\\neq\\mathbb{T} that would exactly yield a full set of weights that included ω𝜔\\omega as a contiguous weight-shard.\nIt is also plausible that, if the Prover tried to lie and provide an ℍ′,𝔻′superscriptℍ′superscript𝔻′\\mathbb{H}^{\\prime},\\mathbb{D}^{\\prime}, and 𝕄′superscript𝕄′\\mathbb{M}^{\\prime} that would not result in ω𝜔\\omega but which they claimed would result in ω𝜔\\omega, then the Verifier might find a suite of tests that would detect such a faked transcript reliably.\nIf the Verifier could reliably detect such fakes,\nthen by asking the Prover to provide a training transcript that would yield each logged snapshot ω𝜔\\omega, the Verifier could force the Prover to reveal the true data 𝔻𝔻\\mathbb{D}, and hyperparameters 𝕄𝕄\\mathbb{M} used in every large-scale training run (along with the full weights of the resulting model, not just ω𝜔\\omega).\nThis would be sufficient information to check that the training run complied with any of the training rule types listed in Section 2.1. Unfortunately, having the Verifier simply re-run the full training process to verify a transcript’s correctness is unworkable for several reasons.\nFirst, the Prover would likely not be willing to reveal their training data, model weights, and hyperparameters, so the Verifier must do any verification without direct access to the data. (We address this in Section 5.2.)\nSecond, the compute cost to fully re-run the training transcript would be massive, as large as every original training run.\nThird, the training run would likely not be perfectly reproducible: due to hardware-level noise, even two repetitions of the same sequence of training updates would gradually diverge.\nFourth, the Prover may be able to construct a second “spoof” training transcript, that yields an exact match for ω𝜔\\omega but differs from the original training run that yielded ω𝜔\\omega in the first place.181818As a trivial example, the Prover could claim that ω𝜔\\omega was simply the value of the random initialization, and no training had happened at the time of the snapshot. Thanfully, a close variant of this problem has already been studied in the literature, known as “Proof of Learning” [ref]24.\nThe goal of a Proof-of-Learning (PoL) schema is to establish proof of ownership over a model Wtsubscript𝑊𝑡W_{t} (e.g., to corroborate IP claims) by having the model-trainer save the training transcript 𝕋𝕋\\mathbb{T} (including hyperparameters 𝕄𝕄\\mathbb{M}, data sequence 𝔻𝔻\\mathbb{D}, and a series of intermediate full-model weight checkpoints191919We use “weight checkpoints” as shorthand, but if using an optimizer like Adam , the optimizer state should also be included. 𝕎={W0,Wk,W2​k​…}𝕎subscript𝑊0subscript𝑊𝑘subscript𝑊2𝑘…\\mathbb{W}=\\{W_{0},W_{k},W_{2k}\\dots\\}) which only the original model trainer would know.\nJia et al. [ref]24 propose a verification procedure that makes it difficult for any third party to construct a spoofed transcript 𝕋′superscript𝕋′\\mathbb{T}^{\\prime}, if they only have access to Wtsubscript𝑊𝑡W_{t} and the unordered dataset. The solution of [ref]24 is as follows: once a Prover reports a training transcript 𝕋𝕋\\mathbb{T}, the Verifier checks that the initialization appears random, and then chooses a number of pairs of adjacent weight snapshots that are k𝑘k gradient steps apart (Wi,Wi+k),…,(Wj,Wj+k)subscript𝑊𝑖subscript𝑊𝑖𝑘…subscript𝑊𝑗subscript𝑊𝑗𝑘(W_{i},W_{i+k}),\\dots,(W_{j},W_{j+k}).\nThen, rather than re-running all of training, the Verifier only reruns the training of these specific segments, starting at Wisubscript𝑊𝑖W_{i} and progressing through the appropriate data batches Di​…​Di+ksubscript𝐷𝑖…subscript𝐷𝑖𝑘D_{i}\\dots D_{i+k} to yield a Wi+k′superscriptsubscript𝑊𝑖𝑘′W_{i+k}^{\\prime}.\nThe Verifier then confirms that the resulting checkpoint is approximately correct: ‖Wi+k−Wi+k′‖2<ϵsubscriptnormsubscript𝑊𝑖𝑘superscriptsubscript𝑊𝑖𝑘′2italic-ϵ\\|W_{i+k}-W_{i+k}^{\\prime}\\|_{2}<\\epsilon for some small ϵitalic-ϵ\\epsilon that depends on the reproduction noise and the number of steps k𝑘k.\nThe original paper proposed a heuristic for choosing which segments to verify,\nthough subsequent papers have demonstrated spoofing attacks that evade the original verification approach  [ref]15.\nThus far, the literature on PoL has been heuristic-based, and discovering PoL protocols with higher degrees of reliability is the subject of ongoing work [ref]15.\n\nReference markers found: [24]\n\nContext windows for each [ref]:\n[ref]24: random initialization, and no training had happened at the time of the snapshot. Thanfully, a close variant of this problem has already been studied in the literature, known as “Proof of Learning” [ref]24.\nThe goal of a Proof-of-Learning (PoL) schema is to establish proof of ownership over a model Wtsubscript𝑊𝑡W_{t} (e.g., to corroborate IP claims) by having the model-trainer save the training\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 24,\n            \"titles\": [\n                \"Scaling Laws for Neural Language Models\",\n                \"Comparison Between Android and iOS Operating System in Terms of Security\",\n                \"Security Against Covert Adversaries: Efficient Protocols for Realistic Adversaries\",\n                \"Training a Helpful and Harmless Assistant with Reinforcement Learning from Human Feedback\",\n                \"Nuclear Arms Control Verification and Lessons for AI Treaties \",\n                \"BIS Press Release: Advanced Computing and Semiconductor Manufacturing Controls\",\n                \"Language Models are Few-Shot Learners\",\n                \"The Malicious Use of Artificial Intelligence: Forecasting, Prevention, and Mitigation\",\n                \"Federal Statistical Research Data Centers\",\n                \"Design of security enhanced TPM chip against invasive physical attacks\",\n                \"PaLM: Scaling Language Modeling with Pathways\",\n                \"Wyden, Booker and Clarke Introduce Algorithmic Accountability Act of 2022 to require new transparency and accountability for Automated Decision Systems\",\n                \"New Weapons, Proven Precedent: Elements of and Models for a Treaty on Killer Robots\",\n                \"Regulating Artificial Intelligence Proposal for a Global Solution\",\n                \"Algorithmic progress in computer vision\",\n                \"On the Fundamental Limits of Formally (Dis) Proving Robustness in Proof-of-Learning\",\n                \"Predictability and Surprise in Large Generative Models\",\n                \"NVIDIA Has Reinstated its RTX 3060 Ethereum Cryptocurrency Mining Limit\",\n                \"The Untold Story of NotPetya, the Most Devastating Cyberattack in History\",\n                \"IAEA Safeguards and Detection of Undeclared Nuclear Activities\",\n                \"Unsolved Problems in ML Safety\",\n                \"Training Compute-Optimal Large Language Models\",\n                \"AI and International Stability: Risks and Confidence-Building Measures\",\n                \"Computational Power and the Social Impact of Artificial Intelligence\",\n                \"Proof-of-Learning: Definitions and Practice\",\n                \"Adam: A Method for Stochastic Optimization\",\n                \"Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems\",\n                \"US20140130151A1 - Methods for Providing Anti-Rollback Protection of a Firmware Version in a Device Which Has No Internal Non-Volatile Memory\",\n                \"Google Launches a 9 Exaflop Cluster of Cloud TPU V4 Pods Into Public Preview\",\n                \"VCNN: Verifiable convolutional neural network based on ZK-Snarks\",\n                \"Lightweight Threat Model: OpenTitan documentation\",\n                \"List of Semiconductor Fabrication Plants\",\n                \"On the Reproducibility and Replicability of Deep Learning in Software Engineering\",\n                \"Trojaning Attack on Neural Networks\",\n                \"Large Language Models Generate Functional Protein Sequences Across Diverse Families\",\n                \"Teaching Small Language Models to Reason\",\n                \"AI Verification-Mechanisms to Ensure AI Arms Control Compliance\",\n                \"NVIDIA Updates GeForce EULA to Prohibit Data Center Use\",\n                \"A Day in the Life of a Nuclear Safeguards Inspector\",\n                \"Nuclear Power by Country\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]24 based on the context and research area of A template for Arxiv Style Citation: Authors. Title. Pages…. DOI:000000/11111.. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}