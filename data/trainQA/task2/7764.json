{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Unifying Asynchronous Logics for Hyperproperties\n\nPaper Abstract: \n\nPaper Section Text:\nTemporal logics  play a fundamental role in the formal\nverification of the dynamic behaviour of complex reactive systems.\nClassic regular temporal logics such as LTL, CTL, and\nCTL∗   are suited for the specification of\ntrace properties which describe the ordering of events along individual execution\ntraces of a system. In the last decade, a novel specification paradigm has been introduced\nthat generalizes traditional regular trace properties by properties of\nsets of traces, the so called\nhyperproperties .\nHyperproperties relate distinct traces and are useful to formalize a wide range of properties\nof prime interest which go, in general,\nbeyond regular properties and cannot be expressed in standard regular temporal logics.\nA relevant example concerns information-flow security policies like\nnoninterference   and observational\ndeterminism  which compare observations made by an\nexternal low-security agent along traces resulting from different\nvalues of not directly observable inputs. Other examples include bounded termination of programs,\ndiagnosability of critical systems (which amounts to checking whether the available sensors information is sufficient\nto infer the presence of faults on the hidden behaviour of the system)   , and epistemic properties describing the\nknowledge of agents in distributed systems  6 . In the context of model checking of finite-state reactive systems, many temporal logics for hyperproperties have been proposed    3   \nfor which model checking is decidable, including\nHyperLTL , HyperCTL∗ ,\nHyperQPTL 3 , and HyperPDL−ΔΔ-\\Delta \nwhich extend LTL, CTL∗, QPTL 5, and\nPDL , respectively, by explicit first-order\nquantification over traces and trace variables to refer to multiple\ntraces at the same time. The semantics of all these logics is synchronous\nand the temporal modalities are evaluated by a\nlockstepwise traversal of all the traces assigned to the quantified\ntrace variables. Other approaches for the formalization of synchronous hyper logics are either based on hyper variants\nof monadic second-order logic over traces or trees , or the\nadoption of a team semantics for standard temporal logics, in particular, LTL   9.\nFor the first approach in the linear-time setting,\nwe recall the logic S1S[E]  (and its first-order fragment FO[<<,E] )\nwhich syntactically extends monadic second-order logic of one successor S1S with the equal-level predicate\nE, which relate the same time point on different traces. More recently, an extension of HyperLTL with second-order quantification over traces\nhas been introduced  which allows to express common knowledge in multi-agent distributed systems. Like S1S[E], model checking of this extension\nof HyperLTL is highly undecidable . Hyper logics supporting asynchronicity features have been introduced recently 1 [ref]1 [ref]7.\nThese logics allow to relate traces at distinct time points which can be arbitrarily far\nfrom each other. Asynchronicity is ubiquitous in many real-world systems, for example, in multithreaded environments in which threads are not scheduled lokstepwise,\nand traces associated with distinct threads progress with different speed.\nAsynchronous hyperproperties are also useful in information-flow security and diagnosability settings where an\nobserver cannot distinguish\nconsecutive time points along an execution having the same\nobservation. This requires asynchronously matching sequences of observations along\ndistinct execution traces.\nThe first systematic study of asynchronous hyperproperties was done by Gutsfeld et al. 1, who introduced\nthe temporal fixpoint calculus Hμ and its automata-theoretic counterpart for expressing such class of properties in the linear-time\nsetting. More recently, three temporal logics [ref]1 [ref]7 which syntactically extend HyperLTL have been introduced\nfor expressing asynchronous hyperproperties: Asynchronous HyperLTL\n(A-HyperLTL) [ref]1 and Stuttering HyperLTL (HyperLTLSS{}_{\\textsf{S}}) [ref]7, both\nuseful for asynchronous security analysis, and Context HyperLTL (HyperLTLCC{}_{\\textsf{C}}), useful for expressing hyper-bounded-time response\nrequirements. The logic A-HyperLTL, which is expressively incomparable with both HyperLTL and HyperLTLSS{}_{\\textsf{S}} [ref]8, models asynchronicity by means of an additional quantification layer over the so called trajectories which control the relative speed at which traces progress by choosing\nat each instant which traces move and which traces stutter. On the other hand, the logic HyperLTLSS{}_{\\textsf{S}}\nexploits relativized versions of\nthe temporal modalities with respect to finite sets ΓΓ\\Gamma of LTL\nformulas: these modalities are evaluated by a lockstepwise traversal of the sub-traces of the\ngiven traces which are obtained by removing “redundant” positions\nwith respect to the pointwise evaluation of the LTL formulas in\nΓΓ\\Gamma. Finally, the logic HyperLTLCC{}_{\\textsf{C}} (which is not expressively subsumed by both A-HyperLTL and HyperLTLSS{}_{\\textsf{S}} [ref]8) extends HyperLTL by unary modalities ⟨C⟩delimited-⟨⟩𝐶\\langle C\\rangle parameterized by\na non-empty subset C𝐶C of trace variables—called the\ncontext—which restrict the evaluation of the temporal\nmodalities to the traces associated with the variables in C𝐶C. It is known that these three syntactical extensions of HyperLTL are less expressive than\nHμ [ref]8 and like Hμ, model checking the respective quantifier alternation-free\nfragments are already undecidable [ref]1 [ref]7. The works [ref]1 [ref]7 identify practical fragments\nof the logics A-HyperLTL and HyperLTLSS{}_{\\textsf{S}} with a decidable model checking problem. In particular, we recall the so called simple fragment of HyperLTLSS{}_{\\textsf{S}} [ref]7 which is more expressive than HyperLTL [ref]8, and can specify interesting security policies in the asynchronous setting. Formalization of asynchronous hyperpropries in the team semantics setting following an approach similar to the trajectory construct of A-HyperLTL has been investigated in . It is worth noting that unlike other hyper logics (including logics with team semantics) which only capture regular trace properties when interpreted on singleton sets of traces, the logics HyperLTLCC{}_{\\textsf{C}}, A-HyperLTL, and Hμ can express non-regular trace properties [ref]8. Our contribution. Specifications in HyperLTL and in the known asynchronous extensions of HyperLTL, whose most expressive representative is Hμ 1, consist of a prefix of trace quantifiers followed by a quantifier-free formula which expresses temporal requirements on a fixed number of traces. Thus, these hyper logics lack mechanisms to relate directly an unbounded number of traces, which are required for example to express bounded termination or diagnosability properties   . This ability is partially supported by temporal logics with team semantics   9 and extensions of temporal logics\nwith the knowledge modalities of epistemic logic , which\nrelate computations whose histories are observationally equivalent for a\ngiven agent. In this paper, we introduce and investigate an hyper logical framework in the linear-time setting which unifies two known asynchronous extensions of HyperLTL and the well-known extension KLTL  of LTL with knowledge modalities under both the\nsynchronous and asynchronous perfect recall semantics (where an agent remembers the\nwhole sequence of its observations). The novel logic, we call generalized HyperLTL with stuttering and contexts (GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}} for short),\nmerges HyperLTLSS{}_{\\textsf{S}} and HyperLTLCC{}_{\\textsf{C}} and adds two\nnew natural modeling facilities: past temporal modalities for asynchronous hyperproperties and general trace quantification where trace quantifiers can occur in\nthe scope of temporal modalities. Past temporal modalities used in combination with context modalities provide a powerful mechanism to compare histories of computations at distinct time points. Moreover, unrestricted trace quantification allows to relate an unbounded number of traces. As a main contribution, we individuate a meaningful fragment of GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}} with a decidable model-checking problem, we call simple GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}},\nwhich is obtained from GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}} by carefully imposing restrictions on the use of the stuttering and context modalities. This fragment allows quantification over arbitrary pointed traces (i.e., traces plus time points) in the style of FO[<<,E] ), it is more expressive than the simple fragment of HyperLTLSS{}_{\\textsf{S}} [ref]7, and it is expressively incomparable with full HyperLTLSS{}_{\\textsf{S}} and S1S[E]. Moreover, this fragment subsumes both KLTL under the synchronous semantics and the one-agent fragment of KLTL under the asynchronous semantics. In fact, simple GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}} can be seen as the\nmaximal fragment of GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}} with a decidable model checking problem which strictly subsumes HyperLTL and the simple fragment of HyperLTLSS{}_{\\textsf{S}}, is closed under Boolean connectives, and allows an unrestricted nesting of temporal modalities. We justify the relevance of simple GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}} by showing that it can express diagnosability properties, interesting classes of information-flow security policies, both in the synchronous and asynchronous settings, and bounded termination (more in general, global promptness in the style of Prompt LTL 5). To the best of our knowledge, simple GHyperLTLS+CSC{}_{\\textsf{S}+\\textsf{C}} represents the unique hyper logic with a decidable model-checking problem which can express powerful non-regular trace properties when interpreted on singleton sets of traces.\n\nReference markers found: [1]\n\nContext windows for each [ref]:\n[ref]1: in multi-agent distributed systems. Like S1S[E], model checking of this extension\nof HyperLTL is highly undecidable . Hyper logics supporting asynchronicity features have been introduced recently 1 [ref]1 [ref]7.\nThese logics allow to relate traces at distinct time points which can be arbitrarily far\nfrom each other. Asynchronicity is ubiquitous in many real-world systems, for example, in\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 1,\n            \"titles\": [\n                \"Second-Order Hyperproperties\",\n                \"A Temporal Logic for Asynchronous Hyperproperties\",\n                \"Diagnosability of fair transition systems\",\n                \"(Asynchronous) temporal logics for hyperproperties on finite traces\",\n                \"Formal Design of Asynchronous Fault Detection and Identification Components using Temporal Epistemic Logic\",\n                \"Unifying Hyper and Epistemic Temporal Logics\",\n                \"Asynchronous Extensions of HyperLTL\",\n                \"Expressiveness and Decidability of Temporal Logics for Asynchronous Hyperproperties\",\n                \"Temporal Logics for Hyperproperties\",\n                \"Hyperproperties\",\n                \"The hierarchy of hyperlogics\",\n                \"Model Checking Information Flow in Reactive Systems\",\n                \"“Sometimes” and “Not Never” revisited: on branching versus linear time temporal logic\",\n                \"Reasoning about knowledge, volume 4\",\n                \"Deciding Hyperproperties\",\n                \"The first-order logic of hyperproperties\",\n                \"Propositional Dynamic Logic of Regular Programs\",\n                \"Security Policies and Security Models\",\n                \"Temporal Team Semantics Revisited\",\n                \"Propositional Dynamic Logic for Hyperproperties\",\n                \"Automata and Fixpoints for Asynchronous Hyperproperties\",\n                \"Secrecy in multiagent systems\",\n                \"The Complexity of Reasoning about Knowledge and Time: Extended Abstract\",\n                \"Team Semantics for the Specification and Verification of Hyperproperties\",\n                \"From liveness to promptness\",\n                \"Weak alternating automata are not that weak\",\n                \"An Automata-Theoretic Approach to Branching-Time Model Checking\",\n                \"On the Complexity of Linear Temporal Logic with Team Semantics\",\n                \"The Temporal Logic of Reactive and Concurrent Systems - Specification\",\n                \"A General Theory of Composition for a Class of “Possibilistic” Properties\",\n                \"Alternating finite automata on ω𝜔\\\\omega-words\",\n                \"The Temporal Logic of Programs\",\n                \"A temporal logic approach to information-flow control\",\n                \"Diagnosability of discrete-event systems\",\n                \"The Complementation Problem for Büchi Automata with Applications to Temporal Logic\",\n                \"Model checking knowledge and time in systems with perfect recall (extended abstract)\",\n                \"Reasoning about infinite computations\",\n                \"A temporal fixpoint calculus\",\n                \"Linear-time Temporal Logic with Team Semantics: Expressivity and Complexity\",\n                \"Observational Determinism for Concurrent Program Security\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]1 based on the context and research area of Unifying Asynchronous Logics for Hyperproperties. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}