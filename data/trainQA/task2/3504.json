{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Rare Gems: Finding Lottery Tickets at Initialization\n\nPaper Abstract: \n\nPaper Section Text:\nFollowing the pioneering work of Frankle & Carbin [ref]9, the search for lottery tickets has grown across several applications, such as language tasks, graph neural networks and federated learning [ref]4  3 .\nWhile the LTH itself has yet to be proven mathematically, the so-called strong LTH has been derived which shows that any target network can be approximated by pruning a randomly initialized network with minimal overparameterization  0 .\nRecently, it has been shown that for such approximation results it suffices to prune a random binary network with slightly larger overparameterization 6 . While network pruning has been studied since the 1980s,\nfinding sparse subnetworks at initialization is a more recently explored approach. Lee et al.  propose SNIP, which prunes based on a heuristic that approximates the importance of a connection.\nTanaka et al. 8 propose SynFlow which prunes the network to a target sparsity without ever looking at the data.\nWang et al. 9 propose GraSP which computes the importance of a weight based on the Hessian gradient product.\nThe goal of these algorithms is to find a subnetwork that can be trained to high accuracy. Ramanujan et al. 1 propose Edge-Popup (EP) which finds a subnetwork at initialization that has high accuracy to begin with.\nUnfortunately, they also note that these subnetworks are not conducive to further finetuning. The above algorithms are all based on the idea that one can assign a “score” to each weight to measure its importance. Once such a score is assigned, one simply keeps the top fraction of these scores based on the desired target sparsity. This may be done by sorting the scores layer-wise or globally across the network. Additionally, this can be done in one-shot (SNIP, GraSP) or iteratively (SynFlow). Note that IMP can also be fit into the above framework by defining the “score” to be the magnitude of the weights and then pruning globally across the network iteratively. More recently, Alizadeh et al.  propose ProsPr which utilizes the idea of meta-gradients through the first few steps of optimization to determine which weights to prune. Their intuition is that this will lead to masks at initialization that are more amenable to training to high accuracy within a few steps. While it finds high accuracy subnetworks, we show in Section 4.2 that it fails to pass the sanity checks of Frankle et al. 1 and Su et al. 7. A natural question that arises with pruning at initialization is whether these algorithms are truly finding interesting and nontrivial subnetworks, or if their performance after finetuning can be matched by simply training equally sparse, yet random subnetworks. Ma et al.  propose more rigorous definitions of winning tickets and study IMP under several settings with careful tuning of hyperparameters.\nFrankle et al. 1 and Su et al. 7 introduce several sanity checks (i) Random shuffling (ii) Weight reinitialization (iii) Score inversion and (iv) Random Tickets. Even at their best performance, they show that SNIP, GraSP and SynFlow merely find a good sparsity ratio in each layer and fail to surpass, in term of accuracy, fully trained randomly selected subnetworks, whose sparsity per layer is similarly tuned. Frankle et al. 1 show through extensive experiments that none of these methods show accuracy deterioration after random reshuffling.\nWe explain the sanity checks in detail in Section 4 and use them as baselines to test our own algorithm. While the above algorithms prune at/near initialization, there exists a rich literature on algorithms which prune during/after training. Unlike IMP, algorithms in this category do not rewind the weights. They continue training and pruning iteratively. Frankle et al. 1 and Gale et al. 2 show that pruning at initialization cannot hope to compete with these algorithms. While they do not find lottery tickets, they do find high accuracy sparse networks. Zhu & Gupta  propose a gradual pruning schedule where the smallest fraction of weights are pruned at a predefined frequency. They show that this results in models up to 95% sparsity with negligible loss in performance on language as well as image processing tasks. Gale et al. 2 and Frankle et al. 1 also study this as a baseline under the name magnitude pruning after training. Renda et al. 2 show that rewinding the learning rate as opposed to weights(like in IMP) leads to the best performing sparse networks. However, it is important to remark that these are not Lottery Tickets, merely high accuracy sparse networks. We contrast these different methods in Table 1 in terms of whether they prune at initialization, their finetunability, whether they pass sanity checks as well as their computational costs. Finally, we note that identifying a good pruning mask can be thought of as training a binary network where the loss is computed over the element-wise product of the original network with the mask. This has been explored in the quantization during training literature  4 9.\n\nReference markers found: [9]\n\nContext windows for each [ref]:\n[ref]9: Following the pioneering work of Frankle & Carbin [ref]9, the search for lottery tickets has grown across several applications, such as language tasks, graph neural networks and federated learning [ref]4  3 .\nWhile the LTH itself has yet to be\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 9,\n            \"titles\": [\n                \"Linear Mode Connectivity and the Lottery Ticket Hypothesis\",\n                \"Prospect Pruning: Finding Trainable Weights at Initialization using Meta-Gradients\",\n                \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n                \"The Lottery Ticket Hypothesis for Pre-trained BERT Networks\",\n                \"A Unified Lottery Ticket Hypothesis for Graph Neural Networks\",\n                \"BinaryConnect: Training Deep Neural Networks with binary weights during propagations\",\n                \"Multi-Prize Lottery Ticket Hypothesis: Finding Accurate Binary Neural Networks by Pruning A Randomly Weighted Network\",\n                \"Learning generative visual models from few training examples: An incremental bayesian approach tested on 101 object categories\",\n                \"Towards strong pruning for lottery tickets with non-zero biases\",\n                \"The Lottery Ticket Hypothesis: Finding Sparse, Trainable Neural Networks\",\n                \"Pruning Neural Networks at Initialization: Why Are We Missing the Mark?\",\n                \"The state of sparsity in deep neural networks\",\n                \"The lottery ticket hypothesis for object recognition\",\n                \"Learning both Weights and Connections for Efficient Neural Networks\",\n                \"Deep Compression: Compressing Deep Neural Networks with Pruning, Trained Quantization and Huffman Coding\",\n                \"Second order derivatives for network pruning: Optimal Brain Surgeon\",\n                \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Binarized neural networks\",\n                \"Quantized neural networks: Training neural networks with low precision weights and activations\",\n                \"Adam: A method for stochastic optimization\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Optimal Brain Damage\",\n                \"SNIP: Single-shot Network Pruning based on Connection Sensitivity\",\n                \"LotteryFL: Personalized and Communication-Efficient Federated Learning with Lottery Ticket Hypothesis on Non-IID Datasets\",\n                \"Sanity checks for lottery tickets: Does your winning ticket really win the jackpot?\",\n                \"Proving the Lottery Ticket Hypothesis: Pruning is All You Need\",\n                \"Skeletonization: A Technique for Trimming the Fat from a Network via Relevance Assessment\",\n                \"Logarithmic Pruning is All You Need\",\n                \"Optimal Lottery Tickets via SubsetSum: Logarithmic Over-Parameterization is Sufficient\",\n                \"What’s Hidden in a Randomly Weighted Neural Network?\",\n                \"Comparing Rewinding and Fine-tuning in Neural Network Pruning\",\n                \"MobileNetV2: Inverted Residuals and Linear Bottlenecks\",\n                \"A review of binarized neural networks\",\n                \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n                \"Finding Everything within Random Binary Networks\",\n                \"Sanity-checking pruning methods: Random tickets can win the jackpot\",\n                \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n                \"Picking winning tickets before training by preserving gradient flow\",\n                \"Wide Residual Networks\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]9 based on the context and research area of Rare Gems: Finding Lottery Tickets at Initialization. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}