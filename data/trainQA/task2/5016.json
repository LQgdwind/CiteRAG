{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Proof.\n\nPaper Abstract: \n\nPaper Section Text:\nWe first compare private set generation (PSG) with existing DP generative models on standard classification benchmarks including MNIST¬†[ref]18 and FashionMNIST¬†[ref]43. Setup.\n We use by default a ConvNet with 3 blocks where each block contains one Conv layer with 128 filters, followed by Instance Normalization¬†[ref]36, ReLU activation and AvgPooling modules, and a fully connected (FC) layer as the final output layer.\nWe initialize the network parameters using Kaiming initialization¬† and the synthetic samples using standard Gaussian. We report the averaged results over 3 runs of experiments for all the comparisons. We list below the default hyperparameters used for the main experiments and refer to the supplementary material for more details: Clipping bound C=0.1ùê∂0.1C=0.1, R=ùëÖabsentR=1000 for Œµ=10ùúÄ10\\varepsilon=10 (and 200 for Œµ=1)\\varepsilon=1), number of samples per class (spc) ‚àà{10,20}absent1020\\in\\{10,20\\}, K=10ùêæ10K=10, T=10ùëá10T=10 for spc=10 (and =20 for spc=20). Comparison to state of the art.\n We show in Table¬†LABEL:table:conv_ep the results of, to the best of our knowledge, all existing DP high-dimensional data generation methods (whose validity has been justified via peer review at top-tier conferences) that report results on the benchmark datasets we consider. These include DP-CGAN¬†, G-PATE¬†, DataLens¬†, GS-WGAN¬†, DP-Merf¬†, DP-Sinkhorn¬†. For methods that are not open-sourced, we report the original results from the published paper. As shown in Table¬†LABEL:table:conv_ep, our formulation results in significant improvement in the sample utility (measured by test accuracy on real data) for training downstream classification models. Specifically, the improvement is consistent and significant (around 5-10% increase over different configurations) for both the low privacy budget regime (ŒµùúÄ\\varepsilon=1) (around 8-9% improvement over SOTA in this case) and a relatively high privacy regime (ŒµùúÄ\\varepsilon=10) where all the investigated methods achieve convergence (around 10% and 5% increase in test accuracy for MNIST and FashionMNIST, respectively). Note that in contrast to most existing methods that show superiority only for a certain range of privacy levels, our improvement covers a wide range, if not all, of practical scenarios spanning across different privacy levels. We then focus on the open-sourced methods that are strictly comparable (e.g., G-PATE and DataLens provide data-dependent ŒµùúÄ\\varepsilon, i.e., publishing ŒµùúÄ\\varepsilon value will introduce privacy cost and are thus not directly comparable) to ours and conduct a comprehensive investigation through different angles. Memory and computation cost.\n\nWe additionally show that our method is the only one that simultaneously shows advantages in reducing the memory and computation consumption of downstream analysis. As shown in Table¬†1(b), training the classifier with full (6000 samples per class) size of samples in most cases yields an upper bound for the test accuracy, while training on randomly subsampled smaller sets will decrease the performance, unless the generated samples are not informative such that they can be harmful to the downstream tasks (e.g., for DP-CGAN). In contrast, we directly optimize to compress the useful information into a small set of samples and naturally save the memory and computation consumption for downstream analysis tasks. \n\n\n\n\n\n\nMNIST\nFashionMNIST\n\n\nConvNet\nLeNet\nAlexNet\nVGG11\nResNet18\nMLP\nConvNet\nLeNet\nAlexNet\nVGG11\nResNet18\nMLP\n\nReal\n99.6\n99.2\n99.5\n99.6\n99.7\n98.3\n93.5\n88.9\n91.5\n93.8\n94.5\n86.9\n\n\n\nDP-CGAN\n50.2\n52.6\n52.1\n54.7\n51.8\n54.3\n50.2\n52.6\n52.1\n54.7\n51.8\n54.3\n\nGS-WGAN\n84.9\n83.2\n80.5\n87.9\n89.3\n74.7\n54.7\n62.7\n55.1\n57.3\n58.9\n65.4\n\nDP-Merf\n85.7\n87.2\n84.4\n81.7\n81.3\n85.0\n72.4\n67.9\n64.9\n70.1\n66.7\n73.1\n\nOurs (spc=10)\n94.9\n91.3\n90.3\n93.6\n94.3\n86.1\n75.6\n68.0\n66.2\n74.7\n72.1\n62.8\n\nOurs (spc=20)\n95.6\n93.0\n92.3\n94.5\n94.1\n87.1\n77.7\n68.0\n59.1\n76.8\n70.8\n62.2\n\n\n Generalization ability across different architectures.\n One natural concern of our formulation could be the generalization ability to unseen situations. While we exploit discriminative information to guide the training, we (in principle) inevitably trade the generality off against task-specific utility, leaving no performance guarantees for new models. Interestingly, as shown in Table¬†2, we find that our generated set still provides better utility than all baseline methods in most cases, even though the models for evaluation have a completely different architecture from the one we used for training. The only case where our generated set does not work well is for training MLPs. We conjecture that it is due to the difference in the network properties that result in distinct gradient signals: for example, layers in MLPs are densely connected while being sparsely connected in ConvNets, and Convolutional layers are translation equivalent while FC layers in MLPs are not. Moreover, we argue that this may not be a bug, but a feature. Note that the reference results on real data also indicate that the MLP is inferior to other architectures while models with ConvNet, VGG, or ResNet architecture perform well in most cases. In this regard, results on our generated set generally align well with the result on real data, which suggests the possibility of conducting model selection with our private generated set. Convergence rate.\n For most private (gradient-based) iterative methods, the privacy cost accumulates in each training iteration, and thus faster convergence is highly preferable. We show in Figure¬†2 the training curves where the y-axis denotes the utility and the x-axis corresponds to the privacy. We observe that our method generally has a much faster convergence rate than existing methods that need to accumulate the privacy cost for each iteration. In particular, our method already achieves a decent level of utility with Œµ‚â§2ùúÄ2\\varepsilon\\leq 2 which is much lower than the privacy budget used in most previous works (normally Œµ=10ùúÄ10\\varepsilon=10).\n\nReference markers found: [18]\n\nContext windows for each [ref]:\n[ref]18: We first compare private set generation (PSG) with existing DP generative models on standard classification benchmarks including MNIST¬†[ref]18 and FashionMNIST¬†[ref]43. Setup.\n We use by default a ConvNet with 3 blocks where each block contains one Conv layer with 128 filters, followed by Instance Normalization¬†[ref]36, ReLU\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 18,\n            \"titles\": [\n                \"Learning without Forgetting\",\n                \"Deep Learning with Differential Privacy\",\n                \"Privacy-preserving generative deep neural networks support clinical data sharing. biorxiv.\",\n                \"Il2m: Class incremental learning with dual memory\",\n                \"A learning theory approach to noninteractive database privacy\",\n                \"Don‚Äôt Generate Me: Training Differentially Private Generative Models with Sinkhorn Divergence\",\n                \"Gs-wgan: A gradient-sanitized approach for learning differentially private generators\",\n                \"Privacy for Free: How does Dataset Condensation Help Privacy?\",\n                \"Differential privacy: A survey of results\",\n                \"On the complexity of differentially private data release: efficient algorithms and hardness results\",\n                \"The algorithmic foundations of differential privacy\",\n                \"Privacy-preserving data publishing: A survey of recent developments\",\n                \"Dp-merf: Differentially private mean embeddings with randomfeatures for practical privacy-preserving data generation\",\n                \"A multiplicative weights mechanism for privacy-preserving data analysis\",\n                \"A simple and practical algorithm for differentially private data release\",\n                \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n                \"Training Generative Adversarial Networks with Limited Data\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Gradient-based learning applied to document recognition\",\n                \"Mnemonics Training: Multi-Class Incremental Learning without Forgetting\",\n                \"\\\\name: Scalable Differentially Private Data Generator via Private Aggregation of Teacher Discriminators\",\n                \"R√©nyi differential privacy\",\n                \"R√©nyi Differential Privacy of the Sampled Gaussian Mechanism\",\n                \"Coresets for data-efficient training of machine learning models\",\n                \"Semi-supervised Knowledge Transfer for Deep Learning from Private Training Data\",\n                \"Scalable Private Learning with PATE\",\n                \"Gdumb: A simple approach that questions our progress in continual learning\",\n                \"Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks\",\n                \"iCaRL: Incremental Classifier and Representation Learning\",\n                \"Interactive privacy via the median mechanism\",\n                \"Progress & Compress: A scalable framework for continual learning\",\n                \"An Empirical Study of Example Forgetting during Deep Neural Network Learning\",\n                \"DP-CGAN : Differentially Private Synthetic Data and Label Generation\",\n                \"Differentially Private Learning Needs Better Features (or Much More Data)\",\n                \"Instance Normalization: The Missing Ingredient for Fast Stylization\",\n                \"Deep Image Prior\",\n                \"New Oracle-Efficient Algorithms for Private Synthetic Data Release\",\n                \"DataLens: Scalable Privacy Preserving Training via Gradient Compression and Aggregation\",\n                \"Dataset Distillation\",\n                \"Subsampled R√©nyi Differential Privacy and Analytical Moments Accountant\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]18 based on the context and research area of Proof.. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}