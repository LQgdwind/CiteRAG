{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Pre-RMSNorm and Pre-CRMSNorm Transformers: Equivalent and Efficient Pre-LN Transformers\n\nPaper Abstract: \n\nPaper Section Text:\nThe ViT takes images with 3 channels and a resolution of 224√ó224224224224\\times 224 and generates a classification over 1000 classes, which is the standard setting for ImageNet training and inference. In the training recipe of ViT [ref]13, dropout  is added at the end of each residual branch, which breaks the zero-mean property of the residual output.\nHence, in Pre-RMSNorm Transformers, we need to recenter the output vectors explicitly at the end of the residual branch.\n444Dropout only impacts training and has no impact on inference. Thus, the Pre-RMSNorm variant can also be used for inference.\nThe Pre-CRMSNorm Transformers are compatible with dropout since it uses vectors in ‚Ñùd‚àí1superscript‚Ñùùëë1{\\mathbb{R}}^{d-1} to represent the compressed zero-mean vectors in ‚Ñùdsuperscript‚Ñùùëë{\\mathbb{R}}^{d}.\nOn the contrary, DeiT  disables the dropout and can guarantee the zero-mean output, in spite that the stochastic depth  and LayerScale [ref]37 are applied.\nWe follow the settings in DeiT  in this paper. Inference.\nFigure 3 illustrates the inference time with different batch sizes and model sizes on a single A100 GPU.\nTaking the Pre-LN Transformer as the baseline, our proposed Pre-RMSNorm Transformer can reduce the inference time by 1%‚àí9%percent1percent91\\%-9\\%.\nThis reduction takes effect for ViTs with different models and various mini-batch sizes.\nThe left subfigure demonstrates the inference latency, which is the inference time when the batch size is 1. The proportion of LayerNorm in the total computation is 12%‚àí18%percent12percent1812\\%-18\\% in these experiments.\nAs discussed in Sections 2.1 and 3.4.1, replacing LayerNorm with RMSNorm can help us accelerate the inference.\nRMSNorm can reduce the inference time of LayerNorm by 20%‚àí60%percent20percent6020\\%-60\\%, thus helping us achieves a stale faster inference for Pre-RMSNorm models. For Pre-CRMSNorm, the GPU cannot efficiently handle vectors in ‚Ñùd‚àí1superscript‚Ñùùëë1{\\mathbb{R}}^{d-1} in some cases, where we add zero padding to obtain vectors in ‚Ñùdsuperscript‚Ñùùëë{\\mathbb{R}}^{d}.\nWith zero padding, Pre-CRMSNorm models are less efficient than Pre-RMSNorm ones due to the extra decompression.\nHowever, for the cases where ‚Ñùd‚àí1superscript‚Ñùùëë1{\\mathbb{R}}^{d-1} vectors can be accelerated efficiently, we can achieve an even 10%percent1010\\% time reduction. We also conduct experiments (1) with other precisions, (2) on CPUs, (3) with JAX [ref]4 and observe similar performance.\nFor these ViT variants, we have achieved an average of 3.0%percent3.03.0\\% inference time reduction.\nPlease see Appendix D for more details. Training.\nWe train ViTs on a single workstation with 4 A100s with data parallel training , following the DeiT training recipe.\nEach training iteration consists of forward and backward computation on all the workers, gradient all-reduce, parameters update with an optimizer, and broadcasting the new parameters.\nFigure 4(a) visualizes the breakdown of the related components.\nIn the Pre-LN Transformer, the layer normalization accounts for 12.6%percent12.612.6\\% of total training time.\nFor the Pre-RMSNorm variant, we have to modify the output projection and recenter the input, which induces the 0.89%percent0.890.89\\% and 0.09%percent0.090.09\\% extra computation time.\nThen LayerNorm is reduced to RMSNorm, whose computation cost is 9.27%percent9.279.27\\%.\nOverall, the Pre-RMSNorm reduces the training time by 2.36%percent2.362.36\\%. We train the Pre-CRMSNorm Transformers with dùëëd as the hidden dimension since we do not obtain a speedup from the compressed dimension since the GPUs cannot handle ‚Ñùd‚àí1superscript‚Ñùùëë1{\\mathbb{R}}^{d-1} vectors efficiently.\nThe CRMSNorm is more computationally expensive than the RMSNorm given the same input but takes less time than LayerNorm.\nThe Pre-CRMSNorm Transformer does not need the recentering and special linear layers to generate zero-mean results at the end of residual branches.\nAbove all, training the Pre-CRMSNorm variant is 1.74%percent1.741.74\\% faster than the Pre-LN model. Figure 4(b) illustrates the training time of different ViTs.\nWe have achieved a speedup of 1%‚àí2.5%percent1percent2.51\\%-2.5\\%, which is smaller than the inference speedup.\nConsidering only the forward and backward computation, the speedup is similar between training and inference.\nNevertheless, the training needs extra time on gradient all-reduce, optimizer update, and parameters broadcast, which shrinks the percentage of normalizations in the whole computation.\nFor reference, the percentage is 10%‚àí15%percent10percent1510\\%-15\\% for training these ViTs.\n\nReference markers found: [13]\n\nContext windows for each [ref]:\n[ref]13: and a resolution of 224√ó224224224224\\times 224 and generates a classification over 1000 classes, which is the standard setting for ImageNet training and inference. In the training recipe of ViT [ref]13, dropout  is added at the end of each residual branch, which breaks the zero-mean property of the residual output.\nHence, in Pre-RMSNorm Transformers, we need to recenter the output vectors\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 13,\n            \"titles\": [\n                \"Deep Residual Learning for Image Recognition\",\n                \"Layer normalization\",\n                \"On the opportunities and risks of foundation models\",\n                \"Understanding and Overcoming the Challenges of Efficient Transformer Quantization\",\n                \"JAX: composable transformations of Python+NumPy programs,\",\n                \"Language Models are Few-Shot Learners\",\n                \"A Comprehensive Survey of AI-Generated Content (AIGC): A History of Generative AI from GAN to ChatGPT\",\n                \"Decision Transformer: Reinforcement Learning via Sequence Modeling\",\n                \"PaLM: Scaling Language Modeling with Pathways\",\n                \"Scaling Vision Transformers to 22 Billion Parameters\",\n                \"LLM.int8(): 8-bit Matrix Multiplication for Transformers at Scale\",\n                \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n                \"RepVGG: Making VGG-style ConvNets Great Again\",\n                \"An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale\",\n                \"Gaussian Error Linear Units (GELUs)\",\n                \"Training Compute-Optimal Large Language Models\",\n                \"Deep Networks with Stochastic Depth\",\n                \"Llm-analysis: Latency and memory analysis of transformer models for training and inference\",\n                \"Scaling distributed machine learning with the parameter server\",\n                \"PyTorch Distributed: Experiences on Accelerating Data Parallel Training\",\n                \"Understanding the Difficulty of Training Transformers\",\n                \"Post-Training Quantization for Vision Transformer\",\n                \"Pointer Sentinel Mixture Models\",\n                \"Mixed Precision Training\",\n                \"Chatgpt could cost over $700,000 per day to operate. microsoft is reportedly trying to make it cheaper\",\n                \"Do Transformer Modifications Transfer Across Implementations and Applications?\",\n                \"DNNFusion: Accelerating Deep Neural Networks Execution with Advanced Operator Fusion\",\n                \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n                \"Pre-trained Models for Natural Language Processing: A Survey\",\n                \"Language models are unsupervised multitask learners\",\n                \"Scaling Language Models: Methods, Analysis & Insights from Training Gopher\",\n                \"Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer\",\n                \"Dropout: A simple way to prevent neural networks from overfitting\",\n                \"Stanford alpaca: An instruction-following llama model\",\n                \"Efficient Transformers: A Survey\",\n                \"Training data-efficient image transformers & distillation through attention\",\n                \"Going deeper with image transformers\",\n                \"LLaMA: Open and Efficient Foundation Language Models\",\n                \"Attention Is All You Need\",\n                \"On Layer Normalization in the Transformer Architecture\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]13 based on the context and research area of Pre-RMSNorm and Pre-CRMSNorm Transformers: Equivalent and Efficient Pre-LN Transformers. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}