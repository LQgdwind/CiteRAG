{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Improving the Leading Constant of Matrix Multiplication\n\nPaper Abstract: \n\nPaper Section Text:\nIn 1969, Strassen  showed that it is possible to multiply two M×M𝑀𝑀M\\times M matrices in faster than cubic time. His algorithm is based on an algebraic identity which shows that the rank of the tensor for multiplying 2×2222\\times 2 matrices is at most 777. (Equivalently, he showed how to multiply 2×2222\\times 2 matrices with non-commuting entries using only 777 multiplications.) Strassen applied this algorithm in a recursive way, showing that the number T​(M)𝑇𝑀T(M) of operations to multiply two M×M𝑀𝑀M\\times M matrices satisfies T​(M)≤7​T​(M/2)+O​(M2)𝑇𝑀7𝑇𝑀2𝑂superscript𝑀2T(M)\\leq 7T(M/2)+O(M^{2}), which solves to T​(M)≤O​(Mlog2⁡(7))≤O​(M2.81)𝑇𝑀𝑂superscript𝑀subscript27𝑂superscript𝑀2.81T(M)\\leq O(M^{\\log_{2}(7)})\\leq O(M^{2.81}). Since then, a long line of work has gone into using this recursive idea to design even faster matrix multiplication algorithms. It is known that the tensor for multiplying 2×2222\\times 2 matrices does not have rank less than 777 [ref]55 , and so later work focused on bounding the ranks of larger matrix multiplication tensors. Notably, in later work, Strassen  showed that any algebraic algorithm for multiplying matrices can be converted into a tensor rank bound which achieves the same exponent, and so algorithm designers have focused on this approach without loss of generality. We write ⟨a,b,c⟩𝑎𝑏𝑐\\langle a,b,c\\rangle to denote the a×b×c𝑎𝑏𝑐a\\times b\\times c matrix multiplication tensor (i.e., the computational problem of multiplying an a×b𝑎𝑏a\\times b matrix and a b×c𝑏𝑐b\\times c matrix). Given a matrix multiplication tensor ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle with rank at most t𝑡t, one can apply Strassen’s recursive idea again to see that the number T​(M)𝑇𝑀T(M) of operations to multiply two M×M𝑀𝑀M\\times M matrices satisfies T​(M)≤t⋅T​(M/n)+O​(t⋅M2)𝑇𝑀⋅𝑡𝑇𝑀𝑛𝑂⋅𝑡superscript𝑀2T(M)\\leq t\\cdot T(M/n)+O(t\\cdot M^{2}), which solves to T​(M)≤O​(n2⋅Mlogn⁡(t))𝑇𝑀𝑂⋅superscript𝑛2superscript𝑀subscript𝑛𝑡T(M)\\leq O(n^{2}\\cdot M^{\\log_{n}(t)}). Normally one thinks of n𝑛n and t𝑡t as constants and writes the solution to this recurrence as T​(M)≤O​(Mlogn⁡t)𝑇𝑀𝑂superscript𝑀subscript𝑛𝑡T(M)\\leq O(M^{\\log_{n}t}). However, to achieve a good exponent logn⁡tsubscript𝑛𝑡\\log_{n}t, current matrix multiplication algorithms require n𝑛n to be extremely large, which means that the leading constant n2superscript𝑛2n^{2} is frequently very substantial. This paper focuses on decreasing this dependence on n𝑛n. Roughly speaking, there have been two regimes of work on bounding the rank of ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle: When n𝑛n is small, to design more practical algorithms, and when n𝑛n is large, to get the asymptotically best algorithms. However, even in the small n𝑛n regime, while Strassen’s algorithm has been implemented and used in practice (see, e.g.,  and its introduction), the rank bounds for larger n𝑛n still do not seem to be effective. The fact that using an identity for ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle results in a leading constant which scales proportionally to n2superscript𝑛2n^{2} can give a heuristic explanation for this. The smallest known tensor which achieves an improved exponent over Strassen’s algorithm is of the form ⟨12,12,12⟩121212\\langle 12,12,12\\rangle with rank at most 104010401040    (see also [ref]43). Going from n=2𝑛2n=2 to n=12𝑛12n=12 improves the exponent by log2⁡(7)−log12⁡(1040)≈0.01subscript27subscript1210400.01\\log_{2}(7)-\\log_{12}(1040)\\approx 0.01, but increases the leading constant by about (12/2)2=36superscript122236(12/2)^{2}=36. Hence, for the algorithm resulting from the n=12𝑛12n=12 tensor to be faster for multiplying M×M𝑀𝑀M\\times M matrices, we need roughly M0.01>36superscript𝑀0.0136M^{0.01}>36, i.e., M>4×10155𝑀4superscript10155M>4\\times 10^{155}. This is much larger than realistic inputs; in fact, it’s approximately the square of the number of atoms in the visible universe! (We emphasize that this is just a heuristic argument; the exact leading constant of the running time depends on other details of the tensor rank expression like its sparsity.) Our bounds on the rank of ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle are not known to be optimal for any n>2𝑛2n>2.111Even the rank of ⟨3,3,3⟩333\\langle 3,3,3\\rangle is only known to be between 191919 and 232323 . If it were in fact 191919, it would lead to an exponent of log3⁡(19)<2.681subscript3192.681\\log_{3}(19)<2.681, surpassing Strassen’s algorithm. More generally, it is only known that the rank of ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle is at least 3​n2−o​(n2)3superscript𝑛2𝑜superscript𝑛23n^{2}-o(n^{2}) 7 . Nonetheless, there have been many attempts to improve these bounds using numerical methods, and it is generally believed that our rank bounds for small n𝑛n cannot be improved much. Meanwhile, to achieve the best possible exponent of matrix multiplication, researchers focus on the regime where n𝑛n is very large. The exponent of matrix multiplication, ω𝜔\\omega, is defined as a limit where R​(⟨n,n,n⟩)𝑅𝑛𝑛𝑛R(\\langle n,n,n\\rangle) denotes the rank of the ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle tensor. Many intricate algorithmic techniques have been developed which yield improved upper bounds on ω𝜔\\omega, but which require taking large n𝑛n so that the asymptotic behaviors of extremal combinatorial constructions kick in. Thus, these techniques seem to necessarily lead to impractical algorithms. In fact, it’s known that working with increasingly large n𝑛n is necessary to get the best exponent. Indeed, Coppersmith and Winograd  gave a surprising procedure which takes in as input any tensor ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle with rank at most t𝑡t, and outputs a new tensor ⟨n′,n′,n′⟩superscript𝑛′superscript𝑛′superscript𝑛′\\langle n^{\\prime},n^{\\prime},n^{\\prime}\\rangle with rank at most t′superscript𝑡′t^{\\prime} where n′superscript𝑛′n^{\\prime} is much larger than n𝑛n, but logn′⁡(t′)<logn⁡(t)subscriptsuperscript𝑛′superscript𝑡′subscript𝑛𝑡\\log_{n^{\\prime}}(t^{\\prime})<\\log_{n}(t). In other words, it coverts any input tensor rank identity into a new one which achieves a better exponent, but substantially increases n𝑛n. Hence, it’s necessary to define ω𝜔\\omega as a limit, since the exponent gets better as n𝑛n gets larger. The current best bound on ω𝜔\\omega, which achieves ω<2.372𝜔2.372\\omega<2.372, uses an approach by Coppersmith and Winograd  which has been further refined by a recent line of work       . Rather than give a single tensor, this line of work also gives a sequence of identities which get better as n𝑛n gets larger, and they only give a calculation of the exponent in the limit. This algorithm is typically described as impractical, and we quantify this assertion here: In Appendix A below, we perform an optimistic (underestimate) calculation of how large n𝑛n needs to be to get close to this exponent using the Coppersmith-Winograd approach. We find that, even to get a better exponent than 2.52.52.5, n𝑛n needs to be substantially larger than the number of atoms in the visible universe. Moreover, we will see that many of the core algorithmic techniques used by the approach (including the asymptotic sum inequality, sets avoiding arithmetic progressions, border rank bounds, and multinomial coefficient asymptotics) each seemingly necessarily contribute to n𝑛n being so large. In summary, in both the small n𝑛n and large n𝑛n regimes, a leading constant of n2superscript𝑛2n^{2} is prohibitively large compared to how much we’re able to improve the rank (and hence exponent) compared to Strassen’s algorithm. In this paper, we investigate whether the same tensor ⟨n,n,n⟩𝑛𝑛𝑛\\langle n,n,n\\rangle can be used to design improved algorithms with a smaller leading coefficient or low-order terms. In fact, there is some prior work which slightly improves on the n2superscript𝑛2n^{2} leading coefficient. The classic technique of Lupanov 9 can slightly decrease the operation count needed to compute any linear transformation, including the ‘encoding’ and ‘decoding’ transformations of a bilinear algorithm. It can thus be used to achieve a leading constant of O​(n2/log⁡n)𝑂superscript𝑛2𝑛O(n^{2}/\\log n). A recent line of work  6  2 improved the constants one gets from particular small identities like Strassen’s ⟨2,2,2⟩222\\langle 2,2,2\\rangle tensor (with rank 777) and the ⟨3,3,3⟩333\\langle 3,3,3\\rangle tensor (with rank at most 232323) using a ‘sparse decomposition’ technique; one could also generalize this to larger n𝑛n, although doing so (for a particular identity) is not straightforward. However, simple counting arguments show that neither of these techniques can improve the leading constant in general beyond O​(n2/log⁡n)𝑂superscript𝑛2𝑛O(n^{2}/\\log n).222We note that the sparse decomposition technique can work better than this for specific tensor rank identities that have additional structure to them. (Using additional structure of tensors to improve leading constants is a technique which is extensively explored in the literature, and which we will also employ below.) For one example, recent work by Hadas and Schwartz 2 showed that the tensor rank identity of Pan  for ⟨70,70,70⟩707070\\langle 70,70,70\\rangle has a particular structure (its encoding and decoding matrices have duplicate rows and columns) which leads to a leading constant of only 222, although in exchange, some lower-order terms of their operation count have larger constants. Later algorithms do not seem to have such a structure. See Appendix B below for a detailed explanation. Hence, an improvement of the leading constant beyond O​(n2/log⁡n)𝑂superscript𝑛2𝑛O(n^{2}/\\log n) requires new techniques.\n\nReference markers found: [55]\n\nContext windows for each [ref]:\n[ref]55: has gone into using this recursive idea to design even faster matrix multiplication algorithms. It is known that the tensor for multiplying 2×2222\\times 2 matrices does not have rank less than 777 [ref]55 , and so later work focused on bounding the ranks of larger matrix multiplication tensors. Notably, in later work, Strassen  showed that any algebraic algorithm for multiplying matrices can\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 55,\n            \"titles\": [\n                \"New Bounds for Matrix Multiplication: from Alpha to Omega\",\n                \"Polynomial Representations of Threshold Functions and Algorithmic Applications\",\n                \"Faster deterministic and las vegas algorithms for offline approximate nearest neighbors in high dimensions\",\n                \"More Asymmetry Yields Faster Matrix Multiplication\",\n                \"Smaller Low-Depth Circuits for Kronecker Powers\",\n                \"Kronecker Products, Low-Depth Circuits, and Matrix Rigidity\",\n                \"Faster Walsh-Hadamard and Discrete Fourier Transforms From Matrix Non-Rigidity\",\n                \"Probabilistic polynomials and hamming nearest neighbors\",\n                \"A Refined Laser Method and Faster Matrix Multiplication\",\n                \"Limits on All Known (and Some Unknown) Approaches to Matrix Multiplication\",\n                \"More applications of the polynomial method to algorithm design\",\n                \"On sets of integers which contain no three terms in arithmetical progression\",\n                \"Relations between exact and approximate bilinear algorithms. applications\",\n                \"On the complexity of the multiplication of matrices of small formats\",\n                \"Fast Matrix Multiplication\",\n                \"On the complexity of partial derivatives\",\n                \"Faster matrix multiplication via sparse decomposition\",\n                \"On the arithmetic complexity of strassen-like matrix multiplications\",\n                \"Group-theoretic algorithms for matrix multiplication\",\n                \"Rectangular matrix multiplication revisited\",\n                \"A group-theoretic approach to fast matrix multiplication\",\n                \"On the asymptotic complexity of matrix multiplication\",\n                \"Matrix multiplication via arithmetic progressions\",\n                \"Deterministic apsp, orthogonal vectors, and more: Quickly derandomizing razborov-smolensky\",\n                \"Improved bound for complexity of matrix multiplication\",\n                \"Faster matrix multiplication via asymmetric hashing\",\n                \"An improved construction of progression-free sets\",\n                \"Matrix multiplication i\",\n                \"Faster Rectangular Matrix Multiplication by Combination Loss Analysis\",\n                \"Improved Rectangular Matrix Multiplication using Powers of the Coppersmith-Winograd Tensor\",\n                \"On minimizing the number of multiplications necessary for matrix multiplication\",\n                \"Fast rectangular matrix multiplication and applications\",\n                \"Towards practical fast matrix multiplication based on trilinear aggregation\",\n                \"Strassen’s algorithm reloaded\",\n                \"Addition requirements for matrix and transposed matrix products\",\n                \"Strong bounds for 3-progressions\",\n                \"Matrix multiplication, a little faster\",\n                \"New lower bounds for the rank of matrix multiplication\",\n                \"Powers of Tensors and Fast Matrix Multiplication\",\n                \"On rectifier and switching-and-rectifier schemes\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]55 based on the context and research area of Improving the Leading Constant of Matrix Multiplication. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}