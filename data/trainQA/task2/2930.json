{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Combining Recurrent, Convolutional, and Continuous-time Models with Linear State-Space Layers\n\nPaper Abstract: \n\nPaper Section Text:\nA longstanding challenge in machine learning is efficiently modeling sequential data longer than a few thousand time steps.\nThe usual paradigms for designing sequence models involve recurrence (e.g. RNNs), convolutions (e.g. CNNs), or differential equations (e.g. NDEs),\nwhich each come with tradeoffs.\nFor example, RNNs are a natural stateful model for sequential data that require only constant computation/storage per time step, but are slow to train and suffer from optimization difficulties (e.g., the \"vanishing gradient problem\" [ref]39), which empirically limits their ability to handle long sequences.\nCNNs encode local context and enjoy fast, parallelizable training, but are not sequential, resulting in more expensive inference and an inherent limitation on the context length.\nNDEs are a principled mathematical model that can theoretically address continuous-time problems and long-term dependencies , but are\nvery inefficient. Ideally, a model family would combine the strengths of these paradigms, providing properties like parallelizable training (convolutional), stateful inference (recurrence) and time-scale adaptation (differential equations), while handling very long sequences in a computationally efficient way.\nSeveral recent works have turned to this question.\nThese include the CKConv, which models a continuous convolution kernel¬†; several ODE-inspired RNNs, such as the UnICORNN¬†;\nthe LMU, which speeds up\na specific linear recurrence using convolutions¬† [ref]12;\nand HiPPO¬†[ref]24, a generalization of the LMU that introduces a theoretical framework for continuous-time memorization.\nHowever, these model families come at the price of reduced expressivity:\nintuitively, a family that is both convolutional and recurrent should be more restrictive than either. Our first goal is to construct an expressive model family that\ncombines all 3 paradigms while preserving their strengths.\nThe Linear State-Space Layer (LSSL) is a simple sequence model that maps a 1-dimensional function or sequence u‚Äã(t)‚Ü¶y‚Äã(t)maps-toùë¢ùë°ùë¶ùë°u(t)\\mapsto y(t) through an implicit state x‚Äã(t)ùë•ùë°x(t) by simulating a linear continuous-time state-space representation in discrete-time where Aùê¥A controls the evolution of the system and B,C,Dùêµùê∂ùê∑B,C,D are projection parameters.\nThe LSSL can be viewed as an instantiation of each family, inheriting their strengths (Fig.¬†1): LSSLs are recurrent.\nIf a discrete step-size Œî‚ÄãtŒîùë°\\Delta t is specified, the LSSL can be discretized into a linear recurrence using standard techniques, and simulated during inference as a stateful recurrent model with constant memory and computation per time step. LSSLs are convolutional.\nThe linear time-invariant systems defined by (1)+(2) are known to be explicitly representable as a continuous convolution.\nMoreover, the discrete-time version can be parallelized during training using convolutions¬†[ref]12 . LSSLs are continuous-time.\nThe LSSL itself is a differential equation. As such, it can perform unique applications of continuous-time models, such as simulating continuous processes, handling missing data¬†, and adapting to different timescales. Surprisingly, we show that LSSLs do not sacrifice expressivity, and in fact generalize convolutions and RNNs.\nFirst, classical results from control theory imply that all 1-D convolutional kernels can be approximated by an LSSL¬†.\nAdditionally, we provide two results relating RNNs and ODEs that may be of broader interest,\ne.g.¬†showing that some RNN architectural heuristics (such as gating mechanisms) are related to the step-size Œî‚ÄãtŒîùë°\\Delta t and can actually be derived from ODE approximations.\nAs corollaries of these results, we show that popular RNN methods are special cases of LSSLs. The generality of LSSLs does come with tradeoffs.\nIn particular, we describe and address two challenges that naive LSSL instantiations face when handling long sequences:\n(i) they inherit the limitations of both RNNs and CNNs at remembering long dependencies, and\n(ii) choosing the state matrix Aùê¥A and timescale Œî‚ÄãtŒîùë°\\Delta t appropriately are critical to their performance, yet learning them is computationally infeasible.\nWe simultaneously address these challenges by specializing LSSLs using a carefully chosen class of structured matrices Aùê¥A,\nsuch that\n(i) these matrices generalize prior work on continuous-time memory [ref]24 and mathematically capture long dependencies with respect to a learnable family of measures, and\n(ii) with new algorithms, LSSLs with these matrices Aùê¥A can be theoretically sped up under certain computation models, even while learning the measure Aùê¥A and timescale Œî‚ÄãtŒîùë°\\Delta t. We empirically validate that LSSLs are widely effective on benchmark datasets and very long time series from healthcare sensor data, images, and speech. On benchmark datasets, LSSLs obtain\nSoTA over recent RNN, CNN, and NDE-based methods\nacross sequential image classification tasks (e.g., by over 10% accuracy on sequential CIFAR)\nand healthcare regression tasks with length-4000 time series (by up to 80% reduction in RMSE). To showcase the potential of LSSLs to unlock applications with extremely long sequences,\nwe introduce a new sequential CelebA classification task with length-38000 sequences.\nA small LSSL\ncomes within 2.16 accuracy points of a specialized ResNet-18 vision architecture that has 10x more parameters and is trained directly on images. Finally, we test LSSLs on a difficult dataset of high-resolution speech clips,\nwhere usual speech pipelines pre-process the signals to reduce the length by 100x.\nWhen training on the raw length-16000 signals,\nthe LSSL not only (i) outperforms previous methods by over 20 accuracy points in 1/5 the training time,\nbut (ii) outperforms all baselines that use the pre-processed length-160 sequences,\novercoming the limitations of hand-crafted feature engineering. Summary of Contributions We introduce Linear State-Space Layers (LSSLs), a simple sequence-to-sequence transformation that shares the modeling advantages of recurrent, convolutional, and continuous-time methods.\nConversely, we show that RNNs and CNNs can be seen as special cases of LSSLs (Section¬†3). We prove that a structured subclass of LSSLs can learn representations that solve continuous-time memorization, allowing it to adapt its measure and timescale (Section¬†4.1).\nWe also provide new algorithms for these LSSLs, showing that they can be sped up computationally under an arithmetic complexity model Section¬†4.2. Empirically, we show that LSSLs stacked into a deep neural network are widely effective on time series data, even (or especially) on extremely long sequences (Section¬†5).\n\nReference markers found: [39]\n\nContext windows for each [ref]:\n[ref]39: model for sequential data that require only constant computation/storage per time step, but are slow to train and suffer from optimization difficulties (e.g., the \"vanishing gradient problem\" [ref]39), which empirically limits their ability to handle long sequences.\nCNNs encode local context and enjoy fast, parallelizable training, but are not sequential, resulting in more expensive\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 39,\n            \"titles\": [\n                \"Computing with Quasiseparable Matrices\",\n                \"Mathematical methods for physicists : a comprehensive guide\",\n                \"Unitary Evolution Recurrent Neural Networks\",\n                \"An empirical evaluation of generic convolutional and recurrent networks for sequence modeling\",\n                \"Trellis Networks for Sequence Modeling\",\n                \"Quasi-Recurrent Neural Networks\",\n                \"Numerical methods for ordinary differential equations, volume 2\",\n                \"AntisymmetricRNN: A Dynamical System View on Recurrent Neural Networks\",\n                \"Dilated Recurrent Neural Networks\",\n                \"Recurrent Neural Networks for Multivariate Time Series with Missing Values\",\n                \"Neural Ordinary Differential Equations\",\n                \"An introduction to orthogonal polynomials\",\n                \"Parallelizing Legendre Memory Unit Training\",\n                \"Xception: Deep Learning with Depthwise Separable Convolutions\",\n                \"Empirical Evaluation of Gated Recurrent Neural Networks on Sequence Modeling\",\n                \"Catformer: Designing stable transformers via sensitivity analysis\",\n                \"GRU-ODE-Bayes: Continuous modeling of sporadically-observed time series\",\n                \"A two-pronged progress in structured dense matrix vector multiplication\",\n                \"An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale\",\n                \"On a new class of structured matrices\",\n                \"Lipschitz Recurrent Neural Networks\",\n                \"Dynamic causal modelling\",\n                \"Approximation of dynamical systems by continuous time recurrent neural networks\",\n                \"Matrix computations, volume 3\",\n                \"HiPPO: Recurrent Memory with Optimal Polynomial Projections\",\n                \"Improving the Gating Mechanism of Recurrent Neural Networks\",\n                \"Closed-form continuous-depth models\",\n                \"Liquid Time-constant Networks\",\n                \"Long short-term memory\",\n                \"Gated recurrent units viewed through the lens of continuous time dynamical systems\",\n                \"Rnns incrementally evolving on an equilibrium manifold: A panacea for vanishing and exploding gradients?\",\n                \"Neural Controlled Differential Equations for Irregular Time Series\",\n                \"Learning Long-Term Dependencies in Irregularly-Sampled Time Series\",\n                \"Simple Recurrent Units for Highly Parallelizable Recurrence\",\n                \"Independently Recurrent Neural Network (IndRNN): Building A Longer and Deeper RNN\",\n                \"Understanding the Difficulty of Training Transformers\",\n                \"Deep learning face attributes in the wild\",\n                \"Neural rough differential equations for long time series\",\n                \"Recurrent neural networks in the eye of differential equations\",\n                \"On the difficulty of training recurrent neural networks\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]39 based on the context and research area of Combining Recurrent, Convolutional, and Continuous-time Models with Linear State-Space Layers. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}