{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Various Properties of Various Ultrafilters, Various Graph Width Parameters, and Various Connectivity Systems\n\nPaper Abstract: \n\nPaper Section Text:\nWe consider about Hierarchy for treewidth. The relationships between tree-width and other parameters are as follows: If G𝐺G has tree-width k𝑘k, then G𝐺G is a subgraph of a chordal graph with maximum clique size k+1𝑘1k+1 . Let G𝐺G be a connected graph with treewidth t​w​(G)𝑡𝑤𝐺tw(G) and gonality d​g​o​n​(G)𝑑𝑔𝑜𝑛𝐺dgon(G). Then t​w​(G)≤d​g​o​n​(G)𝑡𝑤𝐺𝑑𝑔𝑜𝑛𝐺tw(G)\\leq dgon(G) . If G𝐺G has tree-width k𝑘k, the dimension of G𝐺G is at most k𝑘k . If G𝐺G has tree-width k𝑘k, G𝐺G is k𝑘k-decomposable . If G𝐺G has tree-width k−1𝑘1k-1, G𝐺G has haven k𝑘k . If G𝐺G has tree-width k𝑘k, G𝐺G has no screen of thickness at least k+2𝑘2k+2 . If G𝐺G has tree-width k𝑘k, k+1𝑘1k+1 cops can search G𝐺G in the Seymour-Thomas search game . If G𝐺G has tree-width k𝑘k, k+1𝑘1k+1 cops can monotonely search G𝐺G in the Seymour-Thomas search game . If G𝐺G has tree-width k𝑘k, the number of searchers needed to search G𝐺G in the fugitive search game with an inert fugitive is at most k+1𝑘1k+1 . If G𝐺G has tree-width k𝑘k, the number of searchers needed to monotonically search G𝐺G in the fugitive search game with an inert fugitive is at most k+1𝑘1k+1 . If r𝑟r is the degeneracy of a graph G𝐺G, then tree-width≥rtree-width𝑟\\text{tree-width}\\geq r . If G𝐺G is a graph with average degree d𝑑d, then tree-width≥d/2tree-width𝑑2\\text{tree-width}\\geq d/2 . G𝐺G is a partial strict k𝑘k-tree . q​n​(G)≤p​w​(G)≤(t​w​(G)+1)​log⁡n𝑞𝑛𝐺𝑝𝑤𝐺𝑡𝑤𝐺1𝑛qn(G)\\leq pw(G)\\leq(tw(G)+1)\\log n (queue-number q​n​(G)𝑞𝑛𝐺qn(G), path-width p​w𝑝𝑤pw) . The stack-number s​n​(G)≤t​w​(G)+1𝑠𝑛𝐺𝑡𝑤𝐺1sn(G)\\leq tw(G)+1 . The track number track number​(G)≤path-width​(G)+1≤1+(tree-width​(G)+1)​log⁡ntrack number𝐺path-width𝐺11tree-width𝐺1𝑛\\text{track number}(G)\\leq\\text{path-width}(G)+1\\leq 1+(\\text{tree-width}(G)+1)\\log n . The tree-width of a graph is a lower bound on the positive semidefinite zero forcing number Z+​(G)superscript𝑍𝐺Z^{+}(G) . 111The zero forcing number is the minimum number of initially colored vertices required to color the entire graph by repeatedly applying the ”color-change rule(cf. ). t​w​(G)≤l​a​(G)≤t​w​(G)+1𝑡𝑤𝐺𝑙𝑎𝐺𝑡𝑤𝐺1tw(G)\\leq la(G)\\leq tw(G)+1 (l​a​(G)𝑙𝑎𝐺la(G): Largeur d’arborescence. Also called Two-sided tree-width)  . The spanheight of a graph upper-bounds the treewidth of a graph . Ultrafilter on a graph is an obstacle of tree-width . Let G𝐺G be any non-complete graph. Then toughness ≤t​w​(G)/2absent𝑡𝑤𝐺2\\leq tw(G)/2 . treewidth​(G)≤pathwidth​(G)≤(treewidth​(G)+1)​log⁡(n)treewidth𝐺pathwidth𝐺treewidth𝐺1𝑛\\text{treewidth}(G)\\leq\\text{pathwidth}(G)\\leq(\\text{treewidth}(G)+1)\\log(n). bw​(G)≤tw​(G)+1≤32⋅bw​(G)bw𝐺tw𝐺1⋅32bw𝐺\\text{bw}(G)\\leq\\text{tw}(G)+1\\leq\\frac{3}{2}\\cdot\\text{bw}(G) for a graph G𝐺G with bw​(G)≥2bw𝐺2\\text{bw}(G)\\geq 2 (bw: branch-width) . tw​(G)≤2⋅tcw​(G)2+3⋅tcw​(G)tw𝐺⋅2tcwsuperscript𝐺2⋅3tcw𝐺\\text{tw}(G)\\leq 2\\cdot\\text{tcw}(G)^{2}+3\\cdot\\text{tcw}(G) (tcw: Tree-cut-width) [ref]395. boow​(G)≤tw​(G)+1boow𝐺tw𝐺1\\text{boow}(G)\\leq\\text{tw}(G)+1 (boow: Boolean-width) [ref]395. If a graph G𝐺G has bounded tree-width, then it also has bounded sparse twin-width, bounded clique-width, and bounded twin-width . If a graph G𝐺G has bounded Tree-distance-width, then it also has bounded Tree-width . If a graph G𝐺G has bounded tree-width, then it also has bounded Maximum clique number, and chromatic number  . If a graph G𝐺G has bounded tree-width, then it also has bounded Bramble Number (bn), Tangle Number, Lexicographic Tree Product Number (LTP), Linkedness Number (link), Cartesian Tree Product Number (ctp), and Well-Linked Number (wl). The converse is also true . Tree-width​(G)≤Special Tree-width​(G)≤Spaghetti Tree-width​(G)Tree-width𝐺Special Tree-width𝐺Spaghetti Tree-width𝐺\\text{Tree-width}(G)\\leq\\text{Special Tree-width}(G)\\leq\\text{Spaghetti Tree-width}(G) . carw​(G)⋅Δ​(G)≤tw​(G)≤2×carw​(G)⋅carw𝐺Δ𝐺tw𝐺2carw𝐺\\text{carw}(G)\\cdot\\Delta(G)\\leq\\text{tw}(G)\\leq 2\\times\\text{carw}(G) (where Δ​(G)Δ𝐺\\Delta(G) is the maximum degree of G𝐺G and carw​(G)carw𝐺\\text{carw}(G) is carving width)   97. Minimal upper bounds for tree-width is distance to outerplanar . Tree-width is a minimal upper bound for book thickness (page number ) and acyclic chromatic number    . 222The acyclic chromatic number of a graph is the minimum number of colors needed to color the vertices such that no two adjacent vertices share the same color and no cycle is bichromatic(cf. ). If a graph G𝐺G has bounded Vertex-Cover Number, then it also has bounded tree-width.333The Vertex-Cover Number is the smallest number of vertices needed to cover all edges in a graph, meaning each edge has at least one endpoint in the vertex cover(cf. ). If a graph G𝐺G has bounded Tree-width, then it also has bounded Degeneracy, Average Degree, Minimum Degree, Domatic Number , and Distance to Disconnected .444Degeneracy is the smallest number d𝑑d such that every subgraph has a vertex of degree at most d𝑑d, indicating a graph’s sparsity(cf. ). For any graph G𝐺G, box​(G)≤tw​(G)+2box𝐺tw𝐺2\\text{box}(G)\\leq\\text{tw}(G)+2, where box​(G)box𝐺\\text{box}(G) and tw​(G)tw𝐺\\text{tw}(G) denote the boxicity and treewidth of G𝐺G, respectively . 555The boxicity of a graph is the minimum number of dimensions needed to represent the graph as an intersection graph of axis-aligned boxes in Euclidean space (cf.  ). Every graph of tree-width k𝑘k has a balanced vertex cut of size at most k+1𝑘1k+1 . 666A balanced vertex cut of size k𝑘k is a set of k𝑘k vertices whose removal divides a graph into roughly equal-sized components . Every graph of tree width k𝑘k is k𝑘k-degenerate . Every graph of tree-width k𝑘k admits a 2-balanced binary tree-decomposition of width at most 3​k+23𝑘23k+2 . Let G𝐺G be a graph. Then tw​(G)≥tw𝐺absent\\text{tw}(G)\\geq minimum degree . Let G𝐺G be a graph on n𝑛n vertices. Then tw​(G)≤n−tw𝐺limit-from𝑛\\text{tw}(G)\\leq n- maximum independent set . 777The maximum independent set is the largest set of vertices in a graph where no two vertices are adjacent, meaning no edges exist between any pair of vertices in the set(cf.9 ). Let G𝐺G be a graph and m≥k≥1𝑚𝑘1m\\geq k\\geq 1 integers. If tw​(G)≥k+m−1tw𝐺𝑘𝑚1\\text{tw}(G)\\geq k+m-1, then G𝐺G has a k𝑘k-mesh of order m𝑚m . If G𝐺G is a k𝑘k-outerplanar graph, then tw​(G)≤3​k−1tw𝐺3𝑘1\\text{tw}(G)\\leq 3k-1 . Please refer to each reference.\n\nReference markers found: [395]\n\nContext windows for each [ref]:\n[ref]395: G𝐺G with bw​(G)≥2bw𝐺2\\text{bw}(G)\\geq 2 (bw: branch-width) . tw​(G)≤2⋅tcw​(G)2+3⋅tcw​(G)tw𝐺⋅2tcwsuperscript𝐺2⋅3tcw𝐺\\text{tw}(G)\\leq 2\\cdot\\text{tcw}(G)^{2}+3\\cdot\\text{tcw}(G) (tcw: Tree-cut-width) [ref]395. boow​(G)≤tw​(G)+1boow𝐺tw𝐺1\\text{boow}(G)\\leq\\text{tw}(G)+1 (boow: Boolean-width) [ref]395. If a graph G𝐺G has bounded tree-width, then it also has bounded sparse twin-width, bounded\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 395,\n            \"titles\": [\n                \"Algorithmic Applications of Tree-Cut Width\",\n                \"Faq: questions asked frequently\",\n                \"Cops, robbers, and threatening skeletons: Padded decomposition for minor-free graphs\",\n                \"Modular-width: An auxiliary parameter for parameterized parallel complexity\",\n                \"Equivalents of the Axiom of Choice\",\n                \"Tree-like structure in large social and information networks\",\n                \"On the boolean-width of a graph: Structure and applications\",\n                \"Marshals, monotone marshals, and hypertree-width\",\n                \"Directed tree-width examples\",\n                \"Tree-width and functional dependencies in databases\",\n                \"Games for width parameters and monotonicity\",\n                \"Hypertree-depth and minors in hypergraphs\",\n                \"Hypertree width and related hypergraph invariants\",\n                \"Linear rank-width and linear clique-width of trees\",\n                \"Spanning forests of a digraph and their applications\",\n                \"Simultaneous feedback edge set: A parameterized perspective\",\n                \"Verifying communicating multipushdown systems via split-width\",\n                \"Verifying communicating multi-pushdown systems via split-width\",\n                \"Certain concepts of bipolar fuzzy directed hypergraphs\",\n                \"Fuzzy hypergraphs\",\n                \"Bipolar neutrosophic graph structures\",\n                \"Tangle-tree duality in infinite graphs\",\n                \"Graph functionality\",\n                \"Complex neutrosophic set\",\n                \"Neutrosophic vague set theory\",\n                \"Dynamic Parameterized Problems and Algorithms\",\n                \"Cycle decompositions iv: complete directed graphs and fixed length directed cycles\",\n                \"Submodular partition functions\",\n                \"On the path-width of planar graphs\",\n                \"Graph searching games and width measures for directed graphs\",\n                \"Combinatorics of finite sets\",\n                \"A characterization of bisubmodular functions\",\n                \"A survey on hypergraph representation learning\",\n                \"Algorithms for computing network coding rate regions via single element extensions of matroids\",\n                \"Easy problems for tree-decomposable graphs\",\n                \"The Algorithmic Complexity of Tree-Clique Width\",\n                \"Parameterized compilability\",\n                \"The restricted arc-width of a graph\",\n                \"Knowledge means ‘all’, belief means ‘most’\",\n                \"A combinatorial characterization of resolution width\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]395 based on the context and research area of Various Properties of Various Ultrafilters, Various Graph Width Parameters, and Various Connectivity Systems. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}