{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Using BERT Encoding and Sentence-Level Language Model for Sentence Ordering\n\nPaper Abstract: \n\nPaper Section Text:\nModeling text coherence and logical sequences of events is a fundamental problem in natural language processing 5. Coherence represents the logical connections between the words, sentences and events in a text. An event is generally considered to be the verb of a sentence along with its constellation of arguments, such as subject and object . In a coherent narrative text, events follow a logical order, which makes it possible for a reader to make sense of the text. In NLP tasks, “Sentence Ordering” models are suggested to learn high-level structure that causes sentences to appear in a specific order in human-authored texts and by learning to order sentences we can model text coherence5. “Sentence ordering” refers to organizing a given shuffled set of sentences into a coherent order 5. Sentence ordering assists in modeling coherence in text, which in turn can be applied in a variety of tasks such as multi-document summarization  1, story understanding , and retrieval based QA systems 5. A key factor to to solve the problem of sentence ordering is to find a coherent sequence of events appeared in the input sentences. In natural language processing, events are often meant to be the verbs of sentences and their dependencies, such as the subject and the object 9. A number of studies have proposed methods to order events based on their temporal and causal relations , or the semantic roles . The researchers developed a Skip-thought [ref]18 encoder-decoder model utilizing an RNN. It takes a sentence and encodes it into a constant-length vector, followed by previous and subsequent sentences. Therefore, all input is first encrypted using a hidden network vector; then its output is decrypted from that vector. Pichotta & Mooney [ref]34 replaced the RNN with an LSTM, and proposed a sentence-level language model to predict the next sentence for the script inference task. Nevertheless, skip-thought’s architecture’s simplicity results in a lower quality of creating sentences embeddings compared to many newer methods and networks like BERT . The system uses an RNN-based encoder-decoder architecture, whereas SBERT-WK  uses a Transformer-based architecture and an attention mechanism to encode the sentences into vectors. According to , a statistical script system model an event sequence as a probabilistic model and infer additional events from a document events. This system teaches the linguistic model of events; despite this, some critical information in the sentence can be ignored because only verbs and their dependents are used. Thus, the clue words (adverbs such as “then”, “before”, and “after”) are omitted. In this paper, we propose a sentence-level language model to solve the problem of sentence ordering. Language models have been popular for years at the word and letter levels  . LSTMs  and RNNs 6 have been vastly used for teaching language models at the word and letter levels is beneficial 8    . These models take a single word or character as input at time t, update the hidden mode vector, and predict the next word or character at time t+1. Kiros used a sentence level language model based on the RNN [ref]18. Pichotta in [ref]34 used LSTM-based sentence-level models for script inference due to the problem of RNNs, the vanishing gradients. RNNs and LSTMs encrypt information about one sentence and decode information about the following sentence. Despite this, these networks not use a self-attention mechanism for encoding sentences, and some information is lost. We use a sentence level language model based on the universal transformers (UT) . A generalization of the Transformer model, the UT model is a parallel-in-time recurrent sequence model. The UT model combines two aspects of feed-forward models: parallelism and global receptive field. An additional feature is the position-based halting mechanism. Using a self-attention mechanism, the Universal Transformer refines its representations for all sentences in the sequence in parallel. Our model involves three components: the first component encodes sentences; the second one uses a neural network to teach the language model at the sentence level by universal transformers (UT) and to predict the next sentence. The last component uses the cosine similarity and Brute Force search to order sentences. We aim to design a model that can capture the sequence of events by arranging a set of sentences. The model we propose is designed to organize shuffled sentences of short stories. By using this method, we encode sentences by the SBERT-WK model, which causes us to pay attention to every word within a sentence equal to its importance and transform the sentence into a vector. Thus the embedding contains the clue words information. To capture the relationship between Sentences, We use a UT-based language model, which predicts the next sentence of the current sentence. Finally, we use a Brute Force search, using the scoring function based on cosine similarity, which is scored between the candidate sentence and other sentences, to maximize the sum of similarities between two consecutive sentences. As dataset, we use ROCStories , which includes around 100K short 5-sentence stories, written by human turkers. The gold data follows the order similar to the original order in the stories. The main applications of sentence ordering can be mentioned as: extractive and multi-document text summarization , retrieval based QA systems 5, storytelling , text coherence modeling 5, discourse coherence , and text generation systems .\n\nReference markers found: [18]\n\nContext windows for each [ref]:\n[ref]18: subject and the object 9. A number of studies have proposed methods to order events based on their temporal and causal relations , or the semantic roles . The researchers developed a Skip-thought [ref]18 encoder-decoder model utilizing an RNN. It takes a sentence and encodes it into a constant-length vector, followed by previous and subsequent sentences. Therefore, all input is first\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 18,\n            \"titles\": [\n                \"Skip-Thought Vectors\",\n                \"Texas (Nov 2016). https://doi.org/10.18653/v1/D16-1091\",\n                \"Sort story: Sorting jumbled images and captions into stories\",\n                \"Inferring strategies for sentence ordering in multidocument news summarization\",\n                \"Modeling local coherence: An entity-based approach\",\n                \"Catching the drift: Probabilistic content models, with applications to generation and summarization\",\n                \"A neural probabilistic language model\",\n                \"A bottom-up approach to sentence ordering for multi-document summarization\",\n                \"Discourse-Aware Neural Rewards for Coherent Text Generation\",\n                \"Universal sentence encoder for English\",\n                \"Unsupervised learning of narrative event chains\",\n                \"Unsupervised learning of narrative schemas and their participants\",\n                \"Universal Transformers\",\n                \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n                \"A unified local and global model for discourse coherence\",\n                \"End-to-End Neural Sentence Ordering Using Pointer Network\",\n                \"Handling oov words in nmt using unsupervised bilingual embedding\",\n                \"Long short-term memory\",\n                \"Exploring the limits of language modeling\",\n                \"Open vocabulary handwriting recognition using combined word-level and character-level language models\",\n                \"Deep attentive ranking networks for learning to order sentences\",\n                \"Probabilistic text structuring: Experiments with sentence ordering\",\n                \"Automatic evaluation of information ordering: Kendall’s tau\",\n                \"Neural Net Models of Open-domain Discourse Coherence\",\n                \"Automatic evaluation of machine translation quality using longest common subsequence and skip-bigram statistics\",\n                \"Sentence Ordering and Coherence Modeling using Recurrent Neural Networks\",\n                \"Recurrent neural networks\",\n                \"Efficient estimation of word representations in vector space\",\n                \"Empirical evaluation and combination of advanced language modeling techniques\",\n                \"From Event to Story Understanding\",\n                \"A corpus and cloze evaluation for deeper understanding of commonsense stories\",\n                \"Caters: Causal and temporal relation scheme for semantic annotation of event structures\",\n                \"Lsdsem 2017 shared task: The story cloze test\",\n                \"A Decomposable Attention Model for Natural Language Inference\",\n                \"Using Sentence-Level LSTM Language Models for Script Inference\",\n                \"A new sentence ordering method using bert pretrained model\",\n                \"Bidirectional recurrent neural networks\",\n                \"Neural machine translation of rare words with subword units\",\n                \"Sequence to sequence learning with neural networks\",\n                \"SBERT-WK: A Sentence Embedding Method by Dissecting BERT-based Word Models\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]18 based on the context and research area of Using BERT Encoding and Sentence-Level Language Model for Sentence Ordering. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}