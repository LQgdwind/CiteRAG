{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Flip-Breakability: A Combinatorial Dichotomy for Monadically Dependent Graph Classes N.M. was supported by the German Research Foundation (DFG) with grant agreement No. 444419611. S.T. was supported by the project BOBR that is funded from the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation programme with grant agreement No. 948057. The BOBR project also supported a stay of N.M. at the University of Warsaw, where part of this work was done.\n\nPaper Abstract: \n\nPaper Section Text:\nTo approach Conjecture 1.1,\na combinatorial characterization of monadic dependence is sought.\nBased\non the development in the sparse, orderless, and ordered cases discussed above,\nit appears that what is needed are\ncombinatorial dichotomy results, stating that all monadically dependent graph classes\nexhibit structure which can be used to design efficient algorithms,\nwhile all other graph classes exhibit a sufficient lack of structure,\nwhich can be used to prove hardness results.\nThe three known restricted classifications of classes with fpt model checking\nwere enabled in part (see discussion below) thanks to such combinatorial dichotomies\nfor nowhere dense, monadically stable, and bounded twin-width graph classes.\nHowever, for monadically dependent classes not a single combinatorial characterization has been known.\nPrevious characterizations of monadic dependence (for example, via indiscernible sequences or existentially defined canonical configurations  ) all have a logical, rather than combinatorial, aspect. This limits their algorithmic usefulness. In this paper, we provide the first two purely combinatorial characterizations of monadically dependent classes,\nwhich together constitute a combinatorial dichotomy theorem for these classes. On the one hand, we show that monadically dependent graph classes have a Ramsey-like property called\nflip-breakability, which guarantees that any large set of vertices W𝑊W contains\ntwo still-large subsets A,B𝐴𝐵A,B that in a certain sense are strongly separated. On the other hand, we show that graph classes that are monadically independent\ncontain certain highly regular patterns as induced subgraphs, which are essentially two highly interconnected sets. As argued below, flip-breakability\nmight be a crucial step towards establishing fixed-parameter tractability of the model checking problem for monadically dependent classes,\nand settling the tractability side of 1.1.\nMoreover, we use the patterns of the second characterization to prove\nthe hardness side of 1.1: we show that first-order model checking is AW[∗*]-hard on every hereditary graph class that is monadically independent (Theorem 1.7).\nWe now present our two combinatorial characterizations of monadically dependent classes in more detail. Flips are a central emerging mechanism in the study of well-behaved graph classes (e.g.,  [ref]5  ).\nA k𝑘k-flip of a graph G𝐺G is a graph H𝐻H obtained from G𝐺G by partitioning the vertex set into k𝑘k parts and,\nfor every pair X,Y𝑋𝑌X,Y of parts, either leaving the adjacency between X𝑋X and Y𝑌Y intact, or complementing it (see also Section 4). We use flips to measure the interaction between vertex sets A,B𝐴𝐵A,B at a fixed distance r𝑟r in a graph G𝐺G.\nIntuitively, if for some small value k𝑘k there is a k𝑘k-flip H𝐻H of G𝐺G\nin which the distance distH​(A,B)subscriptdist𝐻𝐴𝐵\\textnormal{dist}_{H}(A,B) is larger than r𝑟r,\nthen this witnesses that the sets A𝐴A and B𝐵B are “well-separated” at distance r𝑟r. Consider for example the graph G𝐺G on the left side of Figure 3, consisting of stacked half-graphs.\nApplying a flip between the blue squares and the blue circles (as depicted to the right of Fig. 3),\nand between the orange squares and the orange circles,\nwe obtain a 555-flip of G𝐺G in which the sets A𝐴A and B𝐵B have distance at least 666. Roughly, our first main result expresses that for graphs from a monadically dependent class,\nin every sufficiently large vertex set\nW𝑊W, we can find two still-large subsets A𝐴A and B𝐵B\nwhose distance in some O​(1)𝑂1O(1)-flip\nis larger than a given constant r𝑟r.\nThis is formally expressed as follows. A class of graphs 𝒞𝒞\\mathcal{C} is flip-breakable\nif for every radius r∈ℕ𝑟ℕr\\in\\mathrm{\\mathbb{N}} there exists a function\nNr:ℕ→ℕ:subscript𝑁𝑟→ℕℕN_{r}:\\mathrm{\\mathbb{N}}\\to\\mathrm{\\mathbb{N}} and a constant kr∈ℕsubscript𝑘𝑟ℕk_{r}\\in\\mathrm{\\mathbb{N}} such that for all m∈ℕ𝑚ℕm\\in\\mathrm{\\mathbb{N}}, G∈𝒞𝐺𝒞G\\in\\mathcal{C} and W⊆V​(G)𝑊𝑉𝐺W\\subseteq V(G) with\n|W|⩾Nr​(m)𝑊subscript𝑁𝑟𝑚|W|\\geqslant N_{r}(m) there exist subsets A,B⊆W𝐴𝐵𝑊A,B\\subseteq W with |A|,|B|⩾m𝐴𝐵𝑚|A|,|B|\\geqslant m\nand a krsubscript𝑘𝑟k_{r}-flip H𝐻H of G𝐺G such that: A class of graphs is monadically dependent if and only if it is flip-breakable. Our proof is algorithmic: For a fixed monadically dependent class 𝒞𝒞\\mathcal{C} and radius r𝑟r, the subsets A𝐴A and B𝐵B and the witnessing flip H𝐻H can be computed in time O𝒞,r​(|V​(G)|2)subscript𝑂𝒞𝑟superscript𝑉𝐺2O_{\\mathcal{C},r}(|V(G)|^{2}) (Theorem 13.2). As we discuss in Section 2,\nour results are based on a new notion called the insulation property (Definitions 5.2 and 7.2),\nwhich trivially implies flip-breakability, but imposes an even more regular structure on monadically dependent graph classes. The model checking algorithms for nowhere dense classes \nand monadically stable classes  [ref]20\nare respectively based on winning strategies for pursuit-evasion games called the splitter game  and the flipper game .\nThese winning strategies were obtained from\na characterization of nowhere dense classes in terms of uniform quasi-wideness  \nand a characterization of monadically stable classes in terms of flip-flatness .\nBoth are Ramsey-like properties\nwhich are very similar to flip-breakability.\nThe definitions of these three notions match the same template: A class of graphs 𝒞𝒞\\mathcal{C} is … if for every radius r∈ℕ𝑟ℕr\\in\\mathrm{\\mathbb{N}} there exists a function\nNr:ℕ→ℕ:subscript𝑁𝑟→ℕℕN_{r}:\\mathrm{\\mathbb{N}}\\to\\mathrm{\\mathbb{N}} and a constant kr∈ℕsubscript𝑘𝑟ℕk_{r}\\in\\mathrm{\\mathbb{N}} such that for all m∈ℕ𝑚ℕm\\in\\mathrm{\\mathbb{N}}, G∈𝒞𝐺𝒞G\\in\\mathcal{C} and W⊆V​(G)𝑊𝑉𝐺W\\subseteq V(G) with\n|W|⩾Nr​(m)𝑊subscript𝑁𝑟𝑚|W|\\geqslant N_{r}(m) there exist … In all three cases we continue the definition by stating the existence of a large number of vertices that are in a certain sense “well-separated”.\nHowever, the sentence is completed in an increasingly more general way for the three notions.\nThe crucial differences are highlighted in bold. uniform quasi-wide  :  …a set 𝑺⊆V​(G)𝑺𝑉𝐺\\boldsymbol{S}\\subseteq V(G) of at most 𝒌𝒓subscript𝒌𝒓\\boldsymbol{k_{r}} vertices and\nA⊆W∖S𝐴𝑊𝑆A\\subseteq W\\setminus S with |A|⩾m𝐴𝑚|A|\\geqslant m,\nsuch that in G∖S𝐺𝑆G\\setminus S, all vertices from A𝐴A have pairwise distance greater than r𝑟\\boldsymbol{r}. flip-flat :  …a 𝒌𝒓subscript𝒌𝒓\\boldsymbol{k_{r}}-flip H𝐻\\boldsymbol{H} of G𝐺G and\nA⊆W𝐴𝑊A\\subseteq W with |A|⩾m𝐴𝑚|A|\\geqslant m,\nsuch that in H𝐻H, all vertices from A𝐴A have pairwise distance greater than r𝑟\\boldsymbol{r}. flip-breakable:  …a 𝒌𝒓subscript𝒌𝒓\\boldsymbol{k_{r}}-flip 𝑯𝑯\\boldsymbol{H} of G𝐺G and\nA,B⊆W𝐴𝐵𝑊A,B\\subseteq W with |A|,|B|⩾m𝐴𝐵𝑚|A|,|B|\\geqslant m,\nsuch that in H𝐻H, all vertices in A𝐴\\boldsymbol{A} have distance greater than r𝑟\\boldsymbol{r} from all vertices in B𝐵\\boldsymbol{B}. In the context of ordered graphs, the model checking algorithm for classes of bounded twin-width\ncrucially relied on a characterization of these classes in terms of bounded grid rank [7, Sec. 3.4].\nRephrasing this characterization in the language of this paper, it reads as follows. A class of ordered graphs 𝒞𝒞\\mathcal{C} has bounded grid rank\nif there exists k∈ℕ𝑘ℕk\\in\\mathrm{\\mathbb{N}} such that for all G∈𝒞𝐺𝒞G\\in\\mathcal{C}\nand ordered sequences of vertices\na1<⋯<ak∈V​(G)subscript𝑎1⋯subscript𝑎𝑘𝑉𝐺a_{1}<\\dots<a_{k}\\in V(G), b1<⋯<bk∈V​(G)subscript𝑏1⋯subscript𝑏𝑘𝑉𝐺b_{1}<\\dots<b_{k}\\in V(G),\nthere exists\na k𝑘k-flip H𝐻H of G𝐺G\nand indices i,j∈[k−1]𝑖𝑗delimited-[]𝑘1i,j\\in[k-1] defining ranges\nA={a∈V​(G)∣ai⩽a⩽ai+1}𝐴conditional-set𝑎𝑉𝐺subscript𝑎𝑖𝑎subscript𝑎𝑖1A=\\{a\\in V(G)\\mid a_{i}\\leqslant a\\leqslant a_{i+1}\\},\nB={b∈V​(G)∣bj⩽b⩽bj+1}𝐵conditional-set𝑏𝑉𝐺subscript𝑏𝑗𝑏subscript𝑏𝑗1B=\\{b\\in V(G)\\mid b_{j}\\leqslant b\\leqslant b_{j+1}\\},\nsuch that there are no edges incident to both A𝐴A and B𝐵B in H𝐻H. Flip-breakability combines the distance-r𝑟r-based aspects of uniform quasi-wideness and flip-flatness with\nthe “no edges incident to both A𝐴A and B𝐵B” criterion of grid rank.\nUsing our insulation property, one can easily reprove the characterization of nowhere dense classes\nin terms of uniform quasi-wideness , of monadically stable classes in terms of flip-flatness ,\nand of classes of ordered graphs with bounded twin-width in terms of grid rank [ref]7. Given that flip-breakability characterizes monadically dependent graph classes\nand naturally generalizes the previous notions,\nwe believe that it will also play a crucial role in a future model checking algorithm for monadically dependent classes:\nMirroring the situation for nowhere dense and monadically stable classes,\nflip-breakability might lead to a characterization of monadically dependent classes\nin terms of a pursuit-evasion game.\nJust like the previous two algorithms   [ref]20,\nwinning strategies for this game might then be useful for model checking,\nand settling the backward direction of 1.1.\n(Note however that in each of these cases,\nthe games where only one of the main ingredients\nof the model checking algorithm). Our results apply in the more general setting of binary structures, rather than graphs,\nthat is, of structures equipped with one or more binary relation.\nIn particular, we prove that monadically dependent classes of binary structures can be equivalently characterized in terms of flip-breakability, defined suitably for binary structures.\nAs an application, we derive a key result of [ref]7: that monadically dependent classes of ordered graphs have bounded grid rank (see definition above). Let 𝒞𝒞\\mathcal{C} be a monadically dependent class of ordered graphs.\nThen 𝒞𝒞\\mathcal{C} has bounded grid rank. The previously highlighted similarities between flip-breakability, flip-flatness, and uniform quasi-wideness\nsuggest the following natural variations of flip-breakability.\nWe allow to modify the graph using either\n(1) flips or vertex deletions\nand demand that the resulting subset is either\n(2) flat or broken,\nthat is, either pairwise separated or separated into two large sets.\nWe further additionally parameterize the type of separation to be either\n(3) distance-r𝑟r or distance-∞\\infty.\nWhile distance-r𝑟r separation corresponds to the usual kind given in Definition 1.2,\ndistance-∞\\infty separation demands sets to be in different connected components of the graph.\nThis is formalized by the following definition. A class of graphs 𝒞𝒞\\mathcal{C} is distance-∞\\infty flip-breakable,\nif there exists a function\nN:ℕ→ℕ:𝑁→ℕℕN:\\mathrm{\\mathbb{N}}\\to\\mathrm{\\mathbb{N}} and a constant k∈ℕ𝑘ℕk\\in\\mathrm{\\mathbb{N}} such that for all m∈ℕ𝑚ℕm\\in\\mathrm{\\mathbb{N}}, G∈𝒞𝐺𝒞G\\in\\mathcal{C} and W⊆V​(G)𝑊𝑉𝐺W\\subseteq V(G) with\n|W|⩾N​(m)𝑊𝑁𝑚|W|\\geqslant N(m) there exist subsets A,B⊆W𝐴𝐵𝑊A,B\\subseteq W with |A|,|B|⩾m𝐴𝐵𝑚|A|,|B|\\geqslant m\nand a k𝑘k-flip H𝐻H of G𝐺G such that in H𝐻H, no two vertices a∈A𝑎𝐴a\\in A and b∈B𝑏𝐵b\\in B are in the same connected component. Using this terminology, uniform quasi-wideness, for example, becomes distance-r𝑟r deletion-flatness.\nFor formal definitions of these variants, we refer to Section 18.\nAs summarized in the following Table 1,\neach of the eight possible combinations of (1), (2) and (3) characterizes a well-studied property of graph classes. Notably, the right column of Table 1 corresponds to conjectured tractability limits of the model checking problem, where the distance-r𝑟r and distance-∞\\infty variants correspond to, respectively, first-order and monadic second-order logic, and the flip and deletion variants correspond to hereditary and monotone classes.\nFurthermore, it is interesting to see that the seemingly more general deletion-breakability collapses to deletion-flatness, as both properties characterize nowhere denseness. Imposing bounds on the size of certain patterns is a common and powerful mechanism for defining well-behaved graph classes.\nFor example, by definition, a class 𝒞𝒞\\mathcal{C} is nowhere dense if and only if for every r∈ℕ𝑟ℕr\\in\\mathrm{\\mathbb{N}},\n𝒞𝒞\\mathcal{C} avoids some r𝑟r-subdivided clique as a subgraph.\nIn similar spirit, it is shown [ref]20 that an orderless class 𝒞𝒞\\mathcal{C} is monadically stable if and only if for every r∈ℕ𝑟ℕr\\in\\mathrm{\\mathbb{N}},\nthe class 𝒞𝒞\\mathcal{C} avoids all r𝑟r-flips of the r𝑟r-subdivided clique, and its line graph, as an induced subgraph.\nA similar characterization for monadically dependent classes has so far been elusive.\nIn this paper, we show that a class 𝒞𝒞\\mathcal{C} is monadically dependent if and only if for every r∈ℕ𝑟ℕr\\in\\mathrm{\\mathbb{N}},\nthe class 𝒞𝒞\\mathcal{C} avoids certain variations of the r𝑟r-subdivision of some complete bipartite graph, as an induced subgraph.\nLet us start by defining these patterns. For r⩾1𝑟1r\\geqslant 1, the star r𝑟r-crossing of order n𝑛n is the r𝑟r-subdivision of Kn,nsubscript𝐾𝑛𝑛K_{n,n}.\nMore precisely, it consists of roots a1,…,ansubscript𝑎1…subscript𝑎𝑛a_{1},\\dots,a_{n} and b1,…,bnsubscript𝑏1…subscript𝑏𝑛b_{1},\\dots,b_{n}\ntogether with r𝑟r-vertex paths {πi,j∣i,j∈[n]}conditional-setsubscript𝜋𝑖𝑗𝑖𝑗delimited-[]𝑛\\{\\pi_{i,j}\\mid i,j\\in[n]\\} that are pairwise vertex-disjoint (see Figure 4).\nWe denote the two endpoints of a path πi,jsubscript𝜋𝑖𝑗\\pi_{i,j} by start​(πi,j)startsubscript𝜋𝑖𝑗\\mathrm{start}(\\pi_{i,j}) and end​(πi,j)endsubscript𝜋𝑖𝑗\\mathrm{end}(\\pi_{i,j}).\nWe require that roots appear on no path, that each root aisubscript𝑎𝑖a_{i} is adjacent to {start​(πi,j)∣j∈[n]}conditional-setstartsubscript𝜋𝑖𝑗𝑗delimited-[]𝑛\\{\\mathrm{start}(\\pi_{i,j})\\mid j\\in[n]\\},\nand that each root bjsubscript𝑏𝑗b_{j} is adjacent to {end​(πi,j)∣i∈[n]}conditional-setendsubscript𝜋𝑖𝑗𝑖delimited-[]𝑛\\{\\mathrm{end}(\\pi_{i,j})\\mid i\\in[n]\\}.\nThe clique r𝑟r-crossing of order n𝑛n is the graph obtained from the star r𝑟r-crossing of order n𝑛n\nby turning the neighborhood of each root into a clique.\nMoreover, we define the half-graph r𝑟r-crossing of order n𝑛n similarly to the star r𝑟r-crossing of order n𝑛n,\nwhere each root aisubscript𝑎𝑖a_{i} is instead adjacent to {start​(πi′,j)∣i′,j∈[n],i⩽i′}conditional-setstartsubscript𝜋superscript𝑖′𝑗formulae-sequencesuperscript𝑖′𝑗delimited-[]𝑛𝑖superscript𝑖′\\{\\mathrm{start}(\\pi_{i^{\\prime},j})\\mid i^{\\prime},j\\in[n],i\\leqslant i^{\\prime}\\},\nand each root bjsubscript𝑏𝑗b_{j} is instead adjacent to {end​(πi,j′)∣i,j′∈[n],j⩽j′}conditional-setendsubscript𝜋𝑖superscript𝑗′formulae-sequence𝑖superscript𝑗′delimited-[]𝑛𝑗superscript𝑗′\\{\\mathrm{end}(\\pi_{i,j^{\\prime}})\\mid i,j^{\\prime}\\in[n],j\\leqslant j^{\\prime}\\}.\nEach of the three r𝑟r-crossings contains no edges other than the ones described.\nAt last, the comparability grid of order n𝑛n consists of vertices\n{ai,j∣i,j∈[n]}conditional-setsubscript𝑎𝑖𝑗𝑖𝑗delimited-[]𝑛\\{a_{i,j}\\mid i,j\\in[n]\\} and edges between vertices ai,jsubscript𝑎𝑖𝑗a_{i,j} and ai′,j′subscript𝑎superscript𝑖′superscript𝑗′a_{i^{\\prime},j^{\\prime}} if and only if either i=i′𝑖superscript𝑖′i=i^{\\prime}, or j=j′𝑗superscript𝑗′j=j^{\\prime},\nor i<i′⇔j<j′⇔𝑖superscript𝑖′𝑗superscript𝑗′i<i^{\\prime}\\Leftrightarrow j<j^{\\prime}. It is easy to see that these patterns are logically complicated:\nFor every fixed r𝑟r, the four graph classes containing these four types of patterns are monadically independent. We also need to consider certain flips of the above patterns.\nTo this end, we partition the vertices of star, clique, and half-graph r𝑟r-crossings into layers:\nThe 0th layer consists of the vertices {a1,…,an}subscript𝑎1…subscript𝑎𝑛\\{a_{1},\\dots,a_{n}\\}.\nThe l𝑙lth layer, for l∈[r]𝑙delimited-[]𝑟l\\in[r], consists of the l𝑙lth vertices of the paths {πi,j∣i,j∈[n]}conditional-setsubscript𝜋𝑖𝑗𝑖𝑗delimited-[]𝑛\\{\\pi_{i,j}\\mid i,j\\in[n]\\}\n(that is, the 1st and r𝑟rth layer, respectively, are\n{start​(πi,j)∣i,j∈[n]}conditional-setstartsubscript𝜋𝑖𝑗𝑖𝑗delimited-[]𝑛\\{\\mathrm{start}(\\pi_{i,j})\\mid i,j\\in[n]\\} and\n{end​(πi,j)∣i,j∈[n]}conditional-setendsubscript𝜋𝑖𝑗𝑖𝑗delimited-[]𝑛\\{\\mathrm{end}(\\pi_{i,j})\\mid i,j\\in[n]\\}).\nFinally, the (r+1)𝑟1(r+1)th layer consists of the vertices {b1,…,bn}subscript𝑏1…subscript𝑏𝑛\\{b_{1},\\dots,b_{n}\\}.\nA flipped star/clique/half-graph r𝑟r-crossing\nis a graph obtained from a\nstar/clique/half-graph r𝑟r-crossing\nby performing a flip where the parts of the specifying partition are the layers of the r𝑟r-crossing.\nNote that while there is only one star/clique/half-graph r𝑟r-crossing of order n𝑛n, there are multiple flipped star/clique/half-graph r𝑟r-crossings of order n𝑛n. Their number is however bounded by 2(r+2)2superscript2superscript𝑟222^{(r+2)^{2}}: an upper bound for the number of possible flips specified by a single partition of size (r+2)𝑟2(r+2). Let 𝒞𝒞\\mathcal{C} be a graph class.\nThen 𝒞𝒞\\mathcal{C} is monadically dependent if and only if for every r⩾1𝑟1r\\geqslant 1 there exists k∈ℕ𝑘ℕk\\in\\mathrm{\\mathbb{N}}\nsuch that 𝒞𝒞\\mathcal{C} excludes as induced subgraphs all flipped star r𝑟r-crossings of order k𝑘k, and all flipped clique r𝑟r-crossings of order k𝑘k, and all flipped half-graph r𝑟r-crossings of order k𝑘k, and the comparability grid of order k𝑘k. This characterization by forbidden induced subgraphs opens the door for various algorithmic, logical, and combinatorial hardness results.\nOn the algorithmic side, we prove the hardness part of 1.1. The first-order model checking problem is AW​[∗]AWdelimited-[]\\mathrm{AW}[*]-hard on every hereditary, monadically independent graph class. The result builds on the following logical hardness result, which is of independent interest. Every hereditary, monadically independent graph class efficiently interprets the class of all graphs. Recall that monadically independent classes were defined as those which transduce the class of all graphs. For hereditary classes, the above result strengthens this definition: interpretations are a more restrictive version of transductions, that do not include a nondeterministic coloring step. Moreover, efficient interpretations come with a polynomial time algorithm which,\ngiven an arbitrary input graph G𝐺G, outputs a graph in 𝒞𝒞\\mathcal{C}\nin which G𝐺G is encoded. This allows to reduce the model checking problem for all graphs to the model checking problem on the class 𝒞𝒞\\mathcal{C}, thus proving Theorem 1.7. On the combinatorial side, we show that no hereditary, monadically independent graph class\nis small, has almost bounded twin-width, or has almost bounded flip-width.\nLet us quickly explain the three notions. A graph class 𝒞𝒞\\mathcal{C} is small\nif it contains at most n!​cn𝑛superscript𝑐𝑛n!c^{n} distinct labeled n𝑛n-vertex graphs, for some constant c𝑐c.\nThis notion has been studied in enumerative combinatorics  .\nIt is known that all classes of bounded twin-width are small .\nThe converse implication was conjectured,\nand was subsequently refuted .\nIn the context of ordered graphs,\nit was shown that all small classes of ordered graphs have bounded twin-width [ref]7.\nWe prove the following. Every hereditary, small graph class is monadically dependent. Say that a class 𝒞𝒞\\mathcal{C} of graphs has almost bounded twin-width\nif for every ε>0𝜀0\\varepsilon>0\nthe twin-width of every n𝑛n-vertex graph G∈𝒞𝐺𝒞G\\in\\mathcal{C} is bounded by Oε,𝒞​(nε)subscript𝑂𝜀𝒞superscript𝑛𝜀O_{\\varepsilon,\\mathcal{C}}(n^{\\varepsilon}).\nWe prove the following. Every hereditary, almost bounded twin-width graph class is monadically dependent. In , a family of graph-width parameters called flip-width of radius r𝑟r, for r⩾1𝑟1r\\geqslant 1, is introduced,\ntogether with the ensuing notion of classes of almost bounded flip-width.\nClasses of almost bounded flip-width include all nowhere dense classes, all classes of bounded twin-width, and more generally, and all classes of almost bounded twin-width.\nIt is conjectured that for hereditary graph classes, almost bounded flip-width coincides with monadic dependence: A hereditary graph class 𝒞𝒞\\mathcal{C} has almost bounded flip-width if and only if it is monadically dependent. We prove one implication of this conjecture. Every hereditary, almost bounded flip-width graph class is monadically dependent. Our forbidden patterns characterization Theorem 1.6\ngeneralizes similar previous characterizations.\nRecall that monadic dependence is captured by\nmonadic stability,\nfor hereditary orderless graph classes,\nand by bounded twin-width, for hereditary classes of ordered graphs.\nThe results [ref]20 [ref]7\ncharacterizing monadic dependence in those two settings\ncan be restated as follows. For orderless graph classes, a class 𝒞𝒞\\mathcal{C} is monadically dependent\nif and only if for every r∈ℕ𝑟ℕr\\in\\mathrm{\\mathbb{N}} there exists k∈ℕ𝑘ℕk\\in\\mathrm{\\mathbb{N}}\nsuch that no graph in 𝒞𝒞\\mathcal{C} contains a flipped star r𝑟r-crossing or clique r𝑟r-crossing\nof order k𝑘k as an induced subgraph [ref]20. For classes of ordered graphs, a class 𝒞𝒞\\mathcal{C} is monadically dependent\nif and only if there exists k∈ℕ𝑘ℕk\\in\\mathrm{\\mathbb{N}}\nand a specific, finite family of ordered graphs with 2​k2𝑘2k vertices (similar to a matching\non 2​k2𝑘2k vertices ordered suitably)\nwhich are avoided by 𝒞𝒞\\mathcal{C} as semi-induced ordered subgraphs [ref]7\n(see Theorem 19.16 for a formulation). Our approach towards proving the forbidden patterns characterization and model checking hardness originates in [ref]20 and [ref]7.\nAs a result, we reprove some of their results.\nA subset of the patterns identified in this paper are sufficient to characterize monadic dependence\nin the setting of orderless graph classes.\nAs orderless classes cannot contain large half-graph crossings or comparability grids,\nTheorem 1.6 implies the result of [ref]20 characterizing monadically stable classes in terms of forbidden induced subgraphs.\nIt is worth noting that in [ref]20, for hereditary, orderless, monadically independent graph classes, hardness is shown even for existential model checking.\nAdapting our results to the setting of binary structures, we show how to derive the characterization from [ref]7 of monadically dependent classes of ordered graphs in terms of forbidden patterns. A recent paper by Braunfeld and Laskowski shows that a hereditary class of relational structures is monadically dependent if and only if it is dependent .\nDependence is a generalization of monadic dependence studied in model theory.\nFor the special case of graph classes, our Theorem 1.8 reproves that result.\nSimilarly to our paper, the proof of Braunfeld and Laskowski exhibits certain large configurations (called pre-coding configurations)\nin classes that are monadically independent.\nAs pre-coding configurations are defined in terms of formulas with tuples of free variables, these results are not a purely combinatorial characterization of monadically dependent graph classes. In particular, they seem insufficient for obtaining algorithmic hardness results.\nHowever, we believe that one could also prove Theorem 1.9, stating that small, hereditary classes are dependent, using the results of . In ,\nEppstein and McCarty\nprove that\nmany different types of geometric graphs have unbounded flip-width, and in fact [27, App. A], form monadically independent graph classes.\nThese include interval graphs, permutation graphs, circle graphs, and others. It is shown that these classes contain large interchanges, which\nare similar to 111-subdivided cliques,\nand to our patterns.\nContaining interchanges of arbitrarily large order is a sufficient, but not necessary condition to monadic independence.\n\nReference markers found: [5]\n\nContext windows for each [ref]:\n[ref]5: now present our two combinatorial characterizations of monadically dependent classes in more detail. Flips are a central emerging mechanism in the study of well-behaved graph classes (e.g.,  [ref]5  ).\nA k𝑘k-flip of a graph G𝐺G is a graph H𝐻H obtained from G𝐺G by partitioning the vertex set into k𝑘k parts and,\nfor every pair X,Y𝑋𝑌X,Y of parts, either leaving the adjacency between X𝑋X and\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 5,\n            \"titles\": [\n                \"Twin-width VII: Groups\",\n                \"Algorithms, Logic and Structure Workshop in Warwick – Open Problem Session\",\n                \"Interpreting nowhere dense graph classes as a classical notion of model theory\",\n                \"Easy problems for tree-decomposable graphs\",\n                \"Second-order quantifiers and the complexity of theories\",\n                \"Model checking on interpretations of classes of bounded local cliquewidth\",\n                \"Twin-width IV: ordered graphs and matrices\",\n                \"Twin-width and polynomial kernels\",\n                \"Twin-width I: tractable FO model checking\",\n                \"Twin-width II: small classes\",\n                \"Characterizations of monadic NIP\",\n                \"Existential characterizations of monadic nip\",\n                \"The monadic second-order logic of graphs. i. recognizable sets of finite graphs\",\n                \"Linear time solvable optimization problems on graphs of bounded clique-width\",\n                \"Parameterized Algorithms\",\n                \"Homomorphism preservation on quasi-wide classes\",\n                \"Locally excluding a minor\",\n                \"Unavoidable minors of large 3-connected binary matroids\",\n                \"The parameterized complexity of relational database queries and an improved characterization of w[1]\",\n                \"First-order model checking on monadically stable graph classes\",\n                \"First-Order Model Checking on Structurally Sparse Graph Classes\",\n                \"Indiscernibles and flatness in monadically stable and monadically NIP classes\",\n                \"Asymptotical structure of combinatorial objects\",\n                \"Induced subdivisions and bounded expansion\",\n                \"Testing first-order properties for subclasses of sparse graphs\",\n                \"Neighborhood complexity and kernelization for nowhere dense classes of graphs\",\n                \"Geometric graphs with unbounded flip-width\",\n                \"Fixed-parameter tractability, definability, and model-checking\",\n                \"Deciding first-order properties of locally tree-decomposable structures\",\n                \"On local and non-local properties\",\n                \"First-order interpretations of bounded expansion classes\",\n                \"Flipper Games for Monadically Stable Graph Classes\",\n                \"Shrub-depth: Capturing height of dense graphs\",\n                \"When trees grow low: Shrubs and fast MSO1\",\n                \"Three proofs of the hypergraph ramsey theorem (an exposition)\",\n                \"Ramsey-type results on singletons, co-singletons and monotone sequences in large collections of sets\",\n                \"Logic, graphs, and algorithms\",\n                \"Deciding first-order properties of nowhere dense graphs\",\n                \"A Shorter Model Theory\",\n                \"Approximating clique-width and branch-width\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]5 based on the context and research area of Flip-Breakability: A Combinatorial Dichotomy for Monadically Dependent Graph Classes N.M. was supported by the German Research Foundation (DFG) with grant agreement No. 444419611. S.T. was supported by the project BOBR that is funded from the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation programme with grant agreement No. 948057. The BOBR project also supported a stay of N.M. at the University of Warsaw, where part of this work was done.. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}