{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: PINN Training using Biobjective Optimization: The Trade-off between Data Loss and Residual Loss\n\nPaper Abstract: \n\nPaper Section Text:\nPhysics-informed neural networks (PINN) are neural networks that include the laws of dynamical systems into a deep learning framework.\nMachine learning has emerged as an alternative to numerical discretization in high-dimensional problems governed by partial differential equations.\nNonetheless, a sufficient amount of data as required for training deep neural networks is not necessarily available.\nIn such cases, missing data can be substituted by incorporating additional information obtained from enforcing the physical laws of dynamical systems [ref]33. Such laws can be described by partial or ordinary differential equations.\nOne example where dynamical systems can be used are populations undergoing transitions between different infected or uninfected states during an epidemic, as considered in this paper. PINNs can approximate the solutions of differential equations by training a loss function incorporating the initial and boundary conditions and the residual at so-called collocation points .\nInstead of approximating solutions of differential equations, PINNs can use a system of differential equations describing a certain real-world process along with time-series data sets describing the past course of such a process for the purpose of generating predicitions for future progressions. The loss function of a corresponding neural network includes not solely the so-called data error related to the difference between the output of the network and the reported data used, but also the so-called residual error related to the ODEs or PDEs. Olumoyin et al.¬†[ref]35 refer to a type of feedforward neural network including epidemiological dynamics such as lockdown into their loss function by using the term Epidemiology-Informed Neural Network (EINN).\nEINNs extend PINNs for epidemiology models and are able to capture the dynamics of the spread of the disease and\nthe influence of the mitigation measure.\nThe loss function is enhanced to include time-varying rates using epidemiology facts about the infectious disease [ref]35. Shaier, Raissi and Seshaiyer¬† describe a type of PINN-based neural network that can be applied to increasingly complex systems of differential equations describing various known infectious diseases with the term Disease-Informed Neural Networks (DINN).\nDINNs can be systematically applied to increasingly complex governing systems of differential equations describing infectious diseases.\nThey are able to effectively learn the dynamics of the disease and forecast its progression a month into the future from real-life data . The neural network established and applied in this paper can be described as a special type of EINN or DINN based on a special kind of epidemic compartment model called SVIHR model regarding the susceptible, vaccinated, infected, hospitalized and recovered part of the population. We focus on the German population in this paper, using data provided by the Robert Koch-Institute   and the German COVID-19 Vaccination Dashboard . The model parameters included in (9) can be comprised in a vector œëitalic-œë\\vartheta: This vector is partitioned into fixed parameters pfsubscriptùëùùëìp_{f}, which can be estimated directly from the observed data, and learnable parameters pùëùp, which are crucial for the dynamics of the compartment variables: We use NSFD predictions to improve the estimates for the parameters that govern the dynamics, i.e., the transmission risk Œ≤ùõΩ\\beta and the residual transmission probability after vaccination Œ∫ùúÖ\\kappa.\nTheir values are estimated using NSFD predictions fitted to the observed data so that the predicted and observed peak values have the same magnitude.\nThis approach aims to combine the benefits from both worlds:\nThe numerical predictions that follow a physical model, and the PINN predictions that rely heavily on the observed data.\nSince the NSFD predictions can be computed very efficiently, the parameter values can be easily adapted to different virus variants and to different pandemic waves.\n We describe our PINN approach for a general compartmental model with nùëõn compartments.\nIn the SVIHR model (9), we have n=5ùëõ5n=5. Let be the normalized data vector of reported compartment sizes for lùëôl time points, i.e.¬†t‚àà{t1,‚Ä¶,tl}ùë°subscriptùë°1‚Ä¶subscriptùë°ùëôt\\in\\{t_{1},\\dots,t_{l}\\}.\nIn the application considered here, ti+1‚àítisubscriptùë°ùëñ1subscriptùë°ùëñt_{i+1}-t_{i} is constant (and corresponds to one week) for all i=1,‚Ä¶,l‚àí1ùëñ1‚Ä¶ùëô1i=1,\\dots,l-1.\nLet TùëáT denote an upper bound for the time window under consideration, and\nlet ùí¶p:[0,T]‚Üí‚Ñùn:subscriptùí¶ùëù‚Üí0ùëásuperscript‚Ñùùëõ\\mathcal{K}_{p}:[0,T]\\to\\mathbb{R}^{n} denote the vector valued function reflecting the compartment sizes ùí¶p‚Äã(t)subscriptùí¶ùëùùë°\\mathcal{K}_{p}(t) over time.\nThen we express the vector of right-hand-sides values of (9) by The subscript pùëùp stands for the learnable model parameters that the system of ODEs depends on, cf.¬†(21), and thus the solution will depend on, too.\nThe system of ODEs in (9) can then be discretized as Our PINN is used to approximate the solution ùí¶p: ‚Üí‚Ñùn:subscriptùí¶ùëù‚Üí01superscript‚Ñùùëõ\\mathcal{K}_{p}: \\rightarrow\\mathbb{R}^{n}\nof the system of ODEs (9) by performing error minimization during training [ref]37.\nThe superscript WùëäW represents the weights used during the forward and backward propagation in the neural network.\nAt time instance tùë°t, t‚àà{t1,‚Ä¶,tl}ùë°subscriptùë°1‚Ä¶subscriptùë°ùëôt\\in\\{t_{1},\\dots,t_{l}\\}, the solution is expressed as where ùí¶pj‚Äã(t)superscriptsubscriptùí¶ùëùùëóùë°\\mathcal{K}_{p}^{j}(t) is the output of the PINN for the jt‚Äãhsuperscriptùëóùë°‚Ñéj^{th} compartment at time tùë°t\nand depends on the parameter pùëùp given by equation (21).\nThe parameters WùëäW are optimized during the backpropagation process of the neural network such that ùí´‚Äã‚Ñê‚Äãùí©‚Äãùí©pWùí´‚Ñêùí©superscriptsubscriptùí©pW\\operatorname{\\mathcal{PINN}_{p}^{W}} fits the reported data ùí¶^^ùí¶\\hat{\\mathcal{K}} in a least-squares sense [ref]37.\nIn the it‚Äãhsuperscriptùëñùë°‚Ñéi^{th} time step tisubscriptùë°ùëñt_{i}, i‚àà{1,‚Ä¶,l}ùëñ1‚Ä¶ùëôi\\in\\{1,\\dots,l\\},\nwith PINN output ùí´‚Äã‚Ñê‚Äãùí©‚Äãùí©pW‚Å°(ti)ùí´‚Ñêùí©superscriptsubscriptùí©pWsubscriptùë°ùëñ\\operatorname{\\mathcal{PINN}_{p}^{W}}({{t_{i}}}), we compute the usual data error defined as where we employed in (23) the Euclidian norm in ‚Ñùnsuperscript‚Ñùùëõ\\mathbb{R}^{n}. Next, let us\nextend the loss function of the PINN by the additional term where means that the PINN solves the given ODE system more reliably by enforcing additional constraints.\nThe computation of the time derivative of the neural network output d‚Äãùí´‚Äã‚Ñê‚Äãùí©‚Äãùí©pW‚Å°(t)d‚Äãt|t=tievaluated-atdùí´‚Ñêùí©superscriptsubscriptùí©pWùë°dùë°ùë°subscriptùë°ùëñ\\frac{\\mathrm{d}\\operatorname{\\mathcal{PINN}_{p}^{W}}({{t}})}{\\mathrm{d}t}\\Big{|}_{t={{t_{i}}}} can be performed using automatic differentiation .\nThen the physics-informed part of the loss function, the residual error, is given by We introduce a hyperparameter and weighting factor Œ±‚àà ùõº01\\alpha\\in  weighting the data loss and residual loss in the loss function.\nWe define the overall loss function as and the minimization problem of the neural network as We want to note briefly that small values of the residual loss MSE‚Ñ±subscriptMSE‚Ñ±\\operatorname{\\operatorname{MSE}_{\\mathcal{F}}} do not necessarily mean that the obtained solution is close to the exact solution of (9).\nFor this, one additionally needs the well-posedness of the problem (9) and the stability of the scheme used.\nFor all implementations, the programming language Python and the deep-learning framework of PyTorch are used.\nWe used a standard network architecture with three fully connected hidden layers, each with 30 neurons, see Figure¬†2 for illustration.\nFor each time point t‚àà[0,T]ùë°0ùëát\\in[0,T], the network returns values for all five compartment sizes in the vector ùí¶p‚Äã(t)‚àà‚Ñù5subscriptùí¶ùëùùë°superscript‚Ñù5\\mathcal{K}_{p}(t)\\in\\mathbb{R}^{5}.\nThe network architecture was inspired by Ben Moseley‚Äôs harmonic oscillator PINN, see , and represents a reasonable compromise in terms of network complexity. We used hyperbolic tangent activation functions and the Adam optimizer for the training.\nWe refer to  for a survey of descent methods in machine learning.\nWe also used a learning rate schedule that significantly reduces the learning rate after about 50%percent5050\\,\\% of training iterations.\nMore specifically, the learning rate t‚Äã(Œ∫)ùë°ùúÖt(\\kappa) in iteration Œ∫‚àà{1,‚Ä¶,Œ∫max}ùúÖ1‚Ä¶subscriptùúÖmax\\kappa\\in\\{1,\\dots,\\kappa_{\\text{max}}\\} is given by where tstartsubscriptùë°startt_{\\text{start}} and tendsubscriptùë°endt_{\\text{end}} denote the initial and final learning rates, respectively.\nIn our experiments, we used tstart=0.003subscriptùë°start0.003t_{\\text{start}}=0.003 and tend=0.00015subscriptùë°end0.00015t_{\\text{end}}=0.00015.\nFigure¬†3 shows the learning rate schedule for Œ∫max=1000subscriptùúÖmax1000\\kappa_{\\text{max}}=1000 iterations. The data loss was evaluated with data sets obtained from the RKI   and the German Vaccination Dashboard .\nThese data were preprocessed and rescaled to unit intervals before calculating the data loss MSEùí∞subscriptMSEùí∞\\operatorname{\\operatorname{MSE}_{\\mathcal{U}}}.\nSince this leads to a corresponding rescaling of the PINN predictions ùí¶psubscriptùí¶ùëù\\mathcal{K}_{p}, the corresponding scaling factors were also included in the ODE system (9) when evaluating MSE‚Ñ±subscriptMSE‚Ñ±\\operatorname{\\operatorname{MSE}_{\\mathcal{F}}}. The data refers to the calendar weeks 10 in 2020 to 14 in 2022. Weekly case-hospitalization,\ncase-fatality and vaccination rates were computed based on the given data sets.\nThe RKI registers deceased individuals, in whom the SARS-CoV-2 pathogen was detected, as people who died from COVID-19. The weighted loss function ‚ÑíŒ±=Œ±‚ÄãMSEùí∞+(1‚àíŒ±)‚ÄãMSE‚Ñ±subscript‚ÑíùõºùõºsubscriptMSEùí∞1ùõºsubscriptMSE‚Ñ±\\mathcal{L}_{\\alpha}=\\alpha\\operatorname{\\operatorname{MSE}_{\\mathcal{U}}}+(1-\\alpha)\\operatorname{\\operatorname{MSE}_{\\mathcal{F}}} consists of the data loss and the residual loss term.\nAs stated in [ref]33, training using the data loss (i.e., measurements, physics-uninformed) is considered supervised learning, while training with the residual loss using the governing differential equation (physics-informed) is considered unsupervised learning.\n\nReference markers found: [33]\n\nContext windows for each [ref]:\n[ref]33: neural networks is not necessarily available.\nIn such cases, missing data can be substituted by incorporating additional information obtained from enforcing the physical laws of dynamical systems [ref]33. Such laws can be described by partial or ordinary differential equations.\nOne example where dynamical systems can be used are populations undergoing transitions between different infected or\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 33,\n            \"titles\": [\n                \"Scientific Machine Learning through Physics-Informed Neural Networks: Where we are and What‚Äôs next\",\n                \"Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations\",\n                \"Three ways to solve partial differential equations with neural networks ‚Äì A review\",\n                \"Theory-inspired machine learning ‚Äì towards a synergy between knowledge and data\",\n                \"last access: May 6, 2022\",\n                \"last access: May 5, 2022\",\n                \"Determining COVID-19 dynamics using physics informed neural networks\",\n                \"Identifiability and predictability of integer- and fractional-order epidemiological models using physics-informed neural networks\",\n                \"fPINNs: fractional physics-informed neural networks\",\n                \"Fractional SEIR model and data-driven predictions of COVID-19 dynamics of Omicron variant\",\n                \"On the Pareto Front of Physics-Informed Neural Networks\",\n                \"NSFnets (Navier-Stokes flow nets): Physics-informed neural networks for the incompressible Navier-Stokes equations\",\n                \"Understanding and mitigating gradient flow pathologies in physics-informed neural networks\",\n                \"Inverse-Dirichlet Weighting Enables Reliable Training of Physics Informed Neural Networks\",\n                \"Multiple-gradient descent algorithm (MGDA) for multiobjective optimization\",\n                \"Steepest descent methods for multicriteria optimization\",\n                \"Multi-Task Learning as Multi-Objective Optimization\",\n                \"The stochastic multi-gradient algorithm for multi-objective optimization and its application to supervised machine learning\",\n                \"Self-Adaptive Physics-Informed Neural Networks using a Soft Attention Mechanism\",\n                \"Meta-learning PINN loss functions\",\n                \"Efficient and Sparse Neural Networks by Pruning Weights in a Multiobjective Learning Approach\",\n                \"A physics-informed neural network to model COVID-19 infection and hospitalization scenarios\",\n                \"Contributions to the mathematical theory of epidemics\",\n                \"A nonstandard finite difference scheme for the SVICDR model to predict COVID-19 dynamics\",\n                \"last access: March 29, 2022\",\n                \"An Introduction to Mathematical Epidemiology, 1st Edition\",\n                \"last access: January 10, 2022\",\n                \"Exact solutions to a finite-difference model of a nonlinear reaction-advection equation: Implications for numerical analysis\",\n                \"Applications of nonstandard finite difference schemes\",\n                \"A nonstandard finite difference scheme for a time-fractional model of Zika virus transmission\",\n                \"Physics-informed machine learning\",\n                \"Data-driven deep-learning algorithm for asymptomatic COVID-19 model with varying mitigation measures and transmission rate\",\n                \"Data-driven approaches for predicting spread of infectious diseases through DINNs: Disease Informed Neural Networks\",\n                \"Estimating the time-dependent contact rate of SIR and SEIR models in mathematical epidemiology using physics-informed neural networks\",\n                \"Automatic Differentiation in Machine Learning: a Survey\",\n                \"last access: December 12, 2022\",\n                \"An overview of gradient descent optimization algorithms\",\n                \"Multicriteria Optimization, 2nd Edition\",\n                \"A Simple and Efficient Dichotomic Search Algorithm for Multi-Objective Mixed Integer Linear Programmes\",\n                \"A closer look at drawbacks of minimizing weighted sums of objectives for Pareto set generation in multicriteria optimization problems\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]33 based on the context and research area of PINN Training using Biobjective Optimization: The Trade-off between Data Loss and Residual Loss. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}