{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Decoupled Context Processing for Context Augmented Language Modeling\n\nPaper Abstract: \n\nPaper Section Text:\nWe use Encoder-Decoder Transformer architecture [ref]39 to integrate language model input and retrieved context. We denote the context encoder and LM decoder as Enc and Dec respectively. Given an input token sequence 𝐱=(x1,x2,…,xn)𝐱subscript𝑥1subscript𝑥2…subscript𝑥𝑛\\mathbf{x}=(x_{1},x_{2},...,x_{n}), the task is to predict the next tokens 𝐲=(y1,y2,…,ys)𝐲subscript𝑦1subscript𝑦2…subscript𝑦𝑠\\mathbf{y}=(y_{1},y_{2},...,y_{s}). Without external context, we concatenate 𝐱𝐱\\mathbf{x} before 𝐲𝐲\\mathbf{y} and the task becomes a traditional auto-regressive language modeling to predicts targets 𝐲𝐲\\mathbf{y} following input (or “promopt”) 𝐱𝐱\\mathbf{x}.\nIn this setting, only the decoder is involved (denoted as “No-retrieval”).\nTo incorporate external context, we use 𝐜𝐜\\mathbf{c}, 𝐱𝐱\\mathbf{x}, 𝐲𝐲\\mathbf{y} to serve as encoder input, decoder input and decoder target respectively. We first use a retriever to identify the context 𝐜=(c1,c2,…,cm)𝐜subscript𝑐1subscript𝑐2…subscript𝑐𝑚\\mathbf{c}=(c_{1},c_{2},…,c_{m}) given input 𝐱𝐱\\mathbf{x}, then fetch the the pre-computed encoder output of the corresponding context tokens 𝐇Enc​(𝐜;θEnc)subscript𝐇Enc𝐜subscript𝜃Enc\\mathbf{H}_{\\texttt{Enc}}(\\mathbf{c};\\theta_{\\texttt{Enc}}) as output.\nIn this setting, encoder output 𝐇Encsubscript𝐇Enc\\mathbf{H}_{\\texttt{Enc}} is directly used by the decoder through Encoder-Decoder cross-attention to influence the final prediction. The decoder does not have to know the exact tokens of 𝐜𝐜\\mathbf{c} that are retrieved. Under this formulation, only decoder parameters θDecsubscript𝜃Dec\\mathbf{\\theta}_{\\texttt{Dec}} are required at inference time.\nThe retriever retrieves indices of the relevant context and looks up their encodings.\nThe context encodings are processed ahead of the time, and are completely decoupled from online operations.\nThis is in contrast to previous works of Realm , Rag  or Retro [ref]4 where the interaction between input 𝐱𝐱\\mathbf{x} and context 𝐜𝐜\\mathbf{c} is bi-directional, which necessitates context encoding at inference time.\nIn our model, information flows uni-directionally from 𝐜𝐜\\mathbf{c} to 𝐱𝐱\\mathbf{x} and 𝐲𝐲\\mathbf{y}, and that the encoding of each context 𝐜𝐜\\mathbf{c} is processed independently.\nOn one hand, this is more restrictive than bi-directional interaction;\non the other hand, such a design ensures complete decoupling of context processing and the online language model inference. The exact mechanism is detailed in Figure. 1. Conceptually the retriever can be an arbitrary blackbox.\nIn practice, we use a dual encoder formulation  , which first represents 𝐱𝐱\\mathbf{x} as a query embedding E​m​bQ​(𝐱)𝐸𝑚subscript𝑏𝑄𝐱Emb_{Q}(\\mathbf{x}) and performs vector similarity search over a database of 𝒟𝒟\\mathcal{D} to find the indices of documents whose document embedding has the highest inner products with the query embedding.\nWe then look up the context encoder outputs that correspond to retrieved indices and return them as the retriever output. In the case of multiple supporting context, k−arg​max𝑘argmax\\operatorname*{\\mathit{k}-arg\\,max} is used instead of arg​maxargmax\\operatorname*{arg\\,max}. The encoder outputs of each supporting context are then concatenated: Where C​o​n​c​a​t𝐶𝑜𝑛𝑐𝑎𝑡Concat is simply vector concatenation: At training time, the encoder and decoder are jointly trained. We first perform offline retrieval to form triplets of (𝐱,𝐲,𝐜)𝐱𝐲𝐜(\\mathbf{x},\\mathbf{y},\\mathbf{c}), where 𝐜𝐜\\mathbf{c} is retrieved by some predefined retriever. The loss is masked and only defined on the targets 𝐲𝐲\\mathbf{y}.\nBecause the encoding of each context is independent and there is no interaction between context, the attention matrix of encoder is block diagonal and we process them in a linear loop over each diagonal block.\nThus, the computation cost of both encoder and decoder at each step is linear in the number of context. For online language model inference, only the retriever and the decoder are involved.\nThe retrieval embedding E​m​bD​(𝐜)𝐸𝑚subscript𝑏𝐷𝐜Emb_{D}(\\mathbf{c}) and the encoder output HEnc​(c)subscript𝐻Enc𝑐H_{\\texttt{Enc}\\mathbf{(}c)} of the context are both offline pre-processed and prepared into the retrieval database of such associated key-value pairs.\nWhen a new input sequence arrives, the retriever is only responsible for the approximate nearest neighbor search and lookup of the associated value that is the pre-computed encoder output.\nThe decoder then takes in the input sequence and cross attends on the concatenation of pre-computed encoder output to generate the targeted tokens.\nThanks to the decoupling, neither the retriever nor the decoder needs to store encoder parameters.\nHence, such an approach is more parameter efficient compared to similar works such as Retro [ref]4 by saving the storage and computation budget on encoder, which is helpful in “client-server” scenario where the capacity of the “client” can be limited.\nWhen accounting the parameter count in comparison with other models, we only need to count the decoder and cross attention parameters.\nWe also followed Retro’s [ref]4 approach of excluding the embedding matrices from the parameter count.\n\nReference markers found: [39]\n\nContext windows for each [ref]:\n[ref]39: We use Encoder-Decoder Transformer architecture [ref]39 to integrate language model input and retrieved context. We denote the context encoder and LM decoder as Enc and Dec respectively. Given an input token sequence\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 39,\n            \"titles\": [\n                \"Memorizing Transformers\",\n                \"Ieee standard for floating-point arithmetic.\",\n                \"A Closer Look at Memorization in Deep Networks\",\n                \"Natural language processing with Python: analyzing text with the natural language toolkit.\",\n                \"Improving language models by retrieving from trillions of tokens\",\n                \"Attention Approximates Sparse Distributed Memory\",\n                \"Language Models are Few-Shot Learners\",\n                \"Extracting Training Data from Large Language Models\",\n                \"Universal Sentence Encoder\",\n                \"SPTAG: A library for fast approximate nearest neighbor search,\",\n                \"PaLM: Scaling Language Modeling with Pathways\",\n                \"Mention Memory: incorporating textual knowledge into Transformers through entity mention attention\",\n                \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n                \"Transformer feed-forward layers are key-value memories.\",\n                \"Accelerating Large-Scale Inference with Anisotropic Vector Quantization\",\n                \"REALM: Retrieval-Augmented Language Model Pre-Training\",\n                \"Efficient natural language response suggestion for smart reply.\",\n                \"Distilling knowledge from reader to retriever for question answering.\",\n                \"Leveraging Passage Retrieval with Generative Models for Open Domain Question Answering\",\n                \"Billion-scale similarity search with GPUs\",\n                \"Dense Passage Retrieval for Open-Domain Question Answering\",\n                \"Generalization through Memorization: Nearest Neighbor Language Models\",\n                \"Sentencepiece: A simple and language independent subword tokenizer and detokenizer for neural text processing.\",\n                \"Natural questions: a benchmark for question answering research.\",\n                \"Learning Dense Representations of Phrases at Scale\",\n                \"Pre-training via Paraphrasing\",\n                \"Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks\",\n                \"Efficient and robust approximate nearest neighbor search using hierarchical navigable small world graphs.\",\n                \"Sentence-t5: Scalable sentence encoders from pre-trained text-to-text models.\",\n                \"Carbon emissions and large neural network training.\",\n                \"Scaling Language Models: Methods, Analysis & Insights from Training Gopher\",\n                \"Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer\",\n                \"Squad: 100,000+ questions for machine comprehension of text.\",\n                \"The probabilistic relevance framework: BM25 and beyond.\",\n                \"Real-Time Open-Domain Question Answering with Dense-Sparse Phrase Index\",\n                \"Adafactor: Adaptive Learning Rates with Sublinear Memory Cost\",\n                \"End-to-End Training of Multi-Document Reader and Retriever for Open-Domain Question Answering\",\n                \"Using deepspeed and megatron to train megatron-turing nlg 530b, a large-scale generative language model.\",\n                \"Attention Is All You Need\",\n                \"Approximate Nearest Neighbor Negative Contrastive Learning for Dense Text Retrieval\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]39 based on the context and research area of Decoupled Context Processing for Context Augmented Language Modeling. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}