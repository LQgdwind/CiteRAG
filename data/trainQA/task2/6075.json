{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Reason and Memorize with Self-Notes\n\nPaper Abstract: \n\nPaper Section Text:\nTransformers [ref]1 and similar variants have reshaped the field of machine learning with impressive results on sequence-based tasks [ref]2.\nNotably, large language models (LMs) such as GPT-3 [ref]2 use transformers and are capable of solving various complex natural language tasks such as question answering. However, it’s increasingly evident that there are still limitations to these models. Namely, transformers are limited in their ability to perform multi-step computations or store intermediate results due to the lack of an explicit internal dialogue or scratchpad   [ref]5. When an LM is used for question answering (QA), it is typically fed a context prompt containing factual information along with a question, and then the model generates the answer directly, as shown in Fig. 1 (top).\nHowever, this autoregressive “one-step” approach struggles with multi-step reasoning tasks    . We argue that this arises from the fact that vanilla LMs have a fixed computation budget for each token, and do not have the option to “think” more depending on the current context. Recently, Chain-of-Thought and Scratchpad methods     encourage the model to generate reasoning tokens or explain their answer one step at a time, leading to improved reasoning capabilities. These extra tokens are added before answering the question, but after it has read the full context and question, therefore postponing all “thoughts” until the end, as illustrated in Fig. 1 (middle). In addition to the “one-step” problem, transformers lack a recurrent memory for state-tracking and solving highly nonlinear tasks , something that recurrent predecessor models such as the LSTM  are well equipped for. Modifications to the feed-forward transformer architecture that use a recurrent mechanism improve state-tracking results\n  , but still use a fixed computation amount for a given prompt. In this paper,\nwe propose an approach that simultaneously makes the challenges in multi-step reasoning and state-tracking memory more tractable.\nOur method, “Self-Notes”, allows the LM to deviate from the context prompts at any time to generate explicit reasoning tokens.\nUnlike a scratchpad or chain-of-thought, the model can interleave generated tokens with the input context and question, as demonstrated in Fig. 1 (bottom).\nSuch Self-Notes can act as both explicit intermediate reasoning steps and working memory for state-tracking. Overall, we see the ability of a model to think as it reads,\nstoring those thoughts for later use, as an important aspect of an intelligent agent, similar to how humans read . Consider answering a question after reading the contents of a book. One would not want to re-read and re-reason over the whole book again to answer a second question. This issue is not addressed by either vanilla language models or chain-of-thought approaches. To give an example, when reading a text, at any time there may be a reasoning step that requires combining two facts. The resulting inference can be written into a Self-Note and used for future reasoning, thus acting as an intermediate reasoning step.\nFor example, given “Alice has the box” and “Alice is at the park” one can infer “The box is at the park” and write it to a Self-Note, which can be further combined with a future statement “The key is in the box” to conclude that “The key is at the park”.\nAdditionally, the Self-Note can act as a form of working memory because the model can write the latest state of an entity as new tokens while it reads the context. For example, in a programming environment, assume x=5 initially, and then x gets incremented by 1, the model can write the new state x=6 and add it to its working memory. We test our method on seven text datasets designed to evaluate multi-step reasoning and state-tracking: a proposed synthetic Toy-Story task, two synthetic program evaluation tasks  , two real-world chess game tasks , and two math word problem tasks previously used to test chain-of-thought prompting, MultiArith and GSM8K  . Across these tasks, we consider four different paradigms of learning Self-Notes: supervised, semi-supervised, unsupervised, and few-shot prompted. Across all tasks and learning paradigms, our method outperforms both an LM which does not do any explicit reasoning, as well as chain-of-thought or scratchpad baselines.\n\nReference markers found: [1]\n\nContext windows for each [ref]:\n[ref]1: Transformers [ref]1 and similar variants have reshaped the field of machine learning with impressive results on sequence-based tasks [ref]2.\nNotably, large language models (LMs) such as GPT-3 [ref]2 use\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 1,\n            \"titles\": [\n                \"Language Models are Few-Shot Learners\",\n                \"Attention Is All You Need\",\n                \"Show Your Work: Scratchpads for Intermediate Computation with Language Models\",\n                \"Chain-of-Thought Prompting Elicits Reasoning in Large Language Models\",\n                \"Sparks of artificial general intelligence: Early experiments with gpt-4\",\n                \"Program Synthesis with Large Language Models\",\n                \"Measuring and Narrowing the Compositionality Gap in Language Models\",\n                \"Selection-Inference: Exploiting Large Language Models for Interpretable Logical Reasoning\",\n                \"STaR: Bootstrapping Reasoning With Reasoning\",\n                \"Inner Monologue: Embodied Reasoning through Planning with Language Models\",\n                \"Addressing Some Limitations of Transformers with Feedback Memory\",\n                \"Long Short-Term Memory\",\n                \"Staircase Attention for Recurrent Processing of Sequences\",\n                \"Block-Recurrent Transformers\",\n                \"Reading between the lines\",\n                \"Exploring Length Generalization in Large Language Models\",\n                \"Chess as a Testbed for Language Model State Tracking\",\n                \"Solving general arithmetic word problems\",\n                \"Training Verifiers to Solve Math Word Problems\",\n                \"Language Models are Unsupervised Multitask Learners\",\n                \"HuggingFace’s Transformers: State-of-the-art Natural Language Processing\",\n                \"Towards AI-Complete Question Answering: A Set of Prerequisite Toy Tasks\",\n                \"Gpt-j-6b: A 6 billion parameter autoregressive language model\",\n                \"Llama 2: Open Foundation and Fine-Tuned Chat Models\",\n                \"From machine learning to machine reasoning: An essay\",\n                \"End-to-End Memory Networks\",\n                \"Tracking the World State with Recurrent Entity Networks\",\n                \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n                \"Universal Transformers\",\n                \"e-SNLI: Natural Language Inference with Natural Language Explanations\",\n                \"Program Induction by Rationale Generation: Learning to Solve and Explain Algebraic Word Problems\",\n                \"Large Language Models are Zero-Shot Reasoners\",\n                \"Interleaving Retrieval with Chain-of-Thought Reasoning for Knowledge-Intensive Multi-Step Questions\",\n                \"Do As I Can, Not As I Say: Grounding Language in Robotic Affordances\",\n                \"Toolformer: Language Models Can Teach Themselves to Use Tools\",\n                \"Train Short, Test Long: Attention with Linear Biases Enables Input Length Extrapolation\",\n                \"On the Relation between Position Information and Sentence Length in Neural Machine Translation\",\n                \"SHAPE: Shifted Absolute Position Embedding for Transformers\",\n                \"Compositionality decomposed: How do neural networks generalise?\",\n                \"The Curious Case of Absolute Position Embeddings\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]1 based on the context and research area of Learning to Reason and Memorize with Self-Notes. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}