{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Floorplanning with I/O Assignment via Feasibility-Seeking and Superiorization Methods\n\nPaper Abstract: \n\nPaper Section Text:\nIn the modern very-large-scale integration (VLSI) electronic design automation (EDA) flow, floorplanning is a critical stage in the physical design with significant impacts on the quality of downstream stages. With the functional modules (e.g., intellectual property cores, embedded memories, and clusters of standard cells) and the connecting nets, the task of floorplanning  is to find a legal placement within a fixed-outline rectangular region, where the basic constraint is non-overlapping between any two modules and the optimization objective is usually minimizing the total wirelength of nets. This problem is known to be challenging , and its complexity is further compounded by the need to consider various factors to enhance the effectiveness of integrated circuits. Prior floorplanning studies can be broadly divided into discrete meta-heuristic methods, discrete exact methods (e.g., branch-and-bound (B&B) methods), continuous analytical methods, and learning-based methods. Discrete meta-heuristic methods use discrete representation and heuristics but struggle with diverse constraints. The reason is that complex heuristics accumulation would result in the unpredictability of tools . Discrete exact methods systematically search solutions in a discrete space with pruning strategies to reduce computational effort. However, they still require significant time to explore the vast search space. Analytical methods formulate floorplanning as a constrained optimization problem. With constraints added as a penalty to the objectives, it is often converted to an unconstrained programming problem, leading to challenges in balancing constraints and objectives. Learning-based methods, which utilize techniques such as reinforcement learning and graph neural network, focus on the netlist representation and feature extraction, with limited exploration of multi-constraint problems. In summary, two challenges still exist for current floorplanning methods.\nFirstly, aiming for the optimal solution is not reasonable because the resolving process requires needless expenditure of time, energy, and resources, while the favorable final results are still not guaranteed after the lengthy EDA flow.\nSecondly, growing diverse constraints add great complexity to the design of the methods. These constraints include temperature management , congestion alleviation , input/output (I/O) assignment , voltage island , blockage regions  and so on. Moreover, the continual advancements in package technologies and the increasing emphasis on cross-stage constraints [ref]9 are leading to a significant growth in the number and complexity of constraints involved in floorplanning. To overcome these challenges, we model the floorplanning as a feasibility-seeking problem (FSP), wherein constraints are established through a finite family of nonempty, frequently closed constraint sets, aiming to locate a point that satisfies their collective intersection. Compared to previous approaches, the focus is shifted to the constraints rather than objectives, in the spirit of 0, which makes the scalability to diverse constraints possible. Support for such an approach is Simon’s concept of “satisfice” 1. Instead of adopting an approach that seeks optimal solutions within a simplified model, it is better to adopt an approach that seeks satisfactory solutions under more realistic and complex constraints. We adopt the philosophy of “satisficing” rather than optimizing to solve floorplanning with growing diverse constraints. In the field of FSPs, the method of alternating projection (MAP) 23 is a widely used method. It is flexible, computationally efficient, and of theoretical interest. It involves iterative projections onto individual sets in a sequential manner or in another ordering regime. With proper construction of individual constraints, it is fast, easy to implement, and enables to tackle complex constraints sets.\nHowever, the constraints of the floorplanning problem are non-convex and the initial convergence behavior is affected by the initial point selection, exhibiting certain phenomena when unable to find a feasible solution. This motivates us to design a generalized MAP called the resettable method of alternating projection (RMAP). To enhance the performance of a given FSP-based algorithm, the superiorization method (SM) offers a viable approach for obtaining superior (not necessarily optimal) feasible solutions. This method employs perturbations to guide a feasibility-seeking algorithm towards a feasible output while simultaneously improving a user-chosen objective function.\nThis article designs an SM called the perturbed resettable method of alternating projection (Per-RMAP) to further improve the feasible solution in terms of the total wirelength. In this article, our contributions are summarized as follows: We formulate floorplanning as an FSP, which promises a balance between solution quality and efficiency, as we prioritize feasible-seeking rather than optimizing. We analyze the property and challenge of applying MAP to floorplanning, focusing on its initial convergence behavior. We prove the local convergence of MAP and analyze the occurrence of oscillations, offering valuable insights for the algorithm design. We propose our global floorplanner Per-RMAP to enhance MAP. We design a resetting strategy to improve the initial convergence behavior of the MAP. We also add perturbation steps to the original FSP algorithm to reduce the total wirelength. Experiments on MCNC benchmark demonstrate that Per-RMAP could address complex design constraints. Compared to B&B, it achieves a significant speedup of 166×\\times with a merely 5% increase in wirelength, and decreases wirelength by 6% with a ∼similar-to\\sim100×\\times speedup with I/O assignment constraints.111The B&B method for comparison does not consider I/O assignment. The search space and pruning strategies have to be completely re-defined and re-implemented when considering extra variables or constraints in the B&B method. In contrast, the FSP method readily adapts to a new formulation. For soft-module floorplanning, our method reduces 15% runtime compared with PeF, the state-of-the-art analytical method. In the article we strengthen the results of the conference report . We analyze the property of the constraints sets and prove the local convergence of MAP, which offers the theoretical support and motivation of the resetting strategy design. Furthermore, we enhance the efficiency of Per-RMAP and conduct more comprehensive experiments to fully demonstrate the superior performance of Per-RMAP. The remainder of the paper is organized as follows: Sec. 2 introduces the preliminaries and related works. Sec. 3 gives the formulation of floorplanning as FSP. Sec. 4 presents features of applying MAP to floorplanning. Sec. 5 describes the proposed Per-RMAP algorithm. Sec. 6 presents experimental results, followed by concluding comments in Sec. 7 and supplementary materials in Appendix 8 and 9.\n\nReference markers found: [9]\n\nContext windows for each [ref]:\n[ref]9: input/output (I/O) assignment , voltage island , blockage regions  and so on. Moreover, the continual advancements in package technologies and the increasing emphasis on cross-stage constraints [ref]9 are leading to a significant growth in the number and complexity of constraints involved in floorplanning. To overcome these challenges, we model the floorplanning as a feasibility-seeking\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 9,\n            \"titles\": [\n                \"Superiorization: The asymmetric roles of feasibility-seeking and objective function reduction\",\n                \"Per-RMAP: Feasibility-Seeking and Superiorization Methods for Floorplanning with I/O Assignment\",\n                \"VLSI Physical Design: From Graph Partitioning to Timing Closure\",\n                \"Fixed-Outline Floorplanning: Enabling Hierarchical Design\",\n                \"Machine learning applications in physical design: Recent results and directions\",\n                \"TAP-2.5D: A thermally-aware chiplet placement methodology for 2.5D systems\",\n                \"Effective estimation method of routing congestion at floorplan stage for 3D ICs\",\n                \"F-FM: Fixed-outline floorplanning methodology for mixed-size modules considering voltage-island constraint\",\n                \"An exact algorithm for wirelength optimal placements in VLSI design\",\n                \"Advancing placement\",\n                \"Rational choice and the structure of the environment.\",\n                \"Functional Operators (AM-22), Volume 2: The Geometry of Orthogonal Spaces\",\n                \"Alternating Projection Methods, Fundamentals of Algorithms\",\n                \"Parallel Optimization: Theory, Algorithms, and Applications\",\n                \"VLSI module placement based on rectangle-packing by the sequence-pair\",\n                \"B*-Trees: A new representation for non-slicing floorplans\",\n                \"Customized simulated annealing based decision algorithms for combinatorial optimization in VLSI floorplanning problem\",\n                \"A new multilevel framework for large-scale interconnect-driven floorplanning\",\n                \"DeFer: Deferred decision making enabled fixed-outline floorplanning algorithm\",\n                \"A quasi-Newton-based floorplanner for fixed-outline floorplanning\",\n                \"A fixed-die floorplanning algorithm using an analytical approach\",\n                \"PeF: Poisson’s Equation Based Large-Scale Fixed-Outline Floorplanning\",\n                \"A fast thermal-aware fixed-outline floorplanning methodology based on analytical models\",\n                \"GoodFloorplan: Graph convolutional network and reinforcement learning-based floorplanning\",\n                \"Floorplanning with graph attention\",\n                \"Fast and scalable I/O pin assignment with divide-and-conquer and hungarian matching\",\n                \"SimPL: An effective placement algorithm\",\n                \"FastPlace: Efficient analytical placement using cell shifting, iterative local refinement,and a hybrid net model\",\n                \"Towards integration of quadratic placement and pin assignment\",\n                \"OpenROAD: Toward a self-driving, open-source digital layout implementation tool chain\",\n                \"Convex Analysis and Monotone Operator Theory in Hilbert Spaces\",\n                \"The method of projections for finding the common point of convex sets\",\n                \"On the Douglas-Rachford algorithm for solving possibly inconsistent optimization problems\",\n                \"On the local convergence of the Douglas–Rachford algorithm\",\n                \"Global behavior of the Douglas-Rachford method for a nonconvex feasibility problem\",\n                \"Cyclic projection methods on a class of nonconvex sets\",\n                \"Projection methods for uniformly convex expandable sets\",\n                \"An Improved Method of Total Variation Superiorization Applied to Reconstruction in Proton Computed Tomography\",\n                \"Chapter 5: Stability in the sense of Lyapunov\",\n                \"Convergence of sequential and asynchronous nonlinear paracontractions\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]9 based on the context and research area of Floorplanning with I/O Assignment via Feasibility-Seeking and Superiorization Methods. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}