{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Free Sets in Planar Graphs: History and ApplicationsThis research is partially funded by the grants from NSERC and the University Research Chair of University of Ottawa.\n\nPaper Abstract: \n\nPaper Section Text:\nFor definitions of standard graph theoretic terms and notations used in this survey (such a treewidth, k𝑘k-trees, independent set, etc.) the reader is referred to the textbook by Diestel . A drawing of a graph is representation of the graph in which each vertex v𝑣v is represented by a distinct point in the plane and each edge v​w𝑣𝑤vw is represented by a simple open curve in the plane the closure of which has v𝑣v and w𝑤w as endpoints. When discussing a particular drawing, we do not distinguish between a vertex and the point that represents it, or an edge and the curve that represents it. A drawing is a straight-line drawing if each edge is an open line segment. In a drawing, two edges may have a non-empty intersection, and an edge may contain a vertex that is not one of its endpoints. A drawing is a crossing-free drawing if this does not occur: any two distinct edges are disjoint and no vertex is contained in any edge.333What we call a crossing-free drawing is sometimes called a plane drawing or an embedding (in the plane). What we call a straight-line crossing-free drawing is sometimes called a geometric embedding or Fáry embedding. Recall that for any n𝑛n-vertex planar graph G0subscript𝐺0G_{0}, on at least 333 vertices, it is possible to add edges to G0subscript𝐺0G_{0} to obtain a planar graph G𝐺G with 3​(n−2)3𝑛23(n-2) edges. The resulting graph G𝐺G is a triangulation: in any crossing-free drawing of this graph, each of the faces has exactly three edges on its boundary. A near-triangulation is a biconnected embedded graph whose inner faces are all triangles, i.e., bounded by three edges. The dual G∗superscript𝐺G^{*} of an embedded graph G𝐺G is a graph whose vertices are the faces of G𝐺G that contains an edge between two vertices f𝑓f and g𝑔g if the corresponding faces of G𝐺G have a common edge on their boundary. For a planar graph G𝐺G with outer face f0subscript𝑓0f_{0}, the weak dual G+superscript𝐺G^{+} of G𝐺G is defined as G+:=G∗−f0assignlimit-from𝐺superscript𝐺subscript𝑓0G+:=G^{*}-f_{0}, the graph obtained from the dual G+superscript𝐺G^{+} by removing the vertex corresponds to the outer face f0subscript𝑓0f_{0} of G𝐺G. A graph is outerplanar if it has a crossing-free drawing with all its vertices on the outer face. A graph equipped with such a crossing-free drawing is an outerplane graph. A chord of a cycle C𝐶C is an edge that is not part of C𝐶C but both of its endpoints are vertices of C𝐶C. Under our definitions, a planar graph is a graph that has a crossing-free drawing. Fáry’s Theorem  [ref]35  asserts that a graph is planar if and only if it has a straight-line crossing-free drawing. Today, we use Fáry’s Theorem without thinking about it, but it is worthwhile spending a moment reflecting on what would happen if Fáry’s Theorem were not true. There would be two kinds of planar graphs, topological and straight-line, with the latter being a special case of the former. Any result proven for straight-line planar graphs would need a separate proof for topological planar graphs. Edge contractions, commonly used in inductive proofs for planar graphs would be off-limits for proofs about straight-line planar graphs. In order to establish the existence of a straight-line planar graph with some property one would need to find a topological planar graph with that property and then show that it has a straight-line crossing-free drawing. Let ΓΓ\\Gamma be a crossing-free drawing of a planar graph G𝐺G. A simple closed curve444A simple closed curve C𝐶C is a continuous function C: →ℝ2:𝐶→01superscriptℝ2C: \\to\\mathbb{R}^{2} such that C​(0)=C​(1)𝐶0𝐶1C(0)=C(1) and C​(a)≠C​(b)𝐶𝑎𝐶𝑏C(a)\\neq C(b) for all 0≤a<b<10𝑎𝑏10\\leq a<b<1. C: →ℝ2:𝐶→01superscriptℝ2C: \\to\\mathbb{R}^{2} is good with respect to ΓΓ\\Gamma if C​(0)𝐶0C(0) is not contained in any edge or vertex of ΓΓ\\Gamma. C𝐶C is proper with respect to ΓΓ\\Gamma if, for each edge e𝑒e of ΓΓ\\Gamma, the intersection of C𝐶C and the closure of e𝑒e is either empty, consists of a single point (possibly an endpoint of e𝑒e), or consists of the entire edge e𝑒e. In essence, a curve that is proper-good with respect to ΓΓ\\Gamma behaves the way a line would behave if ΓΓ\\Gamma were a straight-line crossing-free drawing. Let S:=(v1,…,vs)assign𝑆subscript𝑣1…subscript𝑣𝑠S:=(v_{1},\\ldots,v_{s}) be an ordered subset of vertices in a planar graph G𝐺G. S𝑆S is a proper-good set  if there exists a crossing-free drawing ΓΓ\\Gamma of G𝐺G, a curve C:[0,1)→ℝ2:𝐶→01superscriptℝ2C:[0,1)\\to\\mathbb{R}^{2} that is proper-good with respect to ΓΓ\\Gamma, and 0<x1<⋯<xs<10subscript𝑥1⋯subscript𝑥𝑠10<x_{1}<\\cdots<x_{s}<1 such that C​(xi)𝐶subscript𝑥𝑖C(x_{i}) is the location of visubscript𝑣𝑖v_{i} in ΓΓ\\Gamma, for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\}. In other words, we encounter the vertices of S𝑆S, in order, while traversing C𝐶C. S𝑆S is a collinear set  if there exists a straight-line crossing-free drawing ΓΓ\\Gamma of G𝐺G and x1<⋯<xssubscript𝑥1⋯subscript𝑥𝑠x_{1}<\\cdots<x_{s} such that (xi,0)subscript𝑥𝑖0(x_{i},0) is the location of visubscript𝑣𝑖v_{i} in ΓΓ\\Gamma, for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\}. S𝑆S is a free-collinear set  if, for any x1<⋯<xssubscript𝑥1⋯subscript𝑥𝑠x_{1}<\\cdots<x_{s}, there exists a straight-line crossing-free drawing ΓΓ\\Gamma of G𝐺G such that (xi,0)subscript𝑥𝑖0(x_{i},0) is the location of visubscript𝑣𝑖v_{i} in ΓΓ\\Gamma, for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\}. S𝑆S is a free set if, for any x1<⋯<xssubscript𝑥1⋯subscript𝑥𝑠x_{1}<\\cdots<x_{s} and any y1,…,yssubscript𝑦1…subscript𝑦𝑠y_{1},\\ldots,y_{s}, there exists a straight-line crossing-free drawing ΓΓ\\Gamma of G𝐺G such that (xi,yi)subscript𝑥𝑖subscript𝑦𝑖(x_{i},y_{i}) is the location of visubscript𝑣𝑖v_{i} in ΓΓ\\Gamma, for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\}. We note that our definitions deviate from much of the literature by treating S𝑆S as an ordered set. Later, we may say that some (unordered) vertex subset S𝑆S of G𝐺G is a proper-good, collinear, free-collinear, or free set. In these cases, we mean that there is some permutation of S𝑆S that defines an ordered set that satisfies the relevant definition. When we want to emphasize the difference between these two we will say that (an ordered set) S𝑆S is an ordered free set or that (a set) S𝑆S is an unordered free set. This distinction becomes important when discussing two or more graphs with the same vertex set. A set S𝑆S of vertices may be an unordered free set in two graphs G1subscript𝐺1G_{1} and G2subscript𝐺2G_{2} but there may be no permutation of S𝑆S that is an ordered free set in G1subscript𝐺1G_{1} and in G2subscript𝐺2G_{2}. A few properties of free sets are immediate from the definition and we will use them throughout. If S𝑆S is an ordered free set in a graph G𝐺G then: the reversal of S𝑆S is an ordered free set in G𝐺G; S𝑆S is an ordered free set in any subgraph of G𝐺G that spans S𝑆S; and any subsequence of S𝑆S is an ordered free set in G𝐺G. Unordered collinear sets and unordered free-collinear sets were defined first by Ravsky and Verbitsky  and were implicit in 7. In fact, Ravsky and Verbitsky  posed the equivalence between (unordered) collinear sets and (unordered) free-collinear set as an open question, and conjectured a negative answer. Thus 1 below disproves that conjecture. Proper-good sets (as unordered sets) were introduced first by Da Lozzo et al. . Before continuing, we make a remark about pointsets whose x𝑥{x}-coordinates are not all distinct, since the definition of (ordered) free set appears to disallow these. However, we claim that for any unordered free set S𝑆S in a planar graph G𝐺G, and any set P𝑃P of |S|𝑆|S| points in the plane, there exists a straight-line crossing-free drawing of G𝐺G in which each vertex in S𝑆S is mapped to some point in P𝑃P. If all the points in P𝑃P have distinct x𝑥{x}-coordinates then the claim follows immediately from the definition of ordered free set. If this is not the case, then a slight rotation of P𝑃P gives a pointset P′superscript𝑃′P^{\\prime} in which each point has a distinct x𝑥{x}-coordinate. Now G𝐺G has a straight-line crossing-free drawing Γ′superscriptΓ′\\Gamma^{\\prime} in which each vertex in S𝑆S maps to a point in P′superscript𝑃′P^{\\prime}. Applying the inverse rotation to Γ′superscriptΓ′\\Gamma^{\\prime} gives a drawing ΓΓ\\Gamma in which each vertex in S𝑆S maps to a point in P𝑃P. The proof of Lemma 1, below, gives one example of why definitions based on ordered sets are useful. Another example, discussed in Section 4, is the problem of simultaneous embedding with mapping. Let G𝐺G be a planar graph that has a free set of size at least k𝑘k. Then fix⁡(G)≥kfix𝐺𝑘\\operatorname{fix}(G)\\geq\\sqrt{k}. Let S𝑆S be an ordered free set in G𝐺G of size k𝑘k. Fix any straight-line drawing ΓΓ\\Gamma of G𝐺G and, without loss of generality (by a slight rotation, if necessary) assume that no two vertices of ΓΓ\\Gamma have the same x𝑥{x}-coordinate. Let (S,≺)𝑆precedes(S,\\prec) be the partial order in which v≺wprecedes𝑣𝑤v\\prec w if and only if v𝑣v appears before w𝑤w in S𝑆S and the x𝑥{x}-coordinate of v𝑣v in ΓΓ\\Gamma is less than the x𝑥{x}-coordinate of w𝑤w in ΓΓ\\Gamma. Suppose (S,≺)𝑆precedes(S,\\prec) contains a chain v1≺⋯≺vℓprecedessubscript𝑣1⋯precedessubscript𝑣ℓv_{1}\\prec\\cdots\\prec v_{\\ell} of length ℓ≥kℓ𝑘\\ell\\geq\\sqrt{k}. Then (v1,…,vℓ)subscript𝑣1…subscript𝑣ℓ(v_{1},\\ldots,v_{\\ell}) is a free set since it is a subsequence of S𝑆S. For each i∈{1,…,ℓ}𝑖1…ℓi\\in\\{1,\\ldots,\\ell\\}, let (xi,yi)subscript𝑥𝑖subscript𝑦𝑖(x_{i},y_{i}) be the coordinates given to visubscript𝑣𝑖v_{i} in ΓΓ\\Gamma. By the definition of free set, G𝐺G has a straight-line crossing-free drawing in which visubscript𝑣𝑖v_{i} is mapped to (xi,yi)subscript𝑥𝑖subscript𝑦𝑖(x_{i},y_{i}), for each i∈{1,…,ℓ}𝑖1…ℓi\\in\\{1,\\ldots,\\ell\\}. Therefore, fix⁡(Γ)≥ℓ≥kfixΓℓ𝑘\\operatorname{fix}(\\Gamma)\\geq\\ell\\geq\\sqrt{k} for any straight-line drawing ΓΓ\\Gamma of G𝐺G. Therefore fix⁡(G)≥kfix𝐺𝑘\\operatorname{fix}(G)\\geq\\sqrt{k}. To deal with the case in which ≺precedes\\prec contains no chain of length at least k𝑘\\sqrt{k} we use the fact that the ordered set \n\nS\n obtained by reversing the order of S𝑆S is also a free set.\nLet (S,≺′)𝑆superscriptprecedes′(S,\\prec^{\\prime}) be the partial order on the elements of \n\nS\n in which v≺wprecedes𝑣𝑤v\\prec w if and only if v𝑣v appears before w𝑤w in \n\nS\n and the x𝑥{x}-coordinate of v𝑣v in ΓΓ\\Gamma is less than the x𝑥{x}-coordinate of w𝑤w in ΓΓ\\Gamma.\nBy Dilworth’s Theorem, (S,≺)𝑆precedes(S,\\prec) contains an antichain of length at least k𝑘\\sqrt{k} and the elements of this antichain form a chain in (S,≺′)Ssuperscriptprecedes′(\\reflectbox{S},\\prec^{\\prime}). Now we proceed as in the previous paragraph.\n∎ For most classes 𝒳𝒳\\mathcal{X} of planar graphs, including trees, outerplanar graphs, and all planar graphs, the best known bounds (and for some classes asymptotically optimal bounds) for fix𝒳⁡(n)subscriptfix𝒳𝑛\\operatorname{fix}_{\\mathcal{X}}(n) can be obtained by an application of Lemma 1, along with a result on free sets in graphs in the class 𝒳𝒳\\mathcal{X}   7 . The sole exception is the class 𝒞𝒞\\mathcal{C} of cycles, for which Cibulka  uses repeated applications of the Erdős-Szekeres Theorem to obtain a lower bound of Ω​(n2/3)Ωsuperscript𝑛23\\Omega(n^{2/3}). As discussed in the introduction, the following theorem provides the main motivation for this survey. Let G𝐺G be a planar graph and let S𝑆S be an ordered subset of V​(G)𝑉𝐺V(G). Then the following statements are equivalent: S𝑆S is a (ordered) proper-good set. S𝑆S is a (ordered) collinear set. S𝑆S is a (ordered) free-collinear set. S𝑆S is a (ordered) free set. Note that, unlike the other three definitions, the definition of proper-good set is purely combinatorial/topological; it has no mention of straight lines or vertex coordinates. In this respect, 1 plays a role similar to Fáry’s Theorem. Using the proper-good set definition allows purely combinatorial methods to be used in the search for free sets. For any proper-good set there is a short easily-verifiable certificate (a crossing-free drawing of G𝐺G and a description of the curve C𝐶C) that S𝑆S is indeed a proper-good set. In contrast, in order to show directly that S𝑆S is a free-collinear set (or a free set) involves proving a fact that must hold for all choices of x1,…,xksubscript𝑥1…subscript𝑥𝑘x_{1},\\ldots,x_{k} (or (x1,y1),…,(xk,yk)subscript𝑥1subscript𝑦1…subscript𝑥𝑘subscript𝑦𝑘(x_{1},y_{1}),\\ldots,(x_{k},y_{k}), respectively). Working with this definition directly would involve (at the very least) a significant amount of linear algebra. The proof of 1 is spread across a few different works   7, which we describe below. First we remark that it is immediate from the definitions that every free set is a free-collinear set and every free-collinear set is a free set. It is also easy to see that every collinear set is a proper-good set by taking a straight-line crossing-free drawing ΓΓ\\Gamma of G𝐺G with the vertices of the (ordered) collinear set S𝑆S on the x𝑥{x}-axis in increasing order of x𝑥{x}-coordinate. Let s𝑠s be a line segment that is contained in the x𝑥{x}-axis and that contains every intersection between ΓΓ\\Gamma and the x𝑥{x}-axis in its interior. Then s𝑠s is proper and good with respect to ΓΓ\\Gamma. Finally, make s𝑠s into a closed curve by joining the endpoints of s𝑠s with a curve C𝐶C that completely avoids ΓΓ\\Gamma. We now address the other directions. The proof that every proper-good set is a collinear set is due to Da Lozzo et al.  and is illustrated in Fig. 1. For each edge of G𝐺G that crosses C𝐶C, the authors introduce a dummy vertex (white vertices in Fig. 1(a)) that splits the edge into two edges with a common vertex on C𝐶C. The resulting graph G′superscript𝐺′G^{\\prime} then has three types of vertices: a set X𝑋X of inner vertices (contained in the interior of C𝐶C), a set Y𝑌Y of boundary vertices (contained in C𝐶C) and a set Z𝑍Z of outer vertices (the vertices in the exterior of C𝐶C). These steps are depicted in Fig. 1(a). They then use Tutte’s Convex Embedding Theorem  twice: Once to find a straight-line crossing-free drawing of G′​[X∪Y]superscript𝐺′delimited-[]𝑋𝑌G^{\\prime}[X\\cup Y] with all vertices of X𝑋X below the x𝑥{x}-axis and all vertices of Y𝑌Y on the x𝑥{x}-axis, and a second time to find a straight-line crossing-free drawing of G′​[Y∪Z]superscript𝐺′delimited-[]𝑌𝑍G^{\\prime}[Y\\cup Z] with the vertices of Z𝑍Z above the x𝑥{x}-axis. This gives a straight-line crossing-free drawing Γ′superscriptΓ′\\Gamma^{\\prime} of G′superscript𝐺′G^{\\prime}, as depicted in Fig. 1(b). The straight-line crossing-free drawing Γ′superscriptΓ′\\Gamma^{\\prime} is almost a straight-line crossing-free drawing of G𝐺G except that the edges that properly intersect C𝐶C are represented by two line segments, one below and one above the x𝑥{x}-axis. The authors then apply a result of Pach and Tóth  that shows the edges in this crossing-free drawing can be straightened without changing the y𝑦{y}-coordinate of any vertex, as depicted in Fig. 1(c). In particular, in the resulting straight-line crossing-free drawing of G𝐺G, the vertices of G𝐺G intersected by C𝐶C remain on the x𝑥{x}-axis, as required. A few notes on the proof are in order. First, we recall that the proof of Tutte’s Convex Embedding Theorem is mostly algebraic: it involves setting up a system of linear equations whose solution determines the coordinates of the vertices in the straight-line crossing-free drawing. Second, we note that the preceding proof almost proves that every proper-good set is a free-collinear set. Tutte’s theorem allows us to choose the x𝑥{x}-coordinates of the vertices in Y𝑌Y, including the vertices in S𝑆S. However, the straightening step, which converts Γ′superscriptΓ′\\Gamma^{\\prime} into ΓΓ\\Gamma by straightening the edges that cross the x𝑥{x}-axis, changes the x𝑥{x}-coordinates of the vertices. The proof that every collinear set is a free-collinear set is due to Dujmović et al. . Prior to this, Da Lozzo et al.  had established the equivalence of collinear and free-collinear sets for the class of planar 333-trees and asked again if this equivalence was true in general. In subsequent years this repeatedly lead to the question (originally posed by Ravsky and Verbitsky ) “is every collinear set free?”.\nThe proof of Dujmović et al.  has two main parts, which we outline below. If S:=(v1,…,vs)assign𝑆subscript𝑣1…subscript𝑣𝑠S:=(v_{1},\\ldots,v_{s}) is an ordered collinear set, then G𝐺G has a straight-line crossing-free drawing ΓΓ\\Gamma in which the vertices of S𝑆S appear, in order, on the x𝑥{x}-axis. The goal is to show that, for any x1<⋯<xssubscript𝑥1⋯subscript𝑥𝑠x_{1}<\\cdots<x_{s}, the vertex visubscript𝑣𝑖v_{i} can be moved to (xi,0)subscript𝑥𝑖0(x_{i},0), for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\}, such that the resulting drawing is a straight-line crossing-free drawing.\nBy adding (straight-line) edges to ΓΓ\\Gamma, we may assume that G𝐺G is a triangulation. In the following, when we say that an edge or a face properly intersects the x𝑥{x}-axis, we mean that the edge or the face contains points that are strictly above and points that are strictly below the x𝑥{x}-axis. The first part of the proof is combinatorial. In this part, a sequence of modifications is done to G𝐺G with the end goal of obtaining a triangulation G′superscript𝐺′G^{\\prime} that has an (no longer straight-line) crossing-free drawing Γ′superscriptΓ′\\Gamma^{\\prime} with following properties (see Fig. 2(c)): Every vertex in S𝑆S is a vertex of G′superscript𝐺′G^{\\prime} and is mapped to the same location (on the x𝑥{x}-axis) in both ΓΓ\\Gamma and Γ′superscriptΓ′\\Gamma^{\\prime}. The closure of each edge of Γ′superscriptΓ′\\Gamma^{\\prime} intersects the x𝑥{x}-axis in at most one point. For each vertex v∈S𝑣𝑆v\\in S there are exactly two faces of G′superscript𝐺′G^{\\prime} incident on v𝑣v that properly intersect the x𝑥{x}-axis. If an edge v​w𝑣𝑤vw of G′superscript𝐺′G^{\\prime} has no endpoint in S𝑆S then v​w𝑣𝑤vw properly crosses the x𝑥{x}-axis or v​w𝑣𝑤vw is on the boundary of two faces v​w​a𝑣𝑤𝑎vwa and v​w​b𝑣𝑤𝑏vwb and the closure of each of these faces intersects the x𝑥{x}-axis. Note that Item 1 and Item 2 imply that no edge of G′superscript𝐺′G^{\\prime} has both endpoints in S𝑆S. For reasons discussed below, we may assume that G𝐺G has no separating triangles and that no separating triangles are created during these operations. To obtained G′superscript𝐺′G^{\\prime} we apply three types of operations, two of which are illustrated in Fig. 2.\n\n\n(1) If some edge with no endpoint in S𝑆S is incident on two faces, neither of which properly intersect the x𝑥{x}-axis, then this edge is contracted (the orange edge in Fig. 2(a) meets those conditions and its contraction results in an embedded graph depicted in Fig. 2(b)). This operation eliminates these two faces.\n\n(2) If some edge with no endpoints in S𝑆S is incident on one face whose closure is disjoint from the x𝑥{x}-axis, whose other incident face properly intersects the x𝑥{x}-axis, and meets some other technical conditions,555These technical conditions ensure that, after drawing G′superscript𝐺′G^{\\prime} the union of the two faces incident on the flipped edge is a convex quadrilateral. then this edge is flipped (the lilac edge in Fig. 2(b) meets the necessary conditions and its flipping results in an embedded graph depicted in Fig. 2(c)). This edge flip replaces the two faces incident to the original edge with two faces that each properly intersect the x𝑥{x}-axis.\n\n(3) Finally, any edge with both endpoints in S𝑆S is flipped. After this flip, the flipped edge and the two faces incident to it properly intersect the x𝑥{x}-axis.\n\n\nThese operations (contractions and flips) are done exhaustively, one by one, in any order. The operations maintain that S𝑆S is a proper-good set in G′superscript𝐺′G^{\\prime}. As discussed above, either of these operations may introduce a separating triangle in G′superscript𝐺′G^{\\prime}. How this is handled is explained below.\nOnce these operations are done exhaustively, removing the edges of G′superscript𝐺′G^{\\prime} both of whose endpoints are either strictly above or strictly below x𝑥{x}-axis (see the green edges in Fig. 2(c)) yields a structure, called an A-graph (see Fig. 2(d)), in which every face is either a quadrilateral whose four edges each intersect the x𝑥{x}-axis or have an endpoint on the x𝑥{x}-axis or a triangle with vertices above, on, and below the x𝑥{x}-axis. The main task now is to find a straight-line crossing-free drawing of this A𝐴A-graph so that the vertices of S𝑆S are moved to the specified locations on the x𝑥{x}-axis. Once we achieve that, the edge-removal, flipping, and contracting operations are easily undone without changing the locations of vertices in S𝑆S, resulting in straight-line crossing-free drawing of G𝐺G with the vertices of S𝑆S at their specified locations on the x𝑥{x}-axis. Finding a straight-line crossing-free drawingof this A𝐴A-graph so that the vertices of S𝑆S are placed to the specified locations on the x𝑥{x}-axis is the goal of the second part of the proof, which involves a combination of linear algebra and graph theory. The authors prove a very strong statement about the A-graph G′superscript𝐺′G^{\\prime}. They show that it is possible to obtain a straight-line crossing-free drawing of G′superscript𝐺′G^{\\prime} in which the intersection point of the closure of each edge with the x𝑥{x}-axis is specified, subject to the ordering constraints imposed by the crossing-free drawing of G′superscript𝐺′G^{\\prime}. Note that this implies that S𝑆S is a free-collinear set in G′superscript𝐺′G^{\\prime} since each vertex in S𝑆S is incident to an edge of G′superscript𝐺′G^{\\prime} (recall that no edge incident to a vertex of S𝑆S is flipped or contracted unless both of its endpoints are on the x𝑥{x}-axis). The vertex visubscript𝑣𝑖v_{i} has at least three incident edges in G′superscript𝐺′G^{\\prime}. By specifying that the closure of each of these edges must intersect the x𝑥{x}-axis at (xi,0)subscript𝑥𝑖0(x_{i},0) we ensure that visubscript𝑣𝑖v_{i} is mapped to (xi,0)subscript𝑥𝑖0(x_{i},0). In addition to specifying the location where each edge crosses the x𝑥{x}-axis, the locations of the three vertices x,y,z𝑥𝑦𝑧x,y,z on the convex hull of this crossing-free drawing (the vertices marked with   in Fig. 2(d)) can be chosen, provided that the choice agrees with the choice of intersection points chosen for the edges induced by x,y,z𝑥𝑦𝑧x,y,z (the intersections marked with ×\\times in Fig. 2(d)). This latter requirement justifies the assumption that the graph does not contain separating triangles: The subgraph in the closure of the exterior of a separating triangle x​y​z𝑥𝑦𝑧xyz can be drawn inductively. This determines the locations of x𝑥x, y𝑦y, and z𝑧z which are then specified when inductively drawn the graph in the closure of the interior of the separating triangle. The proof works by assigning slopes to the edges in G′superscript𝐺′G^{\\prime}. To avoid vertical edges, it is helpful to rotate the coordinate system by 909090 degrees so that the roles of the x- and y-axes swap. To prove this stronger claim about A-graphs, the authors set up a system M𝑀M of linear equations whose variables are the slopes of the edges of G′superscript𝐺′G^{\\prime} and whose coefficients are determined by the (given) intersection location of each edge with the y𝑦{y}-axis. Most of the equations in M𝑀M correspond to the fact that three or more edges incident to a common vertex v𝑣v must intersect in a single point (the location of v𝑣v).666Some additional constraints, call proportionality constraints, are placed on the slopes of edges incident to vertices on the y𝑦{y}-axis. The hardest step in this proof is to show that the linear system M𝑀M has a unique solution. Here, the authors leverage the fact that S𝑆S is a proper-good set in G′superscript𝐺′G^{\\prime} and, therefore, a collinear set in G′superscript𝐺′G^{\\prime}. Therefore, G′superscript𝐺′G^{\\prime} has a straight-line crossing-free drawing Γ0subscriptΓ0\\Gamma_{0} in which the vertices of S𝑆S appear, in order, on the y𝑦{y}-axis. From this straight-line crossing-free drawing Γ0subscriptΓ0\\Gamma_{0}, one can read off a system M0subscript𝑀0M_{0} of linear equations that has the same structure as M𝑀M but with different coefficients (that are determined by the y𝑦{y}-coordinates of vertices in S𝑆S in Γ0subscriptΓ0\\Gamma_{0}). The system M0subscript𝑀0M_{0} has a solution, namely the solution given by the slopes of the edges in Γ0subscriptΓ0\\Gamma_{0}. The authors first show that this solution to M0subscript𝑀0M_{0} is unique. The final step involves continuously modifying the coefficients in M0subscript𝑀0M_{0} to obtain a continuum of linear systems Mtsubscript𝑀𝑡M_{t}, 0≤t≤10𝑡10\\leq t\\leq 1 where M1=Msubscript𝑀1𝑀M_{1}=M. Using the fact that M0subscript𝑀0M_{0} has a unique solution as a starting point, they are then able to show that Mtsubscript𝑀𝑡M_{t} has a unique solution for each 0≤t≤10𝑡10\\leq t\\leq 1. In particular, M1=Msubscript𝑀1𝑀M_{1}=M has a solution, which determines the desired straight-line crossing-free drawing of G′superscript𝐺′G^{\\prime} The equivalence between free-collinear sets and free sets has a disappointingly easy proof. The following argument appears in Bose et al. 7, but similar “perturb and scale” arguments are fairly common. Let S:=(v1,…,vs)assign𝑆subscript𝑣1…subscript𝑣𝑠S:=(v_{1},\\ldots,v_{s}) be a free-collinear set in G𝐺G and let x1<⋯<xssubscript𝑥1⋯subscript𝑥𝑠x_{1}<\\cdots<x_{s} and y1,…,yssubscript𝑦1…subscript𝑦𝑠y_{1},\\ldots,y_{s} be real numbers. Since S𝑆S is a free-collinear set in G𝐺G, G𝐺G has a\nstraight-line crossing-free drawing in Γ0subscriptΓ0\\Gamma_{0} where visubscript𝑣𝑖v_{i} is at (xi,0)subscript𝑥𝑖0(x_{i},0) for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\}. It follows easily from the definition of straight-line crossing-free drawing that there exists some ϵ>0italic-ϵ0\\epsilon>0 such that perturbing each of the vertices in Γ0subscriptΓ0\\Gamma_{0} by at most ϵitalic-ϵ\\epsilon results in another straight-line crossing-free drawing Γ0′superscriptsubscriptΓ0′\\Gamma_{0}^{\\prime}. Let y:=max⁡{|y1|,…,|ys|}assign𝑦subscript𝑦1…subscript𝑦𝑠y:=\\max\\{|y_{1}|,\\ldots,|y_{s}|\\}. Define Γ0′superscriptsubscriptΓ0′\\Gamma_{0}^{\\prime} by moving visubscript𝑣𝑖v_{i} to (xi,ϵ​yi/y)subscript𝑥𝑖italic-ϵsubscript𝑦𝑖𝑦(x_{i},\\epsilon y_{i}/y), for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\} and leaving the other vertices of G𝐺G fixed. Then each vertex in Γ0′superscriptsubscriptΓ0′\\Gamma_{0}^{\\prime} has been moved a distance of at most ϵitalic-ϵ\\epsilon from its location in Γ0subscriptΓ0\\Gamma_{0}, so Γ0′superscriptsubscriptΓ0′\\Gamma_{0}^{\\prime} is a straight-line crossing-free drawing of G𝐺G. Finally, multiply the y𝑦{y}-coordinate of each vertex by y/ϵ𝑦italic-ϵy/\\epsilon to obtain a final straight-line crossing-free drawing ΓΓ\\Gamma. This y-scaling is an affine transformation that does not introduce any crossings, so ΓΓ\\Gamma is a straight-line crossing-free drawing of G𝐺G and, for each i∈{1,…,s}𝑖1…𝑠i\\in\\{1,\\ldots,s\\}, ΓΓ\\Gamma places visubscript𝑣𝑖v_{i} at (xi,yi)subscript𝑥𝑖subscript𝑦𝑖(x_{i},y_{i}).\n\nReference markers found: [35]\n\nContext windows for each [ref]:\n[ref]35: of a cycle C𝐶C is an edge that is not part of C𝐶C but both of its endpoints are vertices of C𝐶C. Under our definitions, a planar graph is a graph that has a crossing-free drawing. Fáry’s Theorem  [ref]35  asserts that a graph is planar if and only if it has a straight-line crossing-free drawing. Today, we use Fáry’s Theorem without thinking about it, but it is worthwhile spending a moment\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 35,\n            \"titles\": [\n                \"New Bounds on the Local and Global Edge-length Ratio of Planar Graphs\",\n                \"Graphs with homeomorphically irreducible spanning trees\",\n                \"Universal point subsets for planar graphs\",\n                \"SEFE without mapping via large induced outerplane graphs in plane graphs\",\n                \"On a tree and a path with no geometric simultaneous embedding\",\n                \"Superpatterns and universal point sets\",\n                \"Track layouts, layered path decompositions, and leveled planarity\",\n                \"Column planarity and partially-simultaneous geometric embedding\",\n                \"Column planarity and partial simultaneous geometric embedding for outerplanar graphs\",\n                \"Trees in polyhedral graphs\",\n                \"Small drawings of outerplanar graphs, series-parallel graphs, and other planar graphs\",\n                \"Circumference of 3-connected claw-free graphs and large Eulerian subgraphs of 3-edge connected graphs\",\n                \"Simultaneous embedding of planar graphs\",\n                \"Longest cycles in 3-connected 3-regular graphs\",\n                \"On embedding an outer-planar graph in a point set\",\n                \"Connected Dominating Sets in Triangulations\",\n                \"A polynomial bound for untangling geometric planar graphs\",\n                \"Selected open problems in graph drawing\",\n                \"On simultaneous planar graph embeddings\",\n                \"Upper bound constructions for untangling planar geometric graphs\",\n                \"On universal point sets for planar graphs\",\n                \"Straight line embeddings of planar graphs on point sets\",\n                \"Untangling polygons and graphs\",\n                \"Drawing planar graphs with many collinear vertices\",\n                \"Matched drawings of planar graphs\",\n                \"Graph theory, volume 173 of Graduate Texts in Mathematics\",\n                \"The utility of untangling\",\n                \"Dual circumference and collinear sets\",\n                \"Every collinear set in a planar graph is free\",\n                \"Characterization of unlabeled level planar trees\",\n                \"Column planarity and partial simultaneous geometric embedding\",\n                \"Straight-line drawings on restricted integer grids in two and three dimensions\",\n                \"Small sets supporting fáry embeddings of planar graphs\",\n                \"How to draw a planar graph on a grid\",\n                \"On straight-line representation of planar graphs\",\n                \"How many vertex locations can be arbitrarily chosen when drawing planar graphs?\",\n                \"Untangling a planar graph\",\n                \"Embedding a planar triangulation with vertices at specified points (solution to problem e3341)\",\n                \"Shortness exponents of families of graphs\",\n                \"Longest cycles in 3-connected cubic graphs\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]35 based on the context and research area of Free Sets in Planar Graphs: History and ApplicationsThis research is partially funded by the grants from NSERC and the University Research Chair of University of Ottawa.. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}