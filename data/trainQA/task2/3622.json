{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Delving into the Estimation Shift of Batch Normalization in a Network\n\nPaper Abstract: \n\nPaper Section Text:\nInput normalization is extensively used in training neural networks for decades  and shows good theoretical properties in optimization for linear models  .\nIt uses population statistics for normalization that can be calculated directly from the available training data. A natural idea is to extend normalization for the activation in a network. However, normalizing activation is more challenging since the distribution of internal activation varies, which leads to the estimation of population statistics for normalization inaccurate  . A network with activation normalized by the population statistics shows the training instability 2. Batch normalization (BN)  addresses itself to normalize the activation using mini-batch statistics during training, but the estimated population statistics during inference/test.\nBN ensures the normalized mini-batch output standardized over each iteration, enabling stable training, efficient optimization     3 and potential generalization 3  . It has been extensively used in varieties of architectures [ref]9    1 [ref]53, and successfully proliferated throughout various areas 7  2. Despite the common success of BN, it still suffers from problems when applied in certain scenarios 2 . One notorious limitation of BN is its small-batch-size problem — BN’s error increases rapidly as the batch size becomes smaller  4. Besides, a network with a naive BN gets significantly degenerated performance, if there exists covariate shift between the training and test data  0 1 .\nWhile these problems raise across different scenarios and contexts, the estimated population statistics of BN used for inference seems to be the link between them: 1) the small-batch-size problem of BN can be relieved if its estimated populations statistics are corrected during test 4 6; 2) and a model is more robust for unseen domain data (corrupted images) if the estimated population statistics of BN are adapted based on the available test data  0 . This paper investigates the estimation of population statistics in a systematic way. We introduce expected population statistics of BN, considering the ill-defined population statistics of the activation with a varying distribution during training (see Section 4.2 for details). We refer to as estimation shift of BN if its estimated population statistics do not equal to its expected ones, and design experiments to quantitatively investigate how the estimation shift affects a batch normalized network. Our primary observation is that the estimation shift of BN can be accumulated in a network (Figure 1 (a)). This observation provides clues to explain why a network with BN has significantly degenerated performance under small-batch-size training, and why the population statistics of BN need to be adapted if there exists distribution shift for input data during test.\nWe further find that a batch-free normalization (BFN)—normalizing each sample independently without across batch dimension—can block the accumulation of the estimation shift of BN. This relieves the performance degeneration of a network if a distribution shift occurs. These observations motivate our design of XBNBlock that replaces one BN with BFN in the bottleneck of residual-style networks [ref]9 [ref]53. We apply the proposed XBNBlock to ResNet [ref]9 and ResNeXt [ref]53 architectures and conduct experiments on the ImageNet 7 and COCO  benchmarks.\nXBNBlock consistently improves the performance for both architectures, with absolute gains of 0.6%∼1.1%similar-topercent0.6percent1.10.6\\%\\sim 1.1\\% in top-1 accuracy for ImageNet, 0.86%∼1.62%similar-topercent0.86percent1.620.86\\%\\sim 1.62\\% in bounding box AP for COCO using Faster R-CNN 6, and 0.56%∼2.06%similar-topercent0.56percent2.060.56\\%\\sim 2.06\\% ( 0.22%∼1.18%similar-topercent0.22percent1.180.22\\%\\sim 1.18\\%) in bounding box AP (mask AP) for COCO using Mask R-CNN . Besides, XBNBlock seems to be more robust to the distribution shift.\n\nReference markers found: [9]\n\nContext windows for each [ref]:\n[ref]9: output standardized over each iteration, enabling stable training, efficient optimization     3 and potential generalization 3  . It has been extensively used in varieties of architectures [ref]9    1 [ref]53, and successfully proliferated throughout various areas 7  2. Despite the common success of BN, it still suffers from problems when applied in certain scenarios 2 . One notorious\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 9,\n            \"titles\": [\n                \"Bag of Tricks for Image Classification with Convolutional Neural Networks\",\n                \"Layer normalization\",\n                \"Revisiting Batch Normalization for Improving Corruption Robustness\",\n                \"Understanding Batch Normalization\",\n                \"High-performance large-scale image recognition without normalization\",\n                \"TaskNorm: Rethinking Batch Normalization for Meta-Learning\",\n                \"Online Normalization for Training Neural Networks\",\n                \"Natural neural networks\",\n                \"Mask R-CNN\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Densely connected convolutional networks\",\n                \"Normalization Techniques in Training DNNs: Methodology, Analysis and Application\",\n                \"Decorrelated Batch Normalization\",\n                \"An Investigation into the Stochasticity of Batch Whitening\",\n                \"Group Whitening: Balancing Learning Efficiency and Representational Capacity\",\n                \"Batch Renormalization: Towards Reducing Minibatch Dependence in Batch-Normalized Models\",\n                \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n                \"Averaging Weights Leads to Wider Optima and Better Generalization\",\n                \"U-GAT-IT: Unsupervised Generative Attentional Networks with Adaptive Layer-Instance Normalization for Image-to-Image Translation\",\n                \"Efficient backprop\",\n                \"Second order properties of error surfaces\",\n                \"Positional Normalization\",\n                \"Revisiting Batch Normalization For Practical Domain Adaptation\",\n                \"Feature Pyramid Networks for Object Detection\",\n                \"Microsoft COCO: Common Objects in Context\",\n                \"SGDR: stochastic gradient descent with restarts\",\n                \"Differentiable Learning-to-Normalize via Switchable Normalization\",\n                \"ShuffleNet V2: Practical Guidelines for Efficient CNN Architecture Design\",\n                \"maskrcnn-benchmark: Fast, modular reference implementation of Instance Segmentation and Object Detection algorithms in PyTorch\",\n                \"Deep Boltzmann Machines and the Centering Trick, volume 7700 of LNCS\",\n                \"Evaluating Prediction-Time Batch Normalization for Robustness under Covariate Shift\",\n                \"Batch-Instance Normalization for Adaptively Style-Invariant Neural Networks\",\n                \"Two at Once: Enhancing Learning and Generalization Capacities via IBN-Net\",\n                \"Switchable whitening for deep representation learning\",\n                \"Automatic differentiation in PyTorch\",\n                \"Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks\",\n                \"ImageNet Large Scale Visual Recognition Challenge\",\n                \"MobileNetV2: Inverted Residuals and Linear Bottlenecks\",\n                \"How Does Batch Normalization Help Optimization?\",\n                \"Improving robustness against common corruptions by covariate shift adaptation\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]9 based on the context and research area of Delving into the Estimation Shift of Batch Normalization in a Network. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}