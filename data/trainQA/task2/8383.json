{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Words Matter: Leveraging Individual Text Embeddings for Code Generation in CLIP Test-Time Adaptation\n\nPaper Abstract: \n\nPaper Section Text:\nThe proposed approach aims at finding reliable pseudo-labels in an online manner without any supervision. To achieve this, we propose to leverage the text embeddings generated by the frozen CLIP text encoder, which serve as strong, domain-agnostic class descriptors to yield label assignments for test samples. This contrasts to existing unsupervised representation learning literature , where cluster centroids are iteratively updated based on the prior label assignments. Below, we elaborate on the details of our method. Learning objective.  To overcome the limitation of naively minimizing Eq. (2) in the fully unlabeled scenario, we first encode the model predictions as posterior distributions q​(y|𝐱i)𝑞conditional𝑦subscript𝐱𝑖q(y|\\mathbf{x}_{i}), which results in: Considering the probability is obtained as in Eq. (1), this loss can be expressed as: In the equation above, 𝐓=[𝐭1,…,𝐭K]𝐓subscript𝐭1…subscript𝐭𝐾\\mathbf{T}=[\\mathbf{t}_{1},...,\\mathbf{t}_{K}] represents the matrix containing the class text prototypes, and the logarithmic term in the right side does not depend on 𝐪𝐪\\mathbf{q}. If we now express Eq. (4) in its matrix form over all the test images, and let 𝐐𝐐\\mathbf{Q} be a matrix with columns 𝐪isubscript𝐪𝑖\\mathbf{q}_{i}, we have the following objective: where, following , we enforce the matrix 𝐐𝐐\\mathbf{Q} to be an element of the transportation polytope: with 𝟏Ksubscript1𝐾\\mathbf{1}_{K} and 𝟏Nsubscript1𝑁\\mathbf{1}_{N} denoting the vectors of ones in dimension K𝐾K and N𝑁N, respectively. The constraints on 𝒬𝒬\\mathcal{Q} enforce that on average each prototype is selected at least NK𝑁𝐾\\frac{N}{K} times, encouraging 𝐐𝐐\\mathbf{Q} to be a matrix with uniform marginals in both rows and columns. Optimization.  As the objective function in Eq. (5) is linear, and the constraints defining 𝒬𝒬\\mathcal{Q} are also linear, this is a linear program. Nevertheless, directly optimizing the above learning objective is time-consuming in practice, particularly as the number of data points and classes increases. To address this issue and allow a faster optimization, we apply the Sinkhorn algorithm , which integrates an entropic constraint, enforcing a simple structure on the optimal regularized transport. Hence, the optimization problem becomes: In the equation above, ℋ​(𝐐)ℋ𝐐\\mathcal{H}(\\mathbf{Q}) is the entropy function ℋ​(𝐐)=−∑i​j𝐐i​j​log⁡𝐐i​jℋ𝐐subscript𝑖𝑗subscript𝐐𝑖𝑗subscript𝐐𝑖𝑗\\mathcal{H}(\\mathbf{Q})=-\\sum_{ij}\\mathbf{Q}_{ij}\\log\\mathbf{Q}_{ij} and ε𝜀\\varepsilon controls its weight. Furthermore, in order to enable online code generation, we work on batches by restricting the transportation polytope to the current batch [ref]4, in contrast to other works that employ the full dataset . Thus, the dimensionality of the 𝐐𝐐\\mathbf{Q} matrix becomes K×Bs𝐾subscript𝐵𝑠K\\times B_{s}, where Bssubscript𝐵𝑠B_{s} denotes the batch size. Now, the soft codes 𝐐∗superscript𝐐\\mathbf{Q}^{*} are the solution of the problem presented in (7) over the set 𝒬𝒬\\mathcal{Q}, which can be efficiently optimized with a few iterations as: where 𝐮𝐮\\mathbf{u} and 𝐯𝐯\\mathbf{v} are renormalization vectors in K and B respectively, with t𝑡t denoting the iteration. Distilling knowledge from multiple text prototypes.  Very recent literature 9 has pointed out to the limitations of using the average text prototypes, and have instead suggested to resort to multiple category embeddings, each obtained through the different text templates in 𝒯𝒯\\mathcal{T}. Thus, we modify the solution presented in Eq. (8) to account for multiple class templates333A list of the templates employed is presented in Appendix A, where the codes for each template m𝑚m can be obtained as: The renormalization vectors in our setting are computed using a small number of matrix multiplications using the iterative Sinkhorn-Knopp algorithm, where in each iteration 𝐮m(t)=𝐮m/((exp(𝐓m⊤𝐙/λ)𝐯mt−1)\\mathbf{u}^{(t)}_{m}=\\mathbf{u}_{m}/((\\exp(\\mathbf{T}_{m}^{\\top}\\mathbf{Z}/\\lambda)\\mathbf{v}^{t-1}_{m}) and 𝐯m(t)=𝐯m/((exp(𝐓m⊤𝐙/λ)𝐮mt)\\mathbf{v}^{(t)}_{m}=\\mathbf{v}_{m}/((\\exp(\\mathbf{T}_{m}^{\\top}\\mathbf{Z}/\\lambda)\\mathbf{u}^{t}_{m}), with 𝐯m0=𝟏subscriptsuperscript𝐯0𝑚1\\mathbf{v}^{0}_{m}=\\mathbf{1}. Furthermore, 𝐓m=[𝐭1​m,…,𝐭K​m]subscript𝐓𝑚subscript𝐭1𝑚…subscript𝐭𝐾𝑚\\mathbf{T}_{m}=[\\mathbf{t}_{1m},...,\\mathbf{t}_{Km}] denotes the matrix containing the class text prototypes obtained from the m𝑚m-th template. To optimize the objective in Eq. (3), we employ the soft label assignments, as they have shown to yield superior performance compared to their hard counterpart in other problems [ref]4. Now, to distill the knowledge of the more diverse, and richer representations derived from multiple text predictions per category to the model, the cross-entropy in Eq. (3) is optimized M𝑀M times (one per template m𝑚m), which can be defined for each image and template as ℓ​(𝐩i,𝐪i​m∗)=−𝐪i​m∗​log⁡𝐩iℓsubscript𝐩𝑖subscriptsuperscript𝐪𝑖𝑚subscriptsuperscript𝐪𝑖𝑚subscript𝐩𝑖\\ell(\\mathbf{p}_{i},\\mathbf{q}^{*}_{im})=-\\mathbf{q}^{*}_{im}\\log\\mathbf{p}_{i},\nwhere 𝐩isubscript𝐩𝑖\\mathbf{p}_{i} is obtained with the average text template as in Eq. (1). Thus, for a given test image i𝑖i in a batch, after each update produced by the m𝑚m-th text template, the visual encoder produces novel visual embeddings 𝐳isubscript𝐳𝑖\\mathbf{z}_{i}, which are then used to generate new predictions 𝐩isubscript𝐩𝑖\\mathbf{p}_{i} for i𝑖i. Whole learning strategy.  The final proposed algorithm consists of updating the affine parameters in Layer Normalization, such as in  9 3, and learning a label assignment matrix 𝐐msubscript𝐐𝑚\\mathbf{Q}_{m} per text template by solving the optimization problem presented in Eq. (7). This is done iteratively by alternating two steps across the batches and text templates: i) with the learnable parameters fixed, we compute the visual features 𝐙∈d×Bs\\mathbf{Z}\\in{}^{d\\times B_{s}} of the test batch samples, and find 𝐐m∗superscriptsubscript𝐐𝑚\\mathbf{Q}_{m}^{*} through Eq. (9) by iterating the updates on 𝐮msubscript𝐮𝑚\\mathbf{u}_{m} and 𝐯msubscript𝐯𝑚\\mathbf{v}_{m}; and ii) given the current label assignments 𝐐m∗superscriptsubscript𝐐𝑚\\mathbf{Q}_{m}^{*}, and the softmax predictions for the test samples obtained with each class prototype 𝐭ksubscript𝐭𝑘\\mathbf{t}_{k}, the set of learnable parameters is updated by minimizing Eq. (3) w.r.t. the layer norm parameters, where stochastic gradient descent is applied over the whole batch. This process is repeated M𝑀M times. Finally, the class predictions on the batch are inferred with the updated model. A view of the proposed method is detailed in Alg. 1. Interpretation.  Given a batch of Bssubscript𝐵𝑠B_{s} visual embeddings 𝐙=[𝐳1,…,𝐳B]𝐙subscript𝐳1…subscript𝐳𝐵\\mathbf{Z}=[\\mathbf{z}_{1},...,\\mathbf{z}_{B}], we aim at optimizing a function to map these embeddings into the class prototypes 𝐓=[𝐭1,…,𝐭K]𝐓subscript𝐭1…subscript𝐭𝐾\\mathbf{T}=[\\mathbf{t}_{1},...,\\mathbf{t}_{K}]. If we let 𝐐𝐐\\mathbf{Q} denote the codes (or mapping), our goal is optimizing 𝐐𝐐\\mathbf{Q} to maximize the similarity between the image features and the class text prototypes. While in fully-supervised, or semi-supervised regimes, labeled data is available to generate the class prototypes, in our Test-Time Adaptation scenario this becomes more challenging, as no label information about the test images is provided. Nevertheless, in the context of large vision-language models, the text can be leveraged as a form of supervision to create the prototypes 𝐓𝐓\\mathbf{T}, which represent a robust representation of each class, which is in addition domain-agnostic. Furthermore, the entropic constraint term controls the smoothness of the mapping, promoting equally distributed predictions over all classes in each batch, which avoids degenerate solutions. In addition, the fact of resorting to multiple templates individually, instead of averaging their embeddings, fully leverage the richer, and domain-agnostic information present in natural language.\n ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ ▲ Link to unsupervised representation learning.  The proposed distilling strategy takes inspiration from unsupervised representation learning\n[ref]5 6 [ref]4, where comparing random crops of the same image has the potential to yield stronger image representations. In particular, these strategies leverage these novel “views” of the same image as an image augmentation strategy, whose integration improves the semantic quality of the learned image representations. Nevertheless, i) this strategy substantially increases the computational and memory burden [ref]5 6, ii) specific composition of data augmentation operations is crucial for learning good representations [ref]5, and iii) low-quality crops can alter the model performance [ref]4. In contrast, exploiting multiple text embeddings to guide the model adaptation process serves as a similar strategy, while also alleviating these shortcomings. More concretely, the text embeddings are low dimensional vectors, which can be computed off-line as they are image agnostic, considerably reducing computation requirements. Furthermore, in the absence of supervision, we argue that diverse text descriptions associated with a given class convey more informative representations than individual crops or “views” of an image to learn more generalizable features. While images provide valuable visual information, their parts may lack the contextual richness necessary for effective representation learning. This distinction suggests that leveraging a variety of textual prompts can indeed serve as a more promising alternative to contrastive learning based on multiple image crops while also being more efficient.\n\nReference markers found: [4]\n\nContext windows for each [ref]:\n[ref]4: and ε𝜀\\varepsilon controls its weight. Furthermore, in order to enable online code generation, we work on batches by restricting the transportation polytope to the current batch [ref]4, in contrast to other works that employ the full dataset . Thus, the dimensionality of the 𝐐𝐐\\mathbf{Q} matrix becomes K×Bs𝐾subscript𝐵𝑠K\\times B_{s}, where Bssubscript𝐵𝑠B_{s} denotes the batch\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 4,\n            \"titles\": [\n                \"A Simple Framework for Contrastive Learning of Visual Representations\",\n                \"Self-labelling via simultaneous clustering and representation learning\",\n                \"Deep clustering for unsupervised learning of visual features\",\n                \"Unsupervised pre-training of image features on non-curated data\",\n                \"Unsupervised Learning of Visual Features by Contrasting Cluster Assignments\",\n                \"Improving Test-Time Adaptation via Shift-agnostic Weight Regularization and Nearest Source Prototypes\",\n                \"Sinkhorn distances: Lightspeed computation of optimal transport\",\n                \"A lost opportunity for vision-language models: A comparative study of online test-time adaptation for vision-language models\",\n                \"Unbiased metric learning: On the utilization of multiple datasets and web images for softening bias\",\n                \"CLIP-Adapter: Better Vision-Language Models with Feature Adapters\",\n                \"Test-Time Adaptation via Conjugate Pseudo-labels\",\n                \"Finetune like you pretrain: Improved finetuning of zero-shot vision models\",\n                \"CLIPArTT: Light-weight Adaptation of CLIP to New Domains at Test Time\",\n                \"Benchmarking neural network robustness to common corruptions and surface noise\",\n                \"Unsupervised deep learning by neighbourhood discovery\",\n                \"Test-time classifier adjustment module for model-agnostic domain generalization\",\n                \"Deep clustering: On the link between discriminative models and K-means\",\n                \"Scaling up visual and vision-language representation learning with noisy text supervision\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Padclip: Pseudo-labeling with adaptive debiasing in clip for unsupervised domain adaptation\",\n                \"Hierarchical Optimal Transport for Multimodal Distribution Alignment\",\n                \"Deeper, Broader and Artier Domain Generalization\",\n                \"Do We Really Need to Access the Source Data? Source Hypothesis Transfer for Unsupervised Domain Adaptation\",\n                \"Swapprompt: Test-time prompt adaptation for vision-language models\",\n                \"The Norm Must Go On: Dynamic Unsupervised Domain Adaptation by Normalization\",\n                \"Self-Supervised Learning of Pretext-Invariant Representations\",\n                \"Efficient Test-Time Model Adaptation without Forgetting\",\n                \"Towards Stable Test-time Adaptation in Dynamic Wild World\",\n                \"WATT: Weight Average Test-Time Adaptation of CLIP\",\n                \"Visda: A synthetic-to-real benchmark for visual domain adaptation\",\n                \"Learning Transferable Visual Models From Natural Language Supervision\",\n                \"Do CIFAR-10 Classifiers Generalize to CIFAR-10?\",\n                \"Improving robustness against common corruptions by covariate shift adaptation\",\n                \"Test-Time Prompt Tuning for Zero-Shot Generalization in Vision-Language Models\",\n                \"A Closer Look at the Few-Shot Adaptation of Large Vision-Language Models\",\n                \"Deep Hashing Network for Unsupervised Domain Adaptation\",\n                \"Tent: Fully Test-Time Adaptation by Entropy Minimization\",\n                \"Robust fine-tuning of zero-shot models\",\n                \"Tiny imagenet challenge\",\n                \"ClusterFit: Improving Generalization of Visual Representations\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]4 based on the context and research area of Words Matter: Leveraging Individual Text Embeddings for Code Generation in CLIP Test-Time Adaptation. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}