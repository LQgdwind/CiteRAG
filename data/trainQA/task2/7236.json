{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Sanity Checks Revisited: An Exploration to Repair the Model Parameter Randomisation Test\n\nPaper Abstract: \n\nPaper Section Text:\nAll experiments were implemented in python, using PyTorch  for deep learning. zennit 7 and captum  packages were used to compute explanations. The Quantus  package was utilised to for evaluations with MPRT and extended to implement sMPRT and eMPRT. The MetaQuantus library was employed for meta-evaluation [ref]27. As shown by  , MPRT can be sensitive to the choice of task. We therefore aim to cover a wide range of datasets in this work.\nWe use three image classification datasets in the experiments: ImageNet (ILSVRC2012 9), MNIST and fMNIST . For MNIST and fMNIST, we randomly sample 100010001000 test samples and for ImageNet we use the first 100010001000 samples of the validation set for experiments discussed in Figure 2 and randomly select 300300300 test samples for experiments showcased in Figure 3 and Figures 4-12. The experiments are performed using different neural network models, including architectures such as LeNets  and ResNets [ref]29 and VGGs 3,\nwhich contributes to the robustness of our findings. For MNIST and fMNIST, we train LeNets to an accuracy of 98.1498.1498.14% and 87.4487.4487.44% respectively. The training of all models is performed in a similar fashion; employing SGD optimisation with a standard cross-entropy loss, an initial learning rate of 0.0010.0010.001 and momentum of 0.90.90.9. All models are trained for 202020 epochs each. For ILSVRC-15 4 and ILSVRC2012 9, we use the ResNet-18 model [ref]29 and VGG-16 3 with pre-trained weights given the ImageNet dataset, accessible via PyTorch . Explanation Methods and Preprocessing. \nWe evaluated the following explanation methods using the MPRT variants:\nGradients  , Saliency , Input√ó\\timesGradient , GradCAM , GradientSHAP  with 555 samples, SmoothGrad  (with 20 noisy samples and a noise level of 0.1/(xmax‚àíxmin)0.1subscriptùë•maxsubscriptùë•min0.1/(x_{\\text{max}}-x_{\\text{min}}) as implemented as default in zennit 7, Integrated Gradients  (with 20 iterations and a baseline of zero), Guided Backpropagation  and two distinct variations of Layer-wise Relevance Propagation (LRP)  : application of the LRP-ŒµùúÄ\\varepsilon-rule  to all layers (called LRP-ŒµùúÄ\\varepsilon) and application of the LRP-z+superscriptùëß{z^{+}}-rule  to all layers (called LRP-z+superscriptùëßz^{+}). For random attribution (as a control variant) we sampled from a uniform distribution, i.e., ùíÜ^i‚àºùí∞‚Äã(1,0)similar-tosubscript^ùíÜùëñùí∞10\\hat{{\\bm{e}}}_{i}\\sim\\mathcal{U}(1,0). Since preprocessing can significantly affect the results of MPRT , we only take the absolute values for methods where the sign has no meaning in terms of feature importance (Saliency and SmoothGrad) and only consider the positive values for GradCAM, as per the original paper . While the histogram entropy we used for eMPRT already normalises inputs implicitly, the SSIM used to measure explanation difference in MPRT and sMPRT requires normalisation to make attributions at different scales before and after randomisation comparable. For this purpose, we utilised normalisation by the square root of the average second-moment estimate (cf. Supplement of ), as this normalisation does not impose as much additional variance as normalisation by, e.g., maximum value would. The normalisation is defined as follows: where ùíÜ^h,wsubscript^ùíÜ‚Ñéùë§\\hat{{\\bm{e}}}_{h,w} is the value of the explanation map at pixel location (h‚Ñéh, wùë§w) and HùêªH, WùëäW denote the height and width, respectively333This normalisation technique guarantees that the mean squared distance of each attribution score to zero equals one. As the procedure does not constrain attributions to a fixed range, it is not designed for visual representation but aims to preserve a measure useful for comparing the distances between different explanation methods.. In the original paper , different similarity measures are used e.g., Structural Similarity Index (SSIM) , Spearman Rank Correlation and HOG. We employ SSIM , motivated by its widespread adoption in existing literature   . For the experiments with sMPRT, we employ SSIM  to measure explanation similarity. For generating noise (œÉùúé\\sigma), we used an adaptive standard deviation of 0.2/(xmax‚àíxmin)0.2subscriptùë•maxsubscriptùë•min0.2/(x_{\\text{max}}-x_{\\text{min}}), following the original heuristic presented in . For the number of noise samples (NùëÅN) to average over, we investigated the following values: 1,20,50,300120503001,20,50,300. Evaluation for those values is shown in Supplement 6.3. While a larger NùëÅN generally improves the denoised explanation estimate, it also increases computation time significantly. For Section 3.1, we thus chose N=50ùëÅ50N=50 as our estimate with acceptable runtime. In our experiments, for Equation 4, we empirically set the bin count B=100ùêµ100B=100, which demonstrated robust performance across diverse experiments and explanation methods. Although various statistical rules like Freedman-Diaconis‚Äô  and Scotts‚Äô  exist for optimising BùêµB, initial tests indicated inconsistency in their performance, largely due to their assumption of data normality, which is generally not applicable to attribution data. To measure model complexity, we computed the Shannon entropy of the model output (post-softmax) probabilities as follows: To meta-evaluate the metrics, i.e., capture their metric performance characteristics in terms of statistical reliability, we employed the MetaQuantus library . For this, we measured both their resilience to noise (N‚ÄãRùëÅùëÖNR) and their reactivity to adversary (A‚ÄãRùê¥ùëÖAR) by inducing controlled perturbations, where we applied minor and disruptive perturbations to the input- and model spaces, respectively444We applied i.i.d additive uniform noise such that ùíô^i=ùíô+ùúπi‚Äãwith‚Äãùúπi‚àºùí∞‚Äã(Œ±,Œ≤)subscript^ùíôùëñùíôsubscriptùúπùëñwithsubscriptùúπùëñsimilar-toùí∞ùõºùõΩ\\hat{{\\bm{x}}}_{i}={\\bm{x}}+\\bm{\\delta}_{i}\\ \\text{with}\\ \\bm{\\delta}_{i}\\sim{\\mathcal{U}}(\\alpha,\\beta) for the Input Perturbation Test and applied multiplicative Gaussian noise to all weights of the network, i.e., ùúΩ^i=ùúΩ‚ãÖùùÇi‚Äãwith‚ÄãùùÇi‚àºùí©‚Äã(ùùÅ,ùö∫)subscript^ùúΩùëñ‚ãÖùúΩsubscriptùùÇùëñwithsubscriptùùÇùëñsimilar-toùí©ùùÅùö∫\\hat{\\bm{\\theta}}_{i}=\\bm{\\theta}\\cdot\\bm{\\nu}_{i}\\ \\text{with}\\ \\bm{\\nu}_{i}\\sim\\mathcal{N}(\\bm{\\mu},\\bm{\\Sigma}) for the Model Perturbation Test. The hyperparameters Œ±,Œ≤,Œº,Œ£ùõºùõΩùúáŒ£\\alpha,\\beta,\\mu,\\Sigma were set according to the original publication [ref]27.. Here, we computed the intra- (ùêàùêÄùêÇùêàùêÄùêÇ\\mathbf{IAC}) and inter-consistency (ùêàùêÑùêÇùêàùêÑùêÇ\\mathbf{IEC}) scores, which include measuring the similarity in score distributions and ranking of different explanation methods (post-perturbation), respectively. Each metric received a summarising meta-consistency (MC) score with MC‚àà MC01\\text{MC}\\in : with ùíé‚àó=‚Ñù4superscriptùíésuperscript‚Ñù4{\\bm{m}}^{*}=\\mathbb{R}^{4}\nrepresents an optimally performing quality estimator\nas defined by the all-one indicator vector. For exact definitions for the contents of the meta-evaluation vector ùê¶ùê¶\\mathbf{m}, we refer to the original publication [ref]27. For empirical assessment, we utilised the pre-existing tests available in the MetaQuantus library  and their associated hyperparameters. The existing MetaQuatus tests are accessible via the GitHub repository555Code at: https://github.com/annahedstroem/MetaQuantus/.. All metrics have been implemented in Quantus . We executed these metrics over K=5ùêæ5K=5 perturbations, spanning 333 iterations with the test configurations as outlined in the notebook666See hyperparameter settings at notebook: https://github.com/annahedstroem/MetaQuantus/blob/main/tutorials/Tutorial-Getting-Started-with-MetaQuantus.ipynb. To ensure a fair comparison among the metrics, we adhered to uniform hyperparameter settings, as specified by the normalisation formula in Equation 5. Given that the MetaQuantus library necessitates each metric to yield a single quality estimate q^‚àà‚Ñù^ùëû‚Ñù\\hat{q}\\in\\mathbb{R} per sample, we calculated the correlation coefficient for the fully randomised models in both MPRT and sMPRT, which is anticipated to enhance their performance.\n\nReference markers found: [27]\n\nContext windows for each [ref]:\n[ref]27: were used to compute explanations. The Quantus  package was utilised to for evaluations with MPRT and extended to implement sMPRT and eMPRT. The MetaQuantus library was employed for meta-evaluation [ref]27. As shown by  , MPRT can be sensitive to the choice of task. We therefore aim to cover a wide range of datasets in this work.\nWe use three image classification datasets in the experiments:\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 27,\n            \"titles\": [\n                \"Concise Explanations of Neural Networks using Adversarial Training\",\n                \"Do backpropagation trained neural networks have normal weight distributions?\",\n                \"Framework for Evaluating Faithfulness of Local Explanations\",\n                \"Quantus: An Explainable AI Toolkit for Responsible Evaluation of Neural Network Explanations and Beyond\",\n                \"Methods for interpreting and understanding deep neural networks\",\n                \"Towards Robust Interpretability with Self-Explaining Neural Networks\",\n                \"On the (In)fidelity and Sensitivity of Explanations\",\n                \"Evaluating and Aggregating Feature-based Model Explanations\",\n                \"Rethinking Stability for Attribution-based Explanations\",\n                \"On quantitative aspects of model interpretability\",\n                \"On pixel-wise explanations for non-linear classifier decisions by layer-wise relevance propagation\",\n                \"Evaluating the visualization of what a Deep Neural Network has learned\",\n                \"Towards better understanding of gradient-based attribution methods for Deep Neural Networks\",\n                \"IROF: a low resource evaluation metric for explanation methods\",\n                \"A Consistent and Efficient Evaluation Strategy for Attribution Methods\",\n                \"Sanity checks for saliency maps\",\n                \"When Explanations Lie: Why Many Modified BP Attributions Fail\",\n                \"A Note about: Local Explanation Methods for Deep Neural Networks Lack Sensitivity to Parameter Values\",\n                \"Investigating Sanity Checks for Saliency Maps with Image and Text Classification\",\n                \"Revisiting Sanity Checks for Saliency Maps\",\n                \"Shortcomings of Top-Down Randomization-Based Sanity Checks for Evaluations of Deep Neural Network Explanations\",\n                \"SmoothGrad: removing noise by adding noise\",\n                \"Visualizing and understanding convolutional networks\",\n                \"Axiomatic attribution for deep networks\",\n                \"Grad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization\",\n                \"NoiseGrad ‚Äî Enhancing Explanations by Introducing Stochasticity to Model Weights\",\n                \"Are artificial neural networks black boxes?\",\n                \"The Meta-Evaluation Problem in Explainable AI: Identifying Reliable Estimators with MetaQuantus\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Which Explanation Should I Choose? A Function Approximation Perspective to Characterizing Post Hoc Explanations\",\n                \"Finding the right XAI method ‚Äî A Guide for the Evaluation and Ranking of Explainable AI Methods in Climate Science\",\n                \"A mathematical theory of communication\",\n                \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n                \"ImageNet Large Scale Visual Recognition Challenge\",\n                \"Visualizing the impact of feature attribution baselines\",\n                \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n                \"Software for dataset-wide xai: From local explanations to global insights with Zennit, CoRelAy, and ViRelAy\",\n                \"Captum: A unified and generic model interpretability library for PyTorch\",\n                \"Imagenet classification with deep convolutional neural networks\",\n                \"Mnist handwritten digit database\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]27 based on the context and research area of Sanity Checks Revisited: An Exploration to Repair the Model Parameter Randomisation Test. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}