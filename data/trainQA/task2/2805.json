{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Iteratively Solve Routing Problems with Dual-Aspect Collaborative Transformer\n\nPaper Abstract: \n\nPaper Section Text:\nIn Table 1, we compare our DACT with, (1) learning based improvement methods, including Wu et al. , Neural-2-Opt [ref]23 (TSP only), NeuRewriter [ref]4 (CVRP only), NLNS  (CVRP only), (2) learning based construction methods, including AM-sampling [ref]5, GCN-BS  (TSP only), MDAM-BS , POMO , (3) conventional optimization algorithms equipped with learning based component(s), including DPDP , CVAE-Opt-DE , and (4) strong conventional solvers including Concorde , LKH  , and OR-Tools . We do not include L2I  as a baseline since it requires a prohibitively longer inference time than others888L2I needs 167 days for 10,000 CVRP100 instances, as estimated from 24min/instance in its original paper.. All results are averaged over 10,000 randomly generated instances except for CVAE-Opt-DE (with ≈\\approx) which only infers 1,000 instances,\nand we report the metrics of objective values, (optimality) gaps and run time. We test strong baselines POMO (TSP100, CVRP100), Neural-2-Opt, Wu et al. (except for size 20), and NLNS on our machine based on the pre-trained models. Other results (with ‡‡\\ddagger) are adopted from their original papers or from Wu et al. .\nFor TSP, Concorde is adopted to get the optimal solutions;\nCVRP is harder to be solved optimally, and the gaps are based on objective values of LKH3.\nWe report the total time using one GPU (for neural solvers) or one CPU (for conventional solvers) in (·), and the total time using multiple GPUs (for DACT) in [·]; for NLNS (with ##\\#), we use one GPU and ten CPUs (in parallel) following its default setting.\nNote that the run time (for CPU solvers, and those with ‡‡\\ddagger and ##\\#) may not be directly comparable with ours and hard to compare due to various factors (e.g., GPU v.s. CPU, Python v.s. C, different devices) and thus we focus more on gaps. Pertaining to TSP, our DACT with inference steps 1,000 (T=1k) and 5,000 (T=5k) significantly outperforms the traditional solver OR-Tools and the baseline Wu et al.  which directly adopted the original Transformer encoder. The DACT (T=5k) also deliveries lower gaps than construction methods including AM-sampling and GCN-BS on TSP100. With larger steps T=10k, our DACT further boosts the solution qualities and outperforms other construction methods including MDAM-BS (with beam search), and POMO (the current state-of-the-art). Besides, our DACT consistently outperforms improvement method Neural-2-Opt with shorter or similar run time. To further reduce the gaps, we also leverage the data augmentation technique in POMO (which considers flipping node coordinates without changing the optimal solution) to solve same instances multiple times in different ways. Although the inference time increases (we run data augmentation in serial), our DACT with 4 augments not only outstrips POMO with 8 augments but also achieves the lowest objective values and gaps among all purely learning based models.\nIn particular, we achieve the gap of 0.09%percent\\% on TSP100, which is superior to most of the recent neural solvers.\nPertaining to CVRP, our DACT with T=5k achieves better objective values than that of NeuRewriter. It also consistently outperforms the important baseline Wu et al.  in all cases. Compared with the NLNS solver that learned to control the large neighborhood search heuristics, the gaps achieved by DACT (T=10k) are smaller on CVRP20 and CVRP50, and highly comparable on CVRP100.\nWith T=10k and 6 augments, our DACT exhibits even better performance than the highly specialized heuristic solver LKH on CVRP20 and delivers the smallest gap of 0.57% on CVRP100 against other neural solvers including POMO with 8 augments.\nCompared with hybrid solver CVAE-Opt-DE, despite that it is averaged over 1,000 instances and integrated with search algorithm like differential evolution, our objective values are still lower on both TSP and CVRP.\nNevertheless, our DACT is inferior to a more advanced hybrid solver DPDP which leverages learnt heat-maps and traditional dynamic programming to search solutions. In terms of the inference time, our DACT is highly competitive against most of the neural solvers except for POMO which learns a construction model by sampling diverse trajectories. However, when it comes to the generalization performance on benchmark datasets, i.e., TSPLIB  and CVRPLIB  in Table 2(a), DACT produces significantly lower average gaps than the POMO with 8 augments, which indicates that our DACT is more advantageous in practice despite its longer inference time. On the other hand, it is possible to adopt a similar diverse rollout strategy for DACT to find better solutions earlier, or explore other model compression techniques such as the knowledge distillation  to learn a lighter DACT model for faster inference. Since our focus is to ameliorate Transformer for neural improvement solvers, we will investigate these possibilities in the future.\n\nReference markers found: [23]\n\nContext windows for each [ref]:\n[ref]23: In Table 1, we compare our DACT with, (1) learning based improvement methods, including Wu et al. , Neural-2-Opt [ref]23 (TSP only), NeuRewriter [ref]4 (CVRP only), NLNS  (CVRP only), (2) learning based construction methods, including AM-sampling [ref]5, GCN-BS  (TSP only), MDAM-BS , POMO , (3) conventional\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 23,\n            \"titles\": [\n                \"Learning Combinatorial Optimization Algorithms over Graphs\",\n                \"Vehicle routing: problems, methods, and applications\",\n                \"The electric vehicle-routing problem with time windows and recharging stations\",\n                \"Complexity of vehicle routing and scheduling problems\",\n                \"Learning to perform local rewriting for combinatorial optimization\",\n                \"Attention, Learn to Solve Routing Problems!\",\n                \"An Efficient Graph Convolutional Network Technique for the Travelling Salesman Problem\",\n                \"Multi-Decoder Attention Model with Embedding Glimpse for Solving Vehicle Routing Problems\",\n                \"POMO: Policy Optimization with Multiple Optima for Reinforcement Learning\",\n                \"Step-wise deep learning models for solving routing problems\",\n                \"Learning to Dispatch for Job Shop Scheduling via Deep Reinforcement Learning\",\n                \"Learning Improvement Heuristics for Solving Routing Problems\",\n                \"A learning-based iterative method for solving vehicle routing problems\",\n                \"Learning a latent search space for routing problems using variational autoencoders\",\n                \"Deep Reinforcement Learning for Solving the Heterogeneous Capacitated Vehicle Routing Problem\",\n                \"Reinforcement learning: An introduction\",\n                \"Attention Is All You Need\",\n                \"Heterogeneous Attentions for Solving Pickup and Delivery Problem via Deep Reinforcement Learning\",\n                \"Rethinking the positional encoding in language pre-training\",\n                \"Self-Attention with Relative Position Representations\",\n                \"Pointer networks\",\n                \"Neural Combinatorial Optimization with Reinforcement Learning\",\n                \"Reinforcement Learning for Solving the Vehicle Routing Problem\",\n                \"Learning 2-opt Heuristics for the Traveling Salesman Problem via Deep Reinforcement Learning\",\n                \"Generalize a Small Pre-trained Model to Arbitrarily Large TSP Instances\",\n                \"Deep policy dynamic programming for vehicle routing problems\",\n                \"Neural Large Neighborhood Search for the Capacitated Vehicle Routing Problem\",\n                \"LKH-3 (version 3.0.6), 2019\",\n                \"Gray code, 2021\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Layer normalization\",\n                \"Proximal policy optimization algorithms\",\n                \"Time Limits in Reinforcement Learning\",\n                \"Curriculum learning\",\n                \"Concorde TSP Solver, 2020\",\n                \"LKH (version 2.0.9), 2018\",\n                \"OR-Tools (version 7.2), 2019\",\n                \"TSPLIB-A traveling salesman problem library\",\n                \"New benchmark instances for the capacitated vehicle routing problem\",\n                \"Distilling the Knowledge in a Neural Network\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]23 based on the context and research area of Learning to Iteratively Solve Routing Problems with Dual-Aspect Collaborative Transformer. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}