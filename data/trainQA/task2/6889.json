{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Are Existing Out-Of-Distribution Techniques Suitable for Network Intrusion Detection?\n\nPaper Abstract: \n\nPaper Section Text:\nNetwork Intrusion Detection Systems (NIDS) monitor the network traffic for signs of potential threats with various techniques, including signature detection, anomaly detection, and behavioral analysis  .\nNetwork traffic can be analyzed either at a Packet Capture or Network Flow  (NetFlow) level, though packet inspection has become less common due to encryption and the massive size of modern traffic.\nWe focus on NetFlow inspection, where packets relating to a single communication  are analyzed by measuring aggregated features such as idle times and the amount of exchanged data. Recently, Machine Learning has gained popularity in NIDS  as it enables automatic extraction of complex detection patterns, quick adaptation to changing environments [ref]5, and easy personalization without expensive human expertise.\nHowever, ML-based solutions have limitations such as lacking interpretability and requiring well-crafted training data.\nAlthough a large body of research is addressing these issues , we focus on another drawback: ML-based NIDSs always provide a response regardless of whether they recognize (are trained with) the input data pattern. This issue is particularly relevant since network traffic tends to have dynamic and non-stationary distributions, either caused by normal behavioral shifts or adversaries, which can cause degradation in NIDS performance: a problem known as concept drift .\nAnother inherent problem of dynamic distributions is Out-Of-Distribution data, which is unusual traffic markedly different from a reference distribution not necessarily affecting the overall data distribution.\nIn general, concept drift and OOD data are both caused by shifts in feature distributions, label distributions, or both  . Based on our analysis, an ML-based NIDS may be affected in various ways after deployment.\nIn Fig. 1, we present 4 exemplar cases in a NIDS trained to detect Botnet and SQL injections.\nNormally, the NIDS is expected to work as in Case 1, where new traffic is well represented by training data (i.i.d. assumption).\nHowever, it is normal for traffic to shift over time and this may affect NIDSs depending on the shift extent and direction.\nFor instance, the shift to SQL traffic in Case 2 does not compromise the NIDS, but the same is not true for benign traffic.\nMoreover, new traffic may also be adversarially crafted (Case 3) and be potentially mistaken as in Case 4. We argue that shifts as those in Fig. 1 happen more in NetFlow features (covariate shift  ) rather than in labels (actual or semantic shift  ).\nAs in Case 2, malicious traffic remains malicious if its features are adversarially crafted to evade detection, while shifts in normal user behaviors should not transform benign traffic into malicious.\nEven in cases of new attacks (Case 3), it might be possible to experience shifts in feature distributions .\nAdditionally, we argue that OOD techniques sensitive to small feature perturbations can also serve as drift detectors by monitoring the volume of alerts over time either with standard statistics or existing methods   .\nTherefore, in this work, we adapt and evaluate techniques to detect shifts primarily affecting features. A perfect OOD detector should trigger an alert and ask the expert knowledge for further investigation in every situation but Case 1.\nHowever, Case 4 is extremely difficult to detect without any additional information besides the ML-based NIDS and training data.\nWhereas well-designed OOD detectors should identify cases like 2 and 3.\nWe thus investigate whether traffic generated by new attacks, either similar to those in training or completely different, can be detected as OOD by existing techniques from other ML fields.\nNote that it is not guaranteed that effective techniques in other fields are suitable for network intrusion.\nAs an example, well-working detectors on data like images with bounded and discrete domains might prove ineffective on NetFlows, where features are generally a mix of continuous unbounded and discrete. Therefore, we select detection techniques of different natures from other ML fields and evaluate whether such techniques can identify NetFlows of unknown attacks.\nAs baseline model, we consider a standard FeedForward Neural Network, and we also assess the effect of different training regimes on the quality of detection techniques.\nSpecifically, we train models in binary (different attacks in the same class) and multi-class (each attack makes a class) settings, with and without the aid of a simple Contrastive Learning approach: Center-Loss 0.\nWe expose various combinations of models and detection techniques to malicious traffic generated from attack types not seen in training, where such traffic may come from the same dataset (same network environment) and a different dataset (different network environment).\nFinally, we evaluate two ensembles of OOD techniques to enhance detection and further explore the complementarity of these techniques, providing guidelines for practical applications.\nAll our code and the numerical results are freely available at https://github.com/AndreaCorsini1/CyberOOD The contributions of this paper include: We investigate the effectiveness of treating the identification of unknown intrusions as an OOD detection problem and explore the applicability of existing OOD techniques. We identify the most effective techniques for detecting new intrusions and explore their potential for combination to enhance detection. We also discuss limitations of some techniques, providing insights for further development. We emphasize the significance of improving the model embeddings to achieve better detection, highlighting that: Contrastive Learning, specifically the use of Center-Loss, enables the creation of embeddings that improve OOD techniques and their ensemble. Multi-class training allows making semantically richer embeddings, which offer advantages over binary ones for OOD techniques and their ensembles. The remainder is organized as follows: Sec. II presents existing OOD literature; Sec. III describes key concepts for our work; Sec. IV outlines our methodology; Sec. V describes the experimental setup; Sec. VI presents results; and Sec. VII closes with limitations and potential future directions.\n\nReference markers found: [5]\n\nContext windows for each [ref]:\n[ref]5: the amount of exchanged data. Recently, Machine Learning has gained popularity in NIDS  as it enables automatic extraction of complex detection patterns, quick adaptation to changing environments [ref]5, and easy personalization without expensive human expertise.\nHowever, ML-based solutions have limitations such as lacking interpretability and requiring well-crafted training data.\nAlthough a\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 5,\n            \"titles\": [\n                \"Learning under Concept Drift: A Review\",\n                \"A survey on data-driven network intrusion detection\",\n                \"Survey of intrusion detection systems: techniques, datasets and challenges\",\n                \"An overview of ip flow-based intrusion detection\",\n                \"Deep learning methods in network intrusion detection: A survey and an objective comparison\",\n                \"Learn to adapt: Robust drift detection in security domain\",\n                \"Generalized out-of-distribution detection: A survey\",\n                \"Dataset Shift in Machine Learning\",\n                \"Learning from time-changing data with adaptive windowing\",\n                \"A discriminative feature learning approach for deep face recognition\",\n                \"Deep Learning for Anomaly Detection: A Review\",\n                \"A Unified Survey on Anomaly, Novelty, Open-Set, and Out-of-Distribution Detection: Solutions and Future Challenges\",\n                \"Toward open set recognition\",\n                \"A Baseline for Detecting Misclassified and Out-of-Distribution Examples in Neural Networks\",\n                \"Enhancing The Reliability of Out-of-distribution Image Detection in Neural Networks\",\n                \"ReAct: Out-of-distribution Detection With Rectified Activations\",\n                \"Dropout as a Bayesian Approximation: Representing Model Uncertainty in Deep Learning\",\n                \"Learning Confidence for Out-of-Distribution Detection in Neural Networks\",\n                \"Generalized ODIN: Detecting Out-of-distribution Image without Learning from Out-of-distribution Data\",\n                \"Deep Neural Networks are Easily Fooled: High Confidence Predictions for Unrecognizable Images\",\n                \"Is uncertainty quantification in deep learning sufficient for out-of-distribution detection?\",\n                \"A Simple Unified Framework for Detecting Out-of-Distribution Samples and Adversarial Attacks\",\n                \"Likelihood Regret: An Out-of-Distribution Detection Score For Variational Auto-encoder\",\n                \"Out-of-Distribution Detection with Deep Nearest Neighbors\",\n                \"A survey of deep learning-based network anomaly detection\",\n                \"Bat: Deep learning methods on network intrusion detection using nsl-kdd dataset\",\n                \"CADE: Detecting and explaining concept drift samples for security applications\",\n                \"Enidrift: A fast and adaptive ensemble system for network intrusion detection under real-world drift\",\n                \"Insomnia: Towards concept-drift robustness in network intrusion detection\",\n                \"Deep Learning\",\n                \"Kitsune: An ensemble of autoencoders for online network intrusion detection\",\n                \"Concept drift adaptation in intrusion detection systems using ensemble learning\",\n                \"On Calibration of Modern Neural Networks\",\n                \"A Survey on Contrastive Self-supervised Learning\",\n                \"Learning with rejection\",\n                \"Supervised Contrastive Learning\",\n                \"Troubleshooting an intrusion detection dataset: the cicids2017 case study\",\n                \"An analysis of the application of simplified silhouette to the evaluation of k-means clustering validity\",\n                \"Toward generating a new intrusion detection dataset and intrusion traffic characterization\",\n                \"Characterization of tor traffic using time based features\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]5 based on the context and research area of Are Existing Out-Of-Distribution Techniques Suitable for Network Intrusion Detection?. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}