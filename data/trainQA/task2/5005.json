{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Product Graphs from Spectral Templates\n\nPaper Abstract: \n\nPaper Section Text:\nGrowing demand for generating and recording of structured data, which live on meaningful underlying graph structures, has led to extending the classic processing tools to the emerging field of Graph Signal Processing (GSP)   . For instance, temperature measurement sites with close geographic locations usually record near air temperatures [ref]4 , and spatially near brain regions behave rather similar in a specific brain activity   . Therefore, exploiting GSP tools in such areas can severely improve the processing performance and also pave the way for expert interpretation in a more comprehensive scheme. However, in many real-world applications, these meaningful graphs are not available beforehand, or estimating their connection in a pair-wise manner leads to erroneous inferences and sensitivity to possible noise [ref]4. In this way, recently, some data-driven Graph Learning (GL) approaches have been proposed to address these issues. For a comprehensive review of GL approaches, please refer to  0 and the references therein. Different GL frameworks learn the underlying graphs based on prior specific assumptions about the behavior of the graph signals on their graphs. One of the main GSP-based GL categories relies on the smoothness of the graph signals and, due to the amenable computational aspects, has facilitated the GL from smooth graph signals [ref]4 1. Another popular category, which makes it possible to have desired graph frequency characteristics, learns the underlying graphs from prior (predefined or estimated from observations) spectral templates from diffused (filtered) graph signals 2. Despite the insightful and applicable advantages of the different GL categories, in many prevalent real-world applications, e.g., brain signal processing or multi-view object images, the observation at hand has meaningful couplings across different domains leading to a severe increase in the dimensionality of the (vectorized) graph signals 3. Learning underlying factor graphs from multi-domain (high-dimensional) graph signals is still challenging due to the high computational cost and also interpreting issues 4 5. The multi-domain graph signals have meaningful coupling connectivities across different domains, which can be well modeled by the concept of product graphs 6 and their corresponding graph factors 7. For instance, in recorded monthly air and temperature measurement data, connectivities between the geographic temperature sensing sites and also monthly periods within a year are observed, which it is not straightforward to be inferred from only one high-dimensional learned graph 7 5. In 4, the problem of inferring Cartesian product Precision matrices was addressed by proposing the Bigraphical Lasso (BiGLasso); however, interpreting the Precision matrix, instead of the underlying graph itself, has major drawbacks, e.g., irrelevant sparsity pattern between a Precision matrix and its relevant Laplacian graph 8. Besides, recently, learning product graphs (PGL) from smooth multi-dimensional graph signals, which have similar signal values in strongly connected vertices, has been addressed in some works 7 5 9. On the other hand, graph frequency-aware GL approaches are also another desired categories, which investigate the frequency characteristics of applicable graph processes, e.g., Graph Moving Average (GMA) 0, and their impacts on the underlying typologies 2. However, to the best of our knowledge, learning product graphs with desired (estimated from observations) spectral templates from stationary diffused (filtered) multi-domain graph signals has not been addressed. The stationarity of the observed graph signals serves a vital role in formulating the problem because, in such case, the eigenvectors of the estimated observation covariance matrix share with the Graph Shift Operator (GSO) of the interest, here the adjacency matrix 2 0. To express the proposed method more precisely, the contributions of the present paper are summarized as: We present an approach, named ProdSpecTemp, to efficiently learn the product graphs from stationary multi-domain diffused graph signals with desired graph frequency characteristics, i.e., spectral templates 2. In fact, our approach generalizes and extends the previous graph learning approach addressing inference from spectral templates, named SpecTemp 2, to (higher-order) product graphs, which, to the best of our knowledge, has not been addressed. We also present a more computationally appropriate approach rather than the base-line SpecTemp 2 via inexact Augmented Lagrange Multipliers (IALM) 1 2 3, named SpecTemp-IALM. Our method is then straightforwardly extended in the current paper to infer more than two factor graphs from higher-order tensor product graph signals, named HO-ProdSpecTemp, while the so far presented approaches have only addressed the recovery of only two factor graphs 4 7 5. Based on the computational analysis presented in Section III-C, our proposed approaches reduce the computational cost against naively directly learning the product graph and, therefore, enjoy applicability in real-world scenarios, e.g., big data processing 3. Due to the Kronecker structure of the spectral templates (eigenmatrices of the graph factors) in the resulted product graphs 3, the proposed approach can be used to infer any kind of graph product, e.g., Cartesian, Kronecker, or Strong, without knowing the type of the graph products, in contrast to the current approaches, which are restricted by a specific type (usually Cartesian) 4 5 or need to know the product type 9. Experimental results on both synthetic and real-world data show that the proposed (HO-)ProdSpecTemp approaches outperform the state-of-the-art ones for learning type-free product graphs from high-dimensional spectral templates. Precisely, their applicability of revealing brain sleep functional connectivity 4 and also Multi-view Object connections 5 illustrate the strength of the proposed approaches in learning meaningful real factor graphs. Notation: Vectors, matrices, and sets are denoted by boldface lowercase, boldface capital, and calligraphic capital letters, respectively. The identity matrix of size N𝑁N is stated as INsubscriptI𝑁\\textbf{I}_{N}. The notations (.)T(.)^{T}, ⟨.,.⟩\\langle.,.\\rangle, 𝔼{.}\\mathbb{E}\\{.\\}, ⊗tensor-product\\otimes, ⊙direct-product\\odot, (.)†(.)^{\\dagger}, ∥.∥p\\|.\\|_{p} and ∥.∥F\\|.\\|_{F} stand for transpose operator, inner product, mathematical expectation, Kronecker product, Khatri-Rao product, Moore-Penrose pseudo-inverse of a matrix, the p𝑝p-norm of a vector or vectorized form of a matrix, and Frobenius norm, respectively. The matrix d​i​a​g​(a)𝑑𝑖𝑎𝑔adiag(\\textbf{a}) is a diagonal matrix with the elements of the vector a on its principal diagonal. The (i,j)𝑖𝑗(i,j)th and i𝑖ith elements of a matrix M and a vector v are denoted as Mi​jsubscriptM𝑖𝑗\\textbf{M}_{ij} and visubscript𝑣𝑖v_{i}, respectively. The all-zero and all-one vectors of size N𝑁N are referred as 0Nsubscript0𝑁\\textbf{0}_{N} and 1Nsubscript1𝑁\\textbf{1}_{N}. The notations vec(.)vec(.) and vech(.)vech(.) denote the vectorization and half-vectorization operators [ref]4, respectively, while vechn(.)vechn(.) performs non-diagonal half-vectorization. Besides, m​a​t​(a,[M,N])𝑚𝑎𝑡a𝑀𝑁mat(\\textbf{a},[M,N]) returns a matrix of size M×N𝑀𝑁M\\times N containing elements of the vector a of size M​N𝑀𝑁MN in column-major order. For two sample square matrices A∈ℝN×NAsuperscriptℝ𝑁𝑁\\textbf{A}\\in\\mathbb{R}^{N\\times N} and B∈ℝM×MBsuperscriptℝ𝑀𝑀\\textbf{B}\\in\\mathbb{R}^{M\\times M}, Cartesian (×\\times), Kronecker (⊗tensor-product\\otimes), and Strong (⊠⊠\\boxtimes) products are denoted as (A⊗IM)+(IN⊗B)tensor-productAsubscriptI𝑀tensor-productsubscriptI𝑁B(\\textbf{A}\\otimes\\textbf{I}_{M})+(\\textbf{I}_{N}\\otimes\\textbf{B}), (A⊗B)tensor-productAB(\\textbf{A}\\otimes\\textbf{B}) and (A⊗IM)+(IN⊗B)+(A⊗B)tensor-productAsubscriptI𝑀tensor-productsubscriptI𝑁Btensor-productAB(\\textbf{A}\\otimes\\textbf{I}_{M})+(\\textbf{I}_{N}\\otimes\\textbf{B})+(\\textbf{A}\\otimes\\textbf{B}), respectively. Finally, the mode-i𝑖i unfolding (matricization) form 6 of the tensor X¯¯X\\underline{\\textbf{X}} is denoted as X¯(i)subscript¯X𝑖\\underline{\\textbf{X}}_{(i)}. In this way, xtsubscriptx𝑡\\textbf{x}_{t}, XtsubscriptX𝑡\\textbf{X}_{t}, X¯tsubscript¯X𝑡\\underline{\\textbf{X}}_{t} and X¯(i)tsubscript¯Xsubscript𝑖𝑡\\underline{\\textbf{X}}_{(i)_{t}} show the t𝑡tth graph signal, matrix, tensor, and mode-i𝑖i unfolding of the tensor X¯tsubscript¯X𝑡\\underline{\\textbf{X}}_{t}, respectively. For a matrix X, XℐsubscriptXℐ\\textbf{X}_{\\mathcal{I}} is obtained by selecting the rows of X indexed by the set ℐℐ\\mathcal{I}. Besides, ker​(X)kerX\\text{ker}(\\textbf{X}) and Im​(X)ImX\\text{Im}(\\textbf{X}) express the null and column spaces of matrix X. The matrix norm of X induced by the vector norm ℓpsubscriptℓ𝑝\\ell_{p} is denoted as ‖X‖M​(p)subscriptnormX𝑀𝑝\\|\\textbf{X}\\|_{M(p)}. The cardinality of set ℐℐ\\mathcal{I} is stated by |ℐ|ℐ|\\mathcal{I}|.\n\nReference markers found: [4]\n\nContext windows for each [ref]:\n[ref]4: classic processing tools to the emerging field of Graph Signal Processing (GSP)   . For instance, temperature measurement sites with close geographic locations usually record near air temperatures [ref]4 , and spatially near brain regions behave rather similar in a specific brain activity   . Therefore, exploiting GSP tools in such areas can severely improve the processing performance and also\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 4,\n            \"titles\": [\n                \"Learning Sparse Graphs Under Smoothness Prior\",\n                \"Graph signal processing: Overview, challenges, and applications\",\n                \"Introduction to graph signal processing\",\n                \"Vertex-frequency analysis of graph signals\",\n                \"Learning Laplacian Matrix in Smooth Graph Signal Representations\",\n                \"A Graph Signal Processing Perspective on Functional Brain Imaging\",\n                \"Brain signal analytics from graph signal processing perspective\",\n                \"A graph signal processing framework for the classification of temporal brain data\",\n                \"Learning graphs from data: A signal representation perspective\",\n                \"Connecting the dots: Identifying network structure via graph signal processing\",\n                \"How to learn a graph from smooth signals\",\n                \"​Network​ Topology​ Inference​ from​ Spectral​ Templates\",\n                \"Big data analysis with signal processing on graphs: Representation and processing of massive data sets with irregular structure\",\n                \"The bigraphical lasso\",\n                \"Product graph learning from multi-domain data with sparsity and rank constraints\",\n                \"Handbook of product graphs, volume 2\",\n                \"Learning product graphs from multidomain signals\",\n                \"Signal Processing on Graphs: Causal Modeling of Unstructured Data\",\n                \"Learning Product Graphs Underlying Smooth Graph Signals\",\n                \"Stationary Graph Processes and Spectral Estimation\",\n                \"Nonlinear programming. athena scientific belmont.\",\n                \"The augmented lagrange multiplier method for exact recovery of corrupted low-rank matrices (2010)\",\n                \"Distributed optimization and statistical learning via the alternating direction method of multipliers\",\n                \"Montreal archive of sleep studies: an open-access resource for instrument benchmarking and exploratory research\",\n                \"Columbia object image library (coil-20).\",\n                \"Tensor Decomposition for Signal Processing and Machine Learning\",\n                \"Matrix algebra, volume 1\",\n                \"Proximal splitting methods in signal processing\",\n                \"Unlocbox: A matlab convex optimization toolbox for proximal-splitting methods\",\n                \"Atomic decomposition by basis pursuit\",\n                \"One condition for solution uniqueness and robustness of both l1-synthesis and l1-analysis minimizations\",\n                \"The matrix cookbook\",\n                \"Matrix analysis for scientists and engineers, volume 91\",\n                \"GSPBOX: A toolbox for signal processing on graphs\",\n                \"The aasm manual for the scoring of sleep and associated events: Rules\",\n                \"Deepsleepnet: A model for automatic sleep stage scoring based on raw single-channel eeg\",\n                \"Robust sleep stage classification with single-channel eeg signals using multimodal decomposition and hmm-based refinement\",\n                \"A deep learning architecture for temporal sleep stage classification using multivariate and multimodal time series\",\n                \"Weighted graph comparison techniques for brain connectivity analysis\",\n                \"Exploring brain functional connectivity in rest and sleep states: a fnirs study\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]4 based on the context and research area of Learning Product Graphs from Spectral Templates. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}