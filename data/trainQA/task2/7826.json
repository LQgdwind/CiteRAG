{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: A framework for extraction and transformation of documents\n\nPaper Abstract: \n\nPaper Section Text:\nA valuable property of ET programs is that\nthey receive\ndocuments as input and produce documents as outputs.\nIn this line, it is natural to think on reusing the output of one ET program (E1,T1)subscript𝐸1subscript𝑇1(E_{1},T_{1}) to feed a second ET program (E2,T2)subscript𝐸2subscript𝑇2(E_{2},T_{2}), namely, to compose them. Formally, we define the composition (E1⋅T1)∘(E2⋅T2)⋅subscript𝐸1subscript𝑇1⋅subscript𝐸2subscript𝑇2(E_{1}\\cdot T_{1})\\circ(E_{2}\\cdot T_{2}) as a function \\lsem​(E1⋅T1)∘(E2⋅T2)​\\rsem\\lsem⋅subscript𝐸1subscript𝑇1⋅subscript𝐸2subscript𝑇2\\rsem{\\lsem{}{(E_{1}\\cdot T_{1})\\circ(E_{2}\\cdot T_{2})}\\rsem} that maps documents to a bag of documents such that for every document 𝐃𝐃\\mathbf{D}: Note that we use here the union of bags, which is defined in the natural way (a formal definition is given in the Appendix, Section A). For extraction and transformation of information, it is useful to evaluate the composition efficiently. One naive approach\nis to evaluate \\lsem​E1⋅T1​\\rsem​(𝐃)⋅\\lsemsubscript𝐸1subscript𝑇1\\rsem𝐃{\\lsem{}{E_{1}\\cdot T_{1}}\\rsem}(\\mathbf{D})\n(e.g., by using the evaluation algorithm of Section 5 in case that (E1,T1)subscript𝐸1subscript𝑇1(E_{1},T_{1}) is a linear ET program),\nand for every output 𝐃′superscript𝐃′\\mathbf{D}^{\\prime} in \\lsem​E1⋅T1​\\rsem​(𝐃)⋅\\lsemsubscript𝐸1subscript𝑇1\\rsem𝐃{\\lsem{}{E_{1}\\cdot T_{1}}\\rsem}(\\mathbf{D}) compute \\lsem​E2⋅T2​\\rsem​(𝐃′)⋅\\lsemsubscript𝐸2subscript𝑇2\\rsemsuperscript𝐃′{\\lsem{}{E_{2}\\cdot T_{2}}\\rsem}(\\mathbf{D}^{\\prime}), gathering all the outputs together.\nOf course, this could be time consuming, since |\\lsem​E1⋅T1​\\rsem​(𝐃)|⋅\\lsemsubscript𝐸1subscript𝑇1\\rsem𝐃|{\\lsem{}{E_{1}\\cdot T_{1}}\\rsem}(\\mathbf{D})| could be exponential in |𝐃|𝐃|\\mathbf{D}| in the worst case. Towards solving the previous algorithmic problem, in the next result we show that every composition of NSSTs can be defined by an NSST. Formally, let us denote the input and output alphabet of some NSST 𝒯𝒯\\mathcal{T} by Σ​(𝒯)Σ𝒯\\Sigma(\\mathcal{T}) and Ω​(𝒯)Ω𝒯\\Omega(\\mathcal{T}), respectively. Given two NSSTs 𝒯1subscript𝒯1\\mathcal{T}_{1} and 𝒯2subscript𝒯2\\mathcal{T}_{2} such that Ω​(𝒯1)⊆Σ​(𝒯2)Ωsubscript𝒯1Σsubscript𝒯2\\Omega(\\mathcal{T}_{1})\\subseteq\\Sigma(\\mathcal{T}_{2}), we define the composition 𝒯1∘𝒯2subscript𝒯1subscript𝒯2\\mathcal{T}_{1}\\circ\\mathcal{T}_{2} as the function from documents to bags of documents: \\lsem​𝒯1∘𝒯2​\\rsem​(𝐃)=⋃𝐃′∈\\lsem​𝒯1​\\rsem​(𝐃)\\lsem​𝒯2​\\rsem​(𝐃′)\\lsemsubscript𝒯1subscript𝒯2\\rsem𝐃subscriptsuperscript𝐃′\\lsemsubscript𝒯1\\rsem𝐃\\lsemsubscript𝒯2\\rsemsuperscript𝐃′{\\lsem{}{\\mathcal{T}_{1}\\circ\\mathcal{T}_{2}}\\rsem}(\\mathbf{D})=\\ \\bigcup_{\\mathbf{D}^{\\prime}\\in{\\lsem{}{\\mathcal{T}_{1}}\\rsem}(\\mathbf{D})}{\\lsem{}{\\mathcal{T}_{2}}\\rsem}(\\mathbf{D}^{\\prime}).\nWe obtain the following result. For every pair of NSSTs 𝒯1subscript𝒯1\\mathcal{T}_{1} and 𝒯2subscript𝒯2\\mathcal{T}_{2} such that Ω​(𝒯1)⊆Σ​(𝒯2)Ωsubscript𝒯1Σsubscript𝒯2\\Omega(\\mathcal{T}_{1})\\subseteq\\Sigma(\\mathcal{T}_{2}), there exists an NSST 𝒯𝒯\\mathcal{T} such that \\lsem​𝒯​\\rsem=\\lsem​𝒯1∘𝒯2​\\rsem\\lsem𝒯\\rsem\\lsemsubscript𝒯1subscript𝒯2\\rsem{\\lsem{}{\\mathcal{T}}\\rsem}={\\lsem{}{\\mathcal{T}_{1}\\circ\\mathcal{T}_{2}}\\rsem}. The construction of 𝒯𝒯\\mathcal{T} is effective, and |𝒯|=⁡(2𝗉𝗈𝗅𝗒​(|𝒯𝟣|,|𝒯𝟤|))𝒯superscript2𝗉𝗈𝗅𝗒subscript𝒯1subscript𝒯2|\\mathcal{T}|=\\textsf{}(2^{\\mathsf{poly(|\\mathcal{T}_{1}|,|\\mathcal{T}_{2}|)}}). The statement of Theorem 6.1 for set semantics rather than bag semantics was obtained\nby [ref]4 .\nThe novelty of\nTheorem 6.1 is that we extend\nthe result to bag semantics; namely, we need to maintain the multiplicities of the final outputs correctly. The proof revisits (and simplifies) the construction in [ref]4 : we simulate 𝒯1subscript𝒯1\\mathcal{T}_{1} over 𝐃𝐃\\mathbf{D} while 𝒯2subscript𝒯2\\mathcal{T}_{2} runs over the\nregisters’\ncontent of 𝒯1subscript𝒯1\\mathcal{T}_{1}, compactly representing subruns of 𝒯2subscript𝒯2\\mathcal{T}_{2} by using\npairs\nof states and assignment summaries . The extension requires two changes for working under bag semantics. First, similar to the evaluation of NSSTs, garbage on 𝒯1subscript𝒯1\\mathcal{T}_{1}-registers could generate additional runs for 𝒯2subscript𝒯2\\mathcal{T}_{2}, producing outputs with wrong multiplicities.\nTherefore, our\nfirst step is to remove this garbage\nby\nconstructing equivalent garbage-free NSSTs by using Propositon 5.2.\nSecond, the construction in [ref]4 guesses subruns of 𝒯2subscript𝒯2\\mathcal{T}_{2} for each register content and each starting state. In the end, we will use one of these guesses, and then unused subruns could modify the output multiplicity. Therefore, we simplify the construction in [ref]4 by guessing a single subrun for each register content, using the non-determinism to discard wrong guesses. Interestingly, this simplification overcomes the error pointed out by Joost Engelfriet in the construction of [ref]4, which was solved recently in . Our construction does not need the machinery of ; thus, an adaptation of our construction for NSSTs (with set semantics) can be considered as a simplified version of the proof in [ref]4 .\nWe conclude by mentioning that as an alternative proof of Theorem 6.1 we could move to MSO transductions , extend the logic with a bag semantics, and then do the composition at a logical level; however, this strategy would lead to a non-elementary blow-up. By combining Theorem 4.1, 6.1 and 4.2, we get the following corollary regarding the expressiveness of linear ET programs and their composition. For every pair of linear ET programs (E1,T1)subscript𝐸1subscript𝑇1(E_{1},T_{1}) and (E2,T2)subscript𝐸2subscript𝑇2(E_{2},T_{2}), there exists\na linear\nET program (E,T)𝐸𝑇(E,T) such that \\lsem​E⋅T​\\rsem=\\lsem​(E1⋅T1)∘(E2⋅T2)​\\rsem⋅\\lsem𝐸𝑇\\rsem\\lsem⋅subscript𝐸1subscript𝑇1⋅subscript𝐸2subscript𝑇2\\rsem{\\lsem{}{E\\cdot T}\\rsem}\\ \\ =\\ \\ {\\lsem{}{(E_{1}\\cdot T_{1})\\circ(E_{2}\\cdot T_{2})}\\rsem}. We conclude\nthis section by\nthe following corollary regarding the evaluation of\nthe\ncomposition of\nlinear\nET programs, obtained by combining Theorem 6.1 and 5.1. Given linear ET programs (E1,T1),…,(Ek,Tk)subscript𝐸1subscript𝑇1…subscript𝐸𝑘subscript𝑇𝑘(E_{1},T_{1}),\\ldots,(E_{k},T_{k}) we can evaluate the composition: with linear time preprocessing and output-linear delay in data complexity.\n\nReference markers found: [4]\n\nContext windows for each [ref]:\n[ref]4: The statement of Theorem 6.1 for set semantics rather than bag semantics was obtained\nby [ref]4 .\nThe novelty of\nTheorem 6.1 is that we extend\nthe result to bag semantics; namely, we need to maintain the multiplicities of the final outputs correctly. The proof revisits (and simplifies)\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 4,\n            \"titles\": [\n                \"Composing Copyless Streaming String Transducers\",\n                \"The design and analysis of computer algorithms\",\n                \"Regular Transformations (Dagstuhl Seminar 23202)\",\n                \"Expressiveness of streaming string transducers\",\n                \"Nondeterministic streaming string transducers\",\n                \"Enumeration on trees with tractable combined complexity and efficient updates\",\n                \"Constant-delay enumeration for nondeterministic document spanners\",\n                \"Transductions and context-free languages\",\n                \"ℤ-polyregular functions\",\n                \"Transducers of polynomial growth\",\n                \"Ranked enumeration of MSO logic on words\",\n                \"The complexity of aggregates over extractions by regular expressions\",\n                \"Split-Correctness in Information Extraction\",\n                \"Weight annotation in information extraction\",\n                \"Making data structures persistent\",\n                \"MSO definable string transductions and two-way finite-state transducers\",\n                \"Two-way finite state transducers with nested pebbles\",\n                \"Spanners: a formal framework for information extraction\",\n                \"Document spanners: A formal approach to information extraction\",\n                \"Efficient enumeration algorithms for regular document spanners\",\n                \"Document spanners: From expressive power to decision problems\",\n                \"A logic for document spanners\",\n                \"Joining Extractions of Regular Expressions\",\n                \"Dynamic complexity of document spanners\",\n                \"Splitting Spanner Atoms: A Tool for Acyclic Core Spanners\",\n                \"FASTUS: A cascaded finite-state transducer for extracting information from natural-language text\",\n                \"The replace operator\",\n                \"Document Spanners for Extracting Incomplete Information: Expressiveness and Complexity\",\n                \"Streaming enumeration on nested documents\",\n                \"Constant-delay enumeration for SLP-compressed documents\",\n                \"The many facets of string transducers (invited talk)\",\n                \"Grammars for document spanners\",\n                \"Complexity Bounds for Relational Algebra over Document Spanners\",\n                \"Recursive Programs for Document Spanners\",\n                \"Rematch: a novel regex engine for finding all matches\",\n                \"A purely regular approach to non-regular core spanners\",\n                \"Spanner evaluation over slp-compressed documents\",\n                \"Document spanners - A brief overview of concepts, results, and recent developments\",\n                \"Query evaluation over slp-represented document databases with complex document editing\",\n                \"Enumerating with constant delay the answers to a query\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]4 based on the context and research area of A framework for extraction and transformation of documents. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}