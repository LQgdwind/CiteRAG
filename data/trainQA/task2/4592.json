{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Design Automation for Fast, Lightweight, and Effective Deep Learning Models: A Survey\n\nPaper Abstract: \n\nPaper Section Text:\nOperators, such as convolutional layers or fully connected layers, are basic building components for a deep learning model. A simple way to build a deep learning model is to directly stack several operators, such as VGG Net . Other work connects several neural network layers to construct a motif (e.g., a residual block)\nand builds a model by repeating and arbitrarily connecting these motifs   . In this paper, we use the term ‚Äùoperator‚Äù to also represent a motif, which is usually used as a whole and regarded as a basic component of an end-to-end model. As early-developed and widely-demonstrated neural architectures, the convolutional layer and its variants are the dominant operators of many deep learning models, especially those in the computer vision area. A standard convolution can be denoted as: where W is the convolution kernel weight, ùëøùëø\\bm{X} is the input feature maps to a convolution layer, (i,j)ùëñùëó(i,j) is the coordinate of an output feature map, and (m,n,k)ùëöùëõùëò(m,n,k) is the coordinate of the convolutional kernel.\nNSGA-Net  utilizes standard convolutions as the operator and devotes to automatically determining their connections in a block-based manner. As it only seeks to optimize the connection of operators, limited efficiency is gained.\nScheidegger et al.  and Lu et al.  also consider standard convolutions but, instead of optimizing the connections, they allow to search the convolution hyperparameters such as the filter size, the stride and the number of filters. In addition to the standard convolutions, extensive manually-designed variants have been demonstrated both efficient and effective. Therefore, it is intuitive to employ these architectures to construct an efficient search space.\nThe depthwise separable convolution (DSConv), which can significantly reduce the number of parameters and computation and works as the primary module in MobileNet , is such a widely used efficient operator. As shown in Fig 2a, a DSConv block is made up of two components: a depthwise convolution and a pointwise convolution. The depthwise convolutions (DWConv) applies a single filter per each input feature map (input depth) for spatial filtering: The pointwise convolution (PWConv), a simple 1√ó1111\\times 1 convolution, is used to create a linear combination of the output of the depthwise convolutions for feature fusion: Thus, by combining DWConv and PWConv, the DSConv is denoted as: LEMONADE [ref]64 adopts both DSConvs and standard convolutions as the basic operators of its search space and supports increasing the number of filters and pruning filters to search efficient neural architectures.\nRENA  also includes DSConvs but allows to automatically decide not only their hyperparameters but also whether they should be used in each layer.\nIn addition to the standard DSConv, ProxylessNAS  includes a variant, namely dilated depthwise separable convolution, in its search space as well. The search engine can choose between the standard one and the variant. In MobileNetV2, a more advanced mobile convolution block, mobile inverted bottleneck convolutions (MBConv), is proposed  and soon becomes a popular operator in favour of an efficient search space. Fig. 2b illustrates the structure of MBConv. It is made up of three convolutions and one residual connection.\nFirst, a PWConv is applied to expand the input feature map to a higher-dimensional space so that non-linear activations (ReLU6) can better extract information.\nThen, a depthwise convolution is performed with 3√ó3333\\times 3 kernels and ReLU6 activations to achieve spatial filtering of the higher-dimensional feature maps. Furthermore, the spatially-filtered feature maps are projected back to a low-dimensional space with another pointwise convolution. Since the low-dimensional projection results in loss of information, linear activation is used after pointwise convolution. Finally, an optional residual connection (depending on whether the stride of the depthwise layer is 1) is added to combine the original input and the output of the low-dimensional projection. Note that the last two convolutions (depthwise convolution and pointwise convolution) are essentially a DSConv with dimension reduction. There are multiple works on purely using MBConv to construct an efficient search space but with different backbones or search strategies [ref]66  . Xiong et al.  argue that DSConv is inexpensive based on FLOPs or the number of parameters, which are not necessarily correlated with the inference efficiency, so they propose a fused MBConv layer that fuses together the first pointwise convolution and the subsequent depthwise convolution into a single standard convolution. They achieve higher mAP and lower latency on EdgeTPU and DSP than the pure MBConv search space. Li et al.  provide an in-depth comparison between fused MBConv and MBConv and summarize that fused MBConv has higher operational intensity but higher FLOPs than MBConv depending on the shape and size of filters and activations. Therefore, they add both fused MBConv and MBConv into the search space to let the search strategy determine automatically. In a more popular manner, MnasNet  upgrades MBConv with a squeeze and excitation (SE) module after the DWConv for attentions on feature maps (as shown in Fig. 2c). Specifically, the S (squeeze) procedure first converts each individual feature map into a scalar descriptor using global average pooling so the input feature maps are converted into a vector ùíõ‚àà‚Ñùnùíõsuperscript‚Ñùùëõ\\bm{z}\\in\\mathbb{R}^{n} with its kùëòk-th element calculated by: where ùíô(i,j)subscriptùíôùëñùëó\\bm{x}_{(i,j)} is the (i,j)ùëñùëó(i,j)-th element of the kùëòk-th input feature map, which is of size H√óWùêªùëäH\\times W.\nThe E (excitation) procedure converts the S procedure‚Äôs output ùíõùíõ\\bm{z} into a vector of activations ùíîùíî\\bm{s} using the gating mechanism of two fully connected layers: where œÉ‚Äã(‚ãÖ)ùúé‚ãÖ\\sigma(\\cdot) is the sigmoid activation function. The final output of the SE module is ùëø~bold-~ùëø\\bm{\\tilde{X}} with its kùëòk-th feature map denoted as: MobileNetV3 , the latest version of the MobileNet series, also adopts the MBConv plus SE operator and further enhances it by using the hard-swish (HS)  nonlinearities instead of ReLU and replacing the sigmoid function in SE with hard sigmoid . The authors also point out that HS in deeper layers is more beneficial. This choice is based on the fact that the sigmoid function is expensive to deploy on mobile devices. Thereafter, many more works embrace the MBConv plus SE operator in their efficient search space     . However, SE is not always paired with MBConv due to either not being supported by hardware  or unfavourable performance . Some other works maintain diverse convolution operators (i.e., standard convolution, DSConv, MBConv, and MBConv+SE) in the search space and let the search strategy choose automatically  .\nThe commonly used searchable parameters of the convolution operator family are kernel sizes, the number of output channels, expansion ratios (MBConv, MBConv+SE), and SE ratio (MBConv+SE). Although different works do not have exactly the same searching ranges, they are basically similar. For example, Stamoulis et al. [ref]66 consider kernel sizes of {3,5}35\\{3,5\\} and expansion ratios of {3,6}36\\{3,6\\}; Fang et al.  consider kernel sizes of {3,5,7}357\\{3,5,7\\} and expansion ratios of {3,6}36\\{3,6\\}; Cai et al.  consider kernel sizes of {3,5,7}357\\{3,5,7\\} and expansion ratios of {3,4,6}346\\{3,4,6\\}. Besides the above convolution operators of the MobileNet family, the group convolution (GConv) and its variants    are also considered to be significant operators for constructing an efficient search space    [ref]87 . Fig. 2d illustrates the structure of GConv, where we take into account the feature map dimension of convolutional layers. The feature maps and filters are divided into Gùê∫G (G=3ùê∫3G=3 in Fig. 2d) groups respectively: ùëø={ùëø1,ùëø2,‚Ä¶,ùëøG}ùëøsubscriptùëø1subscriptùëø2‚Ä¶subscriptùëøùê∫\\bm{X}=\\{\\bm{X}_{1},\\bm{X}_{2},...,\\bm{X}_{G}\\} and W={W1‚ÄãW2‚Äã‚Ä¶,WG}WsubscriptW1subscriptW2‚Ä¶subscriptWùê∫\\textbf{W}=\\{\\textbf{W}_{1}\\,\\textbf{W}_{2}\\,...,\\textbf{W}_{G}\\}.\nIn GConv, the convolution is only performed within each group so the output ùëø~bold-~ùëø\\bm{\\tilde{X}} is denoted as: where ‚äótensor-product\\otimes is the convolution operation between two sets.\nIn this way, GConv can not only reduce parameters and computation but also provide a simple way to model parallelism. Therefore, AlexNet  can be trained on multiple GPUs with only 3GB RAM each. Note that depthwise convolution is a special case of GConv with the number of groups being the same as the number of channels. A channel shuffle usually comes after GConv to enable inter-group communications . Xu et al.  include GConv in their search space with the number of groups as searchable from 1 (standard convolution) to N (the number of input channels).\nFBNet  and RCAS [ref]87 encompasses a new convolution operator in their search space by replacing the first and last pointwise convolution in MBConv with 1√ó1111\\times 1 GConv. This design expands MBConv but also allows the search strategy to automatically determine whether this expansion is needed. However, their allowed maximum group amount is quite small (2 for FBNet and 4 for RCAS).\nDPP-Net  and MONAS  also contain a variant of GConv, Learned Group Convolution (LGConv), which is the key operator of CondenseNet , in their search space. The LGConv prunes away unimportant filters with low magnitude weights further reducing the computational complexity on top of the GConv . Some other studies use customized operators or non-convolution operators in their efficient search spaces. FasterSeg 0 proposes a zoomed convolution, where the input is sequentially processed with bilinear downsampling, standard convolution, and bilinear upsampling. The authors demonstrate that the zoomed convolution has 40% latency trim compared to a standard convolution on a GTX 1080i GPU. Different from previous works, which focus on 2D processing, Tang et al. 1 target 3D scenes. They propose sparse point-voxel convolutions and allow to search for channel numbers and network depth. However, as the computation of 3D CNN increases more significantly with increasing kernel sizes than 2D CNN, the authors keep the kernel size as a constant of 3. HR-NAS 2 also involves Transformer 3 4 in addition to convolutions due to its recent success in computer vision 5 6. The authors design a lightweight Transformer that requires less computation when facing high-resolution images. Convolutional channels and Transformer queries are progressively reduced during the search. In order to facilitate high parallelism of convolution operators on TPUs and GPUs, Li et al.  add space-to-depth/batch into the search space to increase the depth and batch dimensions. The results show that even without the lowest FLOPs, their searched EfficientNet-X models are the fastest among compared model families on TPUs and GPUs. The main reason is that EfficientNet-X models strike a balance between FLOPs (lower is good for speed) and operational intensity (higher is good for speed). In addition to parametric operators, non-parametric operators are critical components of an efficient search space as well. Pooling is usually coupled with convolutions in hand-crafted CNN model family, and so does in convolution-based search space [ref]87 . It can help to reduce redundant information (favourable for accuracy) and computation (favourable for speed) without requiring additional parameters. Skip is another widely adopted operator that impacts the topology of achieved models. It can have two concepts: 1) drop skip directly feeding input to output without any actual computations, i.e., the entire layer is dropped and thus the model depth is reduced [ref]66  ; 2) residual skip providing an identity residual connection in parallel with another computation operator [ref]64 . The residual connection can be achieved by either concatenation or by addition [ref]64. Activation functions are another searchable non-parametric operators that impact both accuracy and speed [ref]87 . The computation cost of activation functions decreases when going deeper since the resolution of feature maps decreases . In some research, the non-linearity is associated with convolution operators as a whole, and the operator together with its activation function is determined automatically .\n\nReference markers found: [64]\n\nContext windows for each [ref]:\n[ref]64: 1 convolution, is used to create a linear combination of the output of the depthwise convolutions for feature fusion: Thus, by combining DWConv and PWConv, the DSConv is denoted as: LEMONADE [ref]64 adopts both DSConvs and standard convolutions as the basic operators of its search space and supports increasing the number of filters and pruning filters to search efficient neural\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 64,\n            \"titles\": [\n                \"Resource-Efficient Neural Architect\",\n                \"Deep Learning based Recommender System: A Survey and New Perspectives\",\n                \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n                \"Learning attentional temporal cues of brainwaves with spatial embedding for motion intent detection\",\n                \"Data security and privacy protection issues in cloud computing\",\n                \"Energy and Policy Considerations for Deep Learning in NLP\",\n                \"Green ai\",\n                \"Predicting parameters in deep learning\",\n                \"Optimal brain damage\",\n                \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n                \"MobileNetV2: Inverted Residuals and Linear Bottlenecks\",\n                \"ShuffleNet: An Extremely Efficient Convolutional Neural Network for Mobile Devices\",\n                \"ShuffleNet V2: Practical Guidelines for Efficient CNN Architecture Design\",\n                \"Channel Pruning for Accelerating Very Deep Neural Networks\",\n                \"ThiNet: A Filter Level Pruning Method for Deep Neural Network Compression\",\n                \"Training deep neural networks with low precision multiplications\",\n                \"A logical calculus of the ideas immanent in nervous activity\",\n                \"Hippocampal spine head sizes are highly precise\",\n                \"Think Tank: Forty Neuroscientists Explore the Biological Roots of Human Experience\",\n                \"Fixed Point Quantization of Deep Convolutional Networks\",\n                \"Deep Learning with Limited Numerical Precision\",\n                \"Distilling the Knowledge in a Neural Network\",\n                \"Learning Compact Recurrent Neural Networks with Block-Term Tensor Decomposition\",\n                \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n                \"Autoprune: Automatic network pruning by regularizing auxiliary parameters\",\n                \"HAQ: Hardware-Aware Automated Quantization with Mixed Precision\",\n                \"AMC: AutoML for Model Compression and Acceleration on Mobile Devices\",\n                \"Beyond floating-point ops: CNN performance prediction with critical datapath length\",\n                \"FastDeepIoT: Towards Understanding and Optimizing Neural Network Execution Time on Mobile and Embedded Devices\",\n                \"CondenseNet V2: Sparse Feature Reactivation for Deep Networks\",\n                \"Survey of precision-scalable multiply-accumulate units for neural-network processing\",\n                \"Discovering multi-hardware mobile models via architecture search\",\n                \"Benchmark Analysis of Representative Deep Neural Network Architectures\",\n                \"Research and design of activation function hardware implementation methods\",\n                \"Improving Strong-Scaling of CNN Training by Exploiting Finer-Grained Parallelism\",\n                \"RT3D: Achieving Real-Time Execution of 3D Convolutional Neural Networks on Mobile Devices\",\n                \"cuDNN: Efficient Primitives for Deep Learning\",\n                \"Neural networks on microcontrollers: saving memory at inference via operator reordering\",\n                \"Machine learning on arm cortex-m microcontrollers\",\n                \"Memory requirements for convolutional neural network hardware accelerators\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]64 based on the context and research area of Design Automation for Fast, Lightweight, and Effective Deep Learning Models: A Survey. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}