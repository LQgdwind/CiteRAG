{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Taming Discrete Integration via the Boon of Dimensionality\n\nPaper Abstract: \n\nPaper Section Text:\nWe implemented the dyadic-only reduction of  in C++ and refer to it as 𝖣𝗒𝖺𝖽𝗂𝖼𝖣𝗒𝖺𝖽𝗂𝖼\\mathsf{Dyadic}. Given a weighted discrete integration query (F,W)𝐹𝑊(F,W) and a number of bits k𝑘k, 𝖣𝗒𝖺𝖽𝗂𝖼𝖣𝗒𝖺𝖽𝗂𝖼\\mathsf{Dyadic} adjusts the weight of each literal to the closest dyadic weight that can be expressed in k𝑘k bits or less. This produces a new weighted discrete integration query (F,W′)𝐹superscript𝑊′(F,W^{\\prime}) where all weights are dyadic. The result W′​(F)superscript𝑊′𝐹W^{\\prime}(F) of this new query can be seen as a (γW,k,δ=0)subscript𝛾𝑊𝑘𝛿0(\\gamma_{W,k},\\delta=0) estimate to W​(F)𝑊𝐹W(F), where γW,k∈ subscript𝛾𝑊𝑘01\\gamma_{W,k}\\in  is an extra error term that can be computed explicitly from W𝑊W and k𝑘k. 𝖣𝗒𝖺𝖽𝗂𝖼𝖣𝗒𝖺𝖽𝗂𝖼\\mathsf{Dyadic} then reduces (F,W′)𝐹superscript𝑊′(F,W^{\\prime}) to an unweighted projected-model-counting instance and invokes 𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢\\mathsf{ApproxMC}4. Overall, 𝖣𝗒𝖺𝖽𝗂𝖼𝖣𝗒𝖺𝖽𝗂𝖼\\mathsf{Dyadic} produces an (ϵ⋅γW,k+γW,k+ϵ,δ)⋅italic-ϵsubscript𝛾𝑊𝑘subscript𝛾𝑊𝑘italic-ϵ𝛿(\\epsilon\\cdot\\gamma_{W,k}+\\gamma_{W,k}+\\epsilon,\\delta) estimate to W​(F)𝑊𝐹W(F). This estimate is no better than the estimate produced by 𝖣𝖾𝖶𝖾𝗂𝗀𝗁𝗍𝖣𝖾𝖶𝖾𝗂𝗀𝗁𝗍\\mathsf{DeWeight} but often much worse. Although there are also a variety of guarantee-less techniques for discrete integration [ref]37   [ref]48  , we focus here on techniques that provide theoretical guarantees on the quality of results.\nAs noted above, the benchmarks we consider from neural network verification are both large (with on the order of 105superscript10510^{5} variables) and projected. This makes them challenging for many techniques. Many exact tools, including 𝖼𝟤𝖽𝖼𝟤𝖽\\mathsf{c2d} 3 and 𝖣𝟦𝖣𝟦\\mathsf{D4} , do not efficiently support projection and so our neural network verification benchmarks are observed to be beyond their capabilities. 333We also considered 𝖯𝗋𝗈𝗃𝖬𝖢𝖯𝗋𝗈𝗃𝖬𝖢\\mathsf{ProjMC}  but the Linux kernel on our systems is too old to run the published precompiled tool. We were unable to get either the code or a different precompiled version from the authors. The state-of-the-art technique is 𝖣𝖲𝗁𝖺𝗋𝗉𝖣𝖲𝗁𝖺𝗋𝗉\\mathsf{DSharp} , owing to its ability to perform projection with 𝖣𝟤𝖢𝖣𝟤𝖢\\mathsf{D2C} [ref]4. 𝖣𝖲𝗁𝖺𝗋𝗉𝖣𝖲𝗁𝖺𝗋𝗉\\mathsf{DSharp} can compile a projected discrete integration query into d-DNNF 4. This step is independent of the weights, and takes most of the total running time. A d-DNNF reasoner  can then answer the projected discrete integration query. This produces the exact answer to the query, not just an (ϵ,δ)italic-ϵ𝛿(\\epsilon,\\delta) estimate. We also consider 𝖦𝖠𝖭𝖠𝖪𝖦𝖠𝖭𝖠𝖪\\mathsf{GANAK} , which computes a (0,δ)0𝛿(0,\\delta) estimate (i.e., computes the exact answer to the query with probability 1−δ1𝛿1-\\delta). Finally, we implemented the WISH algorithm  using MaxHS 5  as a black box MaxSAT solver; this results in a (15,δ)15𝛿(15,\\delta) estimate to the discrete integration theory. We also considered evaluating these benchmarks with WeightMC , but found WeightMC unsuitable for these benchmarks for the following reason. WeightMC can only handle benchmarks with a small tilt, which is the ratio of the largest weight assignment to the smallest weight assignment. This is because WeightMC requires an upper bound r𝑟r on the tilt to be provided as input; the running time of WeightMC is then linear in r𝑟r (see Theorem 2 of ). In particular, the runtime is lower bounded by the minimum of tilt and 2nsuperscript2𝑛2^{n}, where n𝑛n is the size of sampling set. The bound on tilt, however, is extremely large for the benchmarks that we consider. For example, in Experiment 1 a benchmark with a sampling set of n𝑛n variables has tilt (a priori) upper bounded by (2/3)n(1/3)n=2nsuperscript23𝑛superscript13𝑛superscript2𝑛\\frac{(2/3)^{n}}{(1/3)^{n}}=2^{n}; the bound on tilt for our benchmarks is never smaller than 266superscript2662^{66}.\n\nReference markers found: [37]\n\nContext windows for each [ref]:\n[ref]37: estimate is no better than the estimate produced by 𝖣𝖾𝖶𝖾𝗂𝗀𝗁𝗍𝖣𝖾𝖶𝖾𝗂𝗀𝗁𝗍\\mathsf{DeWeight} but often much worse. Although there are also a variety of guarantee-less techniques for discrete integration [ref]37   [ref]48  , we focus here on techniques that provide theoretical guarantees on the quality of results.\nAs noted above, the benchmarks we consider from neural network verification are both\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 37,\n            \"titles\": [\n                \"Phase Transition Behavior of Cardinality and XOR Constraints\",\n                \"Stochastic integration via error-correcting codes\",\n                \"LDPC codes for discrete integration\",\n                \"UCI machine learning repository, 2007.\",\n                \"#​∃#\\\\#\\\\existsSAT: Projected model counting\",\n                \"Quantitative Verification of Neural Networks And Its Security Applications\",\n                \"Handbook of Satisfiability: Volume 185 Frontiers in Artificial Intelligence and Applications\",\n                \"The d-DNNF reasoner\",\n                \"Distribution-aware sampling and weighted model counting for SAT\",\n                \"From weighted to unweighted model counting\",\n                \"A scalable approximate model counter\",\n                \"Algorithmic improvements in approximate counting for probabilistic inference: From linear to logarithmic SAT calls\",\n                \"On probabilistic inference by weighted model counting\",\n                \"New advances in compiling CNF to decomposable negation normal form\",\n                \"A knowledge compilation map\",\n                \"Solving MaxSAT by decoupling optimization and satisfaction\",\n                \"Dual hashing-based algorithms for discrete integration\",\n                \"Towards Efficient Discrete Integration via Adaptive Quantile Queries\",\n                \"The hard problems are almost everywhere for random CNF-XOR formulas\",\n                \"Counting-based reliability estimation for power-transmission grids\",\n                \"Subtractive reductions and complete problems for counting complexity classes\",\n                \"Choosing a variable to clamp\",\n                \"Embed and project: Discrete sampling with universal hashing\",\n                \"Optimization with parity constraints: From binary codes to discrete integration\",\n                \"Taming the curse of dimensionality: Discrete integration by hashing and optimization\",\n                \"Model counting: A new strategy for obtaining good bounds\",\n                \"Speeding up assumption-based SAT\",\n                \"Probabilistic graphical models: principles and techniques\",\n                \"An improved decision-DNNF compiler\",\n                \"A recursive algorithm for projected model counting\",\n                \"Mnist handwritten digit database, 2010.\",\n                \"Bounding the partition function using Holder’s inequality\",\n                \"Dynamic importance sampling for anytime bounds of the partition function\",\n                \"Tree-structured approximations by expectation propagation\",\n                \"DSHARP: fast d-DNNF compilation with sharpSAT\",\n                \"Assessing heuristic machine learning explanations with model counting\",\n                \"In search for a SAT-friendly binarized neural network architecture\",\n                \"Reverend bayes on inference engines: A distributed hierarchical approach\",\n                \"Markov logic networks\",\n                \"Computing Farey series\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]37 based on the context and research area of Taming Discrete Integration via the Boon of Dimensionality. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}