{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On the Convergence Analysis of Asynchronous SGD for Solving Consistent Linear Systems\n\nPaper Abstract: Abstract In the realm of big data and machine learning, data-parallel, distributed stochastic algorithms have drawn significant attention in the present days. While the synchronous versions of these algorithms are well understood in terms of their convergence, the convergence analyses of their asynchronous counterparts are not widely studied. In this paper, we propose and analyze a distributed, asynchronous parallel SGD in light of solving an arbitrary consistent linear system by reformulating the system into a stochastic optimization problem as studied by Richtárik and Takác̃ in [35]. We compare the convergence rates of our asynchronous SGD algorithm with the synchronous parallel algorithm proposed by Richtárik and Takáč in [35] under different choices of the hyperparameters—the stepsize, the damping factor, the number of processors, and the delay factor. We show that our asynchronous parallel SGD algorithm also enjoys a global linear convergence rate, similar to the basic method and the synchronous parallel method in [35] for solving any arbitrary consistent linear system via stochastic reformulation. We also show that our asynchronous parallel SGD improves upon the basic method with a better convergence rate when the number of processors is larger than four. We further show that this asynchronous approach performs asymptotically better than its synchronous counterpart for certain linear systems. Moreover, for certain linear systems, we compute the minimum number of processors required for which our asynchronous parallel SGD is better, and find that this number can be as low as two for some ill-conditioned problems.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Analysis and implementation of an asynchronous optimization algorithm for the parameter server\",\n        \"Demystifying parallel and distributed deep learning: An in-depth concurrency analysis\",\n        \"Parallel and distributed computation: numerical methods\",\n        \"Parallel coordinate descent for l1-regularized loss minimization\",\n        \"Asynchronous stochastic convex optimization: the noise is in the noise and sgd don’t care\",\n        \"Chaotic relaxation\",\n        \"Understanding and optimizing asynchronous low-precision stochastic gradient descent\",\n        \"Taming the wild: A unified analysis of Hogwild-style algorithms\",\n        \"Optimal distributed online prediction using mini-batches\",\n        \"On the discrepancy between the theoretical analysis and practical implementations of compressed communication for distributed deep learning\",\n        \"Fast distributed coordinate descent for non-strongly convex losses\",\n        \"Accelerated, parallel, and proximal coordinate descent\",\n        \"A delayed proximal gradient method with linear convergence rate\",\n        \"On asynchronous iterations\",\n        \"Distributed asynchronous online learning for natural language processing\",\n        \"Randomized iterative methods for linear systems\",\n        \"Stochastic dual ascent for solving linear systems\",\n        \"Communication-efficient distributed dual coordinate ascent\",\n        \"Accelerating stochastic gradient descent using predictive variance reduction\",\n        \"ASAGA: Asynchronous Parallel SAGA\",\n        \"Distributed stochastic variance reduced gradient methods and a lower bound for communication complexity\",\n        \"Asynchronous parallel stochastic gradient for nonconvex optimization\",\n        \"Adding vs. averaging in distributed primal dual optimization\",\n        \"Perturbed iterate analysis for asynchronous stochastic optimization\",\n        \"Distributed block coordinate descent for minimizing partially separable functions\",\n        \"Matrix analysis and applied linear algebra, 2000\",\n        \"Efficient parallel coordinate descent algorithm for convex optimization problems with separable constraints: Application to distributed MPC\",\n        \"SGD and Hogwild! convergence without the bounded gradients Assumption\",\n        \"Dogwild!-distributed hogwild for CPU & GPU\",\n        \"Breaking the nonsmooth barrier: A scalable parallel method for composite optimization\",\n        \"Polynomials, 2009\",\n        \"Hogwild: A lock-free approach to parallelizing stochastic gradient descent\",\n        \"Distributed coordinate descent method for learning with big data\",\n        \"Parallel coordinate descent methods for big data optimization\",\n        \"Stochastic reformulations of linear systems: Algorithms and convergence theory\",\n        \"A stochastic approximation method\",\n        \"Pegasos: Primal estimated sub-gradient solver for SVM\",\n        \"Accelerated mini-batch stochastic dual coordinate ascent\",\n        \"Communication-efficient distributed optimization using an approximate newton-type method\",\n        \"Mini-batch primal and dual methods for SVMs\",\n        \"Compressed communication for distributed deep learning: Survey and quantitative evaluation\",\n        \"Trading computation for communication: Distributed stochastic dual coordinate ascent\",\n        \"Fast asynchronous parallel stochastic gradient descent: A lock-free approach with convergence guarantee\",\n        \"Asynchronous stochastic gradient descent with delay compensation\",\n        \"Parallelized stochastic gradient descent\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in On the Convergence Analysis of Asynchronous SGD for Solving Consistent Linear Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}