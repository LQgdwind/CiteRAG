{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Pruning the Index Contents for Memory Efficient Open-Domain QA\n\nPaper Abstract: Abstract This work presents a novel pipeline that demonstrates what is achievable with a combined effort of state-of-the-art approaches. Specifically, it proposes the novel R2-D2 (Rank twice, reaD twice) pipeline composed of retriever, passage reranker, extractive reader, generative reader and a simple way to combine them. Furthermore, previous work often comes with a massive index of external documents that scales in the order of tens of GiB. This work presents a simple approach for pruning the contents of a massive index such that the open-domain QA system altogether with index, OS, and library components fits into 6GiB docker image while retaining only 8% of original index contents and losing only up to 3% EM accuracy111Our demo is available at http://r2d2.fit.vutbr.cz/. Code and preprocessed data are available at https://github.com/KNOT-FIT-BUT/R2-D2..\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning to retrieve reasoning paths over wikipedia graph for question answering\",\n        \"Longformer: The long-document transformer\",\n        \"Latent dirichlet allocation\",\n        \"Reading wikipedia to answer open-domain questions\",\n        \"Probabilistic assumptions matter: Improved models for distantly-supervised document-level question answering\",\n        \"Simple and effective multi-paragraph reading comprehension\",\n        \"ELECTRA: Pre-training text encoders as discriminators rather than generators\",\n        \"Search needs a shake-up\",\n        \"Rethinking the objectives of extractive question answering\",\n        \"Quantization\",\n        \"Realm: Retrieval-augmented language model pre-training\",\n        \"Reconsider: Re-ranking using span-focused cross-attention for open domain question answering\",\n        \"Distilling knowledge from reader to retriever for question answering\",\n        \"Leveraging passage retrieval with generative models for open domain question answering\",\n        \"A memory efficient baseline for open domain question answering\",\n        \"Document re-ranking model for machine-reading and comprehension\",\n        \"TriviaQA: A large scale distantly supervised challenge dataset for reading comprehension\",\n        \"Dense passage retrieval for open-domain question answering\",\n        \"Relevance-guided supervision for openQA with colBERT\",\n        \"Colbert: Efficient and effective passage search via contextualized late interaction over bert\",\n        \"Natural questions: a benchmark for question answering research\",\n        \"Ranking paragraphs for improving answer recall in open-domain question answering\",\n        \"Latent retrieval for weakly supervised open domain question answering\",\n        \"Retrieval-augmented generation for knowledge-intensive nlp tasks\",\n        \"PAQ: 65 million probably-asked questions and what you can do with them\",\n        \"Denoising distantly supervised open-domain question answering\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Decoupled weight decay regularization\",\n        \"Sparse, dense, and attentional representations for text retrieval\",\n        \"Visualizing data using t-sne\",\n        \"Generation-augmented retrieval for open-domain question answering\",\n        \"Reader-guided passage reranking for open-domain question answering\",\n        \"NeurIPS 2020 EfficientQA competition: Systems, analyses and lessons learned\",\n        \"A discrete hard EM approach for weakly supervised question answering\",\n        \"Knowledge guided text retrieval and reading for open domain question answering\",\n        \"Ambigqa: Answering ambiguous open-domain questions\",\n        \"Passage re-ranking with bert\",\n        \"Document ranking with a pretrained sequence-to-sequence model\",\n        \"Multi-stage document ranking with BERT\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Understanding the behaviors of BERT in ranking\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"How much knowledge can you pack into the parameters of a language model?\",\n        \"Real-time open-domain question answering with dense-sparse phrase index\",\n        \"R3: Reinforced ranker-reader for open-domain question answering\",\n        \"Multi-passage BERT: A globally normalized BERT model for open-domain question answering\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Early exiting BERT for efficient document ranking\",\n        \"Progressively pretrained dense corpus index for open-domain question answering\",\n        \"Is retriever merely an approximator of reader?\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Pruning the Index Contents for Memory Efficient Open-Domain QA, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}