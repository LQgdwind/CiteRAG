{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accelerating Irregular Computations with Hardware Transactional Memory and Active Messages\n\nPaper Abstract: Abstract. We propose Atomic Active Messages (AAM), a mechanism that accelerates irregular graph computations on both shared- and distributed-memory machines. The key idea behind AAM is that hardware transactional memory (HTM) can be used for simple and efficient processing of irregular structures in highly parallel environments. We illustrate techniques such as coarsening and coalescing that enable hardware transactions to considerably accelerate graph processing. We conduct a detailed performance analysis of AAM on Intel Haswell and IBM Blue Gene/Q and we illustrate various performance tradeoffs between different HTM parameters that impact the efficiency of graph processing. AAM can be used to implement abstractions offered by existing programming models and to improve the performance of irregular graph processing codes such as Graph500 or Galois.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fault tolerance for remote memory access programming models\",\n        \"Slim fly: A cost effective low-diameter network topology\",\n        \"Active access: A mechanism for high-performance distributed data-centric computations\",\n        \"A scalable parallel graph coloring algorithm for distributed memory computers\",\n        \"GASNet Specification, v1\",\n        \"The anatomy of a large-scale hypertextual Web search engine\",\n        \"Graph partitioning for scalable distributed graph computations\",\n        \"Azulâ€™s experiences with hardware transactional memory\",\n        \"Rock: A High-Performance Sparc CMT Processor\",\n        \"Early experience with a commercial hardware transactional memory implementation\",\n        \"Expressing graph algorithms using generalized active messages\",\n        \"An evaluation study of BigData frameworks for graph processing\",\n        \"On the evolution of random graphs\",\n        \"Enabling highly-scalable remote memory access programming with mpi-3 one sided\",\n        \"The parallel BGL: A generic library for distributed graph computations\",\n        \"How Well Do Graph-Processing Platforms Perform? An Empirical Performance Evaluation and Analysis\",\n        \"Flat combining and the synchronization-parallelism tradeoff\",\n        \"Transactional memory: architectural support for lock-free data structures\",\n        \"Intel Xeon Processor E3-1200 v3 Product Family, December 2014\",\n        \"An efficient transactional memory algorithm for computing minimum spanning forest of sparse graphs\",\n        \"Optimistic parallelism requires abstractions\",\n        \"Optimistic Parallelism Benefits from Data Partitioning\",\n        \"PAMI: A Parallel Active Message Interface for the Blue Gene/Q Supercomputer\",\n        \"On optimistic methods for concurrency control\",\n        \"Communicating memory transactions\",\n        \"Dynamics of large networks\",\n        \"Kronecker Graphs: An Approach to Modeling Networks\",\n        \"Graphlab: A new framework for parallel machine learning\",\n        \"Large-scale Distributed Graph Computing Systems: An Experimental Evaluation\",\n        \"Challenges in parallel graph processing\",\n        \"Pregel: a system for large-scale graph processing\",\n        \"Standards for Graph Algorithm Primitives\",\n        \"MPI: A Message-Passing Interface Standard. Version 3, September 2012.\",\n        \"Introducing the graph 500\",\n        \"Undirected ST-connectivity in Log-space\",\n        \"Navigating the Maze of Graph Analytics Frameworks Using Massive Graph Datasets\",\n        \"Evaluating the cost of atomic operations on modern architectures\",\n        \"HAMA: An Efficient Matrix Computation with the MapReduce Framework\",\n        \"Software transactional memory\",\n        \"Programming abstractions for data locality\",\n        \"Active messages: a mechanism for integrated communication and computation\",\n        \"Evaluation of Blue Gene/Q hardware support for transactional memories\",\n        \"Dream: Dresden streaming transactional memory benchmark\",\n        \"AM++: A Generalized Active Message Framework\",\n        \"Active Pebbles: Parallel Programming for Data-Driven Applications\",\n        \"Performance Evaluation of Intel Transactional Synchronization Extensions for High-Performance Computing\",\n        \"Spark: Cluster Computing with Working Sets\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Accelerating Irregular Computations with Hardware Transactional Memory and Active Messages, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}