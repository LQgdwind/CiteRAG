{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: \"A\"²⁢\"CiD\"²: Accelerating Asynchronous Communication in Decentralized Deep Learning\n\nPaper Abstract: Abstract Distributed training of Deep Learning models has been critical to many recent successes in the field. Current standard methods primarily rely on synchronous centralized algorithms which induce major communication bottlenecks and synchronization locks at scale. Decentralized asynchronous algorithms are emerging as a potential alternative but their practical applicability still lags. In order to mitigate the increase in communication cost that naturally comes with scaling the number of workers, we introduce a principled asynchronous, randomized, gossip-based optimization algorithm which works thanks to a continuous local momentum named A2​CiD2superscriptA2superscriptCiD2\\textbf{A}^{2}\\textbf{CiD}^{2}. Our method allows each worker to continuously process mini-batches without stopping, and run a peer-to-peer averaging routine in parallel, reducing idle time. In addition to inducing a significant communication acceleration at no cost other than adding a local momentum variable, minimal adaptation is required to incorporate A2​CiD2superscriptA2superscriptCiD2\\textbf{A}^{2}\\textbf{CiD}^{2} to standard asynchronous approaches. Our theoretical analysis proves accelerated rates compared to previous asynchronous decentralized baselines and we empirically show that using our A2​CiD2superscriptA2superscriptCiD2\\textbf{A}^{2}\\textbf{CiD}^{2} momentum significantly decrease communication costs in poorly connected networks. In particular, we show consistent improvement on the ImageNet dataset using up to 64 asynchronous workers (A100 GPUs) and various communication network topologies.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Stochastic differential equations\",\n        \"Stochastic gradient push for distributed deep learning\",\n        \"Decoupled greedy learning of cnns\",\n        \"Decoupled greedy learning of cnns for synchronous and asynchronous distributed learning\",\n        \"Gossip training for deep learning\",\n        \"Randomized gossip algorithms\",\n        \"Revisiting distributed synchronous sgd\",\n        \"Gossipgrad: Scalable deep learning using gossip communication based asynchronous gradient descent\",\n        \"Large scale distributed deep networks\",\n        \"Saga: A fast incremental gradient method with support for non-strongly convex composite objectives\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"A continuized view on nesterov acceleration for stochastic gradient descent and randomized gossip\",\n        \"Decentralized optimization with heterogeneous delays: a continuous-time approach\",\n        \"Minimizing effective resistance of a graph\",\n        \"Variance-reduced methods for machine learning\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Deep residual learning for image recognition\",\n        \"An accelerated decentralized stochastic proximal algorithm for finite sums\",\n        \"An improved analysis of gradient tracking for decentralized machine learning\",\n        \"Decentralized deep learning with arbitrary communication compression\",\n        \"A unified theory of decentralized sgd with changing topology and local updates\",\n        \"Consensus control for decentralized deep learning\",\n        \"Optimal and practical algorithms for smooth and strongly convex decentralized optimization\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Near-optimal sparse allreduce for distributed deep learning\",\n        \"Can decentralized algorithms outperform centralized algorithms? a case study for decentralized parallel stochastic gradient descent\",\n        \"Asynchronous decentralized parallel stochastic gradient descent\",\n        \"Quasi-global momentum: Accelerating decentralized deep learning on heterogeneous data\",\n        \"Don’t use large mini-batches, use local sgd\",\n        \"Optimal complexity in decentralized training\",\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"DADAO: Decoupled accelerated decentralized asynchronous optimization\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Moshpit sgd: Communication-efficient decentralized training on heterogeneous unreliable devices\",\n        \"Optimal algorithms for smooth and strongly convex distributed optimization in networks\",\n        \"Horovod: fast and easy distributed deep learning in TensorFlow\",\n        \"Local SGD converges fast and communicates little\",\n        \"Unified optimal analysis of the (stochastic) gradient method\",\n        \"Relaysum for decentralized deep learning on heterogeneous data\",\n        \"Straggler-resilient differentially-private decentralized learning\",\n        \"Exponential graph is provably efficient for decentralized deep training\",\n        \"Bluefog: Make decentralized algorithms practical for optimization and deep learning\",\n        \"Large batch training of convolutional networks\",\n        \"Decentralized training of foundation models in heterogeneous environments\",\n        \"Deep learning with elastic averaging sgd\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in \\\"A\\\"²⁢\\\"CiD\\\"²: Accelerating Asynchronous Communication in Decentralized Deep Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}