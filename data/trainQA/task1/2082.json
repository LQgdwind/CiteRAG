{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On the Overlooked Pitfalls of Weight Decay and How to Mitigate Them: A Gradient-Norm Perspective\n\nPaper Abstract: Abstract Weight decay is a simple yet powerful regularization technique that has been very widely used in training of deep neural networks (DNNs). While weight decay has attracted much attention, previous studies fail to discover some overlooked pitfalls on large gradient norms resulted by weight decay. In this paper, we discover that, weight decay can unfortunately lead to large gradient norms at the final phase (or the terminated solution) of training, which often indicates bad convergence and poor generalization. To mitigate the gradient-norm-centered pitfalls, we present the first practical scheduler for weight decay, called the Scheduled Weight Decay (SWD) method that can dynamically adjust the weight decay strength according to the gradient norm and significantly penalize large gradient norms during training. Our experiments also support that SWD indeed mitigates large gradient norms and often significantly outperforms the conventional constant weight decay strategy for Adaptive Moment Estimation (Adam).\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Critical learning periods in deep networks\",\n        \"Can we use gradient norm as a measure of generalization error for model selection in practice?\",\n        \"Implicit gradient regularization\",\n        \"Understanding decoupled and early weight decay\",\n        \"Closing the generalization gap of adaptive gradient methods in training deep neural networks\",\n        \"An introduction to optimization\",\n        \"Escaping saddles with stochastic gradients\",\n        \"On the convergence of adam and adagrad\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"The early phase of neural network training\",\n        \"Stochastic training is not necessary for generalization\",\n        \"Stochastic first-and zeroth-order methods for nonconvex stochastic programming\",\n        \"Comparing biases for minimal network construction with back-propagation\",\n        \"Train faster, generalize better: Stability of stochastic gradient descent\",\n        \"Deep residual learning for image recognition\",\n        \"Simplifying neural nets by discovering flat minima\",\n        \"Flat minima\",\n        \"Long short-term memory\",\n        \"Densely connected convolutional networks\",\n        \"Three factors influencing minima in sgd\",\n        \"Fantastic generalization measures and where to find them\",\n        \"Adam: A method for stochastic optimization\",\n        \"Learning multiple layers of features from tiny images\",\n        \"A simple weight decay can improve generalization\",\n        \"Deep learning\",\n        \"On the training dynamics of deep networks with l‚Äã_‚Äã2ùëô_2l\\\\_2 regularization\",\n        \"On generalization error bounds of noisy gradient methods for non-convex learning\",\n        \"Stochastic modified equations and adaptive stochastic gradient algorithms\",\n        \"Towards explaining the regularization effect of initial large learning rate in training neural networks\",\n        \"On the variance of the adaptive learning rate and beyond\",\n        \"Sgdr: Stochastic gradient descent with warm restarts\",\n        \"Decoupled weight decay regularization\",\n        \"Adaptive gradient methods with dynamic bound of learning rate\",\n        \"Building a large annotated corpus of english: The penn treebank\",\n        \"On the convergence of adam and beyond\",\n        \"Convergence analysis of gradient descent stochastic algorithms\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Going deeper with convolutions\",\n        \"Spherical motion dynamics: Learning dynamics of normalized neural network using sgd and weight decay\",\n        \"The marginal value of adaptive gradient methods in machine learning\",\n        \"Convergence conditions for ascent methods\",\n        \"Artificial neural variability for deep learning: On overfitting, noise memorization, and catastrophic forgetting\",\n        \"A diffusion theory for deep learning dynamics: Stochastic gradient descent exponentially favors flat minima\",\n        \"On the overlooked structure of stochastic gradients\",\n        \"On the power-law spectrum in deep learning: A bridge to protein science\",\n        \"Adaptive inertia: Disentangling the effects of adaptive learning rate and momentum\",\n        \"Positive-negative momentum: Manipulating stochastic gradient noise to improve generalization\",\n        \"A unified analysis of stochastic momentum methods for deep learning\",\n        \"Adaptive methods for nonconvex optimization\",\n        \"Recurrent neural network regularization\",\n        \"Understanding deep learning requires rethinking generalization\",\n        \"Three mechanisms of weight decay regularization\",\n        \"Why gradient clipping accelerates training: A theoretical justification for adaptivity\",\n        \"Gradient norm regularizer seeks flat minima and improves generalization\",\n        \"Penalizing gradient norm for efficiently improving generalization in deep learning\",\n        \"Towards theoretically understanding why sgd generalizes better than adam in deep learning\",\n        \"The anisotropic noise in stochastic gradient descent: Its behavior of escaping from sharp minima and regularization effects\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in On the Overlooked Pitfalls of Weight Decay and How to Mitigate Them: A Gradient-Norm Perspective, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}