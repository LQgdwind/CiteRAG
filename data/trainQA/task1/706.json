{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Optimizing Temporal Convolutional Network inference on FPGA-based accelerators\n\nPaper Abstract: Abstract Convolutional Neural Networks are extensively used in a wide range of applications, commonly including computer vision tasks like image and video classification, recognition and segmentation. Recent research results demonstrate that multi-layer (deep) network involving mono-dimensional convolutions and dilation can be effectively used in time series and sequences classification and segmentation, as well as in tasks involving sequence modelling. These structures, commonly referred to as Temporal Convolutional Networks (TCNs), have been demonstrated to consistently outperform Recurrent Neural Networks in terms of accuracy and training time [1]. While FPGA-based inference accelerators for classic CNNs are widespread, literature is lacking in a quantitative evaluation of their usability on inference for TCN models. In this paper we present such an evaluation, considering a CNN accelerator with specific features supporting TCN kernels as a reference and a set of state-of-the-art TCNs as benchmark. Experimental results show that, during TCN execution, operational intensity can be critical for the overall performance. We propose a convolution scheduling based on batch processing that can boost efficiency up to 96% of theoretical peak performance. Overall we can achieve up to 111,8 GOPS/s and a power efficiency of 33,9 GOPS/s/W on an Ultrascale+ ZU3EG (up to 10x speedup and 3x power efficiency improvement with respect to pure software implementation).\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"An empirical evaluation of generic convolutional and recurrent networks for sequence modeling\",\n        \"An in-memory-computing dnn achieving 700 tops/w and 6 tops/mm2 in 130-nm cmos\",\n        \"Eyeriss v2: A flexible accelerator for emerging deep neural networks on mobile devices\",\n        \"Hyperdrive: A multi-chip systolically scalable binary-weight cnn inference engine\",\n        \"Cnnp-v2: A memory-centric architecture for low-power cnn processor on domain-specific mobile devices\",\n        \"A survey of convolutional neural networks on edge with reconfigurable computing\",\n        \"A survey of fpga-based accelerators for convolutional neural networks\",\n        \"Deep residual learning for image recognition\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Deep image: Scaling up image recognition\",\n        \"Deepface: Closing the gap to human-level performance in face verification\",\n        \"Large-scale video classification with convolutional neural networks\",\n        \"Temporal convolutional networks for action segmentation and detection\",\n        \"Convolutional neural networks for sentence classification\",\n        \"Deep speech: Scaling up end-to-end speech recognition\",\n        \"Dialog-based language learning\",\n        \"Learning character-level representations for part-of-speech tagging\",\n        \"Neural machine translation in linear time\",\n        \"Wavenet: A generative model for raw audio.\",\n        \"Language modeling with gated convolutional networks\",\n        \"Interpretable 3d human action analysis with temporal convolutional networks\",\n        \"Towards understanding ecg rhythm classification using convolutional neural networks and attention mappings\",\n        \"Long short-term memory\",\n        \"On the properties of neural machine translation: Encoder-decoder approaches\",\n        \"Neuraghe: Exploiting cpu-fpga synergies for efficient and flexible cnn inference acceleration on zynq socs\",\n        \"[dl] a survey of fpga-based neural network inference accelerators\",\n        \"A data-center fpga acceleration platform for convolutional neural networks\",\n        \"Caffeine: Towards uniformed representation and acceleration for deep convolutional neural networks\",\n        \"An automatic rtl compiler for high-throughput fpga implementation of diverse deep convolutional neural networks\",\n        \"Latency-driven design for fpga-based convolutional neural networks\",\n        \"Snowflake: An efficient hardware accelerator for convolutional neural networks\",\n        \"Going deeper with embedded fpga platform for convolutional neural network\",\n        \"Scalable high-performance architecture for convolutional ternary neural networks on fpga\",\n        \"Finn: A framework for fast, scalable binarized neural network inference\",\n        \"Pir-dsp: An fpga dsp block architecture for multi-precision deep neural networks\",\n        \"Lutnet: Learning fpga configurations for highly efficient neural network inference\",\n        \"BinaryConnect: Training Deep Neural Networks with binary weights during propagations\",\n        \"Xilinx Vitis AI development environment\",\n        \"Xilinx Deep Learning Processing Unit\",\n        \"Zynq DPU v3.2\",\n        \"Polyphonic note transcription of time-domain audio signal with deep wavenet architecture\",\n        \"Fastwave: Accelerating autoregressive convolutional neural networks on fpga\",\n        \"Exploring neuraghe: A customizable template for apsoc-based cnn inference at the edge\",\n        \"From high-level deep neural models to fpgas\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Optimizing Temporal Convolutional Network inference on FPGA-based accelerators, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}