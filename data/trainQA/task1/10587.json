{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Architectural Neural Backdoors from First Principles\n\nPaper Abstract: Abstract While previous research backdoored neural networks by changing their parameters, recent work uncovered a more insidious threat: backdoors embedded within the definition of the network’s architecture. This involves injecting common architectural components, such as activation functions and pooling layers, to subtly introduce a backdoor behavior that persists even after (full re-)training. However, the full scope and implications of architectural backdoors have remained largely unexplored. Bober-Irizar et al. (2023) introduced the first architectural backdoor; they showed how to create a backdoor for a checkerboard pattern, but never explained how to target an arbitrary trigger pattern of choice. In this work we construct an arbitrary trigger detector which can be used to backdoor an architecture with no human supervision. This leads us to revisit the concept of architectural backdoors and taxonomise them, describing 12 distinct types. To gauge the difficulty of detecting such backdoors, we conducted a user study, revealing that ML developers can only identify suspicious components in common model definitions as backdoors in 37% of cases, while they surprisingly preferred backdoored models in 33% of cases. To contextualize these results, we find that language models outperform humans at the detection of backdoors. Finally, we discuss defenses against architectural backdoors, emphasizing the need for robust and comprehensive strategies to safeguard the integrity of ML systems.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Blind backdoors in deep learning models\",\n        \"Onnx: Open neural network exchange\",\n        \"Challenges of producing software bill of materials for java\",\n        \"Architectural backdoors in neural networks\",\n        \"Automatic bill of materials\",\n        \"Trojan source: Invisible vulnerabilities\",\n        \"Bad characters: Imperceptible nlp attacks\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n        \"Poisoning web-scale training datasets is practical\",\n        \"Return-oriented programming without returns\",\n        \"Impnet: Imperceptible and blackbox-undetectable backdoors in compiled neural networks\",\n        \"A mathematical introduction to logic\",\n        \"Rethinking image-scaling attacks: The interplay between vulnerabilities in machine learning systems\",\n        \"Eventstream github issue\",\n        \"Mamba: Linear-time sequence modeling with selective state spaces\",\n        \"Badnets: Identifying vulnerabilities in the machine learning model supply chain\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n        \"Deep residual learning for image recognition\",\n        \"Handcrafted backdoors in deep neural networks\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Mlir: A compiler infrastructure for the end of moore’s law\",\n        \"Neurobfuscator: A full-stack obfuscation tool to mitigate neural architecture stealing\",\n        \"Neural attention distillation: Erasing backdoor triggers from deep neural networks\",\n        \"DARTS: Differentiable architecture search\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"A convnet for the 2020s\",\n        \"Quantization backdoors to deep learning commercial frameworks\",\n        \"MagNet: a two-pronged defense against adversarial examples\",\n        \"“Security is not my field, I’m a stats guy”: A qualitative root cause analysis of barriers to adversarial machine learning defenses in industry\",\n        \"Mish: A self regularized non-monotonic activation function\",\n        \"Legit discovers ai jacking vulnerability in popular hugging face ai platform\",\n        \"The dark side of autoML: Towards architectural backdoor search\",\n        \"Compromised pytorch-nightly dependency chain between december 25th and december 30th, 2022\",\n        \"Augmentation backdoors\",\n        \"Code llama: Open foundation models for code\",\n        \"Hidden trigger backdoor attacks\",\n        \"Dynamic backdoor attacks against machine learning models\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"A backdoored ssh daemon that steals passwords\",\n        \"The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86)\",\n        \"Poison frogs! targeted clean-label poisoning attacks on neural networks\",\n        \"Manipulating SGD with data ordering attacks\",\n        \"The curse of recursion: Training on generated data makes models forget\",\n        \"Playing with fire – how we executed a critical supply chain attack on pytorch\",\n        \"Going deeper with convolutions\",\n        \"Efficientnetv2: Smaller models and faster training\",\n        \"Samsung printer having secret admin account backdoor\",\n        \"Reflections on trusting trust\",\n        \"Fickling\",\n        \"Semgrep\",\n        \"Lobotoml\",\n        \"Neural cleanse: Identifying and mitigating backdoor attacks in neural networks\",\n        \"Evil from within: Machine learning backdoors through hardware trojans\",\n        \"An empirical study on software bill of materials: Where we stand and the road ahead\",\n        \"Zuckerpunch - abusing self hosted github runners at facebook\",\n        \"Rapid model architecture adaption for meta-learning\",\n        \"Model obfuscation for securing deployed neural networks\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Architectural Neural Backdoors from First Principles, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}