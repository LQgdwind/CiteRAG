{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Formalizing Preferences Over Runtime Distributions\n\nPaper Abstract: Abstract When trying to solve a computational problem, we are often faced with a choice between algorithms that are guaranteed to return the right answer but differ in their runtime distributions (e.g., SAT solvers, sorting algorithms). This paper aims to lay theoretical foundations for such choices by formalizing preferences over runtime distributions. It might seem that we should simply prefer the algorithm that minimizes expected runtime. However, such preferences would be driven by exactly how slow our algorithm is on bad inputs, whereas in practice we are typically willing to cut off occasional, sufficiently long runs before they finish. We propose a principled alternative, taking a utility-theoretic approach to characterize the scoring functions that describe preferences over algorithms. These functions depend on the way our value for solving our problem decreases with time and on the distribution from which captimes are drawn. We describe examples of realistic utility functions and show how to leverage a maximum-entropy approach for modeling underspecified captime distributions. Finally, we show how to efficiently estimate an algorithm’s expected utility from runtime samples.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Le comportement de l’homme rationnel devant le risque: critique des postulats et axiomes de l’école américaine\",\n        \"A gender-based genetic algorithm for the automatic configuration of algorithms\",\n        \"Introduction to Statistical Decision Theory: Utility Theory and Causal Analysis\",\n        \"Learning-theoretic foundations of algorithm configuration for combinatorial partitioning problems\",\n        \"How much data is sufficient to learn high-performing algorithms? generalization guarantees for data-driven algorithm design\",\n        \"A racing algorithm for configuring metaheuristics\",\n        \"Elements of Information Theory\",\n        \"Risk, ambiguity, and the Savage axioms\",\n        \"The invention of the independence condition for preferences\",\n        \"Utility theory for decision making\",\n        \"Retrospective on the utility theory of von Neumann and Morgenstern\",\n        \"SAT competition 2020\",\n        \"Learning dynamic algorithm portfolios\",\n        \"Algorithm portfolios\",\n        \"A PAC approach to application-specific algorithm selection\",\n        \"A Bayesian approach to tackling hard computational problems\",\n        \"An economics approach to hard computational problems\",\n        \"ParamILS: an automatic algorithm configuration framework\",\n        \"Sequential model-based optimization for general algorithm configuration\",\n        \"Information theory and statistical mechanics\",\n        \"ISAC: Instance-Specific Algorithm Configuration\",\n        \"Prospect theory: An analysis of decision under risk\",\n        \"Efficiency through procrastination: Approximately optimal algorithm configuration with runtime guarantees\",\n        \"Procrastinating with confidence: Near-optimal, anytime, adaptive algorithm configuration\",\n        \"Sur la notion de la moyenne\",\n        \"Learning to select branching rules in the DPLL procedure for satisfiability\",\n        \"A portfolio approach to algorithm selection\",\n        \"The irace package: Iterated racing for automatic algorithm configuration\",\n        \"Utility theory: Axioms versus ‘paradoxes’\",\n        \"Note on von Neumann-Morgenstern’s strong independence axiom\",\n        \"Retrospectives: how economists came to accept expected utility theory: the case of Samuelson and Savage\",\n        \"Decision theory: Principles and approaches\",\n        \"The algorithm selection problem\",\n        \"Probability, utility, and the independence axiom\",\n        \"The foundations of statistics\",\n        \"Automatic configuration of sequential planning portfolios\",\n        \"Multiagent systems: Algorithmic, game-theoretic, and logical foundations\",\n        \"Who accepts Savage’s axiom?\",\n        \"Minisat v1. 13-a sat solver with conflict-clause minimization\",\n        \"Run2survive: a decision-theoretic approach to algorithm selection based on survival analysis\",\n        \"Theory of games and economic behavior\",\n        \"LeapsAndBounds: A method for approximately optimal algorithm configuration\",\n        \"CapsAndRuns: An improved method for approximately optimal algorithm configuration\",\n        \"ImpatientCapsAndRuns: Approximately optimal algorithm configuration from an infinite pool\",\n        \"SATzilla: portfolio-based algorithm selection for SAT\",\n        \"Hydra: Automatically configuring algorithms for portfolio-based selection\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Formalizing Preferences Over Runtime Distributions, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}