{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Dataflow graphs as complete causal graphs Correspondence to: ap2169@cam.ac.uk * Equal contribution\n\nPaper Abstract: Abstract Component-based development is one of the core principles behind modern software engineering practices. Understanding of causal relationships between components of a software system can yield significant benefits to developers. Yet modern software design approaches make it difficult to track and discover such relationships at system scale, which leads to growing intellectual debt. In this paper we consider an alternative approach to software design, flow-based programming (FBP), and draw the attention of the community to the connection between dataflow graphs produced by FBP and structural causal models. With expository examples we show how this connection can be leveraged to improve day-to-day tasks in software projects, including fault localisation, business analysis and experimentation.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Automatic dependency detection — dynatrace\",\n        \"Distributed tracing system – AWS X-Ray\",\n        \"Jaeger: open source, end-to-end distributed tracing\",\n        \"Desiderata for next generation of ml model serving\",\n        \"Marketing metrics\",\n        \"Exploring machine learning techniques for fault localization\",\n        \"Mitigating the confounding effects of program dependences for effective fault localization\",\n        \"DoWhy-GCM: An extension of DoWhy for causal inference in graphical causal models\",\n        \"Why did the distribution change?\",\n        \"Business analysis techniques: 72 essential tools for success\",\n        \"Performance management: Why keeping score is so important, and so hard\",\n        \"Evaluation of induced expert knowledge in causal structure learning by NOTEARS\",\n        \"Testing causality in scientific modelling software\",\n        \"Beware of the DAG!\",\n        \"A preliminary architecture for a basic data-flow processor\",\n        \"Direct and indirect effects of sequential treatments\",\n        \"DevOps metrics\",\n        \"Causal de Finetti: On the identification of invariant causal structure in exchangeable data\",\n        \"Shapley value\",\n        \"A/B testing intuition busters: Common misunderstandings in online controlled experiments\",\n        \"On information and sufficiency\",\n        \"Root cause analysis of software bugs using machine learning techniques\",\n        \"Software architecture challenges for ML systems\",\n        \"Scaling big data mining infrastructure: the Twitter experience\",\n        \"Applying flow-based programming methodology to data-driven applications development for smart environments\",\n        \"Flow-based programming for machine learning\",\n        \"Flow-Based Programming: A new approach to application development\",\n        \"OOP is dead, long live Data-Oriented Design\",\n        \"Experimentation that matters: a multi-case study on the challenges with A/B testing\",\n        \"How we test software at Microsoft\",\n        \"An empirical evaluation of flow based programming in the machine learning deployment context\",\n        \"Challenges in deploying machine learning: A survey of case studies\",\n        \"Causality: Models, Reasoning and Inference\",\n        \"Elements of Causal Inference: Foundations and Learning Algorithms\",\n        \"Practical challenges in test environment management\",\n        \"Data-Oriented Programming: Reduce Software Complexity\",\n        \"The state of Flow-based Programming\",\n        \"Applications of statistical causal inference in software engineering\",\n        \"Flow-based attribution in graphical models: A recursive Shapley approach\",\n        \"The data dichotomy: Rethinking the way we treat data and services\",\n        \"Model-based testing of installers in a development test environment\",\n        \"Flow-based programming for IoT leveraging fog computing\",\n        \"Counterfactual explanations without opening the black box: Automated decisions and the GDPR\",\n        \"Detecting causal structure on cloud application microservices using Granger causality models\",\n        \"A survey on software fault localization\",\n        \"From infrastructure to culture: A/B testing challenges in large scale social networks\",\n        \"Fault localization analysis based on deep neural network\",\n        \"Intellectual debt: With great power comes great ignorance\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Dataflow graphs as complete causal graphs Correspondence to: ap2169@cam.ac.uk * Equal contribution, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}