{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Do Syntax Trees Help Pre-trained Transformers Extract Information?\n\nPaper Abstract: Abstract Much recent work suggests that incorporating syntax information from dependency trees can improve task-specific transformer models. However, the effect of incorporating dependency tree information into pre-trained transformer models (e.g., BERT) remains unclear, especially given recent studies highlighting how these models implicitly encode syntax. In this work, we systematically study the utility of incorporating dependency trees into pre-trained transformers on three representative information extraction tasks: semantic role labeling (SRL), named entity recognition, and relation extraction. We propose and investigate two distinct strategies for incorporating dependency structure: a late fusion approach, which applies a graph neural network on the output of a transformer, and a joint fusion approach, which infuses syntax structure into the transformer attention layers. These strategies are representative of prior work, but we introduce additional model design elements that are necessary for obtaining improved performance. Our empirical analysis demonstrates that these syntax-infused transformers obtain state-of-the-art results on SRL and relation extraction tasks. However, our analysis also reveals a critical shortcoming of these models: we find that their performance gains are highly contingent on the availability of human-annotated dependency parses, which raises important questions regarding the viability of syntax-augmented transformers in real-world applications.111Our code is available at: https://github.com/DevSinghSachan/syntax-augmented-bert\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TACRED revisited: A thorough evaluation of the TACRED relation extraction task\",\n        \"Layer normalization\",\n        \"Relational inductive biases, deep learning, and graph networks\",\n        \"Extracting complex biological events with rich graph-based feature sets\",\n        \"Introduction to the CoNLL-2005 shared task: Semantic role labeling\",\n        \"What does BERT look at? An analysis of BERT’s attention\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Deep biaffine attention for neural dependency parsing\",\n        \"Joint parsing and named entity recognition\",\n        \"The viterbi algorithm\",\n        \"Brown corpus manual\",\n        \"RelEx – Relation extraction using dependency parse trees\",\n        \"Representation learning on graphs: Methods and applications\",\n        \"Deep residual learning for image recognition\",\n        \"Bridging nonlinearities and stochastic regularizers with gaussian error linear units\",\n        \"A structural probe for finding syntax in word representations\",\n        \"Open-domain semantic role labeling by modeling word spans\",\n        \"Dependency-guided LSTM-CRF for named entity recognition\",\n        \"Efficient dependency-guided named entity recognition\",\n        \"Adam: A method for stochastic optimization\",\n        \"Syntactic structure distillation pretraining for bidirectional encoders\",\n        \"Conditional random fields: Probabilistic models for segmenting and labeling sequence data\",\n        \"A dependency-based neural network for relation classification\",\n        \"RoBERTa: A robustly optimized BERT pretraining approach\",\n        \"The Stanford CoreNLP natural language processing toolkit\",\n        \"Encoding sentences with graph convolutional networks for semantic role labeling\",\n        \"The Stanford typed dependencies representation\",\n        \"End-to-end relation extraction using LSTMs on sequences and tree structures\",\n        \"Universal Dependencies v2: An evergrowing multilingual treebank collection\",\n        \"GloVe: Global vectors for word representation\",\n        \"Deep contextualized word representations\",\n        \"CoNLL-2012 shared task: Modeling multilingual unrestricted coreference in OntoNotes\",\n        \"Semantic role labeling using different syntactic views\",\n        \"Stanza: A Python natural language processing toolkit for many human languages\",\n        \"Improving language understanding by generative pre-training\",\n        \"Neural semantic role labeling with dependency path embeddings\",\n        \"Dropout: A simple way to prevent neural networks from overfitting\",\n        \"Training very deep networks\",\n        \"Linguistically-informed self-attention for semantic role labeling\",\n        \"BERT rediscovers the classical NLP pipeline\",\n        \"Attention is all you need\",\n        \"Graph attention networks\",\n        \"Can syntax help? improving an LSTM-based sentence compression model for new domains\",\n        \"Graph convolution over pruned dependency trees improves relation extraction\",\n        \"Position-aware attention and supervised data improve slot filling\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Do Syntax Trees Help Pre-trained Transformers Extract Information?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}