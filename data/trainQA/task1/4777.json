{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On minimizers and convolutional filters: theoretical connections and applications to genome analysisSupported by Natural Sciences and Engineering Research Council of Canada (NSERC) grant RGPIN-2022-03074.\n\nPaper Abstract: Abstract Minimizers and convolutional neural networks (CNNs) are two quite distinct popular techniques that have both been employed to analyze categorical biological sequences. At face value, the methods seem entirely dissimilar. Minimizers use min-wise hashing on a rolling window to extract a single important k-mer feature per window. CNNs start with a wide array of randomly initialized convolutional filters, paired with a pooling operation, and then multiple additional neural layers to learn both the filters themselves and how they can be used to classify the sequence. Here, our main result is a careful mathematical analysis of hash function properties showing that for sequences over a categorical alphabet, random Gaussian initialization of convolutional filters with max-pooling is equivalent to choosing a minimizer ordering such that selected k-mers are (in Hamming distance) far from the k-mers within the sequence but close to other minimizers. In empirical experiments, we find that this property manifests as decreased density in repetitive regions, both in simulation and on real human telomeres. We additionally train from scratch a CNN embedding of synthetic short-reads from the SARS-CoV-2 genome into 3D Euclidean space that locally recapitulates the linear sequence distance of the read origins, a modest step towards building a deep learning assembler, though it is at present too slow to be practical. In total, this manuscript provides a partial explanation for the effectiveness of CNNs in categorical sequence analysis.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep learning for computational biology\",\n        \"Murmurhash project\",\n        \"Computational biology in the 21st century: Scaling with compressive algorithms\",\n        \"Navigating bottlenecks and trade-offs in genomic data analysis\",\n        \"On the resemblance and containment of documents\",\n        \"Min-wise independent permutations\",\n        \"Deep clustering for unsupervised learning of visual features\",\n        \"Universal classes of hash functions\",\n        \"Approximately minwise independence with twisted tabulation\",\n        \"Brain tumor classification using deep cnn features via transfer learning\",\n        \"Universal hashing via integer arithmetic without primes, revisited\",\n        \"Us secure hash algorithm 1 (sha1)\",\n        \"Syncmers are more sensitive than minimizers for selecting conserved k-mers in biological sequences\",\n        \"Minimizer-space de bruijn graphs: Whole-genome assembly of long reads in minutes on a personal computer\",\n        \"Deep learning models for bacteria taxonomic classification of metagenomic data\",\n        \"Minimally overlapping words for sequence similarity search\",\n        \"Neocognitron: A self-organizing neural network model for a mechanism of visual pattern recognition\",\n        \"Deepminimizer: A differentiable framework for optimizing sequence-specific minimizer schemes\",\n        \"Long short-term memory\",\n        \"Multilayer feedforward networks are universal approximators\",\n        \"Receptive fields of single neurones in the cat’s striate cortex\",\n        \"A small approximately min-wise independent family of hash functions\",\n        \"Weighted minimizer sampling improves long read mapping\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"On the future of genomic data\",\n        \"A note on gamma difference distributions\",\n        \"Face recognition: A convolutional neural-network approach\",\n        \"Minimap and miniasm: fast mapping and de novo assembly for noisy long sequences\",\n        \"Enhancing evolutionary couplings with deep convolutional neural networks\",\n        \"K3 moore’s law in the era of gpu computing\",\n        \"Improving the performance of minimizers and winnowing schemes\",\n        \"Methods for interpreting and understanding deep neural networks\",\n        \"A universal snp and small-indel variant caller using deep neural networks\",\n        \"The complete sequence of a human y chromosome\",\n        \"Reducing storage requirements for biological sequence comparison\",\n        \"Learning representations by back-propagating errors\",\n        \"Winnowing: local algorithms for document fingerprinting\",\n        \"Theory of local k-mer selection with applications to long-read alignment\",\n        \"Fast and robust metagenomic sequence comparison through sparse chaining with skani\",\n        \"Machine learning meets genome assembly\",\n        \"High speed hashing for integers and strings\",\n        \"Attention is all you need\",\n        \"Learning to untangle genome assembly with graph convolutional networks\",\n        \"New classes and applications of hash functions\",\n        \"Improved metagenomic analysis with kraken 2\",\n        \"Genomic style: yet another deep-learning approach to characterize bacterial genome sequences\",\n        \"Improved design and analysis of practical minimizers\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in On minimizers and convolutional filters: theoretical connections and applications to genome analysisSupported by Natural Sciences and Engineering Research Council of Canada (NSERC) grant RGPIN-2022-03074., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}