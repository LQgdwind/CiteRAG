{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Lifelong Dynamic Optimization for Self-Adaptive Systems: Fact or Fiction?\n\nPaper Abstract: Abstract When faced with changing environment, highly-configurable software systems need to dynamically search for promising adaptation plan that keeps the best possible performance, e.g., higher throughput or smaller latency — a typical planning problem for self-adaptive systems (SASs). However, given the rugged and complex search landscape with multiple local optima, such a SAS planning is challenging especially in dynamic environments. In this paper, we propose LiDOS, a lifelong dynamic optimization framework for SAS planning. What makes LiDOS unique is that to handle the “dynamic”, we formulate the SAS planning as a multi-modal optimization problem, aiming to preserve the useful information for better dealing with the local optima issue under dynamic environment changes. This differs from existing planners in that the “dynamic” is not explicitly handled during the search process in planning. As such, the search and planning in LiDOS run continuously over the lifetime of SAS, terminating only when it is taken offline or the search space has been covered under an environment. Experimental results on three real-world SASs show that the concept of explicitly handling dynamic as part of the search in the SAS planning is effective, as LiDOS outperforms its stationary counterpart overall with up to 10×10\\times improvement. It also achieves better results in general over state-of-the-art planners and with 1.4×1.4\\times to 10×10\\times speedup on generating promising adaptation plans.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The interplay of compile-time and run-time options for performance prediction\",\n        \"A survey and taxonomy of self-aware and self-adaptive cloud autoscaling systems\",\n        \"Finding faster configurations using flash\",\n        \"An uncertainty-aware approach to optimal configuration of stream processing systems\",\n        \"Software engineering for self-adaptive systems: A second research roadmap\",\n        \"Synergizing domain expertise with self-awareness in software systems: A patternized architecture guideline\",\n        \"To adapt or not to adapt?: Technical debt and learning driven self-adaptation for managing runtime performance\",\n        \"Search-based software engineering for self-adaptive systems: Survey, disappointments, suggestions and opportunities\",\n        \"FEMOSAA: Feature guided and knee driven multi-objective optimization for self-adaptive software\",\n        \"FUSION: a framework for engineering self-tuning self-adaptive software systems\",\n        \"Synthesis of probabilistic models for quality-of-service software engineering\",\n        \"Applying genetic algorithms to decision making in autonomic computing systems\",\n        \"On the effects of seeding strategies: a case for search-based multi-objective service composition\",\n        \"Standing on the shoulders of giants: Seeding search-based multi-objective optimization with prior knowledge for software service composition\",\n        \"Information reuse and stochastic search: Managing uncertainty in self-**{}^{\\\\mbox{*}} systems\",\n        \"DATESSO: self-adapting service composition with debt-aware two levels constraint reasoning\",\n        \"Automated multi-objective control for self-adaptive software design\",\n        \"Automated control of multiple software goals using multiple actuators\",\n        \"Keep it SIMPLEX: satisfying multiple goals with guarantees in control-based self-adaptive systems\",\n        \"Self-adaptive and sensitivity-aware qos modeling for the cloud\",\n        \"Deepperf: performance prediction for configurable software with deep sparse neural network\",\n        \"Online qos modeling in the cloud: A hybrid and adaptive multi-learners approach\",\n        \"Self-adaptive and online qos modeling for cloud-based software services\",\n        \"All versus one: an empirical comparison on retrained and incremental machine learning for modeling performance of adaptable software\",\n        \"Transfer learning for performance modeling of configurable systems: an exploratory analysis\",\n        \"Evolutionary dynamic optimization: A survey of the state of the art\",\n        \"Multi-objectivizing software configuration tuning\",\n        \"Search-based software engineering: Trends, techniques and applications\",\n        \"Exploratory landscape analysis\",\n        \"Multidimensional knapsack problem: A fitness landscape analysis\",\n        \"Comparison of multi-modal optimization algorithms based on evolutionary algorithms\",\n        \"A fast and elitist multiobjective genetic algorithm: Nsga-ii\",\n        \"Self-adaptive software: Landscape and research challenges\",\n        \"Learning to sample: exploiting similarities across environments to learn performance models for configurable systems\",\n        \"VEER: disagreement-free multi-objective configuration\",\n        \"Trimtuner: Efficient optimization of machine learning jobs in the cloud via sub-sampling\",\n        \"Predicting performance via automated feature-interaction detection\",\n        \"A genetic algorithm tutorial\",\n        \"jmetal: A java framework for multi-objective optimization\",\n        \"equal: informing early design decisions\",\n        \"Individual comparisons by ranking methods\",\n        \"A practical guide for using statistical tests to assess randomized algorithms in software engineering\",\n        \"A critique and improvement of the cl common language effect size statistics of mcgraw and wong\",\n        \"Ranking and clustering software cost estimation models through a multiple comparisons algorithm\",\n        \"Hyperparameter optimization for effort estimation\",\n        \"Resource-guided configuration space reduction for deep learning models\",\n        \"Multi-tenant cloud service composition using evolutionary optimization\",\n        \"Bilo-cpdp: Bi-level programming for automated model discovery in cross-project defect prediction\",\n        \"Self-adaptive trade-off decision making for autoscaling cloud-based services\",\n        \"Symbiotic and sensitivity-aware architecture for globally-optimal benefit in self-adaptive cloud\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Lifelong Dynamic Optimization for Self-Adaptive Systems: Fact or Fiction?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}