{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: An Ensemble Approach for Annotating Source Code Identifiers with Part-of-speech Tags\n\nPaper Abstract: Abstract This paper presents an ensemble part-of-speech tagging approach for source code identifiers. Ensemble tagging is a technique that uses machine-learning and the output from multiple part-of-speech taggers to annotate natural language text at a higher quality than the part-of-speech taggers are able to obtain independently. Our ensemble uses three state-of-the-art part-of-speech taggers: SWUM, POSSE, and Stanford. We study the quality of the ensemble’s annotations on five different types of identifier names: function, class, attribute, parameter, and declaration statement at the level of both individual words and full identifier names. We also study and discuss the weaknesses of our tagger to promote the future amelioration of these problems through further research. Our results show that the ensemble achieves 75% accuracy at the identifier level and 84-86% accuracy at the word level. This is an increase of +17% points at the identifier level from the closest independent part-of-speech tagger.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Program understanding: Challenge for the 1990s\",\n        \"Clean Code: A Handbook of Agile Software Craftsmanship\",\n        \"Program understanding behavior during debugging of large scale software\",\n        \"Using sex differences to link spatial cognition and program comprehension\",\n        \"Concise and consistent naming\",\n        \"The need for software specific natural language techniques\",\n        \"On negative results when using sentiment analysis tools for software engineering research\",\n        \"Foundations of Statistical Natural Language Processing\",\n        \"Wordnet: a lexical database for english\",\n        \"Learning to spot and refactor inconsistent method names\",\n        \"Repent: Analyzing the nature of identifier renamings\",\n        \"Contextualizing rename decisions using refactorings and commit messages\",\n        \"Contextualizing rename decisions using refactorings, commit messages, and data types\",\n        \"A new family of software anti-patterns: Linguistic anti-patterns\",\n        \"An empirical study of identifier splitting techniques\",\n        \"Integrating natural language and program structure information to improve software search and exploration\",\n        \"Part-of-speech tagging of program identifiers for improved text-based software engineering tools\",\n        \"Part of speech tagging java method names\",\n        \"Debugging method names\",\n        \"Automatically capturing source code context of nl-queries for software maintenance and reuse\",\n        \"Mining java class naming conventions\",\n        \"A survey of the forms of java reference names\",\n        \"Cognitive perspectives on the role of naming in computer programs\",\n        \"Posit: Simultaneously tagging natural and programming languages\",\n        \"On the generation, structure, and semantics of grammar patterns in source code identifiers\",\n        \"Classification and regression trees, by leo breiman, jerome h. friedman, richard a. olshen, and charles j. stone. brooks/cole publishing, monterey, 1984,358 pages, $27.95\",\n        \"Random forests\",\n        \"A model to detect readability improvements in incremental changes\",\n        \"How we refactor and how we document it? on the use of supervised machine learning algorithms to classify refactoring documentation\",\n        \"Ensemble system for part-of-speech tagging\",\n        \"Using grammar patterns to interpret test method name evolution\",\n        \"Enriching the knowledge sources used in a maximum entropy part-of-speech tagger\",\n        \"Exploring the influence of identifier names on code quality: An empirical study\",\n        \"Amap: Automatically mining abbreviation expansions in programs to enhance software maintenance tools\",\n        \"The hungarian revolution\",\n        \"An empirical investigation of how and why developers rename identifiers\",\n        \"Relating identifier naming flaws and code quality: An empirical study\",\n        \"Improving identifier informativeness using part of speech information\",\n        \"A pattern-based approach to detect and improve non-descriptive test names\",\n        \"Suggesting natural method names to check name consistencies\",\n        \"Nomen est omen: analyzing the language of function identifiers\",\n        \"Restructuring program identifier names\",\n        \"Using natural language program analysis to locate and understand action-oriented concerns\",\n        \"Analysing source code: looking for useful verb-direct object pairs in all the right places\",\n        \"Exploiting the correspondence between micro patterns and class names\",\n        \"Meaningful method names\",\n        \"The programmer’s lexicon, volume i: The verbs\",\n        \"The java programmer’s phrase book\",\n        \"Canonical method names for java\",\n        \"srcml 1.0: Explore, analyze, and manipulate source code\",\n        \"Automatically generating test templates from test names (n)\",\n        \"Towards automatically generating descriptive names for unit tests\",\n        \"An empirical study of abbreviations and expansions in software artifacts\",\n        \"Natural language parsing of program element names for concept extraction\",\n        \"Machine Learning with Python Cookbook: Practical Solutions from Preprocessing to Deep Learning\",\n        \"Statistics for Machine Learning\",\n        \"Reverse engineering method stereotypes\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in An Ensemble Approach for Annotating Source Code Identifiers with Part-of-speech Tags, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}