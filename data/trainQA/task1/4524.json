{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: MDERank: A Masked Document Embedding Rank Approach for Unsupervised Keyphrase Extraction\n\nPaper Abstract: Abstract Keyphrase extraction (KPE) automatically extracts phrases in a document that provide a concise summary of the core content, which benefits downstream information retrieval and NLP tasks. Previous state-of-the-art (SOTA) methods select candidate keyphrases based on the similarity between learned representations of the candidates and the document. They suffer performance degradation on long documents due to discrepancy between sequence lengths which causes mismatch between representations of keyphrase candidates and the document. In this work, we propose a novel unsupervised embedding-based KPE approach, Masked Document Embedding Rank (MDERank), to address this problem by leveraging a mask strategy and ranking candidates by the similarity between embeddings of the source document and the masked document. We further develop a KPE-oriented BERT (KPEBERT) model by proposing a novel self-supervised contrastive learning method, which is more compatible to MDERank than vanilla BERT. Comprehensive evaluations on six KPE benchmarks demonstrate that the proposed MDERank outperforms state-of-the-art unsupervised KPE approach by average 1.80 F‚Äã1‚Äã@‚Äã15ùêπ1@15F1@15 improvement. MDERank further benefits from KPEBERT and overall achieves average 3.53 F‚Äã1‚Äã@‚Äã15ùêπ1@15F1@15 improvement over the SOTA SIFRank. Our code is available at https://github.com/LinhanZ/mderank.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Bi-lstm-crf sequence labeling for keyphrase extraction from scholarly documents\",\n        \"A simple but tough-to-beat baseline for sentence embeddings\",\n        \"Semeval 2017 task 10: Scienceie - extracting keyphrases and relations from scientific publications\",\n        \"Longformer: The long-document transformer\",\n        \"Simple unsupervised keyphrase extraction using sentence embeddings\",\n        \"Enriching word vectors with subword information\",\n        \"Unsupervised keyphrase extraction with multipartite graphs\",\n        \"Topicrank: Graph-based topic ranking for keyphrase extraction\",\n        \"Yake! collection-independent automatic keyword extractor\",\n        \"An integrated approach for keyphrase generation via exploring the power of retrieval and extraction\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Attentionrank: Unsupervised keyphrase extraction using self and cross attentions\",\n        \"Positionrank: An unsupervised approach to keyphrase extraction from scholarly documents\",\n        \"Simcse: Simple contrastive learning of sentence embeddings\",\n        \"PTR: prompt tuning with rules for text classification\",\n        \"Improved automatic keyword extraction given more linguistic knowledge\",\n        \"What does BERT learn about the structure of language?\",\n        \"Semeval-2010 task 5 : Automatic keyphrase extraction from scientific articles\",\n        \"Are pre-trained language models aware of phrases? simple but strong baselines for grammar induction\",\n        \"Large dataset for keyphrases extraction\",\n        \"Learning rich representation of keyphrases from text\",\n        \"An empirical evaluation of doc2vec with practical insights into document embedding generation\",\n        \"BART: denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Efficiently mining high quality phrases from texts\",\n        \"An adaptive hierarchical compositional model for phrase embedding\",\n        \"An efficient method for high quality and cohesive topical phrase mining\",\n        \"Keyphrase prediction with pre-trained language model\",\n        \"Roberta: A robustly optimized BERT pretraining approach\",\n        \"Key2vec: Automatic ranked keyphrase extraction from scientific articles using phrase embeddings\",\n        \"TNT-KID: transformer-based neural tagger for keyword identification\",\n        \"An empirical study on neural keyphrase generation\",\n        \"Deep keyphrase generation\",\n        \"Textrank: Bringing order into text\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Keyphrase extraction in scientific publications\",\n        \"Phraseformer: Multimodal key-phrase extraction using transformer and graph embedding\",\n        \"Unsupervised learning of sentence embeddings using compositional n-gram features\",\n        \"A review of keyphrase extraction\",\n        \"Glove: Global vectors for word representation\",\n        \"Deep contextualized word representations\",\n        \"A primer in bertology: What we know about how BERT works\",\n        \"Keyphrase extraction from scholarly articles as sequence labeling using contextualized embeddings\",\n        \"Sasake: Syntax and semantics aware keyphrase extraction from research papers\",\n        \"Sifrank: A new baseline for unsupervised keyphrase extraction based on pre-trained language model\",\n        \"Single document keyphrase extraction using neighborhood knowledge\",\n        \"Using word embeddings to enhance keyword identification for scientific publications\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Big bird: Transformers for longer sequences\",\n        \"PEGASUS: pre-training with extracted gap-sentences for abstractive summarization\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in MDERank: A Masked Document Embedding Rank Approach for Unsupervised Keyphrase Extraction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}