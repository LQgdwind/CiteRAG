{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 60 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: NN-Defined Modulator: Reconfigurable and Portable Software Modulator on IoT Gateways\n\nPaper Abstract: Abstract A physical-layer modulator is a vital component for an IoT gateway to map the symbols to signals. However, due to the soldered hardware chipsets on the gateway’s motherboards or the diverse toolkits on different platforms for the software radio, the existing solutions either have limited extensibility or are platform-specific. Such limitation is hard to ignore when modulation schemes and hardware platforms have become extremely diverse. This paper presents a new paradigm of using neural networks as an abstraction layer for physical layer modulators in IoT gateway devices, referred to as NN-defined modulators. Our approach addresses the challenges of extensibility and portability for multiple technologies on various hardware platforms. The proposed NN-defined modulator uses a model-driven methodology rooted in solid mathematical foundations while having native support for hardware acceleration and portability to heterogeneous platforms. We conduct the evaluation of NN-defined modulators on different platforms, including Nvidia Jetson Nano and Raspberry Pi. Evaluations demonstrate that our NN-defined modulator effectively operates as conventional modulators and provides significant efficiency gains (up to 4.7×4.7\\times on Nvidia Jetson Nano and 1.1×1.1\\times on Raspberry Pi), indicating high portability. Furthermore, we show the real-world applications using our NN-defined modulators to generate ZigBee and WiFi packets, which are compliant with commodity TI CC2650 (ZigBee) and Intel AX201 (WiFi NIC), respectively.\n\n{retrieved_text}\n\nGenerate exactly 60 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 60\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Adi adalm-pluto\",\n        \"Apache tvm\",\n        \"Arm compute library\",\n        \"Gnu radio\",\n        \"Hardwario iot platforms\",\n        \"Matlab signal processing toolbox\",\n        \"Narrowband–internet of things (nb-iot)\",\n        \"Nvidia cuda toolkit\",\n        \"Nvidia jetson nano developer kit\",\n        \"Onnx: Open neural network exchange\",\n        \"Onnx runtime\",\n        \"Openvino\",\n        \"Pytorch\",\n        \"Raspberry pi\",\n        \"Scipy\",\n        \"Tensorflow\",\n        \"Texas instruments launchxl-cc2650\",\n        \"Up edge computing kit\",\n        \"Ieee standard for low-rate wireless networks\",\n        \"Cusignal\",\n        \"Secure multi-protocol gateway for internet of things\",\n        \"An architecture for software defined wireless networking\",\n        \"Mxnet: A flexible and efficient machine learning library for heterogeneous distributed systems\",\n        \"Zigbee/ieee 802.15. 4 summary\",\n        \"Comnet: Combination of deep learning and expert knowledge in ofdm receivers\",\n        \"A dsp acceleration framework for software-defined radios on x86 64\",\n        \"Amber: An advanced gateway solution to support heterogeneous iot technologies\",\n        \"Gnuradio running on embedded boards: porting to buildroot\",\n        \"Wireless communications\",\n        \"Deep learning, volume 1\",\n        \"Model-driven deep learning for physical layer communications\",\n        \"Bluetooth low energy\",\n        \"Sionna: An open-source library for next-generation physical layer research\",\n        \"Achieving receiver-side cross-technology communication with cross-decoding\",\n        \"Transparent cross-technology communication over data traffic\",\n        \"Bluebee: a 10,000 x faster cross-technology communication via phy emulation\",\n        \"Hardware accelerated sdr platform for adaptive air interfaces\",\n        \"Accelerating massive mimo uplink detection on gpu for sdr systems\",\n        \"Webee: Physical-layer cross-technology communication via emulation\",\n        \"Lte2b: Time-domain cross-technology emulation under lte constraints\",\n        \"Xfi: Cross-technology iot data collection via commodity wifi\",\n        \"Wibeacon: Expanding ble location-based services via wifi\",\n        \"Legiot: A lightweight edge gateway for the internet of things\",\n        \"An end-to-end block autoencoder for physical layer based on neural networks\",\n        \"Revisiting software defined radios in the iot era\",\n        \"An introduction to deep learning for the physical layer\",\n        \"Digital Communications\",\n        \"Autoencoder-based optical wireless communications systems\",\n        \"Neural network-based ofdm receiver for resource constrained iot devices\",\n        \"Empowering the iot heterogeneous wireless networking with software defined radio\",\n        \"Neural network dpd via backpropagation through a neural network model of the pa\",\n        \"X-disco: Cross-technology neighbor discovery\",\n        \"X-mimo: Cross-technology multi-user mimo\",\n        \"Symbol-level cross-technology communication via payload encoding\",\n        \"Networking support for bidirectional cross-technology communication\",\n        \"Deep learning for massive mimo csi feedback\",\n        \"Power of deep learning for channel estimation and signal detection in ofdm systems\",\n        \"Wireless home gateway: Software-defined radio architecture and applications\",\n        \"Deep-waveform: A learned ofdm receiver based on deep complex-valued convolutional networks\",\n        \"Joint transceiver optimization for wireless communication phy using neural network\"\n    ],\n    \"reasoning\": \"Selected these 60 references because they represent foundational work and recent advances in NN-Defined Modulator: Reconfigurable and Portable Software Modulator on IoT Gateways, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}