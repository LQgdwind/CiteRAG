{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: pyKT: A Python Library to Benchmark Deep Learning based Knowledge Tracing Models\n\nPaper Abstract: Abstract Knowledge tracing (KT) is the task of using students’ historical learning interaction data to model their knowledge mastery over time so as to make predictions on their future interaction performance. Recently, remarkable progress has been made of using various deep learning techniques to solve the KT problem. However, the success behind deep learning based knowledge tracing (DLKT) approaches is still left somewhat unknown and proper measurement and analysis of these DLKT approaches remain a challenge. First, data preprocessing procedures in existing works are often private and custom, which limits experimental standardization. Furthermore, existing DLKT studies often differ in terms of the evaluation protocol and are far away real-world educational contexts. To address these problems, we introduce a comprehensive python based benchmark platform, pyKT, to guarantee valid comparisons across DLKT methods via thorough evaluations. The pyKT library consists of a standardized set of integrated data preprocessing procedures on 7 popular datasets across different domains, and 10 frequently compared DLKT model implementations for transparent experiments. Results from our fine-grained and rigorous empirical KT studies yield a set of observations and suggestions for effective DLKT, e.g., wrong evaluation setting may cause label leakage that generally leads to performance inflation; and the improvement of many DLKT approaches is minimal compared to the very first DLKT model proposed by Piech et al. [25]. We have open sourced pyKT and our experimental results at https://pykt.org/. We welcome contributions from other research groups and practitioners.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Knowledge tracing with sequential key-value memory networks\",\n        \"Knowledge tracing: A survey\",\n        \"Learning factors analysis–a general method for cognitive model evaluation and improvement\",\n        \"Prerequisite-driven deep knowledge tracing\",\n        \"DIRT: deep learning enhanced item response theory for cognitive diagnosis\",\n        \"DAS3H: Modeling student learning and forgetting for optimally scheduling distributed practice of skills\",\n        \"Towards an appropriate query, key, and value computation for knowledge tracing\",\n        \"Knowledge tracing: Modeling the acquisition of procedural knowledge\",\n        \"Addressing the assessment challenge with an online system that tutors as it assesses\",\n        \"Context-aware attentive knowledge tracing\",\n        \"Option tracing: Beyond correctness analysis in knowledge tracing\",\n        \"Enhancing knowledge tracing via adversarial training\",\n        \"Dynamic bayesian networks for student modeling\",\n        \"Adaptive gamification for learning environments\",\n        \"Knowledge query network for knowledge tracing: How knowledge interacts with skills\",\n        \"EKT: Exercise-aware knowledge tracing for student performance prediction\",\n        \"A survey of knowledge tracing\",\n        \"Improving knowledge tracing via pre-training question embeddings\",\n        \"Tracing knowledge state with individual cognition and acquisition estimation\",\n        \"Deep knowledge tracing and dynamic student classification for knowledge tracing\",\n        \"Augmenting knowledge tracing by considering forgetting behavior\",\n        \"Graph-based knowledge tracing: Modeling student proficiency using graph neural network\",\n        \"A self-attentive model for knowledge tracing\",\n        \"RKT: relation-aware self-attention for knowledge tracing\",\n        \"Deep knowledge tracing\",\n        \"Deep knowledge tracing with transformers\",\n        \"Machine learning techniques for knowledge tracing: A systematic literature review\",\n        \"Deep learning models for knowledge tracing: Review and empirical evaluation\",\n        \"Learning process-consistent knowledge tracing\",\n        \"Convolutional knowledge tracing: Modeling individualization in student learning process\",\n        \"SAINT+: Integrating temporal features for EdNet correctness prediction\",\n        \"Algebra I 2005-2006 and Bridge to Algebra 2006-2007. Development data sets from KDD Cup 2010 Educational Data Mining Challenge\",\n        \"Oli engineering statics-fall 2011\",\n        \"Exercise-enhanced sequential modeling for student performance prediction\",\n        \"Factorization techniques for predicting student performance\",\n        \"BEKT: Deep Knowledge Tracing with Bidirectional Encoder Representations from Transformers\",\n        \"Structure-based Knowledge Tracing: An Influence Propagation View\",\n        \"Temporal cross-effects in knowledge tracing\",\n        \"Neural cognitive diagnosis for intelligent education systems\",\n        \"Instructions and guide for diagnostic questions: The NeurIPS 2020 education challenge\",\n        \"Back to the basics: Bayesian extensions of IRT outperform neural networks for proficiency estimation\",\n        \"Federated deep knowledge tracing\",\n        \"Going deeper with deep knowledge tracing\",\n        \"GIKT: A graph-based interaction model for knowledge tracing\",\n        \"Addressing two problems in deep knowledge tracing via prediction-consistent regularization\",\n        \"Dynamic Key-Value Memory Networks for Knowledge Tracing\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in pyKT: A Python Library to Benchmark Deep Learning based Knowledge Tracing Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}