{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 59 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: VNLP: Turkish NLP Package\n\nPaper Abstract: Abstract In this work, we present VNLP: the first dedicated, complete, open-source, well-documented, lightweight, production-ready, state-of-the-art Natural Language Processing (NLP) package for the Turkish language. It contains a wide variety of tools, ranging from the simplest tasks, such as sentence splitting and text normalization, to the more advanced ones, such as text and token classification models. Its token classification models are based on \"Context Model\", a novel architecture that is both an encoder and an auto-regressive model. NLP tasks solved by VNLP models include but are not limited to Sentiment Analysis, Named Entity Recognition, Morphological Analysis & Disambiguation and Part-of-Speech Tagging. Moreover, it comes with pre-trained word embeddings and corresponding SentencePiece Unigram tokenizers. VNLP has an open-source GitHub repository, ReadtheDocs documentation, PyPi package for convenient installation, Python and command-line API and a demo page to test all the functionality. Consequently, our main contribution is a complete, compact, easy-to-install and easy-to-use NLP package for Turkish. Keywords: Turkish NLP, Sentiment Analysis, Named Entity Recognition, Part-of-Speech Tagging, Spelling Correction, Dependency Parsing, Sentence Splitting, Text Normalization.\n\n{retrieved_text}\n\nGenerate exactly 59 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 59\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TensorFlow: Large-scale machine learning on heterogeneous systems\",\n        \"Towards a Cleaner Document-Oriented Multilingual Crawled Corpus\",\n        \"Zemberek-nlp\",\n        \"Turkishdelightnlp: A neural turkish nlp toolkit\",\n        \"Contradictory, my dear watson\",\n        \"Yemeksepeti sentiment analysis\",\n        \"Turkish abstractive text summarization using pretrained sequence-to-sequence models\",\n        \"Duygu analizi veri seti\",\n        \"Lstm network based sentiment analysis for customer reviews\",\n        \"Natural language processing with Python: analyzing text with the natural language toolkit\",\n        \"Enriching word vectors with subword information\",\n        \"Learning phrase representations using rnn encoder-decoder for statistical machine translation\",\n        \"Keras\",\n        \"Resources for turkish natural language processing: A critical survey\",\n        \"Yemek sepeti comments\",\n        \"Morphnet: A sequence-to-sequence model that combines morphological analysis and disambiguation\",\n        \"dbmdz/bert-base-turkish-uncased\",\n        \"Universal Dependencies\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Turkish reviews dataset\",\n        \"Improving named entity recognition by jointly learning to disambiguate morphological tags\",\n        \"Turkish tweets dataset\",\n        \"Long short-term memory\",\n        \"spaCy 2: Natural language understanding with Bloom embeddings, convolutional neural networks and incremental parsing\",\n        \"Xtreme: A massively multilingual multi-task benchmark for evaluating cross-lingual generalization\",\n        \"twitter-sentiment-analysis\",\n        \"Adam: A method for stochastic optimization\",\n        \"Text to sentence splitter\",\n        \"Named entity recognition on turkish tweets\",\n        \"A named entity recognition dataset for turkish\",\n        \"Sentencepiece: A simple and language independent subword tokenizer and detokenizer for neural text processing\",\n        \"Twitter dataset and evaluation of transformers for turkish sentiment analysis\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Jamspell\",\n        \"5k turkish tweets with incivil content\",\n        \"Cross-lingual name tagging and linking for 282 languages\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Software Framework for Topic Modelling with Large Corpora\",\n        \"Mukayese: Turkish nlp strikes back\",\n        \"Automatically annotated turkish corpus for named entity recognition and text categorization using large-scale gazetteers\",\n        \"On stopwords, filtering and data sparsity for sentiment analysis of twitter\",\n        \"Turkish sales comments\",\n        \"Finding a kneedle in a haystack: Detecting knee points in system behavior\",\n        \"turkish-deasciifier: Turkish deasciifier\",\n        \"The role of context in neural morphological disambiguation\",\n        \"Motion representations for articulated animation\",\n        \"turkish-tweets-sentiment-analysis\",\n        \"Turkishnerdata3labels\",\n        \"A statistical information extraction system for turkish\",\n        \"Tulap-an accessible and sustainable platform for turkish natural language processing resources\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"Lookupanalyzerdisambiguator\",\n        \"A morphology-aware network for morphological disambiguation\",\n        \"Turkish sentiment analysis\",\n        \"Bilkent turkish writings dataset\",\n        \"Learning morphological disambiguation rules for turkish\",\n        \"Improving massively multilingual neural machine translation and zero-shot translation\"\n    ],\n    \"reasoning\": \"Selected these 59 references because they represent foundational work and recent advances in VNLP: Turkish NLP Package, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}