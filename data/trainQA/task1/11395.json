{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Solving Hard Mizar Problems with Instantiation and Strategy Invention\n\nPaper Abstract: Abstract In this work, we prove over 3000 previously ATP-unproved Mizar/MPTP problems by using several ATP and AI methods, raising the number of ATP-solved Mizar problems from 75% to above 80%. First, we start to experiment with the cvc5 SMT solver which uses several instantiation-based heuristics that differ from the superposition-based systems, that were previously applied to Mizar, and add many new solutions. Then we use automated strategy invention to develop cvc5 strategies that largely improve cvc5’s performance on the hard problems. In particular, the best invented strategy solves over 14% more problems than the best previously available cvc5 strategy. We also show that different clausification methods have a high impact on such instantiation-based methods, again producing many new solutions. In total, the methods solve 3,021 (21.3%) of the 14,163 previously unsolved hard Mizar problems. This is a new milestone over the Mizar large-theory benchmark and a large strengthening of the hammer methods for Mizar.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The role of the Mizar Mathematical Library for interactive proof development in Mizar\",\n        \"Mizar: State-of-the-art and beyond\",\n        \"cvc5: A versatile and industrial-strength SMT solver\",\n        \"The SMT-LIB standard: Version 2.0\",\n        \"Playing with quantified satisfaction\",\n        \"Extending sledgehammer with SMT solvers\",\n        \"Hammering towards QED\",\n        \"Lash 1.0 (system description)\",\n        \"Guiding an instantiation prover with graph neural networks\",\n        \"Interpretation of a Mizar-like logic in first-order logic\",\n        \"First order proof problems extracted from an article in the MIZAR Mathematical Library\",\n        \"Z3: An Efficient SMT Solver\",\n        \"Seventeen provers under the hammer\",\n        \"Simplify: A theorem prover for program checking\",\n        \"Strategy synthesis for linear arithmetic games\",\n        \"Complete instantiation for quantified formulas in satisfiability modulo theories\",\n        \"Fast and slow Enigmas and parental guidance\",\n        \"The Isabelle ENIGMA\",\n        \"Mizar in a nutshell\",\n        \"Common syntax of the DFGSchwerpunktprogramm deduction\",\n        \"Graph sequence learning for premise selection\",\n        \"Targeted configuration of an SMT solver\",\n        \"ParamILS: an automatic algorithm configuration framework\",\n        \"MizAR 60 for Mizar 50\",\n        \"Automated invention of strategies and term orderings for vampire\",\n        \"BliStrTune: hierarchical invention of theorem proving strategies\",\n        \"ENIGMA: efficient learning-based inference guiding machine\",\n        \"Hammering Mizar by learning clause guidance\",\n        \"Fair and adventurous enumeration of quantifier instantiations\",\n        \"MizAR 40 for Mizar 40\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree\",\n        \"iprover - an instantiation-based theorem prover for first-order logic (system description)\",\n        \"First-order theorem proving and Vampire\",\n        \"SMAC3: A versatile bayesian optimization package for hyperparameter optimization\",\n        \"Mizar: the first 30 years\",\n        \"E-matching for fun and profit\",\n        \"Bitwuzla at the SMT-COMP 2020\",\n        \"Solving quantified bit-vectors using invertibility conditions\",\n        \"Syntax-guided quantifier instantiation\",\n        \"Property invariant embedding for automated reasoning\",\n        \"A neurally-guided, parallel theorem prover\",\n        \"lazyCoP: Lazy paramodulation meets neurally guided search\",\n        \"Revisiting enumerative instantiation\",\n        \"Solving quantified linear arithmetic by counterexample-guided instantiation\",\n        \"Finding conflicting instances of quantified formulas in SMT\",\n        \"Handbook of Automated Reasoning (in 2 volumes)\",\n        \"Towards learning quantifier instantiation in SMT\",\n        \"System description: E 1.8\",\n        \"Improving ENIGMA-style clause selection while learning from history\",\n        \"Vampire with a brain is a good ITP hammer\",\n        \"The TPTP problem library\",\n        \"MPTP – Motivation, Implementation, First Experiments\",\n        \"MPTP 0.2: Design, implementation, and initial experiments\",\n        \"BliStr: The Blind Strategymaker\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Solving Hard Mizar Problems with Instantiation and Strategy Invention, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}