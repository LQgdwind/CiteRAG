{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: BERT-of-Theseus: Compressing BERT by Progressive Module Replacing\n\nPaper Abstract: Abstract In this paper, we propose a novel model compression approach to effectively compress BERT by progressive module replacing. Our approach first divides the original BERT into several modules and builds their compact substitutes. Then, we randomly replace the original modules with their substitutes to train the compact modules to mimic the behavior of the original modules. We progressively increase the probability of replacement through the training. In this way, our approach brings a deeper level of interaction between the original and compact models. Compared to the previous knowledge distillation approaches for BERT compression, our approach does not introduce any additional loss function. Our approach outperforms existing knowledge distillation approaches on GLUE benchmark, showing a new perspective of model compression.111The code and pretrained model are available at https://github.com/JetRunner/BERT-of-Theseus\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Curriculum learning\",\n        \"Senteval: An evaluation toolkit for universal sentence representations\",\n        \"Predicting parameters in deep learning\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"Unified language model pre-training for natural language understanding and generation\",\n        \"Reducing transformer depth on demand with structured dropout\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Born-again neural networks\",\n        \"Compressing deep convolutional networks using vector quantization\",\n        \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding\",\n        \"Deep residual learning for image recognition\",\n        \"Channel pruning for accelerating very deep neural networks\",\n        \"Distilling the knowledge in a neural network\",\n        \"Tinybert: Distilling bert for natural language understanding\",\n        \"Reformer: The efficient transformer\",\n        \"LIT: Learned intermediate representation training for model compression\",\n        \"ALBERT: A Lite BERT for Self-supervised Learning of Language Representations\",\n        \"The winograd schema challenge\",\n        \"Improving multi-task deep neural networks via knowledge distillation for natural language understanding\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Are sixteen heads really better than one?\",\n        \"Curriculum dropout\",\n        \"Deep double descent: Where bigger models and more data hurt\",\n        \"Training tips for the transformer model\",\n        \"Intermediate-task transfer learning with pretrained language models: When and why does it work?\",\n        \"Squad: 100, 000+ questions for machine comprehension of text\",\n        \"Fitnets: Hints for thin deep nets\",\n        \"Distilbert, a distilled version of bert: smaller, faster, cheaper and lighter\",\n        \"Q-BERT: hessian based ultra low precision quantization of BERT\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"MASS: masked sequence to sequence pre-training for language generation\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Patient knowledge distillation for BERT model compression\",\n        \"Mobilebert: a compact task-agnostic BERT for resource-limited devices\",\n        \"Multilingual neural machine translation with knowledge distillation\",\n        \"Distilling task-specific knowledge from bert into simple neural networks\",\n        \"Well-read students learn better: On the importance of pre-training compact models\",\n        \"Attention is all you need\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Neural network acceptability judgments\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Doubly convolutional neural networks\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\",\n        \"Scheduled drophead: A regularization method for transformer models\",\n        \"Bert loses patience: Fast and robust inference with early exit\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in BERT-of-Theseus: Compressing BERT by Progressive Module Replacing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}