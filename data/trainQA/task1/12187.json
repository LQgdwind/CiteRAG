{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 66 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Practical Quantum Hoare Logic with Classical Variables, I\n\nPaper Abstract: Abstract In this paper, we present a Hoare-style logic for reasoning about quantum programs with classical variables. Our approach offers several improvements over previous work: 1. Enhanced expressivity of the programming language: Our logic applies to quantum programs with classical variables that incorporate quantum arrays and parameterized quantum gates, which have not been addressed in previous research on quantum Hoare logic, either with or without classical variables. 2. Intuitive correctness specifications: In our logic, preconditions and postconditions for quantum programs with classical variables are specified as a pair consisting of a classical first-order logical formula and a quantum predicate formula (possibly parameterized by classical variables). These specifications offer greater clarity and align more closely with the programmer’s intuitive understanding of quantum and classical interactions. 3. Simplified proof system: By introducing a novel idea in formulating a proof rule for reasoning about quantum measurements, along with (2), we develop a proof system for quantum programs that requires only minimal modifications to classical Hoare logic. Furthermore, this proof system can be effectively and conveniently combined with classical first-order logic to verify quantum programs with classical variables. As a result, the learning curve for quantum program verification techniques is significantly reduced for those already familiar with classical program verification techniques, and existing tools for verifying classical programs can be more easily adapted for quantum program verification.\n\n{retrieved_text}\n\nGenerate exactly 66 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 66\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"OpenQASM 3: a broader and deeper quantum assembly language\",\n        \"Verification of Sequential and Concurrent Programs\",\n        \"Relational proofs for quantum programs\",\n        \"symQV: automated symbolic verification of quantum programs\",\n        \"Quantum machine learning\",\n        \"The logic of quantum mechanics\",\n        \"Symbolic execution of Hadamard-Toffoli quantum circuits\",\n        \"Variational quantum algorithms\",\n        \"Reasoning about imperative quantum programs\",\n        \"An automated deductive verification framework for circuit-building quantum programs\",\n        \"Formal methods for quantum algorithms\",\n        \"Formal semantics of a classical-quantum language\",\n        \"Local reasoning about probabilistic behaviour for classical–quantum programs\",\n        \"Quantum weakest preconditions\",\n        \"Automated quantum program verification in probabilistic dynamic quantum logic\",\n        \"Symbolic execution for quantum error correction programs\",\n        \"Differentiable quantum programming with unbounded loops\",\n        \"Proof rules for the correctness of quantum programs\",\n        \"Verification of distributed quantum programs\",\n        \"Verification of nondeterministic quantum programs\",\n        \"Quantum Hoare logic with classical variables\",\n        \"Refinement calculus of quantum programs with projective assertions\",\n        \"Verifying probabilistic programs using a Hoare like logic\",\n        \"A Verified Software Toolchain for Quantum Programming\",\n        \"Abstract interpretation techniques for quantum computation\",\n        \"A logic for formal verification of quantum programs\",\n        \"A quantum interpretation of separating conjunction for local reasoning of quantum programs based on separation logic\",\n        \"Formal verification of quantum programs: theory, tools and challenges\",\n        \"Qafny: a quantum-program verifier\",\n        \"Quantum relational Hoare logic with expectations\",\n        \"Formal verification of quantum algorithms using quantum Hoare logic\",\n        \"Foundations of Program Verification\",\n        \"Weakly complete axiomatization of exogenous quantum propositional logic\",\n        \"Enabling accuracy-aware Quantum compilers using symbolic resource estimation\",\n        \"QbC: quantum correctness by construction\",\n        \"Theoretical and Practical High-Assurance Software Tools for Quantum Applications\",\n        \"Quantum entanglement analysis based on abstract interpretation\",\n        \"Formally Verified Quantum Programming\",\n        \"Towards a quantum programming language\",\n        \"Compilation, Optimization and Verification of Near-Term Quantum Computing\",\n        \"Beyond separation: toward a specification language for modular reasoning about quantum programs\",\n        \"Q# enabling scalable quantum computing and development with a high-level domain-specific language\",\n        \"Automated quantum program verification in dynamic quantum logic\",\n        \"Formal Verifcation of Quantum Software\",\n        \"Quantum Hoare logic with ghost variables\",\n        \"Quantum relational Hoare logic\",\n        \"On Quantum Programming Languages\",\n        \"On infinite direct products\",\n        \"Reasoning about recursive quantum programs\",\n        \"On incorrectness logic for quantum programs\",\n        \"Approximate relational reasoning for quantum programs\",\n        \"Floyd-Hoare logic for quantum programs\",\n        \"Toward automatic verification of quantum programs\",\n        \"Birkhoff-von Neumann quantum logic as an assertion language for quantum programs\",\n        \"Foundations of Quantum Programming (Second Edition)\",\n        \"A practical quantum Hoare logic with classical variables, II\",\n        \"A flowchart language for quantum programming\",\n        \"Quantum recursive programming with quantum case statements\",\n        \"Verification of recursively defined quantum circuits\",\n        \"Reasoning about parallel quantum programs\",\n        \"Quantum temporal logic and reachability problems of matrix semigroups\",\n        \"Quantum abstract interpretation\",\n        \"A quantum interpretation of bunched logic & quantum separation logic\",\n        \"CoqQ: foundational verification of quantum programs\",\n        \"An applied quantum Hoare logic\",\n        \"On the principles of differentiable quantum programming languages\"\n    ],\n    \"reasoning\": \"Selected these 66 references because they represent foundational work and recent advances in A Practical Quantum Hoare Logic with Classical Variables, I, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}