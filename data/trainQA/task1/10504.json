{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CAMBranch: Contrastive Learning with Augmented MILPs for Branching\n\nPaper Abstract: Abstract Recent advancements have introduced machine learning frameworks to enhance the Branch and Bound (B&B) branching policies for solving Mixed Integer Linear Programming (MILP). These methods, primarily relying on imitation learning of Strong Branching, have shown superior performance. However, collecting expert samples for imitation learning, particularly for Strong Branching, is a time-consuming endeavor. To address this challenge, we propose Contrastive Learning with Augmented MILPs for Branching (CAMBranch), a framework that generates Augmented MILPs (AMILPs) by applying variable shifting to limited expert data from their original MILPs. This approach enables the acquisition of a considerable number of labeled expert samples. CAMBranch leverages both MILPs and AMILPs for imitation learning and employs contrastive learning to enhance the model’s ability to capture MILP features, thereby improving the quality of branching decisions. Experimental results demonstrate that CAMBranch, trained with only 10% of the complete dataset, exhibits superior performance. Ablation studies further validate the effectiveness of our method.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Branching rules revisited\",\n        \"Deep learning using rectified linear units (relu)\",\n        \"Design of virtual topologies for large optical networks through an efficient MILP formulation\",\n        \"A machine learning-based approximation of strong branching\",\n        \"Finding cuts in the TSP (A preliminary report), volume 95\",\n        \"A theoretical analysis of contrastive unsupervised representation learning\",\n        \"Set covering algorithms using cutting planes, heuristics, and subgradient optimization: A computational study\",\n        \"Learning to branch\",\n        \"Cyclic scheduling of multi-cluster tools based on mixed integer programming\",\n        \"Machine learning for combinatorial optimization: A methodological tour d’horizon\",\n        \"Unsupervised learning of visual features by contrasting cluster assignments\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Big self-supervised models are strong semi-supervised learners\",\n        \"Exploring simple siamese representation learning\",\n        \"Improved baselines with momentum contrastive learning\",\n        \"Decision diagrams for optimization\",\n        \"A comparison of heuristics and relaxations for the capacitated plant location problem\",\n        \"A theoretical and computational analysis of full strong-branching\",\n        \"A framework for contrastive self-supervised learning and designing A new approach\",\n        \"CERT: contrastive self-supervised learning for language understanding\",\n        \"Fast graph representation learning with pytorch geometric\",\n        \"An exploratory computational analysis of dual degeneracy in mixed-integer programming\",\n        \"Exact combinatorial optimization with graph convolutional neural networks\",\n        \"Neural message passing for quantum chemistry\",\n        \"Declutr: Deep contrastive learning for unsupervised textual representations\",\n        \"The SCIP Optimization Suite 6.0\",\n        \"Milp for a variant of pickup & delivery problem for both passengers and goods transportation\",\n        \"Bootstrap your own latent - A new approach to self-supervised learning\",\n        \"Hybrid models for learning to branch\",\n        \"A hybrid cp/milp method for scheduling with energy costs\",\n        \"Momentum contrast for unsupervised visual representation learning\",\n        \"Pretraining with contrastive sentence objectives improves discourse performance of language models\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Learning to branch in mixed integer programming\",\n        \"Information-based branching schemes for binary linear mixed integer problems\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"An automatic method of solving discrete programming problems\",\n        \"Towards a universal test suite for combinatorial auction algorithms\",\n        \"Learning to branch with tree-aware branching transformers\",\n        \"Branching on nonchimerical fractionalities\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"Solving mixed integer programs using neural networks\",\n        \"Principles of neurodynamics. perceptrons and the theory of brain mechanisms\",\n        \"Supervised contrastive learning\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Efficient training of artificial neural networks for autonomous navigation\",\n        \"Learning to branch with tree mdps\",\n        \"Synergy analysis of collaborative supply chain management in energy systems using multi-period milp\",\n        \"Representation learning with contrastive predictive coding\",\n        \"Pisces: A multi-modal data augmentation approach for drug combination synergy prediction\",\n        \"Are graph augmentations necessary?: Simple graph contrastive learning for recommendation\",\n        \"Parameterizing branch-and-bound search trees to learn branching policies\",\n        \"A survey for solving mixed integer programming via machine learning\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in CAMBranch: Contrastive Learning with Augmented MILPs for Branching, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}