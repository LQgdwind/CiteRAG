{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SINGA-Easy: An Easy-to-Use Framework for MultiModal Analysis\n\nPaper Abstract: Abstract. Deep learning has achieved great success in a wide spectrum of multimedia applications such as image classification, natural language processing and multimodal data analysis. Recent years have seen the development of many deep learning frameworks that provide a high-level programming interface for users to design models, conduct training and deploy inference. However, it remains challenging to build an efficient end-to-end multimedia application with most existing frameworks. Specifically, in terms of usability, it is demanding for non-experts to implement deep learning models, obtain the right settings for the entire machine learning pipeline, manage models and datasets, and exploit external data sources all together. Further, in terms of adaptability, elastic computation solutions are much needed as the actual serving workload fluctuates constantly, and scaling the hardware resources to handle the fluctuating workload is typically infeasible. To address these challenges, we introduce SINGA-Easy, a new deep learning framework that provides distributed hyper-parameter tuning at the training stage, dynamic computational cost control at the inference stage, and intuitive user interactions with multimedia contents facilitated by model explanation. Our experiments on the training and deployment of multi-modality data analysis applications show that the framework is both usable and adaptable to dynamic inference loads. We implement SINGA-Easy on top of Apache SINGA and demonstrate our system with the entire machine learning life cycle.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TensorFlow: A System for Large-Scale Machine Learning\",\n        \"Deep Speech 2: End-to-End Speech Recognition in English and Mandarin\",\n        \"Large-Scale Machine Learning with Stochastic Gradient Descent\",\n        \"Stochastic Gradient Descent Tricks\",\n        \"Model Slicing for Supporting Complex Analytics with Elastic Inference Cost and Resource Constraints\",\n        \"Effective and Efficient Dropout for Deep Convolutional Neural Networks\",\n        \"XGBoost: A Scalable Tree Boosting System\",\n        \"Clipper: A Low-Latency Online Prediction Serving System\",\n        \"ImageNet: A large-scale hierarchical image database\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Efficient and Robust Automated Machine Learning\",\n        \"Machine learning, medical diagnosis, and biomedical engineering research-commentary\",\n        \"AllenNLP: A Deep Semantic Natural Language Processing Platform\",\n        \"Explainable AI: The New 42?\",\n        \"Mask R-CNN\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Random decision forests\",\n        \"What do we need to build explainable AI systems for the medical domain?\",\n        \"Hopsworks: Improving User Experience and Development on Hadoop with Scalable, Strongly Consistent Metadata\",\n        \"Auto-Keras: An Efficient Neural Architecture Search System\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Auto-WEKA 2.0: Automatic model selection and hyperparameter optimization in WEKA\",\n        \"Learning multiple layers of features from tiny images\",\n        \"H2O AutoML: Scalable Automatic Machine Learning\",\n        \"An ADMM Based Framework for AutoML Pipeline Configuration\",\n        \"CDAS: A Crowdsourcing Data Analytics System\",\n        \"Adaptive lightweight regularization tool for complex analytics\",\n        \"Towards AutoML in the presence of Drift: first results\",\n        \"SINGA: A Distributed Deep Learning Platform\",\n        \"Classifier ensemble construction with rotation forest to improve medical diagnosis performance of machine learning algorithms\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Scikit-learn: Machine Learning in Python\",\n        \"BOA: The Bayesian optimization algorithm\",\n        \"RISE: Randomized Input Sampling for Explanation of Black-box Models\",\n        \"YOLOv3: An Incremental Improvement\",\n        \"”Why Should I Trust You?”: Explaining the Predictions of Any Classifier\",\n        \"A Survey on Data Collection for Machine Learning: A Big Data - AI Integration Perspective\",\n        \"Grad-CAM: Visual Explanations from Deep Networks via Gradient-Based Localization\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"Practical Bayesian Optimization of Machine Learning Algorithms\",\n        \"Designing theory-driven user-centric explainable AI\",\n        \"Should health care demand interpretable artificial intelligence or accept “black box” medicine?\",\n        \"Rafiki: Machine Learning as an Analytics Service System\",\n        \"Effective deep learning-based multi-modal retrieval\",\n        \"Database meets deep learning: Challenges and opportunities\",\n        \"ESPnet: End-to-End Speech Processing Toolkit\",\n        \"ImageNet Training in Minutes\",\n        \"Model-Switching: Dealing with Fluctuating Workloads in Machine-Learning-as-a-Service Systems\",\n        \"Auto-PyTorch Tabular: Multi-Fidelity MetaLearning for Efficient and Robust AutoDL\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in SINGA-Easy: An Easy-to-Use Framework for MultiModal Analysis, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}