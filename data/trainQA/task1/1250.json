{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Generation of Structured Objects with Constrained Adversarial Networks\n\nPaper Abstract: Abstract Generative Adversarial Networks (GANs) struggle to generate structured objects like molecules and game maps. The issue is that structured objects must satisfy hard requirements (e.g., molecules must be chemically valid) that are difficult to acquire from examples alone. As a remedy, we propose Constrained Adversarial Networks (CANs), an extension of GANs in which the constraints are embedded into the model during training. This is achieved by penalizing the generator proportionally to the mass it allocates to invalid structures. In contrast to other generative models, CANs support efficient inference of valid structures (with high probability) and allows to turn on and off the learned constraints at inference time. CANs handle arbitrary logical constraints and leverage knowledge compilation techniques to efficiently evaluate the disagreement between the model and the constraints. Our setup is further extended to hybrid logical-neural constraints for capturing very complex constraints, like graph reachability. An extensive empirical analysis shows that CANs efficiently generate valid structures that are both high-quality and novel.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Progressive growing of gans for improved quality, stability, and variation\",\n        \"Stackgan: Text to photo-realistic image synthesis with stacked generative adversarial networks\",\n        \"Unpaired image-to-image translation using cycle-consistent adversarial networks\",\n        \"Generative adversarial nets\",\n        \"A semantic loss function for deep learning with symbolic knowledge\",\n        \"Discriminator rejection sampling\",\n        \"Probabilistic graphical models: principles and techniques\",\n        \"Learning design patterns with bayesian grammar induction\",\n        \"Sum-product networks: A new deep architecture\",\n        \"Probabilistic sentential decision diagrams\",\n        \"A knowledge compilation map\",\n        \"Objective-reinforced generative adversarial networks (ORGAN) for sequence generation models\",\n        \"MolGAN: An implicit generative model for small molecular graphs\",\n        \"Embedding decision diagrams into generative adversarial networks\",\n        \"Bootstrapping conditional gans for video game level generation\",\n        \"Deep generative models with learnable knowledge constraints\",\n        \"Prediction of protein Œ≤ùõΩ\\\\beta-residue contacts by markov logic networks with grounding-specific weights\",\n        \"DeepProbLog: Neural probabilistic logic programming\",\n        \"Neural markov logic networks\",\n        \"End-to-end differentiable proving\",\n        \"Logic tensor networks for semantic image interpretation\",\n        \"LYRICS: a General Interface Layer to Integrate AI and Deep Learning\",\n        \"Improved techniques for training gans\",\n        \"Which training methods for gans do actually converge?\",\n        \"f-GAN: Training generative neural samplers using variational divergence minimization\",\n        \"Wasserstein generative adversarial networks\",\n        \"Spectral normalization for generative adversarial networks\",\n        \"On the uniform convergence of relative frequencies of events to their probabilities\",\n        \"Mmd gan: Towards deeper understanding of moment matching network\",\n        \"On a convex logic fragment for learning and reasoning\",\n        \"On probabilistic inference by weighted model counting\",\n        \"Inference and learning in probabilistic logic programs using weighted boolean formulas\",\n        \"Lifted probabilistic inference by first-order knowledge compilation\",\n        \"Sdd: A new canonical representation of propositional knowledge bases\",\n        \"Infogan: Interpretable representation learning by information maximizing generative adversarial nets\",\n        \"Designing random graph models using variational autoencoders with applications to chemical design\",\n        \"Procedural content generation via machine learning (pcgml)\",\n        \"Super mario as a string: Platformer level generation via lstms\",\n        \"Game level generation from gameplay videos\",\n        \"Controllable procedural content generation via constrained multi-dimensional markov chain sampling\",\n        \"Evolving mario levels in the latent space of a deep convolutional generative adversarial network\",\n        \"The vglc: The video game level corpus\",\n        \"Automatic chemical design using a data-driven continuous representation of molecules\",\n        \"Grammar variational autoencoder\",\n        \"Syntax-directed variational autoencoder for molecule generation\",\n        \"Nevae: A deep generative model for molecular graphs\",\n        \"Discrete object generation with reversible inductive construction\",\n        \"Sequence tutor: Conservative fine-tuning of sequence generation models with kl-control\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Efficient Generation of Structured Objects with Constrained Adversarial Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}