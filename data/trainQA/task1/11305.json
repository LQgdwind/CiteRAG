{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Estimate System Specifications in Linear Temporal Logic using Transformers and Mamba\n\nPaper Abstract: Abstract Temporal logic is a framework for representing and reasoning about propositions that evolve over time. It is commonly used for specifying requirements in various domains, including hardware and software systems, as well as robotics. Specification mining or formula generation involves extracting temporal logic formulae from system traces and has numerous applications, such as detecting bugs and improving interpretability. Although there has been a surge of deep learning-based methods for temporal logic satisfiability checking in recent years, the specification mining literature has been lagging behind in adopting deep learning methods despite their many advantages, such as scalability. In this paper, we introduce autoregressive models that can generate linear temporal logic formulae from traces, towards addressing the specification mining problem. We propose multiple architectures for this task: transformer encoder-decoder, decoder-only transformer, and Mamba, which is an emerging alternative to transformer models. Additionally, we devise a metric for quantifying the distinctiveness of the generated formulae and a straightforward algorithm to enforce the syntax constraints. Our experiments show that the proposed architectures yield promising results, generating correct and distinct formulae at a fraction of the compute cost needed for the combinatorial baseline.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Syslite: Syntax-guided synthesis of pltl formulas from finite traces\",\n        \"Principles of model checking\",\n        \"Data-driven statistical learning of temporal logic properties\",\n        \"Automatic failure explanation in cps models\",\n        \"Survey on mining signal temporal logic specifications\",\n        \"Validation of qualitative models of genetic regulatory networks by model checking: analysis of the nutritional stress response in escherichia coli\",\n        \"Formal Methods for Discrete-Time Dynamical Systems\",\n        \"A decision tree approach to data classification using signal temporal logic\",\n        \"Learning interpretable models expressed in linear temporal logic\",\n        \"Video mamba suite: State space model as a versatile alternative for video understanding\",\n        \"Handbook of model checking\",\n        \"From Spot 2.0 to Spot 2.10: Whatâ€™s new?\",\n        \"Temporal logic motion planning for dynamic robots\",\n        \"The complexity of learning linear temporal formulas from examples\",\n        \"Learning linear temporal properties from noisy data: A maxsat-based approach\",\n        \"Learning linear temporal properties for autonomous robotic systems\",\n        \"Sequence-to-sequence language grounding of non-markovian task specifications\",\n        \"Mamba: Linear-time sequence modeling with selective state spaces\",\n        \"Combining recurrent, convolutional, and continuous-time models with linear state space layers\",\n        \"Efficiently Modeling Long Sequences with Structured State Spaces\",\n        \"Teaching temporal logics to neural networks\",\n        \"Mining requirements from closed-loop control models\",\n        \"Synthesis of monitoring rules via data mining\",\n        \"Bayesian inference of linear temporal logic specifications for contrastive explanations\",\n        \"Temporal logic planning and control of robotic swarms by hierarchical abstractions\",\n        \"General ltl specification mining (t)\",\n        \"Backpropagation through signal temporal logic specifications: Infusing logical structure into gradient-based methods\",\n        \"Lang2LTL: Translating natural language commands to temporal specification with large language models\",\n        \"Deep learning for generic object detection: A survey\",\n        \"Mining environment assumptions for cyber-physical system models\",\n        \"Learning linear temporal properties\",\n        \"Grounding language to non-markovian tasks with no supervision of task specifications\",\n        \"The temporal logic of programs\",\n        \"Learning from demonstrations using signal temporal logic in stochastic and continuous domains\",\n        \"Scalable anytime algorithms for learning fragments of linear temporal logic\",\n        \"Syntactically constrained sampling for language models\",\n        \"Linear temporal logic motion planning for teams of underactuated robots using satisfiability modulo convex programming\",\n        \"The complexity of propositional linear temporal logics\",\n        \"Multi-agent motion planning from signal temporal logic specifications\",\n        \"Llama: Open and efficient foundation language models\",\n        \"On robustness metrics for learning stl tasks\",\n        \"Attention is all you need\",\n        \"Logical clustering and learning for time-series data\",\n        \"Survey on learning-based formal methods: Taxonomy, applications and possible future directions\",\n        \"A survey of large language models\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Learning to Estimate System Specifications in Linear Temporal Logic using Transformers and Mamba, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}