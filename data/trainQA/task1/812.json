{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 66 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: How Does That Sound? Multi–Language SpokenName2Vec Algorithm Using Speech Generation and Deep Learning\n\nPaper Abstract: Abstract Searching for information about a specific person is an online activity frequently performed by many users. In most cases, users are aided by queries containing a name in Web search engines for finding their will. Typically, Web search engines provide just a few accurate results associated with a name-containing query. Most existing solutions for suggesting synonyms in online search are based on pattern matching and phonetic encoding, however very often, the performance of such solutions is less than optimal. In this paper, we propose SpokenName2Vec, a novel and generic algorithm which addresses the similar name suggestion problem by utilizing automated speech generation, and deep learning to produce spoken name embeddings. These sophisticated and innovative embeddings capture the way people pronounce names in any language and accent. Utilizing a name’s pronunciation can be helpful for both differentiating and detecting names that sound alike, but are written differently. The proposed approach was demonstrated on a large-scale dataset consisting of 250,000 forenames and evaluated using a machine learning classifier and 7,399 names with their verified synonyms.The performance of the proposed approach was found to be superior to 10 other algorithms evaluated in this study, including well used phonetic encoding and string similarity algorithms, and two recently proposed algorithms (e.g., Name2Vec and GRAFT). The results obtained suggest that the proposed algorithm could serve as a useful and valuable tool for solving the problem of synonym suggestion.\n\n{retrieved_text}\n\nGenerate exactly 66 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 66\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Web appearance disambiguation of personal names based on network motif\",\n        \"Retrieval effectiveness of proper name search methods\",\n        \"Disambiguating people in search\",\n        \"Google yourself\",\n        \"Real life, real users, and real needs: a study and analysis of user queries on the web\",\n        \"From e-sex to e-commerce: Web search changes\",\n        \"People search on the web\",\n        \"A comparison of personal name matching: Techniques and practical issues\",\n        \"Information for the first name of anthony - behind the name website\",\n        \"Getty’s synoname™ and its cousins: A survey of applications of personal name-matching algorithms\",\n        \"Tolerating spelling errors during patient validation\",\n        \"Rise of deep learning for genomic, proteomic, and metabolomic data integration in precision medicine\",\n        \"Development and validation of a deep learning algorithm for detection of diabetic retinopathy in retinal fundus photographs\",\n        \"Efficient estimation of word representations in vector space\",\n        \"It runs in the family: Searching for similar names using digitized family trees\",\n        \"Name2vec: Personal names embeddings\",\n        \"Voice-how humans communicate?\",\n        \"Voice recognition\",\n        \"Voizlock-human voice authentication system using hidden markov model\",\n        \"Predicting voice behavior in work groups\",\n        \"Voice over internet protocol (voip)\",\n        \"Approximate string matching\",\n        \"Support vector machines and word2vec for text classification with semantic features\",\n        \"Word embedding based generalized language model for information retrieval\",\n        \"Distributed representations of sentences and documents\",\n        \"node2vec: Scalable feature learning for networks\",\n        \"App2vec: Vector modeling of mobile apps and applications\",\n        \"song2vec: Determining song similarity using deep unsupervised learning\",\n        \"emoji2vec: Learning emoji representations from their description\",\n        \"Speech2vec: A sequence-to-sequence framework for learning word embeddings from speech\",\n        \"Towards unsupervised speech-to-text translation\",\n        \"Audio-linguistic embeddings for spoken sentences\",\n        \"pyaudioanalysis: An open-source python library for audio signal analysis\",\n        \"Turi create sound classifier\",\n        \"Application of pulse-code modulation to sound-signal distribution in a broadcasting network\",\n        \"Comparative performance analysis of hamming, hanning and blackman window\",\n        \"A comparison of string distance metrics for name-matching tasks\",\n        \"Database conceptual schema matching\",\n        \"A technique for computer detection and correction of spelling errors\",\n        \"Binary codes capable of correcting deletions, insertions, and reversals\",\n        \"Probabilistic linkage of large public health data files\",\n        \"Advances in record-linkage methodology as applied to matching the 1985 census of tampa, florida\",\n        \"The state of record linkage and current research problems\",\n        \"A bangla phonetic encoding for better spelling suggesions\",\n        \"Entity matching in online social networks\",\n        \"Application of phonetic encoding for analyzing similarity of patient’s data: Bangladesh perspective\",\n        \"Is soundex good enough for you? on the hidden risks of soundex-based name searching\",\n        \"Hanging on the metaphone\",\n        \"Practical algorithms for programmers\",\n        \"Phonetic spelling filter for keyword selection in drug mention mining from social media\",\n        \"The double metaphone search algorithm\",\n        \"The guth algorithm and the nominal record linkage of multi-ethnic populations\",\n        \"Accessing individual records from personal data files using non-unique identifiers, volume 13\",\n        \"Overview of the first text retrieval conference (trec-1)\",\n        \"Implementation of the smart information retrieval system\",\n        \"Automatic discovery of personal name aliases from the web\",\n        \"Pipl about us\",\n        \"Zoominfo about webpage\",\n        \"Wikitree database dumps\",\n        \"wikitree.com\",\n        \"gtts (google text-to-speech) python library\",\n        \"behind the name: the etymology and history of first names.\",\n        \"Information about behind the name website\",\n        \"Related names for ed - behind the name website\",\n        \"Related names for elisabeth - behind the name website\",\n        \"The anatomy of a large-scale hypertextual web search engine\"\n    ],\n    \"reasoning\": \"Selected these 66 references because they represent foundational work and recent advances in How Does That Sound? Multi–Language SpokenName2Vec Algorithm Using Speech Generation and Deep Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}