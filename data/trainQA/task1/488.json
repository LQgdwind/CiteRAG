{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Knowledge Graphs for Processing Scientific Data: Challenges and Prospects\n\nPaper Abstract: Abstract. There is growing interest in the use of Knowledge Graphs (KGs) for the representation, exchange, and reuse of scientific data. While KGs offer the prospect of improving the infrastructure for working with scalable and reusable scholarly data consistent with the FAIR (Findability, Accessibility, Interoperability, and Reusability) principles, the state-of-the-art Data Management Systems (DMSs) for processing large KGs leave somewhat to be desired. In this paper, we studied the performance of some of the major DMSs in the context of querying KGs with the goal of providing a finely-grained, comparative analysis of DMSs representing each of the four major DMS types. We experimented with four well-known scientific KGs, namely, Allie, Cellcycle, DrugBank, and LinkedSPL against Virtuoso, Blazegraph, RDF-3X, and MongoDB as the representative DMSs. Our results suggest that the DMSs display limitations in processing complex queries on the KG datasets. Depending on the query type, the performance differentials can be several orders of magnitude. Also, no single DMS appears to offer consistently superior performance. We present an analysis of the underlying issues and outline two integrated approaches and proposals for resolving the problem.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Scalable Semantic Web Data Management Using Vertical Partitioning\",\n        \"SW-Store: a vertically partitioned DBMS for Semantic Web data management\",\n        \"The Beckman Report on Database Research\",\n        \"Diversified Stress Testing of RDF Data Management Systems\",\n        \"Building Self-clustering RDF Databases Using Tunable-LSH\",\n        \"AMADA: Web Data Repositories in the Amazon Cloud\",\n        \"Non-Volatile Memory Database Management Systems\",\n        \"Requisite variety and its implications for the control of complex systems\",\n        \"Left Bit Right: For SPARQL Join Queries with OPTIONAL Patterns (Left-outer-joins)\",\n        \"The Berlin SPARQL Benchmark\",\n        \"Sesame: A Generic Architecture for Storing and Querying RDF and RDF Schema\",\n        \"Enabling JSON Document Stores in Relational Systems.\",\n        \"Rethinking Database System Architecture: Towards a Self-Tuning RISC-Style Database System\",\n        \"SEED: A system for entity exploration and debugging in large-scale knowledge graphs\",\n        \"NoSQL Databases for RDF: An Empirical Evaluation\",\n        \"Apples and Oranges: A Comparison of RDF Benchmarks and Real RDF Datasets\",\n        \"The bigdawg polystore system\",\n        \"RDF Support in the Virtuoso DBMS\",\n        \"Main Memory Database Systems\",\n        \"The Volcano optimizer generator: extensibility and efficient search\",\n        \"Querying Knowledge Graphs by Example Entity Tuples\",\n        \"RDF in the clouds: a survey\",\n        \"Jena-HBase: A Distributed, Scalable and Efficient RDF Triple Store\",\n        \"Taming Subgraph Isomorphism for RDF Query Processing\",\n        \"Adaptive Execution of Compiled Queries\",\n        \"How to Fit when No One Size Fits.\",\n        \"Multi-model Database Management Systems - A Look Forward\",\n        \"Jena: a Semantic Web toolkit\",\n        \"Synthesizing Knowledge Graphs for Link and Type Prediction Benchmarking\",\n        \"Gauging triple stores with actual biological data\",\n        \"Scalable Join Processing on Very Large RDF Graphs\",\n        \"The RDF-3X engine for scalable management of RDF data\",\n        \"A Survey of RDF Data Management Systems\",\n        \"H2RDF+: High-performance distributed joins over large-scale RDF graphs\",\n        \"H2RDF: Adaptive Query Processing on RDF Data in the Cloud.\",\n        \"Revisiting RISC-style Data Management System Design.\",\n        \"SPARQL in the Cloud Using Rya\",\n        \"How Representative Is a SPARQL Benchmark? An Analysis of RDF Triplestore Benchmarks\",\n        \"Column-store Support for RDF Data Management: Not All Swans Are White\",\n        \"SPARQL Basic Graph Pattern Optimization Using Selectivity Estimation\",\n        \"C-store: A Column-oriented DBMS\",\n        \"“One Size Fits All”: An Idea Whose Time Has Come and Gone\",\n        \"The End of an Architectural Era: (It’s Time for a Complete Rewrite)\",\n        \"“One Size Fits All?-Part 2: Benchmarking Results.”\",\n        \"How to Architect a Query Compiler, Revisited\",\n        \"Fundamentals of Physical Design and Query Compilation\",\n        \"Hexastore: Sextuple Indexing for Semantic Web Data Management\",\n        \"The FAIR Guiding Principles for scientific data management and stewardship\",\n        \"BioBenchmark Toyama 2012: an evaluation of the performance of triple stores on biological data\",\n        \"RDF Data Storage and Query Processing Schemes: A Survey\",\n        \"gStore: A Graph-based SPARQL Query Engine\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Knowledge Graphs for Processing Scientific Data: Challenges and Prospects, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}