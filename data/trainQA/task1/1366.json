{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Offline Meta-Reinforcement Learning with Advantage Weighting\n\nPaper Abstract: Abstract This paper introduces the offline meta-reinforcement learning (offline meta-RL) problem setting and proposes an algorithm that performs well in this setting. Offline meta-RL is analogous to the widely successful supervised learning strategy of pre-training a model on a large batch of fixed, pre-collected data (possibly from various tasks) and fine-tuning the model to a new task with relatively little data. That is, in offline meta-RL, we meta-train on fixed, pre-collected data from several tasks in order to adapt to a new task with a very small amount (less than 5 trajectories) of data from the new task. By nature of being offline, algorithms for offline meta-RL can utilize the largest possible pool of training data available and eliminate potentially unsafe or costly data collection during meta-training. This setting inherits the challenges of offline RL, but it differs significantly because offline RL does not generally consider a) transfer to new tasks or b) limited data from the test task, both of which we face in offline meta-RL. Targeting the offline meta-RL setting, we propose Meta-Actor Critic with Advantage Weighting (MACAW), an optimization-based meta-learning algorithm that uses simple, supervised regression objectives for both the inner and outer loop of meta-training. On offline variants of common meta-RL benchmarks, we empirically find that this approach enables fully offline meta-reinforcement learning and achieves notable gains over prior methods. Code available at https://sites.google.com/view/macaw-metarl.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"An optimistic perspective on offline reinforcement learning\",\n        \"When maml can adapt fast and how to assist when it cannot\",\n        \"Meta-learning via learned loss\",\n        \"On the optimization of a synaptic learning rule\",\n        \"Torchmeta: A Meta-Learning library for PyTorch\",\n        \"Offline meta reinforcement learning\",\n        \"Rl2: Fast reinforcement learning via slow reinforcement learning\",\n        \"Meta-q-learning\",\n        \"Meta-learning and universality: Deep representations and gradient descent can approximate any learning algorithm\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"One-shot visual imitation learning via meta-learning\",\n        \"Learning to Learn with Gradients\",\n        \"Addressing function approximation error in actor-critic methods\",\n        \"Off-policy deep reinforcement learning without exploration\",\n        \"Generalized inner loop meta-learning\",\n        \"Meta-reinforcement learning of structured exploration strategies\",\n        \"Hypernetworks\",\n        \"Soft actor-critic: Off-policy maximum entropy deep reinforcement learning with a stochastic actor\",\n        \"Evolved policy gradients\",\n        \"Meta reinforcement learning as task inference\",\n        \"Way off-policy batch deep reinforcement learning of implicit human preferences in dialog\",\n        \"Adam: A method for stochastic optimization\",\n        \"Improving generalization in meta reinforcement learning using learned objectives\",\n        \"Stabilizing off-policy q-learning via bootstrapping error reduction\",\n        \"Human-level concept learning through probabilistic program induction\",\n        \"Offline reinforcement learning: Tutorial, review, and perspectives on open problems\",\n        \"Information-theoretic task selection for meta-reinforcement learning\",\n        \"Guided meta-policy search\",\n        \"Meta-learning with temporal convolutions\",\n        \"Learning to adapt in dynamic, real-world environments through meta-reinforcement learning\",\n        \"Accelerating online reinforcement learning with offline datasets\",\n        \"Advantage-weighted regression: Simple and scalable off-policy reinforcement learning\",\n        \"Reinforcement learning by reward-weighted regression for operational space control\",\n        \"Meta-learning with implicit gradients\",\n        \"Efficient off-policy meta-reinforcement learning via probabilistic context variables\",\n        \"Promp: Proximal meta-policy search\",\n        \"Meta-learning with latent embedding optimization\",\n        \"Meta reinforcement learning with latent variable gaussian processes\",\n        \"Evolutionary principles in self-referential learning\",\n        \"Learning to learn: Introduction and overview\",\n        \"Matching networks for one shot learning\",\n        \"Learning to reinforcement learn\",\n        \"Behavior regularized offline reinforcement learning\",\n        \"Understanding short-horizon bias in stochastic meta-optimization\",\n        \"Norml: No-reward meta learning\",\n        \"Meta-world: A benchmark and evaluation for multi-task and meta reinforcement learning\",\n        \"Varibad: A very good method for bayes-adaptive deep rl via meta-learning\",\n        \"Fast context adaptation via meta-learning\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Offline Meta-Reinforcement Learning with Advantage Weighting, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}