{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Syn-QG: Syntactic and Shallow Semantic Rules for Question Generation\n\nPaper Abstract: Abstract Question Generation (QG) is fundamentally a simple syntactic transformation; however, many aspects of semantics influence what questions are good to form. We implement this observation by developing Syn-QG, a set of transparent syntactic rules leveraging universal dependencies, shallow semantic parsing, lexical resources, and custom rules which transform declarative sentences into question-answer pairs. We utilize PropBank argument descriptions and VerbNet state predicates to incorporate shallow semantic content, which helps generate questions of a descriptive nature and produce inferential and semantically richer questions than existing systems. In order to improve syntactic fluency and eliminate grammatically incorrect questions, we employ back-translation over the output of these syntactic rules. A set of crowd-sourced evaluations shows that our system can generate a larger number of highly grammatical and relevant questions than previous QG systems and that back-translation drastically improves grammaticality at a slight cost of generating irrelevant questions.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Unilmv2: Pseudo-masked language models for unified language model pre-training\",\n        \"VerbNet representations: Subevent semantics for transfer verbs\",\n        \"Natural question generation with reinforcement learning based graph-to-sequence model\",\n        \"Unified language model pre-training for natural language understanding and generation\",\n        \"Learning to ask: Neural question generation for reading comprehension\",\n        \"A semantic role-based approach to open-domain automatic question generation\",\n        \"AllenNLP: A deep semantic natural language processing platform\",\n        \"Question generation via overgenerating transformations and ranking\",\n        \"Good question! Statistical ranking for question generation\",\n        \"Evaluating rewards for question generation models\",\n        \"Simple and phrasal implicatives\",\n        \"Improving neural question generation using answer separation\",\n        \"A systematic review of automatic question generation for educational purposes\",\n        \"Deep questions without deep understanding\",\n        \"Tregex and tsurgeon: tools for querying and manipulating tree data structures\",\n        \"Improving question generation with to the point context\",\n        \"Syntactic annotations for the Google books ngram corpus\",\n        \"Generating natural language questions to support learning on-line\",\n        \"Asking questions the human way: Scalable question-answer generation from text corpus\",\n        \"Learning to generate questions by learning what not to generate\",\n        \"Universal Stanford dependencies: A cross-linguistic typology\",\n        \"Linguistic considerations in automatic question generation\",\n        \"Leveraging multiple views of text for automatic question generation\",\n        \"Infusing NLU into automatic question generation\",\n        \"WordNet: An electronic lexical database\",\n        \"Generating instruction automatically for the reading strategy of self-questioning\",\n        \"Letâ€™s ask again: Refine network for automatic question generation\",\n        \"MS MARCO: A human generated machine reading comprehension dataset\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"Semlink: Linking propbank, verbnet and framenet\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Squad: 100,000+ questions for machine comprehension of text\",\n        \"A detailed account of the first question generation shared task evaluation challenge\",\n        \"VerbNet: A broad-coverage, comprehensive verb lexicon\",\n        \"A unified query-based generative model for question generation and question answering\",\n        \"Answer-focused and position-aware neural question generation\",\n        \"Pywsd: Python implementations of word sense disambiguation (wsd) technologies [software]\",\n        \"Question answering and question generation as dual tasks\",\n        \"Capturing greater context for question generation\",\n        \"A joint model for question answering and question generation\",\n        \"Minilm: Deep self-attention distillation for task-agnostic compression of pre-trained transformers\",\n        \"Ernie-gen: An enhanced multi-flow pre-training and fine-tuning framework for natural language generation\",\n        \"Noising and denoising natural language: Diverse backtranslation for grammar correction\",\n        \"Prophetnet: Predicting future n-gram for sequence-to-sequence pre-training\",\n        \"Question generation with minimal recursion semantics\",\n        \"Machine comprehension by text-to-text neural question generation\",\n        \"Addressing semantic drift in question generation for semi-supervised question answering\",\n        \"Paragraph-level neural question generation with maxout pointer and gated self-attention networks\",\n        \"Neural question generation from text: A preliminary study\",\n        \"Sequential copying networks\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Syn-QG: Syntactic and Shallow Semantic Rules for Question Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}