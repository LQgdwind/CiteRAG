{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ParIS+: Data Series Indexing on Multi-Core Architectures\n\nPaper Abstract: Abstract Data series similarity search is a core operation for several data series analysis applications across many different domains. Nevertheless, even state-of-the-art techniques cannot provide the time performance required for large data series collections. We propose ParIS and ParIS+, the first disk-based data series indices carefully designed to inherently take advantage of multi-core architectures, in order to accelerate similarity search processing times. Our experiments demonstrate that ParIS+ completely removes the CPU latency during index construction for disk-resident data, and for exact query answering is up to 111 order of magnitude faster than the current state of the art index scan method, and up to 333 orders of magnitude faster than the optimized serial scan method. ParIS+ (which is an evolution of the ADS+ index) owes its efficiency to the effective use of multi-core and multi-socket architectures, in order to distribute and execute in parallel both index construction and query answering, and to the exploitation of the Single Instruction Multiple Data (SIMD) capabilities of modern CPUs, in order to further parallelize the execution of instructions inside each core.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Incorporated Research Institutions for Seismology â€“ Seismic Data Access\",\n        \"Source code and datasets used in this paper\",\n        \"Southwest university adult lifespan dataset (sald)\",\n        \"Efficient similarity search in sequence databases\",\n        \"Databases and hardware: The beginning and sequel of a beautiful friendship\",\n        \"The ts-tree: efficient time series search and retrieval\",\n        \"Data series management (dagstuhl seminar 19282)\",\n        \"Automated Anomaly Detection in Large Sequences\",\n        \"Series2Graph: Graph-based Subsequence Anomaly Detection for Time Series\",\n        \"Data Series Indexing Gone Parallel\",\n        \"Beyond One Billion Time Series: Indexing and Mining Very Large Time Series Collections with iSAX2+\",\n        \"Anomaly detection: A survey\",\n        \"Fastquery: A parallel indexing system for scientific data\",\n        \"Intel 64 and ia-32 architectures optimization reference manual\",\n        \"The lernaean hydra of data series similarity search: An experimental evaluation of the state of the art\",\n        \"Return of the Lernaean Hydra: Experimental Evaluation of Data Series Approximate Similarity Search\",\n        \"Multi-core processors: New way to achieve high system performance\",\n        \"Parallel i/o aware query optimization\",\n        \"Progressive similarity search on time series data\",\n        \"Distance threshold similarity searches: Efficient trajectory indexing on the GPU\",\n        \"R-trees: A dynamic index structure for spatial searching\",\n        \"Scalable knn search on vertically stored time series\",\n        \"Dimensionality reduction for fast similarity search in large time series databases\",\n        \"Coconut: A scalable bottom-up approach for building data series indexes\",\n        \"Coconut palm: Static and streaming data series exploration now in your palm\",\n        \"Hierarchyscan: A hierarchical similarity search algorithm for databases of long sequences\",\n        \"Ulisse: Ultra compact index for variable-length similarity search in data series\",\n        \"Scalable, variable-length similarity search in data series: The ulisse approach\",\n        \"High performance temporal indexing on modern hardware\",\n        \"Introduction to intel advanced vector extensions\",\n        \"Time series join on subsequence correlation\",\n        \"A disk-aware algorithm for time series motif discovery\",\n        \"Fast approximate correlation for massive time-series data\",\n        \"Data series management: The road to big sequence analytics\",\n        \"The parallel and distributed future of data series mining\",\n        \"Evolution of a Data Series Index\",\n        \"Report on the First and Second Interdisciplinary Time Series Analysis Workshop (ITISA)\",\n        \"Paris: The next destination for fast data series indexing and query answering\",\n        \"MESSI: In-Memory Data Series Indexing\",\n        \"Searching and mining trillions of time series subsequences under dynamic time warping\",\n        \"Time series epenthesis: Clustering time series streams requires ignoring some data\",\n        \"i sax: indexing and mining terabyte sized time series\",\n        \"iSAX: disk-aware mining and indexing of massive time series datasets\",\n        \"Indexing and classifying gigabytes of time series under time warping\",\n        \"Exploit every cycle: Vectorized time series algorithms on modern commodity cpus\",\n        \"A data-adaptive and dynamic segmentation index for whole matching on time series\",\n        \"Parallelizing dynamic time warping algorithm using prefix computations on gpu\",\n        \"Dpisax: Massively distributed partitioned isax\",\n        \"Massively distributed time series indexing and querying\",\n        \"Fast time sequence indexing for arbitrary lp norms\",\n        \"Adapting tree structures for processing with SIMD instructions\",\n        \"Implementing database operations using simd instructions\",\n        \"Ads: the adaptive data series index\",\n        \"Generating data series query workloads\",\n        \"Data series management: Fulfilling the need for big sequence analytics\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in ParIS+: Data Series Indexing on Multi-Core Architectures, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}