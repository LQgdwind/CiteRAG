{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Improving Neural Network Verification through Spurious Region Guided Refinement\n\nPaper Abstract: Abstract We propose a spurious region guided refinement approach for robustness verification of deep neural networks. Our method starts with applying the DeepPoly abstract domain to analyze the network. If the robustness property cannot be verified, the result is inconclusive. Due to the over-approximation, the computed region in the abstraction may be spurious in the sense that it does not contain any true counterexample. Our goal is to identify such spurious regions and use them to guide the abstraction refinement. The core idea is to make use of the obtained constraints of the abstraction to infer new bounds for the neurons. This is achieved by linear programming techniques. With the new bounds, we iteratively apply DeepPoly, aiming to eliminate spurious regions. We have implemented our approach in a prototypical tool DeepSRGR. Experimental results show that a large amount of regions can be identified as spurious, and as a result, the precision of DeepPoly can be significantly improved. As a side contribution, we show that our approach can be applied to verify quantitative robustness properties.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups\",\n        \"Optimization and abstraction: a synergistic approach for analyzing neural network robustness\",\n        \"Scalable quantitative verification for deep neural networks\",\n        \"The contraction principle as a particular case of kleeneâ€™s fixed point theorem\",\n        \"Branch and bound for piecewise linear neural network verification\",\n        \"Counterexample-guided abstraction refinement\",\n        \"Abstract interpretation: A unified lattice model for static analysis of programs by construction or approximation of fixpoints\",\n        \"CVXPY: A Python-embedded modeling language for convex optimization\",\n        \"Output range analysis for deep feedforward neural networks\",\n        \"Formal verification of piece-wise linear feed-forward neural networks\",\n        \"An abstraction-based framework for neural network verification\",\n        \"Analyzing the next generation airborne collision avoidance system\",\n        \"AI2: Safety and robustness certification of neural networks with abstract interpretation\",\n        \"The zonotope abstract domain taylor1+\",\n        \"A logical product approach to zonotope intersection\",\n        \"Safety verification of deep neural networks\",\n        \"Formal verification of ACAS x, an industrial airborne collision avoidance system\",\n        \"coin-or/cbc: Version 2.10.5\",\n        \"Deep neural network compression for aircraft collision avoidance systems\",\n        \"Reluplex: An efficient SMT solver for verifying deep neural networks\",\n        \"The marabou framework for verification and analysis of deep neural networks\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Analyzing deep neural networks with symbolic propagation: Towards higher precision and faster verification\",\n        \"A machine learning framework for domain generation algorithm-based malware detection\",\n        \"Robustness verification of classification deep neural networks via linear programming\",\n        \"An approach to reachability analysis for feed-forward ReLU neural networks\",\n        \"Robustness of neural networks: A probabilistic and practical approach\",\n        \"Neural network robustness verification on gpus\",\n        \"Verifying properties of binarized deep neural networks\",\n        \"Deepabstract: Neural network abstraction for accelerating verification\",\n        \"An abstraction-refinement approach to verification of artificial neural networks\",\n        \"Reachability analysis of deep neural networks with provable guarantees\",\n        \"Global robustness evaluation of deep neural networks with provable guarantees for the hamming distance\",\n        \"Developing and using expert systems and neural networks in medicine: A review on benefits and challenges\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Beyond the single neuron convex barrier for neural network certification\",\n        \"Fast and effective robustness certification\",\n        \"An abstract domain for certifying neural networks\",\n        \"Fast polyhedra abstract domain\",\n        \"Intriguing properties of neural networks\",\n        \"Verification of deep convolutional neural networks using imagestars\",\n        \"Star-based reachability analysis of deep neural networks\",\n        \"Self-driving cars and the urban challenge\",\n        \"Adversarial sample detection for deep neural network through model mutation testing\",\n        \"Detecting adversarial samples for deep neural networks through mutation testing\",\n        \"A statistical approach to assessing neural network robustness\",\n        \"PROVEN: verifying robustness of neural networks with a probabilistic approach\",\n        \"Towards Fast Computation of Certified Robustness for ReLU Networks\",\n        \"Feature-guided black-box safety testing of deep neural networks\",\n        \"A game-based approximate verification of deep neural networks with provable guarantees\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Improving Neural Network Verification through Spurious Region Guided Refinement, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}