{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Seeker’s Dilemma: Realistic Formulation and Benchmarking for Hardware Trojan Detection\n\nPaper Abstract: Abstract This work focuses on advancing security research in the hardware design space by formally defining the realistic problem of Hardware Trojan (HT) detection. The goal is to model HT detection more closely to the real world, i.e., describing the problem as “The Seeker’s Dilemma” (an extension of Hide&Seek on a graph), where a detecting agent is unaware of whether circuits are infected by HTs or not. Using this theoretical problem formulation, we create a benchmark that consists of a mixture of HT-free and HT-infected restructured circuits while preserving their original functionalities. The restructured circuits are randomly infected by HTs, causing a situation where the defender is uncertain if a circuit is infected or not. We believe that our innovative dataset will help the community better judge the detection quality of different methods by comparing their success rates in circuit classification. We use our developed benchmark to evaluate three state-of-the-art HT detection tools to show baseline results for this approach. We use Principal Component Analysis to assess the strength of our benchmark, where we observe that some restructured HT-infected circuits are mapped closely to HT-free circuits, leading to significant label misclassification by detectors.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hw2vec: A graph learning tool for automating hardware security\",\n        \"Benchmarking of hardware trojans and maliciously affected circuits\",\n        \"Survey of recent developments for hardware trojan detection\",\n        \"Mero: A statistical approach for hardware trojan detection\",\n        \"Trojan-feature extraction at gate-level netlists and its application to hardware-trojan detection using random forest classifier\",\n        \"Automated test generation for hardware trojan detection using reinforcement learning\",\n        \"Deterrent: detecting trojans using reinforcement learning\",\n        \"Multi-criteria hardware trojan detection: A reinforcement learning approach\",\n        \"Trust-Hub\",\n        \"An automated configurable trojan insertion framework for dynamic trust benchmarks\",\n        \"Attrition: Attacking static hardware trojan detection techniques using reinforcement learning\",\n        \"Trojan playground: A reinforcement learning framework for hardware trojan insertion and detection\",\n        \"Seeker’s dilemma hardware trojan-benchmarks: Functionally restructured hardware trojan benchmarks\",\n        \"Ten years of hardware trojans: a survey from the attacker’s perspective\",\n        \"A survey of hardware trojan threat and defense\",\n        \"Hardware obfuscation and logic locking: A tutorial introduction\",\n        \"Scalable activation of rare triggers in hardware trojans by repeated maximal clique sampling\",\n        \"Cotd: Reference-free hardware trojan detection and recovery based on controllability and observability in gate-level netlist\",\n        \"Hardware trojan detection using machine learning: A tutorial\",\n        \"Scoap: Sandia controllability/observability analysis program\",\n        \"On design vulnerability analysis and trust benchmarks development\",\n        \"Hardware trojan insertion using reinforcement learning\",\n        \"Gainesis: Generative artificial intelligence netlists synthesis\",\n        \"An improved automatic hardware trojan generation platform\",\n        \"A game-theoretic approach for testing for hardware trojans\",\n        \"Hardware trojan detection game: A prospect-theoretic approach\",\n        \"Prospect theory: An analysis of decision under risk\",\n        \"Think smart, play dumb: Analyzing deception in hardware trojan detection using game theory\",\n        \"Game theoretic hardware trojan testing under cost considerations\",\n        \"Game and prospect theoretic hardware trojan testing\",\n        \"Games, dollars, splits: A game-theoretic analysis of split manufacturing\",\n        \"The theory of search games and rendezvous\",\n        \"Differential games, siam series in applied mathematics\",\n        \"Theory of optimal search\",\n        \"Playing hide-and-seek: an abstract game for cyber security\",\n        \"Benchmarking heterogeneous hpc systems including reconfigurable fabrics: Community aspirations for ideal comparisons\",\n        \"Benchmarking and evaluating reconfigurable architectures targeting the mobile domain\",\n        \"The iscas’85 benchmark circuits and netlist format\",\n        \"Hardware trojan detection using deep learning technique\",\n        \"Taint: Tool for automated insertion of trojans\",\n        \"Teaching parallel programming using both high-level and low-level languages\",\n        \"Integrating an aig package, simulator, and sat solver\",\n        \"Openabc-d: A large-scale dataset for machine learning guided integrated circuit synthesis\",\n        \"Fraigs: A unifying representation for logic synthesis and verification\",\n        \"Abc: An academic industrial-strength verification tool\",\n        \"Introduction to logic synthesis with abc\",\n        \"Unveiling the iscas-85 benchmarks: A case study in reverse engineering\",\n        \"Deep learning with Python\",\n        \"Principal component analysis\",\n        \"A pca based svm hardware trojan detection approach\",\n        \"A side channel based power analysis technique for hardware trojan detection using statistical learning approach\",\n        \"Malicious circuitry detection using transient power analysis for ic security\",\n        \"The epfl combinational benchmark suite\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in The Seeker’s Dilemma: Realistic Formulation and Benchmarking for Hardware Trojan Detection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}