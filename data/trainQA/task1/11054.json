{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Simulating Weighted Automata over Sequences and Trees with Transformers\n\nPaper Abstract: Abstract Transformers are ubiquitous models in the natural language processing (NLP) community and have shown impressive empirical successes in the past few years. However, little is understood about how they reason and the limits of their computational capabilities. These models do not process data sequentially, and yet outperform sequential neural models such as RNNs. Recent work has shown that these models can compactly simulate the sequential reasoning abilities of deterministic finite automata (DFAs). This leads to the following question: can transformers simulate the reasoning of more complex finite state machines? In this work, we show that transformers can simulate weighted finite automata (WFAs), a class of models which subsumes DFAs, as well as weighted tree automata (WTA), a generalization of weighted automata to tree structured inputs. We prove these claims formally and provide upper bounds on the sizes of the transformer models needed as a function of the number of states the target automata. Empirically, we perform synthetic experiments showing that transformers are able to learn these compact solutions via standard gradient-based training.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Attention is All You Need\",\n        \"Language models are few-shot learners\",\n        \"Evaluating large language models trained on code\",\n        \"Finding Structure in Time\",\n        \"Long Short-Term Memory\",\n        \"Transformers learn shortcuts to automata\",\n        \"Handbook of weighted automata\",\n        \"Weighted Automata Algorithms\",\n        \"Automata-Theoretic Aspects of Formal Power Series\",\n        \"Probabilistic tree automata and context free languages\",\n        \"Tree automata techniques and applications\",\n        \"Compact bilinear pooling\",\n        \"Factorized bilinear models for image recognition\",\n        \"Bilinear cnn models for fine-grained visual recognition\",\n        \"Wide attention is the way forward for transformers\",\n        \"The power of depth for feedforward neural networks\",\n        \"On the expressive power of deep learning: A tensor analysis\",\n        \"Prefix sums and their applications\",\n        \"Pautomac: a probabilistic automata and hidden markov models learning competition\",\n        \"Neural networks and the chomsky hierarchy\",\n        \"On the ability and limitations of transformers to recognize formal languages\",\n        \"How can self-attention networks recognize dyck-n languages?\",\n        \"A formal hierarchy of rnn architectures\",\n        \"Overcoming a theoretical limitation of self-attention\",\n        \"Learning parities with neural networks\",\n        \"Self-attention networks can process bounded hierarchical languages\",\n        \"Turing completeness of bounded-precision recurrent neural networks\",\n        \"Extracting Automata from Recurrent Neural Networks Using Queries and Counterexamples\",\n        \"Learning and Extracting Finite State Automata with Second-Order Recurrent Neural Networks\",\n        \"Constructing Deterministic Finite-State Automata in Recurrent Neural Networks\",\n        \"Extracting Finite Automata from RNNs Using State Merging\",\n        \"Learning finite state models fromrecurrent neural networks\",\n        \"Learning Deterministic Weighted Automata with Queries and Counterexamples\",\n        \"Weighted Automata Extraction from Recurrent Neural Networks via Regression on State Spaces\",\n        \"Decision-Guided Weighted Automata Extraction from Recurrent Neural Networks\",\n        \"Explaining Black Boxes on Sequential Data Using Weighted Automata\",\n        \"Distillation of Weighted Automata from Recurrent Neural Networks Using a Spectral Approach\",\n        \"Extracting Weighted Automata for Approximate Minimization in Language Modelling\",\n        \"Taysir competition: Transformer+rnn: Algorithms to yield simple and interpretable representations\",\n        \"Connecting weighted automata, tensor networks and recurrent neural networks through spectral learning\",\n        \"Saturated transformers are constant-depth threshold circuits\",\n        \"Formal language recognition by hard attention transformers: Perspectives from circuit complexity\",\n        \"Tighter bounds on the expressivity of transformer encoders\",\n        \"Thinking Like Transformers\",\n        \"Do transformers parse while predicting the masked word?\",\n        \"Trainable grammars for speech recognition\",\n        \"Probabilistic finite-state machines-part i\",\n        \"A closer look at the approximation capabilities of neural networks\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Simulating Weighted Automata over Sequences and Trees with Transformers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}