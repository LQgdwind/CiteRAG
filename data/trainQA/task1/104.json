{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 65 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Shared-Memory Parallel Maximal Clique Enumeration from Static and Dynamic Graphs\n\nPaper Abstract: Abstract. Maximal Clique Enumeration (MCE) is a fundamental graph mining problem, and is useful as a primitive in identifying dense structures in a graph. Due to the high computational cost of MCE, parallel methods are imperative for dealing with large graphs. We present shared-memory parallel algorithms for MCE, with the following properties: (1) the parallel algorithms are provably work-efficient relative to a state-of-the-art sequential algorithm (2) the algorithms have a provably small parallel depth, showing they can scale to a large number of processors, and (3) our implementations on a multicore machine show good speedup and scaling behavior with increasing number of cores, and are substantially faster than prior shared-memory parallel algorithms for MCE; for instance, on certain input graphs, while prior works either ran out of memory or did not complete in 5 hours, our implementation finished within a minute using 32 cores. We also present work-efficient parallel algorithms for maintaining the set of all maximal cliques in a dynamic graph that is changing through the addition of edges.\n\n{retrieved_text}\n\nGenerate exactly 65 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 65\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Reverse Search for Enumeration\",\n        \"Parallel algorithms\",\n        \"Executing multithreaded programs efficiently\",\n        \"Scheduling multithreaded computations by work stealing\",\n        \"Algorithm 457: finding all cliques of an undirected graph\",\n        \"A note on the problem of reporting maximal cliques\",\n        \"Approximate common intervals in multiple genome comparison\",\n        \"A novel approach to structural alignment using realistic structural and environmental information\",\n        \"Arboricity and subgraph listing algorithms\",\n        \"D2K: Scalable Community Detection in Massive Networks via Small-Diameter k-Plexes\",\n        \"Sublinear-space bounded-delay enumeration for massive network analytics: maximal cliques\",\n        \"Shared-memory parallel maximal clique enumeration\",\n        \"Incremental maintenance of maximal cliques in a dynamic graph\",\n        \"ParK: An efficient algorithm for k-core decomposition on multicore processors\",\n        \"A parallel algorithm for enumerating all maximal cliques in complex network\",\n        \"Parallel algorithm for enumerating maximal cliques in complex network\",\n        \"Incremental K-clique clustering in dynamic social networks\",\n        \"Listing all maximal cliques in sparse graphs in near-optimal time\",\n        \"Listing All Maximal Cliques in Large Sparse Real-World Graphs\",\n        \"Finding Cliques in Social Networks: A New Distribution-Free Model\",\n        \"Identification of tertiary structure resemblance in proteins using a maximal common subgraph isomorphism algorithm\",\n        \"Development of a chemical structure comparison method for integrated analysis of chemical and genomic information in the metabolic pathways\",\n        \"On generating all maximal independent sets\",\n        \"Global topological features of cancer proteins in the human interactome\",\n        \"Parallel k-core decomposition on multicore platforms\",\n        \"Parallel k-truss decomposition on multicore systems\",\n        \"Shared-memory graph truss decomposition\",\n        \"Enumerating all connected maximal common subgraphs in two graphs\",\n        \"Chemical structure elucidation from 13C NMR chemical shifts: Efficient data processing using bipartite matching and maximal clique algorithms\",\n        \"Probabilistic Graphical Models: Principles and Techniques\",\n        \"Visualizing plant metabolomic correlation networks using clique-metabolite matrices\",\n        \"Konect: the koblenz network collection\",\n        \"SNAP Datasets: Stanford Large Network Dataset Collection\",\n        \"Maximal Clique Enumeration with Data-Parallel Primitives\",\n        \"Fast Maximal Clique Enumeration for Real-World Graphs\",\n        \"Effective pruning techniques for mining quasi-cliques\",\n        \"dmaximalcliques: A distributed algorithm for enumerating all maximal cliques and maximal clique distribution\",\n        \"New algorithms for enumerating all maximal cliques\",\n        \"Cluster-C, an algorithm for the large-scale clustering of protein sequences based on the extraction of maximal cliques\",\n        \"Distributed k-core decomposition\",\n        \"On cliques in graphs\",\n        \"Enumerating Maximal Bicliques from a Large Graph Using MapReduce\",\n        \"Honour thy neighbour: clique maintenance in dynamic graphs\",\n        \"Uncovering the overlapping community structure of complex networks in nature and society\",\n        \"Mining Periodic Cliques in Temporal Networks\",\n        \"Similarities and differences of gene expression in yeast stress conditions\",\n        \"The Network Data Repository with Interactive Graph Analytics and Visualization\",\n        \"Efficiently enumerating all maximal cliques with bit-parallelism\",\n        \"Enumerating top-k quasi-cliques\",\n        \"Parallel local algorithms for core, truss, and nucleus decompositions\",\n        \"A scalable, parallel algorithm for maximal clique enumeration\",\n        \"Split-ordered lists: Lock-free extensible hash tables\",\n        \"Shared-memory parallelism can be simple, fast, and scalable\",\n        \"Finding all maximal cliques in dynamic graphs\",\n        \"Mining maximal cliques from a large graph using mapreduce: Tackling highly uneven subproblem sizes\",\n        \"The worst-case time complexity for generating all maximal cliques and computational experiments\",\n        \"A new algorithm for generating all the maximal independent sets\",\n        \"An efficient algorithm for solving pseudo clique enumeration problem\",\n        \"Parallelizing maximal clique and k-plex enumeration over graph data\",\n        \"A distributed algorithm to enumerate all maximal cliques in mapreduce\",\n        \"A Memory Efficient Clique Enumeration Method for Sparse Graphs with a Parallel Implementation\",\n        \"Index-based densest clique percolation community search in networks\",\n        \"From pull-down data to protein interaction networks and complexes with biological relevance\",\n        \"Efficient Maximal Spatial Clique Enumeration\",\n        \"Genome-scale computational approaches to memory-intensive applications in systems biology\"\n    ],\n    \"reasoning\": \"Selected these 65 references because they represent foundational work and recent advances in Shared-Memory Parallel Maximal Clique Enumeration from Static and Dynamic Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}