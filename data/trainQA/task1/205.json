{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Structured Sparsification with Joint Optimization of Group Convolution and Channel Shuffle\n\nPaper Abstract: Abstract Recent advances in convolutional neural networks (CNNs) usually come with the expense of excessive computational overhead and memory footprint. Network compression aims to alleviate this issue by training compact models with comparable performance. However, existing compression techniques either entail dedicated expert design or compromise with a moderate performance drop. In this paper, we propose a novel structured sparsification method for efficient network compression. The proposed method automatically induces structured sparsity on the convolutional weights, thereby facilitating the implementation of the compressed model with the highly-optimized group convolution. We further address the problem of inter-group communication with a learnable channel shuffle mechanism. The proposed approach can be easily applied to compress many network architectures with a negligible performance drop. Extensive experimental results and analysis demonstrate that our approach gives a competitive performance against the recent network compression counterparts with a sound accuracy-complexity trade-off.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Designing Neural Network Architectures using Reinforcement Learning\",\n        \"Three Observations on Linear Algebra\",\n        \"Displacement Interpolation Using Lagrangian Mass Transport\",\n        \"Learning Efficient Object Detection Models with Knowledge Distillation\",\n        \"Compressing Neural Networks with the Hashing Trick\",\n        \"Recent Advances in Efficient Computation of Deep Convolutional Neural Networks\",\n        \"Xception: Deep Learning with Depthwise Separable Convolutions\",\n        \"Binarized Neural Networks: Training Deep Neural Networks with Weights and Activations Constrained to +1 or -1\",\n        \"Model-Agnostic Meta-Learning for Fast Adaptation of Deep Networks\",\n        \"Discrete Model Compression with Resource Constraint for Deep Neural Networks\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Filter Pruning via Geometric Median for Deep Convolutional Neural Networks Acceleration\",\n        \"Channel Pruning for Accelerating Very Deep Neural Networks\",\n        \"Distilling the Knowledge in a Neural Network\",\n        \"Mobilenets: Efficient Convolutional Neural Networks for Mobile Vision Applications\",\n        \"Densely Connected Convolutional Networks\",\n        \"CondenseNet: An Efficient DenseNet using Learned Group Convolutions\",\n        \"Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift\",\n        \"Learning Multiple Layers of Features from Tiny Images\",\n        \"Pruning Filters for Efficient ConvNets\",\n        \"Group Sparsity: The Hinge Between Filter Pruning and Decomposition for Network Compression\",\n        \"HRank: Filter Pruning using High-Rank Feature Map\",\n        \"Channel Pruning via Automatic Structure Search\",\n        \"DARTS: Differentiable Architecture Search\",\n        \"Search to Distill: Pearls are Everywhere but not the Eyes\",\n        \"Learning Efficient Convolutional Networks through Network Slimming\",\n        \"Fully Convolutional Networks for Semantic Segmentation\",\n        \"SGDR: Stochastic Gradient Descent with Warm Restarts\",\n        \"Thinet: A Filter Level Pruning Method for Deep Neural Network Compression\",\n        \"ShuffleNetv2: Practical Guidelines for Efficient CNN Architecture Design\",\n        \"Improved Knowledge Distillation via Teacher Assistant: Bridging the Gap Between Student and Teacher\",\n        \"Importance Estimation for Neural Network Pruning\",\n        \"DSA: More Efficient Budgeted Pruning via Differentiable Sparsity Allocation\",\n        \"PyTorch: An Imperative Style, High-performance Deep Learning Library\",\n        \"XNOR-Net: ImageNet Classification Using Binary Convolutional Neural Networks\",\n        \"Regularized Evolution for Image Classifier Architecture Search\",\n        \"ImageNet Large Scale Visual Recognition Challenge\",\n        \"MobileNetV2: Inverted Residuals and Linear Bottlenecks\",\n        \"Very Deep Convolutional Networks for Large-scale Image Recognition\",\n        \"SCOP: Scientific Control for Reliable Neural Network Pruning\",\n        \"Fully Learnable Group Convolution for Acceleration of Deep Neural Networks\",\n        \"FBNet: Hardware-Aware Efficient ConvNet Design via Differentiable Neural Architecture Search\",\n        \"Quantized Convolutional Neural Networks for Mobile Devices\",\n        \"Aggregated Residual Transformations for Deep Neural Networks\",\n        \"Rethinking the Smaller-Norm-Less-Informative Assumption in Channel Pruning of Convolution Layers\",\n        \"A Gift from Knowledge Distillation: Fast Optimization, Network Minimization and Transfer Learning\",\n        \"Combined Group and Exclusive Sparsity for Deep Neural Networks\",\n        \"NISP: Pruning Networks using Neuron Importance Score Propagation\",\n        \"ShuffleNet: An Extremely Efficient Convolutional Neural Network for Mobile Devices\",\n        \"Differentiable Learning-to-Group Channels via Groupable Convolutional Neural Networks\",\n        \"Dependency Aware Filter Pruning\",\n        \"Neural Architecture Search with Reinforcement Learning\",\n        \"Learning Transferable Architectures for Scalable Image Recognition\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Structured Sparsification with Joint Optimization of Group Convolution and Channel Shuffle, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}