{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SDSN@RT: a middleware environment for single-instance multi-tenant cloud applications\n\nPaper Abstract: Abstract [Abstract] With the Single-Instance Multi-Tenancy (SIMT) model for composite Software-as-a-Service (SaaS) applications, a single composite application instance can host multiple tenants, yielding the benefits of better service and resource utilization, and reduced operational cost for the SaaS provider. An SIMT application needs to share services and their aggregation (the application) among its tenants while supporting variations in the functional and performance requirements of the tenants. The SaaS provider requires a middleware environment that can deploy, enact and manage a designed SIMT application, to achieve the varied requirements of the different tenants in a controlled manner. This paper presents the SDSN@RT (Software-Defined Service Networks @ RunTime) middleware environment that can meet the aforementioned requirements. SDSN@RT represents an SIMT composite cloud application as a multi-tenant service network, where the same service network simultaneously hosts a set of virtual service networks (VSNs), one for each tenant. A service network connects a set of services, and coordinates the interactions between them. A VSN realizes the requirements for a specific tenant and can be deployed, configured, and logically isolated in the service network at runtime. SDSN@RT also supports the monitoring and runtime changes of the deployed multi-tenant service networks. We show the feasibility of SDSN@RT with a prototype implementation, and demonstrate its capabilities to host SIMT applications and support their changes with a case study. The performance study of the prototype implementation shows that the runtime capabilities of our middleware incur little overhead.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A framework for native multi-tenancy application development and management\",\n        \"Architecture strategies for catching the long tail\",\n        \"Software-Defined Service Networking: Performance Differentiation in Shared Multi-Tenant Cloud Applications\",\n        \"A component-based middleware platform for reconfigurable service-oriented architectures\",\n        \"Using role-based coordination to achieve software adaptability\",\n        \"Dynamic and selective combination of extensions in component-based applications\",\n        \"Context-oriented programming for customizable SaaS applications\",\n        \"A middleware layer for flexible and cost-efficient multi-tenant applications\",\n        \"A scalable multi-tenant architecture for business process executions\",\n        \"Building a customizable business-process-as-a-service application with current state-of-practice\",\n        \"Defining composite configurable SaaS application packages using SCA, variability descriptors and multi-tenancy patterns\",\n        \"Service Orchestration as Organization: Building Multi-Tenant Service Applications in the Cloud\",\n        \"Granularity in software product lines\",\n        \"Lifecycle management of business process variants\",\n        \"Process as a service distributed multi-tenant policy-based process runtime governance\",\n        \"An open middleware for proactive QoS aware service composition in a multi-tenant SaaS environment\",\n        \"Dynamic performance management in multi-tenanted business process servers using nonlinear control\",\n        \"Feedback-control based performance regulation for multi-tenant applications\",\n        \"Metrics and techniques for quantifying performance isolation in cloud environments\",\n        \"SPIN: Service performance isolation infrastructure in multi-tenancy environment\",\n        \"Platform-as-a-service architecture for performance isolated multi-tenant applications\",\n        \"Models@run.time\",\n        \"Software-defined networking: A comprehensive survey\",\n        \"Modeling conversation policies using permissions and obligations\",\n        \"Dynamic configuration for distributed systems\",\n        \"Service Networks Modeling: An SOA & BPM Standpoint\",\n        \"Service Network Approaches\",\n        \"The evolving philosophers problem: dynamic change management\",\n        \"Rete: A fast algorithm for the many pattern/many object pattern match problem\",\n        \"Process Modeling using Event-Driven Process Chains\",\n        \"Software-Defined Service Networking: Runtime Sharing with Performance Differentiation in Multi-Tenant SaaS Applications\",\n        \"Web services business process execution language version 2.0\",\n        \"Service oriented architectures: approaches, technologies and research issues\",\n        \"Web services are not distributed objects\",\n        \"Comparing service-oriented and distributed object architectures\",\n        \"Models@run.time to support dynamic adaptation\",\n        \"A robust reconfiguration protocol for the dynamic update of component-based software systems\",\n        \"Service-oriented middleware: A survey\",\n        \"Dynamic policy-driven quality of service in service-oriented information management systems\",\n        \"Web service composition: a survey of techniques and tools\",\n        \"Business Process Model Notation (BPMN) version 2.0\",\n        \"Value network analysis and value conversion of tangible and intangible assets\",\n        \"Istio Framework\",\n        \"Microservices: The Journey So Far and Challenges Ahead\",\n        \"Implementation and Evaluation of a Multi-tenant Open-Source ESB\",\n        \"Composition as a service [web-scale work-flow]\",\n        \"Service-Oriented Dynamic Software Product Lines with DyBPEL\",\n        \"Modeling and managing variability in process-based service compositions\",\n        \"Sharing with a difference: Realizing service-based saas applications with runtime sharing and variation in dynamic software product lines\",\n        \"Process fragments\",\n        \"Policy-driven customization of cross-organizational features in distributed service systems\",\n        \"Architecture-centric support for adaptive service collaborations\",\n        \"Can the production network be the testbed?\",\n        \"Middleware for real-time and embedded systems\",\n        \"Service composition (re) binding driven by application-specific qos\",\n        \"Middleware for Dynamic Upgrade Activation and Compensations in Multi-tenant SaaS\",\n        \"ROAD4SaaS: Scalable business service-based saaS applications\",\n        \"Dynamic reconfiguration of cloud application architectures\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in SDSN@RT: a middleware environment for single-instance multi-tenant cloud applications, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}