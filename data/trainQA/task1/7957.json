{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: MarioGPT: Open-Ended Text2Level Generation through Large Language Models\n\nPaper Abstract: Abstract Procedural Content Generation (PCG) is a technique to generate complex and diverse environments in an automated way. However, while generating content with PCG methods is often straightforward, generating meaningful content that reflects specific intentions and constraints remains challenging. Furthermore, many PCG algorithms lack the ability to generate content in an open-ended manner. Recently, Large Language Models (LLMs) have shown to be incredibly effective in many diverse domains. These trained LLMs can be fine-tuned, re-using information and accelerating training for new tasks. Here, we introduce MarioGPT, a fine-tuned GPT2 model trained to generate tile-based game levels, in our case Super Mario Bros levels. MarioGPT can not only generate diverse levels, but can be text-prompted for controllable level generation, addressing one of the key challenges of current PCG techniques. As far as we know, MarioGPT is the first text-to-level model and combined with novelty search it enables the generation of diverse levels with varying play-style dynamics (i.e. player paths) and the open-ended discovery of an increasingly diverse range of content. Code available at https://github.com/shyamsn97/mario-gpt.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Procedural content generation using neuroevolution and novelty search for diverse video game levels\",\n        \"Diff models - a new way to edit code\",\n        \"Evolutionary game design\",\n        \"Quantifying memorization across neural language models\",\n        \"Input augmentation improves constrained beam search for neural machine translation: Ntt at wat 2021\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Illuminating Mario scenes in the latent space of a generative adversarial network\",\n        \"Covariance matrix adaptation for the rapid illumination of behavior space\",\n        \"Doom level generation using generative adversarial networks\",\n        \"Dynamic time warping and geometric edit distance: Breaking the quadratic barrier\",\n        \"Mario plays on a manifold: Generating functional content in latent space through differential geometry\",\n        \"Generative adversarial networks\",\n        \"The CMA evolution strategy: A tutorial\",\n        \"Long short-term memory\",\n        \"Preventing verbatim memorization in language models gives a false sense of privacy\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"How can we know what language models know?\",\n        \"The mario AI framework\",\n        \"Adam: A method for stochastic optimization\",\n        \"Evolution through large models\",\n        \"Abandoning Objectives: Evolution Through the Search for Novelty Alone\",\n        \"Exploiting open-endedness to solve problems through the search for novelty\",\n        \"Open-endedness: The last grand challenge youâ€™ve never heard of\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Constrained novelty search: A study on game content generation\",\n        \"Deep learning for procedural content generation\",\n        \"Illuminating search spaces by mapping elites\",\n        \"Language models are unsupervised multitask learners\",\n        \"Increasing generality in machine learning through procedural content generation\",\n        \"Learning internal representations by error propagation\",\n        \"Distilbert, a distilled version of BERT: smaller, faster, cheaper and lighter\",\n        \"Dungeon and platformer level blending and generation using conditional vaes\",\n        \"Generating and blending game levels via quality-diversity in the latent space of a variational autoencoder\",\n        \"Conditional level generation and game blending\",\n        \"Procedural content generation in games\",\n        \"Answer set programming for procedural content generation: A design space approach\",\n        \"Super Mario as a string: Platformer level generation via lstms\",\n        \"Procedural content generation via machine learning (PCGML)\",\n        \"The VGLC: The video game level corpus\",\n        \"Memorization without overfitting: Analyzing the training dynamics of large language models\",\n        \"Level generation through large language models\",\n        \"The 2009 Mario AI competition\",\n        \"Attention is all you need\",\n        \"Evolving Mario levels in the latent space of a deep convolutional generative adversarial network\",\n        \"Artificial intelligence and games, volume 2\",\n        \"Fine-tuning language models from human preferences\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in MarioGPT: Open-Ended Text2Level Generation through Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}