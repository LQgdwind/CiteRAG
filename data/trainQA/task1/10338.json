{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: BiTA: Bi-Directional Tuning for Lossless Acceleration in Large Language Models\n\nPaper Abstract: Abstract Large language models (LLMs) commonly employ autoregressive generation during inference, leading to high memory bandwidth demand and consequently extended latency. To mitigate this inefficiency, we present Bi-directional Tuning for lossless Acceleration (BiTA), an innovative method expediting LLMs via streamlined semi-autoregressive generation and draft verification. Inspired by the concept of prompt tuning, we enhance LLMs with a parameter-efficient design called bi-directional tuning for the capability in semi-autoregressive generation. Employing efficient tree-based decoding, the models perform draft candidate generation and verification in parallel, ensuring outputs identical to their autoregressive counterparts under greedy sampling. BiTA serves as a lightweight plug-in module, seamlessly boosting the inference efficiency of existing LLMs without requiring additional assistance models or incurring significant extra memory costs. Applying the proposed BiTA, LLaMA-2-70B-Chat achieves a 2.7×2.7\\times speedup on the MT-Bench benchmark. Extensive experiments confirm our method surpasses state-of-the-art acceleration techniques.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The falcon series of open language models\",\n        \"Language models are few-shot learners\",\n        \"Medusa: Simple framework for accelerating llm generation with multiple decoding heads\",\n        \"Code alpaca: An instruction-following llama model for code generation\",\n        \"Accelerating large language model decoding with speculative sampling\",\n        \"Vicuna: An open-source chatbot impressing gpt-4 with 90%* chatgpt quality\",\n        \"Flashattention: Fast and memory-efficient exact attention with io-awareness\",\n        \"Breaking the sequential dependency of llm inference using lookahead decoding\",\n        \"A survey of quantization methods for efficient neural network inference\",\n        \"Fully non-autoregressive neural machine translation: Tricks of the trade\",\n        \"Non-autoregressive neural machine translation\",\n        \"Rest: Retrieval-based speculative decoding\",\n        \"Distilling the knowledge in a neural network\",\n        \"Speed: Speculative pipelined execution for efficient decoding\",\n        \"Directed acyclic transformer for non-autoregressive machine translation\",\n        \"Assisted generation: a new direction toward low-latency text generation\",\n        \"Efficient memory management for large language model serving with pagedattention\",\n        \"Platypus: Quick, cheap, and powerful refinement of llms\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"Fast inference from transformers via speculative decoding\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Rethinking the value of network pruning\",\n        \"Gpt understands, too\",\n        \"Online speculative decoding\",\n        \"Towards efficient generative large language model serving: A survey from algorithms to systems\",\n        \"Specinfer: Accelerating generative llm serving with speculative inference and token tree verification\",\n        \"Pass: Parallel speculative sampling\",\n        \"Don’t give me the details, just the summary! topic-aware convolutional neural networks for extreme summarization\",\n        \"chatbot instruction prompts\",\n        \"Instruction tuning with gpt-4\",\n        \"Accelerating transformer inference for translation via parallel decoding\",\n        \"Bloom: A 176b-parameter open-access multilingual language model\",\n        \"Fast transformer decoding: One write-head is all you need\",\n        \"Accelerating llm inference with staged speculative decoding\",\n        \"Blockwise parallel decoding for deep autoregressive models\",\n        \"Spectr: Fast speculative decoding via optimal transport\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Semi-autoregressive neural machine translation\",\n        \"Lightseq: A high performance inference library for transformers\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Speculative decoding: Exploiting speculative execution for accelerating seq2seq generation\",\n        \"A survey on non-autoregressive generation for neural machine translation and beyond\",\n        \"Opt: Open pre-trained transformer language models\",\n        \"Draft & verify: Lossless large language model acceleration via self-speculative decoding\",\n        \"Judging llm-as-a-judge with mt-bench and chatbot arena\",\n        \"Codegeex: A pre-trained model for code generation with multilingual evaluations on humaneval-x\",\n        \"Lima: Less is more for alignment\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in BiTA: Bi-Directional Tuning for Lossless Acceleration in Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}