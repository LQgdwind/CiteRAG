{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Enabling Efficient and Flexible FPGA Virtualization for Deep Learning in the Cloud\n\nPaper Abstract: Abstract. FPGAs have shown great potential in providing low-latency and energy-efficient solutions for deep neural network (DNN) inference applications. Currently, the majority of FPGA-based DNN accelerators in the cloud run in a time-division multiplexing way for multiple users sharing a single FPGA, and require re-compilation with ∼similar-to\\sim100 s overhead. Such designs lead to poor isolation and heavy performance loss for multiple users, which are far away from providing efficient and flexible FPGA virtualization for neither public nor private cloud scenarios. To solve these problems, we introduce a novel virtualization framework for instruction architecture set (ISA) based on DNN accelerators by sharing a single FPGA. We enable the isolation by introducing a two-level instruction dispatch module and a multi-core based hardware resources pool. Such designs provide isolated and runtime-programmable hardware resources, further leading to performance isolation for multiple users. On the other hand, to overcome the heavy re-compilation overheads, we propose a tiling-based instruction frame package design and two-stage static-dynamic compilation. Only the light-weight runtime information is re-compiled with ∼similar-to\\sim1 ms overhead, thus the performance is guaranteed for the private cloud. Our extensive experimental results***We provide several available demonstrations for our FPGA virtualization solution on Aliyun f3: https://github.com/annoysss123/FPGA-Virt-Exp-on-Aliyun-f3 show that the proposed virtualization design achieves 1.07-1.69x and 1.88-3.12x throughput improvement over previous static designs using the single-core and the multi-core architectures, respectively.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"DLA: Compiler and FPGA Overlay for Neural Network Inference Acceleration\",\n        \"Alibaba F1\",\n        \"AWS F1\",\n        \"Deep speech 2: End-to-end speech recognition in english and mandarin\",\n        \"An OpenCL™ deep learning accelerator on Arria 10\",\n        \"ZUMA: An open FPGA overlay architecture\",\n        \"Compiling deep learning models for custom hardware accelerators\",\n        \"Enabling FPGAs in the cloud\",\n        \"TVM: An automated end-to-end optimizing compiler for deep learning\",\n        \"Cloud-DNN: An open framework for mapping DNN models to cloud FPGAs\",\n        \"A fully pipelined and dynamically composable architecture of CGRA\",\n        \"Very deep convolutional networks for natural language processing\",\n        \"Online scheduling for fpga computation in the cloud\",\n        \"Azure accelerated networking: SmartNICs in the public cloud\",\n        \"A configurable cloud-scale DNN processor for real-time AI\",\n        \"Angel-Eye: A complete design flow for mapping CNN onto embedded FPGA\",\n        \"A Survey of FPGA-based Neural Network Inference Accelerators\",\n        \"ESE: Efficient speech recognition engine with sparse LSTM on fpga\",\n        \"Deep residual learning for image recognition\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"website\",\n        \"Caffe: Convolutional architecture for fast feature embedding\",\n        \"Virtualizing reconfigurable hardware to provide scalability in cloud architectures\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Deep learning\",\n        \"Performance Characteristics of Virtualized GPUs for Deep Learning\",\n        \"CUDA Multi Process Service Overview\",\n        \"GPU virtualization for every workload\",\n        \"XPU: A programmable FPGA accelerator for diverse workloads\",\n        \"SDA: Software-defined accelerator for general-purpose distributed big data analysis system\",\n        \"Performance of partial reconfiguration in FPGA systems: A survey and a cost model\",\n        \"Deep learning inference in facebook data centers: Characterization, performance optimizations and hardware implications\",\n        \"A reconfigurable fabric for accelerating large-scale datacenter services\",\n        \"Dnnweaver: From high-level deep network models to fpga acceleration\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"A performance study of big data workloads in cloud datacenters with network variability\",\n        \"A survey on FPGA virtualization\",\n        \"Deep Neural Network Approximation for Custom Hardware: Where We’ve Been, Where We’re Going\",\n        \"Accelerating DNNs with Xilinx Alveo Accelerator Cards\",\n        \"Xilinx AXI Interconnect IP\",\n        \"DNNVM: End-to-End Compiler Leveraging Heterogeneous Optimizations on FPGA-based CNN Accelerators\",\n        \"Caffeine: Towards uniformed representation and acceleration for deep convolutional neural networks\",\n        \"DNNBuilder: an automated tool for building high-performance DNN hardware accelerators for FPGAs\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Enabling Efficient and Flexible FPGA Virtualization for Deep Learning in the Cloud, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}