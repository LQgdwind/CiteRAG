{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Microsoft Toolkit of Multi-Task Deep Neural Networks for Natural Language Understanding\n\nPaper Abstract: Abstract We present MT-DNN111The complete name of our toolkit is M‚ÄãT2ùëÄsuperscriptùëá2MT^{2}-DNN (The Microsoft Toolkit of Multi-Task Deep Neural Networks for Natural Language Understanding), but we use MT-DNN for sake of simplicity., an open-source natural language understanding (NLU) toolkit that makes it easy for researchers and developers to train customized deep learning models. Built upon PyTorch and Transformers, MT-DNN is designed to facilitate rapid customization for a broad spectrum of NLU tasks, using a variety of objectives (classification, regression, structured prediction) and text encoders (e.g., RNNs, BERT, RoBERTa, UniLM). A unique feature of MT-DNN is its built-in support for robust and transferable learning using the adversarial multi-task learning paradigm. To enable efficient production deployment, MT-DNN supports multi-task knowledge distillation, which can substantially compress a deep neural model without significant performance drop. We demonstrate the effectiveness of MT-DNN on a wide range of NLU applications across general and biomedical domains. The software and pre-trained models will be publicly available at https://github.com/namisan/mt-dnn.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Do deep nets really need to be deep?\",\n        \"Bayesian dark knowledge\",\n        \"The second PASCAL recognising textual entailment challenge\",\n        \"The fifth pascal recognizing textual entailment challenge\",\n        \"A large annotated corpus for learning natural language inference\",\n        \"Multitask learning\",\n        \"Semeval-2017 task 1: Semantic textual similarity-multilingual and cross-lingual focused evaluation\",\n        \"Bam! born-again multi-task networks for natural language understanding\",\n        \"Natural language processing (almost) from scratch\",\n        \"The pascal recognising textual entailment challenge\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"Unified language model pre-training for natural language understanding and generation\",\n        \"Allennlp: A deep semantic natural language processing platform\",\n        \"The third PASCAL recognizing textual entailment challenge\",\n        \"Distilling the knowledge in a neural network\",\n        \"Long short-term memory\",\n        \"Smart: Robust and efficient fine-tuning for pre-trained natural language models through principled regularized optimization\",\n        \"SciTail: A textual entailment dataset from science question answering\",\n        \"Biobert: pre-trained biomedical language representation model for biomedical text mining\",\n        \"The winograd schema challenge\",\n        \"Adversarial training for large neural language models\",\n        \"Stochastic answer networks for natural language inference\",\n        \"Representation learning using multi-task deep neural networks for semantic classification and information retrieval\",\n        \"Improving multi-task deep neural networks via knowledge distillation for natural language understanding\",\n        \"Multi-task deep neural networks for natural language understanding\",\n        \"Stochastic answer networks for machine reading comprehension\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Multi-task sequence to sequence learning\",\n        \"Towards deep learning models resistant to adversarial attacks\",\n        \"The stanford corenlp natural language processing toolkit\",\n        \"Virtual adversarial training: a regularization method for supervised and semi-supervised learning\",\n        \"Adversarial nli: A new benchmark for natural language understanding\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Deep contextualized word representations\",\n        \"Language models are unsupervised multitask learners.\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"An overview of multi-task learning in deep neural networks\",\n        \"Distilbert, a distilled version of bert: smaller, faster, cheaper and lighter\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Ernie 2.0: A continual pre-training framework for language understanding\",\n        \"Distilling task-specific knowledge from bert into simple neural networks\",\n        \"Fever: a large-scale dataset for fact extraction and verification\",\n        \"Attention is all you need\",\n        \"Glue: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Neural network acceptability judgments\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"Huggingface‚Äôs transformers: State-of-the-art natural language processing\",\n        \"Freelb: Enhanced adversarial training for language understanding\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in The Microsoft Toolkit of Multi-Task Deep Neural Networks for Natural Language Understanding, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}