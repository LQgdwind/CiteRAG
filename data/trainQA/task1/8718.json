{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 61 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Understanding Automatic Differentiation Pitfalls\n\nPaper Abstract: Abstract Automatic differentiation, also known as backpropagation, AD, autodiff, or algorithmic differentiation, is a popular technique for computing derivatives of computer programs accurately and efficiently. Sometimes, however, the derivatives computed by AD could be interpreted as incorrect. These pitfalls occur systematically across tools and approaches. In this paper we broadly categorize problematic usages of AD and illustrate each category with examples such as chaos, time-averaged oscillations, discretizations, fixed-point loops, lookup tables, and linear solvers. We also review debugging techniques and their effectiveness in these situations. With this article we hope to help readers avoid unexpected behavior, detect problems more easily when they occur, and have more realistic expectations from AD tools.\n\n{retrieved_text}\n\nGenerate exactly 61 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 61\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Evaluating Derivatives: Principles and Techniques of Algorithmic Differentiation\",\n        \"High-Performance Derivative Computations Using CoDiPack\",\n        \"Automatic Differentiation in Machine Learning: A Survey\",\n        \"The art of differentiating computer programs: an introduction to algorithmic differentiation, vol. 24\",\n        \"Recipes for Adjoint Code Construction\",\n        \"Automatic differentiation of algorithms\",\n        \"A mathematical view of automatic differentiation\",\n        \"A Hitchhiker’s Guide to Automatic Differentiation\",\n        \"A review of automatic differentiation and its efficient implementation\",\n        \"An introduction to algorithmic differentiation\",\n        \"You Only Linearize Once: Tangents Transpose to Gradients\",\n        \"Automated Derivation of the Adjoint of High-Level Transient Finite Element Programs\",\n        \"Instead of rewriting foreign code for machine learning, automatically synthesize fast gradients\",\n        \"Programming language features, usage patterns, and the efficiency of generated adjoint code\",\n        \"High resolution schemes using flux limiters for hyperbolic conservation laws\",\n        \"Runge–Kutta methods in optimal control and the transformed adjoint system\",\n        \"Towards adjoint-based methods for aeroacoustic control\",\n        \"A comparison of the continuous and discrete adjoint approach to automatic aerodynamic optimization\",\n        \"Difficulties in sensitivity calculations for flows with discontinuities\",\n        \"A Comprehensive Study of Adjoint-Based Optimization of Non-Linear Systems with Application to Burgers’ Equation\",\n        \"Convergence of Linearized and Adjoint Approximations for Discontinuous Solutions of Conservation Laws. Part 1: Linearized Approximations and Linearized Output Functionals\",\n        \"Derivatives and control in the presence of shocks\",\n        \"Do you trust derivatives or differences?\",\n        \"Robust descent in differentiable optimization using automatic finite differences\",\n        \"Forward and adjoint sensitivity computation of chaotic dynamical systems\",\n        \"Least squares shadowing sensitivity analysis of chaotic limit cycle oscillations\",\n        \"Adjoint sensitivity analysis of chaotic dynamical systems with non-intrusive least squares shadowing\",\n        \"Sensitivity analysis of limit cycle oscillations\",\n        \"On the difficulty of training Recurrent Neural Networks\",\n        \"The Vanishing Gradient Problem During Learning Recurrent Neural Nets and Problem Solutions\",\n        \"A mathematical model for automatic differentiation in machine learning\",\n        \"Collected matrix derivative results for forward and reverse mode algorithmic differentiation\",\n        \"Automatic differentiation of codes in nuclear engineering applications\",\n        \"Reciprocation, square root, inverse square root, and some elementary functions using small multipliers\",\n        \"The CORDIC Trigonometric Computing Technique\",\n        \"An accurate elementary mathematical library for the IEEE floating point standard\",\n        \"Search for weakly interacting massive particles with the first five-tower data from the cryogenic dark matter search at the Soudan underground laboratory\",\n        \"Systematically differentiating parametric discontinuities\",\n        \"Derivative convergence for iterative equation solvers\",\n        \"Consistent treatment of incompletely converged iterative linear solvers in reverse-mode algorithmic differentiation\",\n        \"Automatic differentiation and iterative processes\",\n        \"Automatic differentiation of iterative processes\",\n        \"Reverse accumulation and attractive fixed points\",\n        \"Reverse aumulation and implicit functions\",\n        \"Implementation and measurements of an efficient Fixed Point Adjoint\",\n        \"Reverse-mode automatic differentiation and optimization of GPU kernels via Enzyme\",\n        \"Scalable Automatic Differentiation of Multiple Parallel Paradigms through Compiler Augmentation\",\n        \"LLVM: A compilation framework for lifelong program analysis & transformation\",\n        \"The if-problem in automatic differentiation\",\n        \"An updated set of basic linear algebra subprograms (BLAS)\",\n        \"Templates for the solution of linear systems: building blocks for iterative methods\",\n        \"Discrete adjoints on many cores Algorithmic differentiation of accelerated fluid simulations\",\n        \"Checking the Calculation of Gradients\",\n        \"Automatic differentiation in PyTorch\",\n        \"Special Problems in Automatic Differentiation\",\n        \"Correctness of Automatic Differentiation via Diffeologies and Categorical Gluing\",\n        \"Provably Correct, Asymptotically Efficient, Higher-Order Reverse-Mode Automatic Differentiation\",\n        \"Demystifying Differentiable Programming: Shift/Reset the Penultimate Backpropagator\",\n        \"On Correctness of Automatic Differentiation for Non-Differentiable Functions\",\n        \"On the Correctness of Automatic Differentiation for Neural Networks with Machine-Representable Parameters\",\n        \"ADEV: Sound Automatic Differentiation of Expected Values of Probabilistic Programs\"\n    ],\n    \"reasoning\": \"Selected these 61 references because they represent foundational work and recent advances in Understanding Automatic Differentiation Pitfalls, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}