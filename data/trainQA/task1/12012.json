{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AutoQ 2.0: From Verification of Quantum Circuits to Verification of Quantum Programs\n\nPaper Abstract: Abstract We present a verifier of quantum programs called AutoQ 2.0. Quantum programs extend quantum circuits (the domain of AutoQ 1.0) by classical control flow constructs, which enable users to describe advanced quantum algorithms in a formal and precise manner. The extension is highly non-trivial, as we needed to tackle both theoretical challenges (such as the treatment of measurement, the normalization problem, and lifting techniques for verification of classical programs with loops to the quantum world), and engineering issues (such as extending the input format with a support for specifying loop invariants). We have successfully used AutoQ 2.0 to verify two types of advanced quantum programs that cannot be expressed using only quantum circuits: the repeat-until-success (RUS) algorithm and the weak-measurement-based version of Grover’s search algorithm. AutoQ 2.0 can efficiently verify all our benchmarks: all RUS algorithms were verified instantly and, for the weak-measurement-based version of Grover’s search, we were able to handle the case of 100 qubits in ∼similar-to\\sim20 minutes.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"AutoQ 2.0: An automata-based C++ tool for quantum program verification\",\n        \"Verifying quantum circuits with level-synchronized tree automata\",\n        \"When simulation meets antichains\",\n        \"A simple proof that Toffoli and Hadamard are quantum universal\",\n        \"Deductive Software Verification - The KeY Book - From Theory to Practice\",\n        \"Towards large-scale functional verification of universal quantum circuits\",\n        \"Weakly measured while loops: peeking at quantum states\",\n        \"Towards quantum programs verification: From Quipper circuits to QPMC\",\n        \"The dogged pursuit of bug-free C programs: the Frama-C software analysis platform\",\n        \"Interactive theorem proving and program development: Coq’Art: the calculus of inductive constructions\",\n        \"Efficient synthesis of universal repeat-until-success quantum circuits\",\n        \"Antichain-based universality and inclusion testing over nondeterministic finite tree automata\",\n        \"A new universal and fault-tolerant quantum basis\",\n        \"Advanced equivalence checking for quantum circuits\",\n        \"An automated deductive verification framework for circuit-building quantum programs\",\n        \"Accelerating quantum circuit simulation with symbolic execution and loop summarization\",\n        \"Partial equivalence checking of quantum circuits\",\n        \"AutoQ: An automata-based quantum circuit verifier\",\n        \"An automata-based framework for verification and bug hunting in quantum circuits\",\n        \"Interacting quantum observables: categorical algebra and diagrammatics\",\n        \"VCC: A practical system for verifying concurrent C\",\n        \"Z3: An efficient SMT solver\",\n        \"Quantum weakest preconditions\",\n        \"Differentiable quantum programming with unbounded loops\",\n        \"Quantum Hoare logic with classical variables\",\n        \"Model checking quantum Markov chains\",\n        \"Why3—where programs meet provers\",\n        \"Assigning meanings to programs\",\n        \"A fast quantum mechanical algorithm for database search\",\n        \"Deductive software verification: From pen-and-paper proofs to industrial tools\",\n        \"Verified optimization in a quantum intermediate representation\",\n        \"An axiomatic basis for computer programming\",\n        \"Efficient inclusion checking on explicit and semi-symbolic tree automata\",\n        \"A quick tour of the VeriFast program verifier\",\n        \"Dafny: An automatic program verifier for functional correctness\",\n        \"VATA: A library for efficient manipulation of non-deterministic tree automata\",\n        \"Formal verification of quantum algorithms using quantum Hoare logic\",\n        \"Temporal Logics for Reasoning about Quantum Systems\",\n        \"Repeat-until-success: Non-deterministic decomposition of single-qubit unitaries\",\n        \"Quantum entanglement analysis based on abstract interpretation\",\n        \"Quantum Hoare logic with ghost variables\",\n        \"Accurate bdd-based unitary operator manipulation for scalable and robust quantum circuit verification\",\n        \"The Isabelle framework\",\n        \"Model checking QCTL plus on quantum Markov chains\",\n        \"Quartz: superoptimization of quantum circuits\",\n        \"Floyd-Hoare logic for quantum programs\",\n        \"Quantum abstract interpretation\",\n        \"Coqq: Foundational verification of quantum programs\",\n        \"An applied quantum Hoare logic\",\n        \"On the principles of differentiable quantum programming languages\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in AutoQ 2.0: From Verification of Quantum Circuits to Verification of Quantum Programs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}