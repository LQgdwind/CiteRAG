{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 184 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Study on Training and Developing Large Language Models for Behavior Tree Generation\n\nPaper Abstract: Abstract This paper presents an innovative exploration of the application potential of large language models (LLM) in addressing the challenging task of automatically generating behavior trees (BTs) for complex tasks. The conventional manual BT generation method is inefficient and heavily reliant on domain expertise. On the other hand, existing automatic BT generation technologies encounter bottlenecks related to task complexity, model adaptability, and reliability. In order to overcome these challenges, we propose a novel methodology that leverages the robust representation and reasoning abilities of LLMs. The core contribution of this paper lies in the design of a BT generation framework based on LLM, which encompasses the entire process, from data synthesis and model training to application developing and data verification. Synthetic data is introduced to train the BT generation model (BTGen model), enhancing its understanding and adaptability to various complex tasks, thereby significantly improving its overall performance. In order to ensure the effectiveness and executability of the generated BTs, we emphasize the importance of data verification and introduce a multilevel verification strategy. Additionally, we explore a range of agent design and development schemes with LLM as the central element. We hope that the work in this paper may provide a reference for the researchers who are interested in BT generation based on LLMs.\n\n{retrieved_text}\n\nGenerate exactly 184 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 184\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"micros.bt: An event-driven behavior tree framework for swarm robots\",\n        \"Combining planning and learning of behavior trees for robotic assembly\",\n        \"Behavior trees in robotics and AI: An introduction\",\n        \"An expressiveness hierarchy of behavior trees and related architectures\",\n        \"Improving the parallel execution of behavior trees\",\n        \"Adding neural network controllers to behavior trees without destroying performance guarantees\",\n        \"Autonomous acquisition of behavior trees for robot control\",\n        \"Learning behavior trees from demonstration\",\n        \"Ql-bt: Enhancing behaviour tree design and implementation with q-learning\",\n        \"Re: Bt-espresso: Improving interpretability and expressivity of behavior trees learned from robot demonstrations\",\n        \"Synthesis of correct-by-construction behavior trees\",\n        \"Representing robot task plans as robust logical-dynamical systems\",\n        \"Towards blended reactive planning and acting using behavior trees\",\n        \"An autonomous task algorithm based on behavior trees for robot\",\n        \"Costar: Instructing collaborative robots with behavior trees and vision\",\n        \"A behavior tree cognitive assistant system for emergency medical services\",\n        \"Simulation and real time analysis of network protection tripping strategy based on behavior trees\",\n        \"Adaptive human behavior modeling for air combat simulation\",\n        \"Modeling, learning, and simulating human activities of daily living with behavior trees\",\n        \"A survey of behavior trees in robotics and ai\",\n        \"Autonomous task planning and acting for micro aerial vehicles\",\n        \"Extended behavior trees for quick definition of flexible robotic tasks\",\n        \"Tree-structured policy planning with learned behavior models\",\n        \"Learning to adapt the parameters of behavior trees and motion generators to task variations\",\n        \"Dream to control: Learning behaviors by latent imagination\",\n        \"Behavior tree design of intelligent behavior of non-player character (npc) based on unity3d\",\n        \"Robot behavior-tree-based task generation with large language models\",\n        \"Gpt-4 technical report\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Behavior-tree embeddings for robot task-level knowledge\",\n        \"Llm-brain: Ai-driven fast generation of robot behaviour tree based on large language model\",\n        \"A survey of large language models\",\n        \"Glm: General language model pretraining with autoregressive blank infilling\",\n        \"Starcoder: may the source be with you!\",\n        \"Codefuse-13b: A pretrained multi-lingual code large language model\",\n        \"Deep learning\",\n        \"Understanding deep learning (still) requires rethinking generalization\",\n        \"On the opportunities and risks of foundation models\",\n        \"What language model to train if you have one million gpu hours?\",\n        \"Language models are unsupervised multitask learners\",\n        \"A survey for in-context learning\",\n        \"Glu variants improve transformer\",\n        \"Roformer: Enhanced transformer with rotary position embedding\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Glm-130b: An open bilingual pre-trained model\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"Augmented language models: a survey\",\n        \"Webgpt: Browser-assisted question-answering with human feedback\",\n        \"Webshop: Towards scalable real-world web interaction with grounded language agents\",\n        \"Language models as zero-shot planners: Extracting actionable knowledge for embodied agents\",\n        \"Inner monologue: Embodied reasoning through planning with language models\",\n        \"Codegen: An open large language model for code with multi-turn program synthesis\",\n        \"Evaluating large language models trained on code\",\n        \"Code llama: Open foundation models for code\",\n        \"Finding needles in a haystack: Sampling structurally-diverse training sets from synthetic data for compositional generalization\",\n        \"Learning to generate overlap summaries through noisy synthetic data\",\n        \"Synthetic data for model selection\",\n        \"New oracle-efficient algorithms for private synthetic data release\",\n        \"Generating private synthetic data with genetic algorithms\",\n        \"Beyond human data: Scaling self-training for problem-solving with language models\",\n        \"Constrained labeled data generation for low-resource named entity recognition\",\n        \"A pipeline for generating, annotating and employing synthetic data for real world question answering\",\n        \"3d-aware facial landmark detection via multi-view consistent training on synthetic data\",\n        \"Evolvingbehavior: Towards co-creative evolution of behavior trees for game npcs\",\n        \"A framework for learning behavior trees in collaborative robotic applications\",\n        \"Optimization of parameterized behavior trees in rts games\",\n        \"Automatic generation of behavior trees for the execution of robotic manipulation tasks\",\n        \"Safe explainable agents for autonomous navigation using evolving behavior trees\",\n        \"Evolutionary behavior tree approaches for navigating platform games\",\n        \"Efficiently evolving swarm behaviors using grammatical evolution with ppa-style behavior trees\",\n        \"Learning behavior trees with genetic programming in unpredictable environments\",\n        \"Evolving instinctive behaviour in resource-constrained autonomous agents using grammatical evolution\",\n        \"Learning behavior trees from planning experts using decision tree and logic factorization\",\n        \"Specification-guided behavior tree synthesis and execution for coordination of autonomous systems\",\n        \"Bt expansion: a sound and complete algorithm for behavior planning of intelligent robots with behavior trees\",\n        \"Deliberative acting, planning and learning with hierarchical operational models\",\n        \"Automatic decentralized behavior tree synthesis and execution for coordination of intelligent vehicles\",\n        \"State-aware layered bts—behavior tree extensions for post-actions, preferences and local priorities in robotic applications\",\n        \"Combining context awareness and planning to learn behavior trees from demonstration\",\n        \"Self-optimizing agents using mixed initiative behavior trees\",\n        \"Active inference and behavior trees for reactive action planning and execution in robotics\",\n        \"Task planning with belief behavior trees\",\n        \"Query-enabled behavior trees\",\n        \"To resume or not to resume: A behavior tree extension\",\n        \"Action node graph: Graph design for mobile robot route planning in cities\",\n        \"Behavior tree learning for robotic task planning through monte carlo dag search over a formal grammar\",\n        \"Synthesis and online re-planning framework for time-constrained behavior tree\",\n        \"Learning and executing re-usable behaviour trees from natural language instruction\",\n        \"Skeleton-of-thought: Large language models can do parallel decoding\",\n        \"Everything of thoughts: Defying the law of penrose triangle for thought generation\",\n        \"Self-instruct: Aligning language models with self-generated instructions\",\n        \"Wizardlm: Empowering large language models to follow complex instructions\",\n        \"Dobf: A deobfuscation pre-training objective for programming languages\",\n        \"Contrastive code representation learning\",\n        \"Integrating tree path in transformer for code representation\",\n        \"Competition-level code generation with alphacode\",\n        \"Codet: Code generation with generated tests\",\n        \"Planning with large language models for code generation\",\n        \"Coderl: Mastering code generation through pretrained models and deep reinforcement learning\",\n        \"Rltf: Reinforcement learning from unit test feedback\",\n        \"P-tuning v2: Prompt tuning can be comparable to fine-tuning universally across scales and tasks\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Qlora: Efficient finetuning of quantized llms\",\n        \"Tree of thoughts: Deliberate problem solving with large language models, may 2023\",\n        \"Graph of thoughts: Solving elaborate problems with large language models\",\n        \"Structured chain-of-thought prompting for code generation\",\n        \"Chain of code: Reasoning with a language model-augmented code emulator\",\n        \"What makes good in-context examples for gpt-333?\",\n        \"In-context examples selection for machine translation\",\n        \"k𝑘k nn prompting: Beyond-context learning with calibration-free nearest neighbor inference\",\n        \"Fantastically ordered prompts and where to find them: Overcoming few-shot prompt order sensitivity\",\n        \"On the relation between sensitivity and accuracy in in-context learning\",\n        \"Instructeval: Systematic evaluation of instruction selection methods\",\n        \"Ghost in the minecraft: Generally capable agents for open-world enviroments via large language models with text-based knowledge and memory\",\n        \"Voyager: An open-ended embodied agent with large language models\",\n        \"Plan4mc: Skill reinforcement learning and planning for open-world minecraft tasks\",\n        \"Hugginggpt: Solving ai tasks with chatgpt and its friends in huggingface\",\n        \"Self-rag: Learning to retrieve, generate, and critique through self-reflection\",\n        \"Thought propagation: An analogical approach to complex reasoning with large language models\",\n        \"Skcoder: A sketch-based approach for automatic code generation\",\n        \"Art: Automatic multi-step reasoning and tool-use for large language models\",\n        \"Retrieval-augmented generation for knowledge-intensive nlp tasks\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Toolcoder: Teach code generation models to use apis with search tools\",\n        \"Craft: Customizing llms by creating and retrieving from specialized toolsets\",\n        \"Large language models as tool makers\",\n        \"Toolink: Linking toolkit creation and using through chain-of-solving on open-source model\",\n        \"Generalized planning in pddl domains with pretrained large language models\",\n        \"Monte carlo tree search: A review of recent modifications and applications\",\n        \"Language agent tree search unifies reasoning acting and planning in language models\",\n        \"Reasoning with language model is planning with world model\",\n        \"Dynamic planning with a llm\",\n        \"Self-collaboration code generation via chatgpt\",\n        \"Communicative agents for software development\",\n        \"Dynamic llm-agent network: An llm-agent collaboration framework with agent team optimization\",\n        \"Self-refine: Iterative refinement with self-feedback\",\n        \"Reflexion: Language agents with verbal reinforcement learning\",\n        \"Isr-llm: Iterative self-refined large language model for long-horizon sequential task planning\",\n        \"Self-taught optimizer (stop): Recursively self-improving code generation\",\n        \"Glue: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Superglue: A stickier benchmark for general-purpose language understanding systems\",\n        \"Clue: A chinese language understanding evaluation benchmark\",\n        \"Lmsys-chat-1m: A large-scale real-world llm conversation dataset\",\n        \"Judging llm-as-a-judge with mt-bench and chatbot arena\",\n        \"Longbench: A bilingual, multitask benchmark for long context understanding\",\n        \"Chinese open instruction generalist: A preliminary release\",\n        \"Finetuned language models are zero-shot learners\",\n        \"The flan collection: Designing data and methods for effective instruction tuning\",\n        \"Opt-iml: Scaling language model instruction meta learning through the lens of generalization\",\n        \"Super-naturalinstructions: Generalization via declarative instructions on 1600+ nlp tasks\",\n        \"Commonsenseqa: A question answering challenge targeting commonsense knowledge\",\n        \"Piqa: Reasoning about physical commonsense in natural language\",\n        \"Socialiqa: Commonsense reasoning about social interactions\",\n        \"Hellaswag: Can a machine really finish your sentence?\",\n        \"An empirical study of instruction-tuning large language models in chinese\",\n        \"From lsat: The progress and challenges of complex reasoning\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"Diagnosing the first-order logical reasoning ability through logicnli\",\n        \"Natural language inference in context-investigating contextual reasoning over long texts\",\n        \"Reclor: A reading comprehension dataset requiring logical reasoning\",\n        \"Logiqa: A challenge dataset for machine reading comprehension with logical reasoning\",\n        \"Planbench: An extensible benchmark for evaluating large language models on planning and reasoning about change\",\n        \"Api-bank: A benchmark for tool-augmented llms\",\n        \"Gorilla: Large language model connected with massive apis\",\n        \"On the tool manipulation capability of open-source large language models\",\n        \"Toolllm: Facilitating large language models to master 16000+ real-world apis\",\n        \"Program synthesis with large language models\",\n        \"Measuring coding challenge competence with apps\",\n        \"Multipl-e: a scalable and polyglot approach to benchmarking neural code generation\",\n        \"Is your code generated by chatgpt really correct? rigorous evaluation of large language models for code generation\",\n        \"Codegeex: A pre-trained model for code generation with multilingual evaluations on humaneval-x\",\n        \"Codexglue: A machine learning benchmark dataset for code understanding and generation\",\n        \"Xlcost: A benchmark dataset for cross-lingual code intelligence\",\n        \"Octopack: Instruction tuning code large language models\",\n        \"Spoc: Search-based pseudocode to code\",\n        \"Large language models empowered agent-based modeling and simulation: A survey and perspectives\",\n        \"Mindagent: Emergent gaming interaction\",\n        \"Alfworld: Aligning text and embodied environments for interactive learning\",\n        \"Appagent: Multimodal agents as smartphone users\",\n        \"Textworld: A learning environment for text-based games\",\n        \"Alfred: A benchmark for interpreting grounded instructions for everyday tasks\",\n        \"Virtualhome: Simulating household activities via programs\",\n        \"Codecot and beyond: Learning to program and test like a developer\",\n        \"Llmr: Real-time prompting of interactive worlds using large language models\"\n    ],\n    \"reasoning\": \"Selected these 184 references because they represent foundational work and recent advances in A Study on Training and Developing Large Language Models for Behavior Tree Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}