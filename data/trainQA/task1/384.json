{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Verification and Design Methods for the BrainScaleS Neuromorphic Hardware System\n\nPaper Abstract: Abstract This paper presents verification and implementation methods that have been developed for the design of the BrainScaleS-2 65 nmtimes65nm65\\text{\\,}\\mathrm{n}\\mathrm{m} ASICs. The 2nd generation BrainScaleS chips are mixed-signal devices with tight coupling between full-custom analog neuromorphic circuits and two general purpose microprocessors (PPU) with SIMD extension for on-chip learning and plasticity. Simulation methods for automated analysis and pre-tapeout calibration of the highly parameterizable analog neuron and synapse circuits and for hardware-software co-development of the digital logic and software stack are presented. Accelerated operation of neuromorphic circuits and highly-parallel digital data buses between the full-custom neuromorphic part and the PPU require custom methodologies to close the digital signal timing at the interfaces. Novel extensions to the standard digital physical implementation design flow are highlighted. We present early results from the first full-size BrainScaleS-2 ASIC containing 512 neurons and 130 K synapses, demonstrating the successful application of these methods. An application example illustrates the full functionality of the BrainScaleS-2 hybrid plasticity architecture.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"From lif to adex neuron models: Accelerated analog 65 nm cmos implementation\",\n        \"A mixed-signal structured adex neuron for accelerated neuromorphic cores\",\n        \"An accelerated lif neuronal network array for a large-scale mixed-signal neuromorphic architecture\",\n        \"Rtl verification strategies\",\n        \"Truenorth: Design and tool flow of a 65 mw 1 million neuron programmable neurosynaptic chip\",\n        \"Long short-term memory and learning-to-learn in networks of spiking neurons\",\n        \"Static Timing Analysis for Nanometer Designs - A Practical Approach\",\n        \"Neuromorphic hardware learns to learn\",\n        \"OCEAN Reference\",\n        \"Virtuoso Analog Design Environment XL User Guide\",\n        \"Control of criticality and computation in spiking neuromorphic networks with plasticity\",\n        \"Pharmacology and nerve endings\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"Efficient implementation of stdp rules on spinnaker neuromorphic hardware\",\n        \"Reinforcement learning using a continuous time actor-critic framework with spiking neurons\",\n        \"A new approach to learning in neuromorphic hardware\",\n        \"The nux processor v3.0\",\n        \"Omnibus on-chip bus\",\n        \"Demonstrating hybrid learning in a flexible neuromorphic hardware system\",\n        \"Large-scale neuromorphic computing systems\",\n        \"The spinnaker project\",\n        \"Adaptive exponential integrate-and-fire model\",\n        \"Implementation and characterization of mixed-signal neuromorphic ASICs\",\n        \"Modern semiconductor technologies for neuromorphic hardware\",\n        \"An analog dynamic memory array for neuromorphic hardware\",\n        \"A compact clock generator for heterogeneous gals mpsocs in 65-nm cmos technology\",\n        \"Matplotlib: A 2d graphics environment\",\n        \"SciPy: Open source scientific tools for Python\",\n        \"Accelerated physical emulation of bayesian inference in spiking neural networks\",\n        \"A million spiking-neuron integrated circuit with a scalable communication network and interface\",\n        \"A scalable multicore architecture with heterogeneous memory structures for dynamic neuromorphic asynchronous processors (dynaps)\",\n        \"Modeling and verification for a scalable neuromorphic substrate\",\n        \"Open core protocol specification 3.0\",\n        \"A guide to NumPy, vol. 1\",\n        \"PowerISA version 2.03\",\n        \"A wafer-scale neuromorphic hardware system for large-scale neural modeling\",\n        \"Modeling synaptic plasticity within networks of highly accelerated I&F neurons\",\n        \"Implementing synaptic plasticity in a VLSI spiking neural network model\",\n        \"Neuromorphic hardware in the loop: Training a deep spiking network on the brainscales wafer-scale system\",\n        \"A 32gbit/s communication soc for a waferscale neuromorphic system\",\n        \"Integrating systemc models with verilog and systemverilog models using the systemverilog direct programming interface\",\n        \"Reinforcement learning: An introduction\",\n        \"TSMC 65nm Core Library\",\n        \"Large-scale neuromorphic spiking array processors: A quest to mimic the brain\",\n        \"The neural code between neocortical pyramidal neurons depends on neurotransmitter release probability\",\n        \"Demonstrating advantages of neuromorphic computation: a pilot study\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Verification and Design Methods for the BrainScaleS Neuromorphic Hardware System, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}