{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 Introduction\n\nPaper Abstract: Abstract Self-driving cars and autonomous vehicles are revolutionizing the automotive sector, shaping the future of mobility altogether. Although the integration of novel technologies such as Artificial Intelligence (AI) and Cloud/Edge computing provides golden opportunities to improve autonomous driving applications, there is the need to modernize accordingly the whole prototyping and deployment cycle of AI components. This paper proposes a novel framework for developing so-called AI Inference Engines for autonomous driving applications based on deep learning modules, where training tasks are deployed elastically over both Cloud and Edge resources, with the purpose of reducing the required network bandwidth, as well as mitigating privacy issues. Based on our proposed data driven V-Model, we introduce a simple yet elegant solution for the AI components development cycle, where prototyping takes place in the cloud according to the Software-in-the-Loop (SiL) paradigm, while deployment and evaluation on the target ECUs (Electronic Control Units) is performed as Hardware-in-the-Loop (HiL) testing. The effectiveness of the proposed framework is demonstrated using two real-world use-cases of AI inference engines for autonomous vehicles, that is environment perception and most probable path prediction.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Survey of Deep Learning Techniques for Autonomous Driving\",\n        \"Cloud-Based Industrial Cyber–Physical System for Data-Driven Reasoning: A Review and Use Case on an Industry 4.0 Pilot Line\",\n        \"MATLAB\",\n        \"Deep Learning on AWS\",\n        \"The Analyst Toolbox\",\n        \"An Analysis of ISO 26262: Using Machine Learning Safely in Automotive Software\",\n        \"TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems\",\n        \"Automatic differentiation in PyTorch\",\n        \"Caffe: Convolutional Architecture for Fast Feature Embedding\",\n        \"Parallelizing machine learning algorithms\",\n        \"Gartner’s strategic tech trends show the need for an empowered edge and network for a smarter world\",\n        \"Top Risks for Legal and Compliance Leaders in 2018\",\n        \"THE CONNECTED CAR REPORT: Forecasts, competing technologies, and leading manufacturers\",\n        \"Enhancing connected car adoption: Security and over the air update framework\",\n        \"When deep learning meets edge computing\",\n        \"Learning IoT in Edge: Deep Learning for the Internet of Things with Edge Computing\",\n        \"Task Scheduling with Optimized Transmission Time in Collaborative Cloud-Edge Learning\",\n        \"Representation learning: A review and new perspectives\",\n        \"Autoencoders, minimum description length and Helmholtz free energy\",\n        \"Dropout: A simple way to prevent neural networks from overfitting\",\n        \"ImageNet Large Scale Visual Recognition Challenge\",\n        \"Vision Meets Robotics: The KITTI Dataset\",\n        \"NuScenes: A multimodal Dataset for Autonomous Driving\",\n        \"Cityscapes Data Collection\",\n        \"Generative One-Shot Learning (GOL): A Semi-Parametric Approach to One-Shot Learning in Autonomous Vision\",\n        \"The WEKA data mining software: an update\",\n        \"Strategies and principles of distributed machine learning on big data\",\n        \"Storm@ twitter\",\n        \"Spark: Cluster computing with working sets\",\n        \"Large scale distributed deep learning on hadoop clusters\",\n        \"Distributed TensorFlow: Scaling Google’s Deep Learning Library on Spark\",\n        \"Federated Machine Learning: Concept and Applications\",\n        \"Federated Optimization: Distributed Machine Learning for On-Device Intelligence\",\n        \"Distributed Deep Learning Model for Intelligent Video Surveillance Systems with Edge Computing\",\n        \"Deep learning in the automotive industry: Applications and tools\",\n        \"Convolutional Neural Networks on embedded automotive platforms: a qualitative comparison\",\n        \"Mit autonomous vehicle technology study: Large-scale deep learning based analysis of driver behavior and interaction with automation\",\n        \"SAE J3016 - Levels of Driving Automation\",\n        \"Autonomous vehicle implementation predictions\",\n        \"Collaborative Learning on the Edges: A Case Study on Connected Vehicles\",\n        \"Differentially Private Collaborative Learning for the IoT Edge\",\n        \"Privacy Preserving Back-Propagation Neural Network Learning Made Practical with Cloud Computing\",\n        \"SecureML: A System for Scalable Privacy-Preserving Machine Learning\",\n        \"Sharemind: A Framework for Fast Privacy-Preserving Computations\",\n        \"Deep learning with differential privacy\",\n        \"Elastic symbiotic scaling of operators and resources in stream processing systems\",\n        \"SegNet: A Deep Convolutional Encoder-Decoder Architecture for Image Segmentation\",\n        \"You Only Look Once: Unified, Real-Time Object Detection\",\n        \"Deep Grid Net (DGN): A Deep Learning System for Real-Time Driving Context Understanding\",\n        \"The Cambridge-driving Labeled Video Database\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in 1 Introduction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}