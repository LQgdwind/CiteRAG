{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Tempura: A General Cost-Based Optimizer Framework for Incremental Data Processing (Extended Version)\n\nPaper Abstract: Abstract Incremental processing is widely-adopted in many applications, ranging from incremental view maintenance, stream computing, to recently emerging progressive data warehouse and intermittent query processing. Despite many algorithms developed on this topic, none of them can produce an incremental plan that always achieves the best performance, since the optimal plan is data dependent. In this paper, we develop a novel cost-based optimizer framework, called Tempura, for optimizing incremental data processing. We propose an incremental query planning model called TIP based on the concept of time-varying relations, which can formally model incremental processing in its most general form. We give a full specification of Tempura, which can not only unify various existing techniques to generate an optimal incremental plan, but also allow the developer to add their rewrite rules. We study how to explore the plan space and search for an optimal incremental plan. We conduct a thorough experimental evaluation of Tempura in various incremental processing scenarios to show its effectiveness and efficiency.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Alibaba Cloud MaxCompute\",\n        \"Amazon spot instance pricing history\",\n        \"Apache Calcite\",\n        \"Apache Flink\",\n        \"Introducing Stream-Stream Joins in Apache Spark 2.3\",\n        \"The TPC-DS Benchmark\",\n        \"The design of the borealis stream processing engine\",\n        \"The aqua approximate query answering system\",\n        \"Dbtoaster: Higher-order delta processing for dynamic, frequently fresh views\",\n        \"Static analysis techniques for predicting the behavior of active database rules\",\n        \"The cql continuous query language: semantic foundations and query execution\",\n        \"Dynamic sample selection for approximate query processing\",\n        \"Proactive re-optimization\",\n        \"One SQL to rule them all\",\n        \"Apache calcite: A foundational framework for optimized query processing over heterogeneous data sources\",\n        \"Efficiently updating materialized views\",\n        \"Efficiently monitoring relational databases\",\n        \"Query suspend and resume\",\n        \"Scalable progressive analytics on big data in the cloud\",\n        \"Optimized stratified sampling for approximate query processing\",\n        \"Optimizing queries with materialized views\",\n        \"Supporting views in data stream management systems\",\n        \"The cascades framework for query optimization\",\n        \"Robust query processing (dagstuhl seminar 12321)\",\n        \"The volcano optimizer generator: Extensibility and efficient search\",\n        \"Algebraic change propagation for semijoin and outerjoin queries\",\n        \"Incremental maintenance of views with duplicates\",\n        \"Parametric query optimization\",\n        \"Drum: A rhythmic approach to interactive analytics on large data\",\n        \"Efficient and provable multi-query optimization\",\n        \"Incremental query evaluation in a ring of databases\",\n        \"Partial results in database systems\",\n        \"Efficient maintenance of materialized outer-join views\",\n        \"Query languages and data models for database sequences and data streams\",\n        \"Implementing an interpreter for functional rules in a query optimizer\",\n        \"Semantics of data streams and operators\",\n        \"Query processing, resource management, and approximation in a data stream management system\",\n        \"How to win a hot dog eating contest: Distributed incremental view maintenance with batch updates\",\n        \"Partial results for online query processing\",\n        \"Efficient and extensible algorithms for multi query optimization\",\n        \"Streams and tables: Two sides of the same coin\",\n        \"Access path selection in a relational database management system\",\n        \"Orca: A modular query optimizer architecture for big data\",\n        \"Intermittent query processing\",\n        \"Continuous queries over append-only databases\",\n        \"Smm: A data stream management system for knowledge discovery\",\n        \"Rate-based query optimization for streaming information sources\",\n        \"Grosbeak: A data warehouse supporting resource-aware incremental computing\",\n        \"On the calculation of optimality ranges for relational query execution plans\",\n        \"Robust query optimization methods with respect to estimation errors: A survey\",\n        \"Distributed aggregation for data-parallel computing: interfaces and implementations\",\n        \"iolap: Managing uncertainty for efficient incremental olap\",\n        \"Icedb: Intermittently-connected continuous query processing\",\n        \"Efficient exploitation of similar subexpressions for query processing\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Tempura: A General Cost-Based Optimizer Framework for Incremental Data Processing (Extended Version), providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}