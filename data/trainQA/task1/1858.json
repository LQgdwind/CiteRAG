{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Definitional Quantifiers Realise Semantic Reasoning for Proof by Induction\n\nPaper Abstract: Abstract Proof assistants offer tactics to apply proof by induction, but these tactics rely on inputs given by human engineers. To automate this laborious process, we developed SeLFiE, a boolean query language to represent experienced users’ knowledge on how to apply the induct tactic in Isabelle/HOL: when we apply an induction heuristic written in SeLFiE to an inductive problem and arguments to the induct tactic, the SeLFiE interpreter judges whether the arguments are plausible for that problem according to the heuristic by examining both the syntactic structure of the problem and definitions of the relevant constants. To examine the intricate interaction between syntactic analysis and analysis of constant definitions, we introduce definitional quantifiers. For evaluation we build an automatic induction prover using SeLFiE. Our evaluation based on 347 inductive problems shows that our new prover achieves 1.4⋅103%⋅1.4percentsuperscript1031.4\\cdot{}10^{3}\\% improvement over the corresponding baseline prover for 1.0 second of timeout and the median value of speedup is 4.48x.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tactic learning and proving for the coq proof assistant\",\n        \"Extending sledgehammer with SMT solvers\",\n        \"Sledgehammer: Judgement day\",\n        \"A computational logic handbook, Perspectives in computing, vol. 23\",\n        \"The use of explicit plans to guide inductive proofs\",\n        \"The automation of proof by mathematical induction\",\n        \"Rippling: A heuristic for guiding inductive proofs\",\n        \"Superposition with structural induction\",\n        \"Hammer for Coq: Automation for dependent type theory\",\n        \"A proof planning framework for Isabelle\",\n        \"IsaPlanner: A prototype proof planner in Isabelle\",\n        \"TacticToe: Learning to reason with HOL4 tactics\",\n        \"HOL light: A tutorial introduction\",\n        \"Proof-pattern recognition and lemma discovery in ACL2\",\n        \"Induction with generalization in superposition reasoning\",\n        \"Machine learning for inductive theorem proving\",\n        \"Hipster: Integrating theory exploration in a proof assistant\",\n        \"An overview of common Lisp\",\n        \"Hol(y)hammer: Online ATP service for HOL light\",\n        \"An industrial strength theorem prover for a logic based on Common Lisp\",\n        \"The Archive of Formal Proofs\",\n        \"First-order theorem proving and vampire\",\n        \"Priority search trees\",\n        \"Verifythis 2019 – polished isabelle solutions\",\n        \"Binomial heaps and skew binomial heaps\",\n        \"Computational logic : structure sharing and proof of program properties\",\n        \"Symbolic simulation: An ACL2 approach\",\n        \"Automation of mathematical induction as part of the history of logic\",\n        \"The lean theorem prover (system description)\",\n        \"Data61/PSL\",\n        \"LiFtEr: Language to encode induction heuristics for Isabelle/HOL\",\n        \"Smart induction for Isabelle/HOL (tool paper)\",\n        \"Faster smarter proof by induction in Isabelle/HOL\",\n        \"PaMpeR: proof method recommendation system for Isabelle/HOL\",\n        \"A proof strategy language and proof script generation for Isabelle/HOL\",\n        \"Goal-oriented conjecturing for Isabelle/HOL\",\n        \"Boolean expression checkers\",\n        \"Concrete Semantics - With Isabelle/HOL\",\n        \"Isabelle/HOL - a proof assistant for higher-order logic, Lecture Notes in Computer Science, vol. 2283\",\n        \"Depth first search\",\n        \"The imandra automated reasoning system (system description)\",\n        \"Multidimensional binary search trees\",\n        \"Induction in saturation-based proof search\",\n        \"A sequential imperative programming language syntax, semantics, hoare logics and verification environment\",\n        \"Linear temporal logic\",\n        \"A brief overview of HOL4\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Definitional Quantifiers Realise Semantic Reasoning for Proof by Induction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}