{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: TNT-KID: Transformer-based Neural Tagger for Keyword Identification\n\nPaper Abstract: Abstract With growing amounts of available textual data, development of algorithms capable of automatic analysis, categorization and summarization of these data has become a necessity. In this research we present a novel algorithm for keyword identification, i.e., an extraction of one or multi-word phrases representing key aspects of a given document, called Transformer-based Neural Tagger for Keyword IDentification (TNT-KID). By adapting the transformer architecture for a specific task at hand and leveraging language model pretraining on a domain specific corpus, the model is capable of overcoming deficiencies of both supervised and unsupervised state-of-the-art approaches to keyword extraction by offering competitive and robust performance on a variety of different datasets while requiring only a fraction of manually labeled data required by the best performing systems. This study also offers thorough error analysis with valuable insights into the inner workings of the model and an ablation study measuring the influence of specific components of the keyword identification workflow on the overall performance.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Adaptive input representations for neural language modeling\",\n        \"SciBERT: A pretrained language model for scientific text\",\n        \"Enriching Word Vectors with Subword Information\",\n        \"TopicRank: Graph-based topic ranking for keyphrase extraction\",\n        \"A Text Feature Based Automatic Keyword Extraction Method for Single Documents\",\n        \"YAKE! collection-independent automatic keyword extractor\",\n        \"YAKE! Keyword extraction from single documents using multiple local features\",\n        \"Neural keyphrase generation via reinforcement learning with adaptive rewards\",\n        \"Transformer-xl: Attentive language models beyond a fixed-length context\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"KP-Miner: A keyphrase extraction system for English and Arabic documents\",\n        \"Keyword extraction: Issues and methods\",\n        \"The viterbi algorithm\",\n        \"KPTimes: A Large-Scale Dataset for Keyphrase Generation on News Documents\",\n        \"A dataset of syntactic-ngrams over time from a very large corpus of english books\",\n        \"Incorporating expert knowledge into keyphrase extraction\",\n        \"Efficient softmax approximation for GPUs\",\n        \"Incorporating copying mechanism in sequence-to-sequence learning\",\n        \"Automatic keyphrase extraction: A survey of the state of the art\",\n        \"Universal language model fine-tuning for text classification\",\n        \"Improved automatic keyword extraction given more linguistic knowledge\",\n        \"What does BERT learn about the structure of language?\",\n        \"SemEval-2010 Task 5: Automatic Keyphrase Extraction from Scientific Articles\",\n        \"Large dataset for keyphrases extraction\",\n        \"Sentencepiece: A simple and language independent subword tokenizer and detokenizer for neural text processing\",\n        \"Conditional random fields: Probabilistic models for segmenting and labeling sequence data\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"NLTK: The Natural Language Toolkit\",\n        \"Scientific information extraction with semi-supervised neural tagging\",\n        \"Human-competitive tagging using automatic keyphrase extraction\",\n        \"Deep keyphrase generation\",\n        \"Does Order Matter? An Empirical Study on Generating Multiple Keyphrases as a Sequence\",\n        \"Textrank: Bringing order into text\",\n        \"Keyphrase extraction in scientific publications\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"Deep contextualized word representations\",\n        \"Language models are unsupervised multitask learners\",\n        \"Automatic keyword extraction from individual documents\",\n        \"Keyphrase Extraction from Scholarly Articles as Sequence Labeling using Contextualized Embeddings\",\n        \"RaKUn: Rank-based Keyword extraction via Unsupervised learning and Meta vertex aggregation\",\n        \"Topical word importance for fast keyphrase extraction\",\n        \"Ernie: Enhanced representation through knowledge integration\",\n        \"Attention is all you need\",\n        \"Single Document Keyphrase Extraction Using Neighborhood Knowledge\",\n        \"Kea: Practical automated keyphrase extraction\",\n        \"One Size Does Not Fit All: Generating and Evaluating Variable Number of Keyphrases\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in TNT-KID: Transformer-based Neural Tagger for Keyword Identification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}