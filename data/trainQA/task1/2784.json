{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: IOT: Instance-wise Layer Reordering for Transformer Structures\n\nPaper Abstract: Abstract With sequentially stacked self-attention, (optional) encoder-decoder attention, and feed-forward layers, Transformer achieves big success in natural language processing (NLP), and many variants have been proposed. Currently, almost all these models assume that the layer order is fixed and kept the same across data samples. We observe that different data samples actually favor different orders of the layers. Based on this observation, in this work, we break the assumption of the fixed layer order in Transformer and introduce instance-wise layer reordering into model structure. Our Instance-wise Ordered Transformer (IOT) can model variant functions by reordered layers, which enables each sample to select the better one to improve the model performance under the constraint of almost same number of parameters. To achieve this, we introduce a light predictor with negligible parameter and inference cost to decide the most capable and favorable layer order for any input sequence. Experiments on 333 tasks (neural machine translation, abstractive summarization, and code generation) and 999 datasets demonstrate consistent improvements of our method. We further show that our method can also be applied to other architectures beyond Transformer. Our code is released at Github111https://github.com/instance-wise-ordered-transformer/IOT.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Weighted transformer network for machine translation\",\n        \"Neural headline generation with minimum risk training\",\n        \"Controlling computation versus quality for neural sequence models\",\n        \"A parallel corpus of python functions and documentation strings for automated code documentation and code generation\",\n        \"Curriculum learning\",\n        \"Graph transformer for graph-to-sequence learning\",\n        \"End-to-end object detection with transformers\",\n        \"Active bias: Training more accurate neural networks by emphasizing high variance samples\",\n        \"Transformer-xl: Attentive language models beyond a fixed-length context\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Depth-adaptive transformer\",\n        \"Reducing transformer depth on demand with structured dropout\",\n        \"Learning to teach\",\n        \"Joint source-target self attention with locality constraints\",\n        \"English gigaword\",\n        \"Achieving human parity on automatic chinese to english news translation\",\n        \"Deep residual learning for image recognition\",\n        \"Identity mappings in deep residual networks\",\n        \"Summarizing source code with transferred api knowledge\",\n        \"Learning data manipulation for augmentation and weighting\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"Adam: A method for stochastic optimization\",\n        \"Reformer: The efficient transformer\",\n        \"Cross-lingual language model pretraining\",\n        \"Set transformer: A framework for attention-based permutation-invariant neural networks\",\n        \"Ensure the correctness of the summary: Incorporate entailment knowledge into abstractive sentence summarization\",\n        \"Rouge: A packagefor automatic evaluation of summaries\",\n        \"Global encoding for abstractive summarization\",\n        \"Fastbert: a self-distilling bert with adaptive inference time\",\n        \"Understanding and improving transformer from a multi-particle dynamic system point of view\",\n        \"Facebook fairâ€™s wmt19 news translation task submission\",\n        \"Scaling neural machine translation\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"Improving transformer models by reordering their sublayers\",\n        \"Language models are unsupervised multitask learners\",\n        \"Learning to reweight examples for robust deep learning\",\n        \"A neural attention model for sentence summarization\",\n        \"The right tool for the job: Matching model and instance complexities\",\n        \"Neural machine translation of rare words with subword units\",\n        \"Edinburgh neural machine translation systems for wmt 16\",\n        \"Self-attention with relative position representations\",\n        \"Outrageously large neural networks: The sparsely-gated mixture-of-experts layer\",\n        \"The evolved transformer\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Attention is all you need\",\n        \"Improving automatic source code summarization via deep reinforcement learning\",\n        \"Improving neural language modeling via adversarial training\",\n        \"A reinforced topic-aware convolutional sequence-to-sequence model for abstractive text summarization\",\n        \"Concept pointer network for abstractive summarization\",\n        \"Multi-agent dual learning\",\n        \"Code generation as a dual task of code summarization\",\n        \"Pay less attention with lightweight and dynamic convolutions\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in IOT: Instance-wise Layer Reordering for Transformer Structures, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}