{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Electron-Tunnelling-Noise Programmable Random Variate Accelerator for Monte Carlo Sampling\n\nPaper Abstract: Abstract This article presents an electron tunneling noise programmable random variate accelerator for accelerating the sampling stage of Monte Carlo simulations. We used the LiteX framework to generate a FemtoRV imfc RISC-V instruction set soft processor and deploy it on a Digilent Arty-100T FPGA development board. The RISC-V soft processor augmented with our programmable random variate accelerator achieves an average speedup of 8.70×8.70\\times and a median speedup of 8.68×8.68\\times for a suite of twelve different benchmark applications when compared to GNU Scientific Library software random number generation. These speedups are achievable because the benchmarks spend an average of 90.0 % of their execution time generating random samples. The results of the Monte Carlo benchmark programs run over the programmable random variate accelerator have an average Wasserstein distance of 1.48×1.48\\times and a median Wasserstein distance of 1.41×1.41\\times that of the results produced by the GNU Scientific Library random number generators. The soft processor samples the electron tunneling noise source using the hardened XADC block in the FPGA. The flexibility of the LiteX framework allows for the deployment of any LiteX-supported soft processor with an electron tunneling noise programmable random variate accelerator on any LiteX-supported development board that contains an FPGA with an XADC.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The laplace microarchitecture for tracking data uncertainty and its implementation in a risc-v processor\",\n        \"The laplace microarchitecture for tracking data uncertainty\",\n        \"Gaussian yolov3: An accurate and fast object detector using localization uncertainty for autonomous driving\",\n        \"Materials and devices as solutions to computational problems in machine learning\",\n        \"Domain-specific hardware accelerators\",\n        \"A new golden age for computer architecture\",\n        \"Non-Uniform Random Variate Generation\",\n        \"Kernel smoothing\",\n        \"Density estimation for statistics and data analysis\",\n        \"Bandwidth selection for kernel density estimation: a review of fully automatic selectors\",\n        \"A comparative review of bandwidth selection for kernel density estimation\",\n        \"A reliable data-based bandwidth selection method for kernel density estimation\",\n        \"Univariate distribution relationships\",\n        \"Avalanche noise source design\",\n        \"Liteos\",\n        \"Pcg: A family of simple fast space-efficient statistically good algorithms for random number generation\",\n        \"Micro benchmark: double-add\",\n        \"Micro benchmark: double-divide\",\n        \"Micro benchmark: double-multiply\",\n        \"Micro benchmark: double-subtract\",\n        \"Micro benchmark: schlieren\",\n        \"Micro benchmark: Dynamic viscosity\",\n        \"Micro benchmark: Thermal expansion coefficient\",\n        \"Calculating r0 for covid-19\",\n        \"Mathematical modeling and computation in finance: with exercises and Python and MATLAB computer codes\",\n        \"C++ for financial mathematics\",\n        \"A novel true random number generator based on a stochastic diffusive memristor\",\n        \"Architecting a stochastic computing unit with molecular optical devices XXmissing booktitle & seriesXXISCA’18\",\n        \"Efficient programmable random variate generation accelerator from sensor noise\",\n        \"A physical random variate generator\",\n        \"A comparison of cpus, gpus, fpgas, and massively parallel processor arrays for random number generation XXmissing booktitle & seriesXXFPGA’09\",\n        \"Source-device-independent ultrafast quantum random number generation\",\n        \"Source-device-independent heterodyne-based quantum random number generator at 17 gbps\",\n        \"Programmable quantum random number generator without postprocessing\",\n        \"Model, validation, and characterization of a robust quantum random number generator based on photon arrival time comparison\",\n        \"Gaussian random number generator: Implemented in fpga for quantum key distribution\",\n        \"Parallel real-time quantum random number generator\",\n        \"Accelerating markov random field inference with uncertainty quantification\",\n        \"Thermodynamic computing\",\n        \"A vision to compute like nature: thermodynamically\",\n        \"Thermodynamic ai and the fluctuation frontier\",\n        \"Thermodynamic linear algebra\",\n        \"Thermodynamic matrix exponentials and thermodynamic parallelism\",\n        \"Error mitigation for thermodynamic computing\",\n        \"Exploring thermodynamic ai\",\n        \"Probabilistic neural circuits leveraging ai-enhanced codesign for random number generation\",\n        \"Random bitstream generation using voltage-controlled magnetic anisotropy and spin orbit torque magnetic tunnel junctions\",\n        \"Probabilistic neural computing with stochastic devices\",\n        \"Stochastic neuromorphic circuits for solving maxcut\",\n        \"Stochastic magnetic actuated random transducer devices based on perpendicular magnetic tunnel junctions\",\n        \"Will stochastic devices play nice with others in neuromorphic hardware?: There’s more to a probabilistic system than noisy devices\",\n        \"Temperature-resilient true random number generation with stochastic actuated magnetic tunnel junction devices\",\n        \"Synaptic sampling of neural networks\",\n        \"Is stochastic thermodynamics the key to understanding the energy costs of computation?\",\n        \"Magnetic tunnel junction random number generators applied to dynamically tuned probability trees driven by spin orbit torque\",\n        \"Litex: an open-source soc builder and library based on migen python dsl\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Electron-Tunnelling-Noise Programmable Random Variate Accelerator for Monte Carlo Sampling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}