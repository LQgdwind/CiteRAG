{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: NestedSGX: Bootstrapping Trust to Enclaves within Confidential VMs\n\nPaper Abstract: Abstract. Integrity is critical for maintaining system security, as it ensures that only genuine software is loaded onto a machine. Although confidential virtual machines (CVMs) function within isolated environments separate from the host, it is important to recognize that users still encounter challenges in maintaining control over the integrity of the code running within the trusted execution environments (TEEs). The presence of a sophisticated operating system (OS) raises the possibility of dynamically creating and executing any code, making user applications within TEEs vulnerable to interference or tampering if the guest OS is compromised. This paper introduces NestedSGX, which leverages virtual machine privilege level (VMPL), a recent hardware feature available on AMD SEV-SNP to enable the creation of hardware enclaves within the guest VM. Similar to Intel SGX, NestedSGX considers the guest OS untrusted for loading potentially malicious code. It ensures that only trusted and measured code executed within the enclave can be remotely attested. To seamlessly protect existing applications, NestedSGX aims for compatibility with Intel SGX by simulating SGX leaf functions. We have also ported the SGX SDK to NestedSGX, enabling the use of existing SGX toolchains and applications in the system. Performance evaluations show that context switches in NestedSGX take about 35,000 – 37,000 cycles, approximately 2-3 times that of Intel SGX. NestedSGX incurs minimal overhead in most real-world applications, with an average overhead below 5% for most workloads and 23.0% for I/O intensive workloads.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Arm confidential compute architecture\",\n        \"Intel software guard extensions overview\",\n        \"The nbench benchmark ported to SGX\",\n        \"Core Workloads (YCSB)\",\n        \"SQLite\",\n        \"OpenSSL library for SGX application\",\n        \"Runtime Integrity Measurement and Attestation in a Trust Domain\",\n        \"SGXGauga comprehensive benchmark suite for Intel SGX\",\n        \"TLS handshakes benchmarking tool\",\n        \"AMD ESE\",\n        \"Guest Hypervisor Communication Block Standardization\",\n        \"Linux SVSM (Secure VM Service Module) for secure x86 virtualization in Rust\",\n        \"SEV Secure Nested Paging Firmware ABI Specification\",\n        \"Subverting Linux’integrity measurement architecture\",\n        \"SANCTUARY: ARMing TrustZone with User-space Enclaves.\",\n        \"Iago attacks: Why the system call API is a bad untrusted RPC interface\",\n        \"AEX-Notify: Thwarting Precise Single-Stepping Attacks through Interrupt Awareness for Intel SGX Enclaves\",\n        \"Komodo: Using verification to disentangle secure-enclave hardware from software\",\n        \"Hecate: Lifting and Shifting On-Premises Workloads to an Untrusted Cloud\",\n        \"Kaslr is dead: long live kaslr\",\n        \"Port or Shim? Stress Testing Application Performance on Intel SGX\",\n        \"Intel software guard extensions developer guide\",\n        \"Intel SGX SDK\",\n        \"Intel Trust Domain Extensions\",\n        \"HyperEnclave: An Open and Cross-platform Trusted Execution Environment\",\n        \"COIN attacks: On insecurity of enclave untrusted interfaces in SGX\",\n        \"Spectre attacks: Exploiting speculative execution\",\n        \"A Comprehensive Benchmark Suite for Intel SGX\",\n        \"Last-level cache side-channel attacks are practical\",\n        \"Container-IMA: A privacy-preserving Integrity Measurement Architecture for Containers\",\n        \"Honeycomb: Secure and Efficient GPU Executions via Static Validation\",\n        \"Linux/Unix nbench\",\n        \"Intel software guard extensions (Intel SGX) support for dynamic memory management inside an enclave\",\n        \"Remote attestation of SEV-SNP confidential VMs using e-vTPMs\",\n        \"Eleos: ExitLess OS services for SGX enclaves\",\n        \"Design and implementation of a TCG-based integrity measurement architecture\",\n        \"Strengthening VM isolation with integrity protection and more\",\n        \"Occlum: Secure and efficient multitasking inside a single enclave of intel sgx\",\n        \"TZ-IMA: Supporting Integrity Measurement for Applications with ARM TrustZone\",\n        \"Secure VM Service Module for SEV-SNP Guests\",\n        \"Switchless calls made practical in Intel SGX\",\n        \"Foreshadow: Extracting the keys to the Intel SGX kingdom with transient Out-of-Order execution\",\n        \"Telling your secrets without page faults: Stealthy page Table-Based attacks on enclaved execution\",\n        \"RIDL: Rogue in-flight data load\",\n        \"Towards memory safe enclave programming with rust-sgx\",\n        \"Leaky cauldron on the dark land: Understanding memory side-channel hazards in SGX\",\n        \"Regaining lost cycles with HotCalls: A fast interface for SGX secure enclaves\",\n        \"Controlled-channel attacks: Deterministic side channels for untrusted operating systems\",\n        \"vSGX: Virtualizing SGX Enclaves on AMD SEV\",\n        \"SecTEE: A software-based approach to secure enclave architecture using TEE\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in NestedSGX: Bootstrapping Trust to Enclaves within Confidential VMs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}