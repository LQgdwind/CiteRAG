{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient and Effective Similar Subtrajectory Search with Deep Reinforcement Learning\n\nPaper Abstract: Abstract Similar trajectory search is a fundamental problem and has been well studied over the past two decades. However, the similar subtrajectory search (SimSub) problem, aiming to return a portion of a trajectory (i.e., a subtrajectory), which is the most similar to a query trajectory, has been mostly disregarded despite that it could capture trajectory similarity in a finer-grained way and many applications take subtrajectories as basic units for analysis. In this paper, we study the SimSub problem and develop a suite of algorithms including both exact and approximate ones. Among those approximate algorithms, two that are based on deep reinforcement learning stand out and outperform those non-learning based algorithms in terms of effectiveness and efficiency. We conduct experiments on real-world trajectory datasets, which verify the effectiveness and efficiency of the proposed algorithms.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Subtrajectory clustering: Models and algorithms\",\n        \"Computing the fr√©chet distance between two polygonal curves\",\n        \"Approximate embedding-based subsequence matching of time series\",\n        \"R-max-a general polynomial time algorithm for near-optimal reinforcement learning\",\n        \"Detecting commuting patterns by clustering subtrajectories\",\n        \"On the marriage of lp-norms and edit distance\",\n        \"Robust and fast similarity search for moving object trajectories\",\n        \"Learning phrase representations using rnn encoder-decoder for statistical machine translation\",\n        \"Fast subsequence matching in time-series databases, volume 23\",\n        \"Fast fuzzy subsequence matching algorithms on time-series\",\n        \"Ranked subsequence matching in time-series databases\",\n        \"Near-optimal reinforcement learning in polynomial time\",\n        \"Exact indexing of dynamic time warping\",\n        \"An index-based approach for similarity search supporting time warping in large sequence databases\",\n        \"Efficient top-k algorithms for approximate substring matching\",\n        \"Trajectory clustering: a partition-and-group framework\",\n        \"Qtune: A query-aware database tuning system with deep reinforcement learning\",\n        \"Deep representation learning for trajectory similarity computation\",\n        \"Direction-preserving trajectory simplification\",\n        \"Ksq: Top-k similarity query on uncertain trajectories\",\n        \"Playing atari with deep reinforcement learning\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Duality-based subsequence matching in time-series databases\",\n        \"Extracting optimal performance from dynamic time warping\",\n        \"Efficient searches for similar subsequences of different lengths in sequence databases\",\n        \"Markov Decision Processes.: Discrete Stochastic Dynamic Programming\",\n        \"Searching and mining trillions of time series subsequences under dynamic time warping\",\n        \"Addressing big data time series: Mining trillions of time series subsequences under dynamic time warping\",\n        \"Indexing and matching trajectories under inconsistent sampling rates\",\n        \"Learning representations by back-propagating errors\",\n        \"Stream monitoring under the time warping distance\",\n        \"Chalkboarding: A new spatiotemporal query paradigm for sports play retrieval\",\n        \"Reinforcement learning: An introduction\",\n        \"Distributed subtrajectory join on massive datasets\",\n        \"Scalable distributed subtrajectory clustering\",\n        \"Skinnerdb: regret-bounded query evaluation via reinforcement learning\",\n        \"Discovering similar multidimensional trajectories\",\n        \"Fast large-scale trajectory clustering\",\n        \"Torch: A search engine for trajectory data\",\n        \"Adaptive dynamic bipartite graph matching: A reinforcement learning approach\",\n        \"Effective and efficient sports play retrieval with deep representation learning\",\n        \"Efficient and effective similar subtrajectory search with deep reinforcement learning (technical report)\",\n        \"Q-learning\",\n        \"Eds: a segment-based distance measure for sub-trajectory similarity search\",\n        \"Computing trajectory similarity in linear time: A generic seed-guided neural metric learning approach\",\n        \"Efficient retrieval of similar time sequences under time warping\",\n        \"Distributed in-memory trajectory similarity search and join on road network\",\n        \"An end-to-end automatic cloud database tuning system using deep reinforcement learning\",\n        \"Bed-tree: an all-purpose index structure for string similarity search based on edit distance\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Efficient and Effective Similar Subtrajectory Search with Deep Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}