{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 69 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Auto-Validate: Unsupervised Data Validation Using Data-Domain Patterns Inferred from Data Lakes\n\nPaper Abstract: Abstract. Complex data pipelines are increasingly common in diverse applications such as BI reporting and ML modeling. These pipelines often recur regularly (e.g., daily or weekly), as BI reports need to be refreshed, and ML models need to be retrained. However, it is widely reported that in complex production pipelines, upstream data feeds can change in unexpected ways, causing downstream applications to break silently that are expensive to resolve. Data validation has thus become an important topic, as evidenced by notable recent efforts from Google and Amazon, where the objective is to catch data quality issues early as they arise in the pipelines. Our experience on production data suggests, however, that on string-valued data, these existing approaches yield high false-positive rates and frequently require human intervention. In this work, we develop a corpus-driven approach to auto-validate machine-generated data by inferring suitable data-validation “patterns” that accurately describe the underlying data-domain, which minimizes false-positives while maximizing data quality issues caught. Evaluations using production data from real data lakes suggest that Auto-Validate is substantially more effective than existing methods. Part of this technology ships as an Auto-Tag feature in Microsoft Azure Purview.\n\n{retrieved_text}\n\nGenerate exactly 69 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 69\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Amazon Deequ Library for Data Validation\",\n        \"AWS Glue custom classifers\",\n        \"Azure ML: Data Pipelines\",\n        \"Azure Purview for data governance\",\n        \"Bing entity search\",\n        \"Data Crawler for NationalArchives.gov.uk\",\n        \"FlashProfile package\",\n        \"Google TensorFlow Data Validation\",\n        \"Grok Patterns\",\n        \"Informatica Rev\",\n        \"Kaggle\",\n        \"Power BI: Data Flow\",\n        \"SSIS: Data Profiling\",\n        \"Tableau: Flow\",\n        \"XGBoost\",\n        \"XSystem Code\",\n        \"A survey of exact inference for contingency tables\",\n        \"Discovery of genuine functional dependencies from relational data with missing values\",\n        \"Dataset discovery in data lakes\",\n        \"Data validation for machine learning\",\n        \"The multiple sequence alignment problem in biology\",\n        \"Scope: easy and efficient parallel processing of massive data sets\",\n        \"Metric similarity joins using mapreduce\",\n        \"Discovering data quality rules\",\n        \"Discovering denial constraints\",\n        \"Introduction to algorithms\",\n        \"Clusterjoin: A similarity joins framework using map-reduce\",\n        \"Mining database structure; or, how to build a data quality browser\",\n        \"Data integration flows for business intelligence\",\n        \"Pads: a domain-specific language for processing ad hoc data\",\n        \"From dirt to shovels: fully automatic tool generation from ad hoc data\",\n        \"Data auditor: Exploring data quality and semantics using pattern tableaux\",\n        \"Auto-tag: Tagging-data-by-example in data lakes using pre-training and inferred domain patterns\",\n        \"Seisa: set expansion by iterative similarity aggregation\",\n        \"Holodetect: Few-shot learning for error detection\",\n        \"Auto-Detect: Data-Driven Error Detection in Tables\",\n        \"Sherlock: A deep learning approach to semantic data type detection\",\n        \"The data linter: Lightweight, automated sanity checking for ml data sets\",\n        \"Extracting syntactical patterns from databases\",\n        \"Cords: automatic discovery of correlations and soft functional dependencies\",\n        \"Computational complexity of multiple sequence alignment with sp-score\",\n        \"100 statistical tests\",\n        \"A fast parallel algorithm for the maximal independent set problem\",\n        \"Approximate inference of functional dependencies from relations\",\n        \"Picket: Self-supervised data diagnostics for ml pipelines\",\n        \"Raha: A configuration-free error detection system\",\n        \"Data profiling revisited\",\n        \"Flashprofile: a framework for synthesizing data profiles\",\n        \"Web-scale distributional similarity and entity set expansion\",\n        \"A hybrid approach to functional dependency discovery\",\n        \"Big data processing at microsoft: Hyper scale, massive complexity, and minimal cost\",\n        \"Data management challenges in production machine learning\",\n        \"Anmat: automatic knowledge discovery and error detection through pattern functional dependencies\",\n        \"A survey of approaches to automatic schema matching\",\n        \"Data cleaning: Problems and current approaches\",\n        \"Potter’s wheel: An interactive data cleaning system\",\n        \"Unit testing data with deequ\",\n        \"Differential data quality verification on partitioned data\",\n        \"Automating large-scale data quality verification\",\n        \"Data integration: The current status and the way forward\",\n        \"Data sentinel: A declarative production-scale data validation platform\",\n        \"Near real time etl\",\n        \"Uni-detect: A unified approach to automated error detection in tables\",\n        \"Language-independent set expansion of named entities using the web\",\n        \"Auto-Type: Synthesizing type-detection logic for rich semantic data types using open-source code\",\n        \"Coded: Column-oriented data error detection with statistical constraints\",\n        \"Scoded: Statistical constraint oriented data error detection\",\n        \"Sato: Contextual semantic type detection in tables\",\n        \"Scope: parallel databases meet mapreduce\"\n    ],\n    \"reasoning\": \"Selected these 69 references because they represent foundational work and recent advances in Auto-Validate: Unsupervised Data Validation Using Data-Domain Patterns Inferred from Data Lakes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}