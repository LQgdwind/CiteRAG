{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: TaPEx: Table Pre-training via Learning a Neural SQL Executor\n\nPaper Abstract: Abstract Recent progress in language model pre-training has achieved a great success via leveraging large-scale unstructured textual data. However, it is still a challenge to apply pre-training on structured tabular data due to the absence of large-scale high-quality tabular data. In this paper, we propose TaPEx to show that table pre-training can be achieved by learning a neural SQL executor over a synthetic corpus, which is obtained by automatically synthesizing executable SQL queries and their execution outputs. TaPEx addresses the data scarcity challenge via guiding the language model to mimic a SQL executor on the diverse, large-scale and high-quality synthetic corpus. We evaluate TaPEx on four benchmark datasets. Experimental results demonstrate that TaPEx outperforms previous table pre-training approaches by a large margin and achieves new state-of-the-art results on all of them. This includes improvements on the weakly-supervised WikiSQL denotation accuracy to 89.5%percent89.5\\mathbf{89.5}\\% (+2.3%percent2.3+2.3\\%), the WikiTableQuestions denotation accuracy to 57.5%percent57.5\\mathbf{57.5}\\% (+4.8%percent4.8+4.8\\%), the SQA denotation accuracy to 74.5%percent74.5\\mathbf{74.5}\\% (+3.5%percent3.5+3.5\\%), and the TabFact accuracy to 84.2%percent84.2\\mathbf{84.2\\%} (+3.2%percent3.2+3.2\\%). To our knowledge, this is the first work to exploit table pre-training via synthetic executable programs and to achieve new state-of-the-art results on various downstream tasks. Our code can be found at https://github.com/microsoft/Table-Pretraining.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning to generalize from sparse and underspecified rewards\",\n        \"Unilmv2: Pseudo-masked language models for unified language model pre-training\",\n        \"Language models are few-shot learners\",\n        \"Tabfact: A large-scale dataset for table-based fact verification\",\n        \"Iterative search for weakly supervised semantic parsing\",\n        \"TURL: table understanding through representation learning\",\n        \"Structure-grounded pretraining for text-to-SQL\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Understanding tables with intermediate pre-training\",\n        \"Weakly supervised semantic parsing with abstract examples\",\n        \"Weakly supervised semantic parsing by learning from mistakes\",\n        \"Using database rule for weak supervised text-to-sql generation\",\n        \"TaPas: Weakly supervised table parsing via pre-training\",\n        \"Search-based neural structured learning for sequential question answering\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Memory augmented policy optimization for program synthesis and semantic parsing\",\n        \"A split-and-recombine approach for follow-up query analysis\",\n        \"How far are we from effective context modeling? an exploratory study on semantic parsing in context twitter\",\n        \"Awakening latent grounding from pretrained language models for semantic parsing\",\n        \"A discrete hard EM approach for weakly supervised question answering\",\n        \"Answering conversational questions on structured data without logical forms\",\n        \"Neural programmer: Inducing latent programs with gradient descent\",\n        \"Learning a natural language interface with neural programmer\",\n        \"Unik-qa: Unified representations of structured and unstructured knowledge for open-domain question answering\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"Compositional semantic parsing on semi-structured tables\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Learning contextual representations for semantic parsing with generation-augmented pre-training\",\n        \"Learn to combine linguistic and symbolic information for table-based fact verification\",\n        \"Logic-level evidence retrieval and graph-based verification network for table-based fact verification\",\n        \"On the potential of lexico-logical alignments for semantic parsing to SQL queries\",\n        \"Knowledge-aware conversational semantic parsing over web tables\",\n        \"Attention is all you need\",\n        \"Learning semantic parsers from denotations with latent structured alignments and abstract programs\",\n        \"Learning to synthesize data for semantic parsing\",\n        \"Robust text-to-sql generation with execution-guided decoding\",\n        \"Learning deep transformer models for machine translation\",\n        \"TUTA: tree-based transformers for generally structured table pre-training\",\n        \"Program enhanced fact verification with verbalization and graph attention network\",\n        \"TaBERT: Pretraining for joint understanding of textual and tabular data\",\n        \"Spider: A large-scale human-labeled dataset for complex and cross-domain semantic parsing and text-to-SQL task\",\n        \"Grappa: Grammar-augmented pre-training for table semantic parsing\",\n        \"Score: Pre-training for context representation in conversational semantic parsing\",\n        \"Table fact verification with structure-aware transformer\",\n        \"Macro grammars and holistic triggering for efficient semantic parsing\",\n        \"Seq2sql: Generating structured queries from natural language using reinforcement learning\",\n        \"Grounded adaptation for zero-shot executable semantic parsing\",\n        \"LogicalFactChecker: Leveraging logical operations for fact checking with graph module network\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in TaPEx: Table Pre-training via Learning a Neural SQL Executor, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}