{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Execute: Efficiently Learning Universal Plan-Conditioned Policies in Robotics\n\nPaper Abstract: Abstract Applications of Reinforcement Learning (RL) in robotics are often limited by high data demand. On the other hand, approximate models are readily available in many robotics scenarios, making model-based approaches like planning a data-efficient alternative. Still, the performance of these methods suffers if the model is imprecise or wrong. In this sense, the respective strengths and weaknesses of RL and model-based planners are complementary. In the present work, we investigate how both approaches can be integrated into one framework that combines their strengths. We introduce Learning to Execute (L2E), which leverages information contained in approximate plans to learn universal policies that are conditioned on plans. In our robotic manipulation experiments, L2E exhibits increased performance when compared to pure RL, pure planning, or baseline methods combining learning and planning.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Nvidia physx product site\",\n        \"Hindsight experience replay\",\n        \"A survey of robot learning from demonstration\",\n        \"A markovian decision process\",\n        \"Openai gym\",\n        \"Scaling data-driven robotics with reward sketching and batch reinforcement learning\",\n        \"Transfer from simulation to real world through learning deep inverse dynamics model\",\n        \"Self-consistent trajectory autoencoder: Hierarchical reinforcement learning with trajectory embeddings\",\n        \"Prm-rl: Long-range robotic navigation tasks by combining reinforcement learning and sampling-based planning\",\n        \"Structure in the space of value functions\",\n        \"Memory based trajectory-conditioned policies for learning from sparse rewards\",\n        \"Soft actor-critic: Off-policy maximum entropy deep reinforcement learning with a stochastic actor\",\n        \"Deep q-learning from demonstrations\",\n        \"Imitation learning: A survey of learning methods\",\n        \"When to trust your model: Model-based policy optimization\",\n        \"Self-supervised sim-to-real adaptation for visual robotic manipulation\",\n        \"Learning to achieve goals\",\n        \"Integration of imitation learning using gail and reinforcement learning using task-achievement rewards via probabilistic graphical model\",\n        \"Combining manual feedback with subsequent mdp reward signals for reinforcement learning\",\n        \"Optimization-based locomotion planning, estimation, and control design for the atlas humanoid robot\",\n        \"Guided policy search\",\n        \"Learning latent plans from play\",\n        \"Multi-value-functions: E cient automatic action hierarchies for multiple goal mdps\",\n        \"Discovery of complex behaviors through contact-invariant optimization\",\n        \"Ensemble-cio: Full-body dynamic motion planning that transfers to physical humanoids\",\n        \"Planning with goal-conditioned policies\",\n        \"Policy invariance under reward transformations: Theory and application to reward shaping\",\n        \"Bpy-scripting\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Deepmimic: Example-guided deep reinforcement learning of physics-based character skills\",\n        \"Temporal difference models: Model-free deep rl for model-based control\",\n        \"Data-efficient deep reinforcement learning for dexterous manipulation\",\n        \"Stable baselines3\",\n        \"Recent advances in robot learning from demonstration\",\n        \"Learning montezumaâ€™s revenge from a single demonstration\",\n        \"Universal value function approximators\",\n        \"Plan-based relaxed reward shaping for goal-directed tasks\",\n        \"Planning to explore via self-supervised world models\",\n        \"Reinforcement learning: An introduction\",\n        \"Integrating reinforcement learning with human demonstrations of varying ability\",\n        \"Reinforcement learning with human teachers: Evidence of feedback and guidance with implications for learning performance\",\n        \"Differentiable physics and stable modes for tool-use and manipulation planning\",\n        \"Many-goals reinforcement learning\",\n        \"Python implementation of rapidly-exploring random tree (rrt) path-planning algorithm\",\n        \"Learning deep control policies for autonomous aerial vehicles with mpc-guided policy search\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Learning to Execute: Efficiently Learning Universal Plan-Conditioned Policies in Robotics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}