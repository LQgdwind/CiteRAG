{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: \\textcinzelblackPANCETTA: Phoneme Aware Neural Completion to Elicit Tongue Twisters Automatically\n\nPaper Abstract: Abstract Tongue twisters are meaningful sentences that are difficult to pronounce. The process of automatically generating tongue twisters is challenging since the generated utterance must satisfy two conditions at once: phonetic difficulty and semantic meaning. Furthermore, phonetic difficulty is itself hard to characterize and is expressed in tongue twisters through a heterogeneous mix of phenomena such as alliteration and homophony. In this paper, we propose \\textcinzelPANCETTA: Phoneme Aware Neural Completion to Elicit Tongue Twisters Automatically. We leverage phoneme representations to capture the notion of phonetic difficulty, and we train language models to generate original tongue twisters on two proposed task settings. To do this, we curate a dataset called TT-Corp, consisting of existing English tongue twisters. Through automatic and human evaluation, as well as qualitative analysis, we show that \\textcinzelPANCETTA generates novel, phonetically difficult, fluent, and semantically meaningful tongue twisters.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Yorùbá oral literature: A source of indigenous education for children\",\n        \"Analyzing phonetic and graphemic representations in end-to-end automatic speech recognition\",\n        \"Data statements for natural language processing: Toward mitigating system bias and enabling better science\",\n        \"Phonemizer: Text to phones transcription for multiple languages in python\",\n        \"Building synthetic voices\",\n        \"Twisty tongue\",\n        \"Generating similes effortlessly like a pro: A style transfer approach for simile generation\",\n        \"MERMAID: Metaphor generation with symbolism and discriminative decoding\",\n        \"An exact A* method for deciphering letter-substitution ciphers\",\n        \"Automatic poetry generation from prosaic text\",\n        \"How to make a frenemy: Multitape FSTs for portmanteau generation\",\n        \"8-bit optimizers via block-wise quantization\",\n        \"Queens are powerful too: Mitigating gender bias in dialogue generation\",\n        \"WordNet: An Electronic Lexical Database\",\n        \"GenAug: Data augmentation for finetuning text generators\",\n        \"A survey of data augmentation approaches for NLP\",\n        \"SAPPHIRE: Approaches for enhanced concept-to-text generation\",\n        \"Keep calm and switch on! preserving sentiment and fluency in semantic text exchange\",\n        \"Retrieve, caption, generate: Visual grounding for enhancing commonsense in text generation models\",\n        \"Nareor: The narrative reordering problem\",\n        \"Hafez: an interactive poetry generation system\",\n        \"Deep haiku: Teaching gpt-j to compose with syllable patterns\",\n        \"Keybert: Minimal keyword extraction with bert\",\n        \"spaCy 2: Natural language understanding with Bloom embeddings, convolutional neural networks and incremental parsing\",\n        \"Automatically generating rhythmic verse with neural networks\",\n        \"Filling the blanks (hint: plural noun) for mad Libs humor\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Features of tongue twisters and analysis of their structure in persian\",\n        \"The tickled, tangled, tripped, and twisted tongue: A linguistic study of factors relating to difficulty in the performance of tongue twisters\",\n        \"Tongue twister generation\",\n        \"PINEAPPLE: Personifying INanimate entities by acquiring parallel personification data for learning enhanced generation\",\n        \"Inducing speech errors in dysarthria using tongue twisters\",\n        \"Unsupervised analysis for decipherment problems\",\n        \"A course in phonetics\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Aloha: Artificial learning of human attributes for dialogue agents\",\n        \"CommonGen: A constrained text generation challenge for generative commonsense reasoning\",\n        \"Extra-grammatical morphology in english: Abbreviations, blends, reduplicatives and related phenomena\",\n        \"Three Tudor Tongue-Twisters\",\n        \"Pointer sentinel mixture models\",\n        \"Epitran: Precision G2P for many languages\",\n        \"Domain Adaptation for the Long Tail in Language Understanding\",\n        \"The use of tongue twisters in efl teaching\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Enhancing effective speaking skills through role play and tongue twisters\",\n        \"Phoneme-bert: Joint language modelling of phoneme sequence and asr transcript\",\n        \"Syntactic scaffolds for semantic structures\",\n        \"GPT-J-6B: A 6 Billion Parameter Autoregressive Language Model\",\n        \"The carnegie mellon pronouncing dictionary\",\n        \"Sampa - computer readable phonetic alphabet\",\n        \"Simple and effective zero-shot cross-lingual phoneme recognition\",\n        \"DeepRapper: Neural rap generation with rhyme and rhythm modeling\",\n        \"Tongue twister generator\",\n        \"Bertscore: Evaluating text generation with bert\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in \\\\textcinzelblackPANCETTA: Phoneme Aware Neural Completion to Elicit Tongue Twisters Automatically, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}