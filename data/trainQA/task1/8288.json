{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficiently Explaining CSPs with Unsatisfiable Subset Optimization\n\nPaper Abstract: Abstract We build on a recently proposed method for stepwise explaining the solutions to Constraint Satisfaction Problems (CSPs) in a human understandable way. An explanation here is a sequence of simple inference steps where simplicity is quantified by a cost function. Explanation generation algorithms rely on extracting Minimal Unsatisfiable Subsets (MUSs) of a derived unsatisfiable formula, exploiting a one-to-one correspondence between so-called non-redundant explanations and MUSs. However, MUS extraction algorithms do not guarantee subset minimality or optimality with respect to a given cost function. Therefore, we build on these formal foundations and address the main points of improvement, namely how to generate explanations efficiently that are provably optimal (with respect to the given cost metric). To this end, we developed (1) a hitting set-based algorithm for finding the optimal constrained unsatisfiable subsets; (2) a method for reusing relevant information across multiple algorithm calls; and (3) methods for exploiting domain-specific information to speed up the generation of explanation sequences. We have experimentally validated our algorithms on a large number of CSP problems. We found that our algorithms outperform the MUS approach in terms of explanation quality and computational time (on average up to 56 % faster than a standard MUS approach).\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Finding good proofs for description logic entailments using recursive quality measures\",\n        \"Description logics\",\n        \"Using minimal correction sets to more efficiently compute minimal unsatisfiable sets\",\n        \"Finding a collection of muses incrementally\",\n        \"Must: minimal unsatisfiable subsets enumeration tool\",\n        \"Replication-guided enumeration of minimal unsatisfiable subsets\",\n        \"Handbook of Satisfiability\",\n        \"Step-wise explanations of constraint satisfaction problems\",\n        \"A framework for step-wise explaining how to solve constraint satisfaction problems\",\n        \"Plan explanations as model reconciliation: moving beyond explanation as soliloquy\",\n        \"Argumentation for explainable scheduling\",\n        \"Exploiting the power of MIP solvers in MAXsat\",\n        \"A scalable algorithm for minimal unsatisfiable core extraction\",\n        \"Using small muses to explain how to solve pen and paper puzzles\",\n        \"Fetproact-eic-05-2019, fet proactive: emerging paradigms and communities, call.\",\n        \"Explainable planning\",\n        \"Explanation and implication for configuration problems\",\n        \"Essence: A constraint language for specifying combinatorial problems\",\n        \"Efficiently explaining CSPs with unsatisfiable subset optimization\",\n        \"An approach for extracting a small unsatisfiable core\",\n        \"Verification of proofs of unsatisfiability for CNF formulas\",\n        \"A survey of methods for explaining black box models\",\n        \"Explainable artificial intelligence (XAI)\",\n        \"Robustness and explainability of artificial intelligence\",\n        \"Proceedings of FAT*\",\n        \"Mup: A minimal unsatisfiability prover\",\n        \"Quantified maximum satisfiability\",\n        \"PySAT: A Python toolkit for prototyping with SAT oracles\",\n        \"Abduction-based explanations for machine learning models\",\n        \"Smallest MUS extraction with minimal hitting set dualization\",\n        \"QuickXPlain: Conflict detection for arbitrary constraint propagation algorithms\",\n        \"Theory of quantified boolean formulas\",\n        \"Two ways of explaining negative entailments in description logics using abduction\",\n        \"Explainable agency for intelligent autonomous systems\",\n        \"MaxSAT, hard and soft constraints\",\n        \"Explanation semantics for abstract argumentation\",\n        \"Fast, flexible mus enumeration\",\n        \"Algorithms for computing minimal unsatisfiable subsets of constraints\",\n        \"A unified approach to interpreting model predictions\",\n        \"On computing minimum unsatisfiable cores\",\n        \"Minimal unsatisfiability: Models, algorithms and applications\",\n        \"On computing minimal correction subsets\",\n        \"Explanation in artificial intelligence: Insights from the social sciences\",\n        \"Proceedings of the IJCAI 2019 Workshop on Explainable Artificial Intelligence\",\n        \"The added value of argumentation\",\n        \"Automatically improving constraint models in savile row\",\n        \"Using description logic and abox abduction to capture medical diagnosis\",\n        \"AMUSE: a minimally-unsatisfiable subformula extractor\",\n        \"A theory of diagnosis from first principles\",\n        \"Handbook of Constraint Programming, Vol. 2 of Foundations of Artificial Intelligence\",\n        \"Implicit hitting set algorithms for reasoning beyond NP\",\n        \"Abstract argumentation and explanation applied to scientific debates\",\n        \"Inference-based constraint satisfaction supports explanation\",\n        \"Strong explanations in abstract argumentation\",\n        \"Argumentation and explainable artificial intelligence: a survey\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Efficiently Explaining CSPs with Unsatisfiable Subset Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}