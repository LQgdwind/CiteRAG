{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Rectilinear Steiner Forest Arborescence problem\n\nPaper Abstract: Abstract Let r𝑟r be a point in the first quadrant Q1subscript𝑄1Q_{1} of the plane ℝ2superscriptℝ2\\mathbb{R}^{2} and let P⊂Q1𝑃subscript𝑄1P\\subset Q_{1} be a set of points such that for any p∈P𝑝𝑃p\\in P, its x𝑥x- and y𝑦y-coordinate is at least as that of r𝑟r. A rectilinear Steiner arborescence for P𝑃P with the root r𝑟r is a rectilinear Steiner tree T𝑇T for P∪{r}𝑃𝑟P\\cup\\{r\\} such that for each point p∈P𝑝𝑃p\\in P, the length of the (unique) path in T𝑇T from p𝑝p to the root r𝑟r equals (x​(p)−x​(r))+(y​(p))−(y​(r))x𝑝x𝑟y𝑝y𝑟({\\rm x}(p)-{\\rm x}(r))+({\\rm y}(p))-({\\rm y}(r)), where x​(q)x𝑞{\\rm x}(q) and y​(q)y𝑞{\\rm y}(q) denote the x𝑥x- and y𝑦y-coordinate, respectively, of point q∈P∪{r}𝑞𝑃𝑟q\\in P\\cup\\{r\\}. Given two point sets P𝑃P and R𝑅R lying in the first quadrant Q1subscript𝑄1Q_{1} and such that (0,0)∈R00𝑅(0,0)\\in R, the Rectilinear Steiner Forest Arborescence (RSFA) problem is to find the minimum-length spanning forest F𝐹F such that each connected component F𝐹F is a rectilinear Steiner arborescence rooted at some root in R𝑅R. The RSFA problem is a natural generalization of the Rectilinear Steiner Arborescence problem, where R={(0,0)}𝑅00R=\\{(0,0)\\}, and thus it is NP-hard. In this paper, we provide a simple exact exponential time algorithm for the RSFA problem, design a polynomial time approximation scheme as well as a fixed-parameter algorithm.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"New performance-driven FPGA routing algorithms\",\n        \"Polynomial time approximation schemes for Euclidean traveling salesman and other geometric problems\",\n        \"The minimum Manhattan network problem: a fast factor-3 approximation\",\n        \"The minimum Manhattan network problem: Approximations and exact solutions\",\n        \"Rectilinear Steiner minimal trees on parallel lines\",\n        \"Angle-restricted Steiner arborescences for flow map layout\",\n        \"Fixed-parameter algorithms for rectilinear Steiner tree and rectilinear traveling salesman problem in the plane\",\n        \"Polynomial time approximation scheme for the symmetric rectilinear Steiner arborescence problem\",\n        \"A rounding algorithm for approximating minimum Manhattan networks\",\n        \"Guillotine cut in approximation algorithms\",\n        \"Minimum Manhattan network problem is NP-complete\",\n        \"Efficient algorithms for the minimum shortest path Steiner arborescence problem with applications to VLSI physical design\",\n        \"Performance-driven inteconnect design based on distributed RC delay model\",\n        \"Fast optimal algorithms for the minimum rectilinear Steiner arborescence problem\",\n        \"Approximation algorithms for buy-at-bulk geometric network design\",\n        \"Approximating the generalized minimum Manhattan network problem\",\n        \"Approximating minimum Manhattan networks in higher dimensions\",\n        \"The Steiner problem in graphs\",\n        \"Subexponential algorithms for rectilinear Steiner tree and arborescence problems\",\n        \"Small Manhattan networks and algorithmic applications for the Earth mover’s distance\",\n        \"Approximating a minimum Manhattan network\",\n        \"Greedy construction of 222-approximation minimum Manhattan network\",\n        \"On Steiner’s problem with rectilinear distance\",\n        \"Algorithms for rectilinear optimal multicast trees\",\n        \"Linear-size planar Manhattan network for convex point sets\",\n        \"An improved algorithm for the minimum Manhattan network problem\",\n        \"A subexponential parameterized algorithm for Subset TSP on planar graphs\",\n        \"A fixed-parameter algorithm for the minimum Manhattan network problem\",\n        \"A rectilinear arborescence problem\",\n        \"Polynomial time approximation scheme for the rectilinear Steiner arborescence problem\",\n        \"The depth-restricted rectilinear Steiner arborescence problem is NP-complete\",\n        \"Guillotine subdivisions approximate polygonal subdivisions: Part III — Faster polynomial-time approximation schemes for geometric network optimization\",\n        \"A constant-factor approximation algorithm for the geometric k𝑘k-MST problems in the plane\",\n        \"Guillotine subdivisions approximate polygonal subdivisions: A simple polynomial-time approximation scheme for geometric TSP, k𝑘k-MST, and related problems\",\n        \"Dynamic programming approach to the generalized minimum Manhattan network problem\",\n        \"The minimal Manhattan network problem in three dimensions\",\n        \"Cost minimum trees in directed acyclic graphs\",\n        \"Computational Geometry\",\n        \"New approximations for the rectilinear Steiner arborescence problem [VLSI layout]\",\n        \"The rectilinear Steiner arborescence problem\",\n        \"The rectilinear Steiner arborescence problem is NP-complete\",\n        \"A 1.5-approximation of the minimal Manhattan network problem\",\n        \"On rectilinear distance-preserving trees\",\n        \"Subclass of the Steiner problems on a plane with rectilinear metric\",\n        \"Flow map layout via spiral trees\",\n        \"On the approximation of the rectilinear Steiner arborescence problem in the plane\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in The Rectilinear Steiner Forest Arborescence problem, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}