{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Neural Improvement Heuristics for Graph Combinatorial Optimization Problems\n\nPaper Abstract: Abstract Recent advances in graph neural network architectures and increased computation power have revolutionized the field of combinatorial optimization (CO). Among the proposed models for CO problems, Neural Improvement (NI) models have been particularly successful. However, existing NI approaches are limited in their applicability to problems where crucial information is encoded in the edges, as they only consider node features and node-wise positional encodings. To overcome this limitation, we introduce a novel NI model capable of handling graph-based problems where information is encoded in the nodes, edges, or both. The presented model serves as a fundamental component for hill-climbing-based algorithms that guide the selection of neighborhood operations for each iteration. Conducted experiments demonstrate that the proposed model can recommend neighborhood operations that outperform conventional versions for the Preference Ranking Problem with a performance in the 99th percentile. We also extend the proposal to two well-known problems: the Traveling Salesman Problem and the Graph Partitioning Problem, recommending operations in the 98th and 97th percentile, respectively.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Applications of combinatorial optimization\",\n        \"Application of combinatorial optimization strategies in synthetic biology\",\n        \"Computers and intractability\",\n        \"Foad: Fast optimization-based autonomous driving motion planner\",\n        \"Machine learning into metaheuristics: A survey and taxonomy\",\n        \"Reinforcement learning for combinatorial optimization: A survey\",\n        \"Machine learning for combinatorial optimization: a methodological tour d’horizon\",\n        \"Neural combinatorial optimization with reinforcement learning\",\n        \"Attention, learn to solve routing problems!\",\n        \"Pomo: Policy optimization with multiple optima for reinforcement learning\",\n        \"Learning to perform local rewriting for combinatorial optimization\",\n        \"A learning-based iterative method for solving vehicle routing problems\",\n        \"Learning Improvement Heuristics for Solving Routing Problems\",\n        \"Guidelines for the computational testing of machine learning approaches to vehicle routing problems\",\n        \"Neural Combinatorial Optimization: a New Player in the Field\",\n        \"Approximate ranking from pairwise comparisons\",\n        \"Balanced graph partitioning\",\n        \"The traveling salesman problem: a computational study\",\n        \"Neural computation of decisions in optimization problems\",\n        \"Pointer networks\",\n        \"Combinatorial optimization and reasoning with graph neural networks\",\n        \"Learning TSP requires rethinking generalization\",\n        \"Neural large neighborhood search for the capacitated vehicle routing problem\",\n        \"Learning 2-opt heuristics for routing problems via deep reinforcement learning\",\n        \"Learning to Control Local Search for Combinatorial Optimization\",\n        \"Learning to iteratively solve routing problems with dual-aspect collaborative transformer\",\n        \"An efficient graph convolutional network technique for the travelling salesman problem\",\n        \"Generalize a small pre-trained model to arbitrarily large tsp instances\",\n        \"Learning linear ordering problems for better translation\",\n        \"Input-output economics\",\n        \"Der corruption perceptions index und das linear ordering problem\",\n        \"The rankability of data\",\n        \"On the linear ordering problem and the rankability of data\",\n        \"A case for ordinal peer-evaluation in MOOCs\",\n        \"Matrix encoding networks for neural combinatorial optimization\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Curriculum learning\",\n        \"Intensification and diversification with elite tabu search solutions for the linear ordering problem\",\n        \"Metaheuristics in combinatorial optimization: Overview and conceptual comparison\",\n        \"A user’s guide to tabu search\",\n        \"Iterated local search: Framework and applications\",\n        \"Das Helmstädtersche Reihenfolgeproblem—die Effizienz verschiedener Näherungsverfahren\",\n        \"A diversity-aware memetic algorithm for the linear ordering Problem\",\n        \"Using pairwise precedences for solving the linear ordering problem\",\n        \"Curiosity-driven exploration by self-supervised prediction\",\n        \"Agent57: Outperforming the atari human benchmark\",\n        \"Graph attention networks\",\n        \"Benchmarking graph neural networks\",\n        \"Edge-featured graph attention network\",\n        \"Attention is all you need\",\n        \"The linear ordering problem revisited\",\n        \"Linear ordering library (LOLIB)\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Neural Improvement Heuristics for Graph Combinatorial Optimization Problems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}