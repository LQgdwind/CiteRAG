{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Tight Complexity Bounds for Counting Generalized Dominating Sets in Bounded-Treewidth Graphs Part I: Algorithmic Results\n\nPaper Abstract: Abstract We investigate how efficiently a well-studied family of domination-type problems can be solved on bounded-treewidth graphs. For sets σ,ρ𝜎𝜌\\sigma,\\rho of non-negative integers, a (σ,ρ)𝜎𝜌(\\sigma,\\rho)-set of a graph G𝐺G is a set S𝑆S of vertices such that |N​(u)∩S|∈σ𝑁𝑢𝑆𝜎|N(u)\\cap S|\\in\\sigma for every u∈S𝑢𝑆u\\in S, and |N​(v)∩S|∈ρ𝑁𝑣𝑆𝜌|N(v)\\cap S|\\in\\rho for every v∉S𝑣𝑆v\\not\\in S. The problem of finding a (σ,ρ)𝜎𝜌(\\sigma,\\rho)-set (of a certain size) unifies standard problems such as Independent Set, Dominating Set, Independent Dominating Set, and many others. For all pairs of finite or cofinite sets (σ,ρ)𝜎𝜌(\\sigma,\\rho), we determine (under standard complexity assumptions) the best possible value cσ,ρsubscript𝑐𝜎𝜌c_{\\sigma,\\rho} such that there is an algorithm that counts (σ,ρ)𝜎𝜌(\\sigma,\\rho)-sets in time cσ,ρtw⋅nO​(1)⋅superscriptsubscript𝑐𝜎𝜌twsuperscript𝑛𝑂1c_{\\sigma,\\rho}^{\\textup{{tw}}}\\cdot n^{O(1)} (if a tree decomposition of width tw is given in the input). Let stopsubscript𝑠tops_{\\textup{top}} denote the largest element of σ𝜎\\sigma if σ𝜎\\sigma is finite, or the largest missing integer +11+1 if σ𝜎\\sigma is cofinite; rtopsubscript𝑟topr_{\\textup{top}} is defined analogously for ρ𝜌\\rho. Surprisingly, cσ,ρsubscript𝑐𝜎𝜌c_{\\sigma,\\rho} is often significantly smaller than the natural bound stop+rtop+2subscript𝑠topsubscript𝑟top2s_{\\textup{top}}+r_{\\textup{top}}+2 achieved by existing algorithms [van Rooij, 2020]. Toward defining cσ,ρsubscript𝑐𝜎𝜌c_{\\sigma,\\rho}, we say that (σ,ρ)𝜎𝜌(\\sigma,\\rho) is mm{\\mathrm{m}}-structured if there is a pair (α,β)𝛼𝛽(\\alpha,\\beta) such that every integer in σ𝜎\\sigma equals α𝛼\\alpha mod mm{\\mathrm{m}}, and every integer in ρ𝜌\\rho equals β𝛽\\beta mod mm{\\mathrm{m}}. Then, setting • cσ,ρ=stop+rtop+2subscript𝑐𝜎𝜌subscript𝑠topsubscript𝑟top2c_{\\sigma,\\rho}=s_{\\textup{top}}+r_{\\textup{top}}+2 if (σ,ρ)𝜎𝜌(\\sigma,\\rho) is not mm{\\mathrm{m}}-structured for any m≥2m2{\\mathrm{m}}\\geq 2, • cσ,ρ=max⁡{stop,rtop}+2subscript𝑐𝜎𝜌subscript𝑠topsubscript𝑟top2c_{\\sigma,\\rho}=\\max\\{s_{\\textup{top}},r_{\\textup{top}}\\}+2 if (σ,ρ)𝜎𝜌(\\sigma,\\rho) is 2-structured, but not mm{\\mathrm{m}}-structured for any m≥3m3{\\mathrm{m}}\\geq 3, and stop=rtopsubscript𝑠topsubscript𝑟tops_{\\textup{top}}=r_{\\textup{top}} is even, and • cσ,ρ=max⁡{stop,rtop}+1subscript𝑐𝜎𝜌subscript𝑠topsubscript𝑟top1c_{\\sigma,\\rho}=\\max\\{s_{\\textup{top}},r_{\\textup{top}}\\}+1, otherwise, we provide algorithms counting (σ,ρ)𝜎𝜌(\\sigma,\\rho)-sets in time cσ,ρtw⋅nO​(1)⋅superscriptsubscript𝑐𝜎𝜌twsuperscript𝑛𝑂1c_{\\sigma,\\rho}^{\\textup{{tw}}}\\cdot n^{O(1)}. For example, for the Exact Independent Dominating Set problem (also known as Perfect Code) corresponding to σ={0}𝜎0\\sigma=\\{0\\} and ρ={1}𝜌1\\rho=\\{1\\}, this improves the 3tw⋅nO​(1)⋅superscript3twsuperscript𝑛𝑂13^{\\textup{{tw}}}\\cdot n^{O(1)} algorithm of van Rooij to 2tw⋅nO​(1)⋅superscript2twsuperscript𝑛𝑂12^{\\textup{{tw}}}\\cdot n^{O(1)}. Despite the unusually delicate definition of cσ,ρsubscript𝑐𝜎𝜌c_{\\sigma,\\rho}, an accompanying paper shows that our algorithms are most likely optimal, that is, for any pair (σ,ρ)𝜎𝜌(\\sigma,\\rho) of finite or cofinite sets where the problem is non-trivial, and any ε>0𝜀0\\varepsilon>0, a (cσ,ρ−ε)tw⋅nO​(1)⋅superscriptsubscript𝑐𝜎𝜌𝜀twsuperscript𝑛𝑂1(c_{\\sigma,\\rho}-\\varepsilon)^{\\textup{{tw}}}\\cdot n^{O(1)}-algorithm counting the number of (σ,ρ)𝜎𝜌(\\sigma,\\rho)-sets would violate the Counting Strong Exponential-Time Hypothesis (#SETH). For finite sets σ𝜎\\sigma and ρ𝜌\\rho, these lower bounds also extend to the decision version, and hence, our algorithms are optimal in this setting as well. In contrast, for many cofinite sets, we show that further significant improvements for the decision and optimization versions are possible using the technique of representative sets.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Improved tree decomposition based algorithms for domination-like problems\",\n        \"A refined laser method and faster matrix multiplication\",\n        \"Linear time algorithms for NP-hard problems restricted to partial k-trees\",\n        \"A polynomial-time approximation scheme for weighted planar graph TSP\",\n        \"Explicit bounds for primes in arithmetic progressions\",\n        \"Linear-time computation of optimal subgraphs of decomposable graphs\",\n        \"On non-serial dynamic programming\",\n        \"Fourier meets Möbius: fast subset convolution\",\n        \"Dynamic programming on graphs with bounded treewidth\",\n        \"Deterministic single exponential time algorithms for connectivity problems parameterized by treewidth\",\n        \"Optimal dynamic program for r𝑟r-domination problems over tree decompositions\",\n        \"An O(n log n) approximation scheme for steiner tree in planar graphs\",\n        \"Boolean-width of graphs\",\n        \"Fast dynamic programming for locally checkable vertex subset and vertex partitioning problems\",\n        \"Parameterized complexity of generalized domination problems on bounded tree-width graphs\",\n        \"The monadic second-order logic of graphs. i. recognizable sets of finite graphs\",\n        \"Tight conditional lower bounds for counting perfect matchings on graphs of bounded treewidth, cliquewidth, and genus\",\n        \"A tight lower bound for counting Hamiltonian cycles via matrix rank\",\n        \"Parameterized Algorithms\",\n        \"The bidimensionality theory and its algorithmic applications\",\n        \"Subexponential parameterized algorithms on bounded-genus graphs and H-minor-free graphs\",\n        \"Finding list homomorphisms from bounded-treewidth graphs to reflexive graphs: a complete complexity characterization\",\n        \"Counting list homomorphisms from graphs of bounded treewidth: tight complexity bounds\",\n        \"Tight complexity bounds for counting generalized dominating sets in bounded-treewidth graphs. Part II: Hardness results\",\n        \"Tight complexity bounds for counting generalized dominating sets in bounded-treewidth graphs\",\n        \"Sort and search: Exact algorithms for generalized domination\",\n        \"Branch and recharge: Exact algorithms for generalized domination\",\n        \"Efficient computation of representative families with applications in parameterized and exact algorithms\",\n        \"Representative families of product families\",\n        \"Parameterized complexity of generalized domination problems\",\n        \"S𝑆S-functions for graphs\",\n        \"Independent sets with domination constraints\",\n        \"Generalized distance domination problems and their complexity on graphs of bounded mim-width\",\n        \"Structural parameters, tight bounds, and approximation for (k,r)𝑘𝑟(k,r)-center\",\n        \"A linear-time approximation scheme for planar weighted TSP\",\n        \"Representative sets and irrelevant vertices: New tools for kernelization\",\n        \"Known algorithms on graphs of bounded treewidth are probably optimal\",\n        \"A parameterized view on matroid optimization problems\",\n        \"Degrees and gaps: Tight complexity results of general factor problems parameterized by treewidth and cutwidth\",\n        \"Anti-factor is FPT parameterized by treewidth and list size (but counting is hard)\",\n        \"How to find long paths efficiently\",\n        \"Fine-grained complexity of the graph homomorphism problem for bounded-treewidth graphs\",\n        \"Full complexity classification of the list homomorphism problem for bounded-treewidth graphs\",\n        \"Finding minimally weighted subgraphs\",\n        \"Graph minors. III. planar tree-width\",\n        \"Complexity of domination-type problems in graphs\",\n        \"Practical algorithms on partial k-trees with an application to domination-like problems\",\n        \"Algorithms for vertex partitioning problems on partial k-trees\",\n        \"Fast algorithms for join operations on tree decompositions\",\n        \"A generic convolution algorithm for join operations on tree decompositions\",\n        \"Dynamic programming on tree decompositions using generalised fast subset convolution\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Tight Complexity Bounds for Counting Generalized Dominating Sets in Bounded-Treewidth Graphs Part I: Algorithmic Results, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}