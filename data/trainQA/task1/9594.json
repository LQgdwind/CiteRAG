{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Pretrained deep models outperform GBDTs in Learning-To-Rank under label scarcity\n\nPaper Abstract: Abstract While deep learning (DL) models are state-of-the-art in text and image domains, they have not yet consistently outperformed Gradient Boosted Decision Trees (GBDTs) on tabular Learning-To-Rank (LTR) problems (Qin et al., 2021). Most of the recent performance gains attained by DL models in text and image tasks have used unsupervised pretraining (Devlin et al., 2018; Chen et al., 2020), which exploits orders of magnitude more unlabeled data than labeled data. To the best of our knowledge, unsupervised pretraining has not been applied to the LTR problem, which often produces vast amounts of unlabeled data. In this work, we study whether unsupervised pretraining of deep models can improve LTR performance over GBDTs and other non-pretrained models. By incorporating simple design choices–including SimCLR-Rank, an LTR-specific pretraining loss–we produce pretrained deep learning models that consistently (across datasets) outperform GBDTs (and other non-pretrained rankers) in the case where there is more unlabeled data than labeled data. This performance improvement occurs not only on average but also on outlier queries. We base our empirical conclusions off of experiments on (1) public benchmark tabular LTR datasets, and (2) a large industry-scale proprietary ranking dataset. Code is provided at https://anonymous.4open.science/r/ltr-pretrain-0DAD/README.md.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning a deep listwise context model for ranking refinement\",\n        \"Learning groupwise multivariate scoring functions using deep neural networks\",\n        \"Revisiting approximate metric optimization in the age of deep neural networks\",\n        \"From ranknet to lambdarank to lambdamart: An overview\",\n        \"Yahoo! learning to rank challenge overview\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Exploring simple siamese representation learning\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Greedy function approximation: a gradient boosting machine\",\n        \"Deep metric learning with hierarchical triplet loss\",\n        \"Ranking robustness under adversarial document manipulations\",\n        \"Revisiting deep learning models for tabular data\",\n        \"Learning-to-rank with bert in tf-ranking\",\n        \"Smart mining for deep metric learning\",\n        \"Deep residual learning for image recognition\",\n        \"Using self-supervised learning can improve model robustness and uncertainty\",\n        \"Tabtransformer: Tabular data modeling using contextual embeddings\",\n        \"Tangos: Regularizing tabular neural networks through gradient orthogonalization and specialization\",\n        \"Training linear svms in linear time\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree\",\n        \"Adam: A method for stochastic optimization\",\n        \"Fine-tuning can distort pretrained features and underperform out-of-distribution\",\n        \"Recommendations and results organization in netflix search\",\n        \"Transfer learning with deep tabular models\",\n        \"Learning to rank for information retrieval\",\n        \"Post-learning optimization of tree ensembles for efficient ranking\",\n        \"Met: Masked encoding for tabular data\",\n        \"When do neural nets outperform boosted trees on tabular data?\",\n        \"An introduction to neural information retrieval\",\n        \"Multi-stage document ranking with bert\",\n        \"Deep metric learning via lifted structured feature embedding\",\n        \"Representation learning with contrastive predictive coding\",\n        \"Setrank: Learning a permutation-invariant ranking model for information retrieval\",\n        \"Evaluating the robustness of retrieval pipelines with query variation generators\",\n        \"To tune or not to tune? adapting pretrained representations to diverse tasks\",\n        \"Introducing LETOR 4.0 datasets\",\n        \"Are neural rankers still outperformed by gradient boosted decision trees?\",\n        \"Contrastive learning with hard negative samples\",\n        \"Facenet: A unified embedding for face recognition and clustering\",\n        \"Stochastic class-based hard example mining for deep metric learning\",\n        \"Pirank: Scalable learning to rank via differentiable sorting\",\n        \"Subtab: Subsetting features of tabular data for self-supervised representation learning\",\n        \"The trec robust retrieval track\",\n        \"Regclr: A self-supervised framework for tabular representation learning in the wild\",\n        \"On the importance of asymmetry for siamese representation learning\",\n        \"Sampling matters in deep embedding learning\",\n        \"Certified robustness to word substitution ranking attack for neural ranking models\",\n        \"Are neural ranking models robust?\",\n        \"Prada: practical black-box adversarial attacks against neural ranking models\",\n        \"Toward understanding privileged features distillation in learning-to-rank\",\n        \"Pretrained transformers for text ranking: Bert and beyond\",\n        \"Bias-variance decomposition of ir evaluation\",\n        \"Rankt5: Fine-tuning t5 for text ranking with ranking losses\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Pretrained deep models outperform GBDTs in Learning-To-Rank under label scarcity, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}