{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: An Empirical Study on Deployment Faults of Deep Learning Based Mobile Applications\n\nPaper Abstract: Abstract Deep learning (DL) is moving its step into a growing number of mobile software applications. These software applications, named as DL based mobile applications (abbreviated as mobile DL apps) integrate DL models trained using large-scale data with DL programs. A DL program encodes the structure of a desirable DL model and the process by which the model is trained using training data. Due to the increasing dependency of current mobile apps on DL, software engineering (SE) for mobile DL apps has become important. However, existing efforts in SE research community mainly focus on the development of DL models and extensively analyze faults in DL programs. In contrast, faults related to the deployment of DL models on mobile devices (named as deployment faults of mobile DL apps) have not been well studied. Since mobile DL apps have been used by billions of end users daily for various purposes including for safety-critical scenarios, characterizing their deployment faults is of enormous importance. To fill in the knowledge gap, this paper presents the first comprehensive study to date on the deployment faults of mobile DL apps. We identify 304 real deployment faults from Stack Overflow and GitHub, two commonly used data sources for studying software faults. Based on the identified faults, we construct a fine-granularity taxonomy consisting of 23 categories regarding to fault symptoms and distill common fix strategies for different fault symptoms. Furthermore, we suggest actionable implications and research avenues that can potentially facilitate the deployment of DL models on mobile devices.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Moving deep learning into Web browser: how far can we go?\",\n        \"Emoji-powered representation learning for cross-lingual sentiment classification\",\n        \"DeepBillboard: systematic physical-world testing of autonomous driving systems\",\n        \"SEntimoji: an emoji-powered learning approach for sentiment analysis in software engineering\",\n        \"Emoji-powered sentiment and emotion detection from software developers’ communication data\",\n        \"An exploration of mobile first AI\",\n        \"Apple COO: smartphone is a ‘major platform’ for future of AI\",\n        \"Artificial intelligence next key growth area for smartphones as numbers top six billion by 2020, IHS Markit says\",\n        \"Pelee: a real-time object detection system on mobile devices\",\n        \"DeepCache: principled cache for mobile deep vision\",\n        \"DeepType: on-device deep learning for input personalization service with minimal privacy concern\",\n        \"A comparative review of dynamic neural networks and hidden markov model methods for mobile on-device speech recognition\",\n        \"A comprehensive study on challenges in deploying deep learning based software\",\n        \"What do programmers discuss about deep learning frameworks\",\n        \"An empirical study of common challenges in developing deep learning applications\",\n        \"An empirical study on TensorFlow program bugs\",\n        \"A comprehensive study on deep learning bug characteristics\",\n        \"Taxonomy of real faults in deep learning systems\",\n        \"Repairing deep neural networks: fix patterns and challenges\",\n        \"TensorFlow: a system for large-scale machine learning\",\n        \"Keras\",\n        \"A first look at deep learning apps on smartphones\",\n        \"An empirical study towards characterizing deep learning development and deployment across different frameworks and platforms\",\n        \"Tensorflow Lite\",\n        \"Core ML\",\n        \"Deep learning towards mobile applications\",\n        \"Turnsmap: enhancing driving safety at intersections with mobile crowdsensing and deep learning\",\n        \"Deep learning for reliable mobile edge analytics in intelligent transportation systems: an overview\",\n        \"A comprehensive study of real-world numerical bug characteristics\",\n        \"Supplemental materials\",\n        \"Stack exchange data dump\",\n        \"Understanding build issue resolution in practice: symptoms and fix patterns\",\n        \"Github search API\",\n        \"Github repository of TensorFlow\",\n        \"Github repository of Core ML\",\n        \"Automatically classifying posts into question categories on Stack Overflow\",\n        \"Software documentation issues unveiled\",\n        \"Qualitative methods in empirical studies of software engineering\",\n        \"A coefficient of agreement for nominal scales\",\n        \"The measurement of observer agreement for categorical data\",\n        \"Select TensorFlow operators to use in TensorFlow Lite\",\n        \"Register custom operators in TensorFlow Lite\",\n        \"Why is developing machine learning applications challenging? A study on Stack Overflow posts\",\n        \"DeepCT: tomographic combinatorial testing for deep learning systems\",\n        \"DeepGauge: multi-granularity testing criteria for deep learning systems\",\n        \"DeepXplore: automated whitebox testing of deep learning systems\",\n        \"Software documentation: the practitioners’ perspective\",\n        \"Machine learning testing: survey, landscapes and horizons\",\n        \"Learning from mistakes: a comprehensive study on real world concurrency bug characteristics\",\n        \"An empirical study on crash recovery bugs in large-scale distributed systems\",\n        \"An empirical study on program failures of deep learning jobs\",\n        \"On-demand deep model compression for mobile devices: a usage-driven model selection framework\",\n        \"Towards multimodal deep learning for activity recognition on mobile devices\",\n        \"Spotgarbage: smartphone app to detect garbage using deep learning\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in An Empirical Study on Deployment Faults of Deep Learning Based Mobile Applications, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}