{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: \\capitalisewordsA new near-linear time algorithm for 𝑘-Nearest neighbor search using a compressed cover tree\n\nPaper Abstract: Abstract Given a reference set R𝑅R of n𝑛n points and a query set Q𝑄Q of m𝑚m points in a metric space, this paper studies an important problem of finding k𝑘k-nearest neighbors of every point q∈Q𝑞𝑄q\\in Q in the set R𝑅R in a near-linear time. In the paper at ICML 2006, Beygelzimer, Kakade, and Langford introduced a cover tree on R𝑅R and attempted to prove that this tree can be built in O​(n​log⁡n)𝑂𝑛𝑛O(n\\log n) time while the nearest neighbor search can be done in O​(n​log⁡m)𝑂𝑛𝑚O(n\\log m) time with a hidden dimensionality factor. This paper fills a substantial gap in the past proofs of time complexity by defining a simpler compressed cover tree on the reference set R𝑅R. The first new algorithm constructs a compressed cover tree in O​(n​log⁡n)𝑂𝑛𝑛O(n\\log n) time. The second new algorithm finds all k𝑘k-nearest neighbors of all points from Q𝑄Q using a compressed cover tree in time O​(m​(k+log⁡n)​log⁡k)𝑂𝑚𝑘𝑛𝑘O(m(k+\\log n)\\log k) with a hidden dimensionality factor depending on point distributions of the given sets R,Q𝑅𝑄R,Q but not on their sizes.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Approximate nearest neighbor search in high dimensions\",\n        \"An isometry classification of periodic point sets\",\n        \"Algorithms for continuous metrics on periodic crystals\",\n        \"Approximate nearest neighbor queries in fixed dimensions\",\n        \"The r*-tree: An efficient and robust access method for points and rectangles\",\n        \"Fast algorithms for constructing minimal spanning trees in coordinate spaces\",\n        \"Multidimensional binary search trees used for associative searching\",\n        \"The x-tree: An index structure for high-dimensional data\",\n        \"Cover trees for nearest neighbor\",\n        \"Extended version of ”cover trees for nearest neighbor”\",\n        \"Searching dynamic point sets in spaces with bounded doubling dimension\",\n        \"Introduction to algorithms\",\n        \"Improving dual-tree algorithms\",\n        \"Mlpack: A scalable c++ machine learning library\",\n        \"Plug-and-play dual-tree algorithm runtime analysis\",\n        \"The density fingerprint of a periodic point set\",\n        \"Counterexamples expose gaps in the proof of time complexity for cover trees introduced in 2006\",\n        \"Paired compressed cover trees guarantee a near linear parametrized complexity for all k𝑘k-nearest neighbors search in an arbitrary metric space\",\n        \"Quad trees a data structure for retrieval on composite keys\",\n        \"A branch and bound algorithm for computing k-nearest neighbors\",\n        \"Fast ray tracing using kd trees\",\n        \"Fast construction of nets in low-dimensional metrics and their applications\",\n        \"Quic-svd: Fast svd using cosine trees\",\n        \"Faster cover trees\",\n        \"Transforming hierarchical trees on metric spaces\",\n        \"Lebesgue integration on Euclidean space\",\n        \"Fast nearest neighbors\",\n        \"Navigating nets: Simple algorithms for proximity search\",\n        \"Simplexwise distance distributions for finite spaces with metrics and measures\",\n        \"The strength of a simplex is the key to a continuous isometry classification of Euclidean clouds of unlabelled points\",\n        \"The tv-tree: An index structure for high-dimensional data\",\n        \"An investigation of practical approximate nearest neighbor algorithms\",\n        \"An empirical analysis of the probabilistic k-nearest neighbour classifier\",\n        \"Fast euclidean minimum spanning tree: algorithm, analysis, and applications\",\n        \"A fast nearest-neighbor algorithm based on a principal axis search tree\",\n        \"Five balltree construction algorithms\",\n        \"Accelerating exact k-means algorithms with geometric reasoning\",\n        \"Maximum inner-product search using cone trees\",\n        \"Linear-time algorithms for pairwise statistical problems\",\n        \"Nearest-neighbor search on a time budget via max-margin trees\",\n        \"Functional Analysis\",\n        \"A practical algorithm for degree-k voronoi domains of three-dimensional periodic point sets\",\n        \"A comprehensive survey and experimental comparison of graph-based approximate nearest neighbor search\",\n        \"Pointwise distance distributions of periodic sets\",\n        \"Resolving the data ambiguity for periodic crystals\",\n        \"Recognizing rigid patterns of unlabeled point clouds by complete and continuous isometry invariants with no false negatives and no false positives\",\n        \"Average minimum distances of periodic point sets\",\n        \"Data structures and algorithms for nearest neighbor search in general metric spaces\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in \\\\capitalisewordsA new near-linear time algorithm for 𝑘-Nearest neighbor search using a compressed cover tree, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}