{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Privacy-Aware Semantic Cache for Large Language Models\n\nPaper Abstract: Abstract. Large Language Models (LLMs) like ChatGPT and Llama2 have revolutionized natural language processing and search engine dynamics. However, these models incur exceptionally high computational costs. For instance, GPT-3 consists of 175 billion parameters where inference demands billions of floating-point operations. Caching is a natural solution to reduce LLM inference costs on repeated queries which constitute about 31% of the total queries. However, existing caching methods are incapable of finding semantic similarities among LLM queries, leading to unacceptable false hit-and-miss rates. This paper introduces MeanCache, a user-centric semantic cache for LLMs that identifies semantically similar queries to determine cache hit or miss. Using MeanCache, the response to a user’s semantically similar query can be retrieved from a local cache rather than re-querying the LLM, thus reducing costs, service provider load, and environmental impact. Existing caching solutions for LLMs raise privacy and scalability concerns and perform wasteful query requests. MeanCache leverages Federated Learning (FL) to collaboratively train a query similarity model across LLM users without violating privacy. By placing a local cache in each user’s device and using FL, MeanCache reduces the latency and costs and enhances model performance, resulting in lower false hit rates. MeanCache compresses the embedding dimensions to minimize cache storage and also finds the optimal cosine similarity threshold. Our experiments benchmarked against the state-of-the-art caching method, reveal that MeanCache attains an approximately 17% higher F-score and a 20% increase in precision during semantic cache hit-and-miss decisions. It also reduces the storage requirement by 83% and accelerates semantic cache hit-and-miss decisions by 11%.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Arc Max is the popular browser’s new suite of AI tools - The Verge\",\n        \"DiskCache: Disk Backed Cache — DiskCache 5.6.1 documentation\",\n        \"Federated Learning: Collaborative Machine Learning without Centralized Training Data – Google Research Blog\",\n        \"Google AI updates: Bard and new AI features in Search\",\n        \"GPTCache/examples/benchmark at main · zilliztech/GPTCache\",\n        \"Introducing ChatGPT\",\n        \"Introducing Claude 2.1 \\\\ Anthropic\",\n        \"Learning human actions on computer applications\",\n        \"Microsoft Edge and Bing Users Engage in Over 1.9 Billion Copilot Chats in 2023\",\n        \"OpenAI Pricing\",\n        \"Perplexity Pro\",\n        \"Sizing Guide - NVIDIA Docs\",\n        \"[User] Embedding doesn’t seem to work? · Issue #899 · ggerganov/llama.cpp\",\n        \"What is Perplexity?\",\n        \"zilliztech/GPTCache: Semantic cache for LLMs. Fully integrated with LangChain and llama_index\",\n        \"Federated learning under arbitrary communication patterns\",\n        \"The impact of caching on search engines\",\n        \"A three level search engine index based in query log distribution\",\n        \"GPTCache: An Open-Source Semantic Cache for LLM Applications Enabling Faster Answers and Cost Savings\",\n        \"Flower: A Friendly Federated Learning Research Framework\",\n        \"The anatomy of a large-scale hypertextual web search engine\",\n        \"Compositional Generative Modeling: A Single Model is Not All You Need\",\n        \"Boosting the performance of web search engines: Caching and prefetching query results by exploiting historical usage data\",\n        \"OPTQ: Accurate Quantization for Generative Pre-trained Transformers\",\n        \"Efficient natural language response suggestion for smart reply\",\n        \"Analysis of a complex of statistical variables into principal components\",\n        \"Principal component analysis: a review and recent developments\",\n        \"Dense Passage Retrieval for Open-Domain Question Answering\",\n        \"ALBERT: A Lite BERT for Self-supervised Learning of Language Representations\",\n        \"Predictive caching and prefetching of query results in search engines\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Three-level caching for efficient query processing in large web search engines\",\n        \"The Era of 1-bit LLMs: All Large Language Models are in 1.58 Bits\",\n        \"New caching techniques for web search engines\",\n        \"On caching search engine query results\",\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Sentence-T5: Scalable Sentence Encoders from Pre-trained Text-to-Text Models\",\n        \"Training language models to follow instructions with human feedback\",\n        \"LIII. On lines and planes of closest fit to systems of points in space\",\n        \"The refinedweb dataset for falcon llm: Outperforming curated corpora with web data only\",\n        \"A survey of web cache replacement strategies\",\n        \"Sentence-BERT: Sentence Embeddings using Siamese BERT-Networks\",\n        \"How to Train Data-Efficient LLMs\",\n        \"Rank-preserving two-level caching for scalable search engines\",\n        \"Mpnet: Masked and permuted pre-training for language understanding\",\n        \"Energy and Policy Considerations for Deep Learning in NLP\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"QuIP#: Even Better LLM Quantization with Hadamard Incoherence and Lattice Codebooks\",\n        \"Attention is all you need\",\n        \"Bitnet: Scaling 1-bit transformers for large language models\",\n        \"Federated Learning with Matched Averaging\",\n        \"Tackling the objective inconsistency problem in heterogeneous federated optimization\",\n        \"Locality in search engine queries and its implications for caching\",\n        \"Performance of compressed inverted list caching in search engines\",\n        \"Towards Optimal Caching and Model Selection for Large Model Inference\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Privacy-Aware Semantic Cache for Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}