{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Failed Disruption Propagation in Integer Genetic Programming\n\nPaper Abstract: Abstract. We inject a random value into the evaluation of highly evolved deep integer GP trees 9 743 720 times and find 99.7% of test outputs are unchanged. Suggesting crossover and mutation‚Äôs impact are dissipated and seldom propagate outside the program. Indeed only errors near the root node have impact and disruption falls exponentially with depth at between e‚àídepth/3superscriptùëídepth3e^{-{\\rm depth}/3} and e‚àídepth/5superscriptùëídepth5e^{-{\\rm depth}/5} for recursive Fibonacci GP trees, allowing five to seven levels of nesting between the runtime perturbation and an optimal test oracle for it to detect most errors. Information theory explains this locally flat fitness landscape is due to FDP. Overflow is not important and instead, integer GP, like deep symbolic regression floating point GP and software in general, is not fragile, is robust, is not chaotic and suffers little from Lorenz‚Äô butterfly.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning Recursive Functions with Object Oriented Genetic Programming\",\n        \"An Analysis of the Relationship between Conditional Entropy and Failed Error Propagation in Software Testing\",\n        \"Evolving Graphs by Graph Programming\",\n        \"An abstraction-based genetic programming system\",\n        \"Injecting Shortcuts for Faster Running Java Code\",\n        \"Digital Evolution Exhibits Surprising Robustness to Poor Design Decisions\",\n        \"Evolving High-Level Imperative Program Trees with Genetic Programming\",\n        \"Software Robustness: A Survey, a Theory, and Some Prospects\",\n        \"Visualizing Tree Structures in Genetic Programming\",\n        \"Correctness attraction: a study of stability of software behavior under runtime perturbation\",\n        \"The Average Height of Binary Trees and Other Simple Trees\",\n        \"A Neural Compiler\",\n        \"Self Modifying Cartesian Genetic Programming: Fibonacci, Squares, Regression and Summing\",\n        \"Learning Recursive Sequences via Evolution of Machine-Language Programs\",\n        \"Automated Design of Accurate and Robust Image Classifiers with Brain Programming\",\n        \"Population Variation in Canonical Tree-based Genetic Programming\",\n        \"Genetic Programming: On the Programming of Computers by Means of Natural Selection\",\n        \"Dynamic Fitness Functions for Genetic Improvement in Compilers and Interpreters\",\n        \"Quadratic Bloat in Genetic Programming\",\n        \"The distribution of Reversible Functions is Normal\",\n        \"Scaling of Program Functionality\",\n        \"Genetic Improvement of Programs\",\n        \"Multi-threaded Memory Efficient Crossover in C++ for Generational Genetic Programming\",\n        \"Fitness First\",\n        \"Fitness First and Fatherless Crossover\",\n        \"Incremental Evaluation in Genetic Programming\",\n        \"Evolving Open Complexity\",\n        \"Genetic Programming Convergence\",\n        \"Measuring Failed Disruption Propagation in Genetic Programming\",\n        \"Long-Term Evolution Experiment with Genetic Programming\",\n        \"GP on SPMD parallel Graphics Hardware for mega Bioinformatics Data Mining\",\n        \"Software is Not Fragile\",\n        \"Dissipative Polynomials\",\n        \"Information Loss Leads to Robustness\",\n        \"Fitness Causes Bloat\",\n        \"The Evolution of Size and Shape\",\n        \"The Butterfly Effect\",\n        \"Strongly Typed Genetic Programming\",\n        \"Evolutions of Recursive Programs with Multi-Niche Genetic Programming (mnGP)\",\n        \"A Survey of Genetic Improvement Search Spaces\",\n        \"Genetic Improvement of Software: Report from Dagstuhl Seminar 18052\",\n        \"A Diary on Information Theory\",\n        \"Graph structured program evolution\",\n        \"The Push3 execution stack and the evolution of control\",\n        \"Algorithm Evolution with Internal Reinforcement for Signal Understanding\",\n        \"PIE: a dynamic failure-based technique\",\n        \"Learning recursive programs with cooperative coevolution of genetic code mapping and genotype\",\n        \"A Higher-Order Function Approach to Evolve Recursive Programs\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Failed Disruption Propagation in Integer Genetic Programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}