{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: BASALISC: Programmable Hardware Accelerator for BGV Fully Homomorphic Encryption\n\nPaper Abstract: Abstract Fully Homomorphic Encryption (FHE) allows for secure computation on encrypted data. Unfortunately, huge memory size, computational cost and bandwidth requirements limit its practicality. We present BASALISC, an architecture family of hardware accelerators that aims to substantially accelerate FHE computations in the cloud. BASALISC is the first to implement the BGV scheme with fully-packed bootstrapping – the noise removal capability necessary for arbitrary-depth computation. It supports a customized version of bootstrapping that can be instantiated with hardware multipliers optimized for area and power. BASALISC is a three-abstraction-layer RISC architecture, designed for a 1 GHz ASIC implementation and underway toward 150mm2 die tape-out in a 12nm GF process. BASALISC’s four-layer memory hierarchy includes a two-dimensional conflict-free inner memory layer that enables 32 Tb/s radix-256 NTT computations without pipeline stalls. Its conflict-resolution permutation hardware is generalized and re-used to compute BGV automorphisms without throughput penalty. BASALISC also has a custom multiply-accumulate unit to accelerate BGV key switching. The BASALISC toolchain comprises a custom compiler and a joint performance and correctness simulator. To evaluate BASALISC, we study its physical realizability, emulate and formally verify its core functional units, and we study its performance on a set of benchmarks. Simulation results show a speedup of more than 5,000×\\times over HElib – a popular software FHE library.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fast arithmetic hardware library for rlwe-based homomorphic encryption\",\n        \"Homomorphic encryption security standard\",\n        \"The Design and Analysis of Computer Algorithms\",\n        \"Practical bootstrapping in quasilinear time\",\n        \"A full rns variant of fv like somewhat homomorphic encryption schemes\",\n        \"(leveled) fully homomorphic encryption without bootstrapping\",\n        \"Final: Faster fhe instantiated with ntru and lwe\",\n        \"Saw: The software analysis workbench\",\n        \"Logistic regression over encrypted data from fully homomorphic encryption\",\n        \"Tfhe: fast fully homomorphic encryption over the torus\",\n        \"Homomorphic lower digits removal and improved fhe bootstrapping\",\n        \"Concrete: Concrete operates on ciphertexts rapidly by extending tfhe\",\n        \"Homomorphic encryption for arithmetic of approximate numbers\",\n        \"High-Speed Polynomial Multiplication Architecture for Ring-LWE and SHE Cryptosystems\",\n        \"Simplified control of fft hardware\",\n        \"Accelerating fully homomorphic encryption in hardware\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"A new representation of fft algorithms using triangular matrices\",\n        \"Fully homomorphic encryption using ideal lattices\",\n        \"Fully homomorphic encryption with polylog overhead\",\n        \"Homomorphic evaluation of the aes circuit\",\n        \"Bootstrapping for bgv and bfv revisited\",\n        \"HElib country lookup example\",\n        \"Logistic regression on homomorphic encrypted data at scale\",\n        \"Algorithms in helib\",\n        \"Design and implementation of helib: a homomorphic encryption library\",\n        \"Bootstrapping for helib\",\n        \"Conflict free memory addressing for dedicated fft hardware\",\n        \"Accelerating number theoretic transformations for bootstrappable homomorphic encryption on gpus\",\n        \"BTS: An Accelerator for Bootstrappable Fully Homomorphic Encryption\",\n        \"Revisiting homomorphic encryption schemes for finite fields\",\n        \"Lattigo v3\",\n        \"The tms320 family of digital signal processors\",\n        \"Cryptol: High assurance, retargetable crypto development and validation\",\n        \"An effective memory addressing scheme for FFT processors\",\n        \"Medha: Microcoded hardware accelerator for computing on encrypted data\",\n        \"Design and implementation of a fast and scalable ntt-based polynomial multiplier architecture\",\n        \"Accelerating Homomorphic Evaluation on Reconfigurable Hardware\",\n        \"Palisade lattice cryptography library user manual\",\n        \"On data banks and privacy homomorphisms\",\n        \"HEAX: an architecture for computing on encrypted data\",\n        \"Accelerator for computing on encrypted data\",\n        \"Building conflict-free fft schedules\",\n        \"Data protection in virtual environments (DPRIVE)\",\n        \"Conflict-free parallel memory accessing techniques for FFT architectures\",\n        \"Compact ring-lwe cryptoprocessor\",\n        \"Microsoft SEAL (release 4.0)\",\n        \"F1: A fast and programmable accelerator for fully homomorphic encryption\",\n        \"Craterlake: a hardware accelerator for efficient unbounded computation on encrypted data\",\n        \"Modular Hardware Architecture for Somewhat Homomorphic Function Evaluation\",\n        \"HEPCloud: An FPGA-Based Multicore Processor for FV Somewhat Homomorphic Function Evaluation\",\n        \"FPGA-Based High-Performance Parallel Architecture for Homomorphic Computing on Encrypted Data\",\n        \"Fully homomorphic simd operations\",\n        \"Fpga-based hardware accelerator for leveled ring-lwe fully homomorphic encryption\",\n        \"A generalized conflict-free memory addressing scheme for continuous-flow parallel-processing FFT processors with rescheduling\",\n        \"HEAWS: an accelerator for homomorphic encryption on the amazon AWS FPGA\",\n        \"Towards efficient arithmetic for Ring-LWE based homomorphic encryption\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in BASALISC: Programmable Hardware Accelerator for BGV Fully Homomorphic Encryption, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}