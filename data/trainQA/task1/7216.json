{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Leveraging Wikidata’s edit history in knowledge graph refinement tasks\n\nPaper Abstract: Abstract Knowledge graphs have been adopted in many diverse fields for a variety of purposes. Most of those applications rely on valid and complete data to deliver their results, pressing the need to improve the quality of knowledge graphs. A number of solutions have been proposed to that end, ranging from rule-based approaches to the use of probabilistic methods, but there is an element that has not been considered yet: the edit history of the graph. In the case of collaborative knowledge graphs (e.g., Wikidata), those edits represent the process in which the community reaches some kind of fuzzy and distributed consensus over the information that best represents each entity, and can hold potentially interesting information to be used by knowledge graph refinement methods. In this paper, we explore the use of edit history information from Wikidata to improve the performance of type prediction methods. To do that, we have first built a JSON dataset containing the edit history of every instance from the 100 most important classes in Wikidata. This edit history information is then explored and analyzed, with a focus on its potential applicability in knowledge graph refinement tasks. Finally, we propose and evaluate two new methods to leverage this edit history information in knowledge graph embedding models for type prediction tasks. Our results show an improvement in one of the proposed methods against current approaches, showing the potential of using edit information in knowledge graph refinement tasks and opening new promising research lines within the field.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Building and exploring an enterprise knowledge graph for investment analysis\",\n        \"Learning a health knowledge graph from electronic medical records\",\n        \"Knowledge graph based automated generation of test cases in software engineering\",\n        \"Dbpedia-a crystallization point for the web of data\",\n        \"Wikidata: A new platform for collaborative data collection\",\n        \"What we talk about when we talk about wikidata quality: a literature survey\",\n        \"Linked data quality of dbpedia, freebase, opencyc, wikidata, and yago\",\n        \"A study of the quality of wikidata\",\n        \"Using description logics for rdf constraint checking and closed-world recognition\",\n        \"Shape expressions: an rdf validation and transformation language\",\n        \"Improving the quality of linked data using statistical distributions\",\n        \"Approaches to measure class importance in knowledge graphs\",\n        \"The pagerank citation ranking: Bringing order to the web.\",\n        \"PageRank on Wikipedia: Towards General Importance Scores for Entities\",\n        \"Wikidata subset with revision history information [JSON] (Jun. 2022).\",\n        \"Dynamics of conflicts in wikipedia\",\n        \"Rotate: Knowledge graph embedding by relational rotation in complex space\",\n        \"Translating embeddings for modeling multi-relational data\",\n        \"Multi-relational poincaré graph embeddings\",\n        \"Bringing light into the dark: A large-scale evaluation of knowledge graph embedding models under a unified framework\",\n        \"Rdf2vec: Rdf graph embeddings for data mining\",\n        \"Approximate statistical tests for comparing supervised classification learning algorithms\",\n        \"Automatic indexing\",\n        \"PyKEEN 1.0: A Python Library for Training and Evaluating Knowledge Graph Embeddings\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"pyrdf2vec: A python implementation and extension of rdf2vecdoi:10.48550/ARXIV.2205.02283.\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Wikidata subset with revision history information [RDF] (Jun. 2022).\",\n        \"Bots vs. wikipedians, anons vs. logged-ins (redux) a global study of edit activity on wikipedia and wikidata\",\n        \"Peer-production system or collaborative ontology engineering effort: What is wikidata?\",\n        \"Wikidatians are born: Paths to full participation in a collaborative structured knowledge base.\",\n        \"The evolution of power and standard wikidata editors: comparing editing behavior over time to predict lifespan and volume of edits\",\n        \"What makes a good collaborative knowledge graph: group composition and quality in wikidata\",\n        \"Who models the world? collaborative ontology creation and user roles in wikidata\",\n        \"Type prediction in noisy rdf knowledge bases using hierarchical multilabel classification with graph and latent features\",\n        \"Supervised typing of big graphs using semantic embeddings\",\n        \"Entity typing based on rdf2vec using supervised and unsupervised methods\",\n        \"Predicting instance type assertions in knowledge graphs using stochastic neural networks\",\n        \"Analysis of the impact of negative sampling on link prediction in knowledge graphs\",\n        \"Kbgan: Adversarial learning for knowledge graph embeddings\",\n        \"Incorporating gan for negative sampling in knowledge representation learning\",\n        \"Nscaching: simple and efficient negative sampling for knowledge graph embedding\",\n        \"Simple and automated negative sampling for knowledge graph embedding\",\n        \"Querying the edit history of wikidata\",\n        \"Wikidated 1.0: An evolving knowledge graph dataset of wikidata’s revision history\",\n        \"Learning to recommend items to wikidata editors\",\n        \"Learning how to correct a knowledge base from the edit history\",\n        \"Neural knowledge base repairs\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Leveraging Wikidata’s edit history in knowledge graph refinement tasks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}