{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Follow Instructions in Text-Based Games\n\nPaper Abstract: Abstract Text-based games present a unique class of sequential decision making problem in which agents interact with a partially observable, simulated environment via actions and observations conveyed through natural language. Such observations typically include instructions that, in a reinforcement learning (RL) setting, can directly or indirectly guide a player towards completing reward-worthy tasks. In this work, we study the ability of RL agents to follow such instructions. We conduct experiments that show that the performance of state-of-the-art text-based game agents is largely unaffected by the presence or absence of such instructions, and that these agents are typically unable to execute tasks to completion. To further study and address the task of instruction following, we equip RL agents with an internal structured representation of natural language instructions in the form of Linear Temporal Logic (LTL), a formal language that is increasingly used for temporally extended reward specification in RL. Our framework both supports and highlights the benefit of understanding the temporal semantics of instructions and in measuring progress towards achievement of such a temporally extended behaviour. Experiments with 500+ games in TextWorld demonstrate the superior performance of our approach.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning dynamic belief graphs to generalize on text-based games\",\n        \"Graph constrained reinforcement learning for natural language action spaces\",\n        \"Playing text-adventure games with graph-based deep reinforcement learning\",\n        \"Aligning to social norms and values in interactive narratives\",\n        \"Layer normalization\",\n        \"Using temporal logics to express search control knowledge for planning\",\n        \"Principles of Model Checking\",\n        \"Planning with temporally extended goals using heuristic search\",\n        \"Do as I can, not as I say: Grounding language in robotic affordances\",\n        \"Language models are few-shot learners\",\n        \"Strong fully observable non-deterministic planning with LTL and LTL-f goals\",\n        \"LTL and beyond: Formal languages for reward function specification in reinforcement learning\",\n        \"Textworld: A learning environment for text-based games\",\n        \"Spot 2.0‚ÄîA Framework for LTL and œâùúî\\\\omega-Automata Manipulation\",\n        \"What to do and how to do it: Translating natural language directives into temporal and dynamic logic representation for goal management and action execution\",\n        \"LTLMoP: Experimenting with language, temporal logic and robot control\",\n        \"Formal specifications from natural language\",\n        \"Interactive fiction games: A colossal adventure\",\n        \"Deep reinforcement learning with a natural language action space\",\n        \"Language models as zero-shot planners: Extracting actionable knowledge for embodied agents\",\n        \"Algorithmic improvements for deep reinforcement learning applied to interactive fiction\",\n        \"Neuro-symbolic reinforcement learning with first-order logic\",\n        \"Adam: A method for stochastic optimization\",\n        \"Encoding formulas as deep networks: Reinforcement learning for zero-shot execution of LTL formulas\",\n        \"Systematic Generalisation through Task Temporal Logic and Deep Reinforcement Learning\",\n        \"Environment-independent task specifications via GLTL\",\n        \"Learning object-oriented dynamics for planning from text\",\n        \"On the variance of the adaptive learning rate and beyond\",\n        \"Advances in pre-training distributed word representations\",\n        \"Language understanding for text-based games using deep reinforcement learning\",\n        \"Computing infinite plans for LTL goals using a classical planner\",\n        \"The temporal logic of programs\",\n        \"Prioritized experience replay\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Highway networks\",\n        \"Advice-based exploration in model-based reinforcement learning\",\n        \"Teaching multiple tasks to an RL agent using LTL\",\n        \"First TextWorld Problems, the competition: Using text-based games to advance capabilities of AI agents\",\n        \"Instruction following in text-based games\",\n        \"LTL2action: Generalizing LTL instructions for multi-task RL\",\n        \"Deep reinforcement learning with double q-learning\",\n        \"Attention is all you need\",\n        \"Learning a natural-language to LTL executable semantic parser for grounded robotics\",\n        \"Comprehensible context-driven text game playing\",\n        \"Learn how to cook a new recipe in a new house: Using map familiarization, curriculum learning, and bandit feedback to learn families of text-based adventure games\",\n        \"Counting to explore and generalize in text-based games\",\n        \"Learn what not to learn: Action elimination with deep reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Learning to Follow Instructions in Text-Based Games, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}