{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 61 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Low-rank lottery tickets: finding efficient low-rank neural networks via matrix differential equations\n\nPaper Abstract: Abstract Neural networks have achieved tremendous success in a large variety of applications. However, their memory footprint and computational demand can render them impractical in application settings with limited hardware or energy resources. In this work, we propose a novel algorithm to find efficient low-rank subnetworks. Remarkably, these subnetworks are determined and adapted already during the training phase and the overall time and memory resources required by both training and evaluating them are significantly reduced. The main idea is to restrict the weight matrices to a low-rank manifold and to update the low-rank factors rather than the full matrix during training. To derive training updates that are restricted to the prescribed manifold, we employ techniques from dynamic model order reduction for matrix differential equations. This allows us to provide approximation, stability, and descent guarantees. Moreover, our method automatically and dynamically adapts the ranks during training to achieve the desired approximation accuracy. The efficiency of the proposed method is demonstrated through a variety of numerical experiments on fully-connected and convolutional networks.\n\n{retrieved_text}\n\nGenerate exactly 61 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 61\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optimization algorithms on matrix manifolds\",\n        \"N2n learning: Network to network compression via policy gradient reinforcement learning\",\n        \"What is the state of neural network pruning?\",\n        \"A rank-adaptive robust integrator for dynamical low-rank approximation\",\n        \"Time integration of symmetric and anti-symmetric low-rank matrices and Tucker tensors\",\n        \"An unconventional robust integrator for dynamical low-rank approximation\",\n        \"Rank-adaptive time integration of tree tensor networks\",\n        \"Time integration of tree tensor networks\",\n        \"An exploration of parameter redundancy in deep networks with circulant projections\",\n        \"Binarized neural networks: Training deep neural networks with weights and activations constrained to +1 or -1\",\n        \"The MNIST database of handwritten digit images for machine learning research\",\n        \"Exploiting linear structure within convolutional networks for efficient evaluation\",\n        \"On smooth decompositions of matrices\",\n        \"The principles of quantum mechanics\",\n        \"Rank diminishing in deep neural networks\",\n        \"A geometric approach to dynamical model order reduction\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Wave mechanics, advanced general theory, volume 1\",\n        \"A riemannian rank-adaptive method for low-rank matrix completion\",\n        \"Dynamic network surgery for efficient dnns\",\n        \"Solving ordinary differential equations. I. Nonstiff problems, volume 8 of Springer Series in Computational Mathematics\",\n        \"Soft filter pruning for accelerating deep convolutional neural networks\",\n        \"AMC: AutoML for model compression and acceleration on mobile devices\",\n        \"Channel pruning for accelerating very deep neural networks\",\n        \"Densely connected convolutional networks\",\n        \"Data-driven sparse structure selection for deep neural networks\",\n        \"Low-rank compression of neural nets: Learning the rank of each layer\",\n        \"Training CNNs with low-rank filters for efficient image classification\",\n        \"Speeding up convolutional neural networks with low rank expansions\",\n        \"Initialization and regularization of factorized neural layers\",\n        \"Discretized dynamical low-rank approximation in the presence of small singular values\",\n        \"Efficient neural network compression\",\n        \"Compression of deep convolutional neural networks for fast and low power mobile applications\",\n        \"Dynamical low-rank approximation\",\n        \"Dynamical tensor approximation\",\n        \"A robust collision source method for rank adaptive dynamical low-rank approximation in radiation therapy\",\n        \"Speeding-up convolutional neural networks using fine-tuned cp-decomposition\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Constrained optimization based low-rank approximation of deep neural networks\",\n        \"Runtime neural pruning\",\n        \"Towards optimal structured CNN pruning via generative adversarial learning\",\n        \"Hierarchical representations for efficient architecture search\",\n        \"A projector-splitting integrator for dynamical low-rank approximation\",\n        \"Dynamical approximation by hierarchical Tucker and tensor-train tensors\",\n        \"Time integration of rank-constrained Tucker tensors\",\n        \"Thinet: A filter level pruning method for deep neural network compression\",\n        \"Implicit self-regularization in deep neural networks: Evidence from random matrix theory and implications for learning\",\n        \"Pruning convolutional neural networks for resource efficient inference\",\n        \"Low-rank matrix factorization for deep neural network training with high-dimensional output targets\",\n        \"Integration methods and accelerated optimization algorithms\",\n        \"Play and prune: Adaptive filter pruning for deep model compression\",\n        \"Analytic insights into structure and rank of neural network Hessian maps\",\n        \"Low-memory neural network training: A technical report\",\n        \"Compressing recurrent neural network with tensor train\",\n        \"Why are big data matrices approximately low rank?\",\n        \"Pufferfish: communication-efficient models at no extra cost\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"Coordinating filters for faster deep neural networks\",\n        \"Quantized convolutional neural networks for mobile devices\",\n        \"Learning low-rank deep neural networks via singular vector orthogonality regularization and singular value sparsification\",\n        \"Rethinking the smaller-norm-less-informative assumption in channel pruning of convolution layers\"\n    ],\n    \"reasoning\": \"Selected these 61 references because they represent foundational work and recent advances in Low-rank lottery tickets: finding efficient low-rank neural networks via matrix differential equations, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}