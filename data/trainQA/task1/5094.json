{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Dynamic GPU Energy Optimization for Machine Learning Training Workloads\n\nPaper Abstract: Abstract GPUs are widely used to accelerate the training of machine learning workloads. As modern machine learning models become increasingly larger, they require a longer time to train, leading to higher GPU energy consumption. This paper presents GPOEO, an online GPU energy optimization framework for machine learning training workloads. GPOEO dynamically determines the optimal energy configuration by employing novel techniques for online measurement, multi-objective prediction modeling, and search optimization. To characterize the target workload behavior, GPOEO utilizes GPU performance counters. To reduce the performance counter profiling overhead, it uses an analytical model to detect the training iteration change and only collects performance counter data when an iteration shift is detected. GPOEO employs multi-objective models based on gradient boosting and a local search algorithm to find a trade-off between execution time and energy consumption. We evaluate the GPOEO by applying it to 71 machine learning workloads from two AI benchmark suites running on an NVIDIA RTX3080Ti GPU. Compared with the NVIDIA default scheduling strategy, GPOEO delivers a mean energy saving of 16.2% with a modest average execution time increase of 5.1%.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep learning\",\n        \"A state-of-the-art survey on deep learning theory and architectures\",\n        \"Gpgpu power modeling for multi-domain voltage-frequency scaling\",\n        \"Modeling and decoupling the gpu power consumption for cross-domain dvfs\",\n        \"Dvfs-aware application classification to improve gpgpus energy efficiency\",\n        \"Gpu static modeling using ptx and deep structured learning\",\n        \"Verified instruction-level energy consumption measurement for nvidia gpus\",\n        \"Energy-efficient inference service of transformer-based deep learning models on gpus\",\n        \"Batchsizer: Power-performance trade-off for dnn inference\",\n        \"Dynamic gpgpu power management using adaptive model predictive control\",\n        \"Indicator-directed dynamic power management for iterative workloads on gpu-accelerated systems\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"Aibench training: balanced industry-standard ai training benchmarking\",\n        \"Nvml api reference manual\",\n        \"Cupti documentation\",\n        \"Benchmarking graph neural networks\",\n        \"A runtime and non-intrusive approach to optimize edp by tuning threads and cpu frequency for openmp applications\",\n        \"Pytorch benchmarks\",\n        \"ThunderSVM: A fast SVM library on GPUs and CPUs\",\n        \"Exploiting gpus for efficient gradient boosting decision tree training\",\n        \"ThunderGBM: Fast GBDTs and random forests on GPUs\",\n        \"The golden section\",\n        \"Statistical and machine learning models for optimizing energy in parallel applications\",\n        \"Understanding the impact of dynamic power capping on application progress\",\n        \"Fine-grained powercap allocation for power-constrained systems based on multi-objective machine learning\",\n        \"Uncore power scavenger: A runtime for uncore power conservation on hpc systems\",\n        \"Online power management for multi-cores: A reinforcement learning based approach\",\n        \"Power capping: What works, what does not\",\n        \"Energy efficiency modeling of parallel applications\",\n        \"Predictable gpus frequency scaling for energy and performance\",\n        \"Mapping parallelism to multi-cores: a machine learning based approach\",\n        \"Portable mapping of data parallel programs to opencl for heterogeneous systems\",\n        \"Automatic and portable mapping of data parallel programs to opencl for gpu-based heterogeneous systems\",\n        \"End-to-end deep learning of optimization heuristics\",\n        \"Smart multi-task scheduling for opencl programs on cpu/gpu heterogeneous platforms\",\n        \"Adaptive optimization for opencl programs on embedded heterogeneous systems\",\n        \"Machine learning in compiler optimization\",\n        \"Parallel programming models for heterogeneous many-cores: a comprehensive survey\",\n        \"Auto-tuning streamed applications on intel xeon phi\",\n        \"Hyperpower: Power-and memory-constrained hyper-parameter optimization for neural networks\",\n        \"Optimizing deep learning inference on embedded systems through adaptive model selection\",\n        \"Camel: Smart, adaptive energy optimization for mobile web interactions\",\n        \"Exploring the accuracyâ€“energy trade-off in machine learning\",\n        \"Optimizing streaming parallelism on heterogeneous many-core architectures\",\n        \"Optimizing sparse matrix multiplications for graph neural networks\",\n        \"Deep program structure modeling through multi-relational graph-based learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Dynamic GPU Energy Optimization for Machine Learning Training Workloads, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}