{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Algebraic Tools for Computing Polynomial Loop Invariants\n\nPaper Abstract: Abstract Loop invariants are properties of a program loop that hold both before and after each iteration of the loop. They are often used to verify programs and ensure that algorithms consistently produce correct results during execution. Consequently, generating invariants becomes a crucial task for loops. We specifically focus on polynomial loops, where both the loop conditions and the assignments within the loop are expressed as polynomials. Although computing polynomial invariants for general loops is undecidable, efficient algorithms have been developed for certain classes of loops. For instance, when all assignments within a while loop involve linear polynomials, the loop becomes solvable. In this work, we study the more general case, where the polynomials can have arbitrary degrees. Using tools from algebraic geometry, we present two algorithms designed to generate all polynomial invariants within a given vector subspace, for a branching loop with nondeterministic conditional statements. These algorithms combine linear algebra subroutines with computations on polynomial ideals. They differ depending on whether the initial values of the loop variables are specified or treated as parameters. Additionally, we present a much more efficient algorithm for generating polynomial invariants of a specific form, applicable to all initial values. This algorithm avoids expensive ideal computations.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Solving invariant generation for unsolvable loops\",\n        \"Real Algebraic Geometry, volume 3 of Ergebnisse der Mathematik und ihrer Grenzgebiete\",\n        \"Polynomial automata: Zeroness and applications\",\n        \"Msolve: A library for solving polynomial systems\",\n        \"Algebraic tools for computing polynomial loop invariants\",\n        \"Algorithms in Real Algebraic Geometry\",\n        \"Polynomial invariant generation for non-deterministic recursive programs\",\n        \"Inference of polynomial invariants for imperative programs: A farewell to gröbner bases\",\n        \"Solvable polynomial ideals: The ideal reflection for program analysis\",\n        \"Ideals, varieties, and algorithms: an introduction to computational algebraic geometry and commutative algebra\",\n        \"Polynomial invariants by linear algebra\",\n        \"Synthesizing invariants by solving solvable loops\",\n        \"A survey on signature-based algorithms for computing gröbner bases\",\n        \"Assigning meanings to programs\",\n        \"Algebro-geometric algorithms for template-based synthesis of polynomial programs\",\n        \"Macaulay2, a software system for research in algebraic geometry\",\n        \"Algebraic geometry, volume 52\",\n        \"Invariant generation for multi-path loops with polynomial assignments\",\n        \"Polynomial invariants for affine programs\",\n        \"On strongest algebraic program invariants\",\n        \"Affine relationships among variables of a program\",\n        \"Algebraic Varieties\",\n        \"Logical analysis of programs\",\n        \"Sharp effective nullstellensatz\",\n        \"Reasoning algebraically about p-solvable loops\",\n        \"Algebra-based loop analysis\",\n        \"Simple linear loops: Algebraic invariants and applications\",\n        \"The complexity of the word problem for commutative semi-groups and polynomial ideals\",\n        \"Strong invariants are hard: On the hardness of strongest polynomial invariants for (probabilistic) programs\",\n        \"Computing polynomial program invariants\",\n        \"A note on karr’s algorithm\",\n        \"Temporal verification of reactive systems: safety\",\n        \"Length of polynomial ascending chains and primitive recursiveness\",\n        \"This is the moment for probabilistic loops\",\n        \"Trajectories of polynomial vector fields and ascending chains of polynomial ideals\",\n        \"Ascending chains of ideals in the polynomial ring\",\n        \"Positive polynomials on compact semi-algebraic sets\",\n        \"Automatic generation of polynomial loop invariants: Algebraic foundations\",\n        \"Automatic generation of polynomial invariants of bounded degree using abstract interpretation\",\n        \"Generating all polynomial invariants in simple loops\",\n        \"Constructive proof of hilbert’s theorem on ascending chains\",\n        \"An algorithm for solving parametric linear systems\",\n        \"Non-linear loop invariant generation using gröbner bases\",\n        \"On the bit-complexity of sparse polynomial and series multiplication\",\n        \"Modern computer algebra\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Algebraic Tools for Computing Polynomial Loop Invariants, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}