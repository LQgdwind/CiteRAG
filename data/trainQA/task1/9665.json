{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Forward-Backward Reasoning in Large Language Models for Mathematical Verification\n\nPaper Abstract: Abstract Self-Consistency samples diverse reasoning chains with answers and chooses the final answer by majority voting. It is based on forward reasoning and cannot further improve performance by sampling more reasoning chains when saturated. To further boost performance, we introduce backward reasoning to verify candidate answers. Specifically, for mathematical tasks, we mask a number in the question and ask the LLM to answer a backward question created by a simple template, i.e., to predict the masked number when a candidate answer is provided. Instead of using forward or backward reasoning alone, we propose FOBAR to combine FOrward and BAckward Reasoning for verification. Extensive experiments on six standard mathematical data sets and three LLMs show that FOBAR achieves state-of-the-art performance. In particular, FOBAR outperforms Self-Consistency, which uses forward reasoning alone, demonstrating that combining forward and forward reasoning is better. In addition, FOBAR performs better than existing verification methods, showing the effectiveness of the simple template used in backward reasoning and the proposed combination. Extensions to non-mathematical problems are also discussed and validated empirically.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A learning algorithm for Boltzmann machines\",\n        \"Language models are few-shot learners\",\n        \"Teaching large language models to Self-Debug\",\n        \"Meta-learning via language model in-context tuning\",\n        \"PaLM: Scaling language modeling with pathways\",\n        \"Training verifiers to solve math word problems\",\n        \"Active prompting with chain-of-thought for large language models\",\n        \"Controlling linguistic style aspects in neural language generation\",\n        \"Complexity-based prompting for multi-step reasoning\",\n        \"Learning to solve arithmetic word problems with verb categorization\",\n        \"LAMBADA: Backward chaining for automated reasoning in natural language\",\n        \"Text modular networks: Learning to decompose tasks in the language of existing models\",\n        \"Large language models are zero-shot reasoners\",\n        \"Parsing algebraic word problems into equations\",\n        \"DeepInception: Hypnotize large language model to be jailbreaker\",\n        \"Explainable multi-hop verbal reasoning through internal monologue\",\n        \"Letâ€™s verify step by step\",\n        \"Program induction by rationale generation: Learning to solve and explain algebraic word problems\",\n        \"Deductive verification of Chain-of-Thought reasoning\",\n        \"Dynamic prompt learning via policy gradient for semi-structured mathematical reasoning\",\n        \"Self-Refine: Iterative refinement with self-feedback\",\n        \"MetaICL: Learning to learn in context\",\n        \"GPT-3.5\",\n        \"Introducing ChatGPT\",\n        \"GPT-4\",\n        \"Are NLP models really able to solve simple math word problems?\",\n        \"REFINER: Reasoning feedback on intermediate representations\",\n        \"The backward induction paradox\",\n        \"Boosted prompt ensembles for large language models\",\n        \"Peano: learning formal mathematical reasoning\",\n        \"Learning knowledge base inference with neural theorem provers\",\n        \"Solving general arithmetic word problems\",\n        \"Artificial Intelligence: A Modern Approach\",\n        \"Reflexion: Language agents with verbal reinforcement learning\",\n        \"Learning to prove theorems by learning to generate theorems\",\n        \"Self-Consistency improves chain of thought reasoning in language models\",\n        \"Chain of thought prompting elicits reasoning in large language models\",\n        \"Generating sequences by learning to Self-Correct\",\n        \"Large language models are better reasoners with Self-Verification\",\n        \"OpenICL: An open-source framework for in-context learning\",\n        \"Re-Reading improves reasoning in language models\",\n        \"RCOT: Detecting and rectifying factual inconsistency in reasoning by reversing chain-of-thought\",\n        \"Tree of Thoughts: Deliberate problem solving with large language models\",\n        \"Nature language reasoning: A survey\",\n        \"Self-Edit: Fault-aware code editor for code generation\",\n        \"Automatic chain of thought prompting in large language models\",\n        \"Multimodal chain-of-thought reasoning in language models\",\n        \"Progressive-hint prompting improves reasoning in large language models\",\n        \"Least-to-most prompting enables complex reasoning in large language models\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Forward-Backward Reasoning in Large Language Models for Mathematical Verification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}