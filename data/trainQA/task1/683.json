{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Code and Named Entity Recognition in StackOverflow\n\nPaper Abstract: Abstract There is an increasing interest in studying natural language and computer code together, as large corpora of programming texts become readily available on the Internet. For example, StackOverflow currently has over 15 million programming related questions written by 8.5 million users. Meanwhile, there is still a lack of fundamental NLP techniques for identifying code tokens or software-related named entities that appear within natural language sentences. In this paper, we introduce a new named entity recognition (NER) corpus for the computer programming domain, consisting of 15,372 sentences annotated with 20 fine-grained entity types. We trained in-domain BERT representations (BERTOverflow) on 152 million sentences from StackOverflow, which lead to an absolute increase of +10 F1 score over off-the-shelf BERT. We also present the SoftNER model which achieves an overall 79.10 F1 score for code and named entity recognition on StackOverflow data. Our SoftNER model incorporates a context-independent code token classifier with corpus-level features to improve the BERT-based tagging model.111Our code and data are available at: https://github.com/jeniyat/StackOverflowNER/\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Named Entity Recognition on Code-Switched Data: Overview of the CALCS 2018 Shared Task\",\n        \"A Multi-task Approach for Named Entity Recognition in Social Media Data\",\n        \"Cloze-driven pretraining of self-attention networks\",\n        \"Part-of-Speech Tagging for Code-Switched, Transliterated Texts without Explicit Language Identification\",\n        \"Arabic Named Entity Recognition using Optimized Feature Sets\",\n        \"Natural Language Processing with Python\",\n        \"Oakley supercomputer\",\n        \"Ultra-Fine Entity Typing\",\n        \"A Coefficient of Agreement for Nominal Scales\",\n        \"Introduction to the Bio-entity Recognition Task at JNLPBA\",\n        \"Natural Language Processing (almost) from Scratch\",\n        \"Using Similarity Measures to Select Pretraining Data for NER\",\n        \"Analysis of Named Entity Recognition and Linking for Tweets\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Annotating Named Entities in Twitter Data with Crowdsourcing\",\n        \"Part-of-speech Tagging for Twitter: Annotation, Features, and Experiments\",\n        \"Transfer Learning for Biomedical Named Entity Recognition with Neural Networks\",\n        \"GHTorrent: Githubâ€™s Data from a Firehose\",\n        \"Marginal Likelihood Training of BiLSTM-CRF for Biomedical Named Entity Recognition from Disjoint Label Sets\",\n        \"Summarizing Source Code using a Neural Attention Model\",\n        \"FastText.zip: Compressing Text Classification Models\",\n        \"An Annotated Corpus for Machine Reading of Instructions in Wet Lab Protocols\",\n        \"Neural Architectures for Named Entity Recognition\",\n        \"Bidirectional LSTM for Named Entity Recognition in Twitter Messages\",\n        \"Neural Networks Models for Entity Discovery and Linking\",\n        \"World Knowledge for Reading Comprehension: Rare Entity Prediction with Hierarchical LSTMs Using External Descriptions\",\n        \"End-to-end Sequence Labeling via Bi-directional LSTM-CNNs-CRF\",\n        \"A Word-Complexity Lexicon and A Neural Readability Ranking Model for Lexical Simplification\",\n        \"The Stanford CoreNLP Natural Language Processing Toolkit\",\n        \"Learned in Translation: Contextualized Word Vectors\",\n        \"KB-LDA: Jointly Learning a Knowledge Base of Hierarchy, Relations, and Facts\",\n        \"Annotated Gigaword\",\n        \"Learning to Denoise Distantly-Labeled Data for Entity Typing\",\n        \"GloVe: Global Vectors for Word Representation\",\n        \"Deep Contextualized Word Representations\",\n        \"Learning part-of-speech taggers with inter-annotator agreement loss\",\n        \"Language to Code: Learning Semantic Parsers for If-This-Then-That Recipes\",\n        \"Great Question! Question Quality in Community Q&A\",\n        \"Named Entity Recognition in Tweets: An Experimental Study\",\n        \"Introduction to the CoNLL-2003 Shared Task: Language-Independent Named Entity Recognition\",\n        \"In-domain Context-aware Token Embeddings Improve Biomedical Named Entity Recognition\",\n        \"Question Relatedness on Stack Overflow: The Task, Dataset, and Corpus-inspired Models\",\n        \"Neural Cross-Lingual Entity Linking\",\n        \"brat: a Web-based Tool for NLP-Assisted Text Annotation\",\n        \"Evaluating the Utility of Hand-crafted Features in Sequence Labelling\",\n        \"Neural Cross-Lingual Named Entity Recognition with Minimal Resources\",\n        \"Distantly Supervised NER with Partial Annotation Learning and Reinforcement Learning\",\n        \"Hierarchical Attention Networks for Document Classification\",\n        \"CoaCor: Code Annotation for Code Retrieval with Reinforcement Learning\",\n        \"Software-specific Named Entity Recognition in Software Engineering Social Content\",\n        \"TRANX: A Transition-based Neural Abstract Syntax Parser for Semantic Parsing and Code Generation\",\n        \"Adaptive Co-attention Network for Named Entity Recognition in Tweets\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Code and Named Entity Recognition in StackOverflow, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}