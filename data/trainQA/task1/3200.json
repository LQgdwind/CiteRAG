{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Decoupling Attention Markov Networks for Semi-supervised Graph Node Classification\n\nPaper Abstract: Abstract Graph neural networks (GNN) have been ubiquitous in graph node classification tasks. Most of GNN methods update the node embedding iteratively by aggregating its neighbors’ information. However, they often suffer from negative disturbance, due to edges connecting nodes with different labels. One approach to alleviate this negative disturbance is to use attention to learn the weights of aggregation, but current attention-based GNNs only consider feature similarity and also suffer from the lack of supervision. In this paper, we consider the label dependency of graph nodes and propose a decoupling attention mechanism to learn both hard and soft attention. The hard attention is learned on labels for a refined graph structure with fewer inter-class edges, so that the aggregation’s negative disturbance can be reduced. The soft attention aims to learn the aggregation weights based on features over the refined graph structure to enhance information gains during message passing. Particularly, we formulate our model under the EM framework, and the learned attention is used to guide the label propagation in the M-step and the feature propagation in the E-step, respectively. Extensive experiments are performed on six well-known benchmark graph datasets to verify the effectiveness of the proposed method.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DeepInf: Modeling influence locality in large social networks\",\n        \"Learning social relations and spatiotemporal trajectories for next check-in inference\",\n        \"Learning knowledge graph embedding with heterogeneous relation attention networks\",\n        \"Estimating node importance in knowledge graphs using graph neural networks\",\n        \"Graph transformation policy network for chemical reaction prediction\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Item relationship graph neural networks for e-commerce\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Graph attention networks\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Neural message passing for quantum chemistry\",\n        \"Learning steady-states of iterative algorithms over graphs\",\n        \"Deep constraint-based propagation in graph neural networks\",\n        \"Measuring and improving the use of graph information in graph neural networks\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Unifying graph convolutional neural networks and label propagation\",\n        \"When do GNNs work: Understanding and improving neighborhood aggregation\",\n        \"Attention is all you need\",\n        \"Improving graph attention networks with large margin-based constraints\",\n        \"A statistical characterization of attentions in graph neural networks\",\n        \"Semi-supervised learning with graphs\",\n        \"Multiple graph label propagation by sparse integration\",\n        \"Combining label propagation and simple models out-performs graph neural networks\",\n        \"Inductive–transductive learning with graph neural networks\",\n        \"GMNN: Graph markov neural networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Attention-based graph neural network for semi-supervised learning\",\n        \"Rectifier nonlinearities improve neural network acoustic models\",\n        \"Advanced mean field methods: Theory and practice\",\n        \"Auto-encoding variational Bayes\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"The concrete distribution: A continuous relaxation of discrete random variables\",\n        \"Learning structured output representation using deep conditional generative models\",\n        \"On the evolution of random graphs\",\n        \"Label distribution learning\",\n        \"Distilling the knowledge in a neural network\",\n        \"Graph convolutional matrix completion\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"Collective classification in network data\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Simplifying graph convolutional networks\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Deepgcns: Making gcns go as deep as cnns\",\n        \"Towards deeper graph neural networks\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n        \"Adam: A method for stochastic optimization\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Graph Decoupling Attention Markov Networks for Semi-supervised Graph Node Classification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}