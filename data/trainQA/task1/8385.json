{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Detecting Backdoors During the Inference Stage Based on Corruption Robustness Consistency\n\nPaper Abstract: Abstract Deep neural networks are proven to be vulnerable to backdoor attacks. Detecting the trigger samples during the inference stage, i.e., the test-time trigger sample detection, can prevent the backdoor from being triggered. However, existing detection methods often require the defenders to have high accessibility to victim models, extra clean data, or knowledge about the appearance of backdoor triggers, limiting their practicality. In this paper, we propose the test-time corruption robustness consistency evaluation (TeCo)111https://github.com/CGCL-codes/TeCo, a novel test-time trigger sample detection method that only needs the hard-label outputs of the victim models without any extra information. Our journey begins with the intriguing observation that the backdoor-infected models have similar performance across different image corruptions for the clean images, but perform discrepantly for the trigger samples. Based on this phenomenon, we design TeCo to evaluate test-time robustness consistency by calculating the deviation of severity that leads to predictions’ transition across different corruptions. Extensive experiments demonstrate that compared with state-of-the-art defenses, which even require either certain information about the trigger types or accessibility of clean data, TeCo outperforms them on different backdoor attacks, datasets, and model architectures, enjoying a higher AUROC by 10%percent1010\\% and 555 times of stability.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Machine learning in resource-scarce embedded systems, FPGAs, and end-devices: A survey\",\n        \"Detecting backdoor attacks on deep neural networks by activation clustering\",\n        \"Targeted backdoor attacks on deep learning systems using data poisoning\",\n        \"Cloud-DNN: An open framework for mapping DNN models to cloud FPGAs\",\n        \"Sentinet: Detecting physical attacks against deep learning systems\",\n        \"Towards effective and robust neural trojan defenses via input filtering\",\n        \"Februus: Input purification defense against trojan attacks on deep neural network systems\",\n        \"Lira: Learnable, imperceptible and robust backdoor attacks\",\n        \"Black-box detection of backdoor attacks with limited information and data\",\n        \"Robust anomaly detection and backdoor attack detection via differential privacy\",\n        \"A configurable cloud-scale DNN processor for real-time AI\",\n        \"Strip: A defence against trojan attacks on deep neural networks\",\n        \"Shortcut learning in deep neural networks\",\n        \"Badnets: Evaluating backdooring attacks on deep neural networks\",\n        \"AEVA: black-box backdoor detection using adversarial extreme value analysis\",\n        \"Spectre: defending against backdoor attacks using robust statistics\",\n        \"Identity mappings in deep residual networks\",\n        \"Benchmarking neural network robustness to common corruptions and perturbations\",\n        \"Privacy-preserving machine learning as a service\",\n        \"Detection of traffic signs in real-world images: The german traffic sign detection benchmark\",\n        \"Badhash: Invisible backdoor attacks against deep hashing with clean label\",\n        \"Can we mitigate backdoor attack using adversarial detection methods?\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Tiny imagenet visual recognition challenge\",\n        \"Backdoor learning: A survey\",\n        \"Invisible backdoor attack with sample-specific triggers\",\n        \"Rethinking the trigger of backdoor attack\",\n        \"An adaptive black-box defense against trojan attacks (trojdef)\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"The ”Beatrix” resurrections: Robust backdoor detection via gram matrices\",\n        \"Mobilevit: Light-weight, general-purpose, and mobile-friendly vision transformer\",\n        \"Input-aware dynamic backdoor attack\",\n        \"Wanet - imperceptible warping-based backdoor attack\",\n        \"Deepsweep: An evaluation framework for mitigating dnn backdoor attacks using data augmentation\",\n        \"MLaaS: Machine learning as a service\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Dynamic backdoor attacks against machine learning models\",\n        \"Sleeper agent: Scalable hidden trigger backdoors for neural networks trained from scratch\",\n        \"Demon in the variant: Statistical analysis of DNNs for robust backdoor contamination detection\",\n        \"Better trigger inversion optimization in backdoor scanning\",\n        \"Spectral signatures in backdoor attacks\",\n        \"Model agnostic defence against backdoor attacks in machine learning\",\n        \"Neural cleanse: Identifying and mitigating backdoor attacks in neural networks\",\n        \"Pytorch image models\",\n        \"Backdoorbench: A comprehensive benchmark of backdoor learning\",\n        \"Detecting AI trojans using meta neural analysis\",\n        \"Wide residual networks\",\n        \"Rethinking the backdoor attacks’ triggers: A frequency perspective\",\n        \"Defeat: Deep hidden feature backdoor attacks by imperceptible perturbation and latent representation constraints\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Detecting Backdoors During the Inference Stage Based on Corruption Robustness Consistency, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}