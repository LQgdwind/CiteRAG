{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Democratizing Domain-Specific Computing\n\nPaper Abstract: Abstract. In the past few years, domain-specific accelerators (DSAs), such as Google’s Tensor Processing Units, have shown to offer significant performance and energy efficiency over general-purpose CPUs. An important question is whether typical software developers can design and implement their own customized DSAs, with affordability and efficiency, to accelerate their applications. This article presents our answer to this question.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Design of ion-implanted mosfet’s with very small physical dimensions\",\n        \"The future of microprocessors\",\n        \"Dark silicon and the end of multicore scaling\",\n        \"Customizable domain-specific computing\",\n        \"The decline of computers as a general purpose technology\",\n        \"Charm: A composable heterogeneous accelerator-rich microprocessor\",\n        \"Quantifying acceleration: Power/performance trade-offs of application kernels in hardware\",\n        \"Domain-specific hardware accelerators\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Accelerator-rich architectures: Opportunities and progresses\",\n        \"Semiconductor design and manufacturing: Achieving leading-edge capabilities\",\n        \"Amazon EC2 F1 Instance\",\n        \"NIMBIX - Accelerate your workflows with Xilinx Alveo Accelerator Cards in the Cloud\",\n        \"Communication optimization on gpu: A case study of sequence alignment algorithms\",\n        \"Exploiting Reuse and Vectorization in Blocked Stencil Computations on CPUs and GPUs\",\n        \"From parallelization to customization - challenges and opportunities\",\n        \"Bonsai: High-performance adaptive merge tree sorting\",\n        \"FANS: fpga-accelerated near-storage sorting\",\n        \"Optimizing fpga-based accelerator design for deep convolutional neural networks\",\n        \"A configurable cloud-scale dnn processor for real-time ai\",\n        \"Beyond peak performance: Comparing the real performance of ai-optimized fpgas and gpus\",\n        \"Think fast: A tensor streaming processor (tsp) for accelerating deep learning workloads\",\n        \"FracBNN: Accurate and FPGA-Efficient Binary Neural Networks with Fractional Activations\",\n        \"Amazon\",\n        \"High-level synthesis for fpgas: From prototyping to deployment\",\n        \"Autopilot: A platform-based esl synthesis system\",\n        \"Fpga hls today: Successes, challenges, and opportunities\",\n        \"Xilinx Vitis Platform\",\n        \"Intel SDK for OpenCL Applications\",\n        \"Automated accelerator generation and optimization with composable, parallel and pipeline architecture\",\n        \"Programmatic control of a compiler for generating high-performance spatial hardware\",\n        \"Autosa: A polyhedral compiler for high-performance systolic arrays on fpga\",\n        \"isl: An integer set library for the polyhedral model\",\n        \"Extending high-level synthesis for task-parallel programs\",\n        \"Gemmini: An agile systolic array generator enabling systematic evaluations of deep-learning architectures\",\n        \"SODA: Stencil with Optimized Dataflow Architecture\",\n        \"Exploiting Computation Reuse for Stencil Accelerators\",\n        \"LANMC: LSTM-Assisted Non-Rigid Motion Correction on FPGA for Calcium Image Stabilization\",\n        \"Clockwork: Resource-Efficient Static Scheduling for Multi-Rate Image Processing Applications on FPGAs\",\n        \"Software infrastructure for enabling fpga-based accelerations in data centers\",\n        \"Openmp: an industry standard api for shared-memory programming\",\n        \"Machsuite: Benchmarks for accelerator design and customized architectures\",\n        \"Autodse: Enabling software programmers to design efficient fpga accelerators\",\n        \"Xilinx Vitis Libraries\",\n        \"High-level synthesis design space exploration: Past, present, and future\",\n        \"Automated accelerator optimization aided by graph neural networks\",\n        \"Improving gnn-based accelerator design automation with meta learning\",\n        \"Decoupling Algorithms from Schedules for Easy Optimization of Image Processing Pipelines\",\n        \"HeteroCL: A Multi-Paradigm Programming Infrastructure for Software-Defined Reconfigurable Computing\",\n        \"HeteroHalide: From Image Processing DSL to Efficient FPGA Acceleration\",\n        \"Differentiable Programming for Image Processing and Deep Learning in Halide\",\n        \"Mlir: A compiler infrastructure for the end of moore’s law\",\n        \"A survey of coarse-grained reconfigurable architecture and design: Taxonomy, challenges, and applications\",\n        \"Overgen: Improving fpga usability through domain-specific overlay generation\",\n        \"A new golden age for computer architecture\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Democratizing Domain-Specific Computing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}