{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: De-Anonymizing Text by Fingerprinting Language Generation\n\nPaper Abstract: Abstract Components of machine learning systems are not (yet) perceived as security hotspots. Secure coding practices, such as ensuring that no execution paths depend on confidential inputs, have not yet been adopted by ML developers. We initiate the study of code security of ML systems by investigating how nucleus sampling—a popular approach for generating text, used for applications such as auto-completion—unwittingly leaks texts typed by users. Our main result is that the series of nucleus sizes for many natural English word sequences is a unique fingerprint. We then show how an attacker can infer typed text by measuring these fingerprints via a suitable side channel (e.g., cache access times), explain how this attack could help de-anonymize anonymous texts, and discuss defenses.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"How secure are deep learning algorithms from side-channel based reverse engineering?\",\n        \"On subnormal floating point and abnormal timing.\",\n        \"AppArmor.\",\n        \"The base-rate fallacy and the difficulty of intrusion detection.\",\n        \"CSI neural network: Using side-channels to recover your artificial neural network information.\",\n        \"Technologies to improve platform security.\",\n        \"Pseudorandom black swans: Cache attacks on CTR DRBG.\",\n        \"ConvoKit. Cornell conversational analysis toolkit.\",\n        \"Stealing neural networks via timing side channels.\",\n        \"Fit distribution module/script (fitdist).\",\n        \"A survey of microarchitectural timing attacks and countermeasures on contemporary hardware.\",\n        \"RSA key extraction via low-bandwidth acoustic cryptanalysis.\",\n        \"ECDH key-extraction via low-bandwidth electromagnetic attacks on PCs.\",\n        \"Drive-by key-extraction cache attacks from portable code.\",\n        \"Translation leak-aside buffer: Defeating cache side-channel protections with TLB attacks.\",\n        \"Efficient software implementations of modular exponentiation.\",\n        \"Cache games–bringing access-based cache attacks on AES to practice.\",\n        \"Unifying human and statistical evaluation for natural language generation.\",\n        \"The curious case of neural text degeneration.\",\n        \"How to 0wn NAS in your spare time.\",\n        \"Neural network model extraction attacks in edge devices by hearing architectural hints.\",\n        \"Reverse engineering convolutional neural networks through side-channel information leaks.\",\n        \"Hugging Face. Transformers on github.\",\n        \"Hugging Face. Write with Transfomer (demo).\",\n        \"Practical timing side channel attacks against kernel space ASLR.\",\n        \"IEEE standard 754 for binary floating-point arithmetic.\",\n        \"Timing attacks on implementations of Diffie-Hellman, RSA, DSS, and other systems.\",\n        \"ARMageddon: Cache attacks on mobile devices.\",\n        \"Last-level cache side-channel attacks are practical.\",\n        \"Rendered insecure: GPU side channel attacks are practical.\",\n        \"The spy in the sandbox: Practical cache attacks in JavaScript and their implications.\",\n        \"Cache attacks and countermeasures: the case of AES.\",\n        \"Cache missing for fun and profit.\",\n        \"PyTorch.\",\n        \"Language models are unsupervised multitask learners.\",\n        \"Hey, you, get off of my cloud: Exploring information leakage in third-party compute clouds.\",\n        \"The 9 lives of Bleichenbacher’s CAT: New Cache ATtacks on TLS implementations.\",\n        \"Beauty and the Burst: Remote identification of encrypted video streams.\",\n        \"Silk Road | Users.\",\n        \"Deep fingerprinting: Undermining website fingerprinting defenses with deep learning.\",\n        \"Ubuntu Chat Corpus.\",\n        \"I know what you see: Power side-channel attack on convolutional neural network accelerators.\",\n        \"Consistency of a recurrent language model with respect to incomplete decoding.\",\n        \"HuggingFace’s transformers: State-of-the-art natural language processing.\",\n        \"Attack directories, not caches: Side channel attacks in a non-inclusive world.\",\n        \"Cache telepathy: Leveraging shared resource attacks to learn DNN architectures.\",\n        \"FLUSH+RELOAD: A high resolution, low noise, L3 cache side-channel attack.\",\n        \"CacheBleed: a timing attack on OpenSSL constant-time RSA.\",\n        \"Cross-VM side channels and their use to extract private keys.\",\n        \"Cross-tenant side-channel attacks in PaaS clouds.\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in De-Anonymizing Text by Fingerprinting Language Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}