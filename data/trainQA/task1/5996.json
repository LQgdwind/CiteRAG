{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Taylor Genetic Programming for Symbolic Regression\n\nPaper Abstract: Abstract. Genetic programming (GP) is a commonly used approach to solve symbolic regression (SR) problems. Compared with the machine learning or deep learning methods that depend on the pre-defined model and the training dataset for solving SR problems, GP is more focused on finding the solution in a search space. Although GP has good performance on large-scale benchmarks, it randomly transforms individuals to search results without taking advantage of the characteristics of the dataset. So, the search process of GP is usually slow, and the final results could be unstable. To guide GP by these characteristics, we propose a new method for SR, called Taylor genetic programming (TaylorGP)111Code and appendix at https://kgae-cup.github.io/TaylorGP/. TaylorGP leverages a Taylor polynomial to approximate the symbolic equation that fits the dataset. It also utilizes the Taylor polynomial to extract the features of the symbolic equation: low order polynomial discrimination, variable separability, boundary, monotonic, and parity. GP is enhanced by these Taylor polynomial techniques. Experiments are conducted on three kinds of benchmarks: classical SR, machine learning, and physics. The experimental results show that TaylorGP not only has higher accuracy than the nine baseline methods, but also is faster in finding stable results.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Multiple regression genetic programming\",\n        \"Neural Symbolic Regression that scales\",\n        \"Linear genetic programming\",\n        \"Language models are few-shot learners\",\n        \"Contemporary Symbolic Regression Methods and their Relative Performance\",\n        \"Learning concise representations for regression by evolving networks of trees\",\n        \"Improving Generalization of Genetic Programming for Symbolic Regression With Angle-Driven Geometric Semantic Operators\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"An Analysis of Koza’s Computational Effort Statistic for Genetic Programming\",\n        \"Support-vector networks\",\n        \"Discovering Symbolic Models from Deep Learning with Inductive Biases\",\n        \"Theories of interval arithmetic: mathematical foundations and applications\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Gene Expression Programming: a New Adaptive Algorithm for Solving Problems\",\n        \"Practical methods of optimization\",\n        \"Introduction to the foundations of applied mathematics\",\n        \"Methods of mathematical physics\",\n        \"Bayesian symbolic regression\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree\",\n        \"Improving symbolic regression with interval arithmetic and linear scaling\",\n        \"Particle swarm optimization\",\n        \"Integration of neural network-based symbolic regression in deep learning for scientific discovery\",\n        \"Auto-encoding variational bayes\",\n        \"Accuracy in symbolic regression\",\n        \"A baseline symbolic regression algorithm\",\n        \"Genetic Programming as a Means for Programming Computers by Natural Selection\",\n        \"Genetic programming-based construction of features for machine learning and knowledge discovery tasks\",\n        \"Grammar variational autoencoder\",\n        \"A General Feature Engineering Wrapper for Machine Learning Using ϵitalic-ϵ\\\\epsilon-Lexicase Survival\",\n        \"Deep learning\",\n        \"Enhancing gene expression programming based on space partition and jump for symbolic regression\",\n        \"Extrapolation and learning equations\",\n        \"FFX: Fast, scalable, deterministic symbolic regression technology\",\n        \"Genetic Programming Needs Better Benchmarks (GECCO ’12)\",\n        \"Grammar-based Genetic Programming: a survey\",\n        \"Cartesian genetic programming: its status and future\",\n        \"Cartesian Genetic Programming\",\n        \"Geometric Semantic Genetic Programming\",\n        \"Symbolic Regression via Neural-Guided Genetic Programming Population Seeding\",\n        \"Evolving multidimensional transformations for symbolic regression with M3GP\",\n        \"PMLB: a large benchmark suite for machine learning evaluation and comparison\",\n        \"Deep symbolic regression: Recovering mathematical expressions from data via risk-seeking policy gradients\",\n        \"Learning equations for extrapolation and control\",\n        \"Distilling Free-Form Natural Laws from Experimental Data\",\n        \"neat genetic programming: Controlling bloat naturally\",\n        \"AI Feynman 2.0: Pareto-optimal symbolic regression exploiting graph modularity\",\n        \"AI Feynman: A physics-inspired method for symbolic regression\",\n        \"Semantically-based crossover in genetic programming: application to real-valued symbolic regression\",\n        \"Order of nonlinearity as a complexity measure for models generated by symbolic regression via pareto genetic programming\",\n        \"Applied linear regression\",\n        \"Prioritized grammar enumeration: symbolic regression by dynamic programming\",\n        \"Automated Symbolic Law Discovery: A Computer Vision Approach\",\n        \"A deep learning assisted gene expression programming framework for symbolic regression problems\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Taylor Genetic Programming for Symbolic Regression, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}