{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph-adaptive Rectified Linear Unit for Graph Neural Networks\n\nPaper Abstract: Abstract. Graph Neural Networks (GNNs) have achieved remarkable success by extending traditional convolution to learning on non-Euclidean data. The key to the GNNs is adopting the neural message-passing paradigm with two stages: aggregation and update. The current design of GNNs considers the topology information in the aggregation stage. However, in the updating stage, all nodes share the same updating function. The identical updating function treats each node embedding as i.i.d. random variables and thus ignores the implicit relationships between neighborhoods, which limits the capacity of the GNNs. The updating function is usually implemented with a linear transformation followed by a non-linear activation function. To make the updating function topology-aware, we inject the topological information into the non-linear activation function and propose Graph-adaptive Rectified Linear Unit (GReLU), which is a new parametric activation function incorporating the neighborhood information in a novel and efficient way. The parameters of GReLU are obtained from a hyperfunction based on both node features and the corresponding adjacent matrix. To reduce the risk of overfitting and the computational cost, we decompose the hyperfunction as two independent components for nodes and features respectively. We conduct comprehensive experiments to show that our plug-and-play GReLU method is efficient and effective given different GNN backbones and various downstream tasks.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graph neural networks with convolutional arma filters\",\n        \"Dynamic ReLU\",\n        \"Modeling Scale-free Graphs with Hyperbolic Geometry for Knowledge-aware Recommendation\",\n        \"Attentive Knowledge-aware Graph Convolutional Networks with Collaborative Guidance for Personalized Recommendation\",\n        \"Efficient community search over large directed graphs: An augmented index-based approach\",\n        \"Fast and accurate deep network learning by exponential linear units (elus)\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Incorporating second-order functional knowledge for better option pricing\",\n        \"MAGNN: metapath aggregated graph neural network for heterogeneous graph embedding\",\n        \"Maxout networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n        \"Deep residual learning for image recognition\",\n        \"What is the best multi-stage architecture for object recognition?\",\n        \"How to Find Your Friendly Neighborhood: Graph Attention Design with Self-Supervision\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Self-normalizing neural networks\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Power Normalizations in Fine-Grained Image, Few-Shot Image and Graph Classification\",\n        \"A Deeper Look at Power Normalizations\",\n        \"Deep learning\",\n        \"News Recommendation with Topic-Enriched Knowledge Graphs\",\n        \"Gated graph sequence neural networks\",\n        \"STP-UDGAT: Spatial-Temporal-Preference User Dimensional Graph Attention Network for Next POI Recommendation\",\n        \"Convolutional Kernel Networks\",\n        \"Co-embedding attributed networks\",\n        \"Mish: A self regularized non-monotonic neural activation function\",\n        \"Rectified linear units improve restricted boltzmann machines\",\n        \"Understanding and improving convolutional neural networks via concatenated rectified linear units\",\n        \"Semi-supervised Multi-label Learning for Graph-structured Data\",\n        \"Graph-based Semi-supervised Learning: A Comprehensive Review\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Fisher-Bures Adversary Graph Convolutional Networks\",\n        \"Graph attention networks\",\n        \"Efficient Knowledge Graph Validation via Cross-Graph Representation Learning\",\n        \"Simplifying graph convolutional networks\",\n        \"A Comprehensive Survey on Graph Neural Networks\",\n        \"Empirical evaluation of rectified activations in convolutional network\",\n        \"How powerful are graph neural networks?\",\n        \"FeatureNorm: L2 Feature Normalization for Dynamic Graph Embedding\",\n        \"Discrete-time Temporal Network Embedding via Implicit Hierarchical Learning in Hyperbolic Space\",\n        \"Simple spectral graph convolution\",\n        \"Refine: Random range finder for network embedding\",\n        \"Contrastive laplacian eigenmaps\",\n        \"Beyond Homophily in Graph Neural Networks: Current Limitations and Effective Designs\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Graph-adaptive Rectified Linear Unit for Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}