{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Differentiate Quality of Experience Scheduling for Deep Learning Inferences with Docker Containers in the Cloud\n\nPaper Abstract: Abstract With the prevalence of big-data-driven applications, such as face recognition on smartphones and tailored recommendations from Google Ads, we are on the road to a lifestyle with significantly more intelligence than ever before. Various neural network powered models are running at the back end of their intelligence to enable quick responses to users. Supporting those models requires lots of cloud-based computational resources, e.g., CPUs and GPUs. The cloud providers charge their clients by the amount of resources that they occupy. Clients have to balance the budget and quality of experiences (e.g., response time). The budget leans on individual business owners, and the required Quality of Experience (QoE) depends on usage scenarios of different applications. For instance, an autonomous vehicle requires an real-time response, but unlocking your smartphone can tolerate delays. However, cloud providers fail to offer a QoE-based option to their clients. In this paper, we propose DQoES, differentiated quality of experience scheduler for deep learning inferences. DQoES accepts clients’ specifications on targeted QoEs, and dynamically adjusts resources to approach their targets. Through the extensive cloud-based experiments, DQoES demonstrates that it can schedule multiple concurrent jobs with respect to various QoEs and achieve up to 8x times more satisfied models when compared to the existing system.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"High-dimensional estimation, basis assets, and the adaptive multi-factor model\",\n        \"The nonparametric behrens–fisher problem in partially complete clustered data\",\n        \"Multiple slice k-space deep learning for magnetic resonance imaging reconstruction\",\n        \"Google adsense\",\n        \"Apple faceid\",\n        \"Convolutional neural network\",\n        \"Recurrent neural network\",\n        \"Amazon sagemaker\",\n        \"Azure machine learning\",\n        \"Microsoft azure\",\n        \"Amazon web service\",\n        \"Waymo\",\n        \"Deep learning methods in network intrusion detection: A survey and an objective comparison\",\n        \"Usability engineering\",\n        \"Differentiate containers scheduling for deep learning applications\",\n        \"Docker\",\n        \"Self-training with noisy student improves imagenet classification\",\n        \"Going deeper with image transformers.\",\n        \"Deep learning for real-time semantic segmentation: Application in ultrasound imaging\",\n        \"Eyeriss v2: A flexible accelerator for emerging deep neural networks on mobile devices\",\n        \"Revisiting unreasonable effectiveness of data in deep learning era\",\n        \"Efficient coflow scheduling with varys\",\n        \"Information-agnostic flow scheduling for commodity data centers\",\n        \"Draps: Dynamic and resource-aware placement scheme for docker containers in a heterogeneous cluster\",\n        \"Flowcon: Elastic flow configuration for containerized deep learning applications\",\n        \"Speculative container scheduling for deep learning applications in a kubernetes cluster\",\n        \"Progress-based container scheduling for short-lived applications in a kubernetes cluster\",\n        \"A lightweight collaborative deep neural network for the mobile web in edge cloud\",\n        \"Towards efficient deep neural network training by fpga-based batch-level parallelism\",\n        \"Optimus: an efficient dynamic resource scheduler for deep learning clusters\",\n        \"Serving dnns like clockwork: Performance predictability from the bottom up\",\n        \"FIRM: An intelligent fine-grained resource management framework for slo-oriented microservices\",\n        \"Ai4dl: Mining behaviors of deep learning workloads for resource management\",\n        \"Target-based resource allocation for deep learning applications in a multi-tenancy system\",\n        \"Infaas: Automated model-less inference serving\",\n        \"Enable simultaneous dnn services based on deterministic operator overlap and precise latency prediction\",\n        \"Pieslicer: Dynamically improving response time for cloud-based cnn inference\",\n        \"Talos: A weighted speedup-aware device placement of deep learning models\",\n        \"Morphling: Fast, near-optimal auto-configuration for cloud-native model serving\",\n        \"Proactive container auto-scaling for cloud native machine learning services\",\n        \"kubernetes\",\n        \"Docker engine\",\n        \"Nsf cloudlab\",\n        \"Pytorch pretrained models\",\n        \"Tensorflow pretrained models\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Differentiate Quality of Experience Scheduling for Deep Learning Inferences with Docker Containers in the Cloud, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}