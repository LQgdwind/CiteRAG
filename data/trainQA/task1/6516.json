{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Defending Substitution-Based Profile Pollution Attacks on Sequential Recommenders\n\nPaper Abstract: Abstract. While sequential recommender systems achieve significant improvements on capturing user dynamics, we argue that sequential recommenders are vulnerable against substitution-based profile pollution attacks. To demonstrate our hypothesis, we propose a substitution-based adversarial attack algorithm, which modifies the input sequence by selecting certain vulnerable elements and substituting them with adversarial items. In both untargeted and targeted attack scenarios, we observe significant performance deterioration using the proposed profile pollution algorithm. Motivated by such observations, we design an efficient adversarial defense method called Dirichlet neighborhood sampling. Specifically, we sample item embeddings from a convex hull constructed by multi-hop neighbors to replace the original items in input sequences. During sampling, a Dirichlet distribution is used to approximate the probability distribution in the neighborhood such that the recommender learns to combat local perturbations. Additionally, we design an adversarial training method tailored for sequential recommender systems. In particular, we represent selected items with one-hot encodings and perform gradient ascent on the encodings to search for the worst case linear combination of item embeddings in training. As such, the embedding function learns robust item representations and the trained recommender is resistant to test-time adversarial examples. Extensive experiments show the effectiveness of both our attack and defense methods, which consistently outperform baselines by a significant margin across model architectures and datasets.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Generating natural language adversarial examples\",\n        \"Music Recommendation and Discovery in the Long Tail\",\n        \"Adversarial tensor factorization for context-aware recommendation\",\n        \"Adversarial attacks on an oblivious recommender\",\n        \"Hotflip: White-box adversarial examples for text classification\",\n        \"Influence function based data poisoning attacks to top-n recommender systems\",\n        \"Bae: Bert-based adversarial examples for text classification\",\n        \"Shortcut learning in deep neural networks\",\n        \"Explaining and harnessing adversarial examples\",\n        \"On the effectiveness of interval bound propagation for training verifiably robust models\",\n        \"The movielens datasets: History and context\",\n        \"Adversarial personalized ranking for recommendation\",\n        \"Locker: Locally Constrained Self-Attentive Sequential Recommendation\",\n        \"Data Poisoning Attacks to Deep Learning Based Recommender Systems\",\n        \"Self-attentive sequential recommendation\",\n        \"All about activity injection: Threats, semantics, and detection\",\n        \"Textbugger: Generating adversarial text against real-world applications\",\n        \"Neural attentive session-based recommendation\",\n        \"Bert-attack: Adversarial attack against bert using bert\",\n        \"Mood-sensitive truth discovery for reliable recommendation systems in social sensing\",\n        \"Image-based recommendations on styles and substitutes\",\n        \"Your online interests: Pwned! a pollution attack against targeted advertising\",\n        \"Justifying Recommendations using Distantly-Labeled Reviews and Fine-Grained Aspects\",\n        \"Robustness of Deep Recommendation Systems to Untargeted Interaction Perturbations\",\n        \"Recommender systems: Attack types and strategies\",\n        \"Towards discovering and understanding task hijacking in android\",\n        \"Generating natural language adversarial examples through probability weighted word saliency\",\n        \"Interpretable adversarial perturbation in input embedding space for text\",\n        \"Poisonrec: an adaptive data poisoning framework for attacking black-box recommender systems\",\n        \"BERT4Rec: Sequential recommendation with bidirectional encoder representations from transformer\",\n        \"Adversarial training towards robust multimedia recommender system\",\n        \"Revisiting Adversarially Learned Injection Attacks Against Recommender Systems\",\n        \"Take this personally: Pollution attacks on personalized services\",\n        \"Fake Co-visitation Injection Attacks to Recommender Systems.\",\n        \"Adversarial collaborative neural network for robust recommendation\",\n        \"Black-Box Attacks on Sequential Recommenders via Data-Free Model Extraction\",\n        \"Cross-site request forgeries: Exploitation and prevention\",\n        \"Certified Defense via Latent Space Randomized Smoothing with Orthogonal Encoders\",\n        \"Are adversarial examples created equal? A learnable weighted minimax risk for robustness under non-uniform attacks\",\n        \"Through the eyes of a poet: Classical poetry recommendation with visual input on social media\",\n        \"Crowdsourcing-based copyright infringement detection in live video streams\",\n        \"Practical data poisoning attack against next-item recommendation\",\n        \"Understanding the manipulation on recommender systems through web injection\",\n        \"Defense against adversarial attacks in nlp via dirichlet neighborhood ensemble\",\n        \"Freelb: Enhanced adversarial training for language understanding\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Defending Substitution-Based Profile Pollution Attacks on Sequential Recommenders, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}