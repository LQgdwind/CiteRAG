{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Behavioural Types for Heterogeneous Systems (Position Paper)\n\nPaper Abstract: Abstract Behavioural types provide a promising way to achieve lightweight, language-integrated verification for communication-centric software. However, a large barrier to the adoption of behavioural types is that the current state of the art expects software to be written using the same tools and typing discipline throughout a system, and has little support for components over which a developer has no control. This position paper describes the outcomes of a working group discussion at Dagstuhl Seminar 24051 (Next-Generation Protocols for Heterogeneous Systems). We propose a methodology for integrating multiple behaviourally-typed components, written in different languages. Our proposed approach involves an extensible protocol description language, a session IR that can describe data transformations and boundary monitoring and which can be compiled into program-specific session proxies, and finally a session middleware to aid session establishment. We hope that this position paper will stimulate discussion on one of the most pressing challenges facing the widespread adoption of behavioural typing.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Jolie programming language — official website\",\n        \"ST30: 30 years of session types — workshop website\",\n        \"Apache Thrift - official website\",\n        \"Engineering virtualized services\",\n        \"Service equivalence via multiparty session type isomorphisms\",\n        \"Contract-oriented programming with timed session types\",\n        \"Generalised multiparty session types with crash-stop failures\",\n        \"Monitoring networks through multiparty session types\",\n        \"Towards a hybrid verification methodology for communication protocols (short paper)\",\n        \"On the monitorability of session types, in theory and practice\",\n        \"Asynchronous distributed monitoring for multiparty session enforcement\",\n        \"Deadlock-free asynchronous message reordering in Rust with multiparty session types\",\n        \"Nested protocols in session types\",\n        \"Multiparty session types meet communicating automata\",\n        \"Session type isomorphisms\",\n        \"Model-view-update-communicate: Session types meet the Elm architecture\",\n        \"Exceptional asynchronous session types: session types without tiers\",\n        \"Behavioural Types: from Theory to Tools\",\n        \"Protocol buffers documentation\",\n        \"Types for dyadic interaction\",\n        \"Language primitives and type discipline for structured communication-based programming\",\n        \"Multiparty asynchronous session types\",\n        \"Hybrid session verification through endpoint API generation\",\n        \"Explicit connection actions in multiparty session types\",\n        \"Gradual session types\",\n        \"ABS: A core language for abstract behavioral specification\",\n        \"ST4MP: A blueprint of multiparty session typing for multilingual programming\",\n        \"Typechecking protocols with mungo and stmungo: A session type toolchain for Java\",\n        \"Stay safe under panic: Affine Rust programming with multiparty session types\",\n        \"Frameworks for component-based client/server computing\",\n        \"Business-to-business interactions: issues and enabling technologies\",\n        \"Communication-safe web programming in TypeScript with routed multiparty session types\",\n        \"Introduction to Choreographies\",\n        \"Service-oriented programming with Jolie\",\n        \"Featherweight Scribble\",\n        \"Timed runtime monitoring for multiparty conversations\",\n        \"A session type provider: compile-time API generation of distributed protocols with refinements in f#\",\n        \"Semantic soundness for language interoperability\",\n        \"Semantic encapsulation using linking types\",\n        \"A linear decomposition of multiparty sessions for safe distributed programming\",\n        \"Certifying data in multiparty session types\",\n        \"Monitoring blackbox implementations of multiparty session protocols\",\n        \"Well-typed programs can’t be blamed\",\n        \"The scribble protocol language\",\n        \"Communicating finite state machines and an extensible toolchain for multiparty session types\",\n        \"Statically verified refinements for multiparty protocols\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Behavioural Types for Heterogeneous Systems (Position Paper), providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}