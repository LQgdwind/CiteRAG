{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Using Formal Verification to Evaluate Single Event Upsets in a RISC-V Core\n\nPaper Abstract: Abstract Reliability has been a major concern in embedded systems. Higher transistor density and lower voltage supply increase the vulnerability of embedded systems to soft errors. A Single Event Upset (SEU), which is also called a soft error, can reverse a bit in a sequential element, resulting in a system failure. Simulation-based fault injection has been widely used to evaluate reliability, as suggested by ISO26262. However, it is practically impossible to test all faults for a complex design. Random fault injection is a compromise that reduces accuracy and fault coverage. Formal verification is an alternative approach. In this paper, we use formal verification, in the form of model checking, to evaluate the hardware reliability of a RISC-V Ibex Core in the presence of soft errors. Backward tracing is performed to identify and categorize faults according to their effects (no effect, Silent Data Corruption, crashes, and hangs). By using formal verification, the entire state space and fault list can be exhaustively explored. It is found that misaligned instructions can amplify fault effects. It is also found that some bits are more vulnerable to SEUs than others. In general, most of the bits in the Ibex Core are vulnerable to Silent Data Corruption, and the second pipeline stage is more vulnerable to Silent Data Corruption than the first.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Survey of Techniques for Modeling and Improving Reliability of Computing Systems\",\n        \"The impact of new technology on soft error rates\",\n        \"Online Soft-Error Vulnerability Estimation for Memory Arrays and Logic Cores\",\n        \"Soft error vulnerability assessment of the real-time safety-related ARM Cortex-R5 CPU\",\n        \"Radiation-induced soft errors in advanced semiconductor technologies\",\n        \"Processor core profiling for SEU effect analysis\",\n        \"ISO 26262-1: Road vehicles â€” Functional safety\",\n        \"PolyAdd: Polynomial Formal Verification of Adder Circuits\",\n        \"Using formal methods to evaluate hardware reliability in the presence of soft errors\",\n        \"Study of the Effects of SEU-Induced Faults on a Pipeline Protected Microprocessor\",\n        \"Electromagnetic Fault Injection : How Faults Occur\",\n        \"Electromigration: A review\",\n        \"Electromigration-induced failure in Al and Cu interconnects\",\n        \"Characterizing a RISC-V SRAM-based FPGA implementation against Single Event Upsets using fault injection\",\n        \"Impact of Microarchitectural Differences of RISC-V Processor Cores on Soft Error Effects\",\n        \"One Bit is (Not) Enough: An Empirical Study of the Impact of Single and Multiple Bit-Flip Errors\",\n        \"Accurate Analysis of Single Event Upsets in a Pipelined Microprocessor\",\n        \"Ibex: An embedded 32 bit RISC-V CPU core\",\n        \"A survey of memory error correcting techniques for improved reliability\",\n        \"Exploiting correcting codes: On the effectiveness of ecc memory against rowhammer attacks\",\n        \"Design of error correction engine based on flexible unequal error control code (fuec) for flash memory faults in space applications\",\n        \"Formal Verification in Hardware Design: A Survey\",\n        \"Handbook of model checking\",\n        \"Requirements-Driven Test Generation for Autonomous Vehicles With Machine Learning Components\",\n        \"O3-R-CP-ABE: An Efficient and Revocable Attribute-Based Encryption Scheme in the Cloud-Assisted IoMT System\",\n        \"Cyber-Physical Trust Systems Driven by Blockchain\",\n        \"A Hybrid Formal Verification System in Coq for Ensuring the Reliability and Security of Ethereum-Based Service Smart Contracts\",\n        \"Runtime Verification on Hierarchical Properties of ROS-Based Robot Swarms\",\n        \"Automated Prototype Generation From Formal Requirements Model\",\n        \"Specification-guided Software Fault Localization for Autonomous Mobile Systems\",\n        \"Dynamic Fault Tree Analysis and Risk Mitigation Strategies of Data Communication System via Statistical Model Checking\",\n        \"Reliability analysis and safety model checking of Safety-Critical and control Systems: A case study of NPP control system\",\n        \"Formal Analysis of Repairable Phased-Mission Systems With Common Cause Failures\",\n        \"Probabilistic model-checking based reliability analysis for failure correlation of multi-state systems\",\n        \"Determined-Safe Faults Identification: A step towards ISO26262 hardware compliant designs\",\n        \"An automated formal-based approach for reducing undetected faults in ISO 26262 hardware compliant designs\",\n        \"Automated Reliability Analysis of Redundancy Architectures Using Statistical Model Checking\",\n        \"Property-Based Fault Injection: A Novel Approach to Model-Based Fault Injection for Safety Critical Systems\",\n        \"Bounded model checking.\",\n        \"A Bounded Semantics for Improving the Efficiency of Bounded Model Checking\",\n        \"Model Checking for AlphaCode-Generated Programs\",\n        \"A Novel Approach for Bounded Model Checking Through Full Parallelism\",\n        \"Completeness and Complexity of Bounded Model Checking\",\n        \"On the Completeness of Bounded Model Checking for Threshold-Based Distributed Algorithms: Reachability\",\n        \"IEEE Standard for Verilog Hardware Description Language\",\n        \"Fault Injection on Hidden Registers in a RISC-V Rocket Processor and Software Countermeasures\",\n        \"RISC-V Instruction Set Manual, Volume I: User-Level ISA\",\n        \"RISC-V Instruction Set Manual, Volume II: Privileged Architecture\",\n        \"Reductions and abstractions for formal verification of distributed round-based algorithms\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Using Formal Verification to Evaluate Single Event Upsets in a RISC-V Core, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}