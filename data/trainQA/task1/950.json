{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: NAS-Bench-NLP: Neural Architecture Search Benchmark for Natural Language Processing\n\nPaper Abstract: Abstract Neural Architecture Search (NAS) is a promising and rapidly evolving research area. Training a large number of neural networks requires an exceptional amount of computational power, which makes NAS unreachable for those researchers who have limited or no access to high-performance clusters and supercomputers. A few benchmarks with precomputed neural architectures performances have been recently introduced to overcome this problem and ensure more reproducible experiments. However, these benchmarks are only for the computer vision domain and, thus, are built from the image datasets and convolution-derived architectures. In this work, we step outside the computer vision domain by leveraging the language modeling task, which is the core of natural language processing (NLP). Our main contribution is as follows: we have provided search space of recurrent neural networks on the text datasets and trained 14k architectures within it; we have conducted both intrinsic and extrinsic evaluation of the trained models using datasets for semantic relatedness and language understanding evaluation; finally, we have tested several NAS algorithms to demonstrate how the precomputed results can be utilized. We believe that our results have high potential of usage for both NAS and NLP communities.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Lstm and qrnn language model toolkit\",\n        \"An exact graph edit distance algorithm for solving pattern recognition problems\",\n        \"Don’t count, predict! a systematic comparison of context-counting vs. context-predicting semantic vectors\",\n        \"A neural probabilistic language model\",\n        \"Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures\",\n        \"Bagging predictors\",\n        \"Massive exploration of neural machine translation architectures\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"On the properties of neural machine translation: Encoder-decoder approaches\",\n        \"Electra: Pre-training text encoders as discriminators rather than generators\",\n        \"Nas-bench-201: Extending the scope of reproducible neural architecture search\",\n        \"Placing search in context: The concept revisited\",\n        \"A tutorial on bayesian optimization\",\n        \"Lstm: A search space odyssey\",\n        \"Exploring network structure, dynamics, and function using networkx\",\n        \"Deep residual learning for image recognition\",\n        \"Simlex-999: Evaluating semantic models with (genuine) similarity estimation\",\n        \"Long short-term memory\",\n        \"Densely connected convolutional networks\",\n        \"Sequential model-based optimization for general algorithm configuration\",\n        \"Exploring the limits of language modeling\",\n        \"An empirical exploration of recurrent network architectures\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Tabular benchmarks for joint architecture and hyperparameter optimization\",\n        \"Hyperband: A novel bandit-based approach to hyperparameter optimization\",\n        \"Random search and reproducibility for neural architecture search\",\n        \"Best practices for scientific research on neural architecture search\",\n        \"Darts: Differentiable architecture search\",\n        \"Regularizing and optimizing lstm language models\",\n        \"Pointer sentinel mixture models\",\n        \"Recurrent neural network based language model\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"graph2vec: Learning distributed representations of graphs\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"A language modeling approach to information retrieval\",\n        \"Using the output embedding to improve language models\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Evaluation methods for unsupervised word embeddings\",\n        \"Densely connected attention propagation for reading comprehension\",\n        \"Glue: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"jiant 1.3: A software toolkit for research on general-purpose text understanding models\",\n        \"Densely connected cnn with multi-scale feature attention for text classification\",\n        \"Nas evaluation is frustratingly hard\",\n        \"Nas-bench-101: Towards reproducible neural architecture search\",\n        \"“zhores”—petaflops supercomputer for data-driven modeling, machine learning and artificial intelligence installed in skolkovo institute of science and technology\",\n        \"Nas-bench-1shot1: Benchmarking and dissecting one-shot neural architecture search\",\n        \"Recurrent highway networks\",\n        \"Neural architecture search with reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in NAS-Bench-NLP: Neural Architecture Search Benchmark for Natural Language Processing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}