{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Distributed Machine Learning for Computational Engineering using MPI\n\nPaper Abstract: Abstract We propose a framework for training neural networks that are coupled with partial differential equations (PDEs) in a parallel computing environment. Unlike most distributed computing frameworks for deep neural networks, our focus is to parallelize both numerical solvers and deep neural networks in forward and adjoint computations. Our parallel computing model views data communication as a node in the computational graph for numerical simulations. The advantage of our model is that data communication and computing are cleanly separated and thus provide better flexibility, modularity, and testability. We demonstrate using various large-scale problems that we can achieve substantial acceleration by using parallel solvers for PDEs in training deep neural networks that are coupled with PDEs.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Computational methods for inverse problems\",\n        \"Statistical and computational inverse problems, volume 160\",\n        \"Deep learning, volume 1\",\n        \"Universal differential equations for scientific machine learning\",\n        \"Learning constitutive relations using symmetric positive definite neural networks\",\n        \"Transfer learning enhanced physics informed neural network for phase-field modeling of fracture\",\n        \"Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations\",\n        \"Ppinn: Parareal physics-informed neural network for time-dependent pdes\",\n        \"Convex optimization\",\n        \"Linear and nonlinear programming, volume 2\",\n        \"Automatic differentiation in pytorch\",\n        \"Automatic differentiation in machine learning: a survey\",\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"A review of the adjoint-state method for computing the gradient of a functional with geophysical applications\",\n        \"Physics constrained learning for data-driven inverse modeling from sparse observations\",\n        \"Learning constitutive relations from indirect observations using deep neural networks\",\n        \"A general approach to seismic inversion with automatic differentiation\",\n        \"Open mpi: Goals, concept, and design of a next generation mpi implementation\",\n        \"Using MPI-2: advanced features of the message passing interface\",\n        \"High order automatic differentiation with mpi\",\n        \"Toward adjoinable mpi\",\n        \"A duality between forward adn adjoint mpi communication routines\",\n        \"Parallel multigrid in an adaptive pde solver based on hashing and space-filling curves\",\n        \"An efficient parallel discrete pde solver\",\n        \"A tutorial on elliptic PDE solvers and their parallelization\",\n        \"Scaling up machine learning: Parallel and distributed approaches\",\n        \"Machine learning: Trends, perspectives, and prospects\",\n        \"Automated derivation of the adjoint of high-level transient finite element programs\",\n        \"dolfin-adjoint 2018.1: automated adjoints for fenics and firedrake\",\n        \"Dafoam: An open-source adjoint framework for multidisciplinary design optimization with openfoam\",\n        \"The fenics project\",\n        \"Openfoam: A c++ library for complex physics simulations\",\n        \"Demystifying parallel and distributed deep learning: An in-depth concurrency analysis, 2018\",\n        \"A survey on distributed machine learning\",\n        \"Scaling distributed machine learning with the parameter server\",\n        \"Efficient and robust parallel dnn training through model parallelism on multi-gpu platform\",\n        \"Julia: A fresh approach to numerical computing\",\n        \"hypre: A library of high performance preconditioners\",\n        \"Calibrating multivariate l√©vy processes with neural networks\",\n        \"Mpi-parallel discrete adjoint openfoam\",\n        \"A linear algebraic approach to model parallelism in deep learning\",\n        \"On the limited memory bfgs method for large scale optimization\",\n        \"A survey of nonlinear conjugate gradient methods\",\n        \"Adam: A method for stochastic optimization\",\n        \"Aspect-oriented programming beyond dependency injection\",\n        \"Efficient pml for the wave equation\",\n        \"Coupled time-lapse full-waveform inversion for subsurface flow problems using intrusive automatic differentiation\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Distributed Machine Learning for Computational Engineering using MPI, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}