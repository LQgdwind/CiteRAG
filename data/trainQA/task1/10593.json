{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 65 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fully Dynamic Geometric Vertex Cover and Matching\n\nPaper Abstract: Abstract In this work, we study two fundamental graph optimization problems, minimum vertex cover (MVC) and maximum-cardinality matching (MCM), for intersection graphs of geometric objects, e.g., disks, rectangles, hypercubes, etc., in dùëëd-dimensional Euclidean space. We consider the problems in fully dynamic settings, allowing insertions and deletions of objects. We develop a general framework for dynamic MVC in intersection graphs, achieving sublinear amortized update time for most natural families of geometric objects. In particular, we show that - ‚Ä¢ For a dynamic collection of disks in ‚Ñù2superscript‚Ñù2\\mathbb{R}^{2} or hypercubes in ‚Ñùdsuperscript‚Ñùùëë\\mathbb{R}^{d} (for constant dùëëd), it is possible to maintain a (1+Œµ)1ùúÄ(1+\\varepsilon)-approximate vertex cover in polylogpolylog\\operatorname{polylog} amortized update time. These results also hold in the bipartite case. ‚Ä¢ For a dynamic collection of rectangles in ‚Ñù2superscript‚Ñù2\\mathbb{R}^{2}, it is possible to maintain a (32+Œµ)32ùúÄ(\\frac{3}{2}+\\varepsilon)-approximate vertex cover in polylogpolylog\\operatorname{polylog} amortized update time. Along the way, we obtain the first near-linear time static algorithms for MVC in the above two cases with the same approximation factors. Next, we turn our attention to the MCM problem. Although our MVC algorithms automatically allow us to approximate the size of the MCM in bipartite geometric intersection graphs, they do not produce a matching. We give another general framework to maintain an approximate maximum matching, and further extend the approach to handle non-bipartite intersection graphs. In particular, we show that - ‚Ä¢ For a dynamic collection of (bichromatic or monochromatic) disks in ‚Ñù2superscript‚Ñù2\\mathbb{R}^{2} or hypercubes in ‚Ñùdsuperscript‚Ñùùëë\\mathbb{R}^{d} (for constant dùëëd), it is possible to maintain a (1+Œµ)1ùúÄ(1+\\varepsilon)-approximate matching in polylogpolylog\\operatorname{polylog} amortized update time.\n\n{retrieved_text}\n\nGenerate exactly 65 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 65\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fully dynamic matching: (2‚àí2)22(2-\\\\sqrt{2})-approximation in polylog update time\",\n        \"Dynamic connectivity for axis-parallel rectangles\",\n        \"Dynamic geometric set cover and hitting set\",\n        \"Geometric range searching and its relatives\",\n        \"Fast approximation algorithms for piercing boxes by points\",\n        \"Approximation schemes for independent set and sparse subsets of polygons\",\n        \"Color-coding\",\n        \"Dynamic geometric independent set\",\n        \"Maximum matchings in geometric intersection graphs\",\n        \"Dynamic algorithms for maximum matching size\",\n        \"Almost optimal set covers in finite VC-dimension\",\n        \"Deterministic fully dynamic data structures for vertex cover and matching\",\n        \"Dynamic planar convex hull\",\n        \"Deterministically maintaining a (2+Œµ)2ùúÄ(2+\\\\varepsilon)-approximate minimum vertex cover in O‚Äã(1/Œµ2)ùëÇ1superscriptùúÄ2O(1/{\\\\varepsilon}^{2}) amortized update time\",\n        \"Dynamic matching with better-than-2 approximation in polylogarithmic update time\",\n        \"An algorithmic study of fully dynamic independent sets for map labeling\",\n        \"Fully dynamic maximum independent sets of disks in polylogarithmic update time\",\n        \"Fully dynamic matching in bipartite graphs\",\n        \"Faster fully dynamic matchings with small approximation ratios\",\n        \"Minimum vertex cover in rectangle graphs\",\n        \"Unit disk graphs\",\n        \"On approximating maximum independent set of rectangles\",\n        \"More dynamic data structures for geometric set cover with sublinear update time\",\n        \"Dynamic geometric connectivity in the plane with constant query time\",\n        \"Dynamic planar convex hull operations in near-logarithmaic amortized time\",\n        \"Polynomial-time approximation schemes for packing and piercing fat objects\",\n        \"Semi-online maintenance of geometric optima and measures\",\n        \"Dynamic subgraph connectivity with geometric applications\",\n        \"Dynamic coresets\",\n        \"A dynamic data structure for 3-d convex hulls and 2-d nearest neighbor queries\",\n        \"Dynamic generalized closest pair: Revisiting Eppstein‚Äôs technique\",\n        \"Dynamic geometric data structures via shallow cuttings\",\n        \"Dynamic geometric set cover, revisited\",\n        \"Worst-case efficient dynamic geometric independent set\",\n        \"Maximum flow and minimum-cost flow in almost-linear time\",\n        \"Orthogonal range searching on the RAM, revisited\",\n        \"Dynamic connectivity: Connecting to networks and geometry\",\n        \"Approximating maximum weight matching in near-linear time\",\n        \"Geometry helps in bottleneck matching and related problems\",\n        \"Polynomial-time approximation schemes for geometric intersection graphs\",\n        \"Dynamic Euclidean minimum spanning trees and extrema of binary functions\",\n        \"Clique partitions, graph compression and speeding-up algorithms\",\n        \"Fully dynamic (1+Œµ)1ùúÄ(1+\\\\varepsilon)-approximate matchings\",\n        \"Approximately: Independence implies vertex cover\",\n        \"An n5/2superscriptùëõ52n^{5/2} algorithm for maximum matchings in bipartite graphs\",\n        \"Approximation schemes for covering and packing problems in image processing and VLSI\",\n        \"Dynamic approximate maximum independent set of intervals, hypercubes and hyperrectangles\",\n        \"Approximation algorithms for maximum matchings in geometric intersection graphs\",\n        \"Dynamic connectivity in disk graphs\",\n        \"On the union of Jordan regions and collision-free translational motion amidst polygonal obstacles\",\n        \"Online and dynamic algorithms for geometric set cover and hitting set\",\n        \"Vertex cover might be hard to approximate to within 2‚àíŒµ2ùúÄ2-\\\\varepsilon\",\n        \"Improved distributed approximate matching\",\n        \"Applications of a planar separator theorem\",\n        \"Efficient approximation schemes for geometric problems?\",\n        \"Improved results on geometric hitting set problems\",\n        \"Vertex packings: Structural properties and algorithms\",\n        \"Maintaining a large matching and a small vertex cover\",\n        \"Maintenance of configurations in the plane\",\n        \"Computational Geometry: An Introduction\",\n        \"Dynamic (1+Œµ)1ùúÄ(1+\\\\varepsilon)-approximate matchings: A density-sensitive approach\",\n        \"Fully dynamic maximal matching in constant update time\",\n        \"Geometric separator theorems & applications\",\n        \"A theory of alternating paths and blossoms for proving correctness of the O‚Äã(V‚ÄãE)ùëÇùëâùê∏O(\\\\sqrt{V}E) general graph maximum matching algorithm\",\n        \"Linear degree extractors and the inapproximability of max clique and chromatic number\"\n    ],\n    \"reasoning\": \"Selected these 65 references because they represent foundational work and recent advances in Fully Dynamic Geometric Vertex Cover and Matching, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}