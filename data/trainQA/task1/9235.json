{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: New Cross-Core Cache-Agnostic and Prefetcher-based Side-Channels and Covert-Channels\n\nPaper Abstract: Abstract. In this paper, we reveal the existence of a new class of prefetcher, the XPT prefetcher, in the modern Intel processors which has never been officially documented. It speculatively issues a load, bypassing last-level cache (LLC) lookups, when it predicts that a load request will result in an LLC miss. We demonstrate that XPT prefetcher is shared among different cores, which enables an attacker to build cross-core side-channel and covert-channel attacks. We propose PrefetchX, a cross-core attack mechanism, to leak users’ sensitive data and activities. We empirically demonstrate that PrefetchX can be used to extract private keys of real-world RSA applications. Furthermore, we show that PrefetchX can enable side-channel attacks that can monitor keystrokes and network traffic patterns of users. Our two cross-core covert-channel attacks also see a low error rate and a 1.7MB/s maximum channel capacity. Due to the cache-independent feature of PrefetchX, current cache-based mitigations are not effective against our attacks. Overall, our work uncovers a significant vulnerability in the XPT prefetcher, which can be exploited to compromise the confidentiality of sensitive information in both crypto and non-crypto-related applications among processor cores.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"GNU Privacy Guard\",\n        \"HPC Cluster Tuning on 3rd Generation Intel Xeon Scalable Processors\",\n        \"Inconsistency in TLB miss counters\",\n        \"OpenSSL, Cryptography and SSL/TLS Toolkit\",\n        \"Understanding Intel Software Guard Extensions (Intel SGX)\",\n        \"Fingerprinting at internet scale\",\n        \"An Effective On-Chip Preloading Scheme to Reduce Data Access Penalty\",\n        \"An Efficient Temporal Data Prefetcher for L1 Caches\",\n        \"Domino Temporal Data Prefetcher\",\n        \"AfterImage: Leaking Control Flow Data and Tracking Load Operations via the Hardware Prefetcher\",\n        \"A Fetching Tale: Covert Communication with the Hardware Prefetcher\",\n        \"Leaky Frontends: Security Vulnerabilities in Processor Frontends\",\n        \"Prime+Abort: A Timer-Free High-Precision L3 Cache Attack using Intel TSX\",\n        \"White paper inside Intel® Core™ Microarchitecture and Smart Memory Access\",\n        \"Prefetch-guard: Leveraging hardware prefetches to defend against cache timing channels\",\n        \"SQUIP: Exploiting the Scheduler Queue Contention Side Channel\",\n        \"Prefetch side-channel attacks: Bypassing SMAP and kernel ASLR\",\n        \"Flush+Flush: A Fast and Stealthy Cache Attack\",\n        \"Cache games–bringing access-based cache attacks on AES to practice\",\n        \"Leaky Way: A Conflict-Based Cache Covert Channel Bypassing Set Associativity\",\n        \"Adversarial prefetch: New cross-core cache side channel attacks\",\n        \"Chapter 21 - Prefetch Tuning Optimizations\",\n        \"Fingerprinting Websites Using Traffic Analysis\",\n        \"Disclosure of H/W prefetcher control on some Intel processors\",\n        \"Intel® 64 and IA-32 Architectures Software Developer’s Manual\",\n        \"Intel® 64 and IA-32 Architectures Optimization Reference Manual\",\n        \"Spectre Attacks: Exploiting Speculative Execution\",\n        \"RAMBleed: Reading Bits in Memory Without Accessing Them\",\n        \"Montgomery-Ladder RSA\",\n        \"Amd prefetch attacks through power and time\",\n        \"Meltdown: Reading kernel memory from user space\",\n        \"PNetCAT: Practical cache attacks from the network\",\n        \"MbedTLS: An open source, portable, easy to use, readable and flexible SSL library\",\n        \"OpenSSL 1.01 Montgomery-Ladder RSA\",\n        \"Cache attacks and countermeasures: the case of AES\",\n        \"Cache missing for fun and profit\",\n        \"Frontal attack: leaking control-flow in SGX via the CPU frontend\",\n        \"Reverse Engineering the Stream Prefetcher for Profit\",\n        \"Dns privacy not so private: the traffic analysis perspective\",\n        \"Unveiling Hardware-Based Data Prefetcher, a Hidden Source of Information Leakage\",\n        \"Spatial memory streaming\",\n        \"CacheOut: Leaking data on Intel CPUs via cache evictions\",\n        \"Augury: Using data memory-dependent prefetchers to leak data at rest\",\n        \"Papp: Prefetcher-aware prime and probe side-channel attack\",\n        \"Hacky Racers: Exploiting Instruction-Level Parallelism to Generate Stealthy Fine-Grained Timers\",\n        \"FLUSH + RELOAD: A high resolution, low noise, L3 cache side-channel attack\",\n        \"Peeping Tom in the neighborhood: Keystroke eavesdropping on multi-user systems.\",\n        \"Binoculars:{{{Contention-Based}}}{{{Side-Channel}}} Attacks Exploiting the Page Walker\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in New Cross-Core Cache-Agnostic and Prefetcher-based Side-Channels and Covert-Channels, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}