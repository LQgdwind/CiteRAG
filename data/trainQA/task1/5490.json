{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ReGraph: Scaling Graph Processing on HBM-enabled FPGAs with Heterogeneous Pipelines\n\nPaper Abstract: Abstract The use of FPGAs for efficient graph processing has attracted significant interest. Recent memory subsystem upgrades including the introduction of HBM in FPGAs promise to further alleviate memory bottlenecks. However, modern multi-channel HBM requires much more processing pipelines to fully utilize its bandwidth potential. Existing designs do not scale well, resulting in underutilization of the HBM facilities even when all other resources are fully consumed. In this paper, we re-examined the graph processing workloads and found much diversity in processing. We also found that the diverse workloads can be easily classified into two types, namely dense and sparse partitions. This motivates us to propose a resource-efficient heterogeneous pipeline architecture. Our heterogeneous architecture comprises of two types of pipelines: Little pipelines to process dense partitions with good locality and Big pipelines to process sparse partitions with extremely poor locality. Unlike traditional monolithic pipeline designs, the heterogeneous pipelines are tailored for more specific memory access patterns, and hence are more lightweight, allowing the architecture to scale up more effectively with limited resources. In addition, we propose a model-guided task scheduling method that schedules partitions to the right pipeline types, generates the most efficient pipeline combination and balances workloads. Furthermore, we develop an automated open-source framework, called ReGraph111ReGraph is open-sourced at https://anonymous.4open.science/r/ReGraph/., which automates the entire development process. ReGraph outperforms state-of-the-art FPGA accelerators by up to 5.9×\\times in terms of performance and 12×\\times in terms of resource efficiency.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Large-scale graph processing on FPGAs with caches for thousands of simultaneous misses\",\n        \"Locality exists in graph processing: Workload characterization on an Ivy Bridge server\",\n        \"On-the-fly parallel data shuffling for graph processing on OpenCL-based FPGAs\",\n        \"Thundergp: Hls-based graph processing framework on FPGAs\",\n        \"Workload balancing via graph reordering on multicore systems\",\n        \"HBM connect: High-performance hls interconnect for FPGA HBM\",\n        \"Automated accelerator generation and optimization with composable, parallel and pipeline architecture\",\n        \"Performance modeling for FPGAs: extending the roofline model with high-level synthesis tools\",\n        \"ForeGraph: Exploring large-scale graph processing on multi-FPGA architecture\",\n        \"The university of florida sparse matrix collection\",\n        \"OpenCL FPGA optimization guided by memory accesses and roofline model analysis applied to tomography acceleration\",\n        \"A closer look at lightweight graph reordering\",\n        \"Graph 500\",\n        \"AutoBridge: Coupling coarse-grained floorplanning and pipelining for high-frequency HLS design on multi-die FPGAs\",\n        \"Analysis and optimization of the implicit broadcasts in FPGA HLS to improve maximum frequency\",\n        \"Graphicionado: A high-performance and energy-efficient accelerator for graph analytics\",\n        \"GraphLily: Accelerating graph linear algebra on HBM-equipped FPGAs\",\n        \"Shuhai: A tool for benchmarking high bandwidth memory on FPGAs\",\n        \"High bandwidth memory on FPGAs: A data analytics perspective\",\n        \"Single-ISA heterogeneous multi-core architectures for multithreaded workload performance\",\n        \"Multi-threaded graph partitioning\",\n        \"Kronecker graphs: an approach to modeling networks.\",\n        \"SNAP Datasets: Stanford large network dataset collection\",\n        \"Distributed graphLab: A framework for machine learning and data mining in the cloud\",\n        \"Challenges in parallel graph processing\",\n        \"A survey of techniques for architecting and managing asymmetric multicore processors\",\n        \"Cpu energy meter\",\n        \"A survey and evaluation of FPGA high-level synthesis tools\",\n        \"Graphgen: An FPGA framework for vertex-centric graph computation\",\n        \"Gunrock: Gpu graph analytics\",\n        \"Graphops: A dataflow library for graph analytics acceleration\",\n        \"Energy efficient architecture for graph analytics accelerators\",\n        \"The network data repository with interactive graph analytics and visualization\",\n        \"Chaos: Scale-out graph processing from secondary storage\",\n        \"The ubiquity of large graphs and surprising challenges of graph processing\",\n        \"Improving performance of graph processing on FPGA-dram platform by two-level vertex caching\",\n        \"Ligra: A lightweight graph processing framework for shared memory\",\n        \"A comprehensive methodology to optimize FPGA designs via the roofline model\",\n        \"Graphgrind: Addressing load imbalance of graph partitioning\",\n        \"Understanding fundamental design choices in single-ISA heterogeneous multicore architectures\",\n        \"Gunrock: A high-performance graph processing library on the GPU\",\n        \"Roofline: an insightful visual performance model for multicore architectures\",\n        \"Vitis unified software development platform 2020.2 documentation\",\n        \"Alveo U250 data center accelerator card user guide\",\n        \"Alveo U280 data center accelerator card user guide\",\n        \"ThunderGP\",\n        \"Alleviating irregularity in graph analytics acceleration: A hardware/software co-design approach\",\n        \"Optimizing memory performance for FPGA implementation of pagerank\",\n        \"High-throughput and energy-efficient graph processing on FPGA\",\n        \"HitGraph: High-throughput graph processing framework on FPGA\",\n        \"An FPGA framework for edge-centric graph processing\",\n        \"Gemini: A computation-centric distributed graph processing system\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in ReGraph: Scaling Graph Processing on HBM-enabled FPGAs with Heterogeneous Pipelines, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}