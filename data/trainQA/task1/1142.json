{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Topic Modeling on User Stories using Word Mover’s Distance\n\nPaper Abstract: Abstract Requirements elicitation has recently been complemented with crowd-based techniques, which continuously involve large, heterogeneous groups of users who express their feedback through a variety of media. Crowd-based elicitation has great potential for engaging with (potential) users early on but also results in large sets of raw and unstructured feedback. Consolidating and analyzing this feedback is a key challenge for turning it into sensible user requirements. In this paper, we focus on topic modeling as a means to identify topics within a large set of crowd-generated user stories and compare three approaches: (1) a traditional approach based on Latent Dirichlet Allocation, (2) a combination of word embeddings and principal component analysis, and (3) a combination of word embeddings and Word Mover’s Distance. We evaluate the approaches on a publicly available set of 2,966 user stories written and categorized by crowd workers. We found that a combination of word embeddings and Word Mover’s Distance is most promising. Depending on the word embeddings we use in our approaches, we manage to cluster the user stories in two ways: one that is closer to the original categorization and another that allows new insights into the dataset, e.g. to find potentially new categories. Unfortunately, no measure exists to rate the quality of our results objectively. Still, our findings provide a basis for future work towards analyzing crowd-sourced user stories.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Requirements Elicitation: A Survey of Techniques\",\n        \"Requirements Elicitation: A Survey of Techniques, Approaches, and Tools\",\n        \"FAME: Supporting continuous requirements elicitation by combining user feedback and monitoring\",\n        \"Classifying multilingual user feedback using traditional machine learning and deep learning\",\n        \"The crowd in requirements engineering: The landscape and challenges\",\n        \"Acquiring creative requirements from the crowd: Understanding the influences of personality and creative potential in crowd RE\",\n        \"Toward data-driven requirements engineering\",\n        \"User reviews matter! Tracking crowdsourced reviews to support evolution of successful apps\",\n        \"Toward automating crowd RE\",\n        \"Data-driven requirements engineering - An update\",\n        \"User story writing in crowd requirements engineering: The case of a web application for sports tournament planning\",\n        \"GARUSO: a gamification approach for involving stakeholders outside organizational reach in requirements engineering\",\n        \"Latent Dirichlet Allocation\",\n        \"Topic2Vec: Learning Distributed Representations of Topics\",\n        \"What is wrong with topic modeling? And how to fix it using search-based software engineering\",\n        \"Efficient Estimation of Word Representations in Vector Space\",\n        \"Linguistic regularities in continuous space word representations\",\n        \"Topic Modeling over Short Texts by Incorporating Word Embeddings\",\n        \"From word embeddings to document distances\",\n        \"How do users like this feature? a fine grained sentiment analysis of app reviews\",\n        \"Analysis of user comments: An approach for software requirements evolution\",\n        \"AR-miner: Mining informative reviews for developers from mobile app marketplace\",\n        \"Software traceability with topic modeling\",\n        \"What are developers talking about? An analysis of topics and trends in Stack Overflow\",\n        \"A text mining research based on LDA topic modelling\",\n        \"Relating requirements to implementation via topic analysis: Do topics extracted from requirements make sense to managers and developers?\",\n        \"A neural probabilistic language model\",\n        \"Topic modeling for short texts with auxiliary word embeddings\",\n        \"Topic mover’s distance based document classification\",\n        \"Review on natural language processing (NLP) and its toolkits for opinion mining and sentiment analysis\",\n        \"Dimensionality Reduction for Sentiment Analysis using Pre-processing Techniques\",\n        \"Term-weighting approaches in automatic text retrieval\",\n        \"Data Mining\",\n        \"Visualizing data using t-SNE\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"'Why should I trust you?': Explaining the predictions of any classifier\",\n        \"Detecting terminological ambiguity in user stories: Tool and experimentation\",\n        \"Extracting conceptual models from user stories with visual narrator\",\n        \"Short and sparse text topic modeling via self-aggregation\",\n        \"Classifying extremely short texts by exploiting semantic centroids in word mover’s distance space\",\n        \"Natural language requirements processing: from research to practice\",\n        \"An NLP approach for cross-domain ambiguity detection in requirements engineering\",\n        \"Principal component analysis\",\n        \"Data cleaning: Overview and emerging challenges\",\n        \"Data cleaning: A statistical perspective - overview and challenges part 2\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Topic Modeling on User Stories using Word Mover’s Distance, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}