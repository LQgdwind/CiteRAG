{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 64 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AutoDSE: Enabling Software Programmers to Design Efficient FPGA Accelerators\n\nPaper Abstract: Abstract. Adopting FPGA as an accelerator in datacenters is becoming mainstream for customized computing, but the fact that FPGAs are hard to program creates a steep learning curve for software programmers. Even with the help of high-level synthesis (HLS), accelerator designers still have to manually perform code reconstruction and cumbersome parameter tuning to achieve the optimal performance. While many learning models have been leveraged by existing work to automate the design of efficient accelerators, the unpredictability of modern HLS tools becomes a major obstacle for them to maintain high accuracy. To address this problem, we propose an automated DSE framework—A​u​t​o​D​S​E𝐴𝑢𝑡𝑜𝐷𝑆𝐸AutoDSE— that leverages a bottleneck-guided coordinate optimizer to systematically find a better design point. A​u​t​o​D​S​E𝐴𝑢𝑡𝑜𝐷𝑆𝐸AutoDSE detects the bottleneck of the design in each step and focuses on high-impact parameters to overcome it. The experimental results show that A​u​t​o​D​S​E𝐴𝑢𝑡𝑜𝐷𝑆𝐸AutoDSE is able to identify the design point that achieves, on the geometric mean, 19.9×\\times speedup over one CPU core for Machsuite and Rodinia benchmarks. Compared to the manually optimized HLS vision kernels in Xilinx Vitis libraries, A​u​t​o​D​S​E𝐴𝑢𝑡𝑜𝐷𝑆𝐸AutoDSE can reduce their optimization pragmas by 26.38×\\times while achieving similar performance. With less than one optimization pragma per design on average, we are making progress towards democratizing customizable computing by enabling software programmers to design efficient FPGA accelerators.\n\n{retrieved_text}\n\nGenerate exactly 64 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 64\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Rose Compiler Infrastructure\",\n        \"Amazon EC2 F1 Instance\",\n        \"Design space exploration of LDPC decoders using high-level synthesis\",\n        \"Opentuner: An extensible framework for program autotuning\",\n        \"The opencv library\",\n        \"Cadence Stratus High-Level Synthesis\",\n        \"Catapult High-Level Synthesis\",\n        \"Rodinia: A benchmark suite for heterogeneous computing\",\n        \"SODA: stencil with optimized dataflow architecture\",\n        \"HLS-based optimization and design space exploration for applications with variable loop bounds\",\n        \"Source-to-source optimization for HLS\",\n        \"Software infrastructure for enabling FPGA-based accelerations in data centers\",\n        \"High-level synthesis for FPGAs: From prototyping to deployment\",\n        \"PolySA: polyhedral-based systolic array auto-compilation\",\n        \"Automated accelerator generation and optimization with composable, parallel and pipeline architecture\",\n        \"CyberWorkBench\",\n        \"OpenMP: an industry standard API for shared-memory programming\",\n        \"Fast and accurate estimation of quality of results in high-level synthesis with machine learning\",\n        \"Design of ion-implanted MOSFET’s with very small physical dimensions\",\n        \"Fast inference of deep neural networks in FPGAs for particle physics\",\n        \"Falcon Computing Solutions, Inc.\",\n        \"Cluster-based heuristic for high level synthesis design space exploration\",\n        \"Lattice-traversing design space exploration for high level synthesis\",\n        \"Analyzing bandit-based adaptive operator selection mechanisms\",\n        \"Intel\",\n        \"Intel SDK for OpenCL Applications\",\n        \"Automatic generation of efficient accelerators for reconfigurable hardware\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"HeteroCL: A multi-paradigm programming infrastructure for software-defined reconfigurable computing\",\n        \"On learning-based methods for design-space exploration with high-level synthesis\",\n        \"Accelerating fpga prototyping through predictive model-based hls design space exploration\",\n        \"Machine-learning based simulated annealer method for high level synthesis design space exploration\",\n        \"Predictable accelerator design with time-sensitive affine types\",\n        \"Generating configurable hardware from parallel patterns\",\n        \"A reconfigurable fabric for accelerating large-scale datacenter services\",\n        \"Machsuite: Benchmarks for accelerator design and customized architectures\",\n        \"Pareto optimal design space exploration for accelerated CNN on FPGA\",\n        \"Parallel high-level synthesis design space exploration for behavioral ips of exact latencies\",\n        \"Divide and conquer high-level synthesis design space exploration\",\n        \"Machine learning predictive modelling high-level synthesis design space exploration\",\n        \"Scalable bayesian optimization using deep neural networks\",\n        \"End-to-End Optimization of Deep Learning Applications\",\n        \"Correlated Multi-objective Multi-fidelity Optimization for HLS Directives Design\",\n        \"Artisan: a Meta-Programming Approach For Codifying Optimisation Strategies\",\n        \"Vivado HLS\",\n        \"AutoSA: A Polyhedral Compiler for High-Performance Systolic Arrays on FPGA\",\n        \"Flexcl: An analytical performance model for opencl workloads on flexible fpgas\",\n        \"Xilinx\",\n        \"Xilinx Vitis Libraries\",\n        \"Xilinx Vitis Platform\",\n        \"A parallel bandit-based approach for autotuning fpga compilation\",\n        \"AutoDNNchip: An automated dnn chip predictor and builder for both FPGAs and ASICs\",\n        \"SPIRIT: Spectral-Aware pareto iterative refinement optimization for supervised high-level synthesis\",\n        \"S2FA: an accelerator automation framework for heterogeneous computing in datacenters\",\n        \"Compiler-assisted selection of hardware acceleration candidates from application source code\",\n        \"AutoPilot: A platform-based ESL synthesis system\",\n        \"COMBA: A comprehensive model-based analysis framework for high level synthesis of real applications\",\n        \"FlexTensor: An Automatic Schedule Exploration and Optimization Framework for Tensor Computation on Heterogeneous System\",\n        \"Lin-analyzer: a high-level performance analysis tool for FPGA-based accelerators\",\n        \"Design Space exploration of FPGA-based accelerators with multi-level parallelism\",\n        \"Design space exploration of multiple loops on FPGAs using high level synthesis\",\n        \"Combined spatial and temporal blocking for high-performance stencil computation on FPGAs using OpenCL\",\n        \"Improving polyhedral code generation for high-level synthesis\",\n        \"Louis-Noël Pouchet\"\n    ],\n    \"reasoning\": \"Selected these 64 references because they represent foundational work and recent advances in AutoDSE: Enabling Software Programmers to Design Efficient FPGA Accelerators, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}