{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 62 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: \\system: Blockchain Fault Tolerance\n\nPaper Abstract: Abstract Blockchain promises to make online services more fault tolerant due to their inherent distributed nature. Their ability to execute arbitrary programs in different geo-distributed regions and on diverse operating systems make them an alternative of choice to our dependence on unique software whose recent failure affected 8.5 millions of machines [19]. As of today, it remains, however, unclear whether blockchains can truly tolerate failures. In this paper, we assess the fault tolerance of blockchain. To this end, we inject failures in controlled deployments of five modern blockchain systems, namely Algorand, Aptos, Avalanche, Redbelly and Solana. We introduce a novel sensitivity metric, interesting in its own right, as the difference between the integrals of two cumulative distribution functions, one obtained in a baseline environment and one obtained in an adversarial environment. Our results indicate that (i) all blockchains except Redbelly are highly impacted by the failure of a small part of their network, (ii) Avalanche and Redbelly benefit from the redundant information needed for Byzantine fault tolerance while others are hampered by it, and more dramatically (iii) Avalanche and Solana cannot recover from localised transient failures.\n\n{retrieved_text}\n\nGenerate exactly 62 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 62\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"coreth/core/txpool/legacypool/legacypool.go at master · ava-labs/coreth\",\n        \"go-algorand-sdk/client/v2/algod/rawTransaction.go at develop · algorand/go-algorand-sdk\",\n        \"go-ethereum/ethclient/ethclient.go at master · ethereum/go-ethereum\",\n        \"The Go Programming Language Specification - The Go Programming Language\",\n        \"Pull gossip not working on coreth? · Issue #515 · ava-labs/coreth\",\n        \"RpcClient in solana_client::rpc_client - Rust\",\n        \"Solana Tech community on Discord\",\n        \"Validator fails to restart · Issue #1491 · anza-xyz/agave\",\n        \"The Aptos Blockchain: Safe, Scalable, and Upgradeable Web3 Infrastructure\",\n        \"AvalancheGo Configs and Flags | Avalanche Docs\",\n        \"Hyperledger Caliper\",\n        \"Retrying Transactions | Solana\",\n        \"Solana Leader Rotation | Solana Validator\",\n        \"The bedrock of byzantine fault tolerance: A unified platform for BFT protocols analysis, implementation, and experimentation\",\n        \"An analysis of avalanche consensus\",\n        \"Fault Tolerance: Principles and Practice\",\n        \"RBFT: Redundant Byzantine Fault Tolerance\",\n        \"Stochastic Dominance | Economics of Uncertainty\",\n        \"Crowdstrike it outage affected 8.5 million windows devices, microsoft says\",\n        \"Holistic verification of blockchain consensus\",\n        \"Guide to Reliable Distributed Systems - Building High-Assurance Applications and Cloud-Hosted Services\",\n        \"Metastable failures in distributed systems\",\n        \"Introduction to Reliable and Secure Distributed Programming (2. ed.)\",\n        \"Blockchain consensus protocols in the wild (keynote talk)\",\n        \"Practical Byzantine fault tolerance\",\n        \"Algorand’s Latest Upgrade: Dynamic Round Times & AVM v10 | Algorand Developer Portal\",\n        \"Making Byzantine Fault Tolerant Systems Tolerate Byzantine Faults\",\n        \"DBFT: efficient leaderless byzantine consensus and its application to blockchains\",\n        \"Red belly: a secure, fair and scalable open blockchain\",\n        \"BLOCKBENCH: A Framework for Analyzing Private Blockchains\",\n        \"Solana Outage: Full List Of SOL Network Blockchain Mainnet Failures\",\n        \"Finney’s attack\",\n        \"Block-STM: Scaling Blockchain Execution by Turning Ordering Curse to a Performance Blessing\",\n        \"Algorand: Scaling Byzantine agreements for cryptocurrencies\",\n        \"SBFT: A Scalable and Decentralized Trust Infrastructure\",\n        \"Blockchain Scalability and its Foundations in Distributed Systems\",\n        \"Diablo: A Benchmark Suite for Blockchains\",\n        \"BFT-Bench: Towards a Practical Evaluation of Robustness and Effectiveness of BFT Protocols\",\n        \"Metastable Failures in the Wild\",\n        \"Ten Myths About Blockchain Consensus\",\n        \"Two bitcoins at the price of one? double-spending attacks on fast payments in bitcoin\",\n        \"The byzantine generals problem\",\n        \"Dependability evaluation of software systems in operation\",\n        \"On the relevance of blockchain evaluations on bare metal\",\n        \"LOKI: State-Aware Fuzzing Framework for the Implementation of Blockchain Consensus Protocols\",\n        \"GFBE: A Generalized and Fine-Grained Blockchain Evaluation Framework\",\n        \"Bitcoin: A Peer-to-Peer Electronic Cash System\",\n        \"Gromit: Benchmarking the Performance and Scalability of Blockchain Systems\",\n        \"The balance attack or why forkable blockchains are ill-suited for consortium\",\n        \"Deconstructing blockchains: A comprehensive survey on consensus, membership and structure\",\n        \"Redbelly blockchain: a combination of recent advances\",\n        \"Zlb: A blockchain to tolerate colluding majorities\",\n        \"Scalable and Probabilistic Leaderless BFT Consensus through Metastability\",\n        \"Halting the solana blockchain with epsilon stake\",\n        \"Smart Redbelly Blockchain: Reducing Congestion for Web3\",\n        \"DiemBFT v4: State Machine Replication in the Diem Blockchain\",\n        \"The vector76 attack\",\n        \"Spin One’s Wheels? Byzantine Fault Tolerance with a Spinning Primary\",\n        \"Dispel: Byzantine smr with distributed pipelining\",\n        \"Randomized Testing of Byzantine Fault Tolerant Algorithms\",\n        \"Finding consensus bugs in ethereum via multi-transaction differential fuzzing\",\n        \"HotStuff: BFT consensus with linearity and responsiveness\"\n    ],\n    \"reasoning\": \"Selected these 62 references because they represent foundational work and recent advances in \\\\system: Blockchain Fault Tolerance, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}