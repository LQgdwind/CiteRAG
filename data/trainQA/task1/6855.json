{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Adaptable Butterfly Accelerator for Attention-based NNs via Hardware and Algorithm Co-design\n\nPaper Abstract: Abstract Attention-based neural networks have become pervasive in many AI tasks. Despite their excellent algorithmic performance, the use of the attention mechanism and feed-forward network (FFN) demands excessive computational and memory resources, which often compromises their hardware performance. Although various sparse variants have been introduced, most approaches only focus on mitigating the quadratic scaling of attention on the algorithm level, without explicitly considering the efficiency of mapping their methods on real hardware designs. Furthermore, most efforts only focus on either the attention mechanism or the FFNs but without jointly optimizing both parts, causing most of the current designs to lack scalability when dealing with different input lengths. This paper systematically considers the sparsity patterns in different variants from a hardware perspective. On the algorithmic level, we propose FABNet, a hardware-friendly variant that adopts a unified butterfly sparsity pattern to approximate both the attention mechanism and the FFNs. On the hardware level, a novel adaptable butterfly accelerator is proposed that can be configured at runtime via dedicated hardware control to accelerate different butterfly layers using a single unified hardware engine. On the Long-Range-Arena dataset, FABNet achieves the same accuracy as the vanilla Transformer while reducing the amount of computation by 10∼66×10\\sim 66\\times and the number of parameters 2∼22×2\\sim 22\\times. By jointly optimizing the algorithm and hardware, our FPGA-based butterfly accelerator achieves 14.2∼23.2×14.2\\sim 23.2\\times speedup over state-of-the-art accelerators normalized to the same computational budget. Compared with optimized CPU and GPU designs on Raspberry Pi 4 and Jetson Nano, our system is up to 273.8×273.8\\times and 15.1×15.1\\times faster under the same power budget.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A General Survey on Attention Mechanisms in Deep Learning\",\n        \"Attention is All You Need\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Language Models are Unsupervised Multitask Learners\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"SpAtten: Efficient Sparse Attention Architecture with Cascade Token and Head Pruning\",\n        \"Rethinking Attention with Performers\",\n        \"Linformer: Self-Attention with Linear Complexity\",\n        \"Reformer: The Efficient Transformer\",\n        \"Sparse Sinkhorn Attention\",\n        \"Longformer: The Long-Document Transformer\",\n        \"Big Bird: Transformers for Longer Sequences\",\n        \"Generating Long Sequences with Sparse Transformers\",\n        \"A33{}^{\\\\text{3}}: Accelerating Attention Mechanisms in Neural Networks with Approximation\",\n        \"Sanger: A Co-Design Framework for Enabling Sparse Attention Using Reconfigurable Architecture\",\n        \"Energon: Towards Efficient Acceleration of Transformers Using Dynamic Sparse Attention\",\n        \"ELSA: Hardware-Software Co-Design for Efficient, Lightweight Self-Attention Mechanism in Neural Networks\",\n        \"DOTA: Detect and Omit Weak Attentions for Scalable Transformer Acceleration\",\n        \"FTRANS: Energy-Efficient Acceleration of Transformers using FPGA\",\n        \"EdgeBERT: Sentence-Level Energy Optimizations for Latency-Aware Multi-Task NLP Inference\",\n        \"Sparsity-Aware and Re-configurable NPU Architecture for Samsung Flagship Mobile SoC\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Layer Normalization\",\n        \"Cross-lingual language model pretraining\",\n        \"GLUE: A Multi-Task Benchmark and Analysis Platform for Natural Language Understanding\",\n        \"A Tensorized Transformer for Language Modeling\",\n        \"Scatterbrain: Unifying Sparse and Low-rank Attention\",\n        \"Random Butterfly Transformations with Applications in Computational Linear Algebra\",\n        \"Learning Fast Algorithms for Linear Transforms Using Butterfly Factorizations\",\n        \"A two-pronged progress in structured dense matrix vector multiplication\",\n        \"Pixelated Butterfly: Simple and Efficient Sparse training for Neural Network Models\",\n        \"Kaleidoscope: An Efficient, Learnable Representation for All Structured Linear Maps\",\n        \"MLP-Mixer: An all-MLP Architecture for Vision\",\n        \"FNet: Mixing Tokens with Fourier Transforms\",\n        \"An algorithm for the machine calculation of complex fourier series\",\n        \"Validity of the single processor approach to achieving large scale computing capabilities\",\n        \"Monarch: Expressive Structured Matrices for Efficient and Accurate Training\",\n        \"AWB-GCN: A Graph Convolutional Network Accelerator with Runtime Workload Rebalancing\",\n        \"Long Range Arena: A Benchmark for Efficient Transformers\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Huggingface’s Transformers: State-of-the-art Natural Language Processing\",\n        \"Nyströmformer: A Nystöm-based Algorithm for Approximating Self-Attention\",\n        \"HyPar: Towards Hybrid Parallelism for Deep Learning Accelerator Array\",\n        \"Fused-Layer CNN Accelerators\",\n        \"Efficient Transformers: A Survey\",\n        \"Frequency Domain Acceleration of Convolutional Neural Networks on CPU-FPGA Shared Memory System\",\n        \"Accelerating Convolutional Neural Network With FFT on Embedded Hardware\",\n        \"C-LSTM: Enabling Efficient LSTM using Structured Compression Techniques on FPGAs\",\n        \"E-RNN: Design Optimization for Efficient Recurrent Neural Networks in FPGAs\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Adaptable Butterfly Accelerator for Attention-based NNs via Hardware and Algorithm Co-design, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}