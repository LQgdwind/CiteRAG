{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Extractive Summarization as Text Matching\n\nPaper Abstract: Abstract This paper creates a paradigm shift with regard to the way we build neural extractive summarization systems. Instead of following the commonly used framework of extracting sentences individually and modeling the relationship between sentences, we formulate the extractive summarization task as a semantic text matching problem, in which a source document and candidate summaries will be (extracted from the original text) matched in a semantic space. Notably, this paradigm shift to semantic matching framework is well-grounded in our comprehensive analysis of the inherent gap between sentence-level and summary-level extractors based on the property of the dataset. Besides, even instantiating the framework with a simple form of a matching model, we have driven the state-of-the-art extractive result on CNN/DailyMail to a new level (44.41 in ROUGE-1). Experiments on the other five datasets also show the effectiveness of the matching framework. We believe the power of this matching-based summarization framework has not been fully exploited. To encourage more instantiations in the future, we have released our codes, processed dataset, as well as generated summaries in https://github.com/maszhongming/MatchSum.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The two-stage unsupervised approach to multidocument summarization\",\n        \"Reinforced extractive summarization with question-focused rewards\",\n        \"Summary level training of sentence rewriting for abstractive summarization\",\n        \"Signature verification using a” siamese” time delay neural network\",\n        \"Fast abstractive summarization with reinforce-selected sentence rewriting\",\n        \"Neural summarization by extracting sentences and words\",\n        \"A discourse-aware attention model for abstractive summarization of long documents\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Banditsum: Extractive summarization as a contextual bandit\",\n        \"Multi-news: A large-scale multi-document summarization dataset and abstractive hierarchical model\",\n        \"An extractive supervised two-stage method for sentence compression\",\n        \"A scalable global model for summarization\",\n        \"Teaching machines to read and comprehend\",\n        \"Deep metric learning using triplet network\",\n        \"Extractive summarization with swap-net: Sentences and words from alternating pointer networks\",\n        \"Abstractive summarization of reddit posts with multi-level memory networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Wikihow: A large scale text summarization dataset\",\n        \"Scoring sentence singletons and pairs for abstractive summarization\",\n        \"Automatic evaluation of summaries using n-gram co-occurrence statistics\",\n        \"Fine-tune bert for extractive summarization\",\n        \"Text summarization with pretrained encoders\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Jointly extracting and compressing documents with summary state representations\",\n        \"Language as a latent variable: Discrete generative models for sentence compression\",\n        \"Learning to match using local and distributed representations of text for web search\",\n        \"Summarunner: A recurrent neural network based sequence model for extractive summarization of documents\",\n        \"Abstractive text summarization using sequence-to-sequence rnns and beyond\",\n        \"Don’t give me the details, just the summary! topic-aware convolutional neural networks for extreme summarization\",\n        \"Ranking sentences for extractive summarization with reinforcement learning\",\n        \"A deep reinforced model for abstractive summarization\",\n        \"Sentence-bert: Sentence embeddings using siamese bert-networks\",\n        \"Learning to rank short text pairs with convolutional deep neural networks\",\n        \"Attention is all you need\",\n        \"Multi-document summarization via discriminative summary reranking\",\n        \"Heterogeneous graph neural networks for extractive document summarization\",\n        \"Exploring domain shift in extractive text summarization\",\n        \"Learning natural language inference with lstm\",\n        \"Bilateral multi-perspective matching for natural language sentences\",\n        \"Neural extractive text summarization with syntactic compression\",\n        \"Discourse-aware neural extractive model for text summarization\",\n        \"Question answering using enhanced lexical semantic models\",\n        \"Extractive summarization by maximizing semantic volume\",\n        \"Pretraining-based natural language generation for text summarization\",\n        \"Hibert: Document level pre-training of hierarchical bidirectional transformers for document summarization\",\n        \"Searching for effective neural extractive summarization: What works and what’s next\",\n        \"A closer look at data bias in neural extractive summarization models\",\n        \"Neural document summarization by jointly learning to score and select sentences\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Extractive Summarization as Text Matching, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}