{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DTMM: Deploying TinyML Models on Extremely Weak IoT Devices with Pruning\n\nPaper Abstract: Abstract DTMM is a library designed for efficient deployment and execution of machine learning models on weak IoT devices such as microcontroller units (MCUs). The motivation for designing DTMM comes from the emerging field of tiny machine learning (TinyML), which explores extending the reach of machine learning to many low-end IoT devices to achieve ubiquitous intelligence. Due to the weak capability of embedded devices, it is necessary to compress models by pruning enough weights before deploying. Although pruning has been studied extensively on many computing platforms, two key issues with pruning methods are exacerbated on MCUs: models need to be deeply compressed without significantly compromising accuracy, and they should perform efficiently after pruning. Current solutions only achieve one of these objectives, but not both. In this paper, we find that pruned models have great potential for efficient deployment and execution on MCUs. Therefore, we propose DTMM with pruning unit selection, pre-execution pruning optimizations, runtime acceleration, and post-execution low-cost storage to fill the gap for efficient deployment and execution of pruned models. It can be integrated into commercial ML frameworks for practical deployment, and a prototype system has been developed. Extensive experiments on various models show promising gains compared to state-of-the-art methods.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Advanced ai embedded systems — nvidia jetson\",\n        \"Arm® Corstone™ SSE-300 example subsystem technical reference manual\",\n        \"Micronets: Neural network architectures for deploying tinyml applications on commodity microcontrollers\",\n        \"Benchmarking tinyml systems: Challenges and direction\",\n        \"Sparsification and separation of deep learning layers for constrained resource inference on wearables\",\n        \"Shallowing deep networks: Layer-wise pruning based on feature representations\",\n        \"Tvm: An automated end-to-end optimizing compiler for deep learning\",\n        \"Visual wake words dataset\",\n        \"Tensorflow lite micro: Embedded machine learning on tinyml systems\",\n        \"Learning to seek: Autonomous source seeking with deep reinforcement learning onboard a nano drone microcontroller\",\n        \"Sparse: Sparse architecture search for cnns on resource-constrained microcontrollers\",\n        \"Ember: energy management of batteryless event detection sensors with deep reinforcement learning\",\n        \"Iot-based smart triage of covid-19 suspicious cases in the emergency department\",\n        \"Intelligence beyond the edge: Inference on intermittent embedded systems\",\n        \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding\",\n        \"Deep residual learning for image recognition\",\n        \"Channel pruning for accelerating very deep neural networks\",\n        \"Distilling the knowledge in a neural network\",\n        \"Real-time neural network inference on extremely weak devices: agile offloading with explainable ai\",\n        \"Battery-free sensing platform for wearable devices: The synergy between two feet\",\n        \"Deepadapter: A collaborative deep learning framework for the mobile web using context-aware network pruning\",\n        \"Fddb: A benchmark for face detection in unconstrained settings\",\n        \"Internet of things platform for smart farming: Experiences and lessons learnt\",\n        \"CoDL: efficient cpu-gpu co-execution for deep learning inference on mobile devices\",\n        \"Learning multiple layers of features from tiny images\",\n        \"YONO: Modeling multiple heterogeneous neural networks on microcontrollers\",\n        \"CMSIS-NN: Efficient neural network kernels for Arm Cortex-M CPUs\",\n        \"Pruning filters for efficient convnets\",\n        \"Neural networks on microcontrollers: saving memory at inference via operator reordering\",\n        \"Mcunet: Tiny deep learning on iot devices\",\n        \"Dynamic model pruning with feedback\",\n        \"Non-structured dnn weight pruning–is it beneficial in any platform?\",\n        \"Arm® Helium™ technology M-Profile Vector Extension (MVE) for Arm® Cortex®-M processors: Reference book\",\n        \"Pruning filter in filter\",\n        \"Enabling large neural networks on tiny microcontrollers with swapping\",\n        \"Pruning convolutional neural networks for resource efficient inference\",\n        \"Patdnn: Achieving real-time dnn execution on mobile devices with pattern-based weight pruning\",\n        \"Raspberry pi 3 model b\",\n        \"You only look once: Unified, real-time object detection\",\n        \"Adaptive traffic control with tinyml\",\n        \"An implantable low-power ultrasonic platform for the internet of medical things\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Stm32 high performance mcus\",\n        \"Chip: Channel independence-based pruning for compact neural networks\",\n        \"Judo: addressing the energy asymmetry of wireless embedded systems through tunnel diode based wireless transmitters\",\n        \"Asymo: scalable and efficient deep-learning inference on asymmetric mobile cpus\",\n        \"Push the limit of acoustic gesture recognition\",\n        \"Tinyml: Machine learning with tensorflow lite on arduino and ultra-low-power microcontrollers\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"Limu-bert: Unleashing the potential of unlabeled data for imu sensing applications\",\n        \"Thoreau: A subterranean wireless sensing network for agriculture and the environment\",\n        \"Hello edge: Keyword spotting on microcontrollers\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in DTMM: Deploying TinyML Models on Extremely Weak IoT Devices with Pruning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}