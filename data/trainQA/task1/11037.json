{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RoboCertProb: Property Specification for Probabilistic RoboChart Models\n\nPaper Abstract: Abstract RoboChart is a core notation in the RoboStar framework which brings modern modelling and formal verification technologies into software engineering for robotics. It is a timed and probabilistic domain-specific language for robotics and provides a UML-like architectural and state machine modelling. This work presents RoboCertProb for specifying quantitative properties of probabilistic robotic systems modelled in RoboChart. RoboCertProb’s semantics is based on PCTL*. To interpret RoboCertProb over RoboChart models, we give a Markov semantics (DTMCs and MDPs) to RoboChart, derived from its existing transformation semantics to the PRISM language. In addition to property specification, RoboCertProb also entitles us to configure loose constants and unspecified functions and operations in RoboChart models. It allows us to set up environmental inputs to verify reactive probabilistic systems not directly supported in probabilistic model checkers like PRISM because they employ a closed-world assumption. We implement RoboCertProb in an accompanying tool of RoboChart, RoboTool, for specifying properties and automatically generating PRISM properties from them to formally verify RoboChart models using PRISM. We have used it to analyse the behaviour of software controllers for two real robots: an industrial painting robot and an agricultural robot for treating plants with UV lights.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Robochart: modelling and verification of the functional behaviour of robotic applications\",\n        \"Probabilistic modelling and verification using RoboChart and PRISM\",\n        \"RoboStar Technology: A Roboticist’s Toolbox for Combined Proof, Simulation, and Testing\",\n        \"Unifying Theories of Programming\",\n        \"Communicating Sequential Processes\",\n        \"Understanding Concurrent Systems\",\n        \"Probabilistic Semantics for RoboChart\",\n        \"Automated reasoning for probabilistic sequential programs with theorem proving\",\n        \"PRISM 4.0: Verification of probabilistic real-time systems\",\n        \"RoboCert: Property specification in robotics\",\n        \"Sound reasoning in tock-CSP\",\n        \"It usually works: The temporal logic of stochastic systems\",\n        \"Model checking of probabilistic and nondeterministic systems\",\n        \"On algorithmic verification methods for probabilistic systems\",\n        \"A Logic for Reasoning about Time and Reliability\",\n        \"The temporal logic of programs\",\n        \"“sometimes” and “not never” revisited: On branching versus linear time temporal logic\",\n        \"Design and synthesis of synchronization skeletons using branching time temporal logic\",\n        \"Denumerable Markov Chains\",\n        \"Dynamic Probabilistic Systems: Semi-Markov and decision processes\",\n        \"Markov Decision Processes: Discrete Stochastic Dynamic Programming. 1st edn.\",\n        \"The PRISM Language - Semantics\",\n        \"FDR3 - A Modern Refinement Checker for CSP\",\n        \"RoboChart Reference Manual\",\n        \"Safety Assurance of a High Voltage Controller for an Industrial Robotic System\",\n        \"Probabilistic modelling and safety assurance of an agriculture robot providing light-treatment\",\n        \"Assessing the probability of human injury during UV-C treatment of crops by robots\",\n        \"Patterns in property specifications for finite-state verification\",\n        \"Propel: an approach supporting property elucidation\",\n        \"Patterns For Timed Property Specifications\",\n        \"Specification patterns for probabilistic quality properties\",\n        \"Graphical scenarios for specifying temporal properties: an automated approach\",\n        \"Timed property sequence chart\",\n        \"Monitoring of probabilistic timed property sequence charts\",\n        \"On the Understandability of Temporal Properties Formalized in Linear Temporal Logic, Property Specification Patterns and Event Processing Language\",\n        \"Esper Reference\",\n        \"Rapid property specification and checking for model-based formalisms\",\n        \"Model Checking Programs\",\n        \"Cascading verification: an integrated method for domain-specific model checking\",\n        \"TimeLine Depiction: an approach to graphical notation for supporting temporal property specification\",\n        \"The model checker spin\",\n        \"Specifying Temporal Properties in UML Using Patterns: A Tool-Supported Approach\",\n        \"OCL Extended with Temporal Logic\",\n        \"Model Checking Requirements\",\n        \"NuSMV Version 2: An OpenSource Tool for Symbolic Model Checking\",\n        \"ARSENAL: Automatic Requirements Specification Extraction from Natural Language\",\n        \"Formal modelling of environment restrictions from natural-language requirements\",\n        \"A property specification pattern catalog for real-time system verification with UPPAAL\",\n        \"Symbolic Model Checking for Real-Time Systems\",\n        \"Verifying continuous time Markov chains\",\n        \"Using Z: specification, refinement, and proof\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in RoboCertProb: Property Specification for Probabilistic RoboChart Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}