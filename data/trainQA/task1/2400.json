{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: TextBox: A Unified, Modularized, and Extensible Framework for Text Generation\n\nPaper Abstract: Abstract In this paper, we release an open-source library, called TextBox, to provide a unified, modularized, and extensible text generation framework. TextBox aims to support a broad set of text generation tasks and models. In our library, we implement 21 text generation models on 9 benchmark datasets, covering the categories of VAE, GAN, and pretrained language models. Meanwhile, our library maintains sufficient modularity and extensibility by properly decomposing the model architecture, inference, and learning process into highly reusable modules, which allows users to easily incorporate new models into our framework. The above features make TextBox specially suitable for researchers and practitioners to quickly reproduce baseline models and develop new models. TextBox is implemented based on PyTorch, and released under Apache License 2.0 at the link https://github.com/RUCAIBox/TextBox.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Jointly measuring diversity and quality in text generation models\",\n        \"Generating sentences from a continuous space\",\n        \"Massive exploration of neural machine translation architectures\",\n        \"An estimate of an upper bound for the entropy of english\",\n        \"Report on the 11th iwslt evaluation campaign, iwslt 2014\",\n        \"Guiding neural machine translation decoding with external knowledge\",\n        \"Maximum-likelihood augmented discrete generative adversarial networks\",\n        \"Learning to generate product reviews from attributes\",\n        \"Maskgan: Better text generation via filling in the _______\",\n        \"English gigaword\",\n        \"Long text generation via adversarial training with leaked information\",\n        \"Texar: A modularized, versatile, and extensible toolkit for text generation\",\n        \"How (not) to train your generative model: Scheduled sampling, likelihood, adversary?\",\n        \"Marian: Fast neural machine translation in C++\",\n        \"OpenNMT: Open-source toolkit for neural machine translation\",\n        \"BART: denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"A diversity-promoting objective function for neural conversation models\",\n        \"Deep reinforcement learning for dialogue generation\",\n        \"Generating classical chinese poems via conditional variational autoencoder and adversarial training\",\n        \"Rouge: A package for automatic evaluation of summaries\",\n        \"Adversarial ranking for language generation\",\n        \"Microsoft coco: Common objects in context\",\n        \"Learning word vectors for sentiment analysis\",\n        \"Generating phrasal and sentential paraphrases: A survey of data-driven methods\",\n        \"ParlAI: A dialog research software platform\",\n        \"Plato dialogue system: A flexible conversational ai research platform\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Prophetnet: Predicting future n-gram for sequence-to-sequence pre-training\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Leveraging pre-trained checkpoints for sequence generation tasks\",\n        \"Get to the point: Summarization with pointer-generator networks\",\n        \"A hybrid convolutional variational autoencoder for text generation\",\n        \"Building end-to-end dialogue systems using generative hierarchical neural network models\",\n        \"Sequence to sequence learning with neural networks\",\n        \"Context-aware natural language generation with recurrent neural networks\",\n        \"Tensor2Tensor for neural machine translation\",\n        \"Attention is all you need\",\n        \"Diverse beam search for improved description of complex scenes\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Improved variational autoencoders for text modeling using dilated convolutions\",\n        \"Seqgan: Sequence generative adversarial nets with policy gradient\",\n        \"A survey of knowledge-enhanced text generation\",\n        \"Adversarial feature matching for text generation\",\n        \"Texygen: A benchmarking platform for text generation models\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in TextBox: A Unified, Modularized, and Extensible Framework for Text Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}