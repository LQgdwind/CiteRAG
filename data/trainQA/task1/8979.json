{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: : Making Small Language Models Better Procedural Knowledge Models for (Counterfactual) Planning\n\nPaper Abstract: Abstract Procedural planning, which entails decomposing a high-level goal into a sequence of temporally ordered steps, is an important yet intricate task for machines. It involves integrating common-sense knowledge to reason about complex contextualized situations that are often counterfactual, e.g. “scheduling a doctor’s appointment without a phone”. While current approaches show encouraging results using large language models (LLMs), they are hindered by drawbacks such as costly API calls and reproducibility issues. In this paper, we advocate planning using smaller language models. We present PlaSma, a novel two-pronged approach to endow small language models with procedural knowledge and (counterfactual) planning capabilities. More concretely, we develop symbolic procedural knowledge distillation to enhance the implicit knowledge in small language models and an inference-time algorithm to facilitate more structured and accurate reasoning. In addition, we introduce a novel task, Counterfactual Planning, that requires a revision of a plan to cope with a counterfactual situation. In both the original and counterfactual setting, we show that orders-of-magnitude smaller models (770M-11B parameters) can compete and often surpass their larger teacher models’ capabilities.111We make our dataset and code publicly available at: https://github.com/allenai/PlaSma\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Do as i can and not as i say: Grounding language in robotic affordances\",\n        \"On the dangers of stochastic parrots: Can language models be too big?\",\n        \"I2d2: Inductive knowledge distillation with neurologic and self-imitation\",\n        \"Language models are few-shot learners\",\n        \"Unsupervised learning of narrative event chains\",\n        \"Structured, flexible, and robust: benchmarking and improving large language models towards more human-like behavior in out-of-distribution reasoning tasks\",\n        \"Large language models are reasoning teachers\",\n        \"Towards decoding as continuous optimisation in neural machine translation\",\n        \"Lexically constrained decoding for sequence generation using grid beam search\",\n        \"Distilling step-by-step! outperforming larger language models with less training data and smaller model sizes\",\n        \"Language models as zero-shot planners: Extracting actionable knowledge for embodied agents\",\n        \"Visually-grounded planning without vision: Language models infer detailed plans from high-level instructions\",\n        \"Distill or annotate? cost-efficient fine-tuning of compact models\",\n        \"GeDi: Generative discriminator guided sequence generation\",\n        \"Controlled text generation as continuous optimization with multiple constraints\",\n        \"ROUGE: A package for automatic evaluation of summaries\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"NeuroLogic a*esque decoding: Constrained text generation with lookahead heuristics\",\n        \"NeuroLogic decoding: (un)supervised neural text generation with predicate logic constraints\",\n        \"Fantastically ordered prompts and where to find them: Overcoming few-shot prompt order sensitivity\",\n        \"Neuro-symbolic procedural planning with commonsense prompting\",\n        \"Language models of code are few-shot commonsense learners\",\n        \"Openai api pricing\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Directed beam search: Plug-and-play lexically constrained language generation\",\n        \"Incremental learning of procedural planning knowledge in challenging environments\",\n        \"True few-shot learning with language models\",\n        \"Virtualhome: Simulating household activities via programs\",\n        \"Back to the future: Unsupervised backprop-based decoding for counterfactual and abductive commonsense reasoning\",\n        \"Cold decoding: Energy-based constrained text generation with langevin dynamics\",\n        \"Improving language understanding by generative pre-training\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"proScript: Partially ordered scripts generation\",\n        \"What do large language models learn about scripts?\",\n        \"Scripts, plans and knowledge\",\n        \"Generating datasets with pretrained language models\",\n        \"Distilling multi-step reasoning capabilities of large language models into smaller models via semantic decompositions\",\n        \"A crowdsourced database of event sequence descriptions for the acquisition of high-quality script knowledge\",\n        \"Finetuned language models are zero-shot learners\",\n        \"Symbolic knowledge distillation: from general language models to commonsense models\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Understanding multimodal procedural knowledge by sequencing multimodal instructional manuals\",\n        \"FUDGE: Controlled text generation with future discriminators\",\n        \"Distilling script knowledge from large language models for constrained language planning\",\n        \"STar: Bootstrapping reasoning with reasoning\",\n        \"Bertscore: Evaluating text generation with BERT\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in : Making Small Language Models Better Procedural Knowledge Models for (Counterfactual) Planning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}