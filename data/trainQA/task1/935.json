{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A framework for step-wise explaining how to solve constraint satisfaction problems\n\nPaper Abstract: Abstract We explore the problem of step-wise explaining how to solve constraint satisfaction problems, with a use case on logic grid puzzles. More specifically, we study the problem of explaining the inference steps that one can take during propagation, in a way that is easy to interpret for a person. Thereby, we aim to give the constraint solver explainable agency, which can help in building trust in the solver by being able to understand and even learn from the explanations. The main challenge is that of finding a sequence of simple explanations, where each explanation should aim to be as cognitively easy as possible for a human to verify and understand. This contrasts with the arbitrary combination of facts and constraints that the solver may use when propagating. We propose the use of a cost function to quantify how simple an individual explanation of an inference step is, and identify the explanation-production problem of finding the best sequence of explanations of a CSP. Our approach is agnostic of the underlying constraint propagation mechanisms, and can provide explanations even for inference steps resulting from combinations of constraints. In case multiple constraints are involved, we also develop a mechanism that allows to break the most difficult steps up and thus gives the user the ability to zoom in on specific parts of the explanation. Our proposed algorithm iteratively constructs the explanation sequence by using an optimistic estimate of the cost function to guide the search for the best explanation at each step. Our experiments on logic grid puzzles show the feasibility of the approach in terms of the quality of the individual explanations and the resulting explanation sequences obtained.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"” why should i trust you?” explaining the predictions of any classifier\",\n        \"why should i trust you? explaining the predictions of any classifier\",\n        \"A unified approach to interpreting model predictions\",\n        \"Grad-cam: Visual explanations from deep networks via gradient-based localization\",\n        \"Peeking inside the black-box: A survey on explainable artificial intelligence (XAI)\",\n        \"A survey of methods for explaining black box models\",\n        \"Explainable artificial intelligence (XAI): Concepts, taxonomies, opportunities and challenges toward responsible AI\",\n        \"Handbook of Constraint Programming\",\n        \"Quickxplain: Conflict detection for arbitrary constraint propagation algorithms\",\n        \"Lazy clause generation reengineered\",\n        \"Conflict-driven clause learning sat solvers\",\n        \"Explaining explanations: An overview of interpretability of machine learning\",\n        \"Knowledge-based configuration: From research to business cases\",\n        \"User-oriented solving and explaining of natural language logic grid puzzles\",\n        \"Zebratutor: Explaining how to solve logic grid puzzles\",\n        \"Step-wise explanations of constraint satisfaction problems\",\n        \"Explainable agency for intelligent autonomous systems\",\n        \"Debugging unsatisfiable constraint models\",\n        \"Towards semi-automatic learning-based model transformation\",\n        \"Minimal unsatisfiability: Models, algorithms and applications\",\n        \"Explainable planning\",\n        \"Constraint propagation for first-order logic and inductive definitions\",\n        \"Progress towards the holy grail\",\n        \"Inference-based constraint satisfaction supports explanation\",\n        \"Solving logic grid puzzles with an algorithm that imitates human behavior\",\n        \"A fully automatic theorem prover with human-style output\",\n        \"Learning to prove theorems via interacting with proof assistants\",\n        \"Explaining robust additive utility models by sequences of preference swaps\",\n        \"A mathematical introduction to logic\",\n        \"Model expansion as a framework for modelling and solving search problems\",\n        \"The conflict-driven answer set solver clasp: Progress report\",\n        \"Predicate logic as a modeling language: the IDP system\",\n        \"On the complexity of model expansion\",\n        \"Building a large annotated corpus of english: The penn treebank\",\n        \"Master thesis: Automatic translation of logic grid puzzles into a typed logic\",\n        \"Representation and inference for natural language\",\n        \"Working with discourse representation theory\",\n        \"Discourse representation theory: What it is and where it ought to go\",\n        \"Puzzle Baron's logic puzzles\",\n        \"Enumerating infeasibility: Finding multiple muses quickly\",\n        \"Theory of quantified boolean formulas\",\n        \"Quantified maximum satisfiability\",\n        \"The KB paradigm and its application to interactive configuration\",\n        \"An interactive consultant\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in A framework for step-wise explaining how to solve constraint satisfaction problems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}