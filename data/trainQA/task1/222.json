{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Parallel and distributed asynchronous adaptive stochastic gradient methods\n\nPaper Abstract: Abstract Stochastic gradient methods (SGMs) are the predominant approaches to train deep learning models. The adaptive versions (e.g., Adam and AMSGrad) have been extensively used in practice, partly because they achieve faster convergence than the non-adaptive versions while incurring little overhead. On the other hand, asynchronous (async) parallel computing has exhibited significantly higher speed-up over its synchronous (sync) counterpart. Async-parallel non-adaptive SGMs have been well studied in the literature from the perspectives of both theory and practical performance. Adaptive SGMs can also be implemented without much difficulty in an async-parallel way. However, to the best of our knowledge, no theoretical result of async-parallel adaptive SGMs has been established. The difficulty for analyzing adaptive SGMs with async updates originates from the second moment term. In this paper, we propose an async-parallel adaptive SGM based on AMSGrad. We show that the proposed method inherits the convergence guarantee of AMSGrad for both convex and non-convex problems, if the staleness (also called delay) caused by asynchrony is bounded. Our convergence rate results indicate a nearly linear parallelization speed-up if œÑ=o‚Äã(K14)ùúèùëúsuperscriptùêæ14\\tau=o(K^{\\frac{1}{4}}), where œÑùúè\\tau is the staleness and KùêæK is the number of iterations. The proposed method is tested on both convex and non-convex machine learning problems, and the numerical results demonstrate its clear advantages over the sync counterpart and the async-parallel nonadaptive SGM. Keywords: stochastic gradient method, adaptive learning rate, deep learning Mathematics Subject Classification: 90C15, 65Y05, 68W15, 65K05\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Distributed delayed stochastic optimization\",\n        \"Asynchronous gradient push\",\n        \"Mindthestep-asyncpsgd: Adaptive asynchronous parallel stochastic gradient descent\",\n        \"Some aspects of parallel and distributed iterative algorithms‚Äîa survey\",\n        \"Libsvm: A library for support vector machines\",\n        \"Closing the generalization gap of adaptive gradient methods in training deep neural networks\",\n        \"On the convergence of a class of adam-type algorithms for non-convex optimization\",\n        \"A downsampled variant of imagenet as an alternative to the cifar datasets\",\n        \"Cinic-10 is not imagenet or cifar-10\",\n        \"Large scale distributed deep networks\",\n        \"Adaptive subgradient methods for online learning and stochastic optimization\",\n        \"Convergence analyses of online adam algorithm in convex setting and two-layer relu neural network\",\n        \"An asynchronous mini-batch algorithm for regularized stochastic optimization\",\n        \"Stochastic first-and zeroth-order methods for nonconvex stochastic programming\",\n        \"Delay compensated asynchronous adam algorithm for deep neural networks\",\n        \"Deep residual learning for image recognition\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"Adam: A method for stochastic optimization\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Improved asynchronous parallel optimization analysis for stochastic incremental methods\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Asynchronous parallel stochastic gradient for nonconvex optimization\",\n        \"Asynchronous decentralized parallel stochastic gradient descent\",\n        \"An asynchronous parallel stochastic coordinate descent algorithm\",\n        \"Distributed learning systems with first-order methods\",\n        \"Adaptive gradient methods with dynamic bound of learning rate\",\n        \"Perturbed iterate analysis for asynchronous stochastic optimization\",\n        \"Revisiting small batch training for deep neural networks\",\n        \"Dadam: A consensus-based distributed adaptive gradient method for online optimization\",\n        \"Robust stochastic approximation approach to stochastic programming\",\n        \"Arock: an algorithmic framework for asynchronous parallel coordinate updates\",\n        \"On the convergence of asynchronous parallel iteration with unbounded delays\",\n        \"Acceleration of stochastic approximation by averaging\",\n        \"Hogwild: A lock-free approach to parallelizing stochastic gradient descent\",\n        \"On the convergence of adam and beyond\",\n        \"A stochastic approximation method\",\n        \"Striving for simplicity: The all convolutional net\",\n        \"Adadelay: Delay adaptive distributed stochastic optimization\",\n        \"RMSProp: Divide the gradient by a running average of its recent magnitude\",\n        \"On the convergence proof of amsgrad and a new version\",\n        \"SAdam: A variant of adam for strongly convex functions\",\n        \"Error compensated quantized sgd and its applications to large-scale distributed optimization\",\n        \"A unified analysis of stochastic momentum methods for deep learning\",\n        \"Wide residual networks\",\n        \"On the convergence of adaptive gradient methods for nonconvex optimization\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Parallel and distributed asynchronous adaptive stochastic gradient methods, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}