{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FVCARE:Formal Verification of Security Primitives in Resilient Embedded SoCs\n\nPaper Abstract: Abstract With the increased utilization, the small embedded and IoT devices have become an attractive target for sophisticated attacks that can exploit the device’s security-critical information and data in malevolent activities. Secure boot and Remote Attestation (RA) techniques verifies the integrity of the device’s software state at boot-time and runtime. Correct implementation and formal verification of these security primitives provide strong security guarantees and enhance user confidence. The formal verification of these security primitives is considered challenging, as it involves complex hardware-software interactions, semantics gaps and requires bit-precise reasoning. To address these challenges, this paper presents FVCARE - an end-to-end system co-verification framework. It also defines the security properties for resilient small embedded systems. FVCARE divides the end-to-end system co-verification problem into two modules: 1) verifying the (bit precise) initial system settings, registers, and access control policies by hardware verification techniques, and 2) verifying the system specification, security properties, and functional correctness using source-level software abstraction of the hardware. The evaluation of proposed techniques on SRACARE based systems demonstrates its efficacy in security co-verification.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Bios and secure boot attacks uncovered\",\n        \"Stuxnet renews power grid security concerns\",\n        \"Man-in-the-middle Attack\",\n        \"Jeep hacking 101\",\n        \"Replay Attack\",\n        \"What is a denial of service attack (DoS) ?\",\n        \"Challenges and trends in modern soc design verification\",\n        \"Security policy enforcement in modern soc designs\",\n        \"A computational model for sat-based verification of hardware-dependent low-level embedded system software\",\n        \"Hw/sw co-verification of embedded systems using bounded model checking\",\n        \"Invited: Specification and modeling for systems-on-chip security verification\",\n        \"Hyperfuzzing for soc security validation\",\n        \"Formal verification of security critical hardware-firmware interactions in commercial socs\",\n        \"Formal techniques for effective co-verification of hardware/software co-designs\",\n        \"Formal security verification of concurrent firmware in socs using instruction-level abstraction for hardware*\",\n        \"VRASED: A verified hardware/software co-design for remote attestation\",\n        \"Verilog2smv: A tool for word-level verification\",\n        \"Nusmv 2: An opensource tool for symbolic model checking\",\n        \"TPM wiki\",\n        \"ftpm: A software-only implementation of a TPM chip\",\n        \"Opentitan: Secure boot SoC design\",\n        \"Keystone: A framework for architecting tees\",\n        \"Invited paper: Secure boot and remote attestation in the sanctum processor\",\n        \"Smarts: secure memory assurance of risc-v trusted soc\",\n        \"Lightweight secure-boot architecture for risc-v system-on-chip\",\n        \"UEFI DEFENSIVE PRACTICES GUIDANCE\",\n        \"Scuba: Secure code update by attestation in sensor networks\",\n        \"Secure code update for embedded devices via proofs of secure erasure\",\n        \"Care: Lightweight attack resilient secure boot architecture with onboard recovery for risc-v based soc\",\n        \"Sracare: Secure remote attestation with code authentication and resilience engine\",\n        \"Ironclad apps: End-to-end security via automated full-system verification\",\n        \"Dafny: An automatic program verifier for functional correctness\",\n        \"Z3: An efficient smt solver\",\n        \"Safe to the last instruction: Automated verification of a type-safe operating system\",\n        \"Boogie: A modular reusable verifier for object-oriented programs\",\n        \"Modeling the secure boot protocol using actor network theory\",\n        \"Automating information flow analysis of low level code\",\n        \"Verifying information flow properties of firmware using symbolic execution\",\n        \"How to break secure boot on fpga socs through malicious hardware\",\n        \"Symbolic model checking\",\n        \"Model checking\",\n        \"Bounded model checking\",\n        \"Guarded commands, nondeterminacy and formal derivation of programs\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in FVCARE:Formal Verification of Security Primitives in Resilient Embedded SoCs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}