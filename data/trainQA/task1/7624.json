{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Training Trajectories of Language Models Across Scales\n\nPaper Abstract: Abstract Scaling up language models has led to unprecedented performance gains, but little is understood about how the training dynamics change as models get larger. How do language models of different sizes learn during pre-training? Why do larger language models demonstrate more desirable behaviors? In this paper, we analyze the intermediate training checkpoints of differently sized OPT models Zhang et al. (2022)—from 125m to 175b parameters—on next-token prediction, sequence-level generation and downstream tasks. We find that 1) at a given perplexity and independent of model sizes, a similar subset of training tokens see the most significant reduction in loss, with the rest stagnating or showing double-descent behavior Nakkiran et al. (2020); 2) early in training, all models learn to reduce the perplexity of grammatical sequences that contain hallucinations, with small models halting at this suboptimal distribution and larger ones eventually learning to assign these sequences lower probabilities; and 3) perplexity is a strong predictor of in-context learning performance on 747474 multiple-choice tasks from BIG-Bench, and this holds independently of the model size. Together, these results show that perplexity is more predictive of model behaviors than model size or training computation.111Code is publicly available at https://github.com/xiamengzhou/training_trajectory_analysis.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Revisiting neural scaling laws in language and vision\",\n        \"Efficient large scale language modeling with mixtures of experts\",\n        \"On the role of bidirectionality in language model pre-training\",\n        \"Pythia: A suite for analyzing large language models across training and scaling\",\n        \"GPT-Neo: Large Scale Autoregressive Language Modeling with Mesh-Tensorflow\",\n        \"Analyzing the mono-and cross-lingual pretraining dynamics of multilingual language models\",\n        \"Improving language models by retrieving from trillions of tokens\",\n        \"Language models are few-shot learners\",\n        \"The grammar-learning trajectories of neural language models\",\n        \"Palm: Scaling language modeling with pathways\",\n        \"Switch transformers: Scaling to trillion parameter models with simple and efficient sparsity\",\n        \"Predictability and surprise in large generative models\",\n        \"The pile: An 800gb dataset of diverse text for language modeling\",\n        \"Cramming: Training a language model on a single gpu in one day\",\n        \"Scaling laws and interpretability of learning from repeated data\",\n        \"Scaling laws for transfer\",\n        \"Training compute-optimal large language models\",\n        \"The curious case of neural text degeneration\",\n        \"Scaling laws for neural language models\",\n        \"Generalization through memorization: Nearest neighbor language models\",\n        \"Rankgen: Improving text generation with large ranking models\",\n        \"Deduplicating training data makes language models better\",\n        \"Contrastive decoding: Open-ended text generation as optimization\",\n        \"Probing across time: What does roberta know and when?\",\n        \"Deep double descent: Where bigger models and more data hurt\",\n        \"A mechanistic interpretability analysis of grokking\",\n        \"In-context learning and induction heads\",\n        \"Inverse scaling prize: Round 1 winners\",\n        \"Mauve: Measuring the gap between neural text and human text using divergence frontiers\",\n        \"Grokking: Generalization beyond overfitting on small algorithmic datasets\",\n        \"Scaling language models: Methods, analysis & insights from training gopher\",\n        \"Compressive transformers for long-range sequence modelling\",\n        \"A mathematical exploration of why language models help solve downstream tasks\",\n        \"Bloom: A 176b-parameter open-access multilingual language model\",\n        \"What language model to train if you have one million gpu hours?\",\n        \"Are emergent abilities of large language models a mirage?\",\n        \"On the effect of pretraining corpora on in-context learning by a large-scale language model\",\n        \"Beyond the imitation game: Quantifying and extrapolating the capabilities of language models\",\n        \"Contrastive search is what you need for neural text generation\",\n        \"Fewer errors, but more stereotypes? the effect of model size on gender bias\",\n        \"Scaling laws vs model architectures: How does inductive bias influence scaling?\",\n        \"Scale efficiently: Insights from pretraining and finetuning transformers\",\n        \"Emergent abilities of large language models\",\n        \"Should you mask 15% in masked language modeling?\",\n        \"Opt: Open pre-trained transformer language models\",\n        \"Training language models with memory augmentation\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Training Trajectories of Language Models Across Scales, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}