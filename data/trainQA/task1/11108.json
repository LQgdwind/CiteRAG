{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FLEXIS: FLEXible Frequent Subgraph Mining using Maximal Independent Sets\n\nPaper Abstract: Abstract. Frequent Subgraph Mining (FSM) is the process of identifying common subgraph patterns that surpass a predefined frequency threshold. While FSM is widely applicable in fields like bioinformatics, chemical analysis, and social network anomaly detection, its execution remains time-consuming and complex. This complexity stems from the need to recognize high-frequency subgraphs and ascertain if they exceed the set threshold. Current approaches to identifying these patterns often rely on edge or vertex extension methods. However, these strategies can introduce redundancies and cause increased latency. To address these challenges, this paper introduces a novel approach for identifying potential kùëòk-vertex patterns by combining two frequently observed (k‚àí1)ùëò1(k-1)-vertex patterns. This method optimizes the breadth-first search, which allows for quicker search termination based on vertices count and support value. Another challenge in FSM is the validation of the presumed pattern against a specific threshold. Existing metrics, such as Maximum Independent Set (MIS) and Minimum Node Image (MNI), either demand significant computational time or risk overestimating pattern counts. Our innovative approach aligns with the MIS and identifies independent subgraphs. Through the ‚ÄúMaximal Independent Set‚Äù metric, this paper offers an efficient solution that minimizes latency and provides users with control over pattern overlap. Through extensive experimentation, our proposed method achieves an average of 10.58x speedup when compared to GraMi and an average 3x speedup when compared to T-FSM.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Emptyheaded: A relational engine for graph processing\",\n        \"Mining social networks for anomalies: Methods and challenges\",\n        \"What is frequent in a single graph?\",\n        \"The VF3-light subgraph isomorphism algorithm: when doing less is more effective\",\n        \"VF3-Light: a lightweight subgraph isomorphism algorithm and its experimental evaluation\",\n        \"Efficient and Scalable Graph Pattern Mining on {{\\\\{GPUs}}}\",\n        \"Sandslash: a two-level framework for efficient graph pattern mining\",\n        \"Pangolin: An efficient and flexible graph mining system on cpu and gpu\",\n        \"A first look at graph theory\",\n        \"Dimmining: pruning-efficient and parallel graph mining on near-memory-computing\",\n        \"Grami: Frequent subgraph and pattern mining in a single large graph\",\n        \"Support computation for mining frequent subgraphs in a single graph\",\n        \"Gpu-accelerated subgraph enumeration on partitioned graphs\",\n        \"Exploiting reuse for GPU subgraph enumeration\",\n        \"Peregrine: a pattern-aware graph mining system\",\n        \"A survey of frequent subgraph mining algorithms\",\n        \"Engineering an efficient canonical labeling tool for large and sparse graphs\",\n        \"Conflict Propagation and Component Recursion for Canonical Labeling\",\n        \"Graphs and Networks\",\n        \"Molecule generation by principal subgraph mining and assembling\",\n        \"An efficient algorithm for discovering frequent subgraphs\",\n        \"Finding frequent patterns in a large sparse graph\",\n        \"Mining weighted subgraphs in a single large graph\",\n        \"Predicting positive and negative links in online social networks\",\n        \"Signed networks in social media\",\n        \"Graph evolution: Densification and shrinking diameters\",\n        \"Community structure in large networks: Natural cluster sizes and the absence of large well-defined clusters\",\n        \"SATMargin: Practical Maximal Frequent Subgraph Mining via Margin Space Sampling\",\n        \"Classifying android malware through subgraph mining\",\n        \"Graphzero: A high-performance subgraph matching system\",\n        \"Automine: harmonizing high-level abstraction and high performance for graph mining\",\n        \"Grasping frequent subgraph mining for bioinformatics applications\",\n        \"A method for closed frequent subgraph mining in a single large graph\",\n        \"Fast and scalable algorithms for mining subgraphs in a single large graph\",\n        \"Subgraph mining in a large graph: A review\",\n        \"Trust management for the semantic web\",\n        \"Mapping the Gnutella network\",\n        \"RASMA: a reverse search algorithm for mining maximal frequent subgraphs\",\n        \"Graphpi: High performance graph pattern matching through effective redundancy elimination\",\n        \"CryptoMiniSat 5.6 with YalSAT at the SAT Race 2019\",\n        \"Arabesque: a system for distributed graph mining\",\n        \"Margin: Maximal frequent subgraph mining\",\n        \"gspan: Graph-based substructure pattern mining\",\n        \"A locality-aware energy-efficient accelerator for graph mining applications\",\n        \"T-FSM: A Task-Based System for Massively Parallel Frequent Subgraph Pattern Mining from a Big Graph\",\n        \"Kaleido: An efficient out-of-core graph mining system on A single machine\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in FLEXIS: FLEXible Frequent Subgraph Mining using Maximal Independent Sets, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}