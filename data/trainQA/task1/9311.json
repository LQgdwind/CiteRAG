{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Retrospective: Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors\n\nPaper Abstract: Abstract Our ISCA 2014 paper [1] provided the first scientific and detailed characterization, analysis, and real-system demonstration of what is now popularly known as the RowHammer phenomenon (or vulnerability) in modern commodity DRAM chips, which are used as main memory in almost all modern computing systems. It experimentally demonstrated that more than 80% of all DRAM modules we tested from the three major DRAM vendors were vulnerable to the RowHammer read disturbance phenomenon: one can predictably induce bitflips (i.e., data corruption) in real DRAM modules by repeatedly accessing a DRAM row and thus causing electrical disturbance to physically nearby rows. We showed that a simple unprivileged user-level program induced RowHammer bitflips in multiple real systems and suggested that a security attack can be built using this proof-of-concept to hijack control of the system or cause other harm. To solve the RowHammer problem, our paper examined seven different approaches (including a novel probabilistic approach that has very low cost), some of which influenced or were adopted in different industrial products. Many later works from various research communities examined RowHammer, building real security attacks, proposing new defenses, further analyzing the problem at various (e.g., device/circuit, architecture, and system) levels, and exploiting RowHammer for various purposes (e.g., to reverse-engineer DRAM chips). Industry has worked to mitigate the problem, changing both memory controllers and DRAM standards/chips. Two major DRAM vendors finally wrote papers on the topic in 2023, describing their current approaches to mitigate RowHammer. Research & development on RowHammer in both academia & industry continues to be very active and fascinating. This short retrospective provides a brief analysis of our ISCA 2014 paper and its impact. We describe the circumstances that led to our paper, mention its influence on later works and products, describe the mindset change we believe it has helped enable in hardware security, and discuss our predictions for future.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors\",\n        \"An Experimental Study of Data Retention Behavior in Modern DRAM Devices: Implications for Retention Time Profiling Mechanisms\",\n        \"SoftMC: A Flexible and Practical Open-Source Infrastructure for Enabling Experimental DRAM Studies\",\n        \"SoftMC Source Code\",\n        \"DRAM Bender: An Extensible and Versatile FPGA-based Infrastructure to Easily Test State-of-the-art DRAM Chips\",\n        \"DRAM Bender\",\n        \"Error Patterns in MLC NAND Flash Memory: Measurement, Characterization, and Analysis\",\n        \"Error Analysis and Retention-Aware Error Management for NAND Flash Memory\",\n        \"Program Interference in MLC NAND Flash Memory: Characterization, Modeling, and Mitigation\",\n        \"Read Disturb Errors in MLC NAND Flash Memory: Characterization, Mitigation, and Recovery\",\n        \"Error Characterization, Mitigation, and Recovery in Flash Memory Based Solid-State Drives\",\n        \"The RowHammer Problem and Other Issues we may Face as Memory Becomes Denser\",\n        \"RowHammer: A Retrospective\",\n        \"Fundamentally Understanding and Solving RowHammer\",\n        \"Security, Moore’s Law, and the Anomaly of Cheap Complexity\",\n        \"Exploiting the DRAM Rowhammer Bug to Gain Kernel Privileges\",\n        \"DeepSteal: Advanced Model Extractions Leveraging Efficient Weight Stealing in Memories\",\n        \"Jolt: Recovering TLS Signing Keys via Rowhammer Faults\",\n        \"Rowhammer.js: A Remote Software-Induced Fault Attack in Javascript\",\n        \"Drammer: Deterministic Rowhammer Attacks on Mobile Platforms\",\n        \"One Bit Flips, One Cloud Flops: Cross-VM Row Hammer Attacks and Privilege Escalation\",\n        \"Flip Feng Shui: Hammering a Needle in the Software Stack\",\n        \"Throwhammer: Rowhammer Attacks Over the Network and Defenses\",\n        \"Nethammer: Inducing Rowhammer Faults Through Network Requests\",\n        \"Exploiting Correcting Codes: On the Effectiveness of ECC Memory Against Rowhammer Attacks\",\n        \"SMASH: Synchronized Many-Sided Rowhammer Attacks from JavaScript\",\n        \"Blacksmith: Scalable Rowhammering in the Frequency Domain\",\n        \"RAMBleed: Reading Bits in Memory Without Accessing Them\",\n        \"Terminal Brain Damage: Exposing the Graceless Degradation in Deep Neural Networks Under Hardware Fault Attacks\",\n        \"Deephammer: Depleting the Intelligence of Deep Neural Networks Through Targeted Chain of Bit Flips\",\n        \"BlockHammer: Preventing RowHammer at Low Cost by Blacklisting Rapidly-Accessed DRAM Rows\",\n        \"ProTRR: Principled yet Optimal In-DRAM Target Row Refresh\",\n        \"SHADOW: Preventing Row Hammer in DRAM with Intra-Subarray Row Shuffling\",\n        \"CSI: Rowhammer–Cryptographic Security and Integrity against Rowhammer (to appear)\",\n        \"Revisiting RowHammer: An Experimental Analysis of Modern DRAM Devices and Mitigation Techniques\",\n        \"MemTest86: The Original Industry Standard Memory Diagnostic Utility\",\n        \"About the Security Content of Mac EFI Security Update 2015-001\",\n        \"TRRespass: Exploiting the Many Sides of Target Row Refresh\",\n        \"Thoughts on Intel Xeon E5-2600 v2 Product Family Performance Optimisation – Component Selection Guidelines\",\n        \"Uncovering In-DRAM RowHammer Protection Mechanisms: A New Methodology, Custom RowHammer Patterns, and Implications\",\n        \"JEP300-1: Near-Term DRAM Level RowHammer Mitigation\",\n        \"JEP301-1: System Level RowHammer Mitigation\",\n        \"A 1.1V 16Gb DDR5 DRAM with Probabilistic-Aggressor Tracking, Refresh-Management Functionality, Per-Row Hammer Tracking, a Multi-Step Precharge, and Core-Bias Modulation for Security and Reliability Enhancement\",\n        \"DSAC: Low-Cost Rowhammer Mitigation Using In-DRAM Stochastic and Approximate Counting Algorithm\",\n        \"Half-Double: Hammering From the Next Row Over\",\n        \"Are We Susceptible to Rowhammer? An End-to-End Methodology for Cloud Providers\",\n        \"MOESI-Prime: Preventing Coherence-Induced Hammering in Commodity Workloads\",\n        \"Panopticon: A Complete In-DRAM Rowhammer Mitigation\",\n        \"Stop! Hammer Time: Rethinking Our Approach to Rowhammer Mitigations\",\n        \"How to Configure Row-Sampling-Based Rowhammer Defenses\",\n        \"Memory Scaling: A Systems Architecture Perspective\",\n        \"A Deeper Look into RowHammer’s Sensitivities: Experimental Analysis of Real DRAM Chips and Implications on Future Attacks and Defenses\",\n        \"Understanding RowHammer Under Reduced Wordline Voltage: An Experimental Study Using Real DRAM Devices\",\n        \"RowPress: Amplifying Read Disturbance in Modern DRAM Chips\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Retrospective: Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}