{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: You too Brutus! Trapping Hateful Users in Social Media: Challenges, Solutions & Insights\n\nPaper Abstract: Abstract. Hate speech is regarded as one of the crucial issues plaguing the online social media. The current literature on hate speech detection leverages primarily the textual content to find hateful posts and subsequently identify hateful users. However, this methodology disregards the social connections between users. In this paper, we run a detailed exploration of the problem space and investigate an array of models ranging from purely textual to graph based to finally semi-supervised techniques using Graph Neural Networks (GNN) that utilize both textual and graph-based features. We run exhaustive experiments on two datasets – Gab111gab.com, which is loosely moderated and Twitter222twitter.com, which is strictly moderated. Overall the AGNN model achieves 0.791 macro F1-score on the Gab dataset and 0.780 macro F1-score on the Twitter dataset using only 5% of the labeled instances, considerably outperforming all the other models including the fully supervised ones. We perform detailed error analysis on the best performing text and graph based models and observe that hateful users have unique network neighborhood signatures and the AGNN model benefits by paying attention to these signatures. This property, as we observe, also allows the model to generalize well across platforms in a zero-shot setting. Lastly, we utilize the best performing GNN model to analyze the evolution of hateful users and their targets over time in Gab.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DocBERT: BERT for Document Classification\",\n        \"Deep Learning for Hate Speech Detection in Tweets\",\n        \"Graph neural networks with convolutional arma filters\",\n        \"A Survey on Network Embedding\",\n        \"Automated hate speech detection and the problem of offensive language\",\n        \"Hate Speech Dataset from a White Supremacy Forum\",\n        \"Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering\",\n        \"Hate speech detection with comment embeddings\",\n        \"Hate Lingo: A Target-based Linguistic Analysis of Hate Speech in Social Media\",\n        \"A survey on automatic detection of hate speech in text\",\n        \"Large scale crowdsourcing and characterization of twitter abusive behavior\",\n        \"A lexicon-based approach for hate speech detection\",\n        \"Naive learning in social networks and the wisdom of crowds\",\n        \"Learning Word Vectors for 157 Languages\",\n        \"The effect of an overheard ethnic slur on evaluations of the target: How to spread a social disease\",\n        \"node2vec: Scalable Feature Learning for Networks\",\n        \"Using a semi-automatic keyword dictionary for improving violent Web site filtering\",\n        \"Inductive representation learning on large graphs\",\n        \"Long Short-Term Memory\",\n        \"Transductive Inference for Text Classification using Support Vector Machines\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Distributed Representations of Sentences and Documents\",\n        \"New classification models for detecting Hate and Violence web content\",\n        \"Hate speech detection: Challenges and solutions\",\n        \"Spread of hate speech in online social media\",\n        \"Temporal effects of Unmoderated Hate speech in Gab\",\n        \"Hate begets Hate: A Temporal Study of Hate Speech\",\n        \"We know who you followed last summer: inferring social link creation times in twitter\",\n        \"Author Profiling for Abuse Detection\",\n        \"Weisfeiler and Leman Go Neural: Higher-order Graph Neural Networks\",\n        \"GloVe: Global Vectors for Word Representation\",\n        \"Deepwalk: Online learning of social representations\",\n        \"Leveraging Intra-User and Inter-User Representation Learning for Automated Hate Speech Detection\",\n        \"Software framework for topic modelling with large corpora\",\n        \"Characterizing and detecting hateful users on twitter\",\n        \"”Why Should I Trust You?”: Explaining the Predictions of Any Classifier\",\n        \"Ethical research standards in a world of big data\",\n        \"A web of hate: Tackling hateful speech in online social spaces\",\n        \"Anatomy of online hate: developing a taxonomy and machine learning models for identifying and classifying hate in online news media\",\n        \"A survey on hate speech detection using natural language processing\",\n        \"Attention-based graph neural network for semi-supervised learning\",\n        \"Graph Attention Networks\",\n        \"Detecting hate speech on the world wide web\",\n        \"Analysis of k-Fold Cross-Validation over Hold-Out Validation on Colossal Datasets for Quality Classification\",\n        \"Gnnexplainer: Generating explanations for graph neural networks\",\n        \"What is Gab: A Bastion of Free Speech or an Alt-Right Echo Chamber\",\n        \"Detecting hate speech on Twitter using a convolution-GRU based deep neural network\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in You too Brutus! Trapping Hateful Users in Social Media: Challenges, Solutions & Insights, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}