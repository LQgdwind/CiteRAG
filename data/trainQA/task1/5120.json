{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Collaborative Reflection-Augmented Autoencoder Network for Recommender Systems\n\nPaper Abstract: Abstract. As the deep learning techniques have expanded to real-world recommendation tasks, many deep neural network based Collaborative Filtering (CF) models have been developed to project user-item interactions into latent feature space, based on various neural architectures, such as multi-layer perceptron, auto-encoder and graph neural networks. However, the majority of existing collaborative filtering systems are not well designed to handle missing data. Particularly, in order to inject the negative signals in the training phase, these solutions largely rely on negative sampling from unobserved user-item interactions and simply treating them as negative instances, which brings the recommendation performance degradation. To address the issues, we develop a Collaborative Reflection-Augmented Autoencoder Network (CRANet), that is capable of exploring transferable knowledge from observed and unobserved user-item interactions. The network architecture of CRANet is formed of an integrative structure with a reflective receptor network and an information fusion autoencoder module, which endows our recommendation framework with the ability of encoding implicit userâ€™s pairwise preference on both interacted and non-interacted items. Additionally, a parametric regularization-based tied-weight scheme is designed to perform robust joint training of the two-stage CRANet model. We finally experimentally validate CRANet on four diverse benchmark datasets corresponding to two recommendation tasks, to show that debiasing the negative signals of user-item interactions improves the performance as compared to various state-of-the-art recommendation techniques. Our source code is available at https://github.com/akaxlh/CRANet.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graph convolutional matrix completion\",\n        \"Try This Instead: Personalized and Interpretable Substitute Recommendation\",\n        \"Joint neural collaborative filtering for recommender systems\",\n        \"Block-Aware Item Similarity Models for Top-N Recommendation\",\n        \"A comprehensive survey of neighborhood-based recommendation methods\",\n        \"Collaborative filtering with user-item co-autoregressive models\",\n        \"Collaborative filtering recommender systems\",\n        \"Deep adversarial social recommendation\",\n        \"Graph neural networks for social recommendation\",\n        \"Fairness-Aware Explainable Recommendation over Knowledge Graphs\",\n        \"LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation\",\n        \"Outer product-based neural collaborative filtering\",\n        \"NAIS: Neural attentive item similarity model for recommendation\",\n        \"Neural collaborative filtering\",\n        \"Online purchase prediction via multi-scale modeling of behavior dynamics\",\n        \"Knowledge-aware Coupled Graph Neural Network for Social Recommendation\",\n        \"Stacked robust adaptively regularized auto-regressions for domain adaptation\",\n        \"On autoencoder scoring\",\n        \"Factorization meets the neighborhood: a multifaceted collaborative filtering model\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"Local low-rank matrix approximation\",\n        \"How to impute missing ratings? Claims, solution, and its application to collaborative filtering\",\n        \"Product Quantized Collaborative Filtering\",\n        \"Variational autoencoders for collaborative filtering\",\n        \"Convolutional sparse autoencoders for image classification\",\n        \"Spectral regularization algorithms for learning large incomplete matrices\",\n        \"Probabilistic matrix factorization\",\n        \"Autoencoder-based collaborative filtering\",\n        \"Deep landscape forecasting for real-time bidding advertising\",\n        \"Restricted Boltzmann machines for collaborative filtering\",\n        \"Autorec: Autoencoders meet collaborative filtering\",\n        \"Session-based social recommendation via dynamic graph attention networks\",\n        \"Hybrid recommender system based on autoencoders\",\n        \"Collaborative filtering with stacked denoising autoencoders and sparse inputs\",\n        \"Sparse Data Recommendation by Fusing Continuous Imputation Denoising Autoencoder and Neural Matrix Factorization\",\n        \"Relational stacked denoising autoencoder for tag recommendation\",\n        \"Knowledge-aware graph neural networks with label smoothness regularization for recommender systems\",\n        \"Neural Graph Collaborative Filtering\",\n        \"Social Recommendation with Optimal Limited Attention\",\n        \"One-Class Collaborative Filtering with the Queryable Variational Autoencoder\",\n        \"Session-based recommendation with graph neural networks\",\n        \"Collaborative denoising auto-encoders for top-n recommender systems\",\n        \"Multiplex Behavioral Relation Learning for Recommendation via Memory Augmented Transformer Network\",\n        \"Knowledge-Enhanced Hierarchical Graph Transformer Network for Multi-Behavior Recommendation\",\n        \"Graph Meta Network for Multi-Behavior Recommendation\",\n        \"Relational Collaborative Filtering: Modeling Multiple Item Relations for Recommendation\",\n        \"Deep item-based collaborative filtering for top-n recommendation\",\n        \"Deep Matrix Factorization Models for Recommender Systems\",\n        \"Revisiting user mobility and social relationships in lbsns: A hypergraph embedding approach\",\n        \"Why not to use zero imputation? correcting sparsity bias in training neural networks\",\n        \"Discrete collaborative filtering\",\n        \"STAR-GCN: Stacked and Reconstructed Graph Convolutional Networks for Recommender Systems\",\n        \"Autosvd++: An efficient hybrid collaborative filtering model via contractive auto-encoders\",\n        \"Cross-Domain Recommendation via Preference Propagation GraphNet\",\n        \"A neural autoregressive approach to collaborative filtering\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Collaborative Reflection-Augmented Autoencoder Network for Recommender Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}