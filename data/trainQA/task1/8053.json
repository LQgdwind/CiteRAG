{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Reinforcement Learning for Block Decomposition of CAD Models\n\nPaper Abstract: Abstract We present a novel AI-assisted method for decomposing (segmenting) planar CAD (computer-aided design) models into well shaped rectangular blocks as a proof-of-principle of a general decomposition method applicable to complex 2D and 3D CAD models. The decomposed blocks are required for generating good quality meshes (tilings of quadrilaterals or hexahedra) suitable for numerical simulations of physical systems governed by conservation laws. The problem of hexahedral mesh generation of general CAD models has vexed researchers for over 3 decades and analysts often spend more than 50% of the design-analysis cycle time decomposing complex models into simpler parts meshable by existing techniques. Our method uses reinforcement learning to train an agent to perform a series of optimal cuts on the CAD model that result in a good quality block decomposition. We show that the agent quickly learns an effective strategy for picking the location and direction of the cuts and maximizing its rewards as opposed to making random cuts. This paper is the first successful demonstration of an agent autonomously learning how to perform this block decomposition task effectively thereby holding the promise of a viable method to automate this challenging process.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A transformation for extracting new descriptors of shape\",\n        \"Recurrent neural networks as optimal mesh refinement strategies\",\n        \"Application of Tensor Factorisation to Analyse Similarities in CAD Assembly Models\",\n        \"Geometric Deep Learning: Going Beyond Euclidean data\",\n        \"Neural Networks Based Mesh Generation Method in 2-D\",\n        \"The Cubit Geometry and Mesh Generation Toolkit\",\n        \"On the use of machine learning to defeature CAD models for simulation\",\n        \"Computing Direction Fields for Quad Mesh Generation\",\n        \"Fast Graph Representation Learning with PyTorch Geometric\",\n        \"SplineCNN: Fast Geometric Deep Learning with Continuous B-Spline Kernels\",\n        \"Transfinite mappings and their application to grid generation\",\n        \"Soft Actor-Critic: Off-Policy Maximum Entropy Deep Reinforcement Learning with a Stochastic Actor\",\n        \"Reinforcement Cutting-Agent Learning for Video Object Segmentation\",\n        \"Machine Learning-based optimal mesh generation in computational fluid dynamics\",\n        \"Recognition of Form Features Using Convex Decomposition\",\n        \"Modeling 3D Shapes by Reinforcement Learning\",\n        \"Evaluation of user-guided semi-automatic decomposition tool for hexahedral mesh generation\",\n        \"Volume Decomposition and Feature Recognition for Hexahedral Mesh Generation\",\n        \"Finite–Element Mesh Generation Using Self–Organizing Neural Networks\",\n        \"A Multiple Source and Target Sweeping Method for Generating All Hexahedral Finite Element Meshes\",\n        \"Human-level control through deep reinforcement learning\",\n        \"OpenCascade Technology, 7.7.0dev\",\n        \"An Introduction to Automatic Mesh Generation Algorithms\",\n        \"CAD defeaturing using machine learning\",\n        \"Distortion Energy for Deep Learning-Based Volumetric Finite Element Mesh Generation for Aortic Valves\",\n        \"Reinforcement learning for automatic quadrilateral mesh generation: a soft actor-critic approach\",\n        \"A self-learning finite element extraction system based on reinforcement learning\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Hexahedral mesh generation by medial surface subdivision: part I. Solids with convex edges\",\n        \"A deep learning approach to the classification of 3D CAD models\",\n        \"A Reinforcement Learning Framework for Medical Image Segmentation\",\n        \"Unststructured and Semi-Structured Hexahedral Mesh Generation Methods\",\n        \"Automatic Three-Dimensional Mesh Generation by the Finite Octree Technique\",\n        \"Methods for Multisweep Automation\",\n        \"A Knowledge-Based Mesh Generation System for Forging Simulation\",\n        \"Point cloud segmentation with deep reinforcement learning\",\n        \"Back to Elements - Tetrahedra vs Hexahedra\",\n        \"Sheet operation based block decomposition of solid models for hex meshing\",\n        \"Dynamic Face Video Segmentation via Reinforcement Learning\",\n        \"CCSweep: automatic decomposition of multi-sweep volumes\",\n        \"Automatic Scheme Selection for Toolkit Hex Meshing\",\n        \"Fuzzy Clustering based pseudo-swept volume decomposition for hexahedral meshing\",\n        \"DeepCAD: A deep generative network for computer-aided design models\",\n        \"A mesh optimization method using machine learning technique and variational mesh adaptation\",\n        \"Reinforcement Learning for Adaptive Mesh Refinement\",\n        \"MeshingNet: A New Mesh Generation Method based on Deep Learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Reinforcement Learning for Block Decomposition of CAD Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}