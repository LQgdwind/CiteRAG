{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accelerating Iterated Persistent Homology Computations with Warm Starts\n\nPaper Abstract: Abstract Persistent homology is a topological feature used in a variety of applications such as generating features for data analysis and penalizing optimization problems. We develop an approach to accelerate persistent homology computations performed on many similar filtered topological spaces which is based on updating associated matrix factorizations. Our approach improves the update scheme of Cohen-Steiner, Edelsbrunner, and Morozov for permutations by additionally handling addition and deletion of cells in a filtered topological space and by processing changes in a single batch. We show that the complexity of our scheme scales with the number of elementary changes to the filtration which as a result is often less expensive than the full persistent homology computation. Finally, we perform computational experiments demonstrating practical speedups in several situations including feature generation and optimization guided by persistent homology.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Stanford 3D Scanning Repository\",\n        \"Volvis repository (archived)\",\n        \"Topological data analysis for image tampering detection\",\n        \"Beyond deep residual learning for image restoration: Persistent homology-guided manifold simplification\",\n        \"Ripser: efficient computation of vietoris–rips persistence barcodes\",\n        \"Distributed computation of persistent homology\",\n        \"Clear and compress: Computing persistent homology in chunks\",\n        \"Phat – persistent homology algorithms toolbox\",\n        \"The Simplex Tree: An Efficient Data Structure for General Simplicial Complexes\",\n        \"Exposition and interpretation of the topology of neural networks\",\n        \"A topology layer for machine learning\",\n        \"Integration of element specific persistent homology and machine learning for protein-ligand binding affinity prediction\",\n        \"Topology and data\",\n        \"Zigzag persistence\",\n        \"Persistent and Zigzag Homology: A Matrix Factorization Viewpoint\",\n        \"PersLay: A neural network layer for persistence diagrams and new graph topological signatures\",\n        \"Persistent homology computation with a twist\",\n        \"A topological regularizer for classifiers via persistent homology\",\n        \"Vines and vineyards by updating persistence in linear time\",\n        \"Dualities in persistent (co)homology\",\n        \"Improved image classification using topological persistence\",\n        \"Group Representations in Probability and Statistics\",\n        \"Computational Topology - an Introduction\",\n        \"Topological persistence and simplification\",\n        \"Repositioning of 8565 existing drugs for covid-19\",\n        \"A topological ”reading” lesson: Classification of mnist using tda\",\n        \"SNOPT: An SQP algorithm for large-scale constrained optimization\",\n        \"Maintaining LU factors of a general sparse matrix\",\n        \"Two’s company, three (or more) is a simplex: Algebraic-topological tools for understanding higher-order structure in neural data\",\n        \"Matroid Filtrations and Computational Persistent Homology\",\n        \"Efficient topological layer based on persistent landscapes\",\n        \"MNIST handwritten digit database\",\n        \"A framework for differential calculus on persistence barcodes\",\n        \"The gudhi library: Simplicial complexes and persistent homology\",\n        \"Zigzag persistent homology in matrix multiplication time\",\n        \"Morse theory for filtrations and efficient computation of persistent homology\",\n        \"Dionysus2\",\n        \"Volume-Optimal Cycle: Tightest Representative Cycle of a Generator in Persistent Homology\",\n        \"A roadmap for the computation of persistent homology\",\n        \"Persistence Theory: From Quiver Representations to Data Analysis, vol. 209 of Mathematical Surveys and Monographs\",\n        \"Topological function optimization for continuous shape matching\",\n        \"Fast and accurate tumor segmentation of histology images using persistent homology and deep convolutional features\",\n        \"A sparsity-exploiting variant of the bartels—golub decomposition for linear programming bases\",\n        \"LUSOL: Sparse LU factorization and updating for Ax = b\",\n        \"A fast and robust method for global topological functional optimization\",\n        \"HYPHA: a framework based on separation of parallelisms to accelerate persistent homology matrix reduction\",\n        \"Gpu-accelerated computation of vietoris-rips persistence barcodes\",\n        \"Computing persistent homology\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Accelerating Iterated Persistent Homology Computations with Warm Starts, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}