{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scalable, Interpretable Distributed Protocol Verification by Inductive Proof Slicing\n\nPaper Abstract: Abstract. Many techniques for automated inference of inductive invariants for distributed protocols have been developed over the past several years, but their performance can still be unpredictable and their failure modes opaque for large-scale verification tasks. In this paper, we present inductive proof slicing, a new automated, compositional technique for inductive invariant inference that scales effectively to large distributed protocol verification tasks. Our technique is built on a core, novel data structure, the inductive proof graph, which explicitly represents the lemma and action dependencies of an inductive invariant and is built incrementally during the inference procedure, backwards from a target safety property. We present an invariant inference algorithm that integrates localized syntax-guided lemma synthesis routines at nodes of this graph, which are accelerated by computation of localized grammar and state variable slices. Additionally, in the case of failure to produce a complete inductive invariant, maintenance of this proof graph structure allows failures to be localized to small sub-components of this graph, enabling fine-grained failure diagnosis and repair by a user. We evaluate our technique on several complex distributed and concurrent protocols, including a large scale specification of the Raft consensus protocol, which is beyond the capabilities of modern distributed protocol verification tools, and also demonstrate how its interpretability features allow effective diagnosis and repair in cases of initial failure.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mocha: Modularity in model checking\",\n        \"Learning support sets in IC3 and Quip: The good, the bad, and the ugly\",\n        \"Bounded model checking\",\n        \"Formal Specification and Model Checking of the Tendermint Blockchain Synchronization Protocol (Short Paper)\",\n        \"Learning assumptions for compositional verification\",\n        \"Spanner: Google’s Globally-Distributed Database\",\n        \"TLA+ Proofs\",\n        \"The Daikon system for dynamic detection of likely invariants\",\n        \"Inductive Data Flow Graphs\",\n        \"Accelerating Syntax-Guided Invariant Synthesis\",\n        \"Houdini, an Annotation Assistant for ESC/Java\",\n        \"On Symmetry and Quantification: A New Approach to Verify Distributed Protocols\",\n        \"Towards an Automatic Proof of Lamport’s Paxos\",\n        \"The Right Tools for the Job: Correctness of Cone of Influence Reduction Proved Using ACL2 and HOL4\",\n        \"Notes on data base operating systems\",\n        \"Pushing to the top\",\n        \"Finding Invariants of Distributed Systems: It’s a Small (Enough) World After All\",\n        \"The model checker SPIN\",\n        \"TiDB: A Raft-Based HTAP Database\",\n        \"Path-sensitive backward slicing\",\n        \"Path slicing\",\n        \"Property-Directed Inference of Universal Invariants or Proving Their Absence\",\n        \"Hermes: A fast, fault-tolerant and linearizable replication protocol\",\n        \"Zeus: Locality-aware distributed transactions\",\n        \"First-Order Quantified Separators\",\n        \"Inferring Invariants with Quantifier Alternations: Taming the Search Space Explosion\",\n        \"A New Solution of Dijkstra’s Concurrent Programming Problem\",\n        \"Paxos made simple\",\n        \"Specifying Systems: The TLA+ Language and Tools for Hardware and Software Engineers\",\n        \"Using TLC to Check Inductive Invariance\",\n        \"Sift: Using Refinement-guided Automation to Verify Complex Distributed Systems\",\n        \"Temporal Verification of Reactive Systems: Safety\",\n        \"A methodology for hardware verification using compositional model checking\",\n        \"Consensus: Bridging Theory and Practice\",\n        \"In Search of an Understandable Consensus Algorithm\",\n        \"Decidability of Inferring Inductive Invariants\",\n        \"Ivy: Safety Verification by Interactive Generalization\",\n        \"Formal Verification of a Distributed Dynamic Reconfiguration Protocol\",\n        \"Plain and Simple Inductive Invariant Inference for Distributed Protocols in TLA+\",\n        \"From Invariant Checking to Invariant Inference Using Randomized Search\",\n        \"CockroachDB: The Resilient Geo-Distributed SQL Database\",\n        \"Modularity for decidability of deductive verification with applications to distributed systems\",\n        \"A survey of program slicing techniques\",\n        \"raft-tlaplus: A TLA+ specification of the Raft distributed consensus algorithm\",\n        \"Verdi: a framework for implementing and formally verifying distributed systems\",\n        \"Planning for Change in a Formal Verification of the Raft Consensus Protocol\",\n        \"DuoAI: Fast, Automated Inference of Inductive Invariants for Verifying Distributed Protocols\",\n        \"DistAI: Data-Driven Automated Invariant Learning for Distributed Protocols\",\n        \"Model Checking TLA+ Specifications\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Scalable, Interpretable Distributed Protocol Verification by Inductive Proof Slicing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}