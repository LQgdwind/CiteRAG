{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1xN Pattern for Pruning Convolutional Neural Networks\n\nPaper Abstract: Abstract Though network pruning receives popularity in reducing the complexity of convolutional neural networks (CNNs), it remains an open issue to concurrently maintain model accuracy as well as achieve significant speedups on general CPUs. In this paper, we propose a novel 1×\\timesN pruning pattern to break this limitation. In particular, consecutive N output kernels with the same input channel index are grouped into one block, which serves as a basic pruning granularity of our pruning pattern. Our 1×\\timesN pattern prunes these blocks considered unimportant. We also provide a workflow of filter rearrangement that first rearranges the weight matrix in the output channel dimension to derive more influential blocks for accuracy improvements and then applies similar rearrangement to the next-layer weights in the input channel dimension to ensure correct convolutional operations. Moreover, the output computation after our 1×\\timesN pruning can be realized via a parallelized block-wise vectorized operation, leading to significant speedups on general CPUs. The efficacy of our pruning pattern is proved with experiments on ILSVRC-2012. For example, given the pruning rate of 50% and N=4, our pattern obtains about 3.0% improvements over filter pruning in the top-1 accuracy of MobileNet-V2. Meanwhile, it obtains 56.04ms inference savings on Cortex-A7 CPU over weight pruning. Our project is made available at https://github.com/lmbxmu/1xN.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep learning face representation by joint identification-verification\",\n        \"Deep residual learning for image recognition\",\n        \"Character-aware neural language models\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Rigging the lottery: Making all tickets winners\",\n        \"Pruning convolutional neural networks for resource efficient inference\",\n        \"Nvidia a100 tensor core gpu: Performance and innovation\",\n        \"Learning n:m fine-grained structured sparse neural networks from scratch\",\n        \"Accelerated sparse neural training: A provable and efficient method to find n: M transposable masks\",\n        \"Accelerating sparse deep neural networks\",\n        \"Comparing rewinding and fine-tuning in neural network pruning\",\n        \"Pruning filters for efficient convnets\",\n        \"Metapruning: Meta learning for automatic neural network channel pruning\",\n        \"Dmcp: Differentiable markov channel pruning for neural networks\",\n        \"Hrank: Filter pruning using high-rank feature map\",\n        \"Rethinking the value of network pruning\",\n        \"Network pruning that matters: A case study on retraining variants\",\n        \"Exploring the granularity of sparsity in convolutional neural networks\",\n        \"Discovering neural wirings\",\n        \"Exploring randomly wired neural networks for image recognition\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Searching for mobilenetv3\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Optimal brain damage\",\n        \"Second order derivatives for network pruning: Optimal brain surgeon\",\n        \"Learning to prune deep neural networks via layer-wise optimal brain surgeon\",\n        \"Dynamic network surgery for efficient dnns\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Dynamic model pruning with feedback\",\n        \"Soft filter pruning for accelerating deep convolutional neural networks\",\n        \"Approximated oracle filter pruning for destructive cnn width optimization\",\n        \"Channel pruning via automatic structure search\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Variational dropout sparsifies deep neural networks\",\n        \"Channel permutations for n: m sparsity\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Blocked-based sparse matrix-vector multiplication on distributed memory parallel computers.\",\n        \"Tvm: An automated end-to-end optimizing compiler for deep learning\",\n        \"Ansor: Generating high-performance tensor programs for deep learning\",\n        \"Google llc. tensorflow lite\",\n        \"Tetris: Tile-matching the tremendous irregular sparsity\",\n        \"Block-sparse recurrent neural networks\",\n        \"Efficient neural audio synthesis\",\n        \"Fast sparse convnets\",\n        \"Hierarchical block sparse neural networks\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in 1xN Pattern for Pruning Convolutional Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}