{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AutoSparse: Towards Automated Sparse Training of Deep neural Networks\n\nPaper Abstract: Abstract Sparse training is emerging as a promising avenue for reducing the computational cost of training neural networks. Several recent studies have proposed pruning methods using learnable thresholds to efficiently explore the non-uniform distribution of sparsity inherent within the models. In this paper, we propose Gradient Annealing (GA), where gradients of masked weights are scaled down in a non-linear manner. GA provides an elegant trade-off between sparsity and accuracy without the need for additional sparsity-inducing regularization. We integrated GA with the latest learnable pruning methods to create an automated sparse training algorithm called AutoSparse, which achieves better accuracy and/or training/inference FLOPS reduction than existing learnable pruning methods for sparse ResNet50 and MobileNetV1 on ImageNet-1K: AutoSparse achieves (2×2\\times, 7×7\\times) reduction in (training,inference) FLOPS for ResNet50 on ImageNet at 80%percent8080\\% sparsity. Finally, AutoSparse outperforms sparse-to-sparse SotA method MEST (uniform sparsity) for 80%percent8080\\% sparse ResNet50 with similar accuracy, where MEST uses 12%percent1212\\% more training FLOPS and 50%percent5050\\% more inference FLOPS.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"AI and Compute\",\n        \"Empirically Characterizing Overparameterization Impact on Convergence\",\n        \"On the optimization of deep networks: Implicit acceleration by overparameterization\",\n        \"Learned Threshold Pruning\",\n        \"Reconciling modern machine-learning practice and the classical bias-variance trade-off\",\n        \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n        \"Mixed precision training of convolutional neural networks using integer operations\",\n        \"A large-scale hierarchical image database\",\n        \"Sparse Networks from Scratch: Faster Training without Losing Performance\",\n        \"Rigging the Lottery: Making All Tickets Winners\",\n        \"GRADMAX: Growing Neural Networks Using Gradient Information\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"The State of Sparsity in Deep Neural Networks\",\n        \"Dynamic Network Surgery for Efficient DNNs\",\n        \"GDP: Stabilized Neural Network Pruning via Gates with Differentiable Polarization\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Deep residual learning for image recognition\",\n        \"Sparsity in Deep Learning: Pruning and growth for efficient inference and training in neural networks\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Top-KAST: Top-K Always Sparse Training\",\n        \"A study of bfloat16 for deep learning training\",\n        \"Soft Threshold Weight Reparameterization for Learnable Sparsity\",\n        \"SNIP: Single-shot Network Pruning based on Connection Sensitivity\",\n        \"Train Big, Then Compress: Rethinking Model Size for Efficient Training and Inference of Transformers\",\n        \"Dynamic model pruning with feedback\",\n        \"Dynamic Sparse Training: Find Efficient Sparse Network from Scratch with Trainable Masked Layers\",\n        \"Mixed precision training with 8-bit floating point\",\n        \"Mixed precision training\",\n        \"Accelerating Sparse Deep Neural Networks\",\n        \"Scalable training of artificial neural networks with adaptive sparse connectivity inspired by network science\",\n        \"Parameter Efficient Training of Deep Convolutional Neural Networks by Dynamic Sparse Reparameterization\",\n        \"Exploring sparsity in recurrent neural networks\",\n        \"Sparse Weight Activation Training\",\n        \"Winning the Lottery with Continuous Sparsification\",\n        \"Powerpropagation: A sparsity inducing weight reparameterisation\",\n        \"Sparse Connection And Pruning In Large Dynamic Artificial Neural Networks\",\n        \"Hybrid 8-bit Floating Point (HFP8) Training and Inference for Deep Neural Networks\",\n        \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n        \"Automatic Sparse Connectivity Learning for Neural Networks\",\n        \"Single shot structured pruning before training\",\n        \"Attention Is All You Need\",\n        \"PICKING WINNING TICKETS BEFORE TRAINING BY PRESERVING GRADIENT FLOW\",\n        \"Training Deep Neural Networks with 8-bit Floating Point Numbers\",\n        \"Discovering neural wirings\",\n        \"MEST: Accurate and Fast Memory-Economic Sparse Training Framework on the Edge\",\n        \"Optimizing Gradient-driven Criteria in Network Sparsity: Gradient is All You Need\",\n        \"To prune, or not to prune: exploring the efficacy of pruning for model compression\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in AutoSparse: Towards Automated Sparse Training of Deep neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}