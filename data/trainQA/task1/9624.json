{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Model Adaptation for Continual Learning at the Edge\n\nPaper Abstract: Abstract Most machine learning (ML) systems assume stationary and matching data distributions during training and deployment. This is often a false assumption. When ML models are deployed on real devices, data distributions often shift over time due to changes in environmental factors, sensor characteristics, and task-of-interest. While it is possible to have a human-in-the-loop to monitor for distribution shifts and engineer new architectures in response to these shifts, such a setup is not cost-effective. Instead, non-stationary automated ML (AutoML) models are needed. This paper presents the Encoder-Adaptor-Reconfigurator (EAR) framework for efficient continual learning under domain shifts. The EAR framework uses a fixed deep neural network (DNN) feature encoder and trains shallow networks on top of the encoder to handle novel data. The EAR framework is capable of 1) detecting when new data is out-of-distribution (OOD) by combining DNNs with hyperdimensional computing (HDC), 2) identifying low-parameter neural adaptors to adapt the model to the OOD data using zero-shot neural architecture search (ZS-NAS), and 3) minimizing catastrophic forgetting on previous tasks by progressively growing the neural architecture as needed and dynamically routing data through the appropriate adaptors and reconfigurators for handling domain-incremental and class-incremental continual learning. We systematically evaluate our approach on several benchmark datasets for domain adaptation and demonstrate strong performance compared to state-of-the-art algorithms for OOD detection and few-/zero-shot NAS.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A continual learning survey: Defying forgetting in classification tasks\",\n        \"Three types of incremental learning\",\n        \"Hyperdimensional computing: An introduction to computing in distributed representation with high-dimensional random vectors\",\n        \"Neural architecture search without training\",\n        \"Progressive neural networks\",\n        \"Progressive learning: A deep learning framework for continual learning\",\n        \"Lifelong machine learning\",\n        \"Lifelong learning with dynamically expandable networks\",\n        \"Compacting, picking and growing for unforgetting continual learning\",\n        \"Learn to grow: A continual structure learning framework for overcoming catastrophic forgetting\",\n        \"Robust continual learning through a comprehensively progressive bayesian neural network\",\n        \"Generalized out-of-distribution detection: A survey\",\n        \"Novelty detection: a reviewâ€”part 1: statistical approaches\",\n        \"One-class svms for document classification\",\n        \"Multivariate outlier detection and robust covariance matrix estimation\",\n        \"Lof: identifying density-based local outliers\",\n        \"Isolation forest\",\n        \"Isolation-based anomaly detection\",\n        \"A baseline for detecting misclassified and out-of-distribution examples in neural networks\",\n        \"Detecting out-of-distribution examples with gram matrices\",\n        \"Hyperdimensional feature fusion for out-of-distribution detection\",\n        \"Out-of-distribution detection with deep nearest neighbors\",\n        \"A theoretical perspective on hyperdimensional computing\",\n        \"A survey on hyperdimensional computing aka vector symbolic architectures, part i: Models and data transformations\",\n        \"A comprehensive survey on transfer learning\",\n        \"Neural architecture search: A survey\",\n        \"Zero-cost proxies for lightweight nas\",\n        \"Nas-bench-zero: A large scale dataset for understanding zero-shot neural architecture search\",\n        \"Snip: Single-shot network pruning based on connection sensitivity\",\n        \"Picking winning tickets before training by preserving gradient flow\",\n        \"Blockswap: Fisher-guided block substitution for network compression on a budget\",\n        \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n        \"Zen-nas: A zero-shot nas for high-performance image recognition\",\n        \"Focal loss for dense object detection\",\n        \"Probability models for open set recognition\",\n        \"The Weibull distribution: a handbook\",\n        \"Practical bayesian optimization of machine learning algorithms\",\n        \"Bayesian Optimization: Open source constrained global optimization tool for Python\",\n        \"On the robustness of a simple domain reduction scheme for simulation-based optimization\",\n        \"Understanding and accelerating neural architecture search with training-free and theory-grounded metrics\",\n        \"Eigenvalues of the laplacian and their relationship to the connectedness of a graph\",\n        \"A tutorial on spectral clustering\",\n        \"Simple, direct and efficient multi-way spectral clustering\",\n        \"Information theoretic measures for clusterings comparison: is a correction for chance necessary?\",\n        \"Efficientnetv2: Smaller models and faster training\",\n        \"Adam: A method for stochastic optimization\",\n        \"Supervised contrastive learning\",\n        \"Deeper, broader and artier domain generalization\",\n        \"Adapting visual category models to new domains\",\n        \"Deep hashing network for unsupervised domain adaptation\",\n        \"Moment matching for multi-source domain adaptation\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Efficient Model Adaptation for Continual Learning at the Edge, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}