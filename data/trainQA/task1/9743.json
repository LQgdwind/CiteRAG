{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 41 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: IncreLoRA: Incremental Parameter Allocation Method for Parameter-Efficient Fine-tuning\n\nPaper Abstract: Abstract With the increasing size of pre-trained language models (PLMs), fine-tuning all the parameters in the model is not efficient, especially when there are a large number of downstream tasks, which incur significant training and storage costs. Many parameter-efficient fine-tuning (PEFT) approaches have been proposed, among which, Low-Rank Adaptation (LoRA) is a representative approach that injects trainable rank decomposition matrices into every target module. Yet LoRA ignores the importance of parameters in different modules. To address this problem, many works have been proposed to prune the parameters of LoRA. However, under limited training conditions, the upper bound of the rank of the pruned parameter matrix is still affected by the preset values. We, therefore, propose IncreLoRA, an incremental parameter allocation method that adaptively adds trainable parameters during training based on the importance scores of each module. This approach is different from the pruning method as it is not limited by the initial number of training parameters, and each parameter matrix has a higher rank upper bound for the same training overhead. We conduct extensive experiments on GLUE to demonstrate the effectiveness of IncreLoRA. The results show that our method owns higher parameter efficiency, especially when under the low-resource settings where our method significantly outperforms the baselines. Our code is publicly available.111https://github.com/FeiyuZhang98/IncreLoRA\n\n{retrieved_text}\n\nGenerate exactly 41 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 41\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Composable Sparse Fine-Tuning for Cross-Lingual Transfer\",\n        \"Parameter-Efficient Masking Networks\",\n        \"Language Models are Few-Shot Learners\",\n        \"Parameter-Efficient Fine-Tuning Design Spaces\",\n        \"QLoRA: Efficient Finetuning of Quantized LLMs\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"DeCAF: A Deep Convolutional Activation Feature for Generic Visual Recognition\",\n        \"Cross-Attention is All You Need: Adapting Pretrained Transformers for Machine Translation\",\n        \"Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour\",\n        \"Parameter-Efficient Transfer Learning with Diff Pruning\",\n        \"Towards a Unified View of Parameter-Efficient Transfer Learning\",\n        \"DeBERTaV3: Improving DeBERTa using ELECTRA-Style Pre-Training with Gradient-Disentangled Embedding Sharing\",\n        \"SparseAdapter: An Easy Approach for Improving the Parameter-Efficiency of Adapters\",\n        \"Parameter-Efficient Transfer Learning for NLP\",\n        \"LoRA: Low-Rank Adaptation of Large Language Models\",\n        \"Neural Architecture Search for Parameter-Efficient Fine-tuning of Large Pre-trained Language Models\",\n        \"The Power of Scale for Parameter-Efficient Prompt Tuning\",\n        \"Prefix-Tuning: Optimizing Continuous Prompts for Generation\",\n        \"RoBERTa: A Robustly Optimized BERT Pretraining Approach\",\n        \"Compacter: Efficient Low-Rank Hypercomplex Adapter Layers\",\n        \"UniPELT: A Unified Framework for Parameter-Efficient Language Model Tuning\",\n        \"Importance Estimation for Neural Network Pruning\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Deep Contextualized Word Representations\",\n        \"AdapterFusion: Non-Destructive Task Composition for Transfer Learning\",\n        \"Learning Transferable Visual Models From Natural Language Supervision\",\n        \"Improving language understanding by generative pre-training\",\n        \"Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer\",\n        \"Learning multiple visual domains with residual adapters\",\n        \"Continual Diffusion: Continual Customization of Text-to-Image Diffusion with C-LoRA\",\n        \"LST: Ladder Side-Tuning for Parameter and Memory Efficient Transfer Learning\",\n        \"Training Neural Networks with Fixed Sparse Masks\",\n        \"LLaMA: Open and Efficient Foundation Language Models\",\n        \"Attention is All you Need\",\n        \"Efficient Fine-Tuning of BERT Models on the Edge\",\n        \"GLUE: A Multi-Task Benchmark and Analysis Platform for Natural Language Understanding\",\n        \"AdaMix: Mixture-of-Adapter for Parameter-efficient Tuning of Large Language Models\",\n        \"BitFit: Simple Parameter-efficient Fine-tuning for Transformer-based Masked Language-models\",\n        \"One Network, Many Masks: Towards More Parameter-Efficient Transfer Learning\",\n        \"Adaptive Budget Allocation for Parameter-Efficient Fine-Tuning\",\n        \"PLATON: Pruning Large Transformer Models with Upper Confidence Bound of Weight Importance\"\n    ],\n    \"reasoning\": \"Selected these 41 references because they represent foundational work and recent advances in IncreLoRA: Incremental Parameter Allocation Method for Parameter-Efficient Fine-tuning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}