{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Hardness of Packing, Covering and Partitioning Simple Polygons with Unit Squares\n\nPaper Abstract: Abstract We show that packing axis-aligned unit squares into a simple polygon PùëÉP is NP-hard, even when PùëÉP is an orthogonal and orthogonally convex polygon with half-integer coordinates. It has been known since the early 80s that packing unit squares into a polygon with holes is NP-hard [Fowler, Paterson, Tanimoto, Inf. Process. Lett., 1981], but the version without holes was conjectured to be polynomial-time solvable more than two decades ago [Baur and Fekete, Algorithmica, 2001]. Our reduction relies on a new way of reducing from Planar-3SAT. Interestingly, our geometric realization of a planar formula is non-planar. Vertices become rows and edges become columns, with crossings being allowed. The planarity ensures that all endpoints of rows and columns are incident to the outer face of the resulting drawing. We can then construct a polygon following the outer face that realizes all the logic of the formula geometrically, without the need of any holes. This new reduction technique proves to be general enough to also show hardness of two natural covering and partitioning problems, even when the input polygon is simple. We say that a polygon QùëÑQ is small if QùëÑQ is contained in a unit square. We prove that it is NP-hard to find a minimum number of small polygons whose union is PùëÉP (covering) and to find a minimum number of pairwise interior-disjoint small polygons whose union is PùëÉP (partitioning), when PùëÉP is an orthogonal simple polygon with half-integer coordinates. This is the first partitioning problem known to be NP-hard for polygons without holes, with the usual objective of minimizing the number of pieces.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tiling with Squares and Packing Dominos in Polynomial Time\",\n        \"Covering Polygons is Even Harder\",\n        \"The Art Gallery Problem is ‚àÉ\\\\exists‚Ñù‚Ñù\\\\mathbb{R}-complete\",\n        \"Minimum Star Partitions of Simple Polygons in Polynomial Time\",\n        \"Framework for ER-Completeness of Two-Dimensional Packing Problems\",\n        \"Partitioning a Polygon Into Small Pieces\",\n        \"Label placement by maximum independent set in rectangles\",\n        \"Packing identical simple polygons is NP-hard\",\n        \"Approximation algorithms for lawn mowing and milling\",\n        \"Optimization Problems Related to Zigzag Pocket Machining\",\n        \"Partitioning a polygonal region into trapezoids\",\n        \"Approximation of Geometric Dispersion Problems\",\n        \"Tiling Figures of the Plane with Two Bars\",\n        \"Optimal Binary Space Partitions for Segments in the Plane\",\n        \"Generalized Planar Matching\",\n        \"Optimal tile salvage\",\n        \"A note on maximum independent sets in rectangle intersection graphs\",\n        \"Approximation and decomposition of shapes\",\n        \"Optimal convex decompositions\",\n        \"Decomposition algorithms in geometry\",\n        \"Efficient Packings of Unit Squares in a Large Square\",\n        \"Separating point sets in polygonal environments\",\n        \"Circle Packing for Origami Design Is Hard\",\n        \"The Open Problems Project. Problem 56: Packing Unit Squares in a Simple Polygon\",\n        \"Packing 2√ó2 unit squares into grid polygons is NP-complete\",\n        \"On packing squares with equal squares\",\n        \"Exploring and Triangulating a Region by a Swarm of Robots\",\n        \"The one-round Voronoi game replayed\",\n        \"Terrain Decomposition and Layered Manufacturing\",\n        \"On the Continuous Fermat-Weber Problem\",\n        \"Optimal Packing and Covering in the Plane are NP-Complete\",\n        \"Computers and intractability: A Guide to the Theory of NP-Completeness\",\n        \"Improved Dense Packings of Congruent Squares in a Square\",\n        \"Approximation Schemes for Covering and Packing Problems in Image Processing and VLSI\",\n        \"Efficient Algorithms for Geometric Graph Search Problems\",\n        \"Polygon decomposition\",\n        \"Minimum Decompositions of Polygonal Objects\",\n        \"Decomposing and packing polygons\",\n        \"Packing Segments in a Simple Polygon is APX-hard\",\n        \"Hardness Results for Two-Dimensional Curvature-Constrained Motion Planning\",\n        \"Packing Squares into a Square\",\n        \"Planar Formulae and Their Uses\",\n        \"The Power of Non-Rectilinear Holes\",\n        \"On compatible triangulations with a minimum number of Steiner points\",\n        \"Minimum-weight triangulation is NP-hard\",\n        \"Art Gallery Theorems and Algorithms\",\n        \"Some NP-hard polygon decomposition problems\",\n        \"Polygons\",\n        \"Planar 3-SAT with a Clause/Variable Cycle\",\n        \"The 2√ó2222\\\\times 2 Simple Packing Problem\",\n        \"Recent results in art galleries\",\n        \"On the hardness of unlabeled multi-robot motion planning\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Hardness of Packing, Covering and Partitioning Simple Polygons with Unit Squares, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}