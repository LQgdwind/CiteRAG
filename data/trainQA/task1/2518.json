{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Granularity Gap Problem: A Hurdle for Applying Approximate Memory to Complex Data Layout*\n\nPaper Abstract: Abstract. The main memory access latency has not much improved for more than two decades while the CPU performance had been exponentially increasing until recently. Approximate memory is a technique to reduce the DRAM access latency in return of losing data integrity. It is beneficial for applications that are robust to noisy input and intermediate data such as artificial intelligence, multimedia processing, and graph processing. To obtain reasonable outputs from applications on approximate memory, it is crucial to protect critical data while accelerating accesses to non-critical data. We refer the minimum size of a continuous memory region that the same error rate is applied in approximate memory to as the approximation granularity. A fundamental limitation of approximate memory is that the approximation granularity is as large as a few kilo bytes. However, applications may have critical and non-critical data interleaved with smaller granularity. For example, a data structure for graph nodes can have pointers (critical) to neighboring nodes and its score (non-critical, depending on the use-case). This data structure cannot be directly mapped to approximate memory due to the gap between the approximation granularity and the granularity of data criticality. We refer to this issue as the granularity gap problem. In this paper, we first show that many applications potentially suffer from this problem. Then we propose a framework to quantitatively evaluate the performance overhead of a possible method to avoid this problem using known techniques. The evaluation results show that the performance overhead is non-negligible compared to expected benefit from approximate memory, suggesting that the granularity gap problem is a significant concern. ††*This is an extended version of our conference paper published in the 12th ACM/SPEC International Conference on Performance Engineering (ICPE).\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Lightweight Method to Evaluate Effect of Approximate Memory with Hardware Performance Monitors\",\n        \"Assessing Impact of Data Partitioning for Approximate Memory in C/C++ Code\",\n        \"Understanding the Propagation of Transient Errors in HPC Applications\",\n        \"JEDEC STANDARD: DDR3 SDRAM Standard\",\n        \"JEDEC STANDARD: DDR4 SDRAM\",\n        \"Advanced profiling topics. PEBS and LBR\",\n        \"Resilient Low Voltage Accelerators for High Energy Efficiency\",\n        \"Understanding Latency Variation in Modern DRAM Chips: Experimental Characterization, Analysis, and Optimization\",\n        \"A Multi-accuracy Level Approximate Memory Architecture Based on Data Significance Analysis\",\n        \"BinFI: An Efficient Fault Injector for Safety-Critical Machine Learning Systems\",\n        \"Multiple Clone Row DRAM: A low latency and area optimized DRAM\",\n        \"MPADS: Memory-Pooling-Assisted Data Splitting\",\n        \"VRL-DRAM: Improving DRAM Performance via Variable Refresh Latency\",\n        \"Architecture Support for Disciplined Approximate Programming\",\n        \"GCC 4.8 Release Series Changes, New Features, and Fixes\",\n        \"On the Resilience of Deep Learning for Reduced-voltage FPGAs\",\n        \"High-Density Image Storage Using Approximate Memory Cells\",\n        \"ChargeCache: Reducing DRAM latency by exploiting row access locality\",\n        \"Intel 64 and IA-32 Architectures Software Developer’s Manual Volume 3 (3A, 3B, 3C & 3D): System Programming Guide\",\n        \"Memory Systems: Cache, DRAM, Disk\",\n        \"Solar-DRAM: Reducing DRAM Access Latency by Exploiting the Variation in Local Bitlines\",\n        \"D-RaNGe: Using Commodity DRAM Devices to Generate True Random Numbers with Low Latency and High Throughput\",\n        \"EDEN: Enabling Energy-Efficient, High-Performance Deep Neural Network Inference Using Approximate DRAM\",\n        \"Design-Induced Latency Variation in Modern DRAM Chips: Characterization, Analysis, and Latency Reduction Mechanisms\",\n        \"Adaptive-latency DRAM: Optimizing DRAM timing for the common-case\",\n        \"Partial Row Activation for Low-Power DRAM System\",\n        \"A Compiler Framework for General Memory Layout Optimizations Targeting Structures\",\n        \"Flikker: Saving DRAM Refresh-power Through Critical Data Partitioning\",\n        \"HarDNN: Feature Map Vulnerability Evaluation in CNNs\",\n        \"Minotaur: Adapting Software Testing Techniques for Hardware Errors\",\n        \"16Gb, 32Gb: x4, x8 3DS DDR4 SDRAM Description\",\n        \"Data-Driven Spatial Locality\",\n        \"An Approximate Memory Architecture for Energy Saving in Deep Learning Applications\",\n        \"Fault Site Pruning for Practical Reliability Analysis of GPGPU Applications\",\n        \"Advances in Non-volatile Memory and Storage Technology, 2nd Edition\",\n        \"The Hardness of Cache Conscious Data Placement\",\n        \"Quality Configurable Approximate DRAM\",\n        \"Microprocessor Trend Data\",\n        \"8Gb C-die DDR4 SDRAM x16\",\n        \"Impact of Approximate Memory Data Allocation on a H.264 Software Video Encoder\",\n        \"Points-to Analysis in Almost Linear Time\",\n        \"HaRMony: Heterogeneous-Reliability Memory and QoS-Aware Energy Management on Virtualized Servers\",\n        \"Reducing DRAM Latency via Charge-Level-Aware Look-Ahead Partial Restoration\",\n        \"Advanced Hardware Profiling and Sampling(PEBS, IBS, etc.): Creating a New PAPI Sampling Interface\",\n        \"Quantifying the Accuracy of High-Level Fault Injection Techniques for Hardware Faults\",\n        \"Approximate SRAM for Energy-Efficient, Privacy-Preserving Convolutional Neural Networks\",\n        \"A Unifying Abstraction for Data Structure Splicing\",\n        \"Restore truncation for performance improvement in future DRAM systems\",\n        \"Forma: A Framework for Safe Automatic Array Reshaping\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in The Granularity Gap Problem: A Hurdle for Applying Approximate Memory to Complex Data Layout*, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}