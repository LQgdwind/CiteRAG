{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Tree-Structured Parzen Estimator: Understanding Its Algorithm Components and Their Roles for Better Empirical Performance\n\nPaper Abstract: Abstract Recent advances in many domains require more and more complicated experiment design. Such complicated experiments often have many parameters, which necessitate parameter tuning. Tree-structured Parzen estimator (TPE), a Bayesian optimization method, is widely used in recent parameter tuning frameworks. Despite its popularity, the roles of each control parameter and the algorithm intuition have not been discussed so far. In this tutorial, we will identify the roles of each control parameter and their impacts on hyperparameter optimization using a diverse set of benchmarks. We compare our recommended setting drawn from the ablation study with baseline methods and demonstrate that our recommended setting improves the performance of TPE. Our TPE implementation is available at https://github.com/nabenabe0928/tpe/tree/single-opt.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Happywhale - whale and dolphin identification.\",\n        \"Multivariate binary discrimination by the kernel method.\",\n        \"Optuna: A next-generation hyperparameter optimization framework.\",\n        \"Open images 2019 - object detection.\",\n        \"BoTorch: A framework for efficient Monte-Carlo Bayesian optimization.\",\n        \"JAHS-Bench-201: A foundation for research on joint architecture and hyperparameter search.\",\n        \"Algorithms for hyper-parameter optimization.\",\n        \"Random search for hyper-parameter optimization.\",\n        \"Hyperopt: a Python library for model selection and hyperparameter optimization.\",\n        \"Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures.\",\n        \"Hyperopt: A Python library for optimizing the hyperparameters of machine learning algorithms.\",\n        \"A tutorial on Bayesian optimization of expensive cost functions, with application to active user modeling and hierarchical reinforcement learning.\",\n        \"Bayesian optimization in AlphaGo.\",\n        \"HEBO: pushing the limits of sample-efficient hyper-parameter optimisation.\",\n        \"NAS-Bench-201: Extending the scope of reproducible neural architecture search.\",\n        \"HPOBench: A collection of reproducible multi-fidelity benchmark problems for HPO.\",\n        \"Scalable global optimization via local Bayesian optimization.\",\n        \"BOHB: Robust and efficient hyperparameter optimization at scale.\",\n        \"Hyperparameter optimization.\",\n        \"Initializing Bayesian hyperparameter optimization via meta-learning.\",\n        \"Bayesian Optimization.\",\n        \"Financial applications of Gaussian processes and Bayesian optimization.\",\n        \"The CMA evolution strategy: A tutorial.\",\n        \"Sequential model-based optimization for general algorithm configuration.\",\n        \"œÄùúã\\\\piBO: Augmenting acquisition functions with user beliefs for Bayesian optimization.\",\n        \"Efficient global optimization of expensive black-box functions.\",\n        \"Tabular benchmarks for joint architecture and hyperparameter optimization.\",\n        \"A new method of locating the maximum point of an arbitrary multipeak curve in the presence of noise.\",\n        \"Rapid Bayesian optimisation for synthesis of short polymer fiber materials.\",\n        \"Hyperband: A novel bandit-based approach to hyperparameter optimization.\",\n        \"Tune: A research platform for distributed model selection and training.\",\n        \"SMAC3: A versatile Bayesian optimization package for hyperparameter optimization.\",\n        \"CMA-ES for hyperparameter optimization of deep neural networks.\",\n        \"TrivialAugment: Tuning-free yet state-of-the-art data augmentation.\",\n        \"A simplex method for function minimization.\",\n        \"Warm starting CMA-ES for hyperparameter optimization.\",\n        \"Batch Bayesian optimisation via density-ratio estimation with guarantees.\",\n        \"Global search versus local search in hyperparameter optimization.\",\n        \"Multiobjective tree-structured Parzen estimator.\",\n        \"Multiobjective tree-structured Parzen estimator for computationally expensive optimization problems.\",\n        \"Syne Tune: A library for large scale hyperparameter tuning and reproducible research.\",\n        \"Rethinking drug design in the artificial intelligence era.\",\n        \"Multivariate density estimation: theory, practice, and visualization.\",\n        \"Taking the human out of the loop: A review of Bayesian optimization.\",\n        \"Density estimation for statistics and data analysis.\",\n        \"A general recipe for likelihood-free Bayesian optimization.\",\n        \"BORE: Bayesian optimization by density-ratio estimation.\",\n        \"Bayesian optimization is superior to random search for machine learning hyperparameter tuning: Analysis of the black-box optimization challenge 2020.\",\n        \"New Bayesian-optimization-based design of high-strength 7xxx-series alloys from recycled aluminum.\",\n        \"Speeding up multi-objective hyperparameter optimization by task similarity-based meta-learning for the tree-structured Parzen estimator.\",\n        \"PED-ANOVA: Efficiently quantifying hyperparameter importance in arbitrary subspaces.\",\n        \"c-TPE: Generalizing tree-structured Parzen estimator with inequality constraints for continuous and categorical hyperparameter optimization.\",\n        \"c-TPE: Tree-structured Parzen estimator with inequality constraints for expensive hyperparameter optimization.\",\n        \"Gaussian processes for machine learning, Vol. 2.\",\n        \"Accelerated search for materials with targeted properties by adaptive design.\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Tree-Structured Parzen Estimator: Understanding Its Algorithm Components and Their Roles for Better Empirical Performance, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}