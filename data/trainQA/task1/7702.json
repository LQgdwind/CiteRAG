{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Parameter-Efficient Fine-Tuning Design Spaces\n\nPaper Abstract: Abstract Parameter-efficient fine-tuning aims to achieve performance comparable to fine-tuning, using fewer trainable parameters. Several strategies (e.g., Adapters, prefix tuning, BitFit, and LoRA) have been proposed. However, their designs are hand-crafted separately, and it remains unclear whether certain design patterns exist for parameter-efficient fine-tuning. Thus, we present a parameter-efficient fine-tuning design paradigm and discover design patterns that are applicable to different experimental settings. Instead of focusing on designing another individual tuning strategy, we introduce parameter-efficient fine-tuning design spaces that parameterize tuning structures and tuning strategies. Specifically, any design space is characterized by four components: layer grouping, trainable parameter allocation, tunable groups, and strategy assignment. Starting from an initial design space, we progressively refine the space based on the model quality of each design choice and make greedy selection at each stage over these four components. We discover the following design patterns: (i) group layers in a spindle pattern; (ii) allocate the number of trainable parameters to layers uniformly; (iii) tune all the groups; (iv) assign proper tuning strategies to different groups. These design patterns result in new parameter-efficient fine-tuning methods. We show experimentally that these methods consistently and significantly outperform investigated parameter-efficient fine-tuning strategies across different backbone models and different tasks in natural language processing111Code is available at: https://github.com/amazon-science/peft-design-spaces..\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Spanbert: Improving pre-training by representing and predicting spans\",\n        \"Ernie: Enhanced representation through knowledge integration\",\n        \"Electra: Pre-training text encoders as discriminators rather than generators\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Unilmv2: Pseudo-masked language models for unified language model pre-training\",\n        \"Deberta: Decoding-enhanced bert with disentangled attention\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"VALUE: Understanding dialect disparity in NLU\",\n        \"Language models are few-shot learners\",\n        \"Parameter-efficient transfer learning for NLP\",\n        \"AdapterFusion: Non-destructive task composition for transfer learning\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"Exploiting cloze-questions for few-shot text classification and natural language inference\",\n        \"Bitfit: Simple parameter-efficient fine-tuning for transformer-based masked language-models\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Towards a unified view of parameter-efficient transfer learning\",\n        \"UniPELT: A unified framework for parameter-efficient language model tuning\",\n        \"On network design spaces for visual recognition\",\n        \"Designing network design spaces\",\n        \"Design space for graph neural networks\",\n        \"Bert and pals: Projected attention layers for efficient adaptation in multi-task learning\",\n        \"Learning multiple visual domains with residual adapters\",\n        \"Exploring versatile generative language model via parameter-efficient transfer learning\",\n        \"Masking as an efficient alternative to finetuning for pretrained language models\",\n        \"Parameter-efficient transfer learning with diff pruning\",\n        \"Piggyback: Adapting a single network to multiple tasks by learning to mask weights\",\n        \"How fine can fine-tuning be? learning efficient language models\",\n        \"Training neural networks with fixed sparse masks\",\n        \"Beyond fully-connected layers with quaternions: Parameterization of hypercomplex multiplications with 1/n1ùëõ1/n parameters\",\n        \"Compacter: Efficient low-rank hypercomplex adapter layers\",\n        \"Rlprompt: Optimizing discrete text prompts with reinforcement learning\",\n        \"Improving task generalization via unified schema prompt\",\n        \"Spt: Semi-parametric prompt tuning for multitask prompted learning\",\n        \"Delta tuning: A comprehensive study of parameter efficient methods for pre-trained language models\",\n        \"What does BERT learn about the structure of language?\",\n        \"Self-instantiated recurrent units with dynamic soft recursion\",\n        \"Glue: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Don‚Äôt give me the details, just the summary! topic-aware convolutional neural networks for extreme summarization\",\n        \"Findings of the 2016 conference on machine translation\",\n        \"ROUGE: A package for automatic evaluation of summaries\",\n        \"Bleu: a method for automatic evaluation of machine translation\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Parameter-Efficient Fine-Tuning Design Spaces, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}