{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Subscribing to Big Data at Scale\n\nPaper Abstract: Abstract. Today, data is being actively generated by a variety of devices, services, and applications. Such data is important not only for the information that it contains, but also for its relationships to other data and to interested users. Most existing Big Data systems focus on passively answering queries from users, rather than actively collecting data, processing it, and serving it to users. To satisfy both passive and active requests at scale, users need either to heavily customize an existing passive Big Data system or to glue multiple systems together. Either choice would require significant effort from users and incur additional overhead. In this paper, we present the BAD (Big Active Data) system, which is designed to preserve the merits of passive Big Data systems and introduce new features for actively serving Big Data to users at scale. We show the design and implementation of the BAD system, demonstrate how BAD facilitates providing both passive and active data services, investigate the BAD system’s performance at scale, and illustrate the complexities that would result from instead providing BAD-like services with a “glued” system.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Stratosphere platform for big data analytics\",\n        \"AsterixDB: A Scalable, Open Source BDMS\",\n        \"Storage Management in AsterixDB\",\n        \"LSM-Based Storage and Indexing: An Old Idea with Timely Benefits\",\n        \"Efficient Filtering of XML Documents for Selective Dissemination of Information\",\n        \"STREAM: The Stanford Data Stream Management System\",\n        \"The CQL Continuous Query Language: Semantic Foundations and Query Execution\",\n        \"Structured Streaming: A Declarative API for Real-Time Applications in Apache Spark\",\n        \"Apache Flink™: Stream and Batch Processing in a Single Engine\",\n        \"Breaking BAD: a data serving vision for big active data\",\n        \"Design and evaluation of a wide-area event notification service\",\n        \"Scribe: a large-scale and decentralized application-level multicast infrastructure\",\n        \"SQL++ For SQL Users: A Tutorial\",\n        \"NiagaraCQ: A Scalable Continuous Query System for Internet Databases\",\n        \"SpiderCast: a scalable interest-aware overlay for topic-based pub/sub communication\",\n        \"YFilter: Efficient and Scalable Filtering of XML Documents\",\n        \"Type-based publish/subscribe: Concepts and experiences\",\n        \"The many faces of publish/subscribe\",\n        \"Magnet: practical subscription clustering for Internet-scale publish/subscribe\",\n        \"Data Ingestion in AsterixDB\",\n        \"A BAD Demonstration: Towards Big Active Data\",\n        \"BAD to the Bone: Big Active Data at its Core\",\n        \"Kafka Streams\",\n        \"Kafka: A distributed messaging system for log processing\",\n        \"TelegraphCQ: An Architectural Status Report\",\n        \"A Scalable and Elastic Publish/Subscribe Service\",\n        \"Efficient Data Ingestion and Query Processing for LSM-Based Storage Systems\",\n        \"MongoDB Connector for Spark\",\n        \"MongoDB Kafka Connector\",\n        \"Multistage Adaptive Load Balancing for Big Active Data Publish Subscribe Systems\",\n        \"Pig latin: a not-so-foreign language for data processing\",\n        \"The SQL++ query language: Configurable, unifying and semi-structured\",\n        \"PolderCast: Fast, Robust, and Scalable Architecture for P2P Topic-Based Pub/Sub\",\n        \"The Hadoop Distributed File System\",\n        \"Temporal Databases\",\n        \"Spark Streaming + Kafka Integration Guide\",\n        \"Structured Streaming Programming Guide\",\n        \"Continuous Queries over Append-Only Databases\",\n        \"Hive - A Warehousing Solution Over a Map-Reduce Framework\",\n        \"Storm@twitter\",\n        \"Edge Caching for Enriched Notifications Delivery in Big Active Data\",\n        \"An IDEA: An Ingestion Framework for Data Enrichment in AsterixDB\",\n        \"Active Database Systems: Triggers and Rules For Advanced Database Processing\",\n        \"Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing\",\n        \"Discretized streams: fault-tolerant streaming computation at scale\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Subscribing to Big Data at Scale, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}