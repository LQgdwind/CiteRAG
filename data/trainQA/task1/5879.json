{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Compact Neural Networks via Stacking Designed Basic Units\n\nPaper Abstract: Abstract Unstructured pruning has the limitation of dealing with the sparse and irregular weights. By contrast, structured pruning can help eliminate this drawback but it requires complex criterion to determine which components to be pruned. To this end, this paper presents a new method termed TissueNet, which directly constructs compact neural networks with fewer weight parameters by independently stacking designed basic units, without requiring additional judgement criteria anymore. Given the basic units of various architectures, they are combined and stacked in a certain form to build up compact neural networks. We formulate TissueNet in diverse popular backbones for comparison with the state-of-the-art pruning methods on different benchmark datasets. Moreover, two new metrics are proposed to evaluate compression performance. Experiment results show that TissueNet can achieve comparable classification accuracy while saving up to around 80% FLOPs and 89.7% parameters. That is, stacking basic units provides a new promising way for network compression.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"What is the state of neural network pruning?\",\n        \"Deeplab: Semantic image segmentation with deep convolutional nets, atrous convolution, and fully connected crfs.\",\n        \"All you need is a few shifts: Designing efficient convolutional neural networks for image classification.\",\n        \"Dynamical channel pruning by conditional accuracy change for deep neural networks.\",\n        \"Recent advances in efficient computation of deep convolutional neural networks.\",\n        \"Model compression and acceleration for deep neural networks: The principles, progress, and challenges.\",\n        \"Imagenet: A large-scale hierarchical image database.\",\n        \"Network pruning via transformable architecture search.\",\n        \"Rich feature hierarchies for accurate object detection and semantic segmentation.\",\n        \"Dynamic network surgery for efficient dnns.\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding.\",\n        \"Learning both weights and connections for efficient neural networks.\",\n        \"Tiny imagenet challenge submission.\",\n        \"Mask r-cnn.\",\n        \"Deep residual learning for image recognition.\",\n        \"Filter pruning via geometric median for deep convolutional neural networks acceleration.\",\n        \"Channel pruning for accelerating very deep neural networks.\",\n        \"A discriminant information approach to deep neural network pruning.\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications.\",\n        \"A novel channel pruning method for deep neural network compression.\",\n        \"Squeezenet: Alexnet-level accuracy with 50x fewer parameters andÂ¡ 0.5 mb model size.\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference.\",\n        \"Constructing fast network through deconstruction of convolution.\",\n        \"Knowledge distillation via route constrained optimization.\",\n        \"Adam: A method for stochastic optimization.\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks.\",\n        \"Gradient-based learning applied to document recognition.\",\n        \"The mnist database of handwritten digits, 1998. URL http://yann. lecun. com/exdb/mnist\",\n        \"Pruning filters for efficient convnets.\",\n        \"Network in network.\",\n        \"Discrimination-aware network pruning for deep model compression.\",\n        \"Metapruning: Meta learning for automatic neural network channel pruning.\",\n        \"Learning efficient convolutional networks through network slimming.\",\n        \"Fully convolutional networks for semantic segmentation.\",\n        \"Thinet: A filter level pruning method for deep neural network compression.\",\n        \"Thinet: pruning cnn filters for a thinner net.\",\n        \"Espnetv2: A light-weight, power efficient, and general purpose convolutional neural network.\",\n        \"Importance estimation for neural network pruning.\",\n        \"Fitnets: Hints for thin deep nets.\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks.\",\n        \"Very deep convolutional networks for large-scale image recognition.\",\n        \"Chip: Channel independence-based pruning for compact neural networks.\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile.\",\n        \"Soft weight-sharing for neural network compression.\",\n        \"Learning structured sparsity in deep neural networks.\",\n        \"Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search.\",\n        \"An efficient channel-level pruning for cnns without fine-tuning.\",\n        \"Cars: Continuous evolution for efficient neural architecture search.\",\n        \"Nisp: Pruning networks using neuron importance score propagation.\",\n        \"Learning to share: Simultaneous parameter tying and sparsification in deep learning.\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices.\",\n        \"Variational convolutional neural network pruning.\",\n        \"Discrimination-aware channel pruning for deep neural networks.\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Compact Neural Networks via Stacking Designed Basic Units, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}