{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Simulation-guided Beam Search for Neural Combinatorial Optimization\n\nPaper Abstract: Abstract Neural approaches for combinatorial optimization (CO) equip a learning mechanism to discover powerful heuristics for solving complex real-world problems. While neural approaches capable of high-quality solutions in a single shot are emerging, state-of-the-art approaches are often unable to take full advantage of the solving time available to them. In contrast, hand-crafted heuristics perform highly effective search well and exploit the computation time given to them, but contain heuristics that are difficult to adapt to a dataset being solved. With the goal of providing a powerful search procedure to neural CO approaches, we propose simulation-guided beam search (SGBS), which examines candidate solutions within a fixed-width tree search that both a neural net-learned policy and a simulation (rollout) identify as promising. We further hybridize SGBS with efficient active search (EAS) [1], where SGBS enhances the quality of solutions backpropagated in EAS, and EAS improves the quality of the policy used in SGBS. We evaluate our methods on well-known CO benchmarks and show that SGBS significantly improves the quality of the solutions found under reasonable runtime assumptions.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Efficient active search for combinatorial optimization problems\",\n        \"Machine learning for combinatorial optimization: a methodological tour d’ horizon\",\n        \"Neural combinatorial optimization with reinforcement learning\",\n        \"Attention, learn to solve routing problems!\",\n        \"Bandit based monte-carlo planning\",\n        \"Efficient selectivity and backup operators in monte-carlo tree search\",\n        \"Pointer networks\",\n        \"Reinforcement learning for solving the vehicle routing problem\",\n        \"Deep policy dynamic programming for vehicle routing problems\",\n        \"Learning the travelling salesperson problem requires rethinking generalization\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Learning heuristics for the TSP by policy gradient\",\n        \"Matrix encoding networks for neural combinatorial optimization\",\n        \"Pomo: Policy optimization with multiple optima for reinforcement learning\",\n        \"Neural large neighborhood search for the capacitated vehicle routing problem\",\n        \"Learning to perform local rewriting for combinatorial optimization\",\n        \"Learning 2-opt heuristics for the traveling salesman problem via deep reinforcement learning\",\n        \"Learning improvement heuristics for solving routing problems\",\n        \"Learning to iteratively solve routing problems with dual-aspect collaborative transformer\",\n        \"Learning collaborative policies to solve np-hard routing problems\",\n        \"Learning to delegate for large-scale vehicle routing\",\n        \"Neurolkh: Combining deep learning model with lin-kernighan-helsgaun heuristic for solving the traveling salesman problem\",\n        \"Reinforcement learning with combinatorial actions: An application to vehicle routing\",\n        \"Multi-decoder attention model with embedding glimpse for solving vehicle routing problems\",\n        \"Efficient neural neighborhood search for pickup and delivery problems\",\n        \"Smart manufacturing scheduling with edge computing using multiclass deep q network\",\n        \"Learning to dispatch for job shop scheduling via deep reinforcement learning\",\n        \"Learning local search heuristics for boolean satisfiability\",\n        \"Can q-learning with graph networks learn a generalizable branching heuristic for a sat solver?\",\n        \"Combinatorial optimization with graph convolutional networks and guided tree search\",\n        \"Exploratory combinatorial optimization with reinforcement learning\",\n        \"On joint learning for solving placement and routing in chip design\",\n        \"A graph placement methodology for fast chip design\",\n        \"An efficient graph convolutional network technique for the travelling salesman problem\",\n        \"A graph neural network assisted monte carlo tree search approach to traveling salesman problem\",\n        \"Generalize a small pre-trained model to arbitrarily large tsp instances\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Learning beam search policies via imitation learning\",\n        \"Learning beam search: Utilizing machine learning to guide beam search for solving combinatorial optimization problems\",\n        \"Solving np-hard problems on graphs with extended alphago zero\",\n        \"Learning to branch in mixed integer programming\",\n        \"Deep learning assisted heuristic tree search for the container pre-marshalling problem\",\n        \"Monte carlo beam search\",\n        \"Beam monte-carlo tree search\",\n        \"Exploring search space trees using an adapted version of monte carlo tree search for combinatorial optimization problems\",\n        \"Algorithm and knowledge engineering for the tsptw problem\",\n        \"A hybrid genetic algorithm for multidepot and periodic vehicle routing problems\",\n        \"Hybrid genetic search for the cvrp: Open-source implementation and swap* neighborhood\",\n        \"On calibration of modern neural networks\",\n        \"The traveling salesman problem: a computational study\",\n        \"V20.1: User’s Manual for CPLEX\",\n        \"An Extension of the Lin-Kernighan-Helsgaun TSP Solver for Constrained Traveling Salesman and Vehicle Routing Problems: Technical report\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Simulation-guided Beam Search for Neural Combinatorial Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}