{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Reinforced Continual Learning for Graphs\n\nPaper Abstract: Abstract. Graph Neural Networks (GNNs) have become the backbone for a myriad of tasks pertaining to graphs and similar topological data structures. While many works have been established in domains related to node and graph classification/regression tasks, they mostly deal with a single task. Continual learning on graphs is largely unexplored and existing graph continual learning approaches are limited to the task-incremental learning scenarios. This paper proposes a graph continual learning strategy that combines the architecture-based and memory-based approaches. The structural learning strategy is driven by reinforcement learning, where a controller network is trained in such a way to determine an optimal number of nodes to be added/pruned from the base network when new tasks are observed, thus assuring sufficient network capacities. The parameter learning strategy is underpinned by the concept of Dark Experience replay method to cope with the catastrophic forgetting problem. Our approach is numerically validated with several graph continual learning benchmark problems in both task-incremental learning and class-incremental learning settings. Compared to recently published works, our approach demonstrates improved performance in both the settings. The implementation code can be found at https://github.com/codexhammer/gcl.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Expert gate: Lifelong learning with a network of experts\",\n        \"Unsupervised Continual Learning in Streaming Environments\",\n        \"Deep gaussian embedding of graphs: Unsupervised inductive learning via ranking\",\n        \"Dark experience for general continual learning: a strong, simple baseline\",\n        \"Continual learning with tiny episodic memories\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Pathnet: Evolution channels gradient descent in super neural networks\",\n        \"Fast Graph Representation Learning with PyTorch Geometric\",\n        \"Catastrophic forgetting in connectionist networks\",\n        \"Graph Neural Architecture Search.\",\n        \"Inductive representation learning on large graphs\",\n        \"Selective experience replay for lifelong learning\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Overcoming catastrophic forgetting in neural networks\",\n        \"Learning without forgetting\",\n        \"Progressive neural architecture search\",\n        \"Overcoming catastrophic forgetting in graph neural networks\",\n        \"Gradient episodic memory for continual learning\",\n        \"Continual learning via inter-task synaptic mapping\",\n        \"Catastrophic interference in connectionist networks: The sequential learning problem\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"Continual lifelong learning with neural networks: A review\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"Unsupervised Continual Learning via Self-Adaptive Deep Clustering Approach\",\n        \"Unsupervised Learning for Identifying High Eigenvector Centrality Nodes: A Graph Neural Network Approach\",\n        \"Encoder based lifelong learning\",\n        \"Connectionist models of recognition memory: constraints imposed by learning and forgetting functions\",\n        \"icarl: Incremental classifier and representation learning\",\n        \"Learning Graph Distances with Message Passing Neural Networks\",\n        \"Experience replay for continual learning\",\n        \"Progressive neural networks\",\n        \"The Graph Neural Network Model\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"Continual learning with deep generative replay\",\n        \"Reinforcement learning: An introduction\",\n        \"Three scenarios for continual learning\",\n        \"Graph attention networks\",\n        \"The reduction of a graph to canonical form and the algebra which appears therein\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Reinforced continual learning\",\n        \"How powerful are graph neural networks?\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Lifelong learning with dynamically expandable networks\",\n        \"Attributed graph clustering via adaptive graph convolution\",\n        \"Overcoming Catastrophic Forgetting in Graph Neural Networks with Experience Replay\",\n        \"Graph neural networks: A review of methods and applications\",\n        \"Neural architecture search with reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Reinforced Continual Learning for Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}