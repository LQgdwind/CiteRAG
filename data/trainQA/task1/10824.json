{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Synthesizing Tight Privacy and Accuracy Bounds via Weighted Model Counting\n\nPaper Abstract: Abstract Programmatically generating tight differential privacy (DP) bounds is a hard problem. Two core challenges are (1) finding expressive, compact, and efficient encodings of the distributions of DP algorithms, and (2) state space explosion stemming from the multiple quantifiers and relational properties of the DP definition. We address the first challenge by developing a method for tight privacy and accuracy bound synthesis using weighted model counting on binary decision diagrams, a state of the art technique from the artificial intelligence and automated reasoning communities for exactly computing probability distributions. We address the second challenge by developing a framework for leveraging inherent symmetries in DP algorithms. Our solution benefits from ongoing research in probabilistic programming languages, allowing us to succinctly and expressively represent different DP algorithms with approachable language syntax that can be used by non-experts. We provide a detailed case study of our solution on the binary randomized response algorithm. We also evaluate an implementation of our solution using the Dice probabilistic programming language for the randomized response and truncated geometric above threshold algorithms. We compare to prior work on exact DP verification using Markov chain probabilistic model checking. Very few existing works consider mechanized analysis of accuracy guarantees for DP algorithms. We additionally provide a detailed analysis using our technique for finding tight accuracy bounds for DP algorithms.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Calibrating noise to sensitivity in private data analysis\",\n        \"On significance of the least significant bits for differential privacy\",\n        \"Debugging differential privacy: A case study for privacy auditing\",\n        \"Backpropagation clipping for deep learning with differential privacy\",\n        \"Verified computational differential privacy with applications to smart metering\",\n        \"Probabilistic relational reasoning for differential privacy\",\n        \"Proving differential privacy in hoare logic\",\n        \"Proving differential privacy via probabilistic couplings\",\n        \"Probabilistic couplings for probabilistic reasoning\",\n        \"Detecting violations of differential privacy\",\n        \"Checkdp: An automated and integrated approach for proving differential privacy or finding precise counterexamples\",\n        \"Dp-finder: Finding differential privacy violations by sampling and optimization\",\n        \"Testing differential privacy with dual interpreters\",\n        \"Auditing differentially private machine learning: How private is private SGD?\",\n        \"Adversary instantiation: Lower bounds for differentially private machine learning\",\n        \"One-shot empirical privacy estimation for federated learning\",\n        \"Tight auditing of differentially private machine learning\",\n        \"Unleashing the power of randomization in auditing differentially private ML\",\n        \"Privacy auditing with one (1) training run\",\n        \"Learning differentially private mechanisms\",\n        \"Model checking differentially private properties\",\n        \"Verifying pufferfish privacy in hidden markov models\",\n        \"On probabilistic inference by weighted model counting\",\n        \"Scaling exact inference for discrete probabilistic programs\",\n        \"Generating and sampling orbits for lifted probabilistic inference\",\n        \"The algorithmic foundations of differential privacy\",\n        \"Model checking finite-horizon markov chains with probabilistic inference\",\n        \"The probabilistic model checker storm\",\n        \"Distance makes the types grow stronger: a calculus for differential privacy\",\n        \"Linear dependent types for differential privacy\",\n        \"Higher-order approximate relational refinement types for mechanism design and differential privacy\",\n        \"Lightdp: Towards automating differential privacy proofs\",\n        \"Duet: an expressive higher-order language and linear type system for statically enforcing differential privacy\",\n        \"Satisfiability modulo counting: A new approach for analyzing privacy properties\",\n        \"Synthesizing coupling proofs of differential privacy\",\n        \"Differentially private bayesian programming\",\n        \"Synthesizing differentially private programs\",\n        \"Dpgen: Automated program synthesis for differential privacy\",\n        \"The complexity of verifying loop-free programs as differentially private\",\n        \"The complexity of verifying boolean programs as differentially private\",\n        \"Bayesian estimation of differential privacy\",\n        \"Deciding accuracy of differential privacy schemes\",\n        \"A programming framework for differential privacy with accuracy concentration bounds\",\n        \"Distributed differential privacy via shuffling\",\n        \"Differential privacy on finite computers\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Synthesizing Tight Privacy and Accuracy Bounds via Weighted Model Counting, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}