{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Adaptive Periodic Averaging: A Practical Approach to Reducing Communication in Distributed Learning\n\nPaper Abstract: Abstract Stochastic Gradient Descent (SGD) is the key learning algorithm for many machine learning tasks. Because of its computational costs, there is a growing interest in accelerating SGD on HPC resources like GPU clusters. However, the performance of parallel SGD is still bottlenecked by the high communication costs even with a fast connection among the machines. A simple approach to alleviating this problem, used in many existing efforts, is to perform communication every few iterations, using a constant averaging period. In this paper, we show that the optimal averaging period in terms of convergence and communication cost is not a constant, but instead varies over the course of the execution. Specifically, we observe that reducing the variance of model parameters among the computing nodes is critical to the convergence of periodic parameter averaging SGD. Given a fixed communication budget, we show that it is more beneficial to synchronize more frequently in early iterations to reduce the initial large variance and synchronize less frequently in the later phase of the training process. We propose a practical algorithm, named ADaptive Periodic parameter averaging SGD (ADPSGD), to achieve a smaller overall variance of model parameters, and thus better convergence compared with the Constant Periodic parameter averaging SGD (CPSGD). We evaluate our method with several image classification benchmarks, and show that our ADPSGD indeed achieves smaller training losses and higher test accuracies with smaller communication cost compared with CPSGD. Compared with gradient-quantization SGD, we show that our algorithm achieves faster convergence with only half of the communication. Compared with full-communication SGD, our ADPSGD achieves 1.141.141.14x ∼similar-to\\sim 1.271.271.27x speedups with a 100Gbps connection among computing nodes, and the speedups increase to 1.461.461.46x ∼similar-to\\sim 1.951.951.95x with a 10Gbps connection.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Large scale distributed deep networks\",\n        \"Optimal distributed online prediction using mini-batches\",\n        \"Tensorflow: Large-scale machine learning on heterogeneous distributed systems\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Mxnet: A flexible and efficient machine learning library for heterogeneous distributed systems\",\n        \"Cntk: Microsoft’s open-source deep-learning toolkit\",\n        \"Caffe: Convolutional architecture for fast feature embedding\",\n        \"Distributed delayed stochastic optimization\",\n        \"Scaling distributed machine learning with the parameter server\",\n        \"More effective distributed ml via a stale synchronous parallel parameter server\",\n        \"Communication efficient distributed machine learning with the parameter server\",\n        \"Scalable distributed dnn training using commodity gpu cloud computing\",\n        \"Scaling distributed machine learning with system and algorithm co-design\",\n        \"Qsgd: Communication-efficient sgd via gradient quantization and encoding\",\n        \"Bandwidth optimal all-reduce algorithms for clusters of workstations\",\n        \"Beyond the regret minimization barrier: Optimal algorithms for stochastic strongly-convex optimization\",\n        \"Accelerating stochastic gradient descent using predictive variance reduction\",\n        \"Cocoa: A general framework for communication-efficient distributed optimization\",\n        \"Parallel SGD: When does averaging help?\",\n        \"Revisiting distributed synchronous sgd\",\n        \"Memory and Communication Efficient Distributed Stochastic Optimization with Minibatch-Prox\",\n        \"A linear speedup analysis of distributed deep learning with sparse and quantized communication\",\n        \"On the convergence properties of a k-step averaging stochastic gradient descent algorithm for nonconvex optimization\",\n        \"Lectures on Modern Convex Optimization: Analysis, Algorithms, and Engineering Applications\",\n        \"Deep Learning\",\n        \"A stochastic approximation method\",\n        \"A convergence theorem for non negative almost supermartingales and some applications\",\n        \"On-line learning in neural networks\",\n        \"Robust stochastic approximation approach to stochastic programming\",\n        \"Stochastic first- and zeroth-order methods for nonconvex stochastic programming\",\n        \"Going deeper with convolutions\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Can decentralized algorithms outperform centralized algorithms? a case study for decentralized parallel stochastic gradient descent\",\n        \"ImageNet: A Large-Scale Hierarchical Image Database\",\n        \"Deep residual learning for image recognition\",\n        \"Accurate, large minibatch SGD: training imagenet in 1 hour\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"One weird trick for parallelizing convolutional neural networks\",\n        \"Train longer, generalize better: closing the generalization gap in large batch training of neural networks\",\n        \"A bayesian perspective on generalization and stochastic gradient descent\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"Efficient BackProp\",\n        \"Sharp minima can generalize for deep nets\",\n        \"Don’t decay the learning rate, increase the batch size\",\n        \"Bayesian learning via stochastic gradient langevin dynamics\",\n        \"Smoothout: Smoothing out sharp minima for generalization in large-batch deep learning\",\n        \"Entropy-sgd: Biasing gradient descent into wide valleys\",\n        \"Dropout: A simple way to prevent neural networks from overfitting\",\n        \"Adaptive communication strategies to achieve the best error-runtime trade-off in local-update SGD\",\n        \"Deep gradient compression: Reducing the communication bandwidth for distributed training\",\n        \"Sparse communication for distributed gradient descent\",\n        \"Terngrad: Ternary gradients to reduce communication in distributed deep learning\",\n        \"1-bit stochastic gradient descent and application to data-parallel distributed training of speech dnns\",\n        \"Deep learning with elastic averaging sgd\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Adaptive Periodic Averaging: A Practical Approach to Reducing Communication in Distributed Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}