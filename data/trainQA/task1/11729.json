{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 63 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast decision tree learning solves hard coding-theoretic problems\n\nPaper Abstract: Abstract We connect the problem of properly PAC learning decision trees to the parameterized Nearest Codeword Problem (kùëòk-NCP). Despite significant effort by the respective communities, algorithmic progress on both problems has been stuck: the fastest known algorithm for the former runs in quasipolynomial time (Ehrenfeucht and Haussler 1989) and the best known approximation ratio for the latter is O‚Äã(n/log‚Å°n)ùëÇùëõùëõO(n/\\log n) (Berman and Karpinsky 2002; Alon, Panigrahy, and Yekhanin 2009). Research on both problems has thus far proceeded independently with no known connections. We show that any improvement of Ehrenfeucht and Haussler‚Äôs algorithm will yield O‚Äã(log‚Å°n)ùëÇùëõO(\\log n)-approximation algorithms for kùëòk-NCP, an exponential improvement of the current state of the art. This can be interpreted either as a new avenue for designing algorithms for kùëòk-NCP, or as one for establishing the optimality of Ehrenfeucht and Haussler‚Äôs algorithm. Furthermore, our reduction along with existing inapproximability results for kùëòk-NCP already rule out polynomial-time algorithms for properly learning decision trees. A notable aspect of our hardness results is that they hold even in the setting of weak learning whereas prior ones were limited to the setting of strong learning.\n\n{retrieved_text}\n\nGenerate exactly 63 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 63\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The complexity of properly learning simple concept classes\",\n        \"The hardness of approximate optima in lattices, codes, and systems of linear equations\",\n        \"Hardness of approximating the closest vector problem with pre-processing\",\n        \"More on average case vs approximation complexity\",\n        \"Losing weight by gaining edges\",\n        \"Deterministic approximation algorithms for the nearest codeword problem\",\n        \"Towards a theory of model distillation\",\n        \"Parameterized intractability of even set and shortest vector problem\",\n        \"Parameterized inapproximability of the minimum distance problem over all fields and the shortest vector problem in all ùìÅùìÅ\\\\mathscr{l}pp{}_{\\\\mbox{p}} norms\",\n        \"Fixed-parameter approximability of boolean MinCSPs\",\n        \"Cryptographic primitives based on hard learning problems\",\n        \"Parameterized intractability of even set and shortest vector problem from Gap-ETH\",\n        \"The complexity of linear dependence problems in vector spaces\",\n        \"Approximating minimum unsatisfiability of linear equations\",\n        \"Noise-tolerant learning, the parity problem, and the statistical query model\",\n        \"Selection of relevant features and examples in machine learning\",\n        \"Properly learning decision trees in almost polynomial time\",\n        \"Top-down induction of decision trees: rigorous guarantees and inherent limitations\",\n        \"Relevant examples and relevant features: Thoughts from computational learning theory\",\n        \"On the inherent intractability of certain coding problems\",\n        \"The hardness of decoding linear codes with preprocessing\",\n        \"Exact learning via the monotone theory\",\n        \"Parameterized Algorithms\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"Fundamentals of Parameterized Complexity\",\n        \"The parametrized complexity of some fundamental problems in coding theory\",\n        \"Mildly exponential reduction from gap-3sat to polynomial-gap label-cover\",\n        \"Approximating CVP to within almost-polynomial factors is NP-hard\",\n        \"Hardness of approximating the minimum distance of a linear code\",\n        \"Learning decision trees from random examples\",\n        \"A survey on approximation in parameterized complexity: Hardness and algorithms\",\n        \"The inapproximability of lattice and coding problems with preprocessing\",\n        \"Agnostically learning decision trees\",\n        \"Parameterized inapproximability hypothesis under eth\",\n        \"Why do tree-based models still outperform deep learning on typical tabular data?\",\n        \"Maximum-likelihood decoding of reed-solomon codes is np-hard\",\n        \"Lower bounds on learning decision lists and trees\",\n        \"On the complexity of kùëòk-SAT\",\n        \"Which problems have strongly exponential complexity?\",\n        \"Learning random log-depth decision trees under uniform distribution\",\n        \"Learning decision trees using the Fourier spectrum\",\n        \"Almost polynomial factor hardness for closest vector problem with preprocessing\",\n        \"Learning and smoothed analysis\",\n        \"Properly learning decision trees with queries is NP-hard\",\n        \"Superpolynomial lower bounds for decision tree learning and testing\",\n        \"Improved lower bounds for approximating parameterized nearest codeword and related problems under ETH\",\n        \"The hardness of solving subset sum with preprocessing\",\n        \"On lower bounds of approximating parameterized kùëòk-clique\",\n        \"Tight running time lower bounds for strong inapproximability of maximum k-coverage, unique set cover and related problems (via t-wise agreement testing theorem)\",\n        \"Project: Complexity of coding problems\",\n        \"Learning functions of kùëòk relevant variables\",\n        \"A Birthday Repetition Theorem and Complexity of Approximating Dense CSPs\",\n        \"Analysis of Boolean Functions\",\n        \"Learning monotone decision trees in polynomial time\",\n        \"Computational limitations on learning from examples\",\n        \"Interpretable machine learning: Fundamental principles and 10 grand challenges\",\n        \"Improved inapproximability of lattice and coding problems with preprocessing\",\n        \"SETH-hardness of coding problems\",\n        \"Learning sparse multivariate polynomials over a field with queries and counterexamples\",\n        \"Tabular data: Deep learning is not all you need\",\n        \"A simplified NP-complete satisfiability problem\",\n        \"A theory of the learnable\",\n        \"Finding correlations in subquadratic time, with applications to learning parities and the closest pair problem\"\n    ],\n    \"reasoning\": \"Selected these 63 references because they represent foundational work and recent advances in Fast decision tree learning solves hard coding-theoretic problems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}