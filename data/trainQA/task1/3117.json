{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Unsupervised Deep Keyphrase Generation\n\nPaper Abstract: Abstract Keyphrase generation aims to summarize long documents with a collection of salient phrases. Deep neural models have demonstrated a remarkable success in this task, capable of predicting keyphrases that are even absent from a document. However, such abstractiveness is acquired at the expense of a substantial amount of annotated data. In this paper, we present a novel method for keyphrase generation, AutoKeyGen, without the supervision of any human annotation. Motivated by the observation that an absent keyphrase in one document can appear in other places, in whole or in part, we first construct a phrase bank by pooling all phrases in a corpus. With this phrase bank, we then draw candidate absent keyphrases for each document through a partial matching process. To rank both types of candidates, we combine their lexical- and semantic-level similarities to the input document. Moreover, we utilize these top-ranked candidates as to train a deep generative model for more absent keyphrases. Extensive experiments demonstrate that AutoKeyGen outperforms all unsupervised baselines and can even beat strong supervised method in certain cases.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A convolutional attention network for extreme summarization of source code\",\n        \"Bi-lstm-crf sequence labeling for keyphrase extraction from scholarly documents\",\n        \"Simple unsupervised keyphrase extraction using sentence embeddings\",\n        \"Natural language processing with Python: analyzing text with the natural language toolkit\",\n        \"Redefining absent keyphrases and their effect on retrieval effectiveness\",\n        \"A text feature based automatic keyword extraction method for single documents\",\n        \"The use of mmr, diversity-based reranking for reordering documents and producing summaries\",\n        \"Deep communicating agents for abstractive summarization\",\n        \"Exclusive hierarchical decoding for deep keyphrase generation\",\n        \"Title-guided encoding for keyphrase generation\",\n        \"Learning phrase representations using RNN encoderâ€“decoder for statistical machine translation\",\n        \"Adaptive subgradient methods for online learning and stochastic optimization\",\n        \"PositionRank: An unsupervised approach to keyphrase extraction from scholarly documents\",\n        \"Lstm recurrent networks learn simple context-free and context-sensitive languages\",\n        \"Conundrums in unsupervised keyphrase extraction: making sense of the state-of-the-art\",\n        \"Improved automatic keyword extraction given more linguistic knowledge\",\n        \"A study on automatically extracted keywords in text categorization\",\n        \"A statistical interpretation of term specificity and its application in retrieval\",\n        \"Phrasier: a system for interactive document retrieval using keyphrases\",\n        \"Automatic hypertext keyphrase detection\",\n        \"Semeval-2010 task 5: Automatic keyphrase extraction from scientific articles\",\n        \"Large dataset for keyphrases extraction\",\n        \"An empirical evaluation of doc2vec with practical insights into document embedding generation\",\n        \"Unsupervised keyphrase extraction: Introducing new kinds of words to keyphrases\",\n        \"The effectiveness of the student response system (SRS) in english grammar learning in a flipped english as a foreign language (EFL) class\",\n        \"Clustering to find exemplar terms for keyphrase extraction\",\n        \"Does order matter? an empirical study on generating multiple keyphrases as a sequence\",\n        \"An empirical study on neural keyphrase generation\",\n        \"Deep keyphrase generation\",\n        \"Textrank: Bringing order into text\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Keyphrase extraction in scientific publications\",\n        \"The pagerank citation ranking: Bringing order to the web\",\n        \"Keygames: A game theoretic approach to automatic keyphrase extraction\",\n        \"Get to the point: Summarization with pointer-generator networks\",\n        \"Building end-to-end dialogue systems using generative hierarchical neural network models\",\n        \"Automated phrase mining from massive text corpora\",\n        \"Divgraphpointer: A graph pointer network for extracting diverse keyphrases\",\n        \"Sequence to sequence learning with neural networks\",\n        \"A preliminary exploration of gans for keyphrase generation\",\n        \"A language model approach to keyphrase extraction\",\n        \"Single document keyphrase extraction using neighborhood knowledge\",\n        \"Ptr: Phrase-based topical ranking for automatic keyphrase extraction in scientific publications\",\n        \"Open domain web keyphrase extraction beyond language modeling\",\n        \"Semi-supervised learning for neural keyphrase generation\",\n        \"One size does not fit all: Generating and evaluating variable number of keyphrases\",\n        \"Deep keyphrase generation with a convolutional sequence to sequence model\",\n        \"World wide web site summarization\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Unsupervised Deep Keyphrase Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}