{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 61 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Maude strategy language\n\nPaper Abstract: Abstract Rewriting logic is a natural and expressive framework for the specification of concurrent systems and logics. The Maude specification language provides an implementation of this formalism that allows executing, verifying, and analyzing the represented systems. These specifications declare their objects by means of terms and equations, and provide rewriting rules to represent potentially non-deterministic local transformations on the state. Sometimes a controlled application of these rules is required to reduce non-determinism, to capture global, goal-oriented or efficiency concerns, or to select specific executions for their analysis. That is what we call a strategy. In order to express them, respecting the separation of concerns principle, a Maude strategy language was proposed and developed. The first implementation of the strategy language was done in Maude itself using its reflective features. After ample experimentation, some more features have been added and, for greater efficiency, the strategy language has been implemented in C++ as an integral part of the Maude system. This paper describes the Maude strategy language along with its semantics, its implementation decisions, and several application examples from various fields.\n\n{retrieved_text}\n\nGenerate exactly 61 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 61\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Domain theory. Vol. 3.\",\n        \"Safety enforcement via programmable strategies in Maude\",\n        \"Strategy-Based Proof Calculus for Membrane Systems\",\n        \"Term Rewriting and All That\",\n        \"Equational Inference, Canonical Proofs, and Proof Orderings\",\n        \"Tom: Piggybacking Rewriting on Java\",\n        \"The Lambda Calculus: Its Syntax and Semantics (2 ed.). Studies in Logic and the Foundations of Mathematics, Vol. 131.\",\n        \"Rewriting with Strategies in ELAN: A Functional Semantics\",\n        \"Specification and Proof in Membership Equational Logic\",\n        \"Extensional and Intensional Strategies\",\n        \"Modular Structural Operational Semantics with Strategies\",\n        \"Stratego/XT 0.17. A language and toolset for program transformation\",\n        \"Faithful (meta-)encodings of programmable strategies into term rewriting systems\",\n        \"Strategies and user interfaces in Maude at work\",\n        \"Maude Manual v3.3.1.\",\n        \"All About Maude - A High-Performance Logical Framework, How to Specify, Program and Verify Systems in Rewriting Logic. Lecture Notes in Computer Science, Vol. 4350.\",\n        \"Reflection and Strategies in Rewriting Logic\",\n        \"Internal Strategies in a Reflective Logic\",\n        \"Programming and Symbolic Computation in Maude\",\n        \"On the Church-Rosser and coherence properties of conditional order-sorted rewrite theories\",\n        \"Towards a Maude Formal Environment\",\n        \"Strategy language for Maude\",\n        \"Deduction, Strategies, and Rewriting\",\n        \"Strategic port graph rewriting: an interactive modelling framework\",\n        \"Parameterized Programming\",\n        \"Using Maude and Its Strategies for Defining a Framework for Analyzing Eden Semantics\",\n        \"A Complete Proof of Correctness of the Knuth-Bendix Completion Algorithm\",\n        \"Rewriting Strategies and Strategic Rewrite Programs\",\n        \"Prototyping Completion with Constraints Using Computational Systems\",\n        \"Simple Word Problems in Universal Algebras\",\n        \"Algorithm = Logic + Control\",\n        \"Implementations of Completion by Transition Rules + Control: ORME\",\n        \"RIP Version 2\",\n        \"Foundations of the rule-based system œÅLog\",\n        \"Towards a Strategy Language for Maude\",\n        \"A Rewriting Semantics for Maude Strategies\",\n        \"Strategies and simulations in a semantic framework\",\n        \"Conditional rewriting logic as a unified model of concurrency\",\n        \"Twenty years of rewriting logic\",\n        \"REM (Reduce Elan Machine): Core of the New ELAN Compiler\",\n        \"Program Derivation = Rules + Strategies\",\n        \"A Powerdomain Construction\",\n        \"The (n2‚àí1)superscriptùëõ21(n^{2}-1)-Puzzle and Related Relocation Problems\",\n        \"Typed Mobile Ambients in Maude\",\n        \"Model checking of strategy-controlled systems in rewriting logic\",\n        \"QMaude: Quantitative Specification and Verification in Rewriting Logic\",\n        \"Model checking strategy-controlled rewriting systems\",\n        \"Parameterized strategies specification in Maude\",\n        \"The semantics of the Maude strategy language\",\n        \"Strategies, model checking and branching-time properties in Maude\",\n        \"Metalevel transformation of strategies\",\n        \"Model checking strategy-controlled systems in rewriting logic\",\n        \"Simulating and model checking membrane systems using strategies in Maude\",\n        \"Solving Sudoku Puzzles with Rewriting Rules\",\n        \"Rewriting Logic Using Strategies for Neural Networks: An Implementation in Maude\",\n        \"Term Rewriting Systems\",\n        \"Basic completion strategies as another application of the Maude strategy language\",\n        \"A survey of strategies in rule-based program transformation systems\",\n        \"A Compiler for Nondeterministic Term Rewriting Systems\",\n        \"Language Design with the Spoofax Language Workbench\",\n        \"Recr√©ations math√©matiques (2 ed.).\"\n    ],\n    \"reasoning\": \"Selected these 61 references because they represent foundational work and recent advances in The Maude strategy language, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}