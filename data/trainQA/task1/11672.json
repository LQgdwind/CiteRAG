{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Two or three things I know about tree transducers\n\nPaper Abstract: Abstract You might know that the name ?tree transducers? refers to various kinds of automata that compute functions on ranked trees, i.e. terms over a first-order signature. But have you ever wondered about: • How to remember what a macro tree transducer does? • Or what are the connections between top-down tree(-to-string) transducers, multi bottom-up tree(-to-string) transducers, tree-walking transducers, (invisible) pebble tree transducers, monadic second-order transductions, unfoldings of rooted directed acyclic graphs (i.e. term graphs) — and what happens when the functions that they compute are composed? The answers may be found in old papers (mostly coauthored by Engelfriet), but maybe you can save some time by first looking at this short note.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Translations on a context-free grammar\",\n        \"Regular Transformations (Dagstuhl Seminar 23202)\",\n        \"Expressiveness of streaming string transducers\",\n        \"Streaming Tree Transducers\",\n        \"10th Asian Logic Conference\",\n        \"A Comparison of Tree Transductions Defined by Monadic Second Order Logic and by Attribute Grammars\",\n        \"The Safe Lambda Calculus\",\n        \"The Hilbert method for transducer equivalence\",\n        \"Transducers of polynomial growth\",\n        \"Tree-walking automata cannot be determinized\",\n        \"Tree-walking automata do not recognize all regular languages\",\n        \"First-order tree-to-tree functions\",\n        \"String-to-string interpretations with polynomial-size output\",\n        \"Algebraic recognition of regular functions\",\n        \"The caucal hierarchy of infinite graphs in terms of logic and higher-order pushdown automata\",\n        \"On infinite terms having a decidable monadic theory\",\n        \"Transforming structures by set interpretations\",\n        \"Graph structure and monadic second-order logic. A language-theoretic approach\",\n        \"The IO- and OI-hierarchies\",\n        \"Top-down Tree Transducers with Regular Look-ahead\",\n        \"The time complexity of typechecking tree-walking tree transducers\",\n        \"Context-free grammars with storage\",\n        \"Erratum to: “Top-down Tree Transducers with Regular Look-ahead”\",\n        \"XML navigation and transformation by tree-walking automata and transducers with visible and invisible pebbles\",\n        \"Linear-bounded composition of tree-walking tree transducers: linear size increase and complexity\",\n        \"Macro Tree Transducers, Attribute Grammars, and MSO Definable Tree Translations\",\n        \"Output string languages of compositions of deterministic macro tree transducers\",\n        \"A comparison of pebble tree transducers with macro tree transducers\",\n        \"Macro tree translations of linear size increase are MSO definable\",\n        \"Look-ahead removal for total deterministic top-down tree transducers\",\n        \"Macro tree transducers\",\n        \"Pushdown machines for the macro tree transducer\",\n        \"High level tree transducers and iterated pushdown tree transducers\",\n        \"Word-Mappings of Level 2\",\n        \"Copyful streaming string transducers\",\n        \"Grammars with macro-like productions\",\n        \"A bottom-up characterization of deterministic top-down tree transducers with regular look-ahead\",\n        \"Linear high-order deterministic tree transducers with regular look-ahead\",\n        \"A lambda calculus characterization of MSO definable tree transductions\",\n        \"Polyregular functions – characterisations and refutations\",\n        \"Refutations of pebble minimization via output languages\",\n        \"Higher-order pushdown trees are easy\",\n        \"Semantics of context-free languages\",\n        \"Typechecking for XML transformers\",\n        \"The Many Facets of String Transducers\",\n        \"Homogeneity without loss of generality\",\n        \"Elements of Automata Theory\",\n        \"Equivalence of deterministic top-down tree-to-string transducers is decidable\",\n        \"Word-mappings of level 3\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Two or three things I know about tree transducers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}