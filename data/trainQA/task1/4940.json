{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Pretrained Cost Model for Distributed Constraint Optimization Problems\n\nPaper Abstract: Abstract Distributed Constraint Optimization Problems (DCOPs) are an important subclass of combinatorial optimization problems, where information and controls are distributed among multiple autonomous agents. Previously, Machine Learning (ML) has been largely applied to solve combinatorial optimization problems by learning effective heuristics. However, existing ML-based heuristic methods are often not generalizable to different search algorithms. Most importantly, these methods usually require full knowledge about the problems to be solved, which are not suitable for distributed settings where centralization is not realistic due to geographical limitations or privacy concerns. To address the generality issue, we propose a novel directed acyclic graph representation schema for DCOPs and leverage the Graph Attention Networks (GATs) to embed graph representations. Our model, GAT-PCM, is then pretrained with optimally labelled data in an offline manner, so as to construct effective heuristics to boost a broad range of DCOP algorithms where evaluating the quality of a partial assignment is critical, such as local search or backtracking search. Furthermore, to enable decentralized model inference, we propose a distributed embedding schema of GAT-PCM where each agent exchanges only embedded vectors, and show its soundness and complexity. Finally, we demonstrate the effectiveness of our model by combining it with a local search or a backtracking search algorithm. Extensive empirical evaluations indicate that the GAT-PCM-boosted algorithms significantly outperform the state-of-the-art methods in various benchmarks. Our pretrained cost model is available at https://github.com/dyc941126/GAT-PCM.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Emergence of scaling in random networks\",\n        \"Machine Learning for combinatorial optimization: A methodological tour dâ€™horizon\",\n        \"Language models are few-shot learners\",\n        \"A class of iterative refined Max-sum algorithms via non-consecutive value propagation strategies\",\n        \"RMB-DPOP: Refining MB-DPOP by reducing redundant inference\",\n        \"Fast and accurate deep network learning by exponential linear units (ELUs)\",\n        \"Governing convergence of Max-sum on DCOPs through damping and splitting\",\n        \"Bucket elimination: A unifying framework for probabilistic inference\",\n        \"PT-ISABB: A hybrid tree-based complete algorithm to solve asymmetric distributed constraint optimization problems\",\n        \"Neural regret-matching for distributed constraint optimization problems\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"An extensible SAT-solver\",\n        \"Decentralised coordination of low-power embedded devices using the Max-sum algorithm\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"A distributed constraint optimization (DCOP) approach to the economic dispatch with demand response\",\n        \"Taking advantage of stable sets of variables in constraint satisfaction problems\",\n        \"Look-ahead value ordering for constraint satisfaction problems\",\n        \"Exact combinatorial optimization with graph convolutional neural networks\",\n        \"Asymmetric distributed constraint optimization problems\",\n        \"Privacy preserving region optimal algorithms for symmetric and asymmetric DCOPs\",\n        \"Deep residual learning for image recognition\",\n        \"DSSA+: Distributed collision avoidance algorithm in an environment where both course and speed changes are allowed\",\n        \"Distributed partial constraint satisfaction problem\",\n        \"A large neighboring search schema for multi-agent optimization\",\n        \"Long short-term memory\",\n        \"Decomposition of domains based on the micro-structure of finite constraint-satisfaction problems\",\n        \"Adam: A method for stochastic optimization\",\n        \"ImageNet classification with deep convolutional neural networks\",\n        \"Can Q-Learning with graph networks learn a generalizable branching heuristic for a SAT solver?\",\n        \"Handwritten digit recognition with a back-propagation network\",\n        \"Learning heuristics for quantified boolean formulas through reinforcement learning\",\n        \"DeepGCNs: Can GCNs go as deep as CNNs?\",\n        \"Forward bounding on pseudo-trees for DCOPs and ADCOPs\",\n        \"Distributed algorithms for DCOP: A graphical-game-based approach\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Adopt: Asynchronous distributed constraint optimization with quality guarantees\",\n        \"A multi-agent approach to optimal channel assignment in WLANs\",\n        \"Distributed Gibbs: A linear-space sampling-based DCOP algorithm\",\n        \"Distributed breakout: Beyond satisfaction\",\n        \"DUCT: An upper confidence bound approach to distributed constraint optimization problems\",\n        \"A scalable method for multiagent constraint optimization\",\n        \"MB-DPOP: A new memory-bounded algorithm for distributed optimization\",\n        \"Deep Bucket Elimination\",\n        \"Bounded approximate decentralised coordination via the max-sum algorithm\",\n        \"Learning a SAT solver from single-bit supervision\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"DCOPolis: A framework for simulating and deploying distributed constraint reasoning algorithms\",\n        \"Attention is all you need\",\n        \"Graph attention networks\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Towards effective deep learning for constraint satisfaction problems\",\n        \"BnB-ADOPT: An asynchronous branch-and-bound DCOP algorithm\",\n        \"Learning local search heuristics for boolean satisfiability\",\n        \"Distributed stochastic search and distributed breakout: Properties, comparison and applications to constraint optimization problems in sensor networks\",\n        \"Balancing exploration and exploitation in incomplete min/max-sum inference for distributed constraint optimization\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Pretrained Cost Model for Distributed Constraint Optimization Problems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}