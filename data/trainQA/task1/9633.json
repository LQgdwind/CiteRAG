{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Exploiting On-chip Heterogeneity of Versal Architecture for GNN Inference Acceleration\n\nPaper Abstract: Abstract Graph Neural Networks (GNNs) have revolutionized many Machine Learning (ML) applications, such as social network analysis, bioinformatics, etc. GNN inference can be accelerated by exploiting data sparsity in the input graph, vertex features, and intermediate data in GNN computations. For dynamic sparsity exploitation, we leverage the heterogeneous computing capabilities of AMD Versal ACAP architecture to accelerate GNN inference. We develop a custom hardware module that executes the sparse primitives of the computation kernel on the Programmable Logic (PL) and efficiently computes the dense primitives using the AI Engine (AIE). To exploit data sparsity during inference, we devise a runtime kernel mapping strategy that dynamically assigns computation tasks to the PL and AIE based on data sparsity. Our implementation on the VCK5000 ACAP platform leads to superior performance compared with the state-of-the-art implementations on CPU, GPU, ACAP, and other custom GNN accelerators. Compared with these implementations, we achieve significant average runtime speedup across various models and datasets of 162.42×, 17.01×, 9.90×, and 27.23×, respectively. Furthermore, for Graph Convolutional Network (GCN) inference, our approach leads to a speedup of 3.9-96.7× compared to designs using PL only on the same ACAP device.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Meta-gnn: On few-shot node classification in graph meta-learning\",\n        \"Link prediction based on graph neural networks\",\n        \"Accurate, low-latency, efficient sar automatic target recognition on fpga\",\n        \"Graph neural network (gnn) in image and video understanding using deep learning for computer vision applications\",\n        \"Deep learning on graphs for natural language processing\",\n        \"Graph neural networks for recommender system\",\n        \"Enhancing graph neural network-based fraud detectors against camouflaged fraudsters\",\n        \"https://docs.dgl.ai/en/1.0.x/tutorials/cpu/cpu_best_practises.html\",\n        \"Gnnadvisor: An adaptive and efficient runtime system for gnn acceleration on gpus\",\n        \"Dynamap: Dynamic algorithm mapping framework for low latency cnn inference\",\n        \"Accelerator design and exploration for deformable convolution networks\",\n        \"A framework for monte-carlo tree search on cpu-fpga heterogeneous platform via on-chip dynamic tree management\",\n        \"Hybriddnn: A framework for high-performance hybrid dnn accelerator design and implementation\",\n        \"Dnnexplorer: a framework for modeling and exploring a novel paradigm of fpga-based dnn accelerator\",\n        \"https://docs.xilinx.com/v/u/en-us/wp518-ai-edge-intro\",\n        \"Dynasparse: Accelerating gnn inference through dynamic sparsity exploitation\",\n        \"Inductive representation learning on large graphs\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"How powerful are graph neural networks?\",\n        \"Simplifying graph convolutional networks\",\n        \"graph datasets.\",\n        \"Triple sparsification of graph convolutional networks without sacrificing the accuracy.\",\n        \"A unified lottery ticket hypothesis for graph neural networks\",\n        \"H-gcn: A graph convolutional network accelerator on versal acap architecture\",\n        \"I-gcn: A graph convolutional network accelerator with runtime locality enhancement through islandization\",\n        \"Awb-gcn: A graph convolutional network accelerator with runtime workload rebalancing\",\n        \"Hygcn: A gcn accelerator with hybrid architecture\",\n        \"Boostgcn: A framework for optimizing gcn inference on fpga\",\n        \"Deepburning-gl: an automated framework for generating graph neural network accelerators\",\n        \"Flowgnn: A dataflow architecture for universal graph neural network inference via multi-queue streaming\",\n        \"Hardware acceleration of large scale gcn inference\",\n        \"Graphagile: An fpga-based overlay accelerator for low-latency gnn inference\",\n        \"Low-latency mini-batch gnn inference on cpu-fpga heterogeneous platform\",\n        \"Hp-gnn: generating high throughput gnn training implementation on cpu-fpga heterogeneous platform\",\n        \"Efficient neighbor-sampling-based gnn training on cpu-fpga heterogeneous platform\",\n        \"Gcn inference acceleration using high-level synthesis\",\n        \"Model-architecture co-design for high performance temporal gnn inference on fpga\",\n        \"Accelerating large scale gcn inference on fpga\",\n        \"Two-dimensional matrix partitioning for parallel computing on heterogeneous processors based on their functional performance models\",\n        \"https://docs.xilinx.com/r/en-us/am009-versal-ai-engine/ai-engine-to-ai-engine-data-communication-via-shared-memory\",\n        \"https://docs.xilinx.com/r/en-us/pg352-cips/\",\n        \"Ramulator: A fast and extensible dram simulator\",\n        \"GraphSAINT: Graph sampling based inductive learning method\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Fast graph representation learning with pytorch geometric\",\n        \"Deep graph library: Towards efficient and scalable deep learning on graphs\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Exploiting On-chip Heterogeneity of Versal Architecture for GNN Inference Acceleration, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}