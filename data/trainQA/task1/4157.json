{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DKM: Differentiable ùëò-Means Clustering Layer for Neural Network Compression\n\nPaper Abstract: Abstract Deep neural network (DNN) model compression for efficient on-device inference becomes increasingly important to reduce memory requirements and keep user data on-device. To this end, we propose a novel differentiable kùëòk-means clustering layer (DKM) and its application to train-time weight-clustering for DNN model compression. DKM casts kùëòk-means clustering as an attention problem and enables joint optimization of the DNN parameters and clustering centroids. Unlike prior works that rely on additional parameters and regularizers, DKM-based compression keeps the original loss function and model architecture fixed. We evaluated DKM-based compression on various DNN models for computer vision and natural language processing (NLP) tasks. Our results demonstrate that DKM delivers superior compression and accuracy trade-off on ImageNet1k and GLUE benchmarks. For example, DKM-based compression can offer 74.5% top-1 ImageNet1k accuracy on ResNet50 with 3.3MB model size (29.4x model compression factor). For MobileNet-v1, which is a challenging DNN to compress, DKM delivers 63.9% top-1 ImageNet1k accuracy with 0.72 MB model size (22.4x model compression factor). This result is 6.8% higher top-1 accuracy and 33% relatively smaller model size than the current state-of-the-art DNN compression algorithms. DKM also compressed a DistilBERT model by 11.8x with minimal (1.1%) accuracy loss on GLUE NLP benchmarks.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tensorflow eager: A multi-stage, python-embedded dsl for machine learning\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Metaquant: Learning to quantize by learning to penetrate non-differentiable quantization\",\n        \"Towards the limit of network quantization\",\n        \"Universal deep neural network compression\",\n        \"Hawq-v2: Hessian aware trace-weighted quantization of neural networks\",\n        \"Training with quantization noise for extreme model compression\",\n        \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding\",\n        \"Deep residual learning for image recognition\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Network quantization with element-wise gradient scaling\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"ALBERT: A lite BERT for self-supervised learning of language representations\",\n        \"Additive powers-of-two quantization: An efficient non-uniform discretization for neural networks\",\n        \"Towards accurate binary convolutional neural network\",\n        \"Darts: Differentiable architecture search\",\n        \"Espnetv2: A light-weight, power efficient, and general purpose convolutional neural network\",\n        \"Up or down? Adaptive rounding for post-training quantization\",\n        \"Profit: A novel training method for sub-4-bit mobilenet models\",\n        \"Weighted-entropy-based quantization for deep neural networks\",\n        \"Value-aware quantization for training and inference of neural networks\",\n        \"Lookahead: A far-sighted alternative of magnitude-based pruning\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Model compression via distillation and quantization\",\n        \"Xnor-net: Imagenet classification using binary convolutional neural networks\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Distilbert, a distilled version of BERT: smaller, faster, cheaper and lighter\",\n        \"Learning discrete weights using the local reparameterization trick\",\n        \"A general reinforcement learning algorithm that masters chess, shogi, and go through self-play\",\n        \"And the bit goes down: Revisiting the quantization of neural networks\",\n        \"Mobilebert: a compact task-agnostic bert for resource-limited devices\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Efficientnetv2: Smaller models and faster training\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Well-read students learn better: The impact of student initialization on knowledge distillation\",\n        \"Soft weight-sharing for neural network compression\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Haq: Hardware-aware automated quantization with mixed precision\",\n        \"Deep k-means: Re-training and parameter sharing with harder cluster assignments for compressing deep convolutions\",\n        \"Understanding straight-through estimator in training activation quantized neural nets\",\n        \"Nisp: Pruning networks using neuron importance score propagation\",\n        \"Gobo: Quantizing attention-based nlp models for low latency and energy efficient inference\",\n        \"Lq-nets: Learned quantization for highly accurate and compact deep neural networks\",\n        \"Linear symmetric quantization of neural networks for low-precision integer hardware\",\n        \"Neural epitome search for architecture-agnostic network compression\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in DKM: Differentiable ùëò-Means Clustering Layer for Neural Network Compression, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}