{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 59 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Scalable Test Problem Generator for Sequential Transfer Optimization\n\nPaper Abstract: Abstract Sequential transfer optimization (STO), which aims to improve the optimization performance on a task of interest by exploiting the knowledge captured from several previously-solved optimization tasks stored in a database, has been gaining increasing research attention over the years. However, despite the remarkable advances in algorithm design, the development of a systematic benchmark suite for comprehensive comparisons of STO algorithms received far less attention. Existing test problems are either simply generated by assembling other benchmark functions or extended from specific practical problems with limited scalability. The relationships between the optimal solutions of the source and target tasks in these problems are also often manually configured, limiting their ability to model different similarity relationships presented in real-world problems. Consequently, the good performance achieved by an algorithm on these problems might be biased and hard to be generalized to other problems. In light of the above, in this study, we first introduce four concepts for characterizing STO problems and present an important problem feature, namely similarity distribution, which quantitatively delineates the relationship between the optima of the source and target tasks. Then, we present the general design guidelines of STO problems and a particular STO problem generator with good scalability. Specifically, the similarity distribution of a problem can be easily customized, enabling a continuous spectrum of representation of the diverse similarity relationships of real-world problems. Lastly, a benchmark suite with 12 STO problems featured by a variety of customized similarity relationships is developed using the proposed generator, which would serve as an arena for STO algorithms and provide more comprehensive evaluation results. The source code of the problem generator is available at https://github.com/XmingHsueh/STOP-G.\n\n{retrieved_text}\n\nGenerate exactly 59 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 59\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Insights on transfer optimization: Because experience is the best teacher\",\n        \"Multiobjective multitasking optimization with decomposition-based transfer selection\",\n        \"Evolutionary transfer optimization-a new frontier in evolutionary computation research\",\n        \"Diversified knowledge transfer strategy for multitasking particle swarm optimization\",\n        \"Concurrently searching branches in software tests generation through multitask evolution\",\n        \"Towards faster vehicle routing by transferring knowledge from customer representation\",\n        \"Self-adaptive multifactorial evolutionary algorithm for multitasking production optimization\",\n        \"An evolutionary sequential transfer optimization algorithm for well placement optimization based on task characteristics\",\n        \"Scaling multiobjective evolution to large data with minions: A Bayes-informed multitask approach\",\n        \"LORM: Learning to optimize for resource management in wireless networks with few training samples\",\n        \"An overview and experimental study of learning-based optimization algorithms for the vehicle routing problem\",\n        \"Machine learning for combinatorial optimization: a methodological tour dâ€™horizon\",\n        \"Case-based reasoning in scheduling: reusing solution components\",\n        \"Initializing bayesian hyperparameter optimization via meta-learning\",\n        \"Curbing negative influences online for seamless transfer evolutionary optimization\",\n        \"Learning with case-injected genetic algorithms\",\n        \"Autoencoding evolutionary search with learning across heterogeneous problems\",\n        \"Scalable transfer evolutionary optimization: Coping with big task instances\",\n        \"ParamILS: an automatic algorithm configuration framework\",\n        \"Using previous models to bias structural learning in the hierarchical BOA\",\n        \"Automated algorithm configuration and parameter tuning\",\n        \"A survey of automatic parameter tuning methods for metaheuristics\",\n        \"The algorithm selection problem\",\n        \"Cross-disciplinary perspectives on meta-learning for algorithm selection\",\n        \"Few-shots parallel algorithm portfolio construction via co-evolution\",\n        \"Experience-based optimization: A coevolutionary approach\",\n        \"Regret bounds for meta Bayesian optimization with an unknown Gaussian process prior\",\n        \"Structural transfer using EDAs: An application to multi-marker tagging SNP selection\",\n        \"Improving sampling in evolution strategies through mixture-based distributions built from past problem instances\",\n        \"Multiproblem surrogates: Transfer evolutionary multiobjective optimization of computationally expensive problems\",\n        \"Generalizing transfer Bayesian optimization to source-target heterogeneity\",\n        \"Transfer learning with Gaussian processes for Bayesian optimization\",\n        \"Multisource selective transfer framework in multiobjective optimization problems\",\n        \"Evolutionary sequential transfer optimization for objective-heterogeneous problems\",\n        \"The art of building a good benchmark\",\n        \"First complexity results for evolutionary knowledge transfer\",\n        \"Comparison of multiobjective evolutionary algorithms: Empirical results\",\n        \"Scalable test problems for evolutionary multiobjective optimization\",\n        \"A review of multiobjective test problems and a scalable test problem toolkit\",\n        \"Experience-based evolutionary algorithms for expensive optimization\",\n        \"Multiobjective combinatorial optimization using a single deep reinforcement learning model\",\n        \"Convex optimization\",\n        \"A genetic learning approach with case-based memory for job-shop scheduling problems\",\n        \"Case-based heuristic selection for timetabling problems\",\n        \"A refined case based genetic algorithm for intelligent route optimization\",\n        \"Using case retrieval to seed genetic algorithms\",\n        \"Mathematics for machine learning\",\n        \"Applied smoothing techniques for data analysis: the kernel approach with S-Plus illustrations\",\n        \"Automatic nonuniform random variate generation\",\n        \"Learnable evolutionary search across heterogeneous problems via kernelized autoencoding\",\n        \"Block-level knowledge transfer for evolutionary multitask optimization\",\n        \"Transferable adaptive differential evolution for many-task optimization\",\n        \"Multifactorial evolutionary algorithm based on diffusion gradient descent\",\n        \"Designing benchmark problems for large-scale continuous optimization\",\n        \"A practical tutorial on the use of nonparametric statistical tests as a methodology for comparing evolutionary and swarm intelligence algorithms\",\n        \"Evolutionary multitasking for single-objective continuous optimization: Benchmark problems, performance metric, and baseline results\",\n        \"Generalized multitasking for evolutionary optimization of expensive problems\",\n        \"Surrogate-assisted evolutionary framework with adaptive knowledge transfer for multi-task optimization\",\n        \"Regularized evolutionary multitask optimization: Learning to intertask transfer in aligned subspace\"\n    ],\n    \"reasoning\": \"Selected these 59 references because they represent foundational work and recent advances in A Scalable Test Problem Generator for Sequential Transfer Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}