{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Algorithms for a Topology-aware Massively Parallel Computation Model\n\nPaper Abstract: Abstract Most of the prior work in massively parallel data processing assumes homogeneity, i.e., every computing unit has the same computational capability, and can communicate with every other unit with the same latency and bandwidth. However, this strong assumption of a uniform topology rarely holds in practical settings, where computing units are connected through complex networks. To address this issue, Blanas et al. [9] recently proposed a topology-aware massively parallel computation model that integrates the network structure and heterogeneity in the modeling cost. The network is modeled as a directed graph, where each edge is associated with a cost function that depends on the data transferred between the two endpoints. The computation proceeds in synchronous rounds, and the cost of each round is measured as the maximum cost over all the edges in the network. In this work, we take the first step into investigating three fundamental data processing tasks in this topology-aware parallel model: set intersection, cartesian product, and sorting. We focus on network topologies that are tree topologies, and present both lower bounds, as well as (asymptotically) matching upper bounds. The optimality of our algorithms is with respect to the initial data distribution among the network nodes, instead of assuming worst-case distribution as in previous results. Apart from the theoretical optimality of our results, our protocols are simple, use a constant number of rounds, and we believe can be implemented in practical settings as well.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optimizing multiway joins in a map-reduce environment\",\n        \"Parallel algorithms for constructing range and nearest-neighbor searching data structures\",\n        \"Parallel algorithms for geometric graph problems\",\n        \"Massively parallel algorithms for finding well-connected components in sparse graphs\",\n        \"A logarithmic approximation for unsplittable flow on line graphs\",\n        \"A new framework for distributed submodular maximization\",\n        \"Communication Steps for Parallel Query Processing\",\n        \"Skew in Parallel Query Processing\",\n        \"Topology-aware parallel data processing: Models, algorithms and systems at scale\",\n        \"Parallel data analysis directly on scientific file formats\",\n        \"Tight network topology dependent bounds on rounds of communication\",\n        \"Topology matters in communication\",\n        \"Node-weighted network design in planar and minor-closed families of graphs\",\n        \"Edge-disjoint paths in planar graphs with constant congestion\",\n        \"Managing data transfers in computer clusters with orchestra\",\n        \"Loom: Optimal aggregation overlays for in-memory big data processing\",\n        \"Optimal communication structures for big data aggregation\",\n        \"LogP: Towards a Realistic Model of Parallel Computation\",\n        \"Sparse and lopsided set disjointness via information theory\",\n        \"Mapreduce: Simplified data processing on large clusters\",\n        \"Improved massively parallel computation algorithms for mis, matching, and vertex cover\",\n        \"Communication-efficient parallel sorting\",\n        \"Sorting, searching, and simulation in the mapreduce framework\",\n        \"Output-optimal Parallel Algorithms for Similarity Joins\",\n        \"Output-optimal massively parallel algorithms for similarity joins\",\n        \"A worst-case optimal multi-round algorithm for parallel computation of conjunctive queries\",\n        \"Worst-case optimal algorithms for parallel query processing\",\n        \"Parallel evaluation of conjunctive queries\",\n        \"A guide to formal analysis of join processing in massively parallel systems\",\n        \"Topology dependent bounds for faqs\",\n        \"Complexity issues in VLSI: optimal layouts for the shuffle-exchange graph and other networks\",\n        \"Introduction to parallel algorithms and architectures: Arrays· trees· hypercubes\",\n        \"Packet routing and job-shop scheduling ino (congestion+ dilation) steps\",\n        \"Fat-trees: Universal networks for hardware-efficient supercomputing\",\n        \"Locality in distributed graph algorithms\",\n        \"Chasing similarity: Distribution-aware aggregation scheduling\",\n        \"TAG: A tiny aggregation service for ad-hoc sensor networks\",\n        \"The design of an acquisitional query processor for sensor networks\",\n        \"Supporting aggregate queries over ad-hoc wireless sensor networks\",\n        \"Terabyte sort on apache hadoop\",\n        \"A tutorial on decomposition methods for network utility maximization\",\n        \"Unifying the landscape of cell-probe lower bounds\",\n        \"Distributed computing.\",\n        \"Minimal mapreduce algorithms\",\n        \"A Bridging Model for Parallel Computation\",\n        \"A simple parallel algorithm for natural joins on binary relations\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Algorithms for a Topology-aware Massively Parallel Computation Model, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}