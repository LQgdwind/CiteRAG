{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: VerbCL: A Dataset of Verbatim Quotes for Highlight Extraction in Case Law\n\nPaper Abstract: Abstract. Citing legal opinions is a key part of legal argumentation, an expert task that requires retrieval, extraction and summarization of information from court decisions. The identification of legally salient parts in an opinion for the purpose of citation may be seen as a domain-specific formulation of a highlight extraction or passage retrieval task. As similar tasks in other domains such as web search show significant attention and improvement, progress in the legal domain is hindered by the lack of resources for training and evaluation. This paper presents a new dataset that consists of the citation graph of court opinions, which cite previously published court opinions in support of their arguments. In particular, we focus on the verbatim quotes, i.e., where the text of the original opinion is directly reused. With this approach, we explain the relative importance of different text spans of a court opinion by showcasing their usage in citations, and measuring their contribution to the relations between opinions in the citation graph. We release VerbCL111https://github.com/j-rossi-nl/verbcl, a large-scale dataset derived from CourtListener and introduce the task of highlight extraction as a single-document summarization task based on the citation graph establishing the first baseline results for this task on the VerbCL dataset.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Variations of the Similarity Function of TextRank for Automated Summarization\",\n        \"Natural language processing with Python: analyzing text with the natural language toolkit\",\n        \"A faster algorithm for betweenness centrality\",\n        \"Centrality estimation in large networks\",\n        \"Tldr: Extreme summarization of scientific documents\",\n        \"Overview and Results: CL-SciSumm Shared Task 2019\",\n        \"Automatic Online Lecture Highlighting Based on Multimedia Analysis\",\n        \"Neural Summarization by Extracting Sentences and Words\",\n        \"What Does BERT Look At? An Analysis of BERT’s Attention\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"IITP in COLIEE@ICAIL 2019: Legal Information Retrieval using BM25 and BERT\",\n        \"Exploring Network Structure, Dynamics, and Function using NetworkX\",\n        \"HighRES: Highlight-based Reference-less Evaluation of Summarization\",\n        \"What’s New? Summarizing Contributions in Scientific Literature\",\n        \"Enriching word embeddings for patent retrieval with global context\",\n        \"Extraction of Sentences Describing Originality from Conclusion in Academic Papers\",\n        \"Automatic summarization of scientific articles: A survey\",\n        \"COLIEE-2018: Evaluation of the Competition on Legal Information Extraction and Entailment\",\n        \"Inferring student comprehension from highlighting patterns in digital textbooks: An exploration of an authentic learning platform\",\n        \"KNN clustering approach to legal precedence retrieval\",\n        \"Binary Codes Capable of Correcting Deletions, Insertions and Reversals\",\n        \"Betweenness and diversity in journal citation networks as measures of interdisciplinarity—A tribute to Eugene Garfield\",\n        \"Do topic shift and query reformulation patterns correlate in academic search?\",\n        \"Investigating queries and search failures in academic search\",\n        \"ROUGE: A Package for Automatic Evaluation of Summaries\",\n        \"Open Sesame: Getting inside BERT’s Linguistic Knowledge\",\n        \"Text Summarization with Pretrained Encoders\",\n        \"S2ORC: The Semantic Scholar Open Research Corpus\",\n        \"A test collection for evaluating legal case law search\",\n        \"PyTextRank, a Python implementation of TextRank for phrase extraction and summarization of text documents\",\n        \"Influence of co-authorship networks in the research impact: Ego network analyses from Microsoft Academic Search\",\n        \"Interactive highlighting for just-in-time formative assessment during whole-class instruction: effects on vocabulary learning and reading comprehension\",\n        \"A Summary of the COLIEE 2019 Competition\",\n        \"Query Generation for Patent Retrieval with Keyword Extraction Based on Syntactic Features.\",\n        \"Legal Information Retrieval with Generalized Language Models\",\n        \"DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter\",\n        \"Engineering knowledge graph for keyword discovery in patent search\",\n        \"Overview of LiLAS 2020–Living Labs for Academic Search\",\n        \"Toward an interactive patent retrieval framework based on distributed representations\",\n        \"Patent retrieval: a literature review\",\n        \"BERT Rediscovers the Classical NLP Pipeline\",\n        \"JNLP group: legal information retrieval with summary and logical structure analysis\",\n        \"CAIL2019-SCM: A Dataset of Similar Case Matching in Legal Domain\",\n        \"Explicit semantic ranking for academic search via knowledge graph embedding\",\n        \"How Does NLP Benefit Legal System: A Summary of Legal Artificial Intelligence\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in VerbCL: A Dataset of Verbatim Quotes for Highlight Extraction in Case Law, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}