{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Data-Independent Structured Pruning of Neural Networks via Coresets\n\nPaper Abstract: Abstract Model compression is crucial for deployment of neural networks on devices with limited computational and memory resources. Many different methods show comparable accuracy of the compressed model and similar compression rates. However, the majority of the compression methods are based on heuristics and offer no worst-case guarantees on the trade-off between the compression rate and the approximation error for an arbitrarily new sample. We propose the first efficient structured pruning algorithm with a provable trade-off between its compression rate and the approximation error for any future test sample. Our method is based on the coreset framework and it approximates the output of a layer of neurons/filters by a coreset of neurons/filters in the previous layer and discards the rest. We apply this framework in a layer-by-layer fashion from the bottom to the top. Unlike previous works, our coreset is data independent, meaning that it provably guarantees the accuracy of the function for any input x‚àà‚Ñùdùë•superscript‚Ñùùëëx\\in\\mathbb{R}^{d}, including an adversarial one.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Matrix entry-wise sampling: Simple is best\",\n        \"A convergence theory for deep learning via over-parameterization\",\n        \"Neural network learning: Theoretical foundations\",\n        \"Data-dependent coresets for compressing neural networks with applications to generalization bounds\",\n        \"New frameworks for offline and streaming coreset constructions\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Exploiting linear structure within convolutional networks for efficient evaluation\",\n        \"Learning to prune deep neural networks via layer-wise optimal brain surgeon\",\n        \"A note on element-wise matrix sparsification via a matrix-valued bernstein inequality\",\n        \"Coreset-based neural network compression\",\n        \"Neural architecture search: A survey\",\n        \"A unified framework for approximating and clustering data\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"The state of sparsity in deep neural networks\",\n        \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Deep residual learning for image recognition\",\n        \"Soft filter pruning for accelerating deep convolutional neural networks\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Filter pruning via geometric median for deep convolutional neural networks acceleration\",\n        \"Channel pruning for accelerating very deep neural networks\",\n        \"What does a pruned deep neural network forgets?\",\n        \"Network trimming: A data-driven neuron pruning approach towards efficient deep architectures\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"A note on randomized element-wise matrix sparsification\",\n        \"Universal epsilon-approximators for integrals\",\n        \"Fast convnets using group-wise brain damage\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Optimal brain damage\",\n        \"Pruning filters for efficient convnets\",\n        \"Provable filter pruning for efficient neural networks\",\n        \"Learning efficient convolutional networks through network slimming\",\n        \"Rethinking the value of network pruning\",\n        \"Thinet: A filter level pruning method for deep neural network compression\",\n        \"Pruning convolutional neural networks for resource efficient transfer learning\",\n        \"Skeletonization: A technique for trimming the fat from a network via relevance assessment\",\n        \"Towards understanding the role of over-parametrization in generalization of neural networks\",\n        \"Collaborative channel pruning for deep networks\",\n        \"Coresets and sketches\",\n        \"Comparing fine-tuning and rewinding in neural network pruning\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Coresets for monotonic functions with applications to deep learning\",\n        \"On the uniform convergence of relative frequencies of events to their probabilities\",\n        \"Rethinking the smaller-norm-less-informative assumption in channel pruning of convolution layers\",\n        \"Gate decorator: Global filter pruning method for accelerating deep convolutional neural networks\",\n        \"NISP: pruning networks using neuron importance score propagation\",\n        \"Discrimination-aware channel pruning for deep neural networks\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Data-Independent Structured Pruning of Neural Networks via Coresets, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}