{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 66 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: G-TADOC: Enabling Efficient GPU-Based Text Analytics without Decompression\n\nPaper Abstract: Abstract Text analytics directly on compression (TADOC) has proven to be a promising technology for big data analytics. GPUs are extremely popular accelerators for data analytics systems. Unfortunately, no work so far shows how to utilize GPUs to accelerate TADOC. We describe G-TADOC, the first framework that provides GPU-based text analytics directly on compression, effectively enabling efficient text analytics on GPUs without decompressing the input data. G-TADOC solves three major challenges. First, TADOC involves a large amount of dependencies, which makes it difficult to exploit massive parallelism on a GPU. We develop a novel fine-grained thread-level workload scheduling strategy for GPU threads, which partitions heavily-dependent loads adaptively in a fine-grained manner. Second, in developing G-TADOC, thousands of GPU threads writing to the same result buffer leads to inconsistency while directly using locks and atomic operations lead to large synchronization overheads. We develop a memory pool with thread-safe data structures on GPUs to handle such difficulties. Third, maintaining the sequence information among words is essential for lossless compression. We design a sequence-support strategy, which maintains high GPU parallelism while ensuring sequence information. Our experimental evaluations show that G-TADOC provides 31.1Ã—\\times average speedup compared to state-of-the-art TADOC.\n\n{retrieved_text}\n\nGenerate exactly 66 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 66\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Zwift: A Programming Framework for High Performance Text Analytics on Compressed Data\",\n        \"Efficient document analytics on compressed data: Method, challenges, algorithms, insights\",\n        \"Enabling efficient random access to hierarchically-compressed data\",\n        \"TADOC: Text analytics directly on compression\",\n        \"MapD: A GPU-powered big data analytics and visualization platform\",\n        \"Spark-GPU: An accelerated in-memory data processing engine on clusters\",\n        \"SABER: Window-based hybrid stream processing for heterogeneous architectures\",\n        \"Gunrock: GPU graph analytics\",\n        \"FineStream: Fine-Grained Window-Based Stream Processing on CPU-GPU Integrated Architectures\",\n        \"Latent dirichlet allocation\",\n        \"A Probabilistic Analysis of the Rocchio Algorithm with TFIDF for Text Categorization.\",\n        \"Inferring sequential structure\",\n        \"Identifying hierarchical structure in sequences: A linear-time algorithm\",\n        \"Linear-time, incremental hierarchy inference for compression\",\n        \"Wikipedia HTML data dumps\",\n        \"Amazon elastic compute cloud (Amazon EC2)\",\n        \"UCI machine learning repository\",\n        \"COVID-19 Data from Yelp Open Dataset\",\n        \"DBLP\",\n        \"Grammar compression, lz-encodings, and string algorithms with implicit input\",\n        \"The smallest grammar problem\",\n        \"A faster grammar-based self-index\",\n        \"Random access to grammar-compressed strings and trees\",\n        \"Finger search in grammar-compressed strings\",\n        \"Gract: a grammar-based compressed index for trajectory data\",\n        \"Balancing straight-line programs\",\n        \"A space-optimal grammar compression\",\n        \"POSTER: Exploring Deep Reuse in Winograd CNN Inference\",\n        \"Keyword extraction from a single document using word co-occurrence statistical information\",\n        \"Glove: Global vectors for word representation\",\n        \"word2vec parameter learning explained\",\n        \"word2vec\",\n        \"Compact Data Structures: A Practical Approach.\",\n        \"Succinct: Enabling queries on compressed data\",\n        \"A block-sorting lossless data compression algorithm\",\n        \"Indexing compressed text\",\n        \"When indexing equals compression: Experiments with compressing suffix arrays and applications\",\n        \"Compressed text indexes: From theory to practice\",\n        \"Bicriteria data compression: efficient and usable\",\n        \"On the bit-complexity of lempel-ziv compression\",\n        \"From theory to practice: Plug and play with succinct data structures\",\n        \"Compressed suffix trees with full functionality\",\n        \"Practical aspects of Compressed Suffix Arrays and FM-Index in Searching DNA Sequences\",\n        \"Reducing the space requirement of suffix trees\",\n        \"Suffix arrays: a new method for on-line string searches\",\n        \"High-order entropy-compressed text indexes\",\n        \"Compressed suffix arrays and suffix trees with applications to text indexing and string matching\",\n        \"Compressed text databases with efficient query algorithms based on the compressed suffix array\",\n        \"Succinct representations of lcp information and improvements in the compressed suffix arrays\",\n        \"New text indexing functionalities of the compressed suffix arrays\",\n        \"FM-index\",\n        \"Opportunistic data structures with applications\",\n        \"An experimental study of a compressed index\",\n        \"An experimental study of an opportunistic index\",\n        \"Compact inverted index storage using general-purpose compression libraries\",\n        \"Index compression using byte-aligned ANS coding and two-dimensional contexts\",\n        \"Fast dictionary-based compression for inverted indexes\",\n        \"Techniques for Inverted Index Compression\",\n        \"Compressed Indexes for Fast Search of Semantic Data\",\n        \"The potential of learned index structures for index compression\",\n        \"Compressing inverted indexes with recursive graph bisection: A reproducibility study\",\n        \"Multi-GPU graph analytics\",\n        \"Parallel approaches to machine learningâ€”a comprehensive survey\",\n        \"Tensorflow: Large-scale machine learning on heterogeneous distributed systems\",\n        \"An Efficient Parallel Secure Machine Learning Framework on GPUs\",\n        \"Mining hard samples globally and efficiently for person reidentification\"\n    ],\n    \"reasoning\": \"Selected these 66 references because they represent foundational work and recent advances in G-TADOC: Enabling Efficient GPU-Based Text Analytics without Decompression, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}