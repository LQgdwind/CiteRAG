{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: QHDOPT: A Software for Nonlinear Optimization with Quantum Hamiltonian Descent\n\nPaper Abstract: Abstract We develop an open-source, end-to-end software (named QHDOPT), which can solve nonlinear optimization problems using the quantum Hamiltonian descent (QHD) algorithm. QHDOPT offers an accessible interface and automatically maps tasks to various supported quantum backends (i.e., quantum hardware machines). These features enable users, even those without prior knowledge or experience in quantum computing, to utilize the power of existing quantum devices for nonlinear and nonconvex optimization tasks. In its intermediate compilation layer, QHDOPT employs SimuQ, an efficient interface for Hamiltonian-oriented programming, to facilitate multiple algorithmic specifications and ensure compatible cross-hardware deployment. The detailed documentation of QHDOPT is available at https://github.com/jiaqileng/QHDOPT.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Qiskit: An open-source framework for quantum computing\",\n        \"Amazon Braket Python SDK, 2024\",\n        \"Continuous quantum error correction for evolution under time-dependent Hamiltonians\",\n        \"The heavy ball with friction method, I. the continuous dynamical system: global exploration of the local minima of a real-valued function by asymptotic analysis of a dissipative dynamical system\",\n        \"PennyLane: Automatic differentiation of hybrid quantum-classical computations, 2018\",\n        \"Assessing requirements to scale to practical quantum advantage, 2022\",\n        \"Solving mixed-integer quadratic programming problems with ibm-cplex: a progress report\",\n        \"Logical quantum processor based on reconfigurable atom arrays\",\n        \"Quantum simulation of real-space dynamics\",\n        \"D-Wave Ocean SDK, 2023\",\n        \"End-to-end resource analysis for quantum interior-point methods and portfolio optimization\",\n        \"A quantum approximate optimization algorithm, 2014\",\n        \"Compiling machine learning programs via high-level tracing\",\n        \"Suppressing quantum errors by scaling a surface code logical qubit\",\n        \"Gurobi optimizer reference manual, 2021\",\n        \"Complexity and algorithms for nonlinear optimization problems\",\n        \"Qubovert, 2022\",\n        \"QuTiP: An open-source python framework for the dynamics of open quantum systems\",\n        \"Introduction to Ipopt: A tutorial for downloading, installing, and using Ipopt\",\n        \"Non-convex quadratic programming using coherent optical networks, 2022\",\n        \"Quantum Hamiltonian Descent, 2023a\",\n        \"A quantum-classical performance separation in nonconvex optimization, 2023b\",\n        \"Expanding hardware-efficiently manipulable hilbert space via Hamiltonian embedding, 2024\",\n        \"Analog quantum error correction\",\n        \"Research and development of common software platform for Ising machines\",\n        \"Sympy: symbolic computing in python\",\n        \"QuantumAnnealing.jl, 2022\",\n        \"Quantum optimization with arbitrary connectivity using Rydberg atom arrays\",\n        \"Photonic quantum technologies\",\n        \"SimuQ: A framework for programming quantum Hamiltonian simulation with analog compilation\",\n        \"Some methods of speeding up the convergence of iteration methods\",\n        \"Quera Bloqade.jl, 2024\",\n        \"QUBO formulations of combinatorial optimization problems for quantum computing devices\",\n        \"Quantum computing with atomic qubits and rydberg interactions: progress and challenges\",\n        \"Mid-circuit correction of correlated phase errors using an array of spectator qubits\",\n        \"Q# as a quantum algorithmic language, 2022\",\n        \"Real-time quantum error correction beyond break-even\",\n        \"A differential equation for modeling Nesterov’s accelerated gradient method: Theory and insights\",\n        \"Cirq, 2019\",\n        \"A quantum approximate optimization algorithm for continuous problems, 2019\",\n        \"Quantum information processing with superconducting circuits: a review\",\n        \"A variational perspective on accelerated methods in optimization\",\n        \"QUBO.jl: A Julia ecosystem for quadratic unconstrained binary optimization, 2023\",\n        \"Coherent Ising machines—optical neural networks operating at the quantum limit\",\n        \"PyQUBO: Python library for mapping combinatorial optimization problems to QUBO form\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in QHDOPT: A Software for Nonlinear Optimization with Quantum Hamiltonian Descent, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}