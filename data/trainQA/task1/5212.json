{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scaling Up Knowledge Graph Creation to Large and Heterogeneous Data Sources\n\nPaper Abstract: Abstract RDF knowledge graphs (KG) are powerful data structures to represent factual statements created from heterogeneous data sources. KG creation is laborious and demands data management techniques to be executed efficiently. This paper tackles the problem of the automatic generation of KG creation processes declaratively specified; it proposes techniques for planning and transforming heterogeneous data into RDF triples following mapping assertions specified in the RDF Mapping Language (RML). Given a set of mapping assertions, the planner provides an optimized execution plan by partitioning and scheduling the execution of the assertions. First, the planner assesses an optimized number of partitions considering the number of data sources, type of mapping assertions, and the associations between different assertions. After providing a list of partitions and assertions that belong to each partition, the planner determines their execution order. A greedy algorithm is implemented to generate the partitions’ bushy tree execution plan. Bushy tree plans are translated into operating system commands that guide the execution of the partitions of the mapping assertions in the order indicated by the bushy tree. The proposed optimization approach is evaluated over state-of-the-art RML-compliant engines, and existing benchmarks of data sources and RML triples maps. Our experimental results suggest that the performance of the studied engines can be considerably improved, particularly in a complex setting with numerous triples maps and large data sources. As a result, engines that time out in complex cases are enabled to produce at least a portion of the KG applying the planner.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Big Data for medical analytics\",\n        \"Big Data for precision medicine\",\n        \"Cancer Long Survivors artificial intelligence follow up\",\n        \"Cognitive Economy Intelligence plattform für die resilienz wirtschaftlicher Ökosysteme\",\n        \"The federal ministry for economic affairs and climate action\",\n        \"Genomic, mapping assertions\",\n        \"Morph-KGC: v1.4.1\",\n        \"R2RML: rdb to rdf mapping language\",\n        \"RMLMapper: v4.12\",\n        \"SDM-Genomic, datasets\",\n        \"SDM-Genomic, mapping assertions\",\n        \"SDM-RDFizer: v3.6\",\n        \"SDM-RDFizer: v4.0\",\n        \"COSMIC, catalogue of somatic mutations in cancer. grch37, version90\",\n        \"Tracemalloc: version 3.4\",\n        \"Morph-kgc: Scalable knowledge graph materialization with mapping partitions\",\n        \"Drugs4covid: Drug-driven knowledge exploitation based on scientific publications\",\n        \"Enriching a fashion knowledge graph from product textual descriptions\",\n        \"Semantic-based and entity-resolution fusion to enhance quality of big rdf data\",\n        \"Ldif-a framework for large-scale linked data integration\",\n        \"What are the parameters that affect the construction of a knowledge graph?\",\n        \"Gtfs-madrid-bench: A benchmark for virtual knowledge graph access in the transport domain\",\n        \"Enhancing virtual ontology based access over tabular data with morph-csv\",\n        \"Enriching data lakes with knowledge graphs\",\n        \"Knowfi: Knowledge extraction from long fictional texts\",\n        \"Minte: semantically integrating rdf graphs\",\n        \"R2RML: RDB to RDF Mapping Language, W3C Recommendation 27 September 2012\",\n        \"An ontology to semantically declare and describe functions\",\n        \"R2RML-F: Towards Sharing and Executing Domain Logic in R2RML Mappings\",\n        \"Automated metadata generation for Linked Data generation and publishing workflows\",\n        \"RML: A generic language for integrated RDF mappings of heterogeneous data\",\n        \"A scalable approach to incrementally building knowledge graphs\",\n        \"Knowledge graphs\",\n        \"Sdm-rdfizer: An rml interpreter for the efficient creation of rdf knowledge graphs\",\n        \"Planning for KGs: experimental study\",\n        \"RML-Planner: scaling up knowledge graph creation to larger and heterogeneous data sources\",\n        \"Active learning of expressive linkage rules using genetic programming\",\n        \"Responsible knowledge management in energy data ecosystems\",\n        \"Funmap: Efficient execution of functional mappings for knowledge graph creation\",\n        \"Eablock: a declarative entity alignment block for knowledge graph creation pipelines\",\n        \"Mapsdi: a scaled-up semantic data integration framework for knowledge graph creation\",\n        \"FunUL: a method to incorporate functions into uplift mapping languages\",\n        \"Knowledge graphs: Construction, management and querying\",\n        \"Exploiting semantics for big data integration\",\n        \"iasis: Towards heterogeneous big data analysis for personalized medicine\",\n        \"A sparql extension for generating rdf from heterogeneous formats\",\n        \"Data integration: A theoretical perspective\",\n        \"CARML: a pretty sweet rml engine\",\n        \"Sieve: linked data quality assessment and fusion\",\n        \"Comparing query answering in obda tools over w3c-compliant specifications\",\n        \"Formalisation and experiences of r2rml-based SPARQL to SQL query translation using morph\",\n        \"On the complexity of generating optimal plans with cross products\",\n        \"Building and using a knowledge graph to combat human trafficking\",\n        \"Minimal space, average linear time duplicate deletion\",\n        \"Transforming heterogeneous data into knowledge for personalized treatments - A use case\",\n        \"D-REPR: A Language for Describing and Mapping Diversely-Structured Data Sources to RDF\",\n        \"Rocketrml - a nodejs implementation of a use-case specific rml mapper\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Scaling Up Knowledge Graph Creation to Large and Heterogeneous Data Sources, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}