{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 59 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Search Space Partition for Black-box Optimization using Monte Carlo Tree Search\n\nPaper Abstract: Abstract High dimensional black-box optimization has broad applications but remains a challenging problem to solve. Given a set of samples {ùê±i,yi}subscriptùê±ùëñsubscriptùë¶ùëñ\\{\\mathbf{x}_{i},y_{i}\\}, building a global model (like Bayesian Optimization (BO)) suffers from the curse of dimensionality in the high-dimensional search space, while a greedy search may lead to sub-optimality. By recursively splitting the search space into regions with high/low function values, recently LaNAS wang2019sample shows good performance in Neural Architecture Search (NAS), reducing the sample complexity empirically. In this paper, we coin LA-MCTS that extends LaNAS to other domains. Unlike previous approaches, LA-MCTS learns the partition of the search space using a few samples and their function values in an online fashion. While LaNAS uses linear partition and performs uniform sampling in each region, our LA-MCTS adopts a nonlinear decision boundary and learns a local model to pick good candidates. If the nonlinear partition function and the local model fit well with ground-truth black-box function, then good partitions and candidates can be reached with much fewer samples. LA-MCTS serves as a meta-algorithm by using existing black-box optimizers (e.g., BO, TuRBO eriksson2019scalable ) as its local models, achieving strong performance in general black-box optimization and reinforcement learning benchmarks, in particular for high-dimensional problems.\n\n{retrieved_text}\n\nGenerate exactly 59 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 59\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Sample-efficient neural architecture search by learning action space\",\n        \"Scalable global optimization via local bayesian optimization\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Alphax: exploring neural architectures with deep neural networks and monte carlo tree search\",\n        \"Monte carlo tree search in continuous spaces using voronoi optimistic optimization with regret bounds\",\n        \"Optimistic planning for continuous-action deterministic systems\",\n        \"Self-driving database management systems\",\n        \"Machines tuning machines: Configuring distributed stream processors with bayesian optimization\",\n        \"Chip placement with deep reinforcement learning\",\n        \"Optimization of lipschitz continuous functions\",\n        \"A tutorial on bayesian optimization of expensive cost functions, with application to active user modeling and hierarchical reinforcement learning\",\n        \"A tutorial on bayesian optimization\",\n        \"Taking the human out of the loop: A review of bayesian optimization\",\n        \"X-armed bandits\",\n        \"Bock: Bayesian optimization with cylindrical kernels\",\n        \"Optimistic optimization of a deterministic function without the knowledge of its smoothness\",\n        \"Bayesian multi-scale optimistic optimization\",\n        \"Batched large-scale bayesian optimization in high-dimensional spaces\",\n        \"A framework for bayesian optimization in embedded subspaces\",\n        \"Sequential model-based optimization for general algorithm configuration\",\n        \"Bayesian optimization with robust bayesian neural networks\",\n        \"Algorithms for hyper-parameter optimization\",\n        \"Bohb: Robust and efficient hyperparameter optimization at scale\",\n        \"Hyperband: A novel bandit-based approach to hyperparameter optimization\",\n        \"Fast forward selection to speed up sparse gaussian process regression\",\n        \"Sparse gaussian processes using pseudo-inputs\",\n        \"Gaussian processes for big data\",\n        \"Bayesian optimization in high dimensions via random embeddings\",\n        \"Bayesian optimization with exponential convergence\",\n        \"Sparse gaussian processes for bayesian optimization\",\n        \"Joint optimization and variable selection of high-dimensional gaussian processes\",\n        \"High dimensional bayesian optimisation and bandits via additive models\",\n        \"A warped kernel improving robustness in bayesian optimization via random embeddings\",\n        \"Bayesian optimization in a billion dimensions via random embeddings\",\n        \"Discovering and exploiting additive structure for bayesian optimization\",\n        \"High-dimensional bayesian optimization via additive models with overlapping groups\",\n        \"Efficient high dimensional bayesian optimization with additivity and quadrature fourier features\",\n        \"On the choice of the low-dimensional domain for global optimization via random embeddings\",\n        \"Evolutionary optimization in uncertain environments-a survey\",\n        \"Differential evolution‚Äìa simple and efficient heuristic for global optimization over continuous spaces\",\n        \"Versatile black-box optimization\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Mastering atari, go, chess and shogi by planning with a learned model\",\n        \"Mastering the game of go without human knowledge\",\n        \"A survey of monte carlo tree search methods\",\n        \"From bandits to monte-carlo tree search: The optimistic principle applied to optimization and planning\",\n        \"Bandit-based planning and learning in continuous-action markov decision processes\",\n        \"Sample-based planning for continuous action markov decision processes\",\n        \"Finite-time analysis of the multiarmed bandit problem\",\n        \"Hit-and-run algorithms for generating multivariate distributions\",\n        \"Sampling-based approaches to calculating marginal densities\",\n        \"On the distribution of points in a cube and the approximate evaluation of integrals\",\n        \"Reducing the time complexity of the derandomized evolution strategy with covariance matrix adaptation (cma-es)\",\n        \"Letter to the editor‚Äîa monte carlo method for the approximate solution of certain types of constrained optimization problems\",\n        \"Mujoco: A physics engine for model-based control\",\n        \"Evolution strategies as a scalable alternative to reinforcement learning\",\n        \"Simple random search provides a competitive approach to reinforcement learning\",\n        \"Towards generalization and simplicity in continuous control\",\n        \"Openai gym\"\n    ],\n    \"reasoning\": \"Selected these 59 references because they represent foundational work and recent advances in Learning Search Space Partition for Black-box Optimization using Monte Carlo Tree Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}