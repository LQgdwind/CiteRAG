{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Implementing and Evaluating E2LSH on Storage\n\nPaper Abstract: Abstract. Locality sensitive hashing (LSH) is one of the widely-used approaches to approximate nearest neighbor search (ANNS) in high-dimensional spaces. The first work on LSH for the Euclidean distance, E2LSH, showed how ANNS can be solved efficiently at a sublinear query time in the database size with theoretically-guaranteed accuracy, although it required a large hash index size. Since then, several LSH variants having much smaller index sizes have been proposed. Their query time is linear or superlinear, but they have been shown to run effectively faster because they require fewer I/Os when the index is stored on hard disk drives and because they also permit in-memory execution with modern DRAM capacity. In this paper, we show that E2LSH is regaining the advantage in query speed with the advent of modern flash storage devices such as solid-state drives (SSDs). We evaluate E2LSH on a modern single-node computing environment and analyze its computational cost and I/O cost, from which we derive storage performance requirements for its external memory execution. Our analysis indicates that E2LSH on a single consumer-grade SSD can run faster than the state-of-the-art small-index methods executed in-memory. It also indicates that E2LSH with emerging high-performance storage devices and interfaces can approach in-memory E2LSH speeds. We implement a simple adaptation of E2LSH to external memory, E2LSH-on-Storage (E2LSHoS), and evaluate it for practical large datasets of up to one billion objects using different combinations of modern storage devices and interfaces. We demonstrate that our E2LSHoS implementation runs much faster than small-index methods and can approach in-memory E2LSH speeds, and also that its query time scales sublinearly with the database size beyond the index size limit of in-memory E2LSH.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Survey on Nearest Neighbor Search Methods\",\n        \"KGraph: A Library for Approximate Nearest Neighbor Search\",\n        \"Amazon EC2 High Memory Instances\",\n        \"Estimating Local Intrinsic Dimensionality\",\n        \"LSH Algorithm and Implementation (E2LSH)\",\n        \"Approximate nearest neighbor search in high dimensions\",\n        \"ANN-Benchmarks: A benchmarking tool for approximate nearest neighbor algorithms\",\n        \"Efficient IO with io_uring\",\n        \"Annoy: Approximate nearest neighbors in C++/Python optimized for memory usage and loading/saving to disk\",\n        \"An algorithm for approximate closest-point queries\",\n        \"Locality-sensitive hashing scheme based on p-stable distributions\",\n        \"Fast Approximate Nearest Neighbor Search With The Navigating Spreading-out Graph\",\n        \"Locality-sensitive hashing scheme based on dynamic collision counting\",\n        \"Similarity Search in High Dimensions via Hashing\",\n        \"Impact of storage technology on the efficiency of cluster-based high-dimensional index creation\",\n        \"On the Difficulty of Nearest Neighbor Search\",\n        \"QALSH_Mem: Memory Version of QALSH\",\n        \"Query-Aware Locality-Sensitive Hashing for Approximate Nearest Neighbor Search\",\n        \"Approximate Nearest Neighbors: Towards Removing the Curse of Dimensionality\",\n        \"A Survey on Locality Sensitive Hashing Algorithms and their Applications\",\n        \"SSD Technology Enables Dynamic Maintenance of Persistent High-Dimensional Indexes\",\n        \"NV-Tree: An Efficient Disk-Based Index for Approximate Search in Very Large High-Dimensional Collections\",\n        \"Approximate Nearest Neighbor Search on High Dimensional Data - Experiments, Analyses, and Improvement\",\n        \"I-LSH: I/O Efficient c-Approximate Nearest Neighbor Search in High-Dimensional Space\",\n        \"R2LSH: A Nearest Neighbor Search Scheme Based on Two-dimensional Projected Spaces\",\n        \"Multi-Probe LSH: Efficient Indexing for High-Dimensional Similarity Search\",\n        \"Intelligent Probing for Locality Sensitive Hashing: Multi-Probe LSH and Beyond\",\n        \"Efficient and robust approximate nearest neighbor search using Hierarchical Navigable Small World graphs\",\n        \"Fast Approximate Nearest Neighbors with Automatic Algorithm Configuration\",\n        \"Entropy based nearest neighbor search in high dimensions\",\n        \"Query by humming of midi and audio using locality sensitive hashing\",\n        \"Emerging Usage and Evaluation of Low Latency FLASH\",\n        \"DiskANN: Fast Accurate Billion-point Nearest Neighbor Search on a Single Node\",\n        \"SRS - Fast Approximate Nearest Neighbor Search in High Dimensional Euclidean Space With a Tiny Index\",\n        \"SRS: Solving c-Approximate Nearest Neighbor Queries in High Dimensional Euclidean Space with a Tiny Index\",\n        \"Streaming Similarity Search over one Billion Tweets using Parallel Locality-Sensitive Hashing\",\n        \"Approaching DRAM performance by using microsecond-latency flash memory for small-sized random read accesses: A new access method and its graph applications\",\n        \"Efficient and accurate nearest neighbor and closest pair search in high-dimensional space\",\n        \"Efficient manifold learning for speech recognition using locality sensitive hashing\",\n        \"Lenovo ThinkSystem SR950 Server (Xeon SP Gen 2)\",\n        \"A quantitative analysis and performance study for similarity-search methods in high-dimensional spaces\",\n        \"SPDK: A Development Kit to Build High Performance Storage Applications\",\n        \"Video anomaly detection based on locality sensitive hashing filters\",\n        \"PM-LSH: A Fast and Accurate LSH Framework for High-Dimensional Approximate NN Search\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Implementing and Evaluating E2LSH on Storage, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}