{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Optimistic Linear Support and Successor Features as a Basis for Optimal Policy Transfer\n\nPaper Abstract: Abstract In many real-world applications, reinforcement learning (RL) agents might have to solve multiple tasks, each one typically modeled via a reward function. If reward functions are expressed linearly, and the agent has previously learned a set of policies for different tasks, successor features (SFs) can be exploited to combine such policies and identify reasonable solutions for new problems. However, the identified solutions are not guaranteed to be optimal. We introduce a novel algorithm that addresses this limitation. It allows RL agents to combine existing policies and directly identify optimal policies for arbitrary new problems, without requiring any further interactions with the environment. We first show (under mild assumptions) that the transfer learning problem tackled by SFs is equivalent to the problem of learning to optimize multiple objectives in RL. We then introduce an SF-based extension of the Optimistic Linear Support algorithm to learn a set of policies whose SFs form a convex coverage set. We prove that policies in this set can be combined via generalized policy improvement to construct optimal behaviors for any new linearly-expressible tasks, without requiring any additional training samples. We empirically show that our method outperforms state-of-the-art competing algorithms both in discrete and continuous domains under value function approximation.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Policy and value transfer in lifelong reinforcement learning\",\n        \"Dynamic weights in multi-objective deep reinforcement learning\",\n        \"MO-Gym: Multi-objective reinforcement learning environments\",\n        \"Constructing a good behavior basis for transfer using generalized policy updates\",\n        \"Successor features for transfer in reinforcement learning\",\n        \"Transfer in deep reinforcement learning using successor features and generalised policy improvement\",\n        \"Fast reinforcement learning with generalized policy updates\",\n        \"Autonomous navigation of stratospheric balloons using reinforcement learning\",\n        \"Universal successor features approximators\",\n        \"Algorithms for partially observable Markov decision processes\",\n        \"Improving generalization for temporal difference learning: The successor representation\",\n        \"CVXPY: A python-embedded modeling language for convex optimization\",\n        \"PyBullet Gymperium\",\n        \"Diversity is all you need: Learning skills without a reward function\",\n        \"The information geometry of unsupervised reinforcement learning\",\n        \"Probabilistic policy reuse in a reinforcement learning agent\",\n        \"An equivalence between loss functions and non-uniform sampling in experience replay\",\n        \"Risk-aware transfer in reinforcement learning using successor features\",\n        \"Variational intrinsic control\",\n        \"Fast task inference with variational intrinsic successor features\",\n        \"Deep reinforcement learning with double q-learning\",\n        \"A practical guide to multi-objective reinforcement learning and planning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Aps: Active pretraining with successor features\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Multi-objective deep reinforcement learning\",\n        \"Policy caches with successor features\",\n        \"Policyblocks: An algorithm for creating useful macro-actions in reinforcement learning\",\n        \"Markov Decision Processes: Discrete Stochastic Dynamic Programming\",\n        \"Multi-Objective Decision-Theoretic Planning\",\n        \"Computing convex coverage sets for faster multi-objective coordination\",\n        \"A survey of multi-objective sequential decision-making\",\n        \"Prioritized experience replay\",\n        \"Mastering the game of go without human knowledge\",\n        \"Reinforcement learning: An introduction\",\n        \"A boolean task algebra for reinforcement learning\",\n        \"Generalisation in lifelong reinforcement learning through logical composition\",\n        \"Transfer learning for reinforcement learning domains: A survey\",\n        \"Transfer via inter-task mappings in policy search reinforcement learning\",\n        \"Empirical evaluation methods for multiobjective reinforcement learning algorithms\",\n        \"Scalar reward is not enough: A response to silver, singh, precup and sutton (2021)\",\n        \"Multi-objective reinforcement learning using sets of pareto dominating policies\",\n        \"Grandmaster level in starcraft ii using multi-agent reinforcement learning\",\n        \"A generalized algorithm for multi-objective reinforcement learning and policy adaptation\",\n        \"Discovering a set of policies for the worst case reward\",\n        \"Discovering diverse nearly optimal policies with successor features\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Optimistic Linear Support and Successor Features as a Basis for Optimal Policy Transfer, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}