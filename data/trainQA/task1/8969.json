{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: NicePIM: Design Space Exploration for Processing-In-Memory DNN Accelerators with 3D-Stacked-DRAM\n\nPaper Abstract: Abstract With the widespread use of deep neural networks(DNNs) in intelligent systems, DNN accelerators with high performance and energy efficiency are greatly demanded. As one of the feasible processing-in-memory(PIM) architectures, 3D-stacked-DRAM-based PIM(DRAM-PIM) architecture enables large-capacity memory and low-cost memory access, which is a promising solution for DNN accelerators with better performance and energy efficiency. However, the low-cost characteristics of stacked DRAM and the distributed manner of memory access and data storing require us to rebalance the hardware design and DNN mapping. In this paper, we propose NicePIM to efficiently explore the design space of hardware architecture and DNN mapping of DRAM-PIM accelerators, which consists of three key components: PIM-Tuner, PIM-Mapper and Data-Scheduler. PIM-Tuner optimizes the hardware configurations leveraging a DNN model for classifying area-compliant architectures and a deep kernel learning model for identifying better hardware parameters. PIM-Mapper explores a variety of DNN mapping configurations, including parallelism between branches of DNN, DNN layer partitioning, DRAM capacity allocation and data layout pattern in DRAM to generate high-hardware-utilization DNN mapping schemes for various hardware configurations. The Data-Scheduler employs an integer-linear-programming-based data scheduling algorithm to alleviate the inter-PIM-node communication overhead of data-sharing brought by DNN layer partitioning. Experimental results demonstrate that NicePIM can optimize hardware configurations for DRAM-PIM systems effectively and can generate high-quality DNN mapping schemes with latency and energy cost reduced by 37% and 28% on average respectively compared to the baseline method.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DaDianNao: A Machine-Learning Supercomputer\",\n        \"ShiDianNao: shifting vision processing closer to the sensor\",\n        \"Fused-layer CNN accelerators\",\n        \"Eyeriss: A Spatial Architecture for Energy-Efficient Dataflow for Convolutional Neural Networks\",\n        \"In-Datacenter Performance Analysis of a Tensor Processing Unit\",\n        \"SmartShuttle: Optimizing off-chip memory accesses for deep learning accelerators\",\n        \"Overcoming Data Transfer Bottlenecks in FPGA-based DNN Accelerators via Layer Conscious Memory Management\",\n        \"Communication Lower Bound in Convolution Accelerators\",\n        \"Hybrid Memory Cube – HMC Gen2\",\n        \"A Stacked Embedded DRAM Array for LPDDR4/4X using Hybrid Bonding 3D Integration with 34GB/s/1Gb 0.88pJ/b Logic-to-Memory Interface\",\n        \"A 96-MB 3D-Stacked SRAM Using Inductive Coupling With 0.4-V Transmitter, Termination Scheme and 12:1 SerDes in 40-nm CMOS\",\n        \"1.1 Computing’s energy problem (and what we can do about it)\",\n        \"Neurocube: A Programmable Digital Neuromorphic Architecture with High-Density 3D Memory\",\n        \"A 1596GB/s 48Gb Embedded DRAM 384-Core SoC with Hybrid Bonding Integration\",\n        \"184QPS/W 64Mb/mm23D Logic-to-DRAM Hybrid Bonding with Process-Near-Memory Engine for Recommendation System\",\n        \"TETRIS: Scalable and Efficient Neural Network Acceleration with 3D Memory\",\n        \"Exploiting Parallelism for Convolutional Connections in Processing-In-Memory Architecture\",\n        \"Towards Memory-Efficient Allocation of CNNs on Processing-in-Memory Architecture\",\n        \"NeuralHMC: an efficient HMC-based accelerator for deep neural networks\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Going deeper with convolutions\",\n        \"Timeloop: A Systematic Approach to DNN Accelerator Evaluation\",\n        \"Accelergy: An Architecture-Level Energy Estimation Methodology for Accelerator Designs\",\n        \"MAGNet: A Modular Accelerator Generator for Neural Networks\",\n        \"ZigZag: Enlarging Joint Architecture-Mapping Design Space Exploration for DNN Accelerators\",\n        \"A full-stack search technique for domain optimized deep learning accelerators\",\n        \"Deep Kernel Learning\",\n        \"ImageNet classification with deep convolutional neural networks\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"YOLOv3: An Incremental Improvement\",\n        \"Revisiting ResNets: Improved Training and Scaling Strategies\",\n        \"QUEST: Multi-Purpose Log-Quantized DNN Inference Engine Stacked on 96-MB 3-D SRAM Using Inductive Coupling Technology in 40-nm CMOS\",\n        \"The nvidia deep learning accelerator\",\n        \"Simba: Scaling Deep-Learning Inference with Multi-Chip-Module-Based Architecture\",\n        \"ROMANet: Fine-Grained Reuse-Driven Off-Chip Memory Access Management and Data Organization for Deep Neural Network Accelerators\",\n        \"Slicing tree is a complete floorplan representation\",\n        \"The Multiple-Choice Knapsack Problem\",\n        \"Integer Programming Formulation of Traveling Salesman Problems\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"BoTorch: A Framework for Efficient Monte-Carlo Bayesian Optimization\",\n        \"Gurobi Optimizer Reference Manual\",\n        \"Ramulator: A Fast and Extensible DRAM Simulator\",\n        \"NAPEL: Near-Memory Computing Application Performance Prediction via Ensemble Learning\",\n        \"A detailed and flexible cycle-accurate Network-on-Chip simulator\",\n        \"DRAMPower: Open-source DRAM Power & Energy Estimation Tool\",\n        \"DDAM: Data Distribution-Aware Mapping of CNNs on Processing-In-Memory Systems\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"XGBoost: A Scalable Tree Boosting System\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in NicePIM: Design Space Exploration for Processing-In-Memory DNN Accelerators with 3D-Stacked-DRAM, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}