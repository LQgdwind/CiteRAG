{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A SAT Scalpel for Lattice Surgery: Representation and Synthesis of Subroutines for Surface-Code Fault-Tolerant Quantum Computing\n\nPaper Abstract: Abstract Quantum error correction is necessary for large-scale quantum computing. A promising quantum error correcting code is the surface code. For this code, fault-tolerant quantum computing (FTQC) can be performed via lattice surgery, i.e., splitting and merging patches of code. Given the frequent use of certain lattice-surgery subroutines (LaS), it becomes crucial to optimize their design in order to minimize the overall spacetime volume of FTQC. In this study, we define the variables to represent LaS and the constraints on these variables. Leveraging this formulation, we develop a synthesizer for LaS, LaSsynth, that encodes a LaS construction problem into a SAT instance, subsequently querying SAT solvers for a solution. Starting from a baseline design, we can gradually invoke the solver with shrinking spacetime volume to derive more compact designs. Due to our foundational formulation and the use of SAT solvers, LaSsynth can exhaustively explore the design space, yielding optimal designs in volume. For example, it achieves 8% and 18% volume reduction respectively over two states-of-the-art human designs for the 15-to-1 T-factory, a bottleneck in FTQC.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer\",\n        \"Suppressing quantum errors by scaling a surface code logical qubit\",\n        \"A race-track trapped-ion quantum processor\",\n        \"Quantum error correction via codes over GF(4)\",\n        \"Topological quantum memory\",\n        \"Stabilizer codes and quantum error correction\",\n        \"Surface codes: Towards practical large-scale quantum computation\",\n        \"A game of surface codes: Large-scale quantum computing with lattice surgery\",\n        \"Active volume: An architecture for efficient fault-tolerant quantum computers with limited non-local connections\",\n        \"Low overhead quantum computation using lattice surgery\",\n        \"Surface code quantum computing by lattice surgery\",\n        \"Topological fault-tolerance in cluster state quantum computation\",\n        \"Assessing requirements to scale to practical quantum advantage\",\n        \"Universal quantum computing with twist-free and temporally encoded lattice surgery\",\n        \"OpenSurgery for topological assemblies\",\n        \"A high performance compiler for very large scale surface code computations\",\n        \"A new quantum ripple-carry addition circuit\",\n        \"Improved simulation of stabilizer circuits\",\n        \"Flexible layout of surface code computations using AutoCCZ states\",\n        \"Efficient magic state factories with a catalyzed |C‚ÄãC‚ÄãZ‚ü©ketùê∂ùê∂ùëç|CCZ\\\\rangle to 2‚Äã|T‚ü©2ketùëá2|T\\\\rangle transformation\",\n        \"How to factor 2048 bit RSA integers in 8 hours using 20 million noisy qubits\",\n        \"Inplace access to the surface code Y basis\",\n        \"The ZX calculus is a language for surface code lattice surgery\",\n        \"ZX-calculus for the working quantum computer scientist\",\n        \"A simplified stabilizer ZX-calculus\",\n        \"Unifying flavors of fault tolerance with the ZX calculus\",\n        \"Z3: An efficient SMT solver\",\n        \"Gimsatul, IsaSAT and Kissat entering the SAT Competition 2022\",\n        \"Stim: a fast stabilizer circuit simulator\",\n        \"Code for ISCA‚Äô24 paper A SAT Scalpel for Lattice Surgery\",\n        \"A substrate scheduler for compiling arbitrary fault-tolerant graph states\",\n        \"Entanglement in graph states and its applications\",\n        \"Compilation of algorithm-specific graph states for quantum circuits\",\n        \"Optimal preparation of graph states\",\n        \"Scalable SAT Solving in the Cloud\",\n        \"Lattice surgery translation for quantum computation\",\n        \"Magic state distillation: Not as costly as you think\",\n        \"Synthesis of arbitrary quantum circuits to topological assembly\",\n        \"A bridge to lower overhead quantum computation\",\n        \"A bridge-based compression algorithm for topological quantum circuits\",\n        \"Layout synthesis for topological quantum circuits with 1-D and 2-D architectures\",\n        \"AutoBraid: A framework for enabling efficient surface code communication in quantum computing\",\n        \"Optimized surface code communication in superconducting quantum computers\",\n        \"Taming the instruction bandwidth of quantum computers via hardware-managed error correction\",\n        \"Magic-state functional units: Mapping and scheduling multi-level distillation circuits for fault-tolerant quantum architectures\",\n        \"Decoding merged color-surface codes and finding fault-tolerant Clifford circuits using solvers for Satisfiability Modulo Theories\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in A SAT Scalpel for Lattice Surgery: Representation and Synthesis of Subroutines for Surface-Code Fault-Tolerant Quantum Computing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}