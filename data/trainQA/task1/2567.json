{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Scalable Two Stage Approach to Computing Optimal Decision SetsThis work is supported in part by the AI Interdisciplinary Institute ANITI, funded by the French program “Investing for the Future - PIA3” under Grant agreement no. ANR-19-PI3A-0004.\n\nPaper Abstract: Abstract Machine learning (ML) is ubiquitous in modern life. Since it is being deployed in technologies that affect our privacy and safety, it is often crucial to understand the reasoning behind its decisions, warranting the need for explainable AI. Rule-based models, such as decision trees, decision lists, and decision sets, are conventionally deemed to be the most interpretable. Recent work uses propositional satisfiability (SAT) solving (and its optimization variants) to generate minimum-size decision sets. Motivated by limited practical scalability of these earlier methods, this paper proposes a novel approach to learn minimum-size decision sets by enumerating individual rules of the target decision set independently of each other, and then solving a set cover problem to select a subset of rules. The approach makes use of modern maximum satisfiability and integer linear programming technologies. Experiments on a wide range of publicly available datasets demonstrate the advantage of the new approach over the state of the art in SAT-based decision set learning.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fathers of the Deep Learning Revolution Receive ACM A.M. Turing Award\",\n        \"Learning Optimal Decision Trees Using Caching Branch-and-Bound Search\",\n        \"Learning Certifiably Optimal Rule Lists\",\n        \"Minimising Decision Tree Size as Combinatorial Optimisation\",\n        \"Handbook of Satisfiability. IOS Press.\",\n        \"Logic minimization algorithms for VLSI synthesis, volume 2.\",\n        \"Classification and Regression Trees\",\n        \"COSMOS: A Compiled Simulator for MOS Circuits\",\n        \"Rule Induction with CN2: Some Recent Improvements\",\n        \"The CN2 Induction Algorithm\",\n        \"Boolean Decision Rules via Column Generation\",\n        \"The Master Algorithm: How the Quest for the Ultimate Learning Machine Will Remake Our World\",\n        \"Espresso — Multi-valued PLA minimization\",\n        \"Foundations of Rule Learning\",\n        \"IMLI: An Incremental Framework for MaxSAT-Based Learning of Interpretable Classification Rules\",\n        \"Gurobi Optimizer Reference Manual\",\n        \"Data Mining: Concepts and Techniques, 3rd edition\",\n        \"Optimal Sparse Decision Trees\",\n        \"Constructing Optimal Binary Decision Trees is NP-Complete\",\n        \"PySAT: A Python Toolkit for Prototyping with SAT Oracles\",\n        \"RC2: an Efficient MaxSAT Solver\",\n        \"A SAT-Based Approach to Learn Explainable Decision Sets\",\n        \"Enumerating Prime Implicants of Propositional Formulae in Conjunctive Normal Form\",\n        \"Machine learning: Trends, perspectives, and prospects\",\n        \"A continuous approach to inductive inference\",\n        \"Reducibility Among Combinatorial Problems\",\n        \"Reluplex: An Efficient SMT Solver for Verifying Deep Neural Networks\",\n        \"Interpretable Decision Sets: A Joint Framework for Description and Prediction\",\n        \"Deep learning\",\n        \"A Unified Approach to Interpreting Model Predictions\",\n        \"MLIC: A MaxSAT-Based Framework for Learning Interpretable Classification Rules\",\n        \"Prime Implicant Computation Using Satisfiability Algorithms\",\n        \"MaxSAT Evaluation 2020\",\n        \"Minimization of Boolean Functions\",\n        \"On the quasi-minimal solution of the general covering problem\",\n        \"Machine learning\",\n        \"Human-level control through deep reinforcement learning\",\n        \"AI, Explain Yourself\",\n        \"Learning Optimal Decision Trees with SAT\",\n        \"Scikit-learn: Machine Learning in Python\",\n        \"Penn Machine Learning Benchmarks\",\n        \"The problem of simplifying truth functions\",\n        \"A way to simplify truth functions\",\n        \"Induction of Decision Trees\",\n        \"C4.5: Programs for machine learning\",\n        \"“Why Should I Trust You?”: Explaining the Predictions of Any Classifier\",\n        \"Learning Decision Lists\",\n        \"Reachability Analysis of Deep Neural Networks with Provable Guarantees\",\n        \"Learning customized and optimized lists of rules with mathematical programming\",\n        \"Combining Decision Rules in a Decision Table\",\n        \"UCI Machine Learning Repository\",\n        \"Computing Optimal Decision Sets with SAT\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in A Scalable Two Stage Approach to Computing Optimal Decision SetsThis work is supported in part by the AI Interdisciplinary Institute ANITI, funded by the French program “Investing for the Future - PIA3” under Grant agreement no. ANR-19-PI3A-0004., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}