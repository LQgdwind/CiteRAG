{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Boosting Cloud Data Analytics using Multi-Objective Optimization\n\nPaper Abstract: Abstract Data analytics in the cloud has become an integral part of enterprise businesses. Big data analytics systems, however, still lack the ability to take user performance goals and budgetary constraints for a task, collectively referred to as task objectives, and automatically configure an analytic job to achieve these objectives. This paper presents a data analytics optimizer that can automatically determine a cluster configuration with a suitable number of cores as well as other system parameters that best meet the task objectives. At a core of our work is a principled multi-objective optimization (MOO) approach that computes a Pareto optimal set of job configurations to reveal tradeoffs between different user objectives, recommends a new job configuration that best explores such tradeoffs, and employs novel optimizations to enable such recommendations within a few seconds. We present efficient incremental algorithms based on the notion of a Progressive Frontier for realizing our MOO approach and implement them into a Spark-based prototype. Detailed experiments using benchmark workloads show that our MOO techniques provide a 2-50x speedup over existing MOO methods, while offering good coverage of the Pareto frontier. When compared to Ottertune, a state-of-the-art performance tuning system, our approach recommends configurations that yield 26%-49% reduction of running time of the TPCx-BB benchmark while adapting to different application preferences on multiple objectives.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Amazon ec2 instance types\",\n        \"Amazon aurora serverless\",\n        \"Virtual machine sizes in azure\",\n        \"Bomin: Basic open-source nonlinear mixed integer programming\",\n        \"Mixed-integer nonlinear programming\",\n        \"Couenne: Convex over and under envelopes for nonlinear estimation\",\n        \"Cplex optimizer\",\n        \"A closer look at drawbacks of minimizing weighted sums of objectives for pareto set generation in multicriteria optimization problems\",\n        \"A fast and elitist multiobjective genetic algorithm: Nsga-ii\",\n        \"Parallel database systems: the future of high performance database systems\",\n        \"Tuning database configuration parameters with ituned\",\n        \"Optimistic recovery for iterative dataflows in action\",\n        \"A tutorial on multiobjective optimization: Fundamentals and evolutionary methods\",\n        \"Dhalion: Self-regulating stream processing in heron\",\n        \"Dropout as a bayesian approximation: Representing model uncertainty in deep learning\",\n        \"Query optimization for parallel execution\",\n        \"Undecidability and hardness in mixed-integer nonlinear programming\",\n        \"Jmetal: an object-oriented java-based framework for multi-objective optimization with metaheuristics\",\n        \"Morpheus: Towards automated slos for enterprise clusters\",\n        \"Adam: A method for stochastic optimization\",\n        \"Schedule optimization for data processing flows on the cloud\",\n        \"Artelys knitro userâ€™s manual\",\n        \"Supporting scalable analytics with latency constraints\",\n        \"Resource bricolage for parallel database systems\",\n        \"Model-free control for distributed stream data processing using deep reinforcement learning\",\n        \"Neo: A learned query optimizer\",\n        \"Wisedb: A learning-based workload management advisor for cloud databases\",\n        \"Plan-structured deep neural network models for query performance prediction\",\n        \"A learning-based service for cost and performance management of cloud databases\",\n        \"Survey of multi-objective optimization methods for engineering\",\n        \"From dubious construction of objective functions to the application of physical programming\",\n        \"The normalized normal constraint method for generating the pareto frontier\",\n        \"Neos guide: Nonlinear programming software\",\n        \"Neos solvers: Nonlinear programming software\",\n        \"Perforator: eloquent performance models for resource optimization\",\n        \"A tutorial on gaussian process regression: Modelling, exploring, and exploiting functions\",\n        \"Mrtuner: A toolkit to enable holistic optimization for mapreduce jobs\",\n        \"Boosting cloud data analytics using multi-objective optimization\",\n        \"Tempo: robust and self-tuning resource management in multi-tenant parallel databases\",\n        \"TPCx-BB\",\n        \"Approximation schemes for many-objective query optimization\",\n        \"An incremental anytime algorithm for multi-objective query optimization\",\n        \"Automatic database management system tuning through large-scale machine learning\",\n        \"Ernest: Efficient performance prediction for large-scale advanced analytics\",\n        \"Towards a learning optimizer for shared clouds\",\n        \"Resilient distributed datasets: a fault-tolerant abstraction for in-memory cluster computing\",\n        \"Discretized streams: fault-tolerant streaming computation at scale\",\n        \"UDAO: A next-generation unified data analytics optimizer (vldb 2019 demo)\",\n        \"A demonstration of the ottertune automatic database management system tuning service\",\n        \"An end-to-end automatic cloud database tuning system using deep reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Boosting Cloud Data Analytics using Multi-Objective Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}