{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Acceleration of Tensor-Product Operations with Tensor Cores\n\nPaper Abstract: Abstract. In this paper, we explore the acceleration of tensor product operations in finite element methods, leveraging the computational power of the NVIDIA A100 GPU Tensor Cores. We provide an accessible overview of the necessary mathematical background and discuss our implementation strategies. Our study focuses on two common programming approaches for NVIDIA Tensor Cores: the C++ Warp Matrix Functions in nvcuda::wmma and the inline Parallel Thread Execution (PTX) instructions mma.sync.aligned. A significant focus is placed on the adoption of the versatile inline PTX instructions combined with a conflict-free shared memory access pattern, a key to unlocking superior performance. When benchmarked against traditional CUDA Cores, our approach yields a remarkable 2.3-fold increase in double precision performance, achieving 8 TFLOPS/s—45% of the theoretical maximum. Furthermore, in half-precision computations, numerical experiments demonstrate a fourfold enhancement in solving the Poisson equation using the flexible GMRES (FGMRES) method, preconditioned by a multigrid method in 3D. This is achieved while maintaining the same discretization error as observed in double precision computations. These results highlight the considerable benefits of using Tensor Cores for finite element operators with tensor products, achieving an optimal balance between computational speed and precision.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"GPU algorithms for Efficient Exascale Discretizations\",\n        \"An interior penalty finite element method with discontinuous elements\",\n        \"Unified analysis of discontinuous Galerkin methods for elliptic problems\",\n        \"Multigrid Methods\",\n        \"Multigrid Techniques\",\n        \"Efficient vector and parallel manipulation of tensor products\",\n        \"From h to p efficiently: Strategy selection for operator evaluation on hexahedral and tetrahedral elements\",\n        \"An implementation of tensor product patch smoothers on GPU\",\n        \"Multilevel Interior Penalty Methods on GPUs\",\n        \"Accelerating reduction and scan using tensor core units\",\n        \"Quantum perturbation theory using tensor cores and a deep neural network\",\n        \"Leveraging GPU Tensor Cores for Double Precision Euclidean Distance Calculations\",\n        \"GPU acceleration of an unmodified parallel finite element Navier-Stokes solver\",\n        \"Exploring weak scalability for FEM calculations on a GPU-enhanced cluster\",\n        \"Accelerating double precision FEM simulations with GPUs\",\n        \"Performance and accuracy of hardware-oriented native-, emulated-and mixed-precision solvers in FEM simulations\",\n        \"Deep learning with limited numerical precision\",\n        \"Multi-Grid Methods and Applications\",\n        \"Harnessing GPU tensor cores for fast FP16 arithmetic to speed up mixed-precision iterative refinement solvers\",\n        \"Accelerating DBSCAN Algorithm with AI Chips for Large Datasets\",\n        \"Efficient exact K-nearest neighbor graph construction for billion-scale datasets using GPUs with tensor cores\",\n        \"A GPU accelerated discontinuous Galerkin incompressible flow solver\",\n        \"Nodal discontinuous Galerkin methods on graphics processors\",\n        \"Efficient exascale discretizations: High-order finite element methods\",\n        \"A generic interface for parallel cell-based finite element operator application\",\n        \"Fast matrix-free evaluation of discontinuous Galerkin finite element operators\",\n        \"Multigrid for matrix-free high-order finite element computations on graphics processors\",\n        \"tcfft: Accelerating half-precision FFT through tensor cores\",\n        \"Matrix-free finite-element computations on graphics processors with adaptively refined unstructured meshes\",\n        \"NVIDIA Tensor Core Programmability, Performance & Precision\",\n        \"Exascale Multiphysics Nuclear Reactor Simulations for Advanced Designs\",\n        \"Nvidia ampere architecture white paper\",\n        \"Nvidia volta architecture white paper\",\n        \"cuBlas\",\n        \"Nsight Compute\",\n        \"Parallel Thread Execution ISA\",\n        \"Reducing shared memory footprint to leverage high throughput on Tensor Cores and its flexible API extension library\",\n        \"Register optimizations for stencils on GPUs\",\n        \"GPU accelerated spectral finite elements on all-hex meshes\",\n        \"Very fast finite element Poisson solvers on lower precision accelerator hardware: A proof of concept study for Nvidia Tesla V100\",\n        \"A flexible inner-outer preconditioned GMRES algorithm\",\n        \"June 2023 — TOP500\",\n        \"Dissecting Tensor Cores via Microbenchmarks: Latency, Throughput and Numeric Behaviors\",\n        \"Acceleration of tensor-product operations for high-order finite element methods\",\n        \"CUTLASS\",\n        \"A Novel High-Performance Implementation of CRYSTALS-Kyber with AI Accelerator\",\n        \"Fast tensor product Schwarz smoothers for high-order discontinuous Galerkin methods\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Acceleration of Tensor-Product Operations with Tensor Cores, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}