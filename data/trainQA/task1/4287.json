{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ARCH: Efficient Adversarial Regularized Training with Caching\n\nPaper Abstract: Abstract Adversarial regularization can improve model generalization in many natural language processing tasks. However, conventional approaches are computationally expensive since they need to generate a perturbation for each sample in each epoch. We propose a new adversarial regularization method ARCH (adversarial regularization with caching), where perturbations are generated and cached once every several epochs. As caching all the perturbations imposes memory usage concerns, we adopt a K-nearest neighbors-based strategy to tackle this issue. The strategy only requires caching a small amount of perturbations, without introducing additional training time. We evaluate our proposed method on a set of neural machine translation and natural language understanding tasks. We observe that ARCH significantly eases the computational burden (saves up to 70% of computational time in comparison with conventional approaches). More surprisingly, by reducing the variance of stochastic gradients, ARCH produces a notably better (in most of the tasks) or comparable model generalization. Our code is available at https://github.com/SimiaoZuo/Caching-Adv.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Better fine-tuning by reducing representational collapse\",\n        \"There are many consistent explanations of unlabeled data: Why you should average\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"The second PASCAL recognising textual entailment challenge\",\n        \"The fifth pascal recognizing textual entailment challenge\",\n        \"SemEval-2017 task 1: Semantic textual similarity multilingual and crosslingual focused evaluation\",\n        \"Robust neural machine translation with doubly adversarial inputs\",\n        \"The pascal recognising textual entailment challenge\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"Convolutional sequence to sequence learning\",\n        \"The third PASCAL recognizing textual entailment challenge\",\n        \"Explaining and harnessing adversarial examples\",\n        \"Deberta: Decoding-enhanced bert with disentangled attention\",\n        \"Averaging weights leads to wider optima and better generalization\",\n        \"Adversarial examples for evaluating reading comprehension systems\",\n        \"Learning to defend by learning to attack\",\n        \"SMART: Robust and efficient fine-tuning for pre-trained natural language models through principled regularized optimization\",\n        \"Adam: A method for stochastic optimization\",\n        \"Inductive bias of gradient descent based adversarial training on separable data\",\n        \"Adversarial training for large neural language models\",\n        \"Multi-task deep neural networks for natural language understanding\",\n        \"The Microsoft toolkit of multi-task deep neural networks for natural language understanding\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Towards deep learning models resistant to adversarial attacks\",\n        \"The curious case of adversarially robust models: More data can help, double descend, or hurt generalization\",\n        \"Adversarial training methods for semi-supervised text classification\",\n        \"Adversarial NLI: A new benchmark for natural language understanding\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"Scaling neural machine translation\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Deep contextualized word representations\",\n        \"A call for clarity in reporting BLEU scores\",\n        \"Language models are unsupervised multitask learners\",\n        \"Understanding and mitigating the tradeoff between robustness and accuracy\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"Effective adversarial regularization for neural machine translation\",\n        \"Adversarial training for free!\",\n        \"Deep reinforcement learning with robust and smooth policy\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Intriguing properties of neural networks\",\n        \"Attention is all you need\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Improving neural language modeling via adversarial training\",\n        \"Neural network acceptability judgments\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Freelb: Enhanced adversarial training for natural language understanding\",\n        \"Adversarial training as stackelberg game: An unrolled optimization approach\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in ARCH: Efficient Adversarial Regularized Training with Caching, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}