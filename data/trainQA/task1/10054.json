{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Tascade: Hardware Support for Atomic-free, Asynchronous and Efficient Reduction Trees\n\nPaper Abstract: Abstract As system parallelism at chip- and server-level increases, challenges that arose with network-level systems a decade ago, are now being encountered with these massively parallel systems that have become an important workhorse for Machine Learning workloads as well as Graph and Sparse workloads. To tackle the communication bottlenecks, recent works have introduced task-based parallelization schemes to accelerate graph search and sparse data-structure traversal, where some solutions scale up to thousands of processing units (PUs) on a single chip. However, existing communication schemes do not scale to larger than thousands of processing tiles To address these challenges we propose Tascade, a system that offers hardware-supported, efficient and balanced reduction trees to reduce communication overheads in task-based parallelization schemes and scales up to a million PUs. Tascade achieves this by implementing an execution model utilizing proxy regions and cascading updates, along with a supporting hardware design that enables the execution of the reduction tree at the chip level. The Tascade approach reduces overall communication and improves load balancing. We evaluate six applications and four datasets to provide a detailed analysis of Tascade’s performance, power, and traffic-reduction gains over prior work. Our parallelization of Breadth-First-Search with RMAT-26 across a million PUs—the largest of the literature—reaches 5305 GTEPS.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Chronos: Efficient speculative parallelism for accelerators\",\n        \"A scalable processing-in-memory accelerator for parallel graph processing\",\n        \"AMD rome\",\n        \"iPUG: Accelerating breadth-first graph traversals using manycore Graphcore IPUs\",\n        \"The second generation wafer scale engine\",\n        \"Nvidia A100 GPU: Performance & innovation for GPU computing\",\n        \"Cameo: A two-level memory organization with capacity of main memory and flexibility of hardware-managed cache\",\n        \"Exploiting private local memories to reduce the opportunity cost of accelerator integration\",\n        \"Polygraph: Exposing the value of flexibility for graph processing accelerators\",\n        \"Openmp: An industry-standard API for shared-memory programming\",\n        \"Gluon: A communication-optimizing substrate for distributed heterogeneous graph analytics\",\n        \"Gluon-async: A bulk-asynchronous system for distributed and heterogeneous graph analytics\",\n        \"Mapreduce: simplified data processing on large clusters\",\n        \"Esperanto’s et-minion on-chip RISC-V cores\",\n        \"Interconnect Fugaku Supercomputer\",\n        \"Groq rocks neural networks\",\n        \"Graphicionado: A high-performance and energy-efficient accelerator for graph analytics\",\n        \"Agile: The future of data centric computing\",\n        \"Tascade simulation framework and artifacts\",\n        \"A scalable architecture for ordered parallelism\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Metis: A software package for partitioning unstructured graphs\",\n        \"Amoeba-cache: Adaptive blocks for eliminating waste in the memory hierarchy\",\n        \"The PageRank citation ranking: Bringing order to the web\",\n        \"Kronecker graphs: An approach to modeling networks\",\n        \"Enterprise: breadth-first graph traversal on gpus\",\n        \"Graphattack: Optimizing data supply for graph applications on in-order multicore architectures\",\n        \"Introducing the Graph 500\",\n        \"Pioneering chiplet technology and design for the amd epyc™ and ryzen™ processor families\",\n        \"Performance evaluation of supercomputer fugaku using breadth-first search benchmark in graph500\",\n        \"Pipette: Improving core utilization on irregular applications through intra-core pipeline parallelism\",\n        \"Fifer: Practical acceleration of irregular applications on reconfigurable architectures\",\n        \"Tiny but mighty: designing and realizing scalable latency tolerance for manycore socs\",\n        \"Wafer-scale fast fourier transforms\",\n        \"Dalorex: A data-local program execution and architecture for memory-bound applications\",\n        \"Energy efficient architecture for graph analytics accelerators\",\n        \"Architecting waferscale processors-a gpu case study\",\n        \"Hybrid memory cube (hmc)\",\n        \"A scalable architecture for reprioritizing ordered parallelism\",\n        \"Graphpulse: An event-driven hardware accelerator for asynchronous graph processing\",\n        \"Pci express 6.0 specification: A low-latency, high-bandwidth, high-reliability, and cost-effective interconnect with 64.0 gt/s pam-4 signaling\",\n        \"BFS and coloring-based parallel algorithms for strongly connected components and related problems\",\n        \"MPI–the Complete Reference: the MPI core, volume 1\",\n        \"Parboil: A revised benchmark suite for scientific and commercial throughput computing\",\n        \"Prodigy: Improving the memory latency of data-indirect irregular workloads using hardware-software co-design\",\n        \"Dojo: The microarchitecture of tesla exa-scale computer\",\n        \"Optimization of collective communication operations in mpich\",\n        \"From” think like a vertex” to” think like a graph”\",\n        \"Optimizing blocking and nonblocking reduction operations for multicore systems: Hierarchical design and implementation\",\n        \"Gunrock: A high-performance graph processing library on the gpu\",\n        \"High-bandwidth density, energy-efficient, short-reach signaling that enables massively scalable parallelism\",\n        \"Graphq: Scalable pim-based graph processing\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Tascade: Hardware Support for Atomic-free, Asynchronous and Efficient Reduction Trees, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}