{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FairBatch: Batch Selection for Model Fairness\n\nPaper Abstract: Abstract Training a fair machine learning model is essential to prevent demographic disparity. Existing techniques for improving model fairness require broad changes in either data preprocessing or model training, rendering themselves difficult-to-adopt for potentially already complex machine learning systems. We address this problem via the lens of bilevel optimization. While keeping the standard training algorithm as an inner optimizer, we incorporate an outer optimizer so as to equip the inner problem with an additional functionality: Adaptively selecting minibatch sizes for the purpose of improving model fairness. Our batch selection algorithm, which we call FairBatch, implements this optimization and supports prominent fairness measures: equal opportunity, equalized odds, and demographic parity. FairBatch comes with a significant implementation benefit – it does not require any modification to data preprocessing or model training. For instance, a single-line change of PyTorch code for replacing batch selection part of model training suffices to employ FairBatch. Our experiments conducted both on synthetic and benchmark real data demonstrate that FairBatch can provide such functionalities while achieving comparable (or even greater) performances against the state of the arts. Furthermore, FairBatch can readily improve fairness of any pre-trained model simply via fine-tuning. It is also compatible with existing batch selection techniques intended for different purposes, such as faster convergence, thus gracefully achieving multiple purposes.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fair generative modeling via weak supervision\",\n        \"Identifying and correcting label bias in machine learning\",\n        \"Fairness constraints: Mechanisms for fair classification\",\n        \"Fairness beyond disparate treatment & disparate impact: Learning classification without disparate mistreatment\",\n        \"Mitigating unwanted biases with adversarial learning\",\n        \"Adafair: Cumulative fairness adaptive boosting\",\n        \"Equality of opportunity in supervised learning\",\n        \"Machine bias: There’s software used across the country to predict future criminals. And its biased against blacks.\",\n        \"Certifying and removing disparate impact\",\n        \"Scaling up the accuracy of naive-bayes classifiers: A decision-tree hybrid\",\n        \"Age progression/regression by conditional adversarial autoencoder\",\n        \"Data preprocessing techniques for classification without discrimination\",\n        \"Deep residual learning for image recognition\",\n        \"Going deeper with convolutions\",\n        \"Large-scale machine learning with stochastic gradient descent\",\n        \"Convex optimization\",\n        \"AI fairness 360: An extensible toolkit for detecting and mitigating algorithmic bias\",\n        \"Additive Logistic Regression: a Statistical View of Boosting\",\n        \"Online batch selection for faster training of neural networks\",\n        \"Translation tutorial: 21 fairness definitions and their politics\",\n        \"Learning fair representations\",\n        \"Optimized pre-processing for discrimination prevention\",\n        \"Fairness-aware classifier with prejudice remover regularizer\",\n        \"A reductions approach to fair classification\",\n        \"Two-player games for efficient non-convex constrained optimization\",\n        \"FR-Train: A mutual information-based approach to fair and robust training\",\n        \"Decision theory for discrimination-aware classification\",\n        \"On fairness and calibration\",\n        \"Leveraging labeled and unlabeled data for consistent fair binary classification\",\n        \"Algorithmic fairness: Measures, methods and representations\",\n        \"Fairness through awareness\",\n        \"Avoiding discrimination through causal reasoning\",\n        \"Counterfactual fairness\",\n        \"Fairness in decision-making - the causal explanation formula\",\n        \"Fair inference on outcomes\",\n        \"Fairness in algorithmic decision making: An excursion through the lens of causality\",\n        \"Certifying some distributional robustness with principled adversarial training\",\n        \"Fairness without demographics in repeated loss minimization\",\n        \"The frontiers of fairness in machine learning\",\n        \"Slice tuner: A selective data acquisition framework for accurate and fair machine learning models\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"Revisiting small batch training for deep neural networks\",\n        \"Without-replacement sampling for stochastic gradient methods\",\n        \"Why random reshuffling beats stochastic gradient descent\",\n        \"Variance reduction in sgd by distributed importance sampling\",\n        \"Safe adaptive importance sampling\",\n        \"Importance sampling for minibatches\",\n        \"Not all samples are created equal: Deep learning with importance sampling\",\n        \"Training deep models faster with robust, approximate importance sampling\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in FairBatch: Batch Selection for Model Fairness, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}