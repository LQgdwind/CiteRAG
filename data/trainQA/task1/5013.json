{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FSpGEMM: An OpenCL-based HPC Framework for Accelerating General Sparse Matrix-Matrix Multiplication on FPGAs\n\nPaper Abstract: Abstract General sparse matrix-matrix multiplication (SpGEMM) is an integral part of many scientific computing, high-performance computing (HPC), and graph analytic applications. This paper presents a new compressed sparse vector (CSV) format for representing sparse matrices and FSpGEMM, an OpenCL-based HPC framework for accelerating general sparse matrix-matrix multiplication on FPGAs. The proposed FSpGEMM framework includes an FPGA kernel implementing a throughput-optimized hardware architecture based on Gustavson’s algorithm and a host program implementing pre-processing functions for converting input matrices to the CSV format tailored for the proposed architecture. FSpGEMM utilizes a new buffering scheme tailored to Gustavson’s algorithm. We compare FSpGEMM implemented on an Intel Arria 10 GX FPGA development board with Intel Math Kernel Library (MKL) implemented on an Intel Xeon E5-2637 CPU and cuSPARSE on an NVIDIA GTX TITAN X GPU, respectively, for multiplying a set of sparse matrices selected from SuiteSparse Matrix Collection. The experiment results show that the proposed FSpGEMM solution achieves on average 4.9×\\times and 1.7×\\times higher performance with 31.9×\\times and 13.1×\\times lower energy consumption per SpGEMM computation than the CPU and GPU implementations, respectively.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A multigrid tutorial\",\n        \"On techniques to improve robustness and scalability of a parallel hybrid linear solver\",\n        \"Colored intersection searching via sparse rectangular matrix multiplication\",\n        \"Use of direct solvers in tfeti massively parallel implementation\",\n        \"Order-n tight-binding molecular dynamics on parallel computers\",\n        \"A parallel formulation of interior point algorithms\",\n        \"A unified framework for numerical and combinatorial computing\",\n        \"R-kleene: A high-performance divide-and-conquer algorithm for the all-pair shortest path for densely connected networks\",\n        \"An interactive system for combinatorial scientific computing with an emphasis on programmer productivity\",\n        \"Detecting short directed cycles using rectangular matrix multiplication and dynamic programming.\",\n        \"Graph clustering by flow simulation\",\n        \"Parallel triangle counting and enumeration using matrix algebra\",\n        \"Maximum matchings in general graphs through randomization\",\n        \"Two fast algorithms for sparse matrices: Multiplication and permuted transposition\",\n        \"Suitability analysis of fpgas for heterogeneous platforms in hpc\",\n        \"FPGA architecture: Survey and challenges\",\n        \"A scalable sparse matrix-vector multiplication kernel for energy-efficient sparse-blas on fpgas\",\n        \"Communication optimization of iterative sparse matrix-vector multiply on gpus and fpgas\",\n        \"A novel design of adaptive and hierarchical convolutional neural networks using partial reconfiguration on fpga\",\n        \"Polar: A pipelined/overlapped fpga-based lstm accelerator\",\n        \"Reconfigurable computing for digital signal processing: A survey\",\n        \"FPGA-based implementation of signal processing systems\",\n        \"DSP architecture design essentials\",\n        \"Are fpgas suitable for edge computing?\",\n        \"Design space exploration for sparse matrix-matrix multiplication on fpgas\",\n        \"The algorithms for fpga implementation of sparse matrices multiplication\",\n        \"Matraptor: A sparse-sparse matrix multiplication accelerator based on row-wise product\",\n        \"The university of florida sparse matrix collection\",\n        \"Parallel sparse matrix-vector and matrix-transpose-vector multiplication using compressed sparse blocks\",\n        \"Blas comparison on fpga, cpu and gpu\",\n        \"Fblas: streaming linear algebra on fpga\",\n        \"Outerspace: An outer product based sparse matrix multiplication accelerator\",\n        \"A 7.3 m output non-zeros/j, 11.7 m output non-zeros/gb reconfigurable sparse matrix–matrix multiplication accelerator\",\n        \"Sparch: Efficient architecture for sparse matrix multiplication\",\n        \"Intel math kernel library\",\n        \"Direct methods for sparse linear systems\",\n        \"Suitesparse: A suite of sparse matrix packages.\",\n        \"Cusparse library\",\n        \"Intel fpga sdk for opencl pro edition: Programming guide.\",\n        \"Intel xeon processor e5-2637 v3 83358.\",\n        \"Intel arria 10 device overview.\",\n        \"Nvidia’s next generation cuda compute architecture\",\n        \"Optimizing performance with intel advanced vector extensions\",\n        \"Intel stratix 10 gx fpga development kit user guide.\",\n        \"Likwid 5: Lightweight performance tools\",\n        \"Intel 64 and ia-32 architectures software developer’s manual: Volume 3.\",\n        \"nvidia-smi documentation.\",\n        \"Nvidia system management interface.\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in FSpGEMM: An OpenCL-based HPC Framework for Accelerating General Sparse Matrix-Matrix Multiplication on FPGAs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}