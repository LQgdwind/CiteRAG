{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Employing Software Diversity in Cloud Microservices to Engineer Reliable and Performant Systems\n\nPaper Abstract: Abstract. In the ever-shifting landscape of software engineering, we recognize the need for adaptation and evolution to maintain system dependability. As each software iteration potentially introduces new challenges, from unforeseen bugs to performance anomalies, it becomes paramount to understand and address these intricacies to ensure robust system operations during the lifetime. This work proposes employing software diversity to enhance system reliability and performance simultaneously. A cornerstone of our work is the derivation of a reliability metric. This metric encapsulates the reliability and performance of each software version under adverse conditions. Using the calculated reliability score, we implemented a dynamic controller responsible for adjusting the population of each software version. The goal is to maintain a higher replica count for more reliable versions while preserving the diversity of versions as much as possible. This balance is crucial for ensuring not only the reliability but also the performance of the system against a spectrum of potential failures. In addition, we designed and implemented a diversity-aware autoscaling algorithm that maintains the reliability and performance of the system at the same time and at any scale. Our extensive experiments on realistic cloud microservice-based applications show the effectiveness of the proposed approach in this paper in promoting both reliability and performance.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A framework for satisfying the performance requirements of containerized software systems through multi-versioning\",\n        \"Selecting an optimal fault tolerance strategy for reliable service-oriented systems with local and global constraints\",\n        \"Service fault tolerance for highly reliable service-oriented systems: an overview\",\n        \"Sok: Automated software diversity\",\n        \"Using Inherent Service Redundancy and Diversity to Ensure Web Services Dependability\",\n        \"Microservices architecture enables devops: migration to a cloud-native architecture\",\n        \"Autoscaling web applications in heterogeneous cloud infrastructures\",\n        \"Adaptive microservice scaling for elastic applications\",\n        \"Predictive hybrid autoscaling for containerized applications\",\n        \"Deep learning-based autoscaling using bidirectional long short-term memory for kubernetes\",\n        \"Load balancing algorithms round-robin (rr), least-connection and least loaded algorithm\",\n        \"Load balancing analysis using round-robin and least-connection algorithms for server service response time\",\n        \"Marginal metric utility for autonomic cloud application management\",\n        \"An approach to modeling and analyzing reliability for microservice-oriented cloud applications\",\n        \"Ranking significance of software components based on use relations\",\n        \"Location-aware and budget-constrained application replication and deployment in multi-cloud environment\",\n        \"Kubernetes-container-cluster-based architecture for an energy management system\",\n        \"Software aging effects on kubernetes in container orchestration systems for digital twin cloud infrastructures of urban air mobility\",\n        \"E unibus pluram: Massive-scale software diversity as a defense mechanism\",\n        \"Frankenssl: Recombining cryptographic libraries for software diversity\",\n        \"Modeling and analysis of cluster of failures in redundant systems\",\n        \"Evaluation of fpga design tools for safety systems with on-chip redundancy referring to the standard iec 61508\",\n        \"Frankencode: Creating diverse programs using code clones\",\n        \"Architecture-based reliability-sensitive criticality measure for fault-tolerance cloud applications\",\n        \"Reviving software diversity in microservices to optimize the performance of software systems\",\n        \"End-to-end latency prediction of microservices workflow on kubernetes: a comparative evaluation of machine learning models and resource metrics\",\n        \"Evaluating the user acceptance testing for multi-tenant cloud applications.\",\n        \"Deploying scalable face recognition pipeline using distributed microservices\",\n        \"Microservice-based platform for space situational awareness data analytics\",\n        \"Mobda: Microservice-oriented big data architecture for smart city transport systems\",\n        \"Design methodology of microservices to support predictive analytics for iot applications\",\n        \"Multi-objective scheduling of extreme data scientific workflows in fog\",\n        \"Effective replica management for improving reliability and availability in edge-cloud computing environment\",\n        \"Uncertainty-aware online scheduling for real-time workflows in cloud service environment\",\n        \"Modelling and analysing the reliability for microservice-based cloud application based on predicate petri net\",\n        \"Run-time reliability estimation of microservice architectures\",\n        \"Autonomic vertical elasticity of docker containers with elasticdocker\",\n        \"Workload prediction using arima model and its impact on cloud applicationsâ€™ qos\",\n        \"Combining time series prediction models using genetic algorithm to autoscaling web applications hosted in the cloud infrastructure\",\n        \"Fisher: An efficient container load prediction model with deep neural network in clouds\",\n        \"Hansel: Adaptive horizontal scaling of microservices using bi-lstm\",\n        \"Adaptive ai-based auto-scaling for kubernetes\",\n        \"Multivariate deep learning model for workload prediction in cloud computing\",\n        \"A study on deep learning-based multivariate resource estimation with feature selection in cloud computing\",\n        \"K-agrued: A container autoscaling technique for cloud-based web applications in kubernetes using attention-based gru encoder-decoder\",\n        \"Coscal: Multifaceted scaling of microservices with reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Employing Software Diversity in Cloud Microservices to Engineer Reliable and Performant Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}