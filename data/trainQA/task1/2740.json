{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Transformer in Transformer\n\nPaper Abstract: Abstract Transformer is a new kind of neural architecture which encodes the input data as powerful features via the attention mechanism. Basically, the visual transformers first divide the input images into several local patches and then calculate both representations and their relationship. Since natural images are of high complexity with abundant detail and color information, the granularity of the patch dividing is not fine enough for excavating features of objects in different scales and locations. In this paper, we point out that the attention inside these local patches are also essential for building visual transformers with high performance and we explore a new architecture, namely, Transformer iN Transformer (TNT). Specifically, we regard the local patches (e.g., 16×\\times16) as “visual sentences” and present to further divide them into smaller patches (e.g., 4×\\times4) as “visual words”. The attention of each word will be calculated with other words in the given visual sentence with negligible computational costs. Features of both words and sentences will be aggregated to enhance the representation ability. Experiments on several benchmarks demonstrate the effectiveness of the proposed TNT architecture, e.g., we achieve an 81.5% top-1 accuracy on the ImageNet, which is about 1.7% higher than that of the state-of-the-art visual transformer with similar computational cost. The PyTorch code is available at https://github.com/huawei-noah/CV-Backbones, and the MindSpore code is available at https://gitee.com/mindspore/models/tree/master/research/cv/TNT.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Layer normalization\",\n        \"Language models are few-shot learners\",\n        \"End-to-end object detection with transformers\",\n        \"Pre-trained image processing transformer\",\n        \"Mmdetection: Open mmlab detection toolbox and benchmark\",\n        \"Generative pretraining from pixels\",\n        \"Do we really need explicit position encodings for vision transformers?\",\n        \"Randaugment: Practical automated data augmentation with a reduced search space\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"A survey on vision transformer\",\n        \"Ghostnet: More features from cheap operations\",\n        \"Deep residual learning for image recognition\",\n        \"Gaussian error linear units (gelus)\",\n        \"Augment your batch: Improving generalization through instance repetition\",\n        \"Squeeze-and-excitation networks\",\n        \"Mindspore\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Fractalnet: Ultra-deep neural networks without residuals\",\n        \"Feature pyramid networks for object detection\",\n        \"Microsoft coco: Common objects in context\",\n        \"Decoupled weight decay regularization\",\n        \"Are sixteen heads really better than one?\",\n        \"Automated flower classification over a large number of classes\",\n        \"Cats and dogs\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Designing network design spaces\",\n        \"Faster r-cnn: Towards real-time object detection with region proposal networks\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Augmented shortcuts for vision transformers\",\n        \"Manifold regularized dynamic network pruning\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Grafit: Learning fine-grained image representations with coarse labels\",\n        \"Visualizing data using t-sne\",\n        \"The inaturalist species classification and detection dataset\",\n        \"Attention is all you need\",\n        \"Pyramid vision transformer: A versatile backbone for dense prediction without convolutions\",\n        \"Non-local neural networks\",\n        \"Segmenting transparent object in the wild with transformer\",\n        \"Renas: Relativistic evaluation of neural architecture search\",\n        \"Tokens-to-token vit: Training vision transformers from scratch on imagenet\",\n        \"Cutmix: Regularization strategy to train strong classifiers with localizable features\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Rethinking semantic segmentation from a sequence-to-sequence perspective with transformers\",\n        \"Random erasing data augmentation\",\n        \"Scene parsing through ade20k dataset\",\n        \"Deformable detr: Deformable transformers for end-to-end object detection\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Transformer in Transformer, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}