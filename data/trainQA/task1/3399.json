{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Collectives: Towards Cloud-aware Collectives for ML Workloads with Rank Reordering\n\nPaper Abstract: Abstract ML workloads are becoming increasingly popular in the cloud. Good cloud training performance is contingent on efficient parameter exchange among VMs. We find that Collectives, the widely used distributed communication algorithms, cannot perform optimally out of the box due to the hierarchical topology of datacenter networks and multi-tenancy nature of the cloud environment. In this paper, we present Collectives (Cloud-aware collectives), a prototype that accelerates collectives by reordering the ranks of participating VMs such that the communication pattern dictated by the selected collectives operation best exploits the locality in the network. Collectives is non-intrusive, requires no code changes nor rebuild of an existing application, and runs without support from cloud providers. Our preliminary application of Collectives on allreduce operations in public clouds results in a speedup of up to 3.7x in multiple microbenchmarks and 1.3x in real-world workloads of distributed training of deep neural networks and gradient boosted decision trees using state-of-the-art frameworks.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Extend mxnet distributed training by mpi allreduce - mxnet - apache software foundation\",\n        \"Github - facebookincubator/gloo: Collective communications library with various primitives for multi-machine training.\",\n        \"gloo/algorithms.md at master · facebookincubator/gloo\",\n        \"Home - dpdk\",\n        \"Massively scale your deep learning training with nccl 2.4 — nvidia developer blog\",\n        \"Nvidia collective communications library (nccl) — nvidia developer\",\n        \"pages.tacc.utexas.edu/~eijkhout/pcse/html/mpi-collective.html\",\n        \"Spark-mpi: Approaching the fifth paradigm - databricks\",\n        \"Writing distributed applications with pytorch — pytorch tutorials 1.3.1 documentation\",\n        \"Spearman Rank Correlation Coefficient.\",\n        \"Amazon ec2 f1 instances\",\n        \"Enable and configure enhanced networking for ec2 instances\",\n        \"Ccl: A portable and tunable collective communication library for scalable parallel computers\",\n        \"Simulated annealing\",\n        \"A comparative study of data center network architectures\",\n        \"Architectures and message-passing algorithms for cluster computing: Design and performance\",\n        \"Omb-gpu: A micro-benchmark suite for evaluating mpi libraries on gpu clusters\",\n        \"Z3: An efficient smt solver\",\n        \"Bandwidth efficient all-to-all broadcast on switched clusters\",\n        \"Message scheduling for all-to-all personalized communication on ethernet switched clusters\",\n        \"A configurable cloud-scale dnn processor for real-time ai\",\n        \"Or-tools — google developers\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Vl2: A scalable and flexible data center network.\",\n        \"Firecaffe: near-linear acceleration of deep neural network training on compute clusters\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree\",\n        \"IncBricks: Toward in-network computation with an in-network cache\",\n        \"Parameter hub: A rack-scale parameter server for distributed deep neural network training\",\n        \"Plink: Discovering and exploiting locality for accelerated distributed training on the public cloud\",\n        \"Web100: extended tcp instrumentation for research, education and diagnosis\",\n        \"The macroscopic behavior of the tcp congestion avoidance algorithm\",\n        \"A communication-efficient parallel algorithm for decision tree\",\n        \"Create an azure virtual machine with accelerated networking — microsoft docs\",\n        \"Turing-nlg: A 17-billion-parameter language model by microsoft - microsoft research\",\n        \"Portland: a scalable fault-tolerant layer 2 data center network fabric\",\n        \"Ai and compute\",\n        \"Pipelined broadcast on ethernet switched clusters\",\n        \"Bandwidth efficient all-reduce operation on tree topologies\",\n        \"Bandwidth optimal all-reduce algorithms for clusters of workstations\",\n        \"Optimization of collective reduction operations\",\n        \"Zero: Memory optimizations toward training trillion parameter models\",\n        \"Scientific computing in the cloud\",\n        \"Inside the social network’s (datacenter) network\",\n        \"Scalable collective message-passing algorithms\",\n        \"Two-tree algorithms for full bandwidth broadcast, reduction and scan\",\n        \"Optimization of collective communication operations in mpich\",\n        \"Distributed tensorflow with mpi\",\n        \"Mpi: a standard message passing interface\",\n        \"Harp: Collective communication on hadoop\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Collectives: Towards Cloud-aware Collectives for ML Workloads with Rank Reordering, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}