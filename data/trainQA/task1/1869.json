{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 63 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 INTRODUCTION\n\nPaper Abstract: Abstract We propose a new reinforcement learning algorithm derived from a regularized linear-programming formulation of optimal control in MDPs. The method is closely related to the classic Relative Entropy Policy Search (REPS) algorithm of Peters et al., (2010), with the key difference that our method introduces a Q-function that enables efficient exact model-free implementation. The main feature of our algorithm (called Q-REPS) is a convex loss function for policy evaluation that serves as a theoretically sound alternative to the widely used squared Bellman error. We provide a practical saddle-point optimization method for minimizing this loss function and provide an error-propagation analysis that relates the quality of the individual updates to the performance of the output policy. Finally, we demonstrate the effectiveness of our method on a range of benchmark problems.\n\n{retrieved_text}\n\nGenerate exactly 63 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 63\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Politex: Regret bounds for policy iteration using expert prediction\",\n        \"Maximum a posteriori policy optimisation\",\n        \"FLAMBE: Structural complexity and representation learning of low rank MDPs\",\n        \"Optimality and approximation with policy gradient methods in Markov decision processes\",\n        \"Learning near-optimal policies with Bellman-residual minimization based fitted policy iteration and a single sample path\",\n        \"Model-based reinforcement learning with value-targeted regression\",\n        \"Covariant policy search\",\n        \"Mirror descent and nonlinear projected subgradient methods for convex optimization\",\n        \"Concentration inequalities: A Nonasymptotic Theory of Independence\",\n        \"OpenAI gym\",\n        \"Provably efficient exploration in policy optimization\",\n        \"Prediction, Learning, and Games\",\n        \"RL-Lib - a PyTorch-based library for reinforcement learning research\",\n        \"SBEED: Convergent reinforcement learning with nonlinear function approximation\",\n        \"The linear programming approach to approximate dynamic programming\",\n        \"A survey on policy search for robotics\",\n        \"Approximate dynamic programming via a smoothed linear program\",\n        \"A theoretical analysis of deep Q-learning\",\n        \"A kernel loss for solving the Bellman equation\",\n        \"Addressing function approximation error in actor-critic methods\",\n        \"Variational methods for reinforcement learning\",\n        \"Is the Bellman residual a bad proxy?\",\n        \"A theory of regularized Markov decision processes\",\n        \"Soft actor-critic: Off-policy maximum entropy deep reinforcement learning with a stochastic actor\",\n        \"Provably efficient reinforcement learning with linear function approximation\",\n        \"A natural policy gradient\",\n        \"Approximately optimal approximate reinforcement learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"A linearly relaxed approximate linear program for Markov decision processes\",\n        \"Stochastic primal-dual Q-learning algorithm for discounted MDPs\",\n        \"Linear programming and sequential decisions\",\n        \"R√©gularisation d‚Äôin√©quations variationnelles par approximations successives\",\n        \"Q-learning and Pontryagin‚Äôs minimum principle\",\n        \"Convex Q-learning, part 1: Deterministic optimal control\",\n        \"Q-learning with linear function approximation\",\n        \"Asynchronous methods for deep reinforcement learning\",\n        \"Human-level control through deep reinforcement learning\",\n        \"A unified view of entropy-regularized Markov decision processes\",\n        \"A unifying view of optimism in episodic reinforcement learning\",\n        \"Is the policy gradient a gradient?\",\n        \"Automatic differentiation in PyTorch\",\n        \"Relative entropy policy search\",\n        \"Constraint relaxation in approximate linear programs\",\n        \"Markov Decision Processes: Discrete Stochastic Dynamic Programming\",\n        \"Neural fitted Q iteration‚Äìfirst experiences with a data efficient neural reinforcement learning method\",\n        \"A stochastic approximation method\",\n        \"Monotone Operators and the Proximal Point Algorithm\",\n        \"Prioritized experience replay\",\n        \"Approximate modified policy iteration and its application to the game of tetris\",\n        \"Trust region policy optimization\",\n        \"Proximal policy optimization algorithms\",\n        \"Generalized polynomial approximations in Markovian decision processes\",\n        \"V-MPO: on-policy maximum a posteriori policy optimization for discrete and continuous control\",\n        \"An analysis of model-based interval estimation for Markov decision processes\",\n        \"Reinforcement Learning: An Introduction (second edition)\",\n        \"Bias in natural actor-critic algorithms\",\n        \"Leverage the average: an analysis of KL regularization in reinforcement learning\",\n        \"Munchausen reinforcement learning\",\n        \"On reward-free reinforcement learning with linear function approximation\",\n        \"Q‚àósuperscriptùëÑQ^{*} approximation schemes for batch reinforcement learning: A theoretical comparison\",\n        \"Sample-optimal parametric Q-learning using linearly additive features\",\n        \"Maximum entropy inverse reinforcement learning\",\n        \"Online learning in episodic Markovian decision processes by relative entropy policy search\"\n    ],\n    \"reasoning\": \"Selected these 63 references because they represent foundational work and recent advances in 1 INTRODUCTION, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}