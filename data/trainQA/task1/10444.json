{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Repeat After Me: Transformers are Better than State Space Models at Copying Transformers are Better than State Space Models at Copying\n\nPaper Abstract: Abstract Transformers are the dominant architecture for sequence modeling, but there is growing interest in models that use a fixed-size latent state that does not depend on the sequence length, which we refer to as “generalized state space models” (GSSMs). In this paper we show that while GSSMs are promising in terms of inference-time efficiency, they are limited compared to transformer models on tasks that require copying from the input context. We start with a theoretical analysis of the simple task of string copying and prove that a two layer transformer can copy strings of exponential length while GSSMs are fundamentally limited by their fixed-size latent state. Empirically, we find that transformers outperform GSSMs in terms of efficiency and generalization on synthetic tasks that require copying the context. Finally, we evaluate pretrained large language models and find that transformer models dramatically outperform state space models at copying and retrieving information from context. Taken together, these results suggest a fundamental gap between transformers and GSSMs on tasks of practical interest.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Exploring length generalization in large language models\",\n        \"Pythia: A suite for analyzing large language models across training and scaling\",\n        \"Quasi-recurrent neural networks\",\n        \"Language models are few-shot learners\",\n        \"Quantifying memorization across neural language models\",\n        \"Tighter bounds on the expressivity of transformer encoders\",\n        \"Rethinking attention with performers\",\n        \"Flashattention: Fast and memory-efficient exact attention with io-awareness\",\n        \"Neural networks and the chomsky hierarchy\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Inductive biases and variable creation in self-attention mechanisms\",\n        \"The pile: An 800gb dataset of diverse text for language modeling\",\n        \"Mamba: Linear-time sequence modeling with selective state spaces\",\n        \"Efficiently modeling long sequences with structured state spaces\",\n        \"Long short-term memory\",\n        \"Length generalization in arithmetic transformers\",\n        \"Transformers are rnns: Fast autoregressive transformers with linear attention\",\n        \"The impact of positional encoding on length generalization in transformers\",\n        \"Exposing attention glitches with flip-flop language modeling\",\n        \"Lost in the middle: How language models use long contexts\",\n        \"Decoupled weight decay regularization\",\n        \"How much do language models copy from their training data? evaluating linguistic novelty in text generation using raven\",\n        \"Sequential neural networks as automata\",\n        \"A formal hierarchy of rnn architectures\",\n        \"Saturated Transformers are Constant-Depth Threshold Circuits\",\n        \"The magic number seven plus or minus two: Some limits on our capacity for processing information\",\n        \"Hyenadna: Long-range genomic sequence modeling at single nucleotide resolution\",\n        \"In-context learning and induction heads\",\n        \"On the difficulty of training recurrent neural networks\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Rwkv: Reinventing rnns for the transformer era\",\n        \"How context affects language models’ factual predictions\",\n        \"Train short, test long: Attention with linear biases enables input length extrapolation\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Know what you don’t know: Unanswerable questions for squad\",\n        \"Randomized positional encodings boost length generalization of transformers\",\n        \"Representational strengths and limitations of transformers\",\n        \"The Ingenious Gentleman Don Quixote of La Mancha\",\n        \"Positional description matters for transformers arithmetic\",\n        \"Transformers as recognizers of formal languages: A survey on expressivity\",\n        \"Roformer: Enhanced transformer with rotary position embedding\",\n        \"Retentive network: A successor to transformer for large language models\",\n        \"An incremental large language model for long text processing in the brain\",\n        \"Attention is all you need\",\n        \"Statistically meaningful approximation: a case study on approximating turing machines with transformers\",\n        \"Thinking like transformers\",\n        \"Huggingface’s transformers: State-of-the-art natural language processing\",\n        \"What algorithms can transformers learn? a study in length generalization\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Repeat After Me: Transformers are Better than State Space Models at Copying Transformers are Better than State Space Models at Copying, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}