{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Distilling Neural Networks for Greener and Faster Dependency Parsing\n\nPaper Abstract: Abstract The carbon footprint of natural language processing research has been increasing in recent years due to its reliance on large and inefficient neural network implementations. Distillation is a network compression technique which attempts to impart knowledge from a large model to a smaller one. We use teacher-student distillation to improve the efficiency of the Biaffine dependency parser which obtains state-of-the-art performance with respect to accuracy and parsing speed (Dozat and Manning, 2017). When distilling to 20% of the original model’s trainable parameters, we only observe an average decrease of ∼similar-to\\sim1 point for both UAS and LAS across a number of diverse Universal Dependency treebanks while being 2.30x (1.19x) faster than the baseline model on CPU (GPU) at inference time. We also observe a small increase in performance when compressing to 80% for some treebanks. Finally, through distillation we attain a parser which is not only faster but also more accurate than the fastest modern parser on the Penn Treebank.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Structured pruning of deep convolutional neural networks\",\n        \"Do deep nets really need to be deep?\",\n        \"Model compression\",\n        \"A fast and accurate dependency parser using neural networks\",\n        \"Syntax-directed attention for neural machine translation\",\n        \"Model compression and acceleration for deep neural networks: The principles, progress, and challenges\",\n        \"BAM! Born-again multi-task networks for natural language understanding\",\n        \"Efficient EUD parsing\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Developing universal dependencies for wolof\",\n        \"Deep biaffine attention for neural dependency parsing\",\n        \"Left-to-right dependency parsing with pointer networks\",\n        \"CoNLL 2017 shared task-automatically annotated raw texts and word embeddings\",\n        \"Learning word vectors for 157 languages\",\n        \"A simple and effective method for removal of hidden units and weights\",\n        \"Sparser, better, faster GPU parsing\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"BPEmb: Tokenization-free Pre-trained Subword Embeddings in 275 Languages\",\n        \"Distilling the knowledge in a neural network\",\n        \"Marian: Fast neural machine translation in C++\",\n        \"Sequence-level knowledge distillation\",\n        \"Simple and accurate dependency parsing using bidirectional LSTM feature representations\",\n        \"Distilling an ensemble of greedy dependency parsers into one MST parser\",\n        \"Measuring bias in contextualized word representations\",\n        \"Optimal brain damage\",\n        \"Old school vs. new school: Comparing transition-based parsers with and without neural network enhancement\",\n        \"Distilling knowledge for search-based structured prediction\",\n        \"Knowledge distillation for small-footprint highway networks\",\n        \"Stack-pointer networks for dependency parsing\",\n        \"Building a large annotated corpus of English: The Penn Treebank\",\n        \"Universal Dependencies 2.4\",\n        \"Sentic patterns: Dependency-based rules for concept-level sentiment analysis\",\n        \"Language models are unsupervised multitask learners\",\n        \"Simple and effective dimensionality reduction for word embeddings\",\n        \"Green AI\",\n        \"Compression of neural machine translation models via pruning\",\n        \"82 treebanks, 34 models: Universal dependency parsing with multi-treebank models\",\n        \"An investigation of the interactions between pre-trained word embeddings, character models and pos tags in dependency parsing\",\n        \"Energy and policy considerations for deep learning in NLP\",\n        \"Viable dependency parsing as sequence labeling\",\n        \"Mitigating gender bias in natural language processing: Literature review\",\n        \"Distilling task-specific knowledge from BERT into simple neural networks\",\n        \"Feature-rich part-of-speech tagging with a cyclic dependency network\",\n        \"Better, faster, stronger sequence tagging constituent parsers\",\n        \"Universal, unsupervised (rule-based), uncovered sentiment analysis\",\n        \"Analyzing multi-head self-attention: Specialized heads do the heavy lifting, the rest can be pruned\",\n        \"Enhancing the generalization ability of neural networks through controlling the hidden layers\",\n        \"Quantized convolutional neural networks for mobile devices\",\n        \"On-device neural language model based word prediction\",\n        \"On compressing deep models by low rank and sparse decomposition\",\n        \"Graph convolution over pruned dependency trees improves relation extraction\",\n        \"Head-driven phrase structure grammar parsing on Penn Treebank\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Distilling Neural Networks for Greener and Faster Dependency Parsing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}