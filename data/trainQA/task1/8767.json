{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scratch Copilot Evaluation: Assessing AI-Assisted Creative Coding for Families\n\nPaper Abstract: Abstract. How can AI enhance creative coding experiences for families? This study explores the potential of large language models (LLMs) in helping families with creative coding using Scratch. Based on our previous user study involving a prototype AI assistant, we devised three evaluation scenarios to determine if LLMs could help families comprehend game code, debug programs, and generate new ideas for future projects. We utilized 22 Scratch projects for each scenario and generated responses from LLMs with and without practice tasks, resulting in 120 creative coding support scenario datasets. In addition, the authors independently evaluated their precision, pedagogical value, and age-appropriate language. Our findings show that LLMs achieved an overall success rate of more than 80% on the different tasks and evaluation criteria. This research offers valuable information on using LLMs for creative family coding and presents design guidelines for future AI-supported coding applications. Our evaluation framework, together with our labeled evaluation data, is publicly available 111https://github.com/stefania11/ScratchCopilot-Evaluation.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"How kids code and how we know: An exploratory study on the Scratch repository\",\n        \"Conceptual Model of Generic Learning Design to Teach Cultural Artifacts in Computing Education\",\n        \"Intercultural Computing Education: Toward Justice Across Difference\",\n        \"OurKidsCode: Facilitating Families to Be Creative with Computing\",\n        \"Teaching large language models to self-debug\",\n        \"Parallel prototyping leads to better design results, more divergence, and increased self-efficacy\",\n        \"How families design and program games: a qualitative analysis of a 4-week online in-home study\",\n        \"Family as a Third Space for AI Literacies: How do children and parents learn about AI together?\",\n        \"Proceedings\",\n        \"Creative coding as compost (ing)\",\n        \"Contextualizing AI Education for K-12 Students to Enhance Their Learning of AI Literacy Through Culturally Responsive Approaches\",\n        \"Masked Language Models as Stereotype Detectors?\",\n        \"Processing: creative coding and computational art\",\n        \"Online python tutor: embeddable web-based program visualization for cs education\",\n        \"Is GitHub copilot a substitute for human pair-programming? An empirical study\",\n        \"Co-Writing with Opinionated Language Models Affects Users’ Views\",\n        \"Exploring the Learnability of Program Synthesizers by Novice Programmers\",\n        \"Omnicode: A novice-oriented live programming environment with always-on run-time value visualizations\",\n        \"Studying the effect of AI Code Generators on Supporting Novice Learners in Introductory Programming\",\n        \"Child speech recognition in human-robot interaction: evaluations and recommendations\",\n        \"Teaching in an open village: a case study on culturally responsive computing in compulsory education\",\n        \"Using large language models to enhance programming error messages\",\n        \"Zhorai: Designing a conversational agent for children to explore machine learning concepts\",\n        \"Family Learning Talk in AI Literacy Learning Activities\",\n        \"Learning performance-improving code edits\",\n        \"From drawing to coding: teaching programming with processing\",\n        \"Understanding Stereotypes in Language Models: Towards Robust Measurement and Zero-Shot Debiasing\",\n        \"Computer programming in the creative arts\",\n        \"A Study of Editor Features in a Creative Coding Classroom\",\n        \"GitHub Next — Hey, GitHub!\",\n        \"Computing with Relevance and Purpose: A Review of Culturally Relevant Education in Computing\",\n        \"StereoSet: Measuring stereotypical bias in pretrained language models\",\n        \"Towards Understanding and Mitigating Social Biases in Language Models\",\n        \"‘It’s all about context’: Building school capacity to implement a whole-school approach to bullying\",\n        \"Software clones in scratch projects: On the presence of copy-and-paste in computational thinking learning\",\n        \"Family creative learning\",\n        \"Youth perspectives on their development in a coding community\",\n        \"Automatic generation of programming exercises and code explanations using large language models\",\n        \"Serenade — Code with voice\",\n        \"Insights from Virtual Culturally Responsive Computing Camps\",\n        \"A perspective on the evolution of live programming\",\n        \"Epistemological pluralism: Styles and voices within the computer culture\",\n        \"Expectation vs. experience: Evaluating the usability of code generation tools powered by large language models\",\n        \"Problem solved, but how? An exploratory study into students’ problem solving processes in creative coding tasks\",\n        \"Computational art: Introducing high school students to computing via art\",\n        \"Expanding computer science education in schools: understanding teacher experiences and challenges\",\n        \"WhyGen: explaining ML-powered code generation by referring to training examples\",\n        \"StoryBuddy: A Human-AI Collaborative Chatbot for Parent-Child Interactive Storytelling with Flexible Parental Involvement\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Scratch Copilot Evaluation: Assessing AI-Assisted Creative Coding for Families, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}