{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A two-steps approach to improve the performance of Android malware detectors\n\nPaper Abstract: Abstract The popularity of Android OS has made it an appealing target to malware developers. To evade detection, including by ML-based techniques, attackers invest in creating malware that closely resemble legitimate apps. In this paper, we propose Guided Retraining, a supervised representation learning-based method that boosts the performance of a malware detector. First, the dataset is split into ‚Äúeasy‚Äù and ‚Äúdifficult‚Äù samples, where difficulty is associated to the prediction probabilities yielded by a malware detector: for difficult samples, the probabilities are such that the classifier is not confident on the predictions, which have high error rates. Then, we apply our Guided Retraining method on the difficult samples to improve their classification. For the subset of ‚Äúeasy‚Äù samples, the base malware detector is used to make the final predictions since the error rate on that subset is low by construction. For the subset of ‚Äúdifficult‚Äù samples, we rely on Guided Retraining, which leverages the correct predictions and the errors made by the base malware detector to guide the retraining process. Guided Retraining focuses on the difficult samples: it learns new embeddings of these samples using Supervised Contrastive Learning and trains an auxiliary classifier for the final predictions. We validate our method on four state-of-the-art Android malware detection approaches using over 265k malware and benign apps, and we demonstrate that Guided Retraining can reduce up to 40.41% prediction errors made by the malware detectors. Our method is generic and designed to enhance the classification performance on a binary classification task. Consequently, it can be applied to other classification problems beyond Android malware detection.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Quantifying the impact of adversarial evasion attacks on machine learning based android malware classifiers\",\n        \"Permissions-based detection of android malware using machine learning\",\n        \"Androzoo: Collecting millions of android apps for the research community\",\n        \"Drebin: Efficient and explainable detection of android malware in your pocket\",\n        \"Improving wind power prediction with retraining machine learning algorithms\",\n        \"Tinydroid: a lightweight and efficient model for android malware detection and classification\",\n        \"Seizure prediction based on classification of eeg synchronization patterns with on-line retraining and post-processing scheme\",\n        \"Lessons learnt on reproducibility in machine learning based android malware detection\",\n        \"A deep dive inside drebin: An explorative analysis beyond android malware detection scores\",\n        \"Dexray: A simple, yet effective deep learning approach to android malware detection based on image representation of bytecode\",\n        \"Android malware detection method based on bytecode image\",\n        \"Heterogeneous temporal graph transformer: An intelligent system for evolving android malware detection\",\n        \"Object detection with discriminatively trained part-based models\",\n        \"Partial label learning with self-guided retraining\",\n        \"Automated synthesis of semantic malware signatures using maximum satisfiability\",\n        \"A decision-theoretic generalization of on-line learning and an application to boosting\",\n        \"Lightweight, obfuscation-resilient detection and family identification of android malware\",\n        \"Generative adversarial nets\",\n        \"Adasyn: Adaptive synthetic sampling approach for imbalanced learning\",\n        \"¬°i¬øŒ±ùõº\\\\alpha cyber¬°/i¬ø: Enhancing robustness of android malware detection system against adversarial attacks on heterogeneous graph based model\",\n        \"Supervised representation learning for multi-label classification\",\n        \"R2-d2: Color-inspired convolutional neural network (cnn)-based android malware detections\",\n        \"Discriminative training of hmms for automatic speech recognition: A survey\",\n        \"Discriminative training‚Äîrecent progress in speech recognition\",\n        \"Supervised contrastive learning\",\n        \"A comprehensive survey on machine learning techniques for android malware detection\",\n        \"Dice loss for data-imbalanced NLP tasks\",\n        \"Focal loss for dense object detection\",\n        \"A review of android malware detection approaches based on machine learning\",\n        \"Deep learning for android malware defenses: a systematic literature review\",\n        \"Malfustection: Obfuscated malware detection and malware classification with data shortage by combining semi-supervised and contrastive learning\",\n        \"Mldroid‚Äîframework for android malware detection using machine learning techniques\",\n        \"MaMaDroid: Detecting Android Malware by Building Markov Chains of Behavioral Models\",\n        \"Multi-view deep learning for zero-day android malware detection\",\n        \"Context-aware, adaptive, and scalable android malware detection through online learning\",\n        \"Retraining prior state performances of anaerobic digestion improves prediction accuracy of methane yield in various machine learning models\",\n        \"Supervised representation learning for audio scene classification\",\n        \"Malicious application detection in android ‚Äî a systematic literature review\",\n        \"Training region-based object detectors with online hard example mining\",\n        \"Retraining strategy-based domain adaption network for intelligent fault diagnosis\",\n        \"Android malware detection: Looking beyond dalvik bytecode\",\n        \"Re-embedding difficult samples via mutual information constrained semantically oversampling for imbalanced text classification\",\n        \"Sample-efficient optimization in the latent space of deep generative models via weighted retraining\",\n        \"Practical galaxy morphology tools from deep supervised representation learning\",\n        \"Supervised representation learning approach for cross-project aging-related bug prediction\",\n        \"Malscan: Fast market-wide mobile malware scanning by social-network centrality analysis\",\n        \"DeltaGrad: Rapid retraining of machine learning models\",\n        \"Obfuscation-resilient android malware analysis based on contrastive learning\",\n        \"CADE: Detecting and explaining concept drift samples for security applications\",\n        \"Deep learning feature exploration for android malware detection\",\n        \"Training and retraining of neural network trees\",\n        \"Android malware detection using large-scale network representation learning\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in A two-steps approach to improve the performance of Android malware detectors, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}