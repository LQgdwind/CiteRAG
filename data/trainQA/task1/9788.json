{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CodeMark: Imperceptible Watermarking for Code Datasets against Neural Code Completion Models\n\nPaper Abstract: Abstract. Code datasets are of immense value for training neural-network-based code completion models, where companies or organizations have made substantial investments to establish and process these datasets. Unluckily, these datasets, either built for proprietary or public usage, face the high risk of unauthorized exploits, resulting from data leakages, license violations, etc. Even worse, the “black-box” nature of neural models sets a high barrier for externals to audit their training datasets, which further connives these unauthorized usages. Currently, watermarking methods have been proposed to prohibit inappropriate usage of image and natural language datasets. However, due to domain specificity, they are not directly applicable to code datasets, leaving the copyright protection of this emerging and important field of code data still exposed to threats. To fill this gap, we propose a method, named CodeMark, to embed user-defined imperceptible watermarks into code datasets to trace their usage in training neural code completion models. CodeMark is based on adaptive semantic-preserving transformations, which preserve the exact functionality of the code data and keep the changes covert against rule-breakers. We implement CodeMark in a toolkit and conduct an extensive evaluation of code completion models. CodeMark is validated to fulfill all desired properties of practical watermarks, including harmlessness to model accuracy, verifiability, robustness, and imperceptibility.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"GitHub Copilot research recitation\",\n        \"aiXcoder\",\n        \"Code faster with AI completions — TabNine\",\n        \"GitHub Copilot · Your AI pair programmer\",\n        \"How is the data in Copilot for Individuals used and shared?\",\n        \"ML-powered coding companion – Amazon CodeWhisperer – Amazon Web Services\",\n        \"Tree-sitter - Introduction\",\n        \"Where did AWS obtain the training data to build this service?\",\n        \"CodeMark\",\n        \"Stack Overflow Will Charge AI Giants for Training Data\",\n        \"Turning Your Weakness Into a Strength: Watermarking Deep Neural Networks by Backdooring\",\n        \"A Method for Watermarking Java Programs via Opaque Predicates\",\n        \"Self-Supervised Contrastive Learning for Code Retrieval and Summarization via Semantic-Preserving Transformations\",\n        \"Detecting Backdoor Attacks on Deep Neural Networks by Activation Clustering\",\n        \"Targeted backdoor attacks on deep learning systems using data poisoning\",\n        \"An Evaluation of Static Java Bytecode Watermarking\",\n        \"Method and system for generating and auditing a signature for a computer program\",\n        \"BadNets: Identifying Vulnerabilities in the Machine Learning Model Supply Chain\",\n        \"A survey of static software watermarking\",\n        \"Protecting Intellectual Property of Language Generation APIs with Lexical Watermark\",\n        \"CodeSearchNet Challenge: Evaluating the State of Semantic Code Search\",\n        \"Digital Watermarking For Protecting Audio Classification Datasets\",\n        \"The Stack: 3 TB of permissively licensed source code\",\n        \"The Mechanical Evaluation of Expressions\",\n        \"StarCoder: may the source be with you!\",\n        \"Open-sourced Dataset Protection via Backdoor Watermarking\",\n        \"Xmark: Dynamic Software Watermarking Using Collatz Conjecture\",\n        \"Public Git Archive: A Big Code Dataset for All\",\n        \"A practical method for watermarking Java programs\",\n        \"Bleu: a Method for Automatic Evaluation of Machine Translation\",\n        \"On the generalizability of Neural Program Models with respect to semantic-preserving program transformations\",\n        \"Language Models are Unsupervised Multitask Learners\",\n        \"Backdoors in Neural Models of Source Code\",\n        \"You Autocomplete Me: Poisoning Vulnerabilities in Neural Code Completion\",\n        \"Poison Frogs! Targeted Clean-Label Poisoning Attacks on Neural Networks\",\n        \"An Efficient Software Watermark by Equation Reordering and FDOS\",\n        \"STRATA: Simple, Gradient-Free Attacks for Models of Code\",\n        \"CoProtector: Protect Open-Source Code against Unauthorized Training Usage with Data Poisoning\",\n        \"On the Effectiveness of Dataset Watermarking in Adversarial Settings\",\n        \"Software watermarking via assembly code transformations\",\n        \"Spectral Signatures in Backdoor Attacks\",\n        \"Attention is All you Need\",\n        \"Concealed Data Poisoning Attacks on NLP Models\",\n        \"CodeT5: Identifier-aware Unified Pre-trained Encoder-Decoder Models for Code Understanding and Generation\",\n        \"The generalisation of student’s problems when several different population variances are involved\",\n        \"A Targeted Attack on Black-Box Neural Machine Translation with Parallel Data Poisoning\",\n        \"Robust Black-box Watermarking for Deep Neural Network using Inverse Document Frequency\",\n        \"A Survey on Deep Learning for Software Engineering\",\n        \"Natural Attack for Pre-trained Models of Code\",\n        \"Adversarial examples for models of code\",\n        \"Generating Adversarial Examples for Holding Robustness of Source Code Processing Models\",\n        \"Challenging Machine Learning-based Clone Detectors via Semantic-preserving Code Transformations\",\n        \"Clean-Label Backdoor Attacks on Video Recognition Models\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in CodeMark: Imperceptible Watermarking for Code Datasets against Neural Code Completion Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}