{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Task-Oriented GNNs Training on Large Knowledge Graphs for Accurate and Efficient Modeling\n\nPaper Abstract: Abstract A Knowledge Graph (KG) is a heterogeneous graph encompassing a diverse range of node and edge types. Heterogeneous Graph Neural Networks (HGNNs) are popular for training machine learning tasks like node classification and link prediction on KGs. However, HGNN methods exhibit excessive complexity influenced by the KG‚Äôs size, density, and the number of node and edge types. AI practitioners handcraft a subgraph of a KG Gùê∫G relevant to a specific task. We refer to this subgraph as a task-oriented subgraph (TOSG), which contains a subset of task-related node and edge types in Gùê∫G. Training the task using TOSG instead of Gùê∫G alleviates the excessive computation required for a large KG. Crafting the TOSG demands a deep understanding of the KG‚Äôs structure and the task‚Äôs objectives. Hence, it is challenging and time-consuming. This paper proposes KG-TOSA, an approach to automate the TOSG extraction for task-oriented HGNN training on a large KG. In KG-TOSA, we define a generic graph pattern that captures the KG‚Äôs local and global structure relevant to a specific task. We explore different techniques to extract subgraphs matching our graph pattern: namely (i) two techniques sampling around targeted nodes using biased random walk or influence scores, and (ii) a SPARQL-based extraction method leveraging RDF engines‚Äô built-in indices. Hence, it achieves negligible preprocessing overhead compared to the sampling techniques. We develop a benchmark of real KGs of large sizes and various tasks for node classification and link prediction. Our experiments show that KG-TOSA helps state-of-the-art HGNN methods reduce training time and memory usage by up to 70% while improving the model performance, e.g., accuracy and inference time.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"YAGO 4: A reason-able knowledge base\",\n        \"Wikidata: a free collaborative knowledge base\",\n        \"Graph neural networks in recommender systems: A survey\",\n        \"Cross-lingual knowledge graph alignment via graph convolutional networks\",\n        \"Kgnn: Knowledge graph neural network for drug-drug interaction prediction\",\n        \"Enhancing graph neural network-based fraud detectors against camouflaged fraudsters\",\n        \"Graphsaint: Graph sampling based inductive learning method\",\n        \"Decoupling the depth and scope of graph neural networks\",\n        \"Fastgcn: Fast learning with graph convolutional networks via importance sampling\",\n        \"Multiplex heterogeneous graph convolutional network\",\n        \"Meta-knowledge transfer for inductive knowledge graph embedding\",\n        \"Link prediction on latent heterogeneous graphs\",\n        \"Simple and efficient heterogeneous graph neural network\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Are we really making much progress?: Revisiting, benchmarking and refining heterogeneous graph neural networks\",\n        \"OGB-LSC: A large-scale challenge for machine learning on graphs\",\n        \"The microsoft academic knowledge graph: A linked data source with 8 billion triples of scholarly data\",\n        \"A survey on heterogeneous graph embedding: Methods, techniques, applications and sources\",\n        \"dblp in rdf\",\n        \"Convolutional 2d knowledge graph embeddings\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Graph transformer networks: Learning meta-path graphs to improve gnns\",\n        \"Pathsim: Meta path-based top-k similarity search in heterogeneous information networks\",\n        \"Sampling methods for efficient training of graph convolutional networks: A survey\",\n        \"Influence-based mini-batching for graph neural networks\",\n        \"Heterogeneous graph transformer\",\n        \"Scalable graph neural networks for heterogeneous graphs\",\n        \"Graph neural networks: Methods, applications, and opportunities\",\n        \"Graph neural networks in node classification: survey and evaluation\",\n        \"A survey on knowledge graph embeddings for link prediction\",\n        \"Openhgnn: An open source toolkit for heterogeneous graph neural network\",\n        \"Measuring the effect of training data on deep learning predictions via randomized experiments\",\n        \"Heterogeneous graph neural network\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"Measuring and relieving the over-smoothing problem for graph neural networks from the topological view\",\n        \"Towards powerful graph neural networks: Diversity matters\",\n        \"A survey of information entropy metrics for complex networks\",\n        \"Local graph partitioning using pagerank vectors\",\n        \"Towards a gml-enabled knowledge graph platform\",\n        \"Demonstration of sparqlml: An interfacing language for supporting graph machine learning for rdf graphs\",\n        \"Hexastore: sextuple indexing for semantic web data management\",\n        \"Neugraph: Parallel deep neural network computation on large graphs\",\n        \"G3: When graph neural networks meet parallel graph processing systems on gpus\",\n        \"Distdgl: Distributed graph neural network training for billion-scale graphs\",\n        \"Dgcl: An efficient communication library for distributed gnn training\",\n        \"Sancus: Staleness-aware communication-avoiding full-graph decentralized training in large-scale graph neural networks\",\n        \"Aligraph: a comprehensive graph neural network platform\",\n        \"TF-GNN: graph neural networks in tensorflow\",\n        \"Torch geometric documentation\",\n        \"Marius: Learning massive graph embeddings on a single machine\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Task-Oriented GNNs Training on Large Knowledge Graphs for Accurate and Efficient Modeling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}