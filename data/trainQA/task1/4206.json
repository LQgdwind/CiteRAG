{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Attentive Knowledge-aware Graph Convolutional Networks with Collaborative Guidance for Personalized Recommendation\n\nPaper Abstract: Abstract To alleviate data sparsity and cold-start problems of traditional recommender systems (RSs), incorporating knowledge graphs (KGs) to supplement auxiliary information has attracted considerable attention recently. However, simply integrating KGs in current KG-based RS models is not necessarily a guarantee to improve the recommendation performance, which may even weaken the holistic model capability. This is because the construction of these KGs is independent of the collection of historical user-item interactions; hence, information in these KGs may not always be helpful for recommendation to all users. In this paper, we propose attentive Knowledge-aware Graph convolutional networks with Collaborative Guidance for personalized Recommendation (CG-KGR). CG-KGR is a novel knowledge-aware recommendation model that enables ample and coherent learning of KGs and user-item interactions, via our proposed Collaborative Guidance Mechanism. Specifically, CG-KGR first encapsulates historical interactions to interactive information summarization. Then CG-KGR utilizes it as guidance to extract information out of KGs, which eventually provides more precise personalized recommendation. We conduct extensive experiments on four real-world datasets over two recommendation tasks, i.e., Top-K recommendation and Click-Through rate (CTR) prediction. The experimental results show that the CG-KGR model significantly outperforms recent state-of-the-art models by 1.4-27.0% in terms of Recall metric on Top-K recommendation.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Neural graph collaborative filtering\",\n        \"Multi-graph convolution collaborative filtering\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"Latent semantic models for collaborative filtering\",\n        \"Factorization meets the neighborhood: a multifaceted collaborative filtering model\",\n        \"Sequence-aware factorization machines for temporal predictive analytics\",\n        \"Effective missing data prediction for collaborative filtering\",\n        \"Dropoutnet: Addressing cold start in recommender systems\",\n        \"Modeling multidimensional user preferences for collaborative filtering\",\n        \"Ripplenet: Propagating user preferences on the knowledge graph for recommender systems\",\n        \"Knowledge graph convolutional networks for recommender systems\",\n        \"Knowledge graph attention network for recommendation\",\n        \"Knowledge-aware graph neural networks with label smoothness regularization for recommender systems\",\n        \"Ckan: Collaborative knowledge-aware attentive network for recommender systems\",\n        \"Improving question generation with to the point context\",\n        \"Attention is all you need\",\n        \"Open-retrieval conversational machine reading\",\n        \"Graph attention networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Deepgcns: Can gcns go as deep as cnns?\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Bpr: Bayesian personalized ranking from implicit feedback\",\n        \"Neural factorization machines for sparse predictive analytics\",\n        \"Collaborative knowledge base embedding for recommender systems\",\n        \"Learning entity and relation embeddings for knowledge resolution\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Individual comparisons by ranking methods\",\n        \"Effective and efficient attributed community search\",\n        \"Efficient community search over large directed graphs: An augmented index-based approach\",\n        \"Bayesian graph convolutional neural networks for semi-supervised classification\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Collaborative filtering with entity similarity regularization in heterogeneous information networks\",\n        \"Personalized entity recommendation: A heterogeneous information network approach\",\n        \"Meta-graph based recommendation fusion over heterogeneous information networks\",\n        \"Leveraging meta-path based context for top-n recommendation with a neural co-attention model\",\n        \"Heterogeneous information network embedding for recommendation\",\n        \"Unifying knowledge graph learning and recommendation: Towards a better understanding of user preferences\",\n        \"Group-buying recommendation for social e-commerce\",\n        \"Price-aware recommendation with graph convolutional networks\",\n        \"Graph neural networks for social recommendation\",\n        \"Session-based recommendation with graph neural networks\",\n        \"Multi-behavior recommendation with graph convolutional networks\",\n        \"Bundle recommendation with graph convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Attentive Knowledge-aware Graph Convolutional Networks with Collaborative Guidance for Personalized Recommendation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}