{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: UpMax: User partitioning for MaxSAT\n\nPaper Abstract: Abstract It has been shown that Maximum Satisfiability (MaxSAT) problem instances can be effectively solved by partitioning the set of soft clauses into several disjoint sets. The partitioning methods can be based on clause weights (e.g., stratification) or based on graph representations of the formula. Afterwards, a merge procedure is applied to guarantee that an optimal solution is found. This paper proposes a new framework called UpMax that decouples the partitioning procedure from the MaxSAT solving algorithms. As a result, new partitioning procedures can be defined independently of the MaxSAT algorithm to be used. Moreover, this decoupling also allows users that build new MaxSAT formulas to propose partition schemes based on knowledge of the problem to be solved. We illustrate this approach using several problems and show that partitioning has a large impact on the performance of unsatisfiability-based MaxSAT algorithms.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Community Structure of SAT Formulas\",\n        \"Improving SAT-Based Weighted MaxSAT Solvers\",\n        \"Improving WPM2 for (Weighted) Partial MaxSAT\",\n        \"WPM3: an (in)complete algorithm for weighted partial maxsat\",\n        \"Exact max-sat solvers for over-constrained problems\",\n        \"A short description of the solver evalmaxsat\",\n        \"Applications of maxsat in data analysis\",\n        \"Fast unfolding of communities in large networks\",\n        \"Solving MAXSAT by solving a sequence of simpler SAT instances\",\n        \"Exploiting the Power of mip Solvers in maxsat\",\n        \"Postponing Optimization to Speed Up MAXSAT Solving\",\n        \"Modeling and solving staff scheduling with partial weighted maxsat\",\n        \"Translating Pseudo-Boolean Constraints into SAT\",\n        \"On Solving the Partial MAX-SAT Problem\",\n        \"An empirical study of encodings for group maxsat\",\n        \"A Low Capture Power Oriented X-filling Method Using Partial MaxSAT Iteratively\",\n        \"PySAT: A Python Toolkit for Prototyping with SAT Oracles\",\n        \"RC2: an efficient maxsat solver\",\n        \"Software Abstractions: Logic, language, and analysis\",\n        \"PackUp: Tools for Package Upgradability Solving\",\n        \"Cause clue clauses: error localization using maximum satisfiability\",\n        \"Multi-representational security analysis\",\n        \"Testera: Specification-based testing of java programs using SAT\",\n        \"QMaxSAT: A Partial Max-SAT Solver\",\n        \"Cashwmaxsat: Solver description\",\n        \"Combining clause learning and branch and bound for maxsat\",\n        \"Boosting branch-and-bound maxsat solvers with clause learning\",\n        \"Detecting network policy conflicts using alloy\",\n        \"Algorithms for Weighted Boolean Optimization\",\n        \"Boolean lexicographic optimization: algorithms & applications\",\n        \"On Using Unsatisfiability for Solving Maximum Satisfiability\",\n        \"Incremental Cardinality Constraints for MaxSAT\",\n        \"On partitioning for maximum satisfiability\",\n        \"Open-WBO: a Modular MaxSAT Solver\",\n        \"Community-based partitioning for maxsat solving\",\n        \"The implicit hitting set approach to solve combinatorial optimization problems with an application to multigenome alignment\",\n        \"Iterative and core-guided MaxSAT solving: A survey and assessment\",\n        \"Core-Guided MaxSAT with Soft Cardinality Constraints\",\n        \"MSCG: robust core-guided maxsat solving\",\n        \"Exploiting resolution-based representations for maxsat solving\",\n        \"Dynamic polynomial watchdog encoding for solving weighted maxsat\",\n        \"UWrMaxSat – a new MiniSat+ – based Solver in MaxSAT Evaluation 2019\",\n        \"UWrMaxSat: Efficient Solver for MaxSAT and Pseudo-Boolean Problems\",\n        \"LMHS: A SAT-IP hybrid maxsat solver\",\n        \"Towards an Optimal CNF Encoding of Boolean Cardinality Constraints\",\n        \"Starexec: A cross-community infrastructure for logic solving\",\n        \"CheckMate: Automated synthesis of hardware exploits and security litmus tests\",\n        \"Variable independence and resolution paths for quantified boolean formulas\",\n        \"Applications of maxsat in automotive configuration\",\n        \"Resolution graphs\",\n        \"N-level modulo-based CNF encodings of pseudo-boolean constraints for maxsat\",\n        \"AlloyMax: bringing maximum satisfaction to relational specifications\",\n        \"MAXSAT heuristics for cost optimal planning\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in UpMax: User partitioning for MaxSAT, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}