{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: LMUFormer: Low Complexity Yet Powerful Spiking Model With Legendre Memory Units\n\nPaper Abstract: Abstract Transformer models have demonstrated high accuracy in numerous applications but have high complexity and lack sequential processing capability making them ill-suited for many streaming applications at the edge where devices are heavily resource-constrained. Thus motivated, many researchers have proposed reformulating the transformer models as RNN modules which modify the self-attention computation with explicit states. However, these approaches often incur significant performance degradation. The ultimate goal is to develop a model that has the following properties: parallel training, streaming and low-cost inference, and state-of-the-art (SOTA) performance. In this paper, we propose a new direction to achieve this goal. We show how architectural modifications to a fully-sequential recurrent model can help push its performance toward Transformer models while retaining its sequential processing capability. Specifically, inspired by the recent success of Legendre Memory Units (LMU) in sequence learning tasks, we propose LMUFormer, which augments the LMU with convolutional patch embedding and convolutional channel mixer. Moreover, we present a spiking version of this architecture, which introduces the benefit of states within the patch embedding and channel mixer modules while simultaneously reducing the computing complexity. We evaluated our architectures on multiple sequence datasets. Of particular note is our performance on the Speech Commands V2 dataset (35 classes). In comparison to SOTA transformer-based models within the ANN domain, our LMUFormer demonstrates comparable performance while necessitating a remarkable 53×53\\times reduction in parameters and a substantial 65×65\\times decrement in FLOPs. Furthermore, when benchmarked against extant low-complexity SNN variants, our model establishes a new SOTA with an accuracy of 96.12%. Additionally, owing to our model’s proficiency in real-time data processing, we are able to achieve a 32.03% reduction in sequence length, all while incurring an inconsequential decline in performance. Our code is publicly available at https://github.com/zeyuliu1037/LMUFormer.git\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spiking neural networks for frame-based and event-based single object localization\",\n        \"Keyword transformer: A self-attention model for keyword spotting\",\n        \"A surrogate gradient spiking baseline for speech command recognition\",\n        \"Language models are few-shot learners\",\n        \"Parallelizing legendre memory unit training\",\n        \"On the properties of neural machine translation: Encoder-decoder approaches\",\n        \"Bridging the gap between spiking neural networks & lstms for latency & energy efficiency\",\n        \"A neural attention model for speech command recognition\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Deep residual learning in spiking neural networks\",\n        \"Ast: Audio spectrogram transformer\",\n        \"Hippo: Recurrent memory with optimal polynomial projections\",\n        \"Efficiently modeling long sequences with structured state spaces\",\n        \"Conformer: Convolution-augmented transformer for speech recognition\",\n        \"Deep residual learning for image recognition\",\n        \"Gaussian error linear units (gelus)\",\n        \"Long short-term memory\",\n        \"Transformers are rnns: Fast autoregressive transformers with linear attention\",\n        \"Spiking-yolo: spiking neural network for energy-efficient object detection\",\n        \"Adam: A method for stochastic optimization\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"A simple way to initialize recurrent networks of rectified linear units\",\n        \"The mnist database of handwritten digits, 1998\",\n        \"Enabling spike-based backpropagation for training deep neural network architectures\",\n        \"Training deep spiking neural networks using backpropagation\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"Decoupled weight decay regularization\",\n        \"Long short-term memory spiking networks and their applications\",\n        \"Spiking convolutional neural networks for text classification\",\n        \"Networks of spiking neurons: the third generation of neural network models\",\n        \"Training high-performance low-latency spiking neural networks by differentiation on spike representation\",\n        \"A million spiking-neuron integrated circuit with a scalable communication network and interface\",\n        \"Rwkv: Reinventing rnns for the transformer era\",\n        \"Spike frequency adaptation supports network computations on temporally dispersed information\",\n        \"Super-convergence: Very fast training of neural networks using large learning rates\",\n        \"Long range arena: A benchmark for efficient transformers\",\n        \"Mlp-mixer: An all-mlp architecture for vision\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Attention is all you need\",\n        \"Legendre memory units: Continuous-time representation in recurrent neural networks\",\n        \"Learning efficient representations for keyword spotting with triplet loss\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Speech commands: A dataset for limited-vocabulary speech recognition\",\n        \"Spatio-temporal backpropagation for training high-performance spiking neural networks\",\n        \"Direct training for spiking neural networks: Faster, larger, better\",\n        \"Early convolutions help transformers see better\",\n        \"Nyströmformer: A nyström-based algorithm for approximating self-attention\",\n        \"Spike-driven transformer\",\n        \"Big bird: Transformers for longer sequences\",\n        \"Spikformer: When spiking neural network meets transformer\",\n        \"Spikegpt: Generative pre-trained language model with spiking neural networks\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in LMUFormer: Low Complexity Yet Powerful Spiking Model With Legendre Memory Units, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}