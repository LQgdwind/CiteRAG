{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: EDoG: Adversarial Edge Detection For Graph Neural Networks\n\nPaper Abstract: Abstract Graph Neural Networks (GNNs) have been widely applied to different tasks such as bioinformatics, drug design, and social networks. However, recent studies have shown that GNNs are vulnerable to adversarial attacks which aim to mislead the node (or subgraph) classification prediction by adding subtle perturbations. In particular, several attacks against GNNs have been proposed by adding/deleting a small amount of edges, which have caused serious security concerns. Detecting these attacks is challenging due to the small magnitude of perturbation and the discrete nature of graph data. In this paper, we propose a general adversarial edge detection pipeline EDoG without requiring knowledge of the attack strategies based on graph generation. Specifically, we propose a novel graph generation approach combined with link prediction to detect suspicious adversarial edges. To effectively train the graph generative model, we sample several sub-graphs from the given graph data. We show that since the number of adversarial edges is usually low in practice, with low probability the sampled sub-graphs will contain adversarial edges based on the union bound. In addition, considering the strong attacks which perturb a large number of edges, we propose a set of novel features to perform outlier detection as the preprocessing for our detection. Extensive experimental results on three real-world graph datasets including a private transaction rule dataset from a major company and two types of synthetic graphs with controlled properties (e.g., Erdos-Renyi and scale-free graphs) show that EDoG can achieve above 0.8 AUC against four state-of-the-art unseen attack strategies without requiring any knowledge about the attack type (e.g., degree of the target victim node); and around 0.85 with knowledge of the attack type. EDoG significantly outperforms traditional malicious edge detection baselines. We also show that an adaptive attack with full knowledge of our detection pipeline is difficult to bypass it. Our results shed light on several principles to improve the robustness of GNNs.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graph based anomaly detection and description: a survey\",\n        \"Statistical mechanics of complex networks\",\n        \"Sybil detection in online social networks (osns)\",\n        \"Adversarial attacks on node embeddings\",\n        \"NetGAN: Generating graphs via random walks\",\n        \"A bootstrap method for goodness of fit and model selection with a single observed network\",\n        \"Discriminative embeddings of latent variable models for structured data\",\n        \"Adversarial attack on graph structured data\",\n        \"Batch virtual adversarial training for graph convolutional networks\",\n        \"Semi-supervised learning on graphs with generative adversarial nets\",\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"On random graphs\",\n        \"Graph adversarial training: Dynamically regularizing based on graph structure\",\n        \"A set of measures of centrality based on betweenness\",\n        \"Citeseer: An automatic citation indexing system\",\n        \"Adversarial texts with gradient methods\",\n        \"Generative adversarial nets\",\n        \"Explaining and harnessing adversarial examples\",\n        \"Inductive representation learning on large graphs\",\n        \"Adversarial examples for evaluating reading comprehension systems\",\n        \"Catchsync: catching synchronized behavior in large directed graphs\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"The link-prediction problem for social networks\",\n        \"Detecting malicious domains via graph inference\",\n        \"Automating the construction of internet portals with machine learning\",\n        \"Magnet: a two-pronged defense against adversarial examples\",\n        \"Distillation as a defense to adversarial perturbations against deep neural networks\",\n        \"Automatic differentiation in pytorch\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"When recommendation goes wrong: Anomalous link discovery in recommendation networks\",\n        \"Deepinf: Social influence prediction with deep learning\",\n        \"The case for anomalous link discovery\",\n        \"Defense-GAN: Protecting classifiers against adversarial attacks using generative models\",\n        \"Towards crafting text adversarial samples\",\n        \"The many faces of link fraud\",\n        \"Communication theory of secrecy systems\",\n        \"Graphvae: Towards generation of small graphs using variational autoencoders\",\n        \"Virtual adversarial training on graph convolutional networks in node classification\",\n        \"Data poisoning attack against unsupervised node embedding methods\",\n        \"Sequence to sequence learning with neural networks\",\n        \"Introduction to reinforcement learning\",\n        \"Peernets: Exploiting peer wisdom against adversarial attacks\",\n        \"Intriguing properties of neural networks\",\n        \"Graph Attention Networks\",\n        \"Generating adversarial examples with adversarial networks\",\n        \"Spatially transformed adversarial examples\",\n        \"Topology attack and defense for graph neural networks: An optimization perspective\",\n        \"Feature squeezing: Detecting adversarial examples in deep neural networks\",\n        \"Graph convolutional policy network for goal-directed molecular graph generation\",\n        \"GraphRNN: Generating realistic graphs with deep auto-regressive models\",\n        \"Robust graph convolutional networks against adversarial attacks\",\n        \"Adversarial attacks on neural networks for graph data\",\n        \"Adversarial attacks on graph neural networks via meta learning\",\n        \"Certifiable robustness and robust training for graph convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in EDoG: Adversarial Edge Detection For Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}