{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: BERT Loses Patience: Fast and Robust Inference with Early Exit\n\nPaper Abstract: Abstract In this paper, we propose Patience-based Early Exit, a straightforward yet effective inference method that can be used as a plug-and-play technique to simultaneously improve the efficiency and robustness of a pretrained language model (PLM). To achieve this, our approach couples an internal-classifier with each layer of a PLM and dynamically stops inference when the intermediate predictions of the internal classifiers remain unchanged for a pre-defined number of steps. Our approach improves inference efficiency as it allows the model to make a prediction with fewer layers. Meanwhile, experimental results with an ALBERT model show that our method can improve the accuracy and robustness of the model by preventing it from overthinking and exploiting multiple classifiers for prediction, yielding a better accuracy-speed trade-off compared to existing early exit methods.111Code available at https://github.com/JetRunner/PABEE.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Roberta: A robustly optimized BERT pretraining approach\",\n        \"ALBERT: A lite BERT for self-supervised learning of language representations\",\n        \"Shallow-deep networks: Understanding and mitigating network overthinking\",\n        \"Is BERT really robust? natural language attack on text classification and entailment\",\n        \"Generalization and parameter estimation in feedforward netws: Some experiments\",\n        \"Early stopping-but when?\",\n        \"Once-for-all: Train one network and specialize it for efficient deployment\",\n        \"Deep residual learning for image recognition\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Quantized convolutional neural networks for mobile devices\",\n        \"Distilling the knowledge in a neural network\",\n        \"Distilbert, a distilled version of bert: smaller, faster, cheaper and lighter\",\n        \"Patient knowledge distillation for BERT model compression\",\n        \"Tinybert: Distilling bert for natural language understanding\",\n        \"Are sixteen heads really better than one?\",\n        \"Analyzing multi-head self-attention: Specialized heads do the heavy lifting, the rest can be pruned\",\n        \"Reducing transformer depth on demand with structured dropout\",\n        \"Bert-of-theseus: Compressing bert by progressive module replacing\",\n        \"Adaptive computation time for recurrent neural networks\",\n        \"Universal transformers\",\n        \"Branchynet: Fast inference via early exiting from deep neural networks\",\n        \"Triple wins: Boosting accuracy, robustness and efficiency together by enabling input-adaptive inference\",\n        \"Skipnet: Learning dynamic routing in convolutional networks\",\n        \"Fastbert: a self-distilling bert with adaptive inference time\",\n        \"Deebert: Dynamic early exiting for accelerating bert inference\",\n        \"The right tool for the job: Matching model and instance complexities\",\n        \"Intriguing properties of neural networks\",\n        \"To trust or not to trust a classifier\",\n        \"Neural network ensembles, cross validation, and active learning\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"Senteval: An evaluation toolkit for universal sentence representations\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"Squad: 100, 000+ questions for machine comprehension of text\",\n        \"Neural network acceptability judgments\",\n        \"The winograd schema challenge\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"Megatron-lm: Training multi-billion parameter language models using gpu model parallelism\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Language models are few-shot learners\",\n        \"Adversarial examples in the physical world\",\n        \"A large annotated corpus for learning natural language inference\",\n        \"Character-level convolutional networks for text classification\",\n        \"Ensemble methods as a defense to adversarial perturbations against deep neural networks\",\n        \"Ensemble adversarial training: Attacks and defenses\",\n        \"Improving adversarial robustness via promoting ensemble diversity\",\n        \"Learning transferable architectures for scalable image recognition\",\n        \"Green AI\",\n        \"Learning multiple layers of features from tiny images\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in BERT Loses Patience: Fast and Robust Inference with Early Exit, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}