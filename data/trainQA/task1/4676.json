{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: End-to-End Learning of Deep Kernel Acquisition Functions for Bayesian Optimization\n\nPaper Abstract: Abstract For Bayesian optimization (BO) on high-dimensional data with complex structure, neural network-based kernels for Gaussian processes (GPs) have been used to learn flexible surrogate functions by the high representation power of deep learning. However, existing methods train neural networks by maximizing the marginal likelihood, which do not directly improve the BO performance. In this paper, we propose a meta-learning method for BO with neural network-based kernels that minimizes the expected gap between the true optimum value and the best value found by BO. We model a policy, which takes the current evaluated data points as input and outputs the next data point to be evaluated, by a neural network, where neural network-based kernels, GPs, and mutual information-based acquisition functions are used as its layers. With our model, the neural network-based kernel is trained to be appropriate for the acquisition function by backpropagating the gap through the acquisition function and GP. Our model is trained by a reinforcement learning framework from multiple tasks. Since the neural network is shared across different tasks, we can gather knowledge on BO from multiple training tasks, and use the knowledge for unseen test tasks. In experiments using three text document datasets, we demonstrate that the proposed method achieves better BO performance than the existing methods.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Automated learning of decision rules for text categorization\",\n        \"Using confidence bounds for exploitation-exploration trade-offs\",\n        \"Learning a synaptic learning rule\",\n        \"Hyperopt: A Python library for optimizing the hyperparameters of machine learning algorithms\",\n        \"No-regret Bayesian optimization with unknown hyperparameters\",\n        \"Multi-task Gaussian process prediction\",\n        \"A tutorial on Bayesian optimization of expensive cost functions, with application to active user modeling and hierarchical reinforcement learning\",\n        \"Manifold Gaussian processes for regression\",\n        \"Gaussian process optimization with mutual information\",\n        \"Learning to extract symbolic knowledge from the world wide web\",\n        \"Learning where to attend with deep architectures for image tracking\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"Meta-learning mean functions for Gaussian processes\",\n        \"Bayesian optimization for recommender system\",\n        \"Conditional neural processes\",\n        \"Preferential bayesian optimization\",\n        \"Variance reduction techniques for gradient estimates in reinforcement learning\",\n        \"Constrained Bayesian optimization for automatic chemical design\",\n        \"A survey of actor-critic reinforcement learning: Standard and natural policy gradients\",\n        \"Meta-learning priors for efficient online Bayesian regression\",\n        \"Scalable Gaussian process regression using deep neural networks\",\n        \"Efficient transfer bayesian optimization with auxiliary information\",\n        \"Few-shot learning for spatial regression\",\n        \"A taxonomy of global optimization methods based on response surfaces\",\n        \"Adam: A method for stochastic optimization\",\n        \"Fast Bayesian optimization of machine learning hyperparameters on large datasets\",\n        \"Auto-WEKA 2.0: Automatic model selection and hyperparameter optimization in WEKA\",\n        \"Episodic training for domain generalization\",\n        \"The application of Bayesian methods for seeking the extremum\",\n        \"Automatic differentiation in PyTorch\",\n        \"Bayesian meta-learning for the few-shot setting via deep kernels\",\n        \"Boa: The Bayesian optimization algorithm\",\n        \"Bayesian optimization for probabilistic programs\",\n        \"Gaussian processes for machine learning\",\n        \"Optimization as a model for few-shot learning\",\n        \"Meta-learning with memory-augmented neural networks\",\n        \"Evolutionary principles in self-referential learning. on learning now to learn: The meta-meta-metaâ€¦-hook\",\n        \"Prediction of low-thermal-conductivity compounds with first-principles anharmonic lattice-dynamics calculations and Bayesian optimization\",\n        \"Taking the human out of the loop: A review of Bayesian optimization\",\n        \"Prototypical networks for few-shot learning\",\n        \"Practical Bayesian optimization of machine learning algorithms\",\n        \"Gaussian process optimization in the bandit setting: No regret and experimental design\",\n        \"Policy gradient methods for reinforcement learning with function approximation\",\n        \"Auto-WEKA: Combined selection and hyperparameter optimization of classification algorithms\",\n        \"Adaptive deep kernel learning\",\n        \"COMBO: An efficient Bayesian optimization library for materials science\",\n        \"Matching networks for one shot learning\",\n        \"Meta-learning for black-box optimization\",\n        \"Meta-learning acquisition functions for transfer learning in bayesian optimization\",\n        \"Bayesian optimization in a billion dimensions via random embeddings\",\n        \"The optimal reward baseline for gradient-based reinforcement learning\",\n        \"Source-target similarity modelings for multi-source transfer Gaussian process regression\",\n        \"Deep kernel learning\",\n        \"Stochastic variational deep kernel learning\",\n        \"Gaussian process regression networks\",\n        \"Learning Gaussian processes from multiple tasks\",\n        \"Deep sets\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in End-to-End Learning of Deep Kernel Acquisition Functions for Bayesian Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}