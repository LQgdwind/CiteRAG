{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast-OverlaPIM: A Fast Overlap-driven Mapping Framework for Processing In-Memory Neural Network Acceleration\n\nPaper Abstract: Abstract Processing in-memory (PIM) is promising to accelerate neural networks (NNs) because it minimizes data movement and provides large computational parallelism. Similar to machine learning accelerators, application mapping, which determines the operation scheduling and data layout, plays a critical role in the NN acceleration on PIM. The mapping optimization of previous NN accelerators focused on optimizing the latency of sequential execution. However, PIM accelerators feature a distinct design space of application mapping from conventional NN accelerators, due to the spatial execution of NN layers across different memory locations. This enables opportunities for overlapping execution of consecutive NN layers to improve the latency, where the succeeding layer can start execution before the preceding layer fully completes the computation. In this paper, we propose Fast-OverlaPIM framework that incorporates the computational overlapping optimization into the DNN mapping exploration process on PIM architectures. Fast-OverlaPIM includes analytical algorithms for fast and accurate overlap analysis. Furthermore, it proposes a novel mapping search strategy and a transformation mechanism to enable efficient design space exploration on the overlap-based mapping for the whole network. Our framework demonstrates a significant improvement in runtime performance from 3.4×\\times to 323.1×\\times compared to the previous state-of-the-art overlap-based framework. Our experiments show that Fast-OverlaPIM can efficiently produce mappings that are 4.6×\\times to 18.1×\\times faster than the state-of-the-art mapping optimization framework under the same architecture constraints.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Touch and go: Learning from human-collected vision and touch\",\n        \"Recent advances in video-based human action recognition using deep learning: A review\",\n        \"Rbc: Rectifying the biased context in continual semantic segmentation\",\n        \"Rf sensing in the internet of things: A general deep learning framework\",\n        \"A survey of machine and deep learning methods for internet of things (iot) security\",\n        \"A robotic auto-focus system based on deep reinforcement learning\",\n        \"A survey of the usages of deep learning for natural language processing\",\n        \"Multi-task deep neural networks for natural language understanding\",\n        \"Deep residual learning for image recognition\",\n        \"Floatpim: In-memory acceleration of deep neural network training with high precision\",\n        \"Gram: graph processing in a reram-based computational memory\",\n        \"Transpim: A memory-based acceleration via software-hardware co-design for transformer\",\n        \"Felix: A ferroelectric fet based low power mixed-signal in-memory architecture for dnn acceleration\",\n        \"Processing-in-memory accelerator for dynamic neural network with run-time tuning of accuracy, power and latency\",\n        \"Accelerating deep neural networks in processing-in-memory platforms: Analog or digital approach?\",\n        \"Timeloop: A systematic approach to dnn accelerator evaluation\",\n        \"Pim-dl: Boosting dnn inference on digital processing in-memory architectures via data layout optimizations\",\n        \"Sparseloop: An analytical approach to sparse tensor accelerator modeling\",\n        \"Eyeriss: A spatial architecture for energy-efficient dataflow for convolutional neural networks\",\n        \"Understanding reuse, performance, and hardware cost of dnn dataflow: A data-centric approach\",\n        \"Interstellar: Using halide’s scheduling language to analyze dnn accelerators\",\n        \"Ruby: Improving hardware efficiency for tensor algebra accelerators through imperfect factorization\",\n        \"Cosa: Scheduling by constrained optimization for spatial accelerators\",\n        \"Dnn-chip predictor: An analytical performance predictor for dnn accelerators with various dataflows and hardware architectures\",\n        \"Puma: A programmable ultra-efficient memristor-based accelerator for machine learning inference\",\n        \"Prime: A novel processing-in-memory architecture for neural network computation in reram-based main memory\",\n        \"Design considerations for efficient deep neural networks on processing-in-memory accelerators\",\n        \"Z-pim: A sparsity-aware processing-in-memory architecture with fully variable weight bit-precision for energy-efficient deep neural networks\",\n        \"Overlapim: Overlap optimization for processing in-memory neural network acceleration\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"A 28-nm compute sram with bit-serial logic/arithmetic operations for programmable in-memory vector computing\",\n        \"Drisa: A dram-based reconfigurable in-situ accelerator\",\n        \"Simdram: An end-to-end framework for bit-serial simd computing in dram\",\n        \"Computedram: In-memory compute using off-the-shelf drams\",\n        \"In-memory low-cost bit-serial addition using commodity dram technology\",\n        \"Dp-sim: A full-stack simulation infrastructure for digital processing in-memory architectures\",\n        \"Memristive logic-in-memory integrated circuits for energy-efficient flexible electronics\",\n        \"Computing-in-memory architecture using energy-efficient multilevel voltage-controlled spin-orbit torque device\",\n        \"Ambit: In-memory accelerator for bulk bitwise operations using commodity dram technology\",\n        \"In-dram bulk bitwise execution engine\",\n        \"A 20nm 6gb function-in-memory dram, based on hbm2 with a 1.2 tflops programmable computing unit using bank-level parallelism, for machine learning applications\",\n        \"Processing-in-memory technology for machine learning: From basic to asic\",\n        \"Mnsim 2.0: A behavior-level modeling tool for processing-in-memory architectures\",\n        \"Fine-grained dram: Energy-efficient dram for extreme bandwidth systems\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Fast-OverlaPIM: A Fast Overlap-driven Mapping Framework for Processing In-Memory Neural Network Acceleration, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}