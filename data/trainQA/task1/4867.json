{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Querying Labelled Data with Scenario Programs for Sim-to-Real Validation\n\nPaper Abstract: Abstract. Simulation-based testing of autonomous vehicles (AVs) has become an essential complement to road testing to ensure safety. Consequently, substantial research has focused on searching for failure scenarios in simulation. However, a fundamental question remains: are AV failure scenarios identified in simulation meaningful in reality â€” i.e., are they reproducible on the real system? Due to the sim-to-real gap arising from discrepancies between simulated and real sensor data, a failure scenario identified in simulation can be either a spurious artifact of the synthetic sensor data or an actual failure that persists with real sensor data. An approach to validate simulated failure scenarios is to identify instances of the scenario in a corpus of real data, and check if the failure persists on the real data. To this end, we propose a formal definition of what it means for a labelled data item to match an abstract scenario, encoded as a scenario program using the Scenic probabilistic programming language. Using this definition, we develop a querying algorithm which, given a scenario program and a labelled dataset, finds the subset of data matching the scenario. Experiments demonstrate that our algorithm is accurate and efficient on a variety of realistic traffic scenarios, and scales to a reasonable number of agents.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Automated driving systems\",\n        \"Waymo simulated real-world crashes to prove its self-driving cars can prevent deaths\",\n        \"CARLA: An open urban driving simulator\",\n        \"Lgsvl simulator: A high fidelity simulator for autonomous driving\",\n        \"Airsim: High-fidelity visual and physical simulation for autonomous vehicles\",\n        \"Lidarsim: Realistic lidar simulation by leveraging the real world\",\n        \"Highly scalable radar target simulator for autonomous driving test beds\",\n        \"Automated generation of diverse and challenging scenarios for test and evaluation of autonomous vehicles\",\n        \"Adaptive stress testing for autonomous vehicles\",\n        \"Scalable end-to-end autonomous vehicle testing via rare-event simulation\",\n        \"Simulation-based adversarial test generation for autonomous vehicles with machine learning components\",\n        \"Verifai: A toolkit for the formal design and analysis of artificial intelligence-based systems\",\n        \"A programmatic and semantic approach to explaining and debugging neural network based object detectors\",\n        \"Driving in the matrix: Can virtual worlds replace human-generated annotations for real world tasks?\",\n        \"Virtual to real reinforcement learning for autonomous driving\",\n        \"Multi-source domain adaptation for semantic segmentation\",\n        \"Image to image translation for domain adaptation\",\n        \"bdd100k: A diverse driving dataset for heterogeneous multitask learning\",\n        \"Object scene flow for autonomous vehicles\",\n        \"The apolloscape open dataset for autonomous driving and its application\",\n        \"Scalability in perception for autonomous driving: Waymo open dataset\",\n        \"nuscenes: A multimodal dataset for autonomous driving\",\n        \"Argoverse: 3d tracking and forecasting with rich maps\",\n        \"Scenic: a language for scenario specification and scene generation\",\n        \"Satisfiability modulo theories\",\n        \"Scenic: A language for scenario specification and data generation\",\n        \"Conflict-driven clause learning SAT solvers\",\n        \"Some undecidable problems involving elementary functions of a real variable\",\n        \"dreal: an smt solver for nonlinear theories over the reals\",\n        \"Formal scenario-based testing of autonomous vehicles: From simulation to the real world\",\n        \"Deep visual domain adaptation: A survey\",\n        \"Generative adversarial networks: An overview\",\n        \"Making the V in VQA matter: Elevating the role of image understanding in visual question answering\",\n        \"Ask, attend and answer: Exploring question-guided spatial attention for visual question answering\",\n        \"A new approach to probabilistic programming inference\",\n        \"Pyro: Deep universal probabilistic programming\",\n        \"Deep probabilistic programming\",\n        \"The no-u-turn sampler: adaptively setting path lengths in hamiltonian monte carlo\",\n        \"Automated variational inference in probabilistic programming\",\n        \"Automatic variational inference in stan\",\n        \"Automatic differentiation variational inference\",\n        \"R2: an efficient MCMC sampler for probabilistic programs\",\n        \"Discontinuous hamiltonian monte carlo for probabilistic programs\",\n        \"Dice: Compiling discrete probabilistic programs for scalable inference\",\n        \"mapbox-earcut python package\",\n        \"Ray tracing: Rendering a triangle\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Querying Labelled Data with Scenario Programs for Sim-to-Real Validation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}