{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Features for the 0-1 knapsack problem based on inclusionwise maximal solutions\n\nPaper Abstract: Abstract Decades of research on the 0-1 knapsack problem led to very efficient algorithms that are able to quickly solve large problem instances to optimality. This prompted researchers to also investigate whether relatively small problem instances exist that are hard for existing solvers and investigate which features characterize their hardness. Previously the authors proposed a new class of hard 0-1 knapsack problem instances and demonstrated that the properties of so-called inclusionwise maximal solutions (IMSs) can be important hardness indicators for this class. In the current paper, we formulate several new computationally challenging problems related to the IMSs of arbitrary 0-1 knapsack problem instances. Based on generalizations of previous work and new structural results about IMSs, we formulate polynomial and pseudopolynomial time algorithms for solving these problems. From this we derive a set of 14 computationally expensive features, which we calculate for two large datasets on a supercomputer in approximately 540 CPU-hours. We show that the proposed features contain important information related to the empirical hardness of a problem instance that was missing in earlier features from the literature by training machine learning models that can accurately predict the empirical hardness of a wide variety of 0-1 knapsack problem instances. Using the instance space analysis methodology, we also show that hard 0-1 knapsack problem instances are clustered together around a relatively dense region of the instance space and several features behave differently in the easy and hard parts of the instance space.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Rigorous location of phase transitions in hard optimization problems\",\n        \"Unbounded knapsack problem: Dynamic programming revisited\",\n        \"An empirical analysis of exact algorithms for the unbounded knapsack problem\",\n        \"Dynamic programming\",\n        \"The travelling thief problem: The first step in the transition from theoretical problems to realistic problems\",\n        \"A near-linear pseudopolynomial time algorithm for subset sum\",\n        \"Knapsack problems – an overview of recent advances. Part I: Single knapsack problems\",\n        \"Where the really hard problems are\",\n        \"XGBoost: A scalable tree boosting system\",\n        \"Hard knapsack problems\",\n        \"A new combinatorial branch-and-bound algorithm for the knapsack problem with conflicts\",\n        \"Introduction to algorithms\",\n        \"Discrete-variable extremum problems\",\n        \"The multidimensional 0–1 knapsack problem: An overview\",\n        \"The TSP phase transition\",\n        \"Fast exact k-means, k-medians and bregman divergence clustering in 1d\",\n        \"Lifted cover inequalities for 0-1 integer programs: Complexity\",\n        \"Performance prediction and preselection for optimization and heuristic solution procedures\",\n        \"A k-means clustering algorithm\",\n        \"Phase transitions in combinatorial optimization problems: basics, algorithms and statistical mechanics\",\n        \"Tradeoffs in the empirical evaluation of competing algorithm designs\",\n        \"Sequential model-based optimization for general algorithm configuration\",\n        \"Identifying key algorithm parameters and instance features using forward selection\",\n        \"Algorithm runtime prediction: Methods & evaluation\",\n        \"A new class of hard problem instances for the 0–1 knapsack problem\",\n        \"Yet harder knapsack problems\",\n        \"Knapsack problems\",\n        \"Automated algorithm selection: Survey and perspectives\",\n        \"Faster pseudopolynomial time algorithms for subset sum\",\n        \"Dynamic programming and strong bounds for the 0-1 knapsack problem\",\n        \"An upper bound for the zero-one knapsack problem and a branch and bound algorithm\",\n        \"A new algorithm for the 0-1 knapsack problem\",\n        \"Knapsack problems: algorithms and computer implementations\",\n        \"Hard and easy distributions of SAT problems\",\n        \"Instance spaces for machine learning classification\",\n        \"The knapsack problem with conflict graphs\",\n        \"An expanding-core algorithm for the exact 0–1 knapsack problem\",\n        \"A minimal algorithm for the 0-1 knapsack problem\",\n        \"Linear time algorithms for knapsack problems with bounded weights\",\n        \"A minimal algorithm for the bounded knapsack problem\",\n        \"Where are the hard knapsack problems?\",\n        \"The algorithm selection problem\",\n        \"MATILDA: Melbourne Algorithm Test Instance Library with Data Analytics\",\n        \"Towards objective measures of algorithm performance across instance space\",\n        \"Generating new test instances by evolving in instance space\",\n        \"Revisiting where are the hard knapsack problems? via Instance Space Analysis\",\n        \"Understanding TSP difficulty by learning from evolved instances\",\n        \"Measuring instance difficulty for combinatorial optimization problems\",\n        \"Computational study of a column generation algorithm for bin packing and cutting stock problems\",\n        \"Ckmeans. 1d. dp: optimal k-means clustering in one dimension by dynamic programming\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Features for the 0-1 knapsack problem based on inclusionwise maximal solutions, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}