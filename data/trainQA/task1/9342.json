{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 42 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Preference Ranking Optimization for Human Alignment\n\nPaper Abstract: Abstract Large language models (LLMs) often contain misleading content, emphasizing the need to align them with human values to ensure secur AI systems. Reinforcement learning from human feedback (RLHF) has been employed to achieve this alignment by combining a reward model, typically based on Bradley-Terry paired comparison, with an RL algorithm such as Proximal Policy Optimization (PPO) to optimize LLM responses. However, RLHF exhibits complexity, instability, and sensitivity to hyperparameters. In this paper, we propose Preference Ranking Optimization (PRO) as an alternative to PPO for directly aligning LLMs with the Bradley-Terry comparison. PRO extends the pairwise Bradley-Terry comparison to accommodate preference rankings of any length. By iteratively contrasting the likelihood of generating responses, PRO instructs the LLM to prioritize the best response while progressively ranking the remaining responses. In this manner, PRO effectively transforms human alignment into aligning the probability ranking of nùëõn responses generated by LLM with the preference ranking of humans towards these responses. Experiments have shown that PRO outperforms existing alignment algorithms, achieving comparable results to ChatGPT and human responses through automatic-based, reward-based, GPT-4, and human evaluations. Furthermore, we demonstrate that longer, more diverse, and higher-quality preference ranking sequences can consistently enhance the performance of human alignment111The code of this work is available at https://github.com/AlibabaResearch/DAMO-ConvAI/tree/main/PRO.\n\n{retrieved_text}\n\nGenerate exactly 42 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 42\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Rl4f: Generating natural language feedback with reinforcement learning for repairing model outputs\",\n        \"Training a helpful and harmless assistant with reinforcement learning from human feedback\",\n        \"Constitutional ai: Harmlessness from ai feedback\",\n        \"Rank analysis of incomplete block designs: I. the method of paired comparisons\",\n        \"Language models are few-shot learners\",\n        \"Sparks of artificial general intelligence: Early experiments with gpt-4\",\n        \"Palm: Scaling language modeling with pathways\",\n        \"Deep reinforcement learning from human preferences\",\n        \"GLM: General language model pretraining with autoregressive blank infilling\",\n        \"Scaling laws for reward model overoptimization\",\n        \"Reward design with language models\",\n        \"The bigscience roots corpus: A 1.6 tb composite multilingual dataset\",\n        \"Pebble: Feedback-efficient interactive reinforcement learning via relabeling experience and unsupervised pre-training\",\n        \"Interacting with non-cooperative user: A new paradigm for proactive dialogue policy\",\n        \"Api-bank: A benchmark for tool-augmented llms\",\n        \"Chain of hindsight aligns language models with feedback\",\n        \"Interactive learning from policy-dependent human feedback\",\n        \"Scaling data-constrained language models\",\n        \"Webgpt: Browser-assisted question-answering with human feedback\",\n        \"Representation learning with contrastive predictive coding\",\n        \"Gpt-4 technical report\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Instruction tuning with gpt-4\",\n        \"Direct preference optimization: Your language model is secretly a reward model\",\n        \"Proximal policy optimization algorithms\",\n        \"Offline rl for natural language generation with implicit language q learning\",\n        \"Improved deep metric learning with multi-class n-pair loss objective\",\n        \"Learning to summarize with human feedback\",\n        \"Stanford alpaca: An instruction-following llama model\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Large language models are not fair evaluators\",\n        \"Self-instruct: Aligning language model with self generated instructions\",\n        \"Deep tamer: Interactive agent shaping in high-dimensional state spaces\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Fine-grained human feedback gives better rewards for language model training\",\n        \"Reinforcement learning from diverse human preferences\",\n        \"Rrhf: Rank responses to align language models with human feedback without tears\",\n        \"The wisdom of hindsight makes language models better instruction followers\",\n        \"Judging llm-as-a-judge with mt-bench and chatbot arena\",\n        \"Lima: Less is more for alignment\",\n        \"Fine-tuning language models from human preferences\"\n    ],\n    \"reasoning\": \"Selected these 42 references because they represent foundational work and recent advances in Preference Ranking Optimization for Human Alignment, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}