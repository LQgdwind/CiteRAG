{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Lifted Algorithms for Symmetric Weighted First-Order Model Sampling\n\nPaper Abstract: Abstract Weighted model counting (WMC) is the task of computing the weighted sum of all satisfying assignments (i.e., models) of a propositional formula. Similarly, weighted model sampling (WMS) aims to randomly generate models with probability proportional to their respective weights. Both WMC and WMS are hard to solve exactly, falling under the #¶-hard complexity class. However, it is known that the counting problem may sometimes be tractable, if the propositional formula can be compactly represented and expressed in first-order logic. In such cases, model counting problems can be solved in time polynomial in the domain size, and are known as domain-liftable. The following question then arises: Is it also the case for weighted model sampling? This paper addresses this question and answers it affirmatively. Specifically, we prove the domain-liftability under sampling for the two-variables fragment of first-order logic with counting quantifiers in this paper, by devising an efficient sampling algorithm for this fragment that runs in time polynomial in the domain size. We then further show that this result continues to hold even in the presence of cardinality constraints. To empirically verify our approach, we conduct experiments over various first-order formulas designed for the uniform generation of combinatorial structures and sampling in statistical-relational models. The results demonstrate that our algorithm outperforms a start-of-the-art WMS sampler by a substantial margin, confirming the theoretical results.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Symmetric weighted first-order model counting\",\n        \"A scalable and nearly uniform generator of sat witnesses\",\n        \"On parallel scalable uniform sat witness generation\",\n        \"From weighted to unweighted model counting\",\n        \"On probabilistic inference by weighted model counting\",\n        \"Sampling regular graphs and a peer-to-peer network\",\n        \"Lifted first-order probabilistic inference\",\n        \"Probabilistic planning via heuristic forward search and weighted model counting\",\n        \"On counting independent sets in sparse graphs\",\n        \"On the evolution of random graphs\",\n        \"Sampling constraint satisfaction solutions in the local lemma regime\",\n        \"Uniform generation of random regular graphs\",\n        \"Probabilistic theorem proving\",\n        \"Model counting\",\n        \"On the decision problem for two-variable first-order logic\",\n        \"Two-variable logic with counting is decidable\",\n        \"Uniform sampling through the lovász local lemma\",\n        \"Perfect sampling for (atomic) lov\\\\backslash'asz local lemma\",\n        \"Lower complexity bounds for lifted inference\",\n        \"Random generation of combinatorial structures from a uniform distribution\",\n        \"New liftable classes for first-order probabilistic inference\",\n        \"Domain recursion for lifted inference with existential quantifiers\",\n        \"Weighted model counting beyond two-variable logic\",\n        \"Weighted first-order model counting in the two-variable fragment with counting quantifiers\",\n        \"The kolmogorov-smirnov test for goodness of fit\",\n        \"On the tight constant in the multivariate dvoretzky–kiefer–wolfowitz inequality\",\n        \"First-order probabilistic inference\",\n        \"Problog: A probabilistic prolog and its application in link discovery\",\n        \"Markov logic networks\",\n        \"Solving bayesian networks by weighted model counting\",\n        \"A decision method for validity of sentences in two variables\",\n        \"Tinted, detached, and lazy cnf-xor solving and its applications to counting and sampling\",\n        \"Lifted variable elimination: Decoupling the operators from the constraint language\",\n        \"Lifted inference with linear order axiom\",\n        \"The complexity of enumeration and reliability problems\",\n        \"The complexity of computing the permanent\",\n        \"Lifted inference with tree axioms\",\n        \"Symmetric component caching for model counting on combinatorial instances\",\n        \"On the completeness of first-order knowledge compilation for lifted probabilistic inference\",\n        \"On the complexity and approximation of binary evidence in lifted inference\",\n        \"Conditioning in first-order knowledge compilation and lifted probabilistic inference\",\n        \"Lifted probabilistic inference by first-order knowledge compilation\",\n        \"Skolemization for weighted first-order model counting\",\n        \"An Introduction to Lifted Probabilistic Inference\",\n        \"Lifted generative learning of markov logic networks\",\n        \"Domain-lifted sampling for universal two-variable logic and extensions\",\n        \"On exact sampling in the two-variable fragment of first-order logic\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Lifted Algorithms for Symmetric Weighted First-Order Model Sampling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}