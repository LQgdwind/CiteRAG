{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Search For Deep Graph Neural Networks\n\nPaper Abstract: Abstract Current GNN oriented NAS methods focus on the search for different layer aggregate components with shallow and simple architectures, which are limited by the “over-smooth” problem. To further explore the benefits from structural diversity and depth of GNN architectures, we propose a GNN generation pipeline with a novel two-stage search space, which aims at automatically generating high-performance while transferable deep GNN models in a block-wise manner. Meanwhile, to alleviate the “over-smooth” problem, we incorporate multiple flexible residual connection in our search space and apply identity mapping in the basic GNN layers. For the search algorithm, we use deep-q-learning with epsilon-greedy exploration strategy and reward reshaping. Extensive experiments on real-world datasets show that our generated GNN models outperforms existing manually designed and NAS-based ones.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Residual algorithms: Reinforcement learning with function approximation\",\n        \"Designing neural network architectures using reinforcement learning\",\n        \"Interaction networks for learning about objects, relations and physics\",\n        \"Graph neural networks with convolutional ARMA filters\",\n        \"Measuring and relieving the over-smoothing problem for graph neural networks from the topological view\",\n        \"Simple and deep graph convolutional networks\",\n        \"Graph neural architecture search\",\n        \"A new model for learning in graph domains\",\n        \"Inductive representation learning on large graphs\",\n        \"Deep residual learning for image recognition\",\n        \"Hierarchical graph convolutional networks for semi-supervised node classification\",\n        \"Learning graphical state transitions\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Deepgcns: Can gcns go as deep as cnns?\",\n        \"Reinforcement Learning for Robots Using Neural Networks\",\n        \"Progressive neural architecture search\",\n        \"DARTS: differentiable architecture search\",\n        \"Jointly multiple events extraction via attention-based graph information aggregation\",\n        \"SGDR: stochastic gradient descent with warm restarts\",\n        \"Break the ceiling: Stronger multi-scale deep graph convolutional networks\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Geometric matrix completion with recurrent multi-graph neural networks\",\n        \"XNAS: neural architecture search with expert advice\",\n        \"Policy invariance under reward transformations: Theory and application to reward shaping\",\n        \"Geom-gcn: Geometric graph convolutional networks\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"SIGN: scalable inception graph neural networks\",\n        \"Graph networks as learnable physics engines for inference and control\",\n        \"Combinations of genetic algorithms and neural networks: a survey of the state of the art\",\n        \"Physics-aware difference graph networks for sparsely-observed dynamics\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"A hypercube-based encoding for evolving large-scale neural networks\",\n        \"Evolving neural networks through augmenting topologies\",\n        \"A genetic programming approach to designing convolutional neural network architectures\",\n        \"Going deeper with convolutions\",\n        \"Graph attention networks\",\n        \"How powerful are graph neural networks?\",\n        \"Representation learning on graphs with jumping knowledge networks\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Conversation modeling on reddit using a graph-structured LSTM\",\n        \"Simplifying architecture search for graph neural network\",\n        \"Practical block-wise neural network architecture generation\",\n        \"Understanding and resolving performance degradation in graph convolutional networks\",\n        \"Auto-gnn: Neural architecture search of graph neural networks\",\n        \"Neural architecture search with reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Search For Deep Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}