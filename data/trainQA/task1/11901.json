{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Completeness of FSM Test Suites Reconsidered\n\nPaper Abstract: Abstract A fault domain that has been widely studied in black-box conformance testing is the class of finite state machines (FSMs) with at most kùëòk extra states. Numerous methods for generating test suites have been proposed that guarantee fault coverage for this class. These test suites grow exponentially in kùëòk, so one can only run them for small kùëòk. But the assumption that kùëòk is small is not realistic in practice. As a result, completeness for this fault domain has limited practical significance. As an alternative, we propose (much larger) fault domains that capture the assumption that when bugs in an implementation introduce extra states, these states can be reached via a few (at most kùëòk) transitions from states reachable via a set Aùê¥A of common scenarios. Preliminary evidence suggests these fault domains, which contain FSMs with an exponential number of extra states (in kùëòk), are of practical use for testing network protocols. We present a sufficient condition for kùëòk-Aùê¥A-completeness of test suites with respect to these fault domains, phrased entirely in terms of properties of their testing tree. Our condition implies kùëòk-Aùê¥A-completeness of two prominent test suite generation algorithms, the Wp and HSI methods. Counterexamples show that three other approaches, the H, SPY and SPYH methods, do not always generate kùëòk-Aùê¥A-complete test suites.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning regular sets from queries and counterexamples\",\n        \"n-Complete test suites for IOCO\",\n        \"An improved protocol test generation procedure based on UIOs\",\n        \"Testing software design modeled by finite-state machines\",\n        \"FSM-based conformance testing methods: A survey annotated with experimental evaluation\",\n        \"An improved conformance testing method\",\n        \"On the minimum eccentricity shortest path problem\",\n        \"Automata-based automated detection of state machine bugs in protocol implementations\",\n        \"Smbugfinder: An automated framework for testing protocol implementations for state machine bugs\",\n        \"Learning-based testing the sliding window behavior of TCP implementations\",\n        \"Combining model learning and model checking to analyze TCP implementations\",\n        \"Analysis of DTLS implementations using protocol state fuzzing\",\n        \"Model learning and model checking of SSH implementations\",\n        \"Test selection based on finite state models\",\n        \"Model independent refusal trace testing\",\n        \"Relating apartness and bisimulation\",\n        \"Fault detecting experiments for sequential circuits\",\n        \"Active automata learning in practice\",\n        \"Experimental evaluation of a novel equivalence class partition testing strategy\",\n        \"Fingerprinting TLS Implementations using Model Learning\",\n        \"Small test suites for active automata learning\",\n        \"Testing finite-state machines: State identification and verification\",\n        \"Principles and methods of testing finite state machines ‚Äî a survey\",\n        \"Selecting test sequences for partially-specified nondeterministic finite state machines\",\n        \"Active Mealy Machine Learning using Action Refinements\",\n        \"Sufficient Conditions for kùëòk-Completeness Using Observation Trees and Apartness\",\n        \"Nominal Techniques and Black Box Testing for Automata Learning\",\n        \"Gedanken-experiments on sequential machines\",\n        \"Benchmarks for automata learning and conformance testing\",\n        \"Concurrency and automata on infinite sequences\",\n        \"Black box checking\",\n        \"Handling redundant and additional states in protocol testing\",\n        \"Conformance tests as checking experiments for partial nondeterministic FSM\",\n        \"Nondeterministic state machines in protocol conformance testing\",\n        \"Unifying frameworks for complete test strategies\",\n        \"Generating reduced tests for FSMs with extra states\",\n        \"On reducing test length for FSMs with extra states\",\n        \"Applying automata learning to embedded control software\",\n        \"SPYH-method: An improvement in testing of finite-state machines\",\n        \"Basic Proof Theory\",\n        \"Model learning\",\n        \"A new perspective on conformance testing based on apartness\",\n        \"A new approach for active automata learning based on apartness\",\n        \"Failure diagnosis of automata\",\n        \"Improving model inference in industry by combining active and passive learning\",\n        \"Synthesis of test experiments in some classes of automata\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Completeness of FSM Test Suites Reconsidered, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}