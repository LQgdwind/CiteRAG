{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Fine-Grained Complexity of Gradient Computation for Training Large Language Models\n\nPaper Abstract: Large language models (LLMs) have made fundamental contributions over the last a few years. To train an LLM, one needs to alternatingly run ‚Äòforward‚Äô computations and ‚Äòbackward‚Äô computations. The forward computation can be viewed as attention function evaluation, and the backward computation can be viewed as a gradient computation. In previous work by [Alman and Song, NeurIPS 2023], it was proved that the forward step can be performed in almost-linear time in certain parameter regimes, but that there is no truly sub-quadratic time algorithm in the remaining parameter regimes unless the popular hypothesis ùñ≤ùñ§ùñ≥ùñßùñ≤ùñ§ùñ≥ùñß\\operatorname{\\mathsf{SETH}} is false. In this work, we show nearly identical results for the harder-seeming problem of computing the gradient of loss function of one layer attention network, and thus for the entire process of LLM training. This completely characterizes the fine-grained complexity of every step of LLM training.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optimal-degree polynomial approximations for exponentials and gaussian kernel density estimation\",\n        \"Algorithms and hardness for linear algebra on geometric graphs\",\n        \"Bypass exponential time preprocessing: Fast neural network training via weight-data correlation preprocessing\",\n        \"Fast attention requires bounded entries\",\n        \"How to capture higher-order correlations? generalizing matrix softmax attention to kronecker computation\",\n        \"Algebraic complexity theory, volume 315\",\n        \"On the fine-grained complexity of empirical risk minimization: Kernel methods and neural networks\",\n        \"Fast matrix multiplication\",\n        \"Language models are few-shot learners\",\n        \"Training (over- parametrized) neural networks in near-linear time\",\n        \"Algorithm and hardness for dynamic attention maintenance in large language models\",\n        \"Kernel density estimation through density constrained near neighbor search\",\n        \"A learnable lsh framework for efficient neural network training\",\n        \"Palm: Scaling language modeling with pathways\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Solving tensor low cycle rank approximation\",\n        \"Training overparametrized neural networks in sublinear time\",\n        \"Optimal sketching for kronecker product regression and low rank approximation\",\n        \"Zero-th order algorithm for softmax attention optimization\",\n        \"Randomized and deterministic attention sparsification algorithms for over-parameterized feature dimension\",\n        \"Sketching for kronecker product regression and p-splines\",\n        \"Faster robust tensor power method for arbitrary order\",\n        \"A sublinear adversarial training algorithm\",\n        \"A fast optimization view: Reformulating single layer attention in llm based on tensor and svm trick, and solving it in matrix multiplication time\",\n        \"In-context learning for attention scheme: from single softmax regression to multiple softmax regression via a tensor trick\",\n        \"Differentially private attention computation\",\n        \"Gradientcoin: A peer-to-peer decentralized large language models\",\n        \"Fast quantum algorithm for attention computation\",\n        \"Hyperattention: Long-context attention in near-linear time\",\n        \"Adobe firefly\",\n        \"On the complexity of k-sat\",\n        \"Reformer: The efficient transformer\",\n        \"Polysketchformer: Fast transformers via sketches for polynomial kernels\",\n        \"On the computational complexity of self-attention\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"An overview of bard: an early experiment with generative ai\",\n        \"Fine-tuning language models with just forward passes\",\n        \"Trainable transformer in transformer\",\n        \"Dynamic tensor product regression\",\n        \"Hardness of approximate nearest neighbor search\",\n        \"Relative error tensor low rank approximation\",\n        \"Does preprocessing help training over-parameterized neural networks?\",\n        \"Training multi-layer over-parametrized neural network in subquadratic time\",\n        \"Lamda: Language models for dialog applications\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Attention is all you need\",\n        \"On some fine-grained questions in algorithms and complexity\",\n        \"Emergent abilities of large language models\",\n        \"Wordcraft: story writing with large language models\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Speeding up optimizations via data structures: Faster search, sample and maintenance\",\n        \"Kdeformer: Accelerating transformers via kernel density estimation\",\n        \"Opt: Open pre-trained transformer language models\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in The Fine-Grained Complexity of Gradient Computation for Training Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}