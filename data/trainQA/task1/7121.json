{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 Pipeline: initially, the preprocessed batch X is encoded with a feature propagation block (Eq. ()), resulting in the initial representations H₀. These representations are then updated with a sequence of EGG-GAE blocks obtaining Hₖ, k∈{1,…,K}. The concatenation of {Hₖ}ₖ₌₁ᴷ gives the final representation Hₒᵤₜ. It is used as the input for the subsequent heads: numerical imputation, categorical imputation, and downstream task one.\n\nPaper Abstract: Abstract Missing data imputation (MDI) is crucial when dealing with tabular datasets across various domains. Autoencoders can be trained to reconstruct missing values, and graph autoencoders (GAE) can additionally consider similar patterns in the dataset when imputing new values for a given instance. However, previously proposed GAEs suffer from scalability issues, requiring the user to define a similarity metric among patterns to build the graph connectivity beforehand. In this paper, we leverage recent progress in latent graph imputation to propose a novel EdGe Generation Graph AutoEncoder (EGG-GAE) for missing data imputation that overcomes these two drawbacks. EGG-GAE works on randomly sampled mini-batches of the input data (hence scaling to larger datasets), and it automatically infers the best connectivity across the mini-batch for each architecture layer. We also experiment with several extensions, including an ensemble strategy for inference and the inclusion of what we call prototype nodes, obtaining significant improvements, both in terms of imputation error and final downstream accuracy, across multiple benchmarks and baselines.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The treatment of missing values and its effect on classifier accuracy\",\n        \"Multiple imputation by chained equations: what is it and how does it work\",\n        \"Recurrent neural networks for missing or asynchronous data\",\n        \"From predictive methods to missing data imputation: an optimization approach\",\n        \"Graph neural networks with convolutional arma filters\",\n        \"Random forests\",\n        \"Learning on attribute-missing graphs\",\n        \"Minimal variance sampling with provable guarantees for fast training of graph neural networks\",\n        \"Latent-graph learning for disease prediction\",\n        \"A novel framework for imputation of missing values in databases\",\n        \"Neural message passing for quantum chemistry\",\n        \"Mida: Multiple imputation using denoising autoencoders\",\n        \"Inductive representation learning on large graphs\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"Incomplete graph representation and learning via partial graph neural networks\",\n        \"Differentiable graph module (dgm) for graph convolutional networks\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Stochastic beams and where to find them: The gumbel-top-k trick for sampling sequences without replacement\",\n        \"The effects of the irregular sample and missing data in time series analysis\",\n        \"Imputation of missing data using machine learning techniques\",\n        \"Statistical analysis with missing data, volume 793\",\n        \"The use and reporting of multiple imputation in medical research–a review\",\n        \"An experimental survey of missing data imputation algorithms\",\n        \"Missing data imputation using optimal transport\",\n        \"Signal processing techniques for interpolation in graph structured data\",\n        \"Handling incomplete heterogeneous data using vaes\",\n        \"On the unreasonable effectiveness of feature propagation in learning on graphs with missing node features\",\n        \"Inference and missing data\",\n        \"Facenet: A unified embedding for face recognition and clustering\",\n        \"Processing of missing data by neural networks\",\n        \"Missing data imputation with adversarially-trained graph convolutional networks\",\n        \"Missforest—non-parametric missing value imputation for mixed-type data\",\n        \"Multiple imputation for missing data in epidemiological and clinical research: potential and pitfalls\",\n        \"Graph convolutional networks for graphs containing missing features\",\n        \"Missing value estimation methods for dna microarrays\",\n        \"Flexible imputation of missing data\",\n        \"mice: Multivariate imputation by chained equations in r\",\n        \"Graph attention networks\",\n        \"Extracting and composing robust features with denoising autoencoders\",\n        \"Missing value estimation for dna microarray gene expression data by support vector regression imputation and orthogonal coding scheme\",\n        \"Dynamic graph cnn for learning on point clouds\",\n        \"Sampling matters in deep embedding learning\",\n        \"Simplifying graph convolutional networks\",\n        \"Discovery and clinical decision support for personalized healthcare\",\n        \"Gain: Missing data imputation using generative adversarial nets\",\n        \"Personalized survival predictions via trees of predictors: An application to cardiac transplantation\",\n        \"Layer-dependent importance sampling for training deep and large graph convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in 1 Pipeline: initially, the preprocessed batch X is encoded with a feature propagation block (Eq. ()), resulting in the initial representations H₀. These representations are then updated with a sequence of EGG-GAE blocks obtaining Hₖ, k∈{1,…,K}. The concatenation of {Hₖ}ₖ₌₁ᴷ gives the final representation Hₒᵤₜ. It is used as the input for the subsequent heads: numerical imputation, categorical imputation, and downstream task one., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}