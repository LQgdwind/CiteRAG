{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: UPSS: a User-centric Private Storage System with its applications\n\nPaper Abstract: Abstract Strong confidentiality, integrity, user control, reliability and performance are critical requirements in privacy-sensitive applications. Such applications would benefit from a data storage and sharing infrastructure that provides these properties even in decentralized topologies with untrusted storage backends, but users today are forced to choose between systemic security properties and system reliability or performance. As an alternative to this status quo we present UPSS: the user-centric private sharing system, a cryptographic storage system that can be used as a conventional filesystem or as the foundation for security-sensitive applications such as redaction with integrity and private revision control. We demonstrate that both the security and performance properties of UPSS exceed that of existing cryptographic filesystems and that its performance is comparable to mature conventional filesystems — in some cases even superior. Whether used directly via its Rust API or as a conventional filesystem, UPSS provides strong security and practical performance on untrusted storage.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Filebench - A model based filesystem workload generator\",\n        \"WebAssembly Specification\",\n        \"FUSE (Filesystem in Userspace)\",\n        \"UtahFS\",\n        \"UtahFS: Encrypted File Storage\",\n        \"FARSITE: Federated, available, and reliable storage for an incompletely trusted environment\",\n        \"DICE: A dual integrity convergent encryption protocol for client side secure data deduplication\",\n        \"File system on CRDT\",\n        \"Amazon Simple Storage Service\",\n        \"The unified extensional versioning model\",\n        \"Measurements of a distributed file system\",\n        \"IPFS: content addressed, versioned, P2P file system\",\n        \"DepSky: dependable and secure storage in a cloud-of-clouds\",\n        \"The Zettabyte file system\",\n        \"From online social network analysis to a user-centric private sharing system\",\n        \"Upss: A global, least-privileged storage system with stronger security and better performance\",\n        \"Challenges in Designing a Distributed Cryptographic File System\",\n        \"Cagecoach: Sharing-oriented redaction-capable distributed cryptographic file system\",\n        \"Incentives build robustness in BitTorrent\",\n        \"Wide-area cooperative storage with CFS\",\n        \"Programming semantics for multiprogrammed computations\",\n        \"Reclaiming space from duplicate files in a serverless distributed file system\",\n        \"SHA-3 Standard: Permutation-Based Hash and Extendable-Output Functions\",\n        \"Advanced Encryption Standard (AES)\",\n        \"S3FS: FUSE-based file system backed by Amazon S3)\",\n        \"MetaSync: File synchronization across multiple untrusted storage services\",\n        \"PKCS #5: Password-Based Cryptography Specification Version 2.0\",\n        \"Secure outsourcing and sharing of cloud data using a user-side encrypted file system\",\n        \"A conflict-free replicated JSON datatype\",\n        \"File access performance of diskless workstations\",\n        \"EncFS goes multi-user: Adding access control to an encrypted file system\",\n        \"Secure deduplication with efficient and reliable convergent key management\",\n        \"Perkeep (née Camlistore): your personal storage system for life\",\n        \"Version Control with Git: Powerful tools and techniques for collaborative software development\",\n        \"Replication, history, and grafting in the Ori file system\",\n        \"Escaping the evils of centralized control with self-certifying pathnames\",\n        \"Secrecy, authentication, and public key systems\",\n        \"A novel cryptographic framework for cloud file systems and CryFS, a provably-secure construction\",\n        \"Azure Blob Storage\",\n        \"Ivy: A read/write peer-to-peer file system\",\n        \"On the feasibility of software FEC\",\n        \"The design and implementation of a log-structured file system\",\n        \"Coda: A highly available file system for a distributed workstation environment\",\n        \"A comprehensive study of convergent and commutative replicated data types\",\n        \"Conflict-free replicated data types\",\n        \"RFC3530: Network File System (NFS) Version 4 Protocol\",\n        \"Path ORAM: an extremely simple oblivious RAM protocol\",\n        \"Chord: A scalable peer-to-peer lookup service for internet applications\",\n        \"EncFS: an Encrypted Filesystem for FUSE\",\n        \"Rust programming language\",\n        \"SSHFS (a network filesystem client to connect to ssh servers)\",\n        \"Tahoe: the least-authority filesystem\",\n        \"NCryptfs: A Secure and Convenient Cryptographic File System\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in UPSS: a User-centric Private Storage System with its applications, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}