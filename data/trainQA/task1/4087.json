{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Towards Structured Dynamic Sparse Pre-Training of BERT\n\nPaper Abstract: Abstract Identifying algorithms for computational efficient unsupervised training of large language models is an important and active area of research. In this work, we develop and study a straightforward, dynamic always-sparse pre-training approach for BERT language modeling task, which leverages periodic compression steps based on magnitude pruning followed by random parameter re-allocation. This approach enables us to achieve Pareto improvements in terms of the number of floating-point operations (FLOPs) over statically sparse and dense models across a broad spectrum of network sizes. Furthermore, we demonstrate that training remains FLOP-efficient when using coarse-grained block sparsity, making it particularly promising for efficient execution on modern hardware accelerators.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Intrinsic Dimensionality Explains the Effectiveness of Language Model Fine-Tuning\",\n        \"The Generalization-Stability Tradeoff in Neural Network Pruning\",\n        \"Deep Rewiring: Training very sparse deep networks\",\n        \"The Lottery Ticket Hypothesis for Pre-trained BERT Networks\",\n        \"EarlyBERT: Efficient BERT Training via Early-bird Lottery Tickets\",\n        \"Sparse Networks from Scratch: Faster Training without Losing Performance\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Rigging the Lottery: Making All Tickets Winners\",\n        \"Gradient Flow in Sparse Neural Networks and How Lottery Tickets Win\",\n        \"Reducing Transformer Depth on Demand with Structured Dropout\",\n        \"Switch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity\",\n        \"The Lottery Ticket Hypothesis: Finding Sparse, Trainable Neural Networks\",\n        \"Linear Mode Connectivity and the Lottery Ticket Hypothesis\",\n        \"Pruning Neural Networks at Initialization: Why are We Missing the Mark?\",\n        \"The State of Sparsity in Deep Neural Networks\",\n        \"Dynamic Channel Pruning: Feature Boosting and Suppression\",\n        \"Graphcore Homepage, 2021\",\n        \"GPU Kernels for Block-Sparse Weights\",\n        \"Block-wise Dynamic Sparseness\",\n        \"Sparsity in Deep Learning: Pruning and growth for efficient inference and training in neural networks\",\n        \"Multiplicative Interactions and Where to Find Them\",\n        \"Top-KAST: Top-K Always Sparse Training\",\n        \"Scaling Laws for Neural Language Models\",\n        \"SNIP: Single-shot Network Pruning based on Connection Sensitivity\",\n        \"A Signal Propagation Perspective for Pruning Neural Networks at Initialization\",\n        \"GShard: Scaling Giant Models with Conditional Computation and Automatic Sharding\",\n        \"BASE Layers: Simplifying Training of Large, Sparse Models\",\n        \"Measuring the Intrinsic Dimension of Objective Landscapes\",\n        \"Sparse evolutionary Deep Learning with over one million artificial neurons on commodity hardware\",\n        \"Selfish Sparse RNN Training\",\n        \"Do We Actually Need Dense Over-Parameterization? In-Time Over-Parameterization in Sparse Training\",\n        \"Learning Efficient Convolutional Networks through Network Slimming\",\n        \"Decoupled Weight Decay Regularization\",\n        \"Learning Sparse Neural Networks through L_0 Regularization\",\n        \"A Gradient Flow Framework For Analyzing Network Pruning\",\n        \"Scalable training of artificial neural networks with adaptive sparse connectivity inspired by network science\",\n        \"Parameter Efficient Training of Deep Convolutional Neural Networks by Dynamic Sparse Reparameterization\",\n        \"Group Pruning using a Bounded-Lp norm for Group Gating and Regularization\",\n        \"Block-Sparse Recurrent Neural Networks\",\n        \"Carbon Emissions and Large Neural Network Training\",\n        \"AC/DC: Alternating Compressed/DeCompressed Training of Deep Neural Networks\",\n        \"How fine can fine-tuning be? Learning efficient language models\",\n        \"Movement Pruning: Adaptive Sparsity by Fine-Tuning\",\n        \"Outrageously Large Neural Networks: The Sparsely-Gated Mixture-of-Experts Layer\",\n        \"Energy and Policy Considerations for Deep Learning in NLP\",\n        \"Sanity-Checking Pruning Methods: Random Tickets can Win the Jackpot\",\n        \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n        \"Keep the Gradients Flowing: Using Gradient Flow to Study Sparse Network Optimization\",\n        \"Well-Read Students Learn Better: On the Importance of Pre-training Compact Models\",\n        \"Transformer: Attention is all you need\",\n        \"Ramanujan Bipartite Graph Products for Efficient Block Sparse Neural Networks\",\n        \"Picking winning tickets before training by preserving gradient flow\",\n        \"Structured Pruning of Large Language Models\",\n        \"Learning Intrinsic Sparse Structures within Long Short-Term Memory\",\n        \"DeepHoyer: Learning Sparser Neural Network with Differentiable Scale-Invariant Sparsity Measures\",\n        \"One Shot Pruning of Recurrent Neural Networks by Jacobian spectrum evaluation\",\n        \"Learning N:M Fine-grained Structured Sparse Neural Networks From Scratch\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Towards Structured Dynamic Sparse Pre-Training of BERT, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}