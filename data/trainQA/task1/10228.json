{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: UPDP: A Unified Progressive Depth Pruner for CNN and Vision Transformer\n\nPaper Abstract: Abstract Traditional channel-wise pruning methods by reducing network channels struggle to effectively prune efficient CNN models with depth-wise convolutional layers and certain efficient modules, such as popular inverted residual blocks. Prior depth pruning methods by reducing network depths are not suitable for pruning some efficient models due to the existence of some normalization layers. Moreover, finetuning subnet by directly removing activation layers would corrupt the original model weights, hindering the pruned model from achieving high performance. To address these issues, we propose a novel depth pruning method for efficient models. Our approach proposes a novel block pruning strategy and progressive training method for the subnet. Additionally, we extend our pruning method to vision transformer models. Experimental results demonstrate that our method consistently outperforms existing depth pruning methods across various pruning configurations. We obtained three pruned ConvNeXtV1 models with our method applying on ConvNeXtV1, which surpass most SOTA efficient models with comparable inference performance. Our method also achieves state-of-the-art pruning performance on the vision transformer model.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Layer normalization\",\n        \"Collapsible linear blocks for super-efficient super resolution\",\n        \"Language models are few-shot learners\",\n        \"Once for All: Train One Network and Specialize it for Efficient Deployment\",\n        \"End-to-end object detection with transformers\",\n        \"VanillaNet: the Power of Minimalism in Deep Learning\",\n        \"Shallowing deep networks: Layer-wise pruning based on feature representations\",\n        \"Xception: Deep learning with depthwise separable convolutions\",\n        \"Diverse branch block: Building a convolution as an inception-like unit\",\n        \"Repvgg: Making vgg-style convnets great again\",\n        \"Attention is not all you need: Pure attention loses rank doubly exponentially with depth\",\n        \"Layer folding: Neural network depth reduction using activation linearization\",\n        \"To filter prune, or to layer prune, that is the question\",\n        \"Fast sparse convnets\",\n        \"DepthShrinker: a new compression paradigm towards boosting real-hardware efficiency of compact neural networks\",\n        \"Levit: a vision transformer in convnetâ€™s clothing for faster inference\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Deep residual learning for image recognition\",\n        \"Filter pruning via geometric median for deep convolutional neural networks acceleration\",\n        \"Searching for mobilenetv3\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Pruning filters for efficient convnets\",\n        \"Rethinking vision transformers for mobilenet size and speed\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"A ConvNet for the 2020s\",\n        \"Metapruning: Meta learning for automatic neural network channel pruning\",\n        \"Are sixteen heads really better than one?\",\n        \"Edgevits: Competing light-weight cnns on mobile devices with vision transformers\",\n        \"Scalable vision transformers with hierarchical pooling\",\n        \"Channel permutations for N: M sparsity\",\n        \"Efficiently scaling transformer inference\",\n        \"Designing network design spaces\",\n        \"Dynamicvit: Efficient vision transformers with dynamic token sparsification\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Segmenter: Transformer for semantic segmentation\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Efficientnetv2: Smaller models and faster training\",\n        \"Patch slimming for efficient vision transformers\",\n        \"SCOP: Scientific Control for Reliable Neural Network Pruning\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"MobileOne: An Improved One Millisecond Mobile Backbone\",\n        \"Alphanet: Improved training of supernets with alpha-divergence\",\n        \"Attentivenas: Improving neural architecture search via attentive sampling\",\n        \"Pyramid vision transformer: A versatile backbone for dense prediction without convolutions\",\n        \"Convnext v2: Co-designing and scaling convnets with masked autoencoders\",\n        \"Group normalization\",\n        \"Layer pruning via fusible residual convolutional block for deep neural networks\",\n        \"Width & Depth Pruning for Vision Transformers\",\n        \"Universally slimmable networks and improved training techniques\",\n        \"Bignas: Scaling up neural architecture search with big single-stage models\",\n        \"X-Pruner: eXplainable Pruning for Vision Transformers\",\n        \"Accelerating training of transformer-based language models with progressive layer dropping\",\n        \"Evolutionary shallowing deep neural networks at block levels\",\n        \"Vision transformer pruning\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in UPDP: A Unified Progressive Depth Pruner for CNN and Vision Transformer, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}