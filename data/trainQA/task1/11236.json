{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Primal-Dual Framework for Symmetric Cone Programming\n\nPaper Abstract: Abstract In this paper, we introduce a primal-dual algorithmic framework for solving Symmetric Cone Programs (SCPs), a versatile optimization model that unifies and extends Linear, Second-Order Cone (SOCP), and Semidefinite Programming (SDP). Our work generalizes the primal-dual framework for SDPs introduced by Arora and Kale [6], leveraging a recent extension of the Multiplicative Weights Update method (MWU) to symmetric cones. Going beyond existing works, our framework can handle SOCPs and mixed SCPs, exhibits nearly linear time complexity, and can be effectively parallelized. To illustrate the efficacy of our framework, we employ it to develop approximation algorithms for two geometric optimization problems: the Smallest Enclosing Sphere problem and the Support Vector Machine problem. Our theoretical analyses demonstrate that the two algorithms compute approximate solutions in nearly linear running time and with parallel depth scaling polylogarithmically with the input size. We compare our algorithms against CGAL as well as interior point solvers applied to these problems. Experiments show that our algorithms are highly efficient when implemented on a CPU and achieve substantial speedups when parallelized on a GPU, allowing us to solve large-scale instances of these problems.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Using optimization to obtain a width-independent, parallel, simpler, and faster positive SDP solver\",\n        \"Using optimization to break the epsilon barrier: A faster and simpler width-independent algorithm for solving positive linear programs in parallel\",\n        \"Thread scheduling for multiprogrammed multiprocessors\",\n        \"Fast algorithms for approximate semidefinite programming using the multiplicative weights update method\",\n        \"The multiplicative weights update method: a meta-algorithm and applications\",\n        \"A combinatorial, primal-dual approach to semidefinite programs\",\n        \"Smaller core-sets for balls\",\n        \"Non-Euclidean restricted memory level method for large-scale convex optimization\",\n        \"Duality and geometry in SVM classifiers\",\n        \"A geometric approach to support vector regression\",\n        \"Introduction to parallel algorithms\",\n        \"Fast set operations using treaps\",\n        \"Multiplicative updates for online convex optimization over symmetric cones\",\n        \"Coresets, sparse greedy approximation, and the Frank-Wolfe algorithm\",\n        \"Support-vector networks\",\n        \"User‚Äôs Manual for CPLEX\",\n        \"A geometric interpretation of ŒΩùúà u-SVM classifiers\",\n        \"A class of convex programs with applications to computational geometry\",\n        \"Analysis on Symmetric Cones\",\n        \"Euclidean Jordan Algebras and interior-point algorithms\",\n        \"An iterative algorithm learning the maximal margin classifier\",\n        \"A subexponential algorithm for abstract optimization problems\",\n        \"Coresets for polytope distance\",\n        \"An efficient, exact, and generic quadratic programming solver for geometric optimization\",\n        \"Gurobi Optimizer Reference Manual\",\n        \"A parallel approximation algorithm for positive semidefinite programming\",\n        \"Efficient Algorithms Using The Multiplicative Weights Update Method\",\n        \"Efficient approximation algorithms for semidefinite programs arising from MAX CUT and COLORING\",\n        \"Computing core-sets and approximate smallest enclosing hyperspheres in high dimensions\",\n        \"A parallel approximation algorithm for positive linear programming\",\n        \"Linear and nonlinear programming, volume 2\",\n        \"Linear-time algorithms for linear programming in ‚Ñù3superscript‚Ñù3\\\\mathbb{R}^{3} and related problems\",\n        \"Linear programming in linear time when the dimension is fixed\",\n        \"Finding the point of a polyhedron closest to the origin\",\n        \"Self-scaled barriers and interior-point methods for convex programming\",\n        \"Approximating smallest enclosing balls with applications to machine learning\",\n        \"CUDA C++ Programming Guide\",\n        \"Sequential minimal optimization: A fast algorithm for training support vector machines\",\n        \"Fast approximation algorithms for fractional packing and covering problems\",\n        \"New support vector algorithms\",\n        \"Second order cone programming approaches for handling missing and uncertain data\",\n        \"The Araki-Lieb-Thirring inequality and the Golden-Thompson inequality in Euclidean Jordan algebras\",\n        \"CGAL User and Reference Manual\",\n        \"Matrix exponentiated gradient updates for on-line learning and Bregman projection\",\n        \"Symmetric cones\",\n        \"Jordan algebraic approach to symmetric optimization\",\n        \"Online variance minimization\",\n        \"Smallest enclosing disks (balls and ellipsoids)\",\n        \"Two algorithms for the minimum enclosing ball problem\",\n        \"Sequential and parallel algorithms for mixed packing and covering\",\n        \"Efficient algorithms for the smallest enclosing ball problem\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in A Primal-Dual Framework for Symmetric Cone Programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}