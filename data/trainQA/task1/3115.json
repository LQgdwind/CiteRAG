{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Power of Scale for Parameter-Efficient Prompt Tuning\n\nPaper Abstract: Abstract In this work, we explore “prompt tuning,” a simple yet effective mechanism for learning “soft prompts” to condition frozen language models to perform specific downstream tasks. Unlike the discrete text prompts used by GPT-3, soft prompts are learned through backpropagation and can be tuned to incorporate signals from any number of labeled examples. Our end-to-end learned approach outperforms GPT-3’s few-shot learning by a large margin. More remarkably, through ablations on model size using T5, we show that prompt tuning becomes more competitive with scale: as models exceed billions of parameters, our method “closes the gap” and matches the strong performance of model tuning (where all model weights are tuned). This finding is especially relevant because large models are costly to share and serve and the ability to reuse one frozen model for multiple downstream tasks can ease this burden. Our method can be seen as a simplification of the recently proposed “prefix tuning” of Li and Liang (2021) and we provide a comparison to this and other similar approaches. Finally, we show that conditioning a frozen model with soft prompts confers benefits in robustness to domain transfer and enables efficient “prompt ensembling.”\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The second PASCAL recognising textual entailment challenge\",\n        \"The fifth PASCAL recognizing textual entailment challenge\",\n        \"JAX: composable transformations of Python+NumPy programs\",\n        \"Language models are few-shot learners\",\n        \"BoolQ: Exploring the surprising difficulty of natural yes/no questions\",\n        \"The PASCAL recognising textual entailment challenge\",\n        \"The CommitmentBank: Investigating projection in naturally occurring discourse\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"DROP: A reading comprehension benchmark requiring discrete reasoning over paragraphs\",\n        \"MRQA 2019 shared task: Evaluating generalization in reading comprehension\",\n        \"The third PASCAL recognizing textual entailment challenge\",\n        \"WARP: Word-level Adversarial ReProgramming\",\n        \"Neural network ensembles\",\n        \"Flax: A neural network library and ecosystem for JAX\",\n        \"Parameter-efficient transfer learning for NLP\",\n        \"Universal language model fine-tuning for text classification\",\n        \"First Quora dataset release: Question pairs\",\n        \"How can we know what language models know?\",\n        \"Are you smarter than a sixth grader? textbook question answering for multimodal machine comprehension\",\n        \"Looking beyond the surface: A challenge set for reading comprehension over multiple sentences\",\n        \"A surprisingly robust trick for the Winograd schema challenge\",\n        \"SentencePiece: A simple and language independent subword tokenizer and detokenizer for neural text processing\",\n        \"RACE: Large-scale ReAding comprehension dataset from examinations\",\n        \"Simple and scalable predictive uncertainty estimation using deep ensembles\",\n        \"The Winograd schema challenge\",\n        \"Zero-shot relation extraction via reading comprehension\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"GPT understands, too\",\n        \"Few-shot sequence learning with transformers\",\n        \"Rectified linear units improve restricted Boltzmann machines\",\n        \"Deep contextualized word representations\",\n        \"MAD-X: An Adapter-Based Framework for Multi-Task Cross-Lingual Transfer\",\n        \"WiC: 10,000 example pairs for evaluating context-sensitive representations\",\n        \"Learning how to ask: Querying LMs with mixtures of soft prompts\",\n        \"Improving language understanding by generative pre-training\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"Learning multiple visual domains with residual adapters\",\n        \"Choice of plausible alternatives: An evaluation of commonsense causal reasoning\",\n        \"DuoRC: Towards complex language understanding with paraphrased reading comprehension\",\n        \"Exploiting cloze-questions for few-shot text classification and natural language inference\",\n        \"GLU variants improve transformer\",\n        \"Adafactor: Adaptive learning rates with sublinear memory cost\",\n        \"AutoPrompt: Eliciting Knowledge from Language Models with Automatically Generated Prompts\",\n        \"Attention is all you need\",\n        \"SuperGLUE: A stickier benchmark for general-purpose language understanding systems\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"seaborn: statistical data visualization\",\n        \"ReCoRD: Bridging the gap between human and machine commonsense reading comprehension\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in The Power of Scale for Parameter-Efficient Prompt Tuning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}