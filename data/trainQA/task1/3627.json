{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: S2 Engine: A Novel Systolic Architecture for Sparse Convolutional Neural Networks\n\nPaper Abstract: Abstract Convolutional neural networks (CNNs) have achieved great success in performing cognitive tasks. However, execution of CNNs requires a large amount of computing resources and generates heavy memory traffic, which imposes a severe challenge on computing system design. Through optimizing parallel executions and data reuse in convolution, systolic architecture demonstrates great advantages in accelerating CNN computations. However, regular internal data transmission path in traditional systolic architecture prevents the systolic architecture from completely leveraging the benefits introduced by neural network sparsity. Deployment of fine-grained sparsity on the existing systolic architectures is greatly hindered by the incurred computational overheads. In this work, we propose S 2 Engine – a novel systolic architecture that can fully exploit the sparsity in CNNs with maximized data reuse. S 2 Engine transmits compressed data internally and allows each processing element to dynamically select an aligned data from the compressed dataflow in convolution. Compared to the naïve systolic array, S 2 Engine achieves about 3.2×3.2\\times and about 3.0×3.0\\times improvements on speed and energy efficiency, respectively.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"You only look once: Unified, real-time object detection\",\n        \"NVIDIA Deep Learning Accelerator (NVDLA)\",\n        \"A systolic neural network architecture for hidden Markov models\",\n        \"Automated systolic array architecture synthesis for high throughput CNN inference on FPGAs\",\n        \"Packing sparse convolutional neural networks for efficient systolic array implementations: Column combining under joint optimization\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Google TPU v2\",\n        \"A domain-specific architecture for deep neural networks\",\n        \"White paper: Accelerating DNNs with Xilinx Alveo accelerator cards\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Exploring the regularity of sparse structure in convolutional neural networks\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and Huffman coding\",\n        \"Cambricon-X: An accelerator for sparse neural networks\",\n        \"Cnvlutin: Ineffectual-neuron-free deep neural network computing\",\n        \"Cambricon-S: Addressing irregularity in sparse neural networks through a cooperative software/hardware approach\",\n        \"SCNN: An accelerator for compressed-sparse convolutional neural networks\",\n        \"SparTen: A sparse tensor accelerator for convolutional neural networks\",\n        \"Value-aware quantization for training and inference of neural networks\",\n        \"Dorefa-net: Training low bitwidth convolutional neural networks with low bitwidth gradients\",\n        \"Quantized Neural Networks: Training neural networks with low precision weights and activations\",\n        \"Reduced-precision strategies for bounded memory in deep neural nets\",\n        \"Using dataflow to optimize energy efficiency of deep neural network accelerators\",\n        \"SCALE-Sim: Systolic CNN accelerator\",\n        \"Understanding sources of inefficiency in general-purpose chips\",\n        \"Computing’s energy problem (and what we can do about it)\",\n        \"ImageNet classification with deep convolutional neural networks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Deep residual learning for image recognition\",\n        \"ImageNet: A large-scale hierarchical image database\",\n        \"Eyeriss: An energy-efficient reconfigurable accelerator for deep convolutional neural networks\",\n        \"Deep convolutional neural network architecture with reconfigurable computation patterns\",\n        \"EIE: Efficient inference engine on compressed deep neural network\",\n        \"Caffe: Convolutional architecture for fast feature embedding\",\n        \"Automatic performance tuning of sparse matrix kernels\",\n        \"COSY: An energy-efficient hardware architecture for deep convolutional neural networks based on systolic array\",\n        \"Energy-efficient neural network accelerator based on outlier-aware low-precision computation\",\n        \"FinCACTI: Architectural analysis and modeling of caches with deeply-scaled FinFET devices\",\n        \"CACTI 6.0: A tool to model large caches\",\n        \"Neural network distiller\",\n        \"A systolic architecture for Hopfield neural networks\",\n        \"ShiDianNao: Shifting vision processing closer to the sensor\",\n        \"An OpenCL™ deep learning accelerator on Arria 10\",\n        \"Sparse-TPU: Adapting systolic arrays for sparse matrices\",\n        \"Eyeriss v2: A flexible accelerator for emerging deep neural networks on mobile devices\",\n        \"Zena: Zero-aware neural network accelerator\",\n        \"DUET: Boosting deep neural network efficiency on dual-module architecture\",\n        \"Stripes: Bit-serial deep neural network computing\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in S2 Engine: A Novel Systolic Architecture for Sparse Convolutional Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}