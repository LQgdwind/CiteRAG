{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On the impact of treewidth in the computational complexity of freezing dynamics\n\nPaper Abstract: Abstract An automata network is a network of entities, each holding a state from a finite set and evolving according to a local update rule which depends only on its neighbors in the network’s graph. It is freezing if there is an order on states such that the state evolution of any node is non-decreasing in any orbit. They are commonly used to model epidemic propagation, diffusion phenomena like bootstrap percolation or cristal growth. In this paper we establish how alphabet size, treewidth and maximum degree of the underlying graph are key parameters which influence the overall computational complexity of finite freezing automata networks. First, we define a general decision problem, called Specification Checking Problem, that captures many classical decision problems such as prediction, nilpotency, predecessor, asynchronous reachability. Then, we present a fast-parallel algorithm that solves the general model checking problem when the three parameters are bounded, hence showing that the problem is in NC. Moreover, we show that the problem is in XP on the parameters tree-width and maximum degree. Finally, we show that these problems are hard from two different perspectives. First, the general problem is W[2]-hard when taking either treewidth or alphabet as single parameter and fixing the others. Second, the classical problems are hard in their respective classes when restricted to families of graph with sufficiently large treewidth. Moreover, for prediction, predecessor and asynchronous reachability, we establish the hardness result with a fixed set-defiend update rule that is universally hard on any input graph of such families.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Bootstrap percolation in power-law random graphs\",\n        \"Complexity of finding embeddings in a k-tree\",\n        \"A forest-fire model and some thoughts on turbulence\",\n        \"Bootstrap percolation on the hypercube\",\n        \"The sharp threshold for bootstrap percolation in all dimensions\",\n        \"Universality in freezing cellular automata\",\n        \"Parallel algorithms with optimal speedup for bounded treewidth\",\n        \"The boolean formula value problem is in ALOGTIME\",\n        \"The l(h,k)-labelling problem: A survey and annotated bibliography\",\n        \"Counter machines and distributed automata\",\n        \"Polynomial bounds for the grid-minor theorem\",\n        \"The monadic second-order logic of graphs. i. recognizable sets of finite graphs\",\n        \"Constraint satisfaction, bounded treewidth, and finite-variable logics\",\n        \"Computational complexity of finite asynchronous cellular automata\",\n        \"Fixed-parameter tractability and completeness i: Basic results\",\n        \"Fundamentals of Parameterized Complexity\",\n        \"Logspace versions of the theorems of bodlaender and courcelle\",\n        \"Cellular automata and epidemiological models with spatial dependence\",\n        \"On the influence of the interaction graph on a finite dynamical system\",\n        \"Simple dynamics on graphs\",\n        \"Parallel symmetry-breaking in sparse graphs\",\n        \"Introducing freezing cellular automata\",\n        \"On the computational complexity of the freezing non-strict majority automata\",\n        \"On the complexity of asynchronous freezing cellular automata\",\n        \"Fast-parallel algorithms for freezing totalistic asynchronous cellular automata\",\n        \"Neural and Automata Networks: Dynamical Behavior and Applications\",\n        \"The complexity of the bootstraping percolation and other problems\",\n        \"Cellular automaton growth on z2: Theorems, examples, and problems\",\n        \"NP-complete problems in cellular automata\",\n        \"Limits to parallel computation: P-completeness theory\",\n        \"Life without death is P-complete\",\n        \"Sharp metastability threshold for two-dimensional bootstrap percolation\",\n        \"An Introduction to Parallel Algorithms\",\n        \"The Nilpotency Problem of One-dimensional Cellular Automata\",\n        \"Generalized predecessor existence problems for boolean finite dynamical systems on directed graphs\",\n        \"A contribution to the mathematical theory of epidemics\",\n        \"Simplified algorithmic metatheorems beyond mso: Treewidth and neighborhood diversity\",\n        \"On brambles, grid-like minors, and parameterized intractability of monadic second-order logic\",\n        \"Cellular automata with sparse communication\",\n        \"Can you beat treewidth?\",\n        \"Freezing, bounded-change and convergent cellular automata\",\n        \"Undirected connectivity in log-space\",\n        \"Nilpotent dynamics on signed interaction graphs and weak converses of thomas’ rules\",\n        \"Graph minors. v. excluding a planar graph\",\n        \"Constraint satisfaction with bounded treewidth revisited\",\n        \"On fixed-parameter tractable parameterizations of SAT\",\n        \"On some mathematical problems connected with patterns of growth of figures\",\n        \"On cellular automata with a finite number of state changes\",\n        \"A brief tour of theoretical tile self-assembly\",\n        \"Cellular graph automata. i. basic concepts, graph property measurement, closure properties\",\n        \"Cellular graph automata. ii. graph and subgraph isomorphism, graph structure recognition\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in On the impact of treewidth in the computational complexity of freezing dynamics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}