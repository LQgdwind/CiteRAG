{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Memorizing Transformers\n\nPaper Abstract: Abstract Language models typically need to be trained or finetuned in order to acquire new knowledge, which involves updating their weights. We instead envision language models that can simply read and memorize new data at inference time, thus acquiring new knowledge immediately. In this work, we extend language models with the ability to memorize the internal representations of past inputs. We demonstrate that an approximate kùëòkNN lookup into a non-differentiable memory of recent (key, value) pairs improves language modeling across various benchmarks and tasks, including generic webtext (C4), math papers (arXiv), books (PG-19), code (Github), as well as formal theorems (Isabelle). We show that the performance steadily improves when we increase the size of memory up to 262K tokens. On benchmarks including code and mathematics, we find that the model is capable of making use of newly defined functions and theorems during test time.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"ETC: encoding long and structured inputs in transformers\",\n        \"Program synthesis with large language models\",\n        \"Longformer: The long-document transformer\",\n        \"JAX: composable transformations of Python+NumPy programs\",\n        \"Language models are few-shot learners\",\n        \"Evaluating large language models trained on code\",\n        \"Rethinking attention with performers\",\n        \"Training verifiers to solve math word problems\",\n        \"Transformer-XL: Attentive language models beyond a fixed-length context\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Addressing some limitations of transformers with feedback memory\",\n        \"Augmenting transformers with KNN-based composite memory for dialog\",\n        \"Improving neural language models with a continuous cache\",\n        \"Accelerating large-scale inference with anisotropic vector quantization\",\n        \"Memory-efficient transformers via top-k attention\",\n        \"Retrieval augmented language model pre-training\",\n        \"Teaching temporal logics to neural networks\",\n        \"Flax: A neural network library and ecosystem for JAX\",\n        \"Query-key normalization for transformers\",\n        \"Billion-scale similarity search with GPUs\",\n        \"Generalization through memorization: Nearest neighbor language models\",\n        \"Reformer: The efficient transformer\",\n        \"Sentencepiece: A simple and language independent subword tokenizer and detokenizer for neural text processing\",\n        \"Large memory layers with product keys\",\n        \"Pre-training via paraphrasing\",\n        \"Retrieval-augmented generation for knowledge-intensive NLP tasks\",\n        \"Isarstep: a benchmark for high-level mathematical reasoning\",\n        \"Competition-level code generation with alphacode\",\n        \"Generative language modeling for automated theorem proving\",\n        \"Mathematical reasoning via self-supervised skip-tree training\",\n        \"Compressive transformers for long-range sequence modelling\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Combiner: Full attention transformer with sparse computation cost\",\n        \"Efficient content-based sparse attention with routing transformers\",\n        \"Adafactor: Adaptive learning rates with sublinear memory cost\",\n        \"Augmenting self-attention with persistent memory\",\n        \"Not all memories are created equal: Learning to forget by expiring\",\n        \"Do long-range language models actually use long-range context?\",\n        \"Efficient transformers: A survey\",\n        \"Long range arena: A benchmark for efficient transformers\",\n        \"Attention is all you need\",\n        \"Exploration of neural machine translation in autoformalization of mathematics in mizar\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Cross-batch memory for embedding learning\",\n        \"An efficient gradient-based algorithm for on-line training of recurrent network trajectories\",\n        \"Adaptive semiparametric language models\",\n        \"Big bird: Transformers for longer sequences\",\n        \"Readtwice: Reading very large documents with memories\",\n        \"H-transformer-1d: Fast one-dimensional hierarchical attention for sequences\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Memorizing Transformers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}