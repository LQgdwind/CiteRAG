{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DeepDyve: Dynamic Verification for Deep Neural Networks\n\nPaper Abstract: Abstract. Deep neural networks (DNNs) have become one of the enabling technologies in many safety-critical applications, e.g., autonomous driving and medical image analysis. DNN systems, however, suffer from various kinds of threats, such as adversarial example attacks and fault injection attacks. While there are many defense methods proposed against maliciously crafted inputs, solutions against faults presented in the DNN system itself (e.g., parameters and calculations) are far less explored. In this paper, we develop a novel lightweight fault-tolerant solution for DNN-based systems, namely DeepDyve, which employs pre-trained neural networks that are far simpler and smaller than the original DNN for dynamic verification. The key to enabling such lightweight checking is that the smaller neural network only needs to produce approximate results for the initial task without sacrificing fault coverage much. We develop efficient and effective architecture and task exploration techniques to achieve optimized risk/overhead trade-off in DeepDyve. Experimental results show that DeepDyve can reduce 90% of the risks at around 10% overhead.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DIVA: A reliable substrate for deep submicron microarchitecture design\",\n        \"Tolerating soft errors in deep learning accelerators with reliable on-chip memory designs\",\n        \"Accelerator-friendly neural-network training: Learning variations and defects in RRAM crossbar\",\n        \"Eyeriss: An energy-efficient reconfigurable accelerator for deep convolutional neural networks\",\n        \"Robustness of feedforward neural networks\",\n        \"Fault tolerant neural networks with hybrid redundancy\",\n        \"Retraining-based timing error mitigation for hardware neural networks\",\n        \"FTSET-a software tool for fault tolerance evaluation and improvement\",\n        \"Explaining and Harnessing Adversarial Examples\",\n        \"Deep Compression: Compressing Deep Neural Network with Pruning, Trained Quantization and Huffman Coding\",\n        \"Distilling the Knowledge in a Neural Network\",\n        \"Terminal brain damage: Exposing the graceless degradation in deep neural networks under hardware fault attacks\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"ISO-26262: Road vehicles â€“ Functional safety\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"MATIC: Learning around errors for efficient low-voltage neural network accelerators\",\n        \"Flipping bits in memory without accessing them: An experimental study of DRAM disturbance errors\",\n        \"Quantizing deep convolutional networks for efficient inference: A whitepaper\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Adversarial Machine Learning at Scale\",\n        \"Tiny imagenet visual recognition challenge\",\n        \"Optimal brain damage\",\n        \"Understanding error propagation in deep learning neural network (DNN) accelerators and applications\",\n        \"D2NN: a fine-grained dual modular redundancy framework for deep neural networks\",\n        \"Rescuing memristor-based neuromorphic design with high defects\",\n        \"Fault injection attack on deep neural network\",\n        \"Towards imperceptible and robust adversarial example attacks against neural networks\",\n        \"Towards Deep Learning Models Resistant to Adversarial Attacks\",\n        \"Relaxed fault-tolerant hardware implementation of neural networks in the presence of multiple transient errors\",\n        \"Clock glitch generator on SAKURA-G for fault injection attack against a cryptographic circuit\",\n        \"Magnet: a two-pronged defense against adversarial examples\",\n        \"Practical black-box attacks against machine learning\",\n        \"Bit-Flip Attack: Crushing Neural Network with Progressive Bit Search\",\n        \"Ares: A framework for quantifying the resilience of deep neural networks\",\n        \"Minerva: Enabling low-power, highly-accurate deep neural network accelerators\",\n        \"Practical fault attack against the Ed25519 and EdDSA signature schemes\",\n        \"Automated design of error-resilient and hardware-efficient deep neural networks\",\n        \"Efficient On-Line Error Detection and Mitigation for Deep Neural Network Accelerators\",\n        \"Man vs. computer: Benchmarking machine learning algorithms for traffic sign recognition\",\n        \"EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks\",\n        \"Fault-tolerant training with on-line fault detection for RRAM-based neural computing systems\",\n        \"When Single Event Upset Meets Deep Neural Networks: Observations, Explorations, and Remedies\",\n        \"SRAM voltage scaling for energy-efficient convolutional neural networks\",\n        \"DeepHammer: Depleting the Intelligence of Deep Neural Networks through Targeted Chain of Bit Flips\",\n        \"Fault Sneaking Attack: a Stealthy Framework for Misleading Deep Neural Networks\",\n        \"Defending and Harnessing the Bit-Flip based Adversarial Weight Attack\",\n        \"Chakrabarti Chaitali\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in DeepDyve: Dynamic Verification for Deep Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}