{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CHARM: Composing Heterogeneous AcceleRators for Matrix Multiply on Versal ACAP Architecture\n\nPaper Abstract: Abstract. Dense matrix multiply (MM) serves as one of the most heavily used kernels in deep learning applications. To cope with the high computation demands of these applications, heterogeneous architectures featuring both FPGA and dedicated ASIC accelerators have emerged as promising platforms. For example, the AMD/Xilinx Versal ACAP architecture combines general-purpose CPU cores and programmable logic with AI Engine processors optimized for AI/ML. An array of 400 AI Engine processors executing at 1 GHz can provide up to 6.4 TFLOPs performance for 32-bit floating-point (fp32) data. However, machine learning models often contain both large and small MM operations. While large MM operations can be parallelized efficiently across many cores, small MM operations typically cannot. We observe that executing some small MM layers from the BERT natural language processing model on a large, monolithic MM accelerator in Versal ACAP achieved less than 5% of the theoretical peak performance. Therefore, one key question arises: How can we design accelerators to fully use the abundant computation resources under limited communication bandwidth for end-to-end applications with multiple MM layers of diverse sizes? We identify the biggest system throughput bottleneck resulting from the mismatch of massive computation resources of one monolithic accelerator and the various MM layers of small sizes in the application. To resolve this problem, we propose the CHARM framework to compose multiple diverse MM accelerator architectures working concurrently towards different layers within one application. CHARM includes analytical models which guide design space exploration to determine accelerator partitions and layer scheduling. To facilitate the system designs, CHARM automatically generates code, enabling thorough onboard design verification. We deploy the CHARM framework on four different deep learning applications, including BERT, ViT, NCF, MLP, on the AMD/Xilinx Versal ACAP VCK190 evaluation board. Our experiments show that we achieve 1.46 TFLOPs, 1.61 TFLOPs, 1.74 TFLOPs, and 2.94 TFLOPs inference throughput for BERT, ViT, NCF, MLP, respectively, which obtain 5.29×\\times, 32.51×\\times, 1.00×\\times and 1.00×\\times throughput gains compared to one monolithic accelerator.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Attention is all you need\",\n        \"Neural collaborative filtering\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Benchmarking TPU, GPU, and CPU platforms for deep learning\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"A modern primer on processing in memory\",\n        \"DAMOV: A new methodology and benchmark suite for evaluating data movement bottlenecks\",\n        \"Crow: A low-cost substrate for improving dram performance, energy efficiency, and reliability\",\n        \"Communication avoiding algorithms\",\n        \"Versal Adaptive Compute Acceleration Platform\",\n        \"IP Overlays of Deep learning Processing Unit\",\n        \"Eyeriss: A spatial architecture for energy-efficient dataflow for convolutional neural networks\",\n        \"Eyeriss v2: A flexible accelerator for emerging deep neural networks on mobile devices\",\n        \"Shidiannao: Shifting vision processing closer to the sensor\",\n        \"Why compete when you can work together: Fpga-asic integration for persistent rnns\",\n        \"Beyond peak performance: Comparing the real performance of ai-optimized fpgas and gpus\",\n        \"A configurable cloud-scale dnn processor for real-time ai\",\n        \"FBLAS: Streaming linear algebra on FPGA\",\n        \"Flexible communication avoiding matrix multiplication on fpga with high-level synthesis\",\n        \"Optimizing fpga-based accelerator design for deep convolutional neural networks\",\n        \"A customizable matrix multiplication framework for the intel harpv2 xeon+fpga platform: A deep learning case study\",\n        \"AutoSA: A Polyhedral Compiler for High-Performance Systolic Arrays on FPGA\",\n        \"Sextans: A streaming accelerator for general-purpose sparse-matrix dense-matrix multiplication\",\n        \"Serpens: A high bandwidth memory based accelerator for general-purpose sparse matrix-vector multiplication\",\n        \"Latte: Locality Aware Transformation for High-Level Synthesis\",\n        \"Energy Efficiency of Full Pipelining: A Case Study for Matrix Multiplication\",\n        \"MOCHA: Multinode Cost Optimization in Heterogeneous Clouds with Accelerators\",\n        \"Dnnbuilder: an automated tool for building high-performance dnn hardware accelerators for fpgas\",\n        \"DNNExplorer: a framework for modeling and exploring a novel paradigm of FPGA-based DNN accelerator\",\n        \"Tetris: Scalable and efficient neural network acceleration with 3d memory\",\n        \"Tangram: Optimized coarse-grained dataflow for scalable nn accelerators\",\n        \"Heterogeneous dataflow accelerators for multi-dnn workloads\",\n        \"Website\",\n        \"A Fully Pipelined and Dynamically Composable Architecture of CGRA\",\n        \"CHARM: A Composable Heterogeneous Accelerator-Rich Microprocessor\",\n        \"Versal AI Core Series VCK190 Evaluation Kit\",\n        \"AI Engine Technology\",\n        \"High-level synthesis for FPGAs: From prototyping to deployment\",\n        \"FPGA HLS Today: successes, challenges, and opportunities\",\n        \"FCUDA: Enabling efficient compilation of CUDA kernels onto FPGAs\",\n        \"Multilevel granularity parallelism synthesis on fpgas\",\n        \"High-level synthesis: productivity, performance, and software constraints\",\n        \"Extending high-level synthesis for task-parallel programs\",\n        \"Adaptive Data Flow API\",\n        \"Board evaluation and management Tool\",\n        \"AI Engine API and Intrinsics User Guide\",\n        \"Versal™ ACAP AI Engine System C simulator\",\n        \"H-GCN: A graph convolutional network accelerator on versal acap architecture\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in CHARM: Composing Heterogeneous AcceleRators for Matrix Multiply on Versal ACAP Architecture, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}