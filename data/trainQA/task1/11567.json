{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On the geometry of 𝑘-SAT solutions: what more can PPZ and Schöning’s algorithms do?\n\nPaper Abstract: Abstract Given a k𝑘k-CNF formula and an integer s≥2𝑠2s\\geq 2, we study algorithms that obtain s𝑠s solutions to the formula that are as dispersed as possible. For s=2𝑠2s=2, this problem of computing the diameter of a k𝑘k-CNF formula was initiated by Creszenzi and Rossi, who showed strong hardness results even for k=2𝑘2k=2. Assuming SETH, the current best upper bound [Angelsmark and Thapper ’04] goes to 4nsuperscript4𝑛4^{n} as k→∞→𝑘k\\rightarrow\\infty. As our first result, we show that this quadratic blow up is not necessary by utilizing the Fast-Fourier transform (FFT) to give a O∗​(2n)superscript𝑂superscript2𝑛O^{*}(2^{n}) time exact algorithm for computing the diameter of any k𝑘k-CNF formula. For s>2𝑠2s>2, the problem was raised in the SAT community (Nadel ’11) and several heuristics have been proposed for it, but no algorithms with theoretical guarantees are known. We give exact algorithms using FFT and clique-finding that run in O∗​(2(s−1)​n)superscript𝑂superscript2𝑠1𝑛O^{*}(2^{(s-1)n}) and O∗​(s2​|ΩF|ω​⌈s/3⌉)superscript𝑂superscript𝑠2superscriptsubscriptΩ𝐹𝜔𝑠3O^{*}(s^{2}|\\Omega_{F}|^{\\omega\\lceil s/3\\rceil}) respectively, where |ΩF|subscriptΩ𝐹|\\Omega_{F}| is the size of the solutions space of the formula F𝐹F and ω𝜔\\omega is the matrix multiplication exponent. However, current SAT algorithms for finding one solution run in time O∗​(2εk​n)superscript𝑂superscript2subscript𝜀𝑘𝑛O^{*}(2^{\\varepsilon_{k}n}) for εk≈1−Θ​(1/k)subscript𝜀𝑘1Θ1𝑘\\varepsilon_{k}\\approx 1-\\Theta(1/k), which is much faster than all above run times. As our main result, we analyze two popular SAT algorithms - PPZ (Paturi, Pudlak, Zane ’97) and Schöning’s (’02) algorithms, and show that in time poly​(s)​O∗​(2εk​n)poly𝑠superscript𝑂superscript2subscript𝜀𝑘𝑛\\text{poly}(s)O^{*}(2^{\\varepsilon_{k}n}), they can be used to approximate diameter as well as the dispersion (s>2𝑠2s>2) problem. While we need to modify Schöning’s original algorithm for technical reasons, we show that the PPZ algorithm, without any modification, samples solutions in a geometric sense. We believe this geometric sampling property of PPZ may be of independent interest. Finally, we focus on diverse solutions to NP-complete optimization problems, and give bi-approximations running in time poly​(s)​O∗​(2ε​n)poly𝑠superscript𝑂superscript2𝜀𝑛\\text{poly}(s)O^{*}(2^{\\varepsilon n}) with ε<1𝜀1\\varepsilon<1 for several problems such as Maximum Independent Set, Minimum Vertex Cover, Minimum Hitting Set, Feedback Vertex Set, Multicut on Trees and Interval Vertex Deletion. For all of these problems, all existing exact methods for finding optimal diverse solutions have a runtime with at least an exponential dependence on the number of solutions s𝑠s. Our methods show that by relaxing to bi-approximations, this dependence on s𝑠s can be made polynomial.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Formal analysis of the probability of interaction fault detection using random testing\",\n        \"SAT-based semiformal verification of hardware\",\n        \"Algorithms for the maximum Hamming distance problem\",\n        \"A microstructure based approach to constraint satisfaction optimisation problems\",\n        \"Diversity of solutions: An exploration through the lens of fixed-parameter tractability theory\",\n        \"Fpt algorithms for diverse collections of hitting sets\",\n        \"Max-sum diversification, monotone submodular functions and dynamic updates\",\n        \"Combinatorics: set systems, hypergraphs, families of vectors, and combinatorial probability\",\n        \"Improving a probabilistic 3-SAT algorithm by dynamic search and independent clause pairs\",\n        \"The exponential complexity of satisfiability problems\",\n        \"An improved analysis of local search for max-sum diversification\",\n        \"The complexity of unique k𝑘k-SAT: An isolation lemma for k𝑘k-CNFs\",\n        \"From algorithms to connectivity and back: finding a giant component in random k-sat\",\n        \"Solving and sampling with many solutions: Satisfiability and other hard problems\",\n        \"On the Hamming distance of constraint satisfaction problems\",\n        \"On the complexity of fixed parameter clique and dominating set\",\n        \"Local search: Is brute-force avoidable?\",\n        \"On the diameter of the set of satisfying assignments in random satisfiable k𝑘k-CNF formulas\",\n        \"Iterative compression and exact algorithms\",\n        \"Exact algorithms via monotone local search\",\n        \"Exact exponential algorithms\",\n        \"Clustering to minimize the maximum intercluster distance\",\n        \"Local enumeration and majority lower bounds\",\n        \"Near-uniform sampling of combinatorial spaces using XOR constraints\",\n        \"Breaking the PPSZ barrier for unique 3-SAT\",\n        \"Finding diverse and similar solutions in constraint programming\",\n        \"A fast deterministic algorithm for formulas that have many satisfying assignments\",\n        \"Faster k-SAT algorithms using biased-PPSZ\",\n        \"Improving PPSZ for 3-SAT using critical variables\",\n        \"A probabilistic 3-SAT algorithm further improved\",\n        \"Composable core-sets for diversity and coverage maximization\",\n        \"On the complexity of k-SAT\",\n        \"Which problems have strongly exponential complexity?\",\n        \"Finding a minimum circuit in a graph\",\n        \"Stimulus generation for constrained random simulation\",\n        \"A short implicant of a CNF formula with many satisfying assignments\",\n        \"Chain, generalization of covering code, and deterministic algorithm for k-SAT\",\n        \"Solving Min-Ones-222-SAT as fast as vertex cover\",\n        \"The theory of error-correcting codes, volume 16\",\n        \"Generating diverse solutions in SAT\",\n        \"Analysis of boolean functions\",\n        \"Uniform sampling of SAT solutions for configurable systems: Are we there yet?\",\n        \"An improved exponential-time algorithm for k𝑘k-SAT\",\n        \"Satisfiability Coding Lemma\",\n        \"Enriching solutions to combinatorial problems via solution engineering\",\n        \"Introduction to Coding Theory\",\n        \"Heuristic and special case algorithms for dispersion problems\",\n        \"The complexity of satisfiability problems\",\n        \"A probabilistic algorithm for k𝑘k-SAT and constraint satisfaction problems\",\n        \"A probabilistic algorithm for k𝑘k-SAT based on limited local search and restart\",\n        \"PPSZ for k ≥\\\\geq 5: More is better\",\n        \"PPSZ is better than you think\",\n        \"Approximate counting, uniform generation and rapidly mixing markov chains\",\n        \"PPSZ for general k-sat - making hertli’s analysis simpler and 3-sat faster\",\n        \"Exploiting independent subformulas: A faster approximation scheme for #​k#𝑘\\\\#k-SAT\",\n        \"A tighter bound for counting max-weight solutions to 2SAT instances\",\n        \"Some open problems in fine-grained complexity\",\n        \"New bounds for matrix multiplication: from alpha to omega\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in On the geometry of 𝑘-SAT solutions: what more can PPZ and Schöning’s algorithms do?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}