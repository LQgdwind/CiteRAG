{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Project and Conquer: Fast Quantifier Elimination for Checking Petri Net Reachability\n\nPaper Abstract: Abstract We propose a method for checking generalized reachability properties in Petri nets that takes advantage of structural reductions and that can be used, transparently, as a pre-processing step of existing model-checkers. Our approach is based on a new procedure that can project a property, about an initial Petri net, into an equivalent formula that only refers to the reduced version of this net. Our projection is defined as a variable elimination procedure for linear integer arithmetic tailored to the specific kind of constraints we handle. It has linear complexity, is guaranteed to return a sound property, and makes use of a simple condition to detect when the result is exact. Experimental results show that our approach works well in practice and that it can be useful even when there is only a limited amount of reductions. Keywords— Petri nets; Quantifier elimination; Reachability problems.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"30 years of GreatSPN\",\n        \"Presentation of the 9th Edition of the Model Checking Contest\",\n        \"On the Combination of Polyhedral Abstraction and SMT-based Model Checking for Petri nets\",\n        \"A Polyhedral Abstraction for Petri Nets and its Application to SMT-Based Model Checking\",\n        \"Leveraging polyhedral reductions for solving Petri net reachability problems\",\n        \"Accelerating the Computation of Dead and Concurrent Places using Reductions\",\n        \"Artifact for VMCAI 2024 Paper Project and Conquer: Fast Quantifier Elimination for Checking Petri Net Reachability\",\n        \"Automated Polyhedral Abstraction Proving\",\n        \"Octant (version 1.0): projection of Petri net reachability properties\",\n        \"A polynomial time algorithm for solving systems of linear inequalities with two variables per inequality\",\n        \"SMPT: A Testbed for Reachability Methods in Generalized Petri Nets\",\n        \"Ultimate Eliminator at SMT-COMP 2022\",\n        \"Stubborn versus structural reductions for Petri nets\",\n        \"Transformations and Decompositions of Nets\",\n        \"Petri net reductions for counting markings\",\n        \"Counting Petri net markings from reduction equations\",\n        \"The tool TINA – Construction of abstract state spaces for Petri nets and time Petri nets\",\n        \"Automatic discovery of linear restraints among variables of a program\",\n        \"Model checking\",\n        \"Theorem proving in arithmetic without multiplication\",\n        \"TAPAAL 2.0: Integrated Development Environment for Timed-Arc Petri Nets\",\n        \"Redlog: Computer algebra meets computer logic\",\n        \"Polyhedron Model\",\n        \"From many places to few: Automatic abstraction refinement for Petri nets\",\n        \"A survival guide to Presburger arithmetic\",\n        \"Integral boundary points of convex polyhedra\",\n        \"Practical issues on the projection of polyhedral sets\",\n        \"Fourier’s elimination: Which to choose?\",\n        \"Apron: A library of numerical abstract domains for static analysis\",\n        \"Complete Results for the 2022 Edition of the Model Checking Contest\",\n        \"Abstraction-based incremental inductive coverability for Petri nets\",\n        \"A survey of Petri nets slicing\",\n        \"Model SmallOperatingSystem, Model Checking Contest benchmark\",\n        \"Tina Toolbox\",\n        \"An Integrated Environment for Petri Net Slicing\",\n        \"TaPAS: the Talence Presburger arithmetic suite\",\n        \"Weak quantifier elimination for the full linear theory of the integers: A uniform generalization of Presburger arithmetic\",\n        \"The octagon abstract domain\",\n        \"Quantifier elimination by lazy model enumeration\",\n        \"The Omega Test: A Fast and Practical Integer Programming Algorithm for Dependence Analysis\",\n        \"Safety slicing Petri nets\",\n        \"Checking Safety Properties Using Induction and a SAT-Solver\",\n        \"Symbolic Model-Checking Using ITS-Tools\",\n        \"Symbolic and structural model-checking\",\n        \"isl: An integer set library for the polyhedral model\",\n        \"Petri Net Model Checking with LoLA 2\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Project and Conquer: Fast Quantifier Elimination for Checking Petri Net Reachability, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}