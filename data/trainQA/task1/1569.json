{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Reinforcement Learning Development with RLzoo\n\nPaper Abstract: Abstract Many researchers and developers are exploring for adopting Deep Reinforcement Learning (DRL) techniques in their applications. They however often find such an adoption challenging. Existing DRL libraries provide poor support for prototyping DRL agents (i.e., models), customising the agents, and comparing the performance of DRL agents. As a result, the developers often report low efficiency in developing DRL agents. In this paper, we introduce RLzoo, a new DRL library that aims to make the development of DRL agents efficient. RLzoo provides developers with (i) high-level yet flexible APIs for prototyping DRL agents, and further customising the agents for best performance, (ii) a model zoo where users can import a wide range of DRL agents and easily compare their performance, and (iii) an algorithm that can automatically construct DRL agents with custom components (which are critical to improve agent’s performance in custom applications). Evaluation results show that RLzoo can effectively reduce the development cost of DRL agents, while achieving comparable performance with existing DRL libraries.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Human-level control through deep reinforcement learning\",\n        \"Continuous control with deep reinforcement learning\",\n        \"Reinforcement learning in robotics: A survey\",\n        \"Crossing the gap: A deep dive into zero-shot sim-to-real transfer for dynamics\",\n        \"Learning robust control policies for end-to-end autonomous driving from data-driven simulation\",\n        \"Distort-and-recover: Color enhancement using deep reinforcement learning\",\n        \"Fully convolutional network with multi-step reinforcement learning for image processing\",\n        \"Learning to optimize neural nets\",\n        \"Openai gym\",\n        \"Rlbench: The robot learning benchmark & learning environment\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Trust region policy optimization\",\n        \"Rllib: Abstractions for distributed reinforcement learning\",\n        \"Emergence of locomotion behaviours in rich environments\",\n        \"Openai baselines\",\n        \"Reinforcement learning coach\",\n        \"Tianshou\",\n        \"keras-rl\",\n        \"Tensorforce: a tensorflow library for applied reinforcement learning\",\n        \"Impala: Scalable distributed deep-rl with importance weighted actor-learner architectures\",\n        \"Tensorflow: Large-scale machine learning on heterogeneous distributed systems\",\n        \"Tensorlayer: a versatile library for efficient deep learning development\",\n        \"Kungfu: Making training in distributed machine learning adaptive\",\n        \"Deep Reinforcement Learning: Fundamentals, Research and Applications\",\n        \"Deep reinforcement learning with double q-learning\",\n        \"Dueling network architectures for deep reinforcement learning\",\n        \"Noisy networks for exploration\",\n        \"Prioritized experience replay\",\n        \"Hindsight experience replay\",\n        \"Addressing function approximation error in actor-critic methods\",\n        \"Soft actor-critic: Off-policy maximum entropy deep reinforcement learning with a stochastic actor\",\n        \"Asynchronous methods for deep reinforcement learning\",\n        \"Proximal policy optimization algorithms\",\n        \"Ray: A distributed framework for emerging ai applications\",\n        \"Acme: A research framework for distributed reinforcement learning\",\n        \"Horizon: Facebook’s open source applied reinforcement learning platform\",\n        \"Garage: A toolkit for reproducible reinforcement learning research\",\n        \"Mushroomrl: Simplifying reinforcement learning research\",\n        \"Rainbow: Combining improvements in deep reinforcement learning\",\n        \"Sample efficient actor-critic with experience replay\",\n        \"Scalable trust-region method for deep reinforcement learning using kronecker-factored approximation\",\n        \"Safe and efficient off-policy reinforcement learning\",\n        \"A distributional perspective on reinforcement learning\",\n        \"Distributional reinforcement learning with quantile regression\",\n        \"Continuous deep q-learning with model-based acceleration\",\n        \"Pybullet, a python module for physics simulation for games, robotics and machine learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Efficient Reinforcement Learning Development with RLzoo, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}