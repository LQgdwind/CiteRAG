{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Dissecting Chain-of-Thought: A Study on Compositional In-Context Learning of MLPs\n\nPaper Abstract: Abstract Chain-of-thought (CoT) is a method that enables language models to handle complex reasoning tasks by decomposing them into simpler steps. Despite its success, the underlying mechanics of CoT are not yet fully understood. In an attempt to shed light on this, our study investigates the impact of CoT on the ability of transformers to in-context learn a simple to study, yet general family of compositional functions: multi-layer perceptrons (MLPs). In this setting, we find that the success of CoT can be attributed to breaking down in-context learning of a compositional function into two distinct phases: focusing on and filtering data related to each step of the composition and in-context learning the single-step composition function. Through both experimental and theoretical evidence, we demonstrate how CoT significantly reduces the sample complexity of in-context learning (ICL) and facilitates the learning of complex functions that non-CoT methods struggle with. Furthermore, we illustrate how transformers can transition from vanilla in-context learning to mastering a compositional function with CoT by simply incorporating additional layers that perform the necessary data-filtering for CoT via the attention mechanism. In addition to these test-time benefits, we show CoT helps accelerate pretraining by learning shortcuts to represent complex functions and filtering plays an important role in this process. These findings collectively provide insights into the mechanics of CoT, inviting further investigation of its role in complex reasoning tasks.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Transformers learn to implement preconditioned gradient descent for in-context learning\",\n        \"What learning algorithm is in-context learning? investigations with linear models\",\n        \"Can transformers learn optimal filtering for unknown systems?\",\n        \"Language models are few-shot learners\",\n        \"Why can gpt learn in-context? language models secretly perform gradient descent as meta optimizers\",\n        \"Faith and fate: Limits of transformers on compositionality\",\n        \"What can transformers learn in-context? a case study of simple function classes\",\n        \"Looped transformers as programmable computers\",\n        \"Reliably learning the relu in polynomial time\",\n        \"Tight hardness results for training depth-2 relu networks\",\n        \"A theory of emergent in-context learning as implicit structure induction\",\n        \"Mathprompter: Mathematical reasoning using large language models\",\n        \"Can language models learn from explanations in context?\",\n        \"Learning to reason and memorize with self-notes\",\n        \"Teaching arithmetic to small transformers\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"A theoretical understanding of shallow vision transformers: Learning, generalization, and sample complexity\",\n        \"Symbolic chain-of-thought distillation: Small models can also\\\" think\\\" step-by-step\",\n        \"Transformers as algorithms: Generalization and stability in in-context learning\",\n        \"Memorize or generalize? searching for a compositional rnn in a haystack\",\n        \"Transformers learn shortcuts to automata\",\n        \"Z-icl: Zero-shot in-context learning with pseudo-demonstrations\",\n        \"Metaicl: Learning to learn in context\",\n        \"Rethinking the role of demonstrations: What makes in-context learning work?\",\n        \"Wt5?! training text-to-text models to explain their predictions\",\n        \"Show your work: Scratchpads for intermediate computation with language models\",\n        \"On the turing completeness of modern neural network architectures\",\n        \"Attention is turing complete\",\n        \"Automatic code generation using pre-trained language models\",\n        \"Language models are unsupervised multitask learners\",\n        \"Learning to compose skills\",\n        \"Attention is all you need\",\n        \"Neural algorithmic reasoning\",\n        \"Transformers learn in-context by gradient descent\",\n        \"Uncovering mesa-optimization algorithms in transformers\",\n        \"Statistically meaningful approximation: a case study on approximating turing machines with transformers\",\n        \"Emergent abilities of large language models\",\n        \"Chain of thought prompting elicits reasoning in large language models\",\n        \"Larger language models do in-context learning differently\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"An explanation of in-context learning as implicit bayesian inference\",\n        \"How well do large language models perform in arithmetic tasks?\",\n        \"Are transformers universal approximators of sequence-to-sequence functions?\",\n        \"Learning one-hidden-layer relu networks via gradient descent\",\n        \"Teaching algorithmic reasoning via in-context learning\",\n        \"What algorithms can transformers learn? a study in length generalization\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Dissecting Chain-of-Thought: A Study on Compositional In-Context Learning of MLPs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}