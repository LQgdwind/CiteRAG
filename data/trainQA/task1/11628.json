{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: MetaFFI - Multilingual Indirect Interoperability System\n\nPaper Abstract: Abstract. The development of software applications using multiple programming languages has increased in recent years, as it allows the selection of the most suitable language and runtime for each component of the system and the integration of third-party libraries. However, this practice involves complexity and error proneness, due to the absence of an adequate system for the interoperability of multiple programming languages. Developers are compelled to resort to workarounds, such as library reimplementation or language-specific wrappers, which are often dependent on C as the common denominator for interoperability. These challenges render the use of multiple programming languages a burdensome and demanding task that necessitates highly skilled developers for implementation, debugging, and maintenance, and raise doubts about the benefits of interoperability. To overcome these challenges, we propose MetaFFI, a pluggable in-process indirect-interoperability system that allows the loading and utilization of entities from multiple programming languages. This is achieved by exploiting the less restrictive shallow binding mechanisms (e.g., Foreign Function Interface) to offer deep binding features (e.g., object creation, methods, fields). MetaFFI provides a runtime-independent framework to load and xcall (Cross-Call) foreign entities (e.g., functions, objects). MetaFFI uses Common Data Types (CDTs) to pass parameters and return values, including objects and complex types, and even cross-language callbacks. The indirect interoperability approach of MetaFFI has the significant advantage of requiring only 2​n2𝑛2n mechanisms to support n𝑛n languages, as opposed to the direct interoperability approaches that need n2superscript𝑛2n^{2} mechanisms. We have successfully tested the binding between Go, Python3.11, and Java in a proof-of-concept on Windows and Ubuntu.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"dlopen(3) - Linux man page\",\n        \"dlsym(3) - Linux man page\",\n        \"PATH and CLASSPATH (The Java™ Tutorials > Essential Java Classes > The Platform Environment)\",\n        \"PEP 684 – A Per-Interpreter GIL | peps.python.org.\",\n        \"SWIG: An easy to use tool for integrating scripting languages with C and C++.\",\n        \"Hypertext markup language - 2.0\",\n        \"The JavaScript object notation (JSON) data interchange format\",\n        \"JRuby - an implementation of the Ruby language on the JVM\",\n        \"Empirical Study on Multi-Lingual & Interoperability Usage [In preparation]\",\n        \"Foreign language interfaces by code migration\",\n        \"The challenge of cross-language interoperability\",\n        \"GObject\",\n        \"Interface description language — Wikipedia, the free encyclopedia\",\n        \".NET | free. Cross-platform. Open source. 2020\",\n        \"Object linking and embedding (OLE)\",\n        \"Thread-Local Storage\",\n        \"SWIG Master Class\",\n        \"Cascading style sheets (CSS) requirements for RFCs\",\n        \"Apache log4net: A .NET framework logging library\",\n        \"Apache log4j 2.14.1\",\n        \"Apache log4cxx: A logging framework for C++\",\n        \"Haxe - The Cross-platform toolkit\",\n        \"IronPython.net\",\n        \"Design of CPython’s Garbage Collector - Python Developer’s Guide\",\n        \"ctypes — A foreign function library for Python — Python 3.8.3 documentation\",\n        \"Jython\",\n        \"An overview of memory management in Go\",\n        \"Common language runtime (CLR) overview - .NET framework\",\n        \"LibFFI\",\n        \"Cross-language interoperability in a multi-language runtime\",\n        \"About the common object request broker architecture specification version 3.4 beta\",\n        \"Standard ECMA-335 2012\",\n        \"Why IDLs are not ideal\",\n        \"GetProcAddress function (libloaderapi.h) - Win32 apps\",\n        \"LoadLibraryA function (libloaderapi.h) - Win32 apps\",\n        \"LLVM: a compilation framework for lifelong program analysis amp; transformation\",\n        \"The java virtual machine specification\",\n        \"cgo - the go programming language 2020\",\n        \"On multi-language software development, cross-language links and accompanying tools: a survey of professional software developers\",\n        \"Component object model (COM) - win32 apps\",\n        \"VARIANT (oaidl.h) - win32 apps | microsoft docs\",\n        \"Memory Management in the Java HotSpot Virtual Machine\",\n        \"Remote procedure call\",\n        \"What’s New in Emacs 26.1\",\n        \"GObject Introspection\",\n        \"Guidelines for the use of extensible markup language (XML) within IETF protocols\",\n        \"GNU Make: a program for directing recompliation ; GNU make version 3.81\",\n        \"How To define and implement a new GObject?\",\n        \"Vala - Compiler Using the GObject Type System\",\n        \"Reasoning about foreign function interfaces without modelling the foreign language (artifact)\",\n        \"Cross-language, type-safe, and transparent object sharing for co-located managed runtimes\",\n        \"Foreign function interface\",\n        \"HotSpot (virtual machine) — Wikipedia, the free encyclopedia\",\n        \"Stored procedure — Wikipedia, the free encyclopedia\",\n        \"Name mangling — Wikipedia, the free encyclopedia\",\n        \"The GLib/GTK+ development platform\",\n        \"Declarative foreign function binding through generic programming\",\n        \"log4python: log for python like java log4j2\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in MetaFFI - Multilingual Indirect Interoperability System, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}