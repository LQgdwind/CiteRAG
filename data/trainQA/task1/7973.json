{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: OpenHLS: High-Level Synthesis for Low-Latency Deep Neural Networks for Experimental Science\n\nPaper Abstract: Abstract. In many experiment-driven scientific domains, such as high-energy physics, material science, and cosmology, high data rate experiments impose hard constraints on data acquisition systems: collected data must either be indiscriminately stored for post-processing and analysis, thereby necessitating large storage capacity, or accurately filtered in real-time, thereby necessitating low-latency processing. Deep neural networks, effective in other filtering tasks, have not been widely employed in such data acquisition systems, due to design and deployment difficulties. We present an open source, lightweight, compiler framework, without any proprietary dependencies, OpenHLS, based on high-level synthesis techniques, for translating high-level representations of deep neural networks to low-level representations, suitable for deployment to near-sensor devices such as field-programmable gate arrays. We evaluate OpenHLS on various workloads and present a case-study implementation of a deep neural network for Bragg peak detection in the context of high-energy diffraction microscopy. We show OpenHLS is able to produce an implementation of the network with a throughput 4.8 µs/sample, which is approximately a 4×\\times improvement over the existing implementation.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Create placed and routed DCP to cross SLR\",\n        \"UltraScale Architecture DSP Slice\",\n        \"Allen: A high-level trigger on GPUs for LHCb\",\n        \"TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems\",\n        \"Review of deep learning: Concepts, CNN architectures, challenges, applications, future directions\",\n        \"On Optimizing Machine Learning Workloads via Kernel Fusion\",\n        \"Scheduling algorithms for high-level synthesis\",\n        \"Bridging Python to Silicon: The SODA Toolchain\",\n        \"Polyhedral compilation opportunities in MLIR\",\n        \"LegUp: An Open-Source High-Level Synthesis Tool for FPGA-Based Processor/Accelerator Systems\",\n        \"MXNet: A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems\",\n        \"TVM: An automated end-to-end optimizing compiler for deep learning\",\n        \"Training Deep Nets with Sublinear Memory Cost\",\n        \"Comparison of particle selection algorithms for the LHCb Upgrade\",\n        \"A Scalable Approach to Exact Resource-Constrained Scheduling Based on a Joint SDC and SAT Formulation\",\n        \"Reflections on 10 Years of FloPoCo\",\n        \"Fast inference of deep neural networks in FPGAs for particle physics\",\n        \"Bambu: an Open-Source Research Framework for the High-Level Synthesis of Complex Applications\",\n        \"Real-time data analysis at the LHC: present and future\",\n        \"Efficient, reliable and fast high-level triggering using a bonsai boosted decision tree\",\n        \"Square Kilometre Array: The radio telescope of the XXI century\",\n        \"AutoBridge: Coupling Coarse-Grained Floorplanning and Pipelining for High-Frequency HLS Design on Multi-Die FPGAs\",\n        \"Strategies for on-chip digital data compression for X-ray pixel detectors\",\n        \"Gradual Tensor Shape Checking\",\n        \"Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift\",\n        \"MLIR: A compiler infrastructure for the end of Moore’s Law\",\n        \"Xilinx ultrascale: The next-generation architecture for your next-generation architecture\",\n        \"Optimizing CNN Model Inference on CPUs\",\n        \"Exploring physics of ferroelectric domain walls in real time: Deep learning enabled scanning probe microscopy\",\n        \"Deep learning accelerated light source experiments\",\n        \"BraggNN: fast X-ray Bragg peak analysis using deep learning\",\n        \"An evaluation of vectorizing compilers\",\n        \"The Square Kilometre Array project update\",\n        \"A Survey and Evaluation of FPGA High-Level Synthesis Tools\",\n        \"Advances in ILP-based Modulo Scheduling for High-Level Synthesis\",\n        \"How to make hardware with maths: An introduction to CIRCT’s scheduling infrastructure\",\n        \"Automatic differentiation in PyTorch\",\n        \"167-Pflops deep learning for electron microscopy: From learning physics to atomic manipulation\",\n        \"Dependence Analysis and Parallelizing Transformations\",\n        \"DaCeML: A Data-Centric Optimization Framework for Machine Learning\",\n        \"Cocotb: a Python-based digital logic verification framework\",\n        \"Glow: Graph Lowering Compiler Techniques for Neural Networks\",\n        \"From high-level deep neural models to FPGAs\",\n        \"Torch-MLIR\",\n        \"Pyverilog: A Python-based hardware design processing toolkit for Verilog HDL\",\n        \"Icarus Verilog, 1998–2020\",\n        \"ScaleHLS: A New Scalable High-Level Synthesis Framework on Multi-Level Intermediate Representation\",\n        \"AutoPilot: A Platform-Based ESL Synthesis System\",\n        \"NeoFlow: A Flexible Framework for Enabling Efficient Compilation for High Performance DNN Training\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in OpenHLS: High-Level Synthesis for Low-Latency Deep Neural Networks for Experimental Science, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}