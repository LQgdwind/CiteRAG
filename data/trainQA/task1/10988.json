{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Automatic and Universal Prompt Injection Attacks against Large Language Models\n\nPaper Abstract: Abstract Large Language Models (LLMs) excel in processing and generating human language, powered by their ability to interpret and follow instructions. However, their capabilities can be exploited through prompt injection attacks. These attacks manipulate LLM-integrated applications into producing responses aligned with the attacker’s injected content, deviating from the user’s actual requests. The substantial risks posed by these attacks underscore the need for a thorough understanding of the threats. Yet, research in this area faces challenges due to the lack of a unified goal for such attacks and their reliance on manually crafted prompts, complicating comprehensive assessments of prompt injection robustness. We introduce a unified framework for understanding the objectives of prompt injection attacks and present an automated gradient-based method for generating highly effective and universal prompt injection data, even in the face of defensive measures. With only five training samples (0.3%percent0.30.3\\% relative to the test data), our attack can achieve superior performance compared with baselines. Our findings emphasize the importance of gradient-based testing, which can avoid overestimation of robustness, especially for defense mechanisms. Code is available at https://github.com/SheltonLiu-N/Universal-Prompt-Injection\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learn Prompting\",\n        \"Contributions to the study of sms spam filtering: New collection and results\",\n        \"Detecting language model attacks with perplexity\",\n        \"Evaluating the Susceptibility of Pre-Trained Language Models via Handcrafted Adversarial Examples\",\n        \"Language models are few-shot learners\",\n        \"Jailbreaking black box large language models in twenty queries\",\n        \"Shapeshifter: Robust physical adversarial attack on faster r-cnn object detector\",\n        \"Automated hate speech detection and the problem of offensive language\",\n        \"Jailbreaker: Automated jailbreak across multiple large language model chatbots\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"HotFlip: White-Box Adversarial Examples for Text Classification\",\n        \"English gigaword\",\n        \"Not what you’ve signed up for: Compromising Real-World LLM-Integrated Applications with Indirect Prompt Injection\",\n        \"Securing LLM Systems Against Prompt Injection\",\n        \"Predicting grammaticality on an ordinal scale\",\n        \"Catastrophic jailbreak of open-source llms via exploiting generation\",\n        \"Baseline defenses for adversarial attacks against aligned language models\",\n        \"Challenges and Applications of Large Language Models\",\n        \"Autodan: Generating stealthy jailbreak prompts on aligned large language models\",\n        \"Prompt Injection attack against LLM-integrated Applications\",\n        \"Prompt Injection Attacks and Defenses in LLM-Integrated Applications\",\n        \"Jfleg: A fluency corpus and benchmark for grammatical error correction\",\n        \"GPT-4 Technical Report\",\n        \"Training language models to follow instructions with human feedback\",\n        \"OWASP Top 10 for LLM Applications\",\n        \"From Prompt Injections to SQL Injection Attacks: How Protected is Your LLM-Integrated Web Application?\",\n        \"Ignore Previous Prompt: Attack Techniques For Language Models\",\n        \"Jatmo: Prompt Injection Defense by Task-Specific Finetuning\",\n        \"A neural attention model for abstractive sentence summarization\",\n        \"Maatphor: Automated Variant Analysis for Prompt Injection Attacks\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Trustllm: Trustworthiness in large language models\",\n        \"On the importance of initialization and momentum in deep learning\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Tensor Trust: Interpretable Prompt Injection Attacks from an Online Game\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Safeguarding Crowdsourcing Surveys from ChatGPT with Prompt Injection\",\n        \"Neural network acceptability judgments\",\n        \"Jailbroken: How does llm safety training fail?\",\n        \"Prompt injection attacks against GPT-3\",\n        \"Delimiters won’t save you from prompt injection\",\n        \"Cognitive overload: Jailbreaking large language models with overloaded logical thinking\",\n        \"Backdooring Instruction-Tuned Large Language Models with Virtual Prompt Injection\",\n        \"Benchmarking and Defending Against Indirect Prompt Injection Attacks on Large Language Models\",\n        \"A Novel Evaluation Framework for Assessing Resilience Against Prompt Injection Attacks in Large Language Models\",\n        \"Low-resource languages jailbreak gpt-4\",\n        \"Assessing Prompt Injection Risks in 200+ Custom GPTs\",\n        \"Universal and Transferable Adversarial Attacks on Aligned Language Models\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Automatic and Universal Prompt Injection Attacks against Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}