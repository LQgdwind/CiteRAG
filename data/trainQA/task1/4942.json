{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: iRoPro: An interactive Robot Programming Framework\n\nPaper Abstract: Abstract The great diversity of end-user tasks ranging from manufacturing environments to personal homes makes pre-programming robots for general purpose applications extremely challenging. In fact, teaching robots new actions from scratch that can be reused for previously unseen tasks remains a difficult challenge and is generally left up to robotics experts. In this work, we present iRoPro, an interactive Robot Programming framework that allows end-users with little to no technical background to teach a robot new reusable actions. We combine Programming by Demonstration and Automated Planning techniques to allow the user to construct the robot’s knowledge base by teaching new actions by kinesthetic demonstration. The actions are generalised and reused with a task planner to solve previously unseen problems defined by the user. We implement iRoPro as an end-to-end system on a Baxter Research Robot to simultaneously teach low- and high-level actions by demonstration that the user can customise via a Graphical User Interface to adapt to their specific use case. To evaluate the feasibility of our approach, we first conducted pre-design experiments to better understand the user’s adoption of involved concepts and the proposed robot programming process. We compare results with post-design experiments, where we conducted a user study to validate the usability of our approach with real end-users. Overall, we showed that users with different programming levels and educational backgrounds can easily learn and use iRoPro and its robot programming process.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning manipulation actions from a few demonstrations\",\n        \"Learning symbolic representations of actions from human demonstrations\",\n        \"Keyframe-based learning from demonstration\",\n        \"Robot Programming by Demonstration with Interactive Action Visualizations\",\n        \"A survey of robot learning from demonstration\",\n        \"An empirical evaluation of the system usability scale\",\n        \"A Survey of Robot Programming Systems\",\n        \"Robot programming by demonstration\",\n        \"SUS: A retrospective\",\n        \"Incremental learning of gestures by imitation in a humanoid robot\",\n        \"Sami: Interactive, multi-sense robot architecture\",\n        \"ROSPlan: Planning in the Robot Operating System\",\n        \"STRIPS: A new approach to the application of theorem proving to problem solving\",\n        \"Blockly: A visual programming editor\",\n        \"The Rise of the Robotic Work Force\",\n        \"Baxter eyes\",\n        \"Automated planning: Theory & Practice\",\n        \"Reinforcement learning: A tutorial survey and recent advances\",\n        \"The FF planning system: Fast plan generation through heuristic search\",\n        \"Learning grounded relational symbols from continuous data for abstract reasoning\",\n        \"Reinforcement learning: A survey\",\n        \"From skills to symbols: Learning symbolic representations for abstract high-level planning\",\n        \"Closed-loop robot task planning based on referring expressions\",\n        \"Lego mindstorms\",\n        \"Learning object orientation constraints and guiding constraints for narrow passages from one demonstration\",\n        \"Evaluation of a robot programming framework for non-experts using symbolic planning representations\",\n        \"A framework for robot programming in cobotic environments: First user experiments\",\n        \"End-User Programming of Low- and High-Level Actions for Robotic Task Planning\",\n        \"Simultaneous End-User Programming of Goals and Actions for Robotic Shelf Organization\",\n        \"Learn to program with Scratch: a visual introduction to programming with games, art, science, and math\",\n        \"THEDRE: a Traceable Process for High Quality in Human Centred Computer Science Research\",\n        \"Learning and generalization of complex tasks from unstructured demonstrations\",\n        \"Ontology for autonomous robotics\",\n        \"Assessing interaction dynamics in the context of robot programming by demonstration\",\n        \"Learning and generalization of motor skills by learning from demonstration\",\n        \"CoSTAR: Instructing collaborative robots with behavior trees and vision\",\n        \"Intuitive instruction of industrial robots: Semantic process descriptions for small lot production\",\n        \"Inspect, edit and debug PDDL documents: Simply and efficiently with PDDL studio\",\n        \"ROS: an open-source Robot Operating System\",\n        \"Predicting net promoter scores from system usability scale scores\",\n        \"Deep learning in neural networks: An overview\",\n        \"Teaching robots new actions through natural language instructions\",\n        \"Planning domain definition using GIPO\",\n        \"Simplified programming of re-usable skills on a safe industrial robot: Prototype and evaluation\",\n        \"A practical comparison of three robot learning from demonstration algorithm\",\n        \"Bottom-up learning of object categories, action effects and logical rules: From continuous manipulative exploration to symbolic planning\",\n        \"itSIMPLE: towards an integrated design system for real planning applications\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in iRoPro: An interactive Robot Programming Framework, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}