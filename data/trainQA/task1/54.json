{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Ordering: Towards the Optimal by Learning\n\nPaper Abstract: Abstract. Graph representation learning has achieved a remarkable success in many graph-based applications, such as node classification, link prediction, and community detection. These models are usually designed to preserve the vertex information at different granularity and reduce the problems in discrete space to some machine learning tasks in continuous space. However, regardless of the fruitful progress, for some kind of graph applications, such as graph compression and edge partition, it is very hard to reduce them to some graph representation learning tasks. Moreover, these problems are closely related to reformulating a global layout for a specific graph, which is an important NP-hard combinatorial optimization problem: graph ordering. In this paper, we propose to attack the graph ordering problem behind such applications by a novel learning approach. Distinguished from greedy algorithms based on predefined heuristics, we propose a neural network model: Deep Order Network (DON) to capture the hidden locality structure from partial vertex order sets. Supervised by sampled partial order, DON has the ability to infer unseen combinations. Furthermore, to alleviate the combinatorial explosion in the training space of DON and make the efficient partial vertex order sampling , we employ a reinforcement learning model: the Policy Network, to adjust the partial order sampling probabilities during the training phase of DON automatically. To this end, the Policy Network can improve the training efficiency and guide DON to evolve towards a more effective model automatically. The training of two networks is performed interactively and the whole framework is called DON-RL. Comprehensive experiments on both synthetic and real data validate that DON-RL outperforms the current state-of-the-art heuristic algorithm consistently. Two case studies on graph compression and edge partitioning demonstrate the potential power of DON-RL in real applications.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"KONECT (the koblenz network collection)\",\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Distributed large-scale natural graph factorization\",\n        \"Attention, learn to solve routing problems!\",\n        \"Concorde tsp solver\",\n        \"Matrix reordering methods for table and network visualization\",\n        \"Laplacian eigenmaps and spectral techniques for embedding and clustering\",\n        \"Neural combinatorial optimization with reinforcement learning\",\n        \"Balanced graph edge partition\",\n        \"12.6\",\n        \"Approximation with artificial neural networks\",\n        \"A survey on network embedding\",\n        \"metapath2vec: Scalable representation learning for heterogeneous networks\",\n        \"Inf2vec: Latent representation model for social influence embedding\",\n        \"Graph embedding for pattern analysis\",\n        \"Powergraph: Distributed graph-parallel computation on natural graphs\",\n        \"Graphx: Graph processing in a distributed dataflow framework\",\n        \"Thompson sampling for complex online problems\",\n        \"node2vec: Scalable feature learning for networks\",\n        \"Representation learning on graphs: Methods and applications\",\n        \"An embedding approach to anomaly detection\",\n        \"Beyond ’caveman communities’: Hubs and spokes for graph compression and mining\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Actor-critic algorithms\",\n        \"SNAP Datasets: Stanford large network dataset collection\",\n        \"Combinatorial optimization with graph convolutional networks and guided tree search\",\n        \"Predict anchor links across social networks via an embedding approach\",\n        \"Random graphs with arbitrary degree distributions and their applications\",\n        \"Deepwalk: online learning of social representations\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Neural networks for combinatorial optimization: A review of more than a decade of research\",\n        \"Reinforcement learning - an introduction\",\n        \"LINE: large-scale information network embedding\",\n        \"Representation learning over dynamic graphs\",\n        \"VERSE: versatile graph embeddings from similarity measures\",\n        \"Multi-label classification: An overview\",\n        \"Attention is all you need\",\n        \"Pointer networks\",\n        \"Community preserving network embedding\",\n        \"Speedup graph processing by graph ordering\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Deep sets\",\n        \"Graph edge partitioning via neighborhood heuristic\",\n        \"Arbitrary-order proximity preserved network embedding\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Graph Ordering: Towards the Optimal by Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}