{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Translating Subgraphs to Nodes Makes Simple GNNs Strong and Efficient for Subgraph Representation Learning\n\nPaper Abstract: Abstract Subgraph representation learning has emerged as an important problem, but it is by default approached with specialized graph neural networks on a large global graph. These models demand extensive memory and computational resources but challenge modeling hierarchical structures of subgraphs. In this paper, we propose Subgraph-To-Node (S2N) translation, a novel formulation for learning representations of subgraphs. Specifically, given a set of subgraphs in the global graph, we construct a new graph by coarsely transforming subgraphs into nodes. Demonstrating both theoretical and empirical evidence, S2N not only significantly reduces memory and computational costs compared to state-of-the-art models but also outperforms them by capturing both local and global structures of the subgraph. By leveraging graph coarsening methods, our method outperforms baselines even in a data-scarce setting with insufficient subgraphs. Our experiments on eight benchmarks demonstrate that fined-tuned models with S2N translation can process 183 â€“ 711 times more subgraph samples than state-of-the-art models at a better or similar performance level.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Sub2vec: Feature learning for subgraphs\",\n        \"Optuna: A next-generation hyperparameter optimization framework\",\n        \"Subgraph neural networks\",\n        \"Gene ontology: tool for the unification of biology\",\n        \"Network science\",\n        \"Emergence of scaling in random networks\",\n        \"Question answering with subgraph embeddings\",\n        \"Improving graph neural network expressivity via subgraph isomorphism counting\",\n        \"How attentive are graph attention networks?\",\n        \"Graph coarsening with neural networks\",\n        \"Simple and deep graph convolutional networks\",\n        \"Graph theory in the information age\",\n        \"The gene ontology resource: 20 years and still going strong\",\n        \"Graphzoom: A multi-level spectral approach for accurate and scalable graph embedding\",\n        \"Graph neural networks with learnable structural and positional representations\",\n        \"PyTorch Lightning\",\n        \"Slaps: Self-supervision improves structure learning for graph neural networks\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Hierarchical inter-message passing for learning on molecular graphs\",\n        \"Learning discrete structures for graph neural networks\",\n        \"Subgraph representation learning for team mining\",\n        \"New diagnostic approaches for undiagnosed rare genetic diseases\",\n        \"Deep residual learning for image recognition\",\n        \"A generalization of vit/mlp-mixer to graphs\",\n        \"Scaling up graph neural networks via graph coarsening\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Junction tree variational autoencoder for molecular graph generation\",\n        \"Graph condensation for graph neural networks\",\n        \"How to find your friendly neighborhood: Graph attention design with self-supervision\",\n        \"Models and benchmarks for representation learning of partially observed subgraphs\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Expansion of the human phenotype ontology (hpo) knowledge base and resources\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Large scale learning on non-homophilous graphs: New benchmarks and strong simple methods\",\n        \"Graph reduction with spectral and cut guarantees\",\n        \"Spectrally approximating large graphs with smaller graphs\",\n        \"Shine: Subhypergraph inductive neural network\",\n        \"Timegraphs: Graph-based temporal reasoning\",\n        \"Subgraph pattern neural networks for high-order graph evolution prediction\",\n        \"Metabolomics to improve the diagnostic efficiency of inborn errors of metabolism\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"Networks\",\n        \"Modeling heart rate and activity data for personalized fitness recommendation\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Geom-gcn: Geometric graph convolutional networks\",\n        \"Gene set enrichment analysis: a knowledge-based approach for interpreting genome-wide expression profiles\",\n        \"GLASS: GNN with labeling tricks for subgraph representation learning\",\n        \"How powerful are graph neural networks?\",\n        \"Hierarchical graph transformer with adaptive node sampling\",\n        \"Dpgs: Degree-preserving graph summarization\",\n        \"A provable framework of learning graph embeddings via summarization\",\n        \"Beyond homophily in graph neural networks: Current limitations and effective designs\",\n        \"Biosnap datasets: Stanford biomedical network dataset collection\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Translating Subgraphs to Nodes Makes Simple GNNs Strong and Efficient for Subgraph Representation Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}