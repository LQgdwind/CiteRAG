{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 64 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Coconut: A Scalable Bottom-Up Approach for Building Data Series Indexes\n\nPaper Abstract: Abstract Many modern applications produce massive amounts of data series that need to be analyzed, requiring efficient similarity search operations. However, the state-of-the-art data series indexes that are used for this purpose do not scale well for massive datasets in terms of performance, or storage costs. We pinpoint the problem to the fact that existing summarizations of data series used for indexing cannot be sorted while keeping similar data series close to each other in the sorted order. This leads to two design problems. First, traditional bulk-loading algorithms based on sorting cannot be used. Instead, index construction takes place through slow top-down insertions, which create a non-contiguous index that results in many random I/Os. Second, data series cannot be sorted and split across nodes evenly based on their median value; thus, most leaf nodes are in practice nearly empty. This further slows down query speed and amplifies storage costs. To address these problems, we present Coconut. The first innovation in Coconut is an inverted, sortable data series summarization that organizes data series based on a z-order curve, keeping similar series close to each other in the sorted order. As a result, Coconut is able to use bulk-loading techniques that rely on sorting to quickly build a contiguous index using large sequential disk I/Os. We then explore prefix-based and median-based splitting policies for bottom-up bulk-loading, showing that median-based splitting outperforms the state of the art, ensuring that all nodes are densely populated. Overall, we show analytically and empirically that Coconut dominates the state-of-the-art data series indexes in terms of construction speed, query speed, and storage costs.\n\n{retrieved_text}\n\nGenerate exactly 64 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 64\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Incorporated Research Institutions for Seismology â€“ Seismic Data Access\",\n        \"Adhd-200\",\n        \"Sloan digital sky survey\",\n        \"The input/output complexity of sorting and related problems\",\n        \"Efficient similarity search in sequence databases\",\n        \"The ts-tree: efficient time series search and retrieval\",\n        \"isax 2.0: Indexing and mining one billion time series\",\n        \"Beyond One Billion Time Series: Indexing and Mining Very Large Time Series Collections with iSAX2+\",\n        \"Locally adaptive dimensionality reduction for indexing large time series databases\",\n        \"Anomaly detection: A survey\",\n        \"Monkey: Optimal navigable key-value store\",\n        \"Fast subsequence matching in time-series databases\",\n        \"Latent time-series motifs\",\n        \"R-trees: A dynamic index structure for spatial searching\",\n        \"Computational intelligence challenges and applications on large-scale astronomical time series databases\",\n        \"Database cracking\",\n        \"Time-series active search for quick retrieval of audio and video\",\n        \"Scalable knn search on vertically stored time series\",\n        \"Using dynamic time warping distances as features for improved time series classification\",\n        \"Fast similarity search in the presence of longitudinal scaling in time series databases\",\n        \"Dimensionality reduction for fast similarity search in large time series databases\",\n        \"An enhanced representation of time series which allows fast and accurate classification, clustering and relevance feedback\",\n        \"Efficiently supporting ad hoc queries in large datasets of time sequences\",\n        \"STR: A simple and efficient algorithm for r-tree packing\",\n        \"Hierarchyscan: A hierarchical similarity search algorithm for databases of long sequences\",\n        \"Clustering of time series data - a survey\",\n        \"Clustering of streaming time series is meaningless\",\n        \"ULISSE: ULtra compact Index for Variable-Length Similarity SEarch in Data Series\",\n        \"Matrix profile X: Valmod - scalable discovery of variable-length motifs in data series\",\n        \"Characterizing home device usage from wireless traffic time series\",\n        \"A computer oriented geodetic data base and a new technique in file sequencing\",\n        \"Time series join on subsequence correlation\",\n        \"A disk-aware algorithm for time series motif discovery\",\n        \"Fast approximate correlation for massive time-series data\",\n        \"The log-structured merge-tree (lsm-tree)\",\n        \"Data series management: The road to big sequence analytics\",\n        \"Big sequence management: A glimpse of the past, the present, and the future\",\n        \"The parallel and distributed future of data series mining\",\n        \"Identification and characterization of human behavior patterns from mobile phone data\",\n        \"Gorilla: A fast, scalable, in-memory time series database\",\n        \"Efficient time series matching by wavelets\",\n        \"On similarity-based queries for time series data\",\n        \"Similarity-based queries for time series data\",\n        \"Searching and mining trillions of time series subsequences under dynamic time warping\",\n        \"Time series epenthesis: Clustering time series streams requires ignoring some data\",\n        \"Database management systems (3. ed.)\",\n        \"Making b++{}^{\\\\mbox{+}}-trees cache conscious in main memory\",\n        \"Three myths about dynamic time warping data mining\",\n        \"Dimensionality reduction for similarity searching in dynamic databases\",\n        \"Practical data prediction for real-world wireless sensor networks\",\n        \"Hierarchical clustering of time-series data streams\",\n        \"Tuning time series queries in finance: Case studies and recommendations\",\n        \"iSAX: disk-aware mining and indexing of massive time series datasets\",\n        \"isax: indexing and mining terabyte sized time series\",\n        \"Long-term variability of agn at hard x-rays\",\n        \"A data-adaptive and dynamic segmentation index for whole matching on time series\",\n        \"Fast time series classification using numerosity reduction\",\n        \"Dpisax: Massively distributed partitioned isax\",\n        \"Time series shapelets: a new primitive for data mining\",\n        \"Indexing for interactive exploration of big data series\",\n        \"RINSE: interactive data series exploration with ADS+\",\n        \"ADS: the adaptive data series index\",\n        \"Query workloads for data series indexes\",\n        \"Data series management: Fulfilling the need for big sequence analytics\"\n    ],\n    \"reasoning\": \"Selected these 64 references because they represent foundational work and recent advances in Coconut: A Scalable Bottom-Up Approach for Building Data Series Indexes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}