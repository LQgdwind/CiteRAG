{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Customized Retrieval Augmented Generation and Benchmarking for EDA Tool Documentation QA\n\nPaper Abstract: Abstract. Retrieval augmented generation (RAG) enhances the accuracy and reliability of generative AI models by sourcing factual information from external databases, which is extensively employed in document-grounded question-answering (QA) tasks. Off-the-shelf RAG flows are well pretrained on general-purpose documents, yet they encounter significant challenges when being applied to knowledge-intensive vertical domains, such as electronic design automation (EDA). This paper addresses such issue by proposing a customized RAG framework along with three domain-specific techniques for EDA tool documentation QA, including a contrastive learning scheme for text embedding model fine-tuning, a reranker distilled from proprietary LLM, and a generative LLM fine-tuned with high-quality domain corpus. Furthermore, we have developed and released a documentation QA evaluation benchmark, ORD-QA, for OpenROAD, an advanced RTL-to-GDSII design platform. Experimental results demonstrate that our proposed RAG flow and techniques have achieved superior performance on ORD-QA as well as on a commercial tool, compared with state-of-the-arts. The ORD-QA benchmark and the training dataset for our customized RAG flow are open-source at https://github.com/lesliepy99/RAG-EDA.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Toward an open-source digital flow: First learnings from the openroad project\",\n        \"ieda: An open-source intelligent physical implementation toolkit and library\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"ROUGE: A Package for Automatic Evaluation of Summaries\",\n        \"Towards a Unified Multi-Dimensional Evaluator for Text Generation\",\n        \"Dense passage retrieval for open-domain question answering\",\n        \"C-pack: Packaged resources to advance general chinese embedding\",\n        \"Bge m3-embedding: Multi-lingual, multi-functionality, multi-granularity text embeddings through self-knowledge distillation\",\n        \"Simcse: Simple contrastive learning of sentence embeddings\",\n        \"Contrastive learning of sentence embeddings from scratch\",\n        \"Retrieval-augmented generation for knowledge-intensive nlp tasks\",\n        \"The power of noise: Redefining retrieval for rag systems\",\n        \"An analysis of fusion functions for hybrid retrieval\",\n        \"Reciprocal rank fusion outperforms condorcet and individual rank learning methods\",\n        \"Precise zero-shot dense retrieval without relevance labels\",\n        \"LLMLingua: Compressing prompts for accelerated inference of large language models\",\n        \"LongLLMLingua: Accelerating and enhancing llms in long context scenarios via prompt compression\",\n        \"LLMLingua-2: Data distillation for efficient and faithful task-agnostic prompt compression\",\n        \"Enhancing retrieval-augmented large language models with iterative retrieval-generation synergy\",\n        \"Electronic design automation for IC implementation, circuit design, and process technology: circuit design, and process technology\",\n        \"Handbook of algorithms for physical design automation\",\n        \"Unsupervised cross-lingual representation learning at scale\",\n        \"Qwen technical report\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Baichuan 2: Open large-scale language models\",\n        \"Internlm2 technical report\",\n        \"Gpt-4 technical report\",\n        \"Qlora: Efficient finetuning of quantized llms\",\n        \"The faiss library\",\n        \"Chateda: A large language model powered autonomous agent for eda\",\n        \"Chipnemo: Domain-adapted llms for chip design\",\n        \"Chipgpt: How far are we from natural language hardware design\",\n        \"Verilogeval: Evaluating large language models for verilog code generation\",\n        \"Gpt4aigchip: Towards next-generation ai accelerator design automation via large language models\",\n        \"Chip-chat: Challenges and opportunities in conversational hardware design\",\n        \"Autochip: Automating hdl generation using llm feedback\",\n        \"Rtllm: An open-source benchmark for design rtl generation with large language model\",\n        \"Benchmarking large language models for automated verilog rtl code generation\",\n        \"Verigen: A large language model for verilog code generation\",\n        \"BetterV: Controlled Verilog Generation with Discriminative Guidance\",\n        \"Rtlfixer: Automatically fixing rtl syntax errors with large language models\",\n        \"Autosva: Democratizing formal verification of rtl module interactions\",\n        \"Llm-assisted generation of hardware assertions\",\n        \"Unlocking hardware security assurance: The potential of llms\",\n        \"Divas: An llm-based end-to-end framework for soc security analysis and policy-based protection\",\n        \"Fixing hardware security bugs with large language models\",\n        \"Hdldebugger: Streamlining hdl debugging with large language models\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Customized Retrieval Augmented Generation and Benchmarking for EDA Tool Documentation QA, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}