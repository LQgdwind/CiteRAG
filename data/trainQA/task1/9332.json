{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Diffusion-Jump GNNs: Homophiliation via Learnable Metric Filters\n\nPaper Abstract: Abstract High-order Graph Neural Networks (HO-GNNs) have been developed to infer consistent latent spaces in the heterophilic regime, where the label distribution is not correlated with the graph structure. However, most of the existing HO-GNNs are hop-based, i.e., they rely on the powers of the transition matrix. As a result, these architectures are not fully reactive to the classification loss and the achieved structural filters have static supports. In other words, neither the filters’ supports nor their coefficients can be learned with these networks. They are confined, instead, to learn combinations of filters. To address the above concerns, we propose Diffusion-jump GNNs−- a method relying on asymptotic diffusion distances that operates on jumps. A diffusion-pump generates pairwise distances whose projections determine both the support and coefficients of each structural filter. These filters are called jumps because they explore a wide range of scales in order to find bonds between scattered nodes with the same label. Actually, the full process is controlled by the classification loss. Both the jumps and the diffusion distances react to classification errors (i.e. they are learnable). Homophiliation, i.e., the process of learning piecewise smooth latent spaces in the heterophilic regime, is formulated as a Dirichlet problem: the known labels determine the border nodes and the diffusion-pump ensures a minimal deviation of the semi-supervised grouping from a canonical unsupervised grouping. This triggers the update of both the diffusion distances and, consequently, the jumps in order to minimize the classification error. The Dirichlet formulation has several advantages. It leads to the definition of structural heterophily, a novel measure beyond edge heterophily. It also allows us to investigate links with (learnable) diffusion distances, absorbing random walks and stochastic diffusion. Finally, our experimental results outperform significantly those of the state-of-the-art both in homophilic and heterophilic datasets. We are very competitive for large graphs.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Graph Attention Networks\",\n        \"Beyond homophily in graph neural networks: Current limitations and effective designs\",\n        \"Non-local graph neural networks\",\n        \"Graph neural networks with heterophily\",\n        \"Simple and deep graph convolutional networks\",\n        \"Make heterophily graphs better fit gnn: A graph rewiring approach\",\n        \"DiffWire: Inductive Graph Rewiring via the Lovász Bound\",\n        \"Understanding over-squashing and bottlenecks on graphs via curvature\",\n        \"On over-squashing in message passing neural networks: The impact of width, depth, and topology\",\n        \"Two sides of the same coin: Heterophily and oversmoothing in graph convolutional neural networks\",\n        \"Shortest path networks for graph property prediction\",\n        \"Ordered GNN: Ordering message passing to deal with heterophily and over-smoothing\",\n        \"Mixhop: Higher-order graph convolutional architectures via sparsified neighborhood mixing\",\n        \"Improving graph neural networks with simple architecture design\",\n        \"Not all neighbors are friendly: Learning to choose hop features to improve node classification\",\n        \"Sign: Scalable inception graph neural networks\",\n        \"Simplified graph convolution with heterophily\",\n        \"Adaptive universal generalized pagerank graph neural network\",\n        \"Phase transitions and metastability in markovian and molecular systems\",\n        \"Eigenvalues of the fokker–planck operator and the approach to equilibrium for diffusions in potential fields\",\n        \"Reaction-rate theory: fifty years after kramers\",\n        \"Fundamental limitations of spectral clustering\",\n        \"Diffusion maps, spectral clustering and eigenfunctions of fokker-planck operators\",\n        \"Trace ratio vs. ratio trace for dimensionality reduction\",\n        \"Trace ratio problem revisited\",\n        \"The trace ratio optimization problem\",\n        \"Large scale learning on non-homophilous graphs: New benchmarks and strong simple methods\",\n        \"Graph u-nets\",\n        \"Differentiable top-k with optimal transport\",\n        \"Learning with local and global consistency\",\n        \"Random walks and electric networks\",\n        \"Random walks for image segmentation\",\n        \"A random walks view of spectral segmentation\",\n        \"Collective classification in network data\",\n        \"Geom-gcn: Geometric graph convolutional networks\",\n        \"Multi-scale attributed node embedding\",\n        \"Graph neural networks as gradient flows: understanding graph convolutions via energy\",\n        \"Pairnorm: Tackling oversmoothing in gnns\",\n        \"Crystal graph neural networks for data mining in materials science\",\n        \"Revisiting heterophily for graph neural networks\",\n        \"Social structure of facebook networks\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"The geometry of algorithms with orthogonality constraints\",\n        \"Convergence analysis of gradient descent for eigenvector computation\",\n        \"Why resampling outperforms reweighting for correcting sampling bias with stochastic gradients\",\n        \"Clustering and embedding using commute times\",\n        \"The electrical resistance of a graph captures its commute and cover times\",\n        \"Diffusion maps, spectral clustering and reaction coordinates of dynamical systems\",\n        \"Directional graph networks\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Fast graph representation learning with PyTorch Geometric\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Diffusion-Jump GNNs: Homophiliation via Learnable Metric Filters, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}