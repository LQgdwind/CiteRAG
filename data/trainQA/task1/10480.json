{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Are Large Language Models Good Prompt Optimizers?\n\nPaper Abstract: Abstract LLM-based Automatic Prompt Optimization, which typically utilizes LLMs as Prompt Optimizers to self-reflect and refine prompts, has shown promising performance in recent studies. Despite the success, the underlying mechanism of this approach remains unexplored, and the true effectiveness of LLMs as Prompt Optimizers requires further validation. In this work, we conducted a comprehensive study to uncover the actual mechanism of LLM-based Prompt Optimization. Our findings reveal that the LLM optimizers struggle to identify the true causes of errors during reflection, tending to be biased by their own prior knowledge rather than genuinely reflecting on the errors. Furthermore, even when the reflection is semantically valid, the LLM optimizers often fail to generate appropriate prompts for the target models with a single prompt refinement step, partly due to the unpredictable behaviors of the target models. Based on the observations, we introduce a new “Automatic Behavior Optimization” paradigm, which directly optimizes the target model’s behavior in a more controllable manner. We hope our study can inspire new directions for automatic prompt optimization development.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Generalized category discovery with large language models in the loop\",\n        \"Beyond the imitation game: Quantifying and extrapolating the capabilities of language models\",\n        \"Language models are few-shot learners\",\n        \"Sparks of artificial general intelligence: Early experiments with gpt-4\",\n        \"Instructzero: Efficient instruction optimization for black-box large language models\",\n        \"Black-box prompt optimization: Aligning large language models without model training\",\n        \"Rlprompt: Optimizing discrete text prompts with reinforcement learning\",\n        \"Alpacafarm: A simulation framework for methods that learn from human feedback\",\n        \"Making pre-trained language models better few-shot learners\",\n        \"Connecting large language models with evolutionary algorithms yields powerful prompt optimizers\",\n        \"Large language models cannot self-correct reasoning yet\",\n        \"Large language models are zero-shot reasoners\",\n        \"Efficient memory management for large language model serving with pagedattention\",\n        \"How long can context length of open-source LLMs truly promise?\",\n        \"Robust prompt optimization for large language models against distribution shifts\",\n        \"Lost in the middle: How language models use long contexts\",\n        \"Pre-train, prompt, and predict: A systematic survey of prompting methods in natural language processing\",\n        \"Fantastically ordered prompts and where to find them: Overcoming few-shot prompt order sensitivity\",\n        \"Rethinking the role of demonstrations: What makes in-context learning work?\",\n        \"Grips: Gradient-free, edit-based instruction search for prompting large language models\",\n        \"Automatic prompt optimization with” gradient descent” and beam search\",\n        \"Autoprompt: Eliciting knowledge from language models with automatically generated prompts\",\n        \"GPT-4 doesn’t know it’s wrong: An analysis of iterative prompting for reasoning problems\",\n        \"Autohint: Automatic prompt optimization with hint generation\",\n        \"Challenging BIG-bench tasks and whether chain-of-thought can solve them\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Llms cannot find reasoning errors, but can correct them!\",\n        \"Can large language models really improve by self-critiquing their own plans?\",\n        \"Large language models enable few-shot clustering\",\n        \"Self-consistency improves chain of thought reasoning in language models\",\n        \"Promptagent: Strategic planning with language models enables expert-level prompt optimization\",\n        \"Do prompt-based models really understand the meaning of their prompts?\",\n        \"Finetuned language models are zero-shot learners\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"Large language models as optimizers\",\n        \"Prompt engineering a prompt engineer\",\n        \"Why johnny can’t prompt: how non-ai experts try (and fail) to design llm prompts\",\n        \"Evaluating large language models at evaluating instruction following\",\n        \"Tempera: Test-time prompting via reinforcement learning\",\n        \"ClusterLLM: Large language models as a guide for text clustering\",\n        \"Auto-instruct: Automatic instruction generation and ranking for black-box language models\",\n        \"Calibrate before use: Improving few-shot performance of language models\",\n        \"Judging llm-as-a-judge with mt-bench and chatbot arena\",\n        \"Lima: Less is more for alignment\",\n        \"Instruction-following evaluation for large language models\",\n        \"Large language models are human-level prompt engineers\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Are Large Language Models Good Prompt Optimizers?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}