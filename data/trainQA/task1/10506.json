{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning a Decision Tree Algorithm with Transformers\n\nPaper Abstract: Abstract Decision trees are renowned for their interpretability capability to achieve high predictive performance, especially on tabular data. Traditionally, they are constructed through recursive algorithms, where they partition the data at every node in a tree. However, identifying the best partition is challenging, as decision trees optimized for local segments may not bring global generalization. To address this, we introduce MetaTree, which trains a transformer-based model on filtered outputs from classical algorithms to produce strong decision trees for classification. Specifically, we fit both greedy decision trees and optimized decision trees on a large number of datasets. We then train MetaTree to produce the trees that achieve strong generalization performance. This training enables MetaTree to not only emulate these algorithms, but also to intelligently adapt its strategy according to the context, thereby achieving superior generalization performance.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hierarchical shrinkage: improving the accuracy and interpretability of tree-based methods\",\n        \"Optimal classification trees\",\n        \"Improving image generation with better captions\",\n        \"Random forests\",\n        \"Classification and Regression Trees\",\n        \"Alternating optimization of decision trees, with application to learning sparse oblique trees\",\n        \"Bart: Bayesian additive regression trees\",\n        \"Faith and fate: Limits of transformers on compositionality\",\n        \"Discovering faster matrix multiplication algorithms with reinforcement learning\",\n        \"Scaling tabpfn: Sketching and feature selection for tabular prior-data fitted networks\",\n        \"Experiments with a new boosting algorithm\",\n        \"What can transformers learn in-context? a case study of simple function classes\",\n        \"Tabr: Unlocking the power of retrieval-augmented tabular deep learning\",\n        \"Why do tree-based models still outperform deep learning on typical tabular data?\",\n        \"How does gpt-2 compute greater-than?: Interpreting mathematical abilities in a pre-trained language model\",\n        \"Tabllm: Few-shot classification of tabular data with large language models\",\n        \"Tabpfn: A transformer that solves small tabular classification problems in a second\",\n        \"Meta-learning in neural networks: A survey\",\n        \"Optimal sparse decision trees\",\n        \"Predictability and stability testing to assess clinical decision instrument performance for children after blunt torso trauma\",\n        \"Constructing optimal binary decision trees is np-complete\",\n        \"Generalized and scalable optimal sparse decision trees\",\n        \"Language models are weak learners\",\n        \"Faster sorting algorithms discovered using deep reinforcement learning\",\n        \"Tree prompting: efficient task adaptation without fine-tuning\",\n        \"On first-order meta-learning algorithms\",\n        \"Tabret: Pre-training transformer-based tabular models for unseen columns\",\n        \"Gpt-4 technical report\",\n        \"memory-profiler: A module for monitoring memory usage of a python program\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Induction of decision trees\",\n        \"C4. 5: programs for machine learning\",\n        \"Pmlb v1.0: an open source dataset collection for benchmarking machine learning methods\",\n        \"Mathematical discoveries from program search with large language models\",\n        \"Augmenting interpretable models with large language models during training\",\n        \"Fast interpretable greedy-tree sums (figs)\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Openml: networked science in machine learning\",\n        \"Attention is all you need\",\n        \"A perspective view and survey of meta-learning\",\n        \"Can transformer models generalize via in-context learning beyond pretraining data?\",\n        \"Tree of thoughts: Deliberate problem solving with large language models\",\n        \"What algorithms can transformers learn? a study in length generalization\",\n        \"Bert loses patience: Fast and robust inference with early exit\",\n        \"Xtab: Cross-table pretraining for tabular transformers\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Learning a Decision Tree Algorithm with Transformers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}