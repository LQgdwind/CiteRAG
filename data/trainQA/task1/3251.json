{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 72 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: NeuroXplorer 1.0: A Fast and Extensible Framework for Spiking Neural Network Simulation and Hardware Mapping\n\nPaper Abstract: Abstract. Recently, both industry and academia have proposed many different neuromorphic architectures to execute applications that are designed with Spiking Neural Network (SNN). Consequently, there is a growing need for an extensible simulation framework that can perform architectural explorations with SNNs, including both platform-based design of today’s hardware, and hardware-software co-design and design-technology co-optimization of the future. We present NeuroXplorer, a fast and extensible framework that is based on a generalized template for modeling a neuromorphic architecture that can be infused with the specific details of a given hardware and/or technology. NeuroXplorer can perform both low-level cycle-accurate architectural simulations and high-level analysis with data-flow abstractions. NeuroXplorer’s optimization engine can incorporate hardware-oriented metrics such as energy, throughput, and latency, as well as SNN-oriented metrics such as inter-spike interval distortion and spike disorder, which directly impact SNN performance. We demonstrate the architectural exploration capabilities of NeuroXplorer through case studies with many state-of-the-art machine learning models.\n\n{retrieved_text}\n\nGenerate exactly 72 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 72\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Compiling spiking neural networks to mitigate neuromorphic hardware constraints\",\n        \"A framework for the analysis of throughput-constraints of SNNs on neuromorphic hardware\",\n        \"Power-accuracy trade-offs for heartbeat classification on neural networks hardware\",\n        \"A framework to explore workload-specific performance and lifetime trade-offs in neuromorphic computing\",\n        \"Design methodology for embedded approximate artificial neural networks\",\n        \"Exploration of segmented bus as scalable global interconnect for neuromorphic computing\",\n        \"PyCARL: A PyNN interface for hardware-software co-simulation of spiking neural network\",\n        \"Mapping spiking neural networks to neuromorphic hardware\",\n        \"Run-time mapping of spiking neural networks to neuromorphic hardware\",\n        \"Enabling resource-aware mapping of spiking neural networks via spatial decomposition\",\n        \"Neurogrid: A mixed-analog-digital multichip system for large-scale neural simulations\",\n        \"Neuromorphic computing using non-volatile memory\",\n        \"Very large-scale neuromorphic systems for biological signal processing\",\n        \"CARLsim 4: An open source library for large scale, biologically detailed spiking neural network simulation using heterogeneous clusters\",\n        \"Unsupervised heart-rate estimation in wearables with Liquid states and a probabilistic readout\",\n        \"Dataflow-based mapping of spiking neural networks on neuromorphic hardware\",\n        \"Heartbeat classification in wearables using multi-layer perceptron and time-frequency joint distribution of ECG\",\n        \"Mapping of local and global synapses on spiking neuromorphic hardware\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"PyNN: a common interface for neuronal network simulators\",\n        \"Hardware/software co-design\",\n        \"TrueNorth: Accelerating from zero to 64 million neurons in 10 years\",\n        \"Unsupervised learning of digit recognition using spike-timing-dependent plasticity\",\n        \"Pynest: a convenient interface to the nest simulator\",\n        \"A 0.086-mm2 12.7-pj/sop 64k-synapse 256-neuron online-learning digital spiking neuromorphic processor in 28-nm CMOS\",\n        \"The SpiNNaker project\",\n        \"Collective behavior of networks with linear (vlsi) integrate-and-fire neurons\",\n        \"The brian simulator\",\n        \"Deep learning with Keras\",\n        \"Modeling epidemic spread with spike-based models\",\n        \"The NEURON simulation environment\",\n        \"Particle swarm optimization\",\n        \"An efficient heuristic procedure for partitioning graphs\",\n        \"System-level design: Orthogonalization of concerns and platform-based design\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Special session: Reliability analysis for ML/AI hardware\",\n        \"Neu-NoC: A high-efficient interconnection network for accelerated neuromorphic systems\",\n        \"Darwin: A neuromorphic hardware co-processor based on spiking neural networks\",\n        \"Networks of spiking neurons: The third generation of neural network models\",\n        \"Design-technology co-optimization for oxrram-based synaptic processing unit\",\n        \"Neuromorphic electronic systems\",\n        \"Artificial neural network (ANN) to spiking neural network (SNN) converters based on diffusive memristors\",\n        \"A scalable multicore architecture with heterogeneous memory structures for dynamic neuromorphic asynchronous processors (DYNAPs)\",\n        \"Machine learning applications to DNA subsequence and restriction site analysis\",\n        \"Spyketorch: Efficient simulation of convolutional spiking neural networks with at most one spike per neuron\",\n        \"Novel ferroelectric FET based synapse for neuromorphic systems\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"A reconfigurable on-line learning spiking neuromorphic processor comprising 256 neurons and 128k synapses\",\n        \"Conversion of analog to spiking neural networks using sparse temporal coding\",\n        \"Theory and tools for the conversion of analog to spiking convolutional neural networks\",\n        \"A survey of neuromorphic computing and neural networks in hardware\",\n        \"Hill-climbing search\",\n        \"Development of a neuromorphic computing system\",\n        \"Solving a steady-state PDE using spiking networks and neuromorphic hardware\",\n        \"Design methodologies for reliable and energy-efficient PCM systems\",\n        \"A case for lifetime reliability-aware neuromorphic computing\",\n        \"Enabling and exploiting partition-level parallelism (PALP) in phase change memories\",\n        \"Compiling spiking neural networks to neuromorphic hardware\",\n        \"Exploiting inter- and intra-memory asymmetries for data mapping in hybrid tiered-memories\",\n        \"Improving dependability of neuromorphic computing with non-volatile memory\",\n        \"Improving phase change memory performance with data content aware access\",\n        \"Aging-aware request scheduling for non-volatile main memory\",\n        \"Dynamic reliability management in neuromorphic computing\",\n        \"Reliability-performance trade-offs in neuromorphic computing\",\n        \"Thermal-aware compilation of spiking neural networks to neuromorphic hardware\",\n        \"On the role of system software in energy management of neuromorphic computing\",\n        \"Endurance-aware mapping of spiking neural networks to neuromorphic hardware\",\n        \"Simulated annealing\",\n        \"Spin-transfer torque magnetic memory as a stochastic memristive synapse for neuromorphic systems\",\n        \"GeNN: a code generation framework for accelerated brain simulations\",\n        \"The past present and future of design-technology co-optimization\"\n    ],\n    \"reasoning\": \"Selected these 72 references because they represent foundational work and recent advances in NeuroXplorer 1.0: A Fast and Extensible Framework for Spiking Neural Network Simulation and Hardware Mapping, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}