{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Data-Plane Memory Scheduling for In-Network Aggregation\n\nPaper Abstract: Abstract As the scale of distributed training grows, communication becomes a bottleneck. To accelerate the communication, recent works introduce In-Network Aggregation (INA), which moves the gradients summation into network middle-boxes, e.g., programmable switches to reduce the traffic volume. However, switch memory is scarce compared to the volume of gradients transmitted in distributed training. Although literature applies methods like pool-based streaming or dynamic sharing to tackle the mismatch, switch memory is still a potential performance bottleneck. Furthermore, we observe the under-utilization of switch memory due to the synchronization requirement for aggregator deallocation in recent works. To improve the switch memory utilization, we propose ESA, an Efficient Switch Memory Scheduler for In-Network Aggregation. At its cores, ESA enforces the preemptive aggregator allocation primitive and introduces priority scheduling at the data-plane, which improves the switch memory utilization and average job completion time (JCT). Experiments show that ESA can improve the average JCT by up to 1.35Ã—1.35\\times.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"ATP: In-network aggregation for multi-tenant learning\",\n        \"Scaling distributed machine learning with in-network aggregation\",\n        \"The source code of atp: https://github.com/in-ATP/ATP\",\n        \"Information-agnostic flow scheduling for commodity data centers\",\n        \"Switches for hire: resource scheduling for data center in-network computing\",\n        \"Cofilter: A high-performance switch-assisted stateful packet filter\",\n        \"Programmable switch as a parallel computing device\",\n        \"Auto: Scaling deep reinforcement learning for datacenter-scale automatic traffic optimization\",\n        \"Blueconnect: Novel hierarchical all-reduce on multi-tired network for deep learning\",\n        \"Natural language processing\",\n        \"Efficient coflow scheduling with varys\",\n        \"Gpt-3: Its nature, scope, limits, and consequences\",\n        \"In-network aggregation for shared machine learning clusters\",\n        \"Tiresias: A GPU cluster manager for distributed deep learning\",\n        \"A survey on data plane programming with p4: Fundamentals, advances, and applied research\",\n        \"Deep residual learning for image recognition\",\n        \"Network simulations with the ns-3 simulator\",\n        \"Alexa, siri, cortana, and more: an introduction to voice assistants\",\n        \"Gpipe: Efficient training of giant neural networks using pipeline parallelism\",\n        \"Analysis of large-scale multi-tenant GPU clusters for DNN training workloads\",\n        \"A unified architecture for accelerating distributed DNN training in heterogeneous gpu/cpu clusters\",\n        \"Netcache: Balancing key-value stores with fast in-network caching\",\n        \"Optimizing tcp retransmission timeout\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Deeplight: Learning illumination for unconstrained mobile mixed reality\",\n        \"Towards fully autonomous driving: Systems and algorithms\",\n        \"Scaling distributed machine learning with the parameter server\",\n        \"Accelerating distributed reinforcement learning with in-switch computing\",\n        \"Rate-aware flow scheduling for commodity data center networks\",\n        \"Plink: Discovering and exploiting locality for accelerated distributed training on the public cloud\",\n        \"Silkroad: Making stateful layer-4 load balancing fast and cheap using switching asics\",\n        \"Pipedream: generalized pipeline parallelism for dnn training\",\n        \"Bandwidth optimal all-reduce algorithms for clusters of workstations\",\n        \"Optimus: an efficient dynamic resource scheduler for deep learning clusters\",\n        \"A generic communication scheduler for distributed dnn training acceleration\",\n        \"When should the network be the computer?\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Stream: Decentralized opportunistic inter-coflow scheduling for datacenter networks\",\n        \"Rat-resilient allreduce tree for distributed machine learning\",\n        \"Superglue: A stickier benchmark for general-purpose language understanding systems\",\n        \"Where does alphago go: From church-turing thesis to alphago thesis and beyond\",\n        \"Domain-specific communication optimization for distributed dnn training\",\n        \"Divide-and-shuffle synchronization for distributed machine learning\",\n        \"Rethinking transport layer design for distributed machine learning\",\n        \"Gandiva: Introspective cluster scheduling for deep learning\",\n        \"Antman: Dynamic scaling on GPU clusters for deep learning\",\n        \"Netlock: Fast, centralized lock management using programmable switches\",\n        \"Poseidon: An efficient communication architecture for distributed deep learning on GPU clusters\",\n        \"Coda: Toward automatically identifying and scheduling coflows in the dark\",\n        \"Rapier: Integrating routing and scheduling for coflow-aware data center networks\",\n        \"Flow event telemetry on programmable data plane\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Efficient Data-Plane Memory Scheduling for In-Network Aggregation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}