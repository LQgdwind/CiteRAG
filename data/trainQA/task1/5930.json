{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Extracting Latent Steering Vectors from Pretrained Language Models\n\nPaper Abstract: Abstract Prior work on controllable text generation has focused on learning how to control language models through trainable decoding, smart-prompt design, or fine-tuning based on a desired objective. We hypothesize that the information needed to steer the model to generate a target sentence is already encoded within the model. Accordingly, we explore a different approach altogether: extracting latent vectors directly from pretrained language model decoders without fine-tuning. Experiments show that there exist steering vectors, which, when added to the hidden states of the language model, generate a target sentence nearly perfectly (> 99 BLEU) for English sentences from a variety of domains. We show that vector arithmetic can be used for unsupervised sentiment transfer on the Yelp sentiment benchmark, with performance comparable to models tailored to this task. We find that distances between steering vectors reflect sentence similarity when evaluated on a textual similarity benchmark (STS-B), outperforming pooled hidden states of models. Finally, we present an analysis of the intrinsic properties of the steering vectors. Taken together, our results suggest that frozen LMs can be effectively controlled through their latent steering space. 111Code is available at https://github.com/nishantsubramani/steering_vectors.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A simple but tough-to-beat baseline for sentence embeddings\",\n        \"On the dangers of stochastic parrots: Can language models be too big? .\",\n        \"Generating sentences from a continuous space\",\n        \"Language models are few-shot learners\",\n        \"Quality at a glance: An audit of web-crawled multilingual datasets\",\n        \"SemEval-2017 task 1: Semantic textual similarity multilingual and crosslingual focused evaluation\",\n        \"A systematic comparison of smoothing techniques for sentence-level bleu\",\n        \"Supervised learning of universal sentence representations from natural language inference data\",\n        \"Chameleons in imagined conversations: A new approach to understanding coordination of linguistic style in dialogs\",\n        \"Plug and play language models: A simple approach to controlled text generation\",\n        \"Residual energy-based models for text generation\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Unsupervised random walk sentence embeddings: A strong but simple baseline\",\n        \"How contextual are contextualized word representations? Comparing the geometry of BERT, ELMo, and GPT-2 embeddings\",\n        \"English gigaword\",\n        \"Trainable greedy decoding for neural machine translation\",\n        \"On using monolingual corpora in neural machine translation\",\n        \"A probabilistic formulation of unsupervised text style transfer\",\n        \"Parameter-efficient transfer learning for nlp\",\n        \"Toward controlled generation of text\",\n        \"Deep learning for text style transfer: A survey\",\n        \"Sequence-to-sequence learning with latent neural grammars\",\n        \"Adam: A method for stochastic optimization\",\n        \"GeDi: Generative discriminator guided sequence generation\",\n        \"Multiple-attribute text rewriting\",\n        \"Project gutenberg (1971-2008)\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"Open sesame: Getting inside BERTâ€™s linguistic knowledge\",\n        \"DExperts: Decoding-time controlled text generation with experts and anti-experts\",\n        \"StylePTB: A compositional benchmark for fine-grained controllable text style transfer\",\n        \"Visualizing data using t-sne\",\n        \"Plug and play autoencoders for conditional text generation\",\n        \"Pointer sentinel mixture models\",\n        \"Sentence bottleneck autoencoders from transformer language models\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"GloVe: Global vectors for word representation\",\n        \"Deep contextualized word representations\",\n        \"Improving language understanding by generative pre-training\",\n        \"Language models are unsupervised multitask learners.\",\n        \"Sentence-BERT: Sentence embeddings using Siamese BERT-networks\",\n        \"A primer in BERTology: What we know about how BERT works\",\n        \"Tailor: Generating and perturbing text with semantic controls\",\n        \"Style transfer from non-parallel text by cross-alignment\",\n        \"Educating text autoencoders: Latent representation guidance via denoising\",\n        \"AutoPrompt: Eliciting Knowledge from Language Models with Automatically Generated Prompts\",\n        \"Can unconditional language models recover arbitrary sentences?\",\n        \"Attention is all you need\",\n        \"Extracting and composing robust features with denoising autoencoders\",\n        \"Controllable neural text generation\",\n        \"Side-tuning: A baseline for network adaptation via additive side networks\",\n        \"Character-level convolutional networks for text classification\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Extracting Latent Steering Vectors from Pretrained Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}