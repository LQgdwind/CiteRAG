{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AEFE: Automatic Embedded Feature Engineering For Categorical Features\n\nPaper Abstract: Abstract The challenge of solving data mining problems in e-commerce applications such as recommendation system (RS) and click-through rate (CTR) prediction is how to make inferences by constructing combinatorial features from a large number of categorical features while preserving the interpretability of the method. In this paper, we propose Automatic Embedded Feature Engineering(AEFE), an automatic feature engineering framework for representing categorical features, which consists of various components including custom paradigm feature construction and multiple feature selection. By selecting the potential field pairs intelligently and generating a series of interpretable combinatorial features, our framework can provide a set of unseen generated features for enhancing model performance and then assist data analysts in discovering the feature importance for particular data mining tasks. Furthermore, AEFE is distributed implemented by task-parallelism, data sampling, and searching schema based on Matrix Factorization field combination, to optimize the performance and enhance the efficiency and scalability of the framework. Experiments conducted on some typical e-commerce datasets indicate that our method outperforms the classical machine learning models and state-of-the-art deep learning models.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A few useful things to know about machine learning\",\n        \"The lack of a priori distinctions between learning algorithms\",\n        \"Deep crossing: Web-scale modeling without manually crafted combinatorial features\",\n        \"Wide &amp; deep learning for recommender systems\",\n        \"Factorization machines\",\n        \"Deep learning over multi-field categorical data\",\n        \"Deepfm: A factorization-machine based neural network for ctr prediction\",\n        \"Neural factorization machines for sparse predictive analytics\",\n        \"Autofis: Automatic feature interaction selection in factorization models for click-through rate prediction\",\n        \"AutoFeature: Searching for Feature Interactions and Their Architectures for Click-through Rate Prediction, page 625–634\",\n        \"AutoGroup: Automatic Feature Grouping for Modelling Explicit High-Order Feature Interactions in CTR Prediction, page 199–208\",\n        \"Deep feature synthesis: Towards automating data science endeavors\",\n        \"Towards automatic complex feature engineering\",\n        \"One button machine for automating feature engineering in relational databases\",\n        \"Fast methods for kernel-based text analysis\",\n        \"Training and testing low-degree polynomial data mappings via linear svm\",\n        \"Higher-order factorization machines\",\n        \"Attentional factorization machines: Learning the weight of feature interactions via attention networks\",\n        \"Field-aware factorization machines for ctr prediction\",\n        \"Field-weighted factorization machines for click-through rate prediction in display advertising\",\n        \"Deep interest network for click-through rate prediction\",\n        \"Product-based neural networks for user response prediction\",\n        \"Deep & cross network for ad click predictions\",\n        \"xdeepfm: Combining explicit and implicit feature interactions for recommender systems\",\n        \"xdeepint: A hybrid architecture for modeling the vector-wise and bit-wise feature interactions\",\n        \"A convolutional click prediction model\",\n        \"Convolutional neural networks based click-through rate prediction with multiple feature sequences\",\n        \"An ad ctr prediction method based on feature learning of deep and shallow layers\",\n        \"Fi-gnn: Modeling feature interactions via graph neural networks for ctr prediction\",\n        \"Darts: Differentiable architecture search\",\n        \"Fuxictr: An open benchmark for click-through rate prediction\",\n        \"Visualizing and understanding deep neural networks in ctr prediction\",\n        \"Feature construction methods: a survey\",\n        \"Feature generation using general constructor functions\",\n        \"Generalized and heuristic-free feature construction for improved accuracy\",\n        \"Strengthening learning algorithms by feature discovery\",\n        \"Explorekit: Automatic feature generation and selection\",\n        \"Learning feature engineering for classification\",\n        \"Autolearn—automated feature generation and selection\",\n        \"Cognito: Automated feature engineering for supervised learning\",\n        \"Autocross: Automatic feature crossing for tabular data in real-world applications\",\n        \"Feature engineering for predictive modeling using reinforcement learning\",\n        \"Taking human out of learning applications: A survey on automated machine learning\",\n        \"Practical lessons from predicting clicks on ads at facebook\",\n        \"Algorithms for non-negative matrix factorization\",\n        \"Coupled group lasso for web-scale ctr prediction in display advertising\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree\",\n        \"Adam: A method for stochastic optimization\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"Product-based neural networks for user response prediction over multi-field categorical data\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in AEFE: Automatic Embedded Feature Engineering For Categorical Features, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}