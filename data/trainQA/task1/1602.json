{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Procrustes: a Dataflow and Accelerator for Sparse Deep Neural Network Training\n\nPaper Abstract: Abstract The success of DNN pruning has led to the development of energy-efficient inference accelerators that support pruned models with sparse weight and activation tensors. Because the memory layouts and dataflows in these architectures are optimized for the access patterns during inference, however, they do not efficiently support the emerging sparse training techniques. In this paper, we demonstrate (a) that accelerating sparse training requires a co-design approach where algorithms are adapted to suit the constraints of hardware, and (b) that hardware for sparse DNN training must tackle constraints that do not arise in inference accelerators. As proof of concept, we adapt a sparse training algorithm to be amenable to hardware acceleration; we then develop dataflow, data layout, and load-balancing techniques to accelerate it. The resulting system is a sparse DNN training accelerator that produces pruned models with the same accuracy as dense models without first training, then pruning, and finally retraining, a dense model. Compared to training the equivalent unpruned models using a state-of-the-art DNN accelerator without sparse training support, Procrustes consumes up to 3.26×\\times less energy and offers up to 4×\\times speedup across a range of models, while pruning weights by an order of magnitude and maintaining unpruned accuracy.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Extremely large minibatch SGD: training ResNet-50 on ImageNet in 15 minutes\",\n        \"Cnvlutin: ineffectual-neuron-free deep neural network computing\",\n        \"Fused-layer CNN accelerators\",\n        \"Practical recommendations for gradient-based training of deep architectures\",\n        \"Parallel sparse matrix-vector and matrix-transpose-vector multiplication using compressed sparse blocks\",\n        \"Diannao: A small-footprint high-throughput accelerator for ubiquitous machine-learning\",\n        \"Eyeriss v2: A Flexible Accelerator for Emerging Deep Neural Networks on Mobile Devices\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"Full Deep Neural Network Training on a Pruned Weight Budget\",\n        \"SparTen: A Sparse Tensor Accelerator for Convolutional Neural Networks\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"EIE: efficient inference engine on compressed deep neural network\",\n        \"Deep Compression: Compressing Deep Neural Networks with Pruning, Trained Quantization and Huffman Coding\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Second order derivatives for network pruning: Optimal brain surgeon\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on ImageNet classification\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Densely connected convolutional networks\",\n        \"Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift\",\n        \"Gist: Efficient data encoding for deep neural network training\",\n        \"In-Datacenter Performance Analysis of a Tensor Processing Unit\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Understanding Reuse, Performance, and Hardware Cost of DNN Dataflow: A Data-Centric Approach\",\n        \"Optimal brain damage\",\n        \"Efficient backprop\",\n        \"Measuring the intrinsic dimension of objective landscapes\",\n        \"Pruning filters for efficient convnets\",\n        \"Thinet: A filter level pruning method for deep neural network compression\",\n        \"Xorshift RNGs\",\n        \"Revisiting small batch training for deep neural networks\",\n        \"Scalable training of artificial neural networks with adaptive sparse connectivity inspired by network science\",\n        \"Parameter efficient training of deep convolutional neural networks by dynamic sparse reparameterization\",\n        \"NVIDIA Deep Learning Accelerator (NVDLA)\",\n        \"Timeloop: A Systematic Approach to DNN Accelerator Evaluation\",\n        \"SCNN: An accelerator for compressed-sparse convolutional neural networks\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"ImageNet Large Scale Visual Recognition Challenge\",\n        \"Overcoming resource underutilization in spatial CNN accelerators\",\n        \"Maximizing CNN accelerator efficiency through resource partitioning\",\n        \"Throughput-optimized OpenCL-based FPGA accelerator for large-scale convolutional neural networks\",\n        \"Accelergy: An architecture-level energy estimation methodology for accelerator designs\",\n        \"Designing energy-efficient convolutional neural networks using energy-aware pruning\",\n        \"Dnn dataflow choice is overrated\",\n        \"Multiplicative update methods for incremental quantile estimation\",\n        \"Torch | 92.45% on CIFAR-10 in Torch\",\n        \"Wide residual networks\",\n        \"Optimizing FPGA-based accelerator design for deep convolutional neural networks\",\n        \"Eager pruning: algorithm and architecture support for fast training of deep neural networks\",\n        \"Cambricon-X: An accelerator for sparse neural networks\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Procrustes: a Dataflow and Accelerator for Sparse Deep Neural Network Training, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}