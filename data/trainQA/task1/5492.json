{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Towards Efficient and Scalable Sharpness-Aware Minimization\n\nPaper Abstract: Abstract Recently, Sharpness-Aware Minimization (SAM), which connects the geometry of the loss landscape and generalization, has demonstrated significant performance boosts on training large-scale models such as vision transformers. However, the update rule of SAM requires two sequential (non-parallelizable) gradient computations at each step, which can double the computational overhead. In this paper, we propose a novel algorithm LookSAM - that only periodically calculates the inner gradient ascent, to significantly reduce the additional training cost of SAM. The empirical results illustrate that LookSAM achieves similar accuracy gains to SAM while being tremendously faster - it enjoys comparable computational complexity with first-order optimizers such as SGD or Adam. To further evaluate the performance and scalability of LookSAM, we incorporate a layer-wise modification and perform experiments in the large-batch training scenario, which is more prone to converge to sharp local minima. We are the first to successfully scale up the batch size when training Vision Transformers (ViTs). With a 64k batch size, we are able to train ViTs from scratch in minutes while maintaining competitive performance.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Extremely large minibatch sgd: Training resnet-50 on imagenet in 15 minutes\",\n        \"JAX: composable transformations of Python+NumPy programs\",\n        \"Entropy-sgd: Biasing gradient descent into wide valleys\",\n        \"When vision transformers outperform resnets without pretraining or strong data augmentations\",\n        \"Scale out for large minibatch sgd: Residual network training on imagenet-1k with improved accuracy and reduced time to train\",\n        \"Randaugment: Practical automated data augmentation with a reduced search space\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Adabatch: Adaptive batch sizes for training deep neural networks\",\n        \"Sharp minima can generalize for deep nets\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Computing nonvacuous generalization bounds for deep (stochastic) neural networks with many more parameters than training data\",\n        \"Sharpness-aware minimization for efficiently improving generalization\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Asymmetric valleys: Beyond sharp and flat local minima\",\n        \"Deep residual learning for image recognition\",\n        \"Train longer, generalize better: closing the generalization gap in large batch training of neural networks\",\n        \"Firecaffe: near-linear acceleration of deep neural network training on compute clusters\",\n        \"Averaging weights leads to wider optima and better generalization\",\n        \"Three factors influencing minima in sgd\",\n        \"Catastrophic fisher explosion: Early phase fisher matrix impacts generalization\",\n        \"Highly scalable deep learning training system with mixed-precision: Training imagenet in four minutes\",\n        \"On the local minima of the empirical risk\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Asam: Adaptive sharpness-aware minimization for scale-invariant learning of deep neural networks\",\n        \"Adaptive estimation of a quadratic functional by model selection\",\n        \"Visualizing the loss landscape of neural nets\",\n        \"Scaling distributed machine learning with system and algorithm co-design\",\n        \"Concurrent adversarial learning for large-batch training\",\n        \"Decoupled weight decay regularization\",\n        \"Optimizing neural networks with kronecker-factored approximate curvature\",\n        \"Mlperf training benchmark\",\n        \"Second-order optimization method for large mini-batch: Training resnet-50 on imagenet in 35 epochs\",\n        \"Adaptive methods for nonconvex optimization\",\n        \"On the convergence of adam and beyond\",\n        \"Measuring the effects of data parallelism on neural network training\",\n        \"A bayesian perspective on generalization and stochastic gradient descent\",\n        \"Donâ€™t decay the learning rate, increase the batch size\",\n        \"Normalized flat minima: Exploring scale invariant definition of flat minima for neural networks using pac-bayesian analysis\",\n        \"Smoothout: Smoothing out sharp minima to improve generalization in deep learning\",\n        \"Yet another accelerated sgd: Resnet-50 training on imagenet in 74.7 seconds\",\n        \"Positively scale-invariant flatness of relu neural networks\",\n        \"Image classification at supercomputer scale\",\n        \"Large batch training of convolutional networks\",\n        \"Scaling sgd batch size to 32k for imagenet training\",\n        \"Imagenet training in minutes\",\n        \"Large batch optimization for deep learning: Training bert in 76 minutes\",\n        \"Wide residual networks\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Why adam beats sgd for attention models\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Towards Efficient and Scalable Sharpness-Aware Minimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}