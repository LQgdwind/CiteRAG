{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Co-learning synaptic delays, weights and adaptation in spiking neural networks\n\nPaper Abstract: Abstract Spiking neural networks (SNN) distinguish themselves from artificial neural networks (ANN) because of their inherent temporal processing and spike-based computations, enabling a power-efficient implementation in neuromorphic hardware. In this paper, we demonstrate that data processing with spiking neurons can be enhanced by co-learning the connection weights with two other biologically inspired neuronal features: 1) a set of parameters describing neuronal adaptation processes and 2) synaptic propagation delays. The former allows the spiking neuron to learn how to specifically react to incoming spikes based on its past. The trained adaptation parameters result in neuronal heterogeneity, which is found in the brain and also leads to a greater variety in available spike patterns. The latter enables to learn to explicitly correlate patterns that are temporally distanced. Synaptic delays reflect the time an action potential requires to travel from one neuron to another. We show that each of the co-learned features separately leads to an improvement over the baseline SNN and that the combination of both leads to state-of-the-art SNN results on all speech recognition datasets investigated with a simple 2-hidden layer feed-forward network. Our SNN outperforms the ANN on the neuromorpic datasets (Spiking Heidelberg Digits and Spiking Speech Commands), even with fewer trainable parameters. On the 35-class Google Speech Commands dataset, our SNN also outperforms a GRU of similar size. Our work presents brain-inspired improvements to SNN that enable them to excel over an equivalent ANN of similar size on tasks with rich temporal dynamics.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A surrogate gradient spiking baseline for speech command recognition\",\n        \"Firing-rate resonance in a generalized integrate-and-fire neuron with subthreshold resonance\",\n        \"Optimal ANN-SNN conversion for high-accuracy and ultra-low-latency spiking neural networks\",\n        \"Heterogeneous recurrent spiking neural network for spatio-temporal classification\",\n        \"The heidelberg spiking data sets for the systematic evaluation of spiking neural networks\",\n        \"Truenorth: Accelerating from zero to 64 million neurons in 10 years\",\n        \"Extended liquid state machines for speech recognition\",\n        \"Optimal conversion of conventional artificial neural networks to spiking neural networks\",\n        \"Multi-layered spiking neural network with target timestamp threshold adaptation and STDP\",\n        \"Deep residual learning in spiking neural networks\",\n        \"Incorporating learnable membrane time constant to enhance learning of spiking neural networks\",\n        \"Estimation of energy consumption in machine learning\",\n        \"A mean-field description of bursting dynamics in spiking neural networks with short-term adaptation\",\n        \"Spiking neuron models: Single neurons, populations, plasticity\",\n        \"Neuronal dynamics: From single neurons to networks and models of cognition\",\n        \"Ast: Audio spectrogram transformer\",\n        \"Beyond weights: Deep learning in spiking neural networks with pure synaptic-delay training\",\n        \"Learning heterogeneous delays in a layer of spiking neurons for fast motion detection\",\n        \"Learning delays in spiking neural networks using dilated convolutions with learnable spacings\",\n        \"Adam: A method for stochastic optimization\",\n        \"Differentiable spike: Rethinking gradient-descent for training spiking neural networks\",\n        \"Modulation of synaptic delay during synaptic plasticity\",\n        \"Networks of spiking neurons: the third generation of neural network models\",\n        \"On the complexity of learning for spiking neurons with temporal coding\",\n        \"Surrogate gradient learning in spiking neural networks: Bringing the power of gradient-based optimization to spiking neural networks\",\n        \"Bioinspired visual motion estimation\",\n        \"Efficient neuromorphic signal processing with loihi 2\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Empirical study on the efficiency of spiking neural networks with axonal delays, and algorithm-hardware benchmarking\",\n        \"Neural heterogeneity promotes robust learning\",\n        \"The organization of the nervous system\",\n        \"Diet-snn: A low-latency spiking neural network with direct input encoding and leakage and threshold optimization\",\n        \"Spike frequency adaptation supports network computations on temporally dispersed information\",\n        \"Slayer: Spike layer error reassignment in time\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Optimized spiking neurons can classify images with high accuracy through temporal coding with two spikes\",\n        \"Axonal delay as a short-term memory for feed forward deep spiking neural networks\",\n        \"Adaptive axonal delays in feedforward spiking neural networks for accurate spoken word recognition\",\n        \"An fpga implementation of a polychronous spiking neural network with delay adaptation\",\n        \"A delay learning algorithm based on spike train kernels for spiking neurons\",\n        \"Speech commands: A dataset for limited-vocabulary speech recognition\",\n        \"Attention spiking neural networks\",\n        \"Glif: A unified gated leaky integrate-and-fire neuron for spiking neural networks\",\n        \"Accurate and efficient time-domain classification with adaptive spiking recurrent neural networks\",\n        \"Seneca: Scalable energy-efficient neuromorphic computer architecture\",\n        \"The remarkable robustness of surrogate gradient learning for instilling complex function in spiking neural networks\",\n        \"Supervised learning in spiking neural networks with synaptic delay-weight plasticity\",\n        \"Spikformer: When spiking neural network meets transformer\",\n        \"SpikeGPT: Generative pre-trained language model with spiking neural networks\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Co-learning synaptic delays, weights and adaptation in spiking neural networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}