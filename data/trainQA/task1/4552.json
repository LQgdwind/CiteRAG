{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Enabling Large-Reach TLBs for High-Throughput Processors by Exploiting Memory Subregion Contiguity\n\nPaper Abstract: Abstract Accelerators, like GPUs, have become a trend to deliver future performance desire, and sharing the same virtual memory space between CPUs and GPUs is increasingly adopted to simplify programming. However, address translation, which is the key factor of virtual memory, is becoming the bottleneck of performance for GPUs. In GPUs, a single TLB miss can stall hundreds of threads due to the SIMT execute model, degrading performance dramatically. Through real system analysis, we observe that the OS shows an advanced contiguity (e.g., hundreds of contiguous pages), and more large memory regions with advanced contiguity tend to be allocated with the increase of working sets. Leveraging the observation, we propose MESC to improve the translation efficiency for GPUs. The key idea of MESC is to divide each large page frame (2MB size) in virtual memory space into memory subregions with fixed size (i.e., 64 4KB pages), and store the contiguity information of subregions and large page frames in L2PTEs. With MESC, address translations of up to 512 pages can be coalesced into single TLB entry, without the needs of changing memory allocation policy (i.e., demand paging) and the support of large pages. In the experimental results, MESC achieves 77.2% performance improvement and 76.4% reduction in dynamic translation energy for translation-sensitive workloads.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Heterogeneous computing meets Near-Memory acceleration and High-Level synthesis in the Post-Moore era\",\n        \"It’s Time to Redefine Moore’s Law Again\",\n        \"HSA Foundation\",\n        \"General Purpose Operating System Support for Multiple Page Sizes\",\n        \"Concurrent support of multiple page sizes on a skewed associative TLB\",\n        \"Colt: Coalesced large-reach tlbs\",\n        \"Efficient virtual memory for big memory servers\",\n        \"Increasing TLB reach by exploiting clustering in page translations\",\n        \"Redundant memory mappings for fast access to large memories\",\n        \"Efficient address translation for architectures with multiple page sizes\",\n        \"Hybrid tlb coalescing: Improving tlb translation coverage under diverse fragmented memory allocations\",\n        \"Architectural support for address translation on GPUs: Designing memory management units for CPU/GPUs with unified address spaces\",\n        \"Supporting x86-64 address translation for 100s of GPU lanes\",\n        \"Observations and opportunities in architecting shared virtual memory for heterogeneous systems\",\n        \"Big data causing big (TLB) problems: taming random memory accesses on the GPU\",\n        \"Filtering translation bandwidth with virtual caching\",\n        \"Mosaic: a GPU memory manager with application-transparent support for multiple page sizes\",\n        \"Devirtualizing Memory in Heterogeneous Systems\",\n        \"Scheduling Page Table Walks for Irregular GPU Applications\",\n        \"Transparent hugepage support\",\n        \"Huge pages part 1 (Introduction)\",\n        \"Coordinated and Efficient Huge Page Management with Ingens\",\n        \"gem5-gpu: A heterogeneous cpu-gpu simulator\",\n        \"Polybench: The polyhedral benchmark suite\",\n        \"Rodinia: A benchmark suite for heterogeneous computing\",\n        \"Pannotia: Understanding irregular GPGPU graph applications\",\n        \"Die-stacked DRAM caches for servers: hit ratio, latency, or bandwidth? have it all with footprint cache\",\n        \"Traffic management: a holistic approach to memory placement on NUMA systems\",\n        \"Thermostat: Application-transparent Page Management for Two-tiered Main Memory\",\n        \"Banshee: Bandwidth-efficient DRAM caching via software/hardware cooperation\",\n        \"Towards high performance paged memory for GPUs\",\n        \"Memory compaction\",\n        \"Proactive compaction\",\n        \"Making Huge Pages Actually Useful\",\n        \"Disabling Transparent Hugepages in Hadoop cluster\",\n        \"Disabling Transparent Hugepages for oracle database\",\n        \"Disabling Transparent Hugepages for MongoDB database\",\n        \"Prediction-based superpage-friendly TLB designs\",\n        \"Surpassing the TLB performance of superpages with less operating system support\",\n        \"Optimizing NUCA organizations and wiring alternatives for large caches with CACTI 6.0\",\n        \"Energy-efficient address translation\",\n        \"numactl v2. 0.11\",\n        \"Intel Haswell\",\n        \"Intel Skylake\",\n        \"Main TLB\",\n        \"An in-cache address translation mechanism\",\n        \"Reducing memory reference energy with opportunistic virtual caching\",\n        \"A new perspective for efficient virtual-cache coherence\",\n        \"Efficient synonym filtering and scalable delayed translation for hybrid virtual caching\",\n        \"Revisiting virtual L1 caches: A practical design using dynamic synonym remapping\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Enabling Large-Reach TLBs for High-Throughput Processors by Exploiting Memory Subregion Contiguity, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}