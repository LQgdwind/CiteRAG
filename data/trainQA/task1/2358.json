{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: BayesCard: Revitalizing Bayesian Networks for Cardinality Estimation\n\nPaper Abstract: Abstract. Cardinality estimation (CardEst) is an essential component in query optimizers and a fundamental problem in DBMS. A desired CardEst method should attain good algorithm performance, be stable to varied data settings, and be friendly to system deployment. However, no existing CardEst method can fulfill the three criteria at the same time. Traditional methods often have significant algorithm drawbacks such as large estimation errors. Recently proposed deep learning based methods largely improve the estimation accuracy but their performance can be greatly affected by data and often difficult for system deployment. In this paper, we revitalize the Bayesian networks (BN) for CardEst by incorporating the techniques of probabilistic programming languages. We present BayesCard, the first framework that inherits the advantages of BNs, i.e., high estimation accuracy and interpretability, while overcomes their drawbacks, i.e. low structure learning and inference efficiency. This makes BayesCard a perfect candidate for commercial DBMS deployment. Our experimental results on several single-table and multi-table benchmarks indicate BayesCard’s superiority over existing state-of-the-art CardEst methods: BayesCard achieves comparable or better accuracy, 111–222 orders of magnitude faster inference time, 111–333 orders faster training time, 111–333 orders smaller model size, and 111–222 orders faster updates. Meanwhile, BayesCard keeps stable performance when varying data with different settings. We also deploy BayesCard into PostgreSQL. On the IMDB benchmark workload, it improves the end-to-end query time by 13.3%percent13.313.3\\%, which is very close to the optimal result of 14.2%percent14.214.2\\% using an oracle of true cardinality.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning-based query performance modeling and prediction\",\n        \"pgmpy: Probabilistic graphical models using python\",\n        \"Pyro: deep universal probabilistic programming\",\n        \"Probabilistic network construction using the minimum description length principle\",\n        \"Interpretability of deep learning models: A survey of results\",\n        \"Selectivity estimation for string predicates: Overcoming the underestimation problem\",\n        \"Learning Bayesian networks is NP-complete\",\n        \"Optimal structure identification with greedy search\",\n        \"Efficient approximations for the marginal likelihood of Bayesian networks with hidden variables\",\n        \"Approximating discrete probability distributions with dependence trees\",\n        \"Modeling and reasoning with Bayesian networks\",\n        \"Selectivity estimation for range predicates using lightweight models\",\n        \"Discovering conditional functional dependencies\",\n        \"Learning sparse causal Gaussian networks with experimental intervention: regularization and coordinate descent\",\n        \"MADE: Masked autoencoder for distribution estimation\",\n        \"Selectivity estimation using probabilistic models\",\n        \"Documentation PostgreSQL 10.3\",\n        \"An approach based on bayesian networks for query selectivity estimation\",\n        \"Learning Bayesian networks: The combination of knowledge and statistical data\",\n        \"DeepDB: Learn from Data, not from Queries!\",\n        \"Learned Cardinalities: Estimating correlated joins with deep learning\",\n        \"Probabilistic Graphical Models Principles and Techniques\",\n        \"Picture: A probabilistic programming language for scene perception\",\n        \"Selectivity estimation in extensible databases – A neural network\",\n        \"Scaling structural learning with NO-BEARS to infer causal transcriptome networks\",\n        \"How Good Are Query Optimizers, Really?\",\n        \"Query optimization through the looking glass, and what we found running the join order benchmark\",\n        \"Is query optimization a solved problem?\",\n        \"The randomized dependence coefficient\",\n        \"A black-box approach to query cardinality estimation\",\n        \"On the expressive efficiency of sum product networks\",\n        \"Wavelet-based histograms for selectivity estimation\",\n        \"/Infer.NET 0.3\",\n        \"Efficiently Compiling Efficient Query Plans for Modern Hardware\",\n        \"MySQL 8.0 Reference Manual\",\n        \"How I learned to stop worrying and love re-optimization\",\n        \"Sum-product networks: A New Deep Architecture\",\n        \"Probabilistic programming in Python using PyMC3\",\n        \"Pomegranate: fast and flexible probabilistic modeling in python\",\n        \"Access path selection in a relational database management system\",\n        \"Building Efficient Query Engines in a High-Level Language\",\n        \"How to Architect a Query Compiler\",\n        \"An end-to-end learning-based cost estimator\",\n        \"Edward: A library for probabilistic modeling, inference, and criticism\",\n        \"Lightweight graphical models for selectivity estimation without independence assumptions\",\n        \"Efficiently adapting graphical models for selectivity estimation\",\n        \"Are We Ready For Learned Cardinality Estimation?\",\n        \"BayesCard: Revitalizing Bayesian Networks for Cardinality Estimation\",\n        \"FSPN: A New Class of Probabilistic Graphical Model\",\n        \"NeuroCard: One Cardinality Estimator for All Tables\",\n        \"Deep unsupervised cardinality estimation\",\n        \"Optimizing regularized cholesky score for order-based learning of bayesian networks\",\n        \"Learning Optimal Bayesian Networks Using A* Search\",\n        \"Random sampling over joins revisited\",\n        \"Efficient and Scalable Structure Learning for Bayesian Networks: Algorithms and Applications\",\n        \"FLAT: Fast, Lightweight and Accurate Method for Cardinality Estimation\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in BayesCard: Revitalizing Bayesian Networks for Cardinality Estimation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}