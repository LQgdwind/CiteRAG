{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast Optimization of Weighted Sparse Decision Trees for use in Optimal Treatment Regimes and Optimal Policy Design\n\nPaper Abstract: Abstract. Sparse decision trees are one of the most common forms of interpretable models. While recent advances have produced algorithms that fully optimize sparse decision trees for prediction, that work does not address policy design, because the algorithms cannot handle weighted data samples. Specifically, they rely on the discreteness of the loss function, which means that real-valued weights cannot be directly used. For example, none of the existing techniques produce policies that incorporate inverse propensity weighting on individual data points. We present three algorithms for efficient sparse weighted decision tree optimization. The first approach directly optimizes the weighted loss function; however, it tends to be computationally inefficient for large datasets. Our second approach, which scales more efficiently, transforms weights to integer values and uses data duplication to transform the weighted decision tree optimization problem into an unweighted (but larger) counterpart. Our third algorithm, which scales to much larger datasets, uses a randomized procedure that samples each data point with a probability proportional to its weight. We present theoretical bounds on the error of the two fast methods and show experimentally that these methods can be two orders of magnitude faster than the direct optimization of the weighted loss, without losing significant accuracy.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning Optimal and Fair Decision Trees for Non-Discriminative Decision-Making\",\n        \"Strong Optimal Classification Trees\",\n        \"Learning optimal decision trees using caching branch-and-bound search\",\n        \"Learning Certifiably Optimal Rule Lists for Categorical Data\",\n        \"Optimal classification trees\",\n        \"Classification and Regression Trees\",\n        \"An optimization approach to learning falling rule lists\",\n        \"Learning decision trees for unbalanced data\",\n        \"Tree based weighted learning for estimating individualized treatment rules with censored data\",\n        \"Causal effects in nonexperimental studies: Reevaluating the evaluation of training programs\",\n        \"MurTree: Optimal Classification Trees via Dynamic Programming and Search\",\n        \"Interpretable-AI policies using evolutionary nonlinear decision trees for discrete action systems\",\n        \"Induction of shallow decision trees\",\n        \"An Algorithm for Generating Individualized Treatment Decision Trees and Random Forests\",\n        \"Tree-Based Batch Mode Reinforcement Learning\",\n        \"A fast way to produce near-optimal fixed-depth decision trees\",\n        \"Explainable Machine Learning Challenge\",\n        \"A desicion-theoretic generalization of on-line learning and an application to boosting\",\n        \"Greedy function approximation: a gradient boosting machine\",\n        \"Optimal decision trees for categorical data via integer programming\",\n        \"Learning optimal decision trees with MaxSAT and its integration in AdaBoost\",\n        \"Optimal sparse decision trees\",\n        \"Toward Attribute Efficient Learning of Decision Lists and Parities\",\n        \"Tree-based methods for individualized treatment regimes\",\n        \"Learning cost-effective and interpretable treatment regimes\",\n        \"Evaluating the Econometric Evaluations of Training Programs with Experiment Data\",\n        \"How We Analyzed the COMPAS Recidivism Algorithm\",\n        \"Constructing optimal binary decision trees is NP-complete\",\n        \"Generalized and scalable optimal sparse decision trees\",\n        \"Estimating causal effects for survival (time-to-event) outcomes by combining classification tree analysis and propensity score weighting\",\n        \"Fast Sparse Decision Tree Optimization via Reference Ensembles\",\n        \"Learning Optimal Decision Trees with SAT\",\n        \"Mining optimal decision trees from itemset lattices\",\n        \"MALTS: Matching after learning to stretch\",\n        \"C4.5: Programs for Machine Learning\",\n        \"Interpretable machine learning: Fundamental principles and 10 grand challenges\",\n        \"Learning Customized and Optimized Lists of Rules with Mathematical Programming\",\n        \"Optimization methods for interpretable differentiable decision trees applied to reinforcement learning\",\n        \"Impact of HbA1c Measurement on Hospital Readmission Rates: Analysis of 70,000 Clinical Database Patient Records\",\n        \"Stochastic Tree Search for Estimating Optimal Dynamic Treatment Regimes\",\n        \"Which method predicts recidivism best?: a comparison of statistical, machine learning and data mining predictive models\",\n        \"Learning optimal classification trees using a binary linear program formulation\",\n        \"Optimal decision trees for the algorithm selection problem: integer programming based approaches\",\n        \"In Pursuit of Interpretable, Fair and Accurate Machine Learning for Criminal Recidivism Prediction\",\n        \"Causal falling rule lists\",\n        \"A Bayesian Framework for Learning Rule Sets for Interpretable Classification\",\n        \"Using decision lists to construct interpretable and parsimonious treatment regimes\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Fast Optimization of Weighted Sparse Decision Trees for use in Optimal Treatment Regimes and Optimal Policy Design, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}