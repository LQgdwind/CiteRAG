{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Approximate Partition Selection for Big-Data Workloads using Summary Statistics\n\nPaper Abstract: Abstract Many big-data clusters store data in large partitions that support access at a coarse, partition-level granularity. As a result, approximate query processing via row-level sampling is inefficient, often requiring reads of many partitions. In this work, we seek to answer queries quickly and approximately by reading a subset of the data partitions and combining partial answers in a weighted manner without modifying the data layout. We illustrate how to efficiently perform this query processing using a set of pre-computed summary statistics, which inform the choice of partitions and weights. We develop novel means of using the statistics to assess the similarity and importance of partitions. Our experiments on several datasets and data layouts demonstrate that to achieve the same relative error compared to uniform partition sampling, our techniques offer from 2.7×\\times to 70×70\\times reduction in the number of partitions read, and the statistics stored per partition require fewer than 100KB.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Block Sampling in Hive\",\n        \"Impala Partition Pruning\",\n        \"MySQL Partition Pruning\",\n        \"Oracle Database optimizer statistics\",\n        \"PostgreSQL 9.5.21 TABLESAMPLE\",\n        \"Program for TPC-H Data Generation with Skew\",\n        \"Snowflake SAMPLE / TABLESAMPLE\",\n        \"XGBoost Feature Importance\",\n        \"Probability Sampling from a Finite Universe, chapter 1, pages 1–93\",\n        \"Diff: a relational interface for large-scale data explanation\",\n        \"Aqua: A fast decision support system using approximate query answers\",\n        \"Congressional samples for approximate answering of group-by queries\",\n        \"Blinkdb: queries with bounded errors and bounded response times on very large data\",\n        \"Spark sql: Relational data processing in spark\",\n        \"Dynamic sample selection for approximate query processing\",\n        \"The UCI KDD archive of large data sets for data mining research and experimentation\",\n        \"Neural combinatorial optimization with reinforcement learning\",\n        \"On synopses for distinct-value estimation under multiset operations\",\n        \"Techniques for warehousing of sample data\",\n        \"Scope: Easy and e cient parallel processing of massive datasets\",\n        \"A robust, optimization-based approach for approximate answering of aggregate queries\",\n        \"Overcoming limitations of sampling for aggregation queries\",\n        \"Effective use of block-level sampling in statistics estimation\",\n        \"Approximate query processing: No silver bullet\",\n        \"Random sampling for histogram construction: How much is enough?\",\n        \"Bi-level online aggregation on raw data\",\n        \"An efficient block sampling strategy for online aggregation in the cloud\",\n        \"Synopses for massive data: Samples, histograms, wavelets, sketches\",\n        \"Block-level sampling in statistics estimation, Oct. 6 2005\",\n        \"Model-driven data acquisition in sensor networks\",\n        \"Sample+ seek: Approximating aggregates with distribution precision guarantee\",\n        \"Coopstore: Optimizing precomputed summaries for aggregation\",\n        \"The google file system\",\n        \"A bi-level bernoulli scheme for database sampling\",\n        \"Answering queries using views: A survey\",\n        \"Percolation processes\",\n        \"Online aggregation\",\n        \"Statistical estimators for aggregate relational algebra queries\",\n        \"Database cracking\",\n        \"Merging what’s cracked, cracking what’s merged: adaptive indexing in main-memory column-stores\",\n        \"Experiences with approximating queries in microsoft’s production big-data clusters\",\n        \"Pushing data-induced predicates through joins in big-data clusters\",\n        \"Quickr: Lazily approximating complex adhoc queries in bigdata clusters\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Approximate frequency counts over data streams\",\n        \"Online aggregation for large mapreduce jobs\",\n        \"Database learning: Toward a database that becomes smarter every time\",\n        \"The uncracked pieces in database cracking\",\n        \"Sampling issues in parallel database systems\",\n        \"You can stop early with cola: online processing of aggregate queries in the cloud\",\n        \"F1: A distributed sql database that scales\",\n        \"The hadoop distributed file system\",\n        \"Fine-grained partitioning for aggressive data skipping\",\n        \"Skipping-oriented partitioning for columnar layouts\",\n        \"Learning to sample: Counting with complex queries\",\n        \"Qd-tree: Learning data layouts for big data analytics\",\n        \"Locality-aware partitioning in parallel database systems\",\n        \"Scope: parallel databases meet mapreduce\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Approximate Partition Selection for Big-Data Workloads using Summary Statistics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}