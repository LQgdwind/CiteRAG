{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Cardinality Estimation over Knowledge Graphs with Embeddings and Graph Neural Networks\n\nPaper Abstract: Abstract Cardinality Estimation over Knowledge Graphs (KG) is crucial for query optimization, yet remains a challenging task due to the semi-structured nature and complex correlations of typical Knowledge Graphs. In this work, we propose GNCE, a novel approach that leverages knowledge graph embeddings and Graph Neural Networks (GNN) to accurately predict the cardinality of conjunctive queries. GNCE first creates semantically meaningful embeddings for all entities in the KG, which are then integrated into the given query, which is processed by a GNN to estimate the cardinality of the query. We evaluate GNCE on several KGs in terms of q-Error and demonstrate that it outperforms state-of-the-art approaches based on sampling, summaries, and (machine) learning in terms of estimation accuracy while also having lower execution time and less parameters. Additionally, we show that GNCE can inductively generalize to unseen entities, making it suitable for use in dynamic query processing scenarios. Our proposed approach has the potential to significantly improve query optimization and related applications that rely on accurate cardinality estimates of conjunctive queries.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Industry-scale knowledge graphs: Lessons and challenges\",\n        \"SPARQL query language for RDF\",\n        \"Cypher: An evolving query language for property graphs\",\n        \"Characteristic sets: Accurate cardinality estimation for RDF queries with multiple joins\",\n        \"Estimating the cardinality of conjunctive queries over rdf data using graph summarisation\",\n        \"Lmkg: Learned models for cardinality estimation in knowledge graphs\",\n        \"A learned sketch for subgraph counting\",\n        \"How powerful are graph neural networks?\",\n        \"Knowledge graph embedding for link prediction: A comparative analysis\",\n        \"Knowledge graphs\",\n        \"RDF 1.1 concepts and abstract syntax\",\n        \"The property graph database model\",\n        \"RDF2Vec: RDF graph embeddings for data mining\",\n        \"Predicting instance type assertions in knowledge graphs using stochastic neural networks\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Geometric deep learning: Grids, groups, graphs, geodesics, and gauges\",\n        \"Creating message passing networks\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Synopses for massive data: Samples, histograms, wavelets, sketches\",\n        \"Join size estimation subject to filter conditions\",\n        \"Wander join: Online aggregation via random walks\",\n        \"Random sampling over joins revisited\",\n        \"G-care: A framework for performance benchmarking of cardinality estimation techniques for subgraph matching\",\n        \"Learned cardinality estimation: A design space exploration and a comparative evaluation\",\n        \"Selectivity estimation using probabilistic models\",\n        \"Lightweight graphical models for selectivity estimation without independence assumptions\",\n        \"An approach based on bayesian networks for query selectivity estimation\",\n        \"Deepdb: Learn from data, not from queries!\",\n        \"Learned cardinalities: Estimating correlated joins with deep learning\",\n        \"Cardinality estimation with local deep learning models\",\n        \"Lightweight and accurate cardinality estimation by neural network gaussian process\",\n        \"Sparql basic graph pattern optimization using selectivity estimation\",\n        \"Cardinality estimation for the optimization of queries on ontologies\",\n        \"The rdf-3x engine for scalable management of rdf data\",\n        \"Mining graphlet counts in online social networks\",\n        \"Estimating selectivity for joined rdf triple patterns\",\n        \"Prone: Fast and scalable network representation learning\",\n        \"Neural subgraph counting with wasserstein estimator\",\n        \"Flow network based generative models for non-iterative diverse candidate generation\",\n        \"Lower bounds for approximation by mlp neural networks\",\n        \"Measuring and relieving the over-smoothing problem for graph neural networks from the topological view\",\n        \"Strategies for pre-training graph neural networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Recipes for semantic web dog food - the ESWC and ISWC metadata projects\",\n        \"LUBM: A benchmark for OWL knowledge base systems\",\n        \"Yago: A large ontology from wikipedia and wordnet\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"pyrdf2vec: A python implementation and extension of rdf2vec\",\n        \"A software framework and datasets for the analysis of graph measures on rdf graphs\",\n        \"The Python Standard Library - time\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Cardinality Estimation over Knowledge Graphs with Embeddings and Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}