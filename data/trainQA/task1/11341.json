{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Embedded Graph Convolutional Networks for Real-Time Event Data Processing on SoC FPGAs\n\nPaper Abstract: Abstract The utilisation of event cameras represents an important and swiftly evolving trend aimed at addressing the constraints of traditional video systems. Particularly within the automotive domain, these cameras find significant relevance for their integration into embedded real-time systems due to lower latency and energy consumption. One effective approach to ensure the necessary throughput and latency for event processing systems is through the utilisation of graph convolutional networks (GCNs). In this study, we introduce a series of hardware-aware optimisations tailored for PointNet++, a GCN architecture designed for point cloud processing. The proposed techniques result in more than a 100-fold reduction in model size compared to Asynchronous Event-based GNN (AEGNN), one of the most recent works in the field, with a relatively small decrease in accuracy (2.3% for N-Caltech101 classification, 1.7% for N-Cars classification), thus following the TinyML trend. Based on software research, we designed a custom EFGCN (Event-Based FPGA-accelerated Graph Convolutional Network) and we implemented it on ZCU104 SoC FPGA platform, achieving a throughput of 13.3 million events per second (MEPS) and real-time partially asynchronous processing with a latency of 4.47 ms. We also address the scalability of the proposed hardware model to improve the obtained accuracy score. To the best of our knowledge, this study marks the first endeavour in accelerating PointNet++ networks on SoC FPGAs, as well as the first hardware architecture exploration of graph convolutional networks implementation for real-time continuous event data processing. We publish both software and hardware source code in an open repository: https://github.com/vision-agh/***111Will be published upon acceptance..\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The role of machine vision in industry 4.0: an automotive manufacturing perspective\",\n        \"An adaptable robot vision system performing manipulation actions with flexible objects\",\n        \"Towards force sensing from vision: Observing hand-object interactions to infer manipulation forces\",\n        \"A 128× 128 120 db 15 μmus latency asynchronous temporal contrast vision sensor\",\n        \"Event-based vision: A survey\",\n        \"Event-based feature extraction using adaptive selection thresholds\",\n        \"Real-time object recognition and orientation estimation using an event-based camera and cnn\",\n        \"Learning to detect objects with a 1 megapixel event camera\",\n        \"Ecsnet: Spatio-temporal feature learning for event camera\",\n        \"Event-based asynchronous sparse convolutional networks\",\n        \"Event-based angular velocity regression with spiking networks\",\n        \"Learning from event cameras with sparse spiking convolutional neural networks\",\n        \"Motion-oriented hybrid spiking neural networks for event-based motion deblurring\",\n        \"Space-time event clouds for gesture recognition: From rgb cameras to event cameras\",\n        \"Graph-based object classification for neuromorphic vision sensing\",\n        \"Learning visual motion segmentation using event surfaces\",\n        \"Graph-based asynchronous event processing for rapid object recognition\",\n        \"Aegnn: Asynchronous event-based graph neural networks\",\n        \"Pushing the limits of asynchronous graph-based object detection with event cameras\",\n        \"Edflow: Event driven optical flow camera with keypoint detection and adaptive block matching\",\n        \"A composable dynamic sparse dataflow architecture for efficient event-based vision processing on fpga\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Eventnet: Asynchronous recursive event processing\",\n        \"Memory-efficient graph convolutional networks for object classification and detection with event cameras\",\n        \"Pointnet: Deep learning on point sets for 3d classification and segmentation\",\n        \"Pointnet++: Deep hierarchical feature learning on point sets in a metric space\",\n        \"Long short-term memory\",\n        \"Splinecnn: Fast geometric deep learning with continuous b-spline kernels\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"Optimising graph representation for hardware implementation of graph convolutional networks for event-based vision\",\n        \"Hardware acceleration of large scale gcn inference\",\n        \"Lw-gcn: A lightweight fpga-based graph convolutional network accelerator\",\n        \"Customizable fpga-based accelerator for binarized graph neural networks\",\n        \"Model-architecture co-design for high performance temporal gnn inference on fpga\",\n        \"Point-x: A spatial-locality-aware architecture for energy-efficient graph-based point-cloud deep learning\",\n        \"Fpga implementation of a point cloud processing knn algorithm used in gcn network\",\n        \"Tinypillarnet: Tiny pillar-based network for 3d point cloud object detection at edge\",\n        \"Pointnet on fpga for real-time lidar point cloud processing\",\n        \"P3net: Pointnet-based path planning on fpga\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference\",\n        \"Hats: Histograms of averaged time surfaces for robust event-based object classification\",\n        \"Converting static image datasets to spiking neuromorphic datasets using saccades\",\n        \"Cifar10-dvs: An event-stream dataset for object classification\",\n        \"Poker-dvs and mnist-dvs. their history, how they were made, and other details\",\n        \"A voxel graph cnn for object classification with event cameras\",\n        \"Vmv-gcn: Volumetric multi-view based graph cnn for event stream classification\",\n        \"Voxel-based multi-scale transformer network for event stream processing\",\n        \"Decoupled weight decay regularization\",\n        \"Distilling the knowledge in a neural network\",\n        \"Learning from teacher’s failure: A reflective learning paradigm for knowledge distillation\",\n        \"An efficient accelerator for deep learning-based point cloud registration on fpgas\",\n        \"Low-power dynamic object detection and classification with freely moving event cameras\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Embedded Graph Convolutional Networks for Real-Time Event Data Processing on SoC FPGAs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}