{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 65 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Automatic Creation of High-Bandwidth Memory Architectures from Domain-Specific Languages: The Case of Computational Fluid Dynamics\n\nPaper Abstract: Abstract. Numerical simulations can help solve complex problems. Most of these algorithms are massively parallel and thus good candidates for FPGA acceleration thanks to spatial parallelism. Modern FPGA devices can leverage high-bandwidth memory technologies, but when applications are memory-bound designers must craft advanced communication and memory architectures for efficient data movement and on-chip storage. This development process requires hardware design skills that are uncommon in domain-specific experts. In this paper, we propose an automated tool flow from a domain-specific language (DSL) for tensor expressions to generate massively-parallel accelerators on HBM-equipped FPGAs. Designers can use this flow to integrate and evaluate various compiler or hardware optimizations. We use computational fluid dynamics (CFD) as a paradigmatic example. Our flow starts from the high-level specification of tensor operations and combines an MLIR-based compiler with an in-house hardware generation flow to generate systems with parallel accelerators and a specialized memory architecture that moves data efficiently, aiming at fully exploiting the available CPU-FPGA bandwidth. We simulated applications with millions of elements, achieving up to 103 GFLOPS with one compute unit and custom precision when targeting a Xilinx Alveo U280. Our FPGA implementation is up to 25×\\times more energy efficient than expert-crafted Intel CPU implementations.\n\n{retrieved_text}\n\nGenerate exactly 65 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 65\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TensorFlow: A system for large-scale machine learning\",\n        \"TensorFlow Eager: A multi-stage, Python-embedded DSL for machine learning\",\n        \"2nd gen AMD EPYC™ 7282\",\n        \"Scheduling algorithms for high-level synthesis\",\n        \"Theano: a CPU and GPU Math Expression Compiler\",\n        \"PolyGym: Polyhedral Optimizations as an Environment for Reinforcement Learning\",\n        \"Performance assessment of FPGAs as HPC accelerators using the FPGA Empirical Roofline\",\n        \"Automatic exploration of reduced floating-point representations in iterative methods\",\n        \"TVM: An Automated End-to-End Optimizing Compiler for Deep Learning\",\n        \"Molecular Dynamics Simulations on High-Performance Reconfigurable Computing Systems\",\n        \"HBM Connect: High-Performance HLS Interconnect for FPGA HBM\",\n        \"When HLS Meets FPGA HBM: Benchmarking and Bandwidth Optimization\",\n        \"Bandwidth Optimization Through On-Chip Memory Restructuring for HLS\",\n        \"Source-to-Source Optimization for HLS.\",\n        \"Invited: Bambu: an Open-Source Research Framework for the High-Level Synthesis of Complex Applications\",\n        \"From Domain-Specific Languages to Memory-Optimized Accelerators for Fluid Dynamics\",\n        \"HBM2 Memory System for HPC Applications on an FPGA\",\n        \"Tensor Processing Primitives: A Programming Abstraction for Efficiency and Portability in Deep Learning Workloads\",\n        \"ESP4ML: platform-based design of systems-on-chip for embedded machine learning\",\n        \"Domain-Specific Multi-Level IR Rewriting for GPU: The Open Earth Compiler for GPU-Accelerated Climate Simulation\",\n        \"Fast HBM Access with FPGAs: Analysis, Architectures, and Applications\",\n        \"Shuhai: A Tool for Benchmarking HighBandwidth Memory on FPGAs\",\n        \"Factorizing the factorization – a spectral-element solver for elliptic equations with linear operation count\",\n        \"Load balancing for cpu-gpu coupling in computational fluid dynamics\",\n        \"HBM (High Bandwidth Memory) DRAM Technology and Architecture\",\n        \"High Bandwidth Memory on FPGAs: A Data Analytics Perspective\",\n        \"Spatial: A Language and Compiler for Application Accelerators\",\n        \"An FPGA-Based Low-Latency Accelerator for Randomly Wired Neural Networks\",\n        \"HeteroCL: A Multi-Paradigm Programming Infrastructure for Software-Defined Reconfigurable Computing\",\n        \"Programming and Synthesis for Software-Defined FPGA Acceleration: Status and Future Prospects\",\n        \"LLVM: A compilation framework for lifelong program analysis & transformation\",\n        \"MLIR: A compiler infrastructure for the end of Moore’s law\",\n        \"ScalaBFS: A Scalable BFS Accelerator on FPGA-HBM Platform\",\n        \"CHIP-KNN: A Configurable and High-Performance K-Nearest Neighbors Accelerator on Cloud FPGAs\",\n        \"Spectral element methods for the incompressible Navier-Stokes equations\",\n        \"Evaluating FPGA Accelerator Performance with a Parameterized OpenCL Adaptation of Selected Benchmarks of the HPCChallenge Benchmark Suite\",\n        \"Polygeist: Affine C in MLIR\",\n        \"A Survey and Evaluation of FPGA High-Level Synthesis Tools\",\n        \"The Performance and Energy Efficiency Potential of FPGAs in Scientific Computing\",\n        \"EVEREST: A design environment for extreme-scale big data analytics on heterogeneous platforms\",\n        \"System-Level Optimization of Accelerator Local Memory for Heterogeneous Systems-on-Chip\",\n        \"Halide: A Language and Compiler for Optimizing Parallelism, Locality, and Recomputation in Image Processing Pipelines\",\n        \"Impact of Off-Chip Memories on HLS-Generated Circuits\",\n        \"CFDlang: High-level code generation for high-order methods in fluid dynamics\",\n        \"TeIL: a type-safe imperative Tensor Intermediate Language\",\n        \"FPGA-based Streaming Computation for Lattice Boltzmann Method\",\n        \"Large-scale Simulations of Turbulence: HPC and Numerical Experiments\",\n        \"Solving Large Top-K Graph Eigenproblems with a Memory and Compute-optimized FPGA Design\",\n        \"An automated floating-point to fixed-point conversion methodology\",\n        \"FPGA-Based Near-Memory Acceleration of Modern Data-Intensive Applications\",\n        \"NERO: A Near High-Bandwidth Memory Stencil Accelerator for Weather Prediction Modeling\",\n        \"Manufacturing of weather forecasting simulations on high performance infrastructures\",\n        \"A CAD-based methodology to optimize HLS code via the Roofline model\",\n        \"Tensor optimization for high-level synthesis design flows\",\n        \"Meta-programming for cross-domain tensor optimizations\",\n        \"Acceleration of tensor-product operations for high-order finite element methods\",\n        \"Pyverilog: A Python-Based Hardware Design Processing Toolkit for Verilog HDL\",\n        \"Composable and Modular Code Generation in MLIR: A Structured and Retargetable Approach to Tensor Compiler Construction\",\n        \"Tensor comprehensions: Framework-agnostic high-performance machine learning abstractions\",\n        \"FPGA-Based Low-Batch Training Accelerator for Modern CNNs Featuring High Bandwidth Memory\",\n        \"isl: An Integer Set Library for the Polyhedral Model\",\n        \"Consecutivity in the isl Polyhedral Scheduler\",\n        \"Enabling FPGAs in Hyperscale Data Centers\",\n        \"Vitis 2021.1 Acceleration Environment\",\n        \"Phism: Polyhedral High-Level Synthesis in MLIR\"\n    ],\n    \"reasoning\": \"Selected these 65 references because they represent foundational work and recent advances in Automatic Creation of High-Bandwidth Memory Architectures from Domain-Specific Languages: The Case of Computational Fluid Dynamics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}