{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: NeuralKG-ind: A Python Library for Inductive Knowledge Graph Representation Learning\n\nPaper Abstract: Abstract. Since the dynamic characteristics of knowledge graphs, many inductive knowledge graph representation learning (KGRL) works have been proposed in recent years, focusing on enabling prediction over new entities. NeuralKG-ind is the first library of inductive KGRL as an important update of NeuralKG library. It includes standardized processes, rich existing methods, decoupled modules, and comprehensive evaluation metrics. With NeuralKG-ind, it is easy for researchers and engineers to reproduce, redevelop, and compare inductive KGRL methods. The library, experimental methodologies, and model re-implementing results of NeuralKG-ind are all publicly released at https://github.com/zjukg/NeuralKG/tree/ind.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"PyKEEN 1.0: A Python Library for Training and Evaluating Knowledge Graph Embeddings\",\n        \"Freebase: A Collaboratively Created Graph Database for Structuring Human Knowledge\",\n        \"Translating embeddings for modeling multi-relational data\",\n        \"TorchKGE: Knowledge Graph Embedding in Python and PyTorch\",\n        \"LibKGE - A Knowledge Graph Embedding Library for Reproducible Research\",\n        \"Toward an architecture for never-ending language learning\",\n        \"Topology-Aware Correlations Between Relations for Inductive Link Prediction in Knowledge Graphs\",\n        \"Generalizing to Unseen Elements: A Survey on Knowledge Extrapolation for Knowledge Graphs\",\n        \"Meta-Learning Based Knowledge Extrapolation for Knowledge Graphs in the Federated Setting\",\n        \"Meta-Knowledge Transfer for Inductive Knowledge Graph Embedding\",\n        \"Zero-Shot Visual Question Answering Using Knowledge Graph\",\n        \"AmpliGraph: a Library for Representation Learning on Knowledge Graphs\",\n        \"Inductive Entity Representations from Text via Link Prediction\",\n        \"Convolutional 2d knowledge graph embeddings\",\n        \"Relational Message Passing for Fully Inductive Knowledge Graph Completion\",\n        \"Knowledge Graph Embedding With Iterative Guidance From Soft Rules\",\n        \"Knowledge Transfer for Out-of-Knowledge-Base Entities : A Graph Neural Network Approach\",\n        \"OpenKE: An Open Toolkit for Knowledge Embedding\",\n        \"Image Captioning with Internal and External Knowledge\",\n        \"Few-shot Relational Reasoning via Connection Subgraph Pretraining\",\n        \"Inductive Relation Prediction Using Analogy Subgraph Embeddings\",\n        \"How Does Knowledge Graph Embedding Extrapolate to Unseen Data: A Semantic Evidence View\",\n        \"Incorporating Context Graph with Logical Reasoning for Inductive Relation Prediction\",\n        \"Œºùúá KG: A Library for Multi-source Knowledge Graph Embeddings and Applications\",\n        \"Communicative Message Passing for Inductive Relation Reasoning\",\n        \"WordNet: A Lexical Database for English\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"ConceptNet 5.5: An Open Multilingual Graph of General Knowledge\",\n        \"RotatE: Knowledge Graph Embedding by Relational Rotation in Complex Space\",\n        \"Inductive Relation Prediction by Subgraph Reasoning\",\n        \"Complex embeddings for simple link prediction\",\n        \"Composition-based Multi-Relational Graph Convolutional Networks\",\n        \"Structure-Augmented Text Representation Learning for Efficient Knowledge Graph Completion\",\n        \"Exploring Relational Semantics for Inductive Knowledge Graph Completion\",\n        \"SimKGC: Simple Contrastive Knowledge Graph Completion with Pre-trained Language Models\",\n        \"Logic Attention Based Neighborhood Aggregation for Inductive Knowledge Graph Embedding\",\n        \"Pretrained Encyclopedia: Weakly Supervised Knowledge-Pretrained Language Model\",\n        \"Subgraph Neighboring Relations Infomax for Inductive Link Prediction on Knowledge Graphs\",\n        \"Embedding Entities and Relations for Learning and Inference in Knowledge Bases\",\n        \"JAKET: Joint Pre-training of Knowledge Graph and Language Understanding\",\n        \"Pykg2vec: A Python Library for Knowledge Graph Embedding\",\n        \"NeuralKG: An Open Source Library for Diverse Representation Learning of Knowledge Graphs\",\n        \"Iteratively Learning Embeddings and Rules for Knowledge Graph Reasoning\",\n        \"DGL-KE: Training Knowledge Graph Embeddings at Scale\",\n        \"GraphVite: A High-Performance CPU-GPU Hybrid System for Node Embedding\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in NeuralKG-ind: A Python Library for Inductive Knowledge Graph Representation Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}