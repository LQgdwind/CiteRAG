{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 60 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Survey for Solving Mixed Integer Programming via Machine Learning\n\nPaper Abstract: Abstract This paper surveys the trend of leveraging machine learning to solve mixed integer programming (MIP) problems. Theoretically, MIP is an NP-hard problem, and most of the combinatorial optimization (CO) problems can be formulated as the MIP. Like other CO problems, the human-designed heuristic algorithms for MIP rely on good initial solutions and cost a lot of computational resources. Therefore, we consider applying machine learning methods to solve MIP, since ML-enhanced approaches can provide the solution based on the typical patterns from the historical data. In this paper, we first introduce the formulation and preliminaries of MIP and several traditional algorithms to solve MIP. Then, we advocate further promoting the different integration of machine learning and MIP and introducing related learning-based methods, which can be classified into exact algorithms and heuristic algorithms. Finally, we propose the outlook for learning-based MIP solvers, direction towards more combinatorial optimization problems beyond MIP, and also the mutual embrace of traditional solvers and machine learning components.\n\n{retrieved_text}\n\nGenerate exactly 60 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 60\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hybrid branching\",\n        \"A supervised machine learning approach to variable branching in branch-and-bound\",\n        \"A machine learning-based approximation of strong branching\",\n        \"Finding cuts in the tsp\",\n        \"Learning to branch\",\n        \"Exploratory combinatorial optimization with reinforcement learning\",\n        \"Machine learning for combinatorial optimization: a methodological tour d’horizon\",\n        \"Experiments in mixed-integer linear programming\",\n        \"The SCIP Optimization Suite 8.0\",\n        \"Learning to perform local rewriting for combinatorial optimization\",\n        \"V12. 1: User’s manual for cplex\",\n        \"Origins of the simplex method\",\n        \"Optimal solution predictions for mixed integer programs\",\n        \"Accelerating primal solution findings for mixed integer programs based on solution prediction\",\n        \"Reinforcement learning for variable selection in a branch and bound algorithm\",\n        \"Generalize a small pre-trained model to arbitrarily large tsp instances\",\n        \"An optimization approach for a complex real-life container loading problem\",\n        \"Exact combinatorial optimization with graph convolutional neural networks\",\n        \"Best arm identification in multi-armed bandits with delayed feedback\",\n        \"Hybrid models for learning to branch\",\n        \"Gurobi optimizer reference manual\",\n        \"Learning to search in branch and bound algorithms\",\n        \"Generative adversarial imitation learning\",\n        \"Branch and bound in mixed integer linear programming problems: A survey of techniques and trends\",\n        \"Learning to select cuts for efficient mixed-integer programming\",\n        \"Or-gym: A reinforcement learning library for operations research problems\",\n        \"Mixed integer programming formulations for single machine scheduling problems\",\n        \"Learning to branch in mixed integer programming\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"A survey on mixed-integer programming techniques in bilevel optimization\",\n        \"An automatic method of solving discrete programming problems\",\n        \"An automatic method for solving discrete programming problems\",\n        \"Dash: Dynamic approach for switching heuristics\",\n        \"Learning to search in local branching\",\n        \"On learning and branching: a survey\",\n        \"A learning-based iterative method for solving vehicle routing problems\",\n        \"Overfitting in bayesian optimization: an empirical study and early-stopping solution\",\n        \"Time dependent vehicle routing problems: Formulations, properties and heuristic algorithms\",\n        \"Solving mixed integer programs using neural networks\",\n        \"Comboptnet: Fit the right np-hard problem by learning integer programming constraints\",\n        \"Production Planning by Mixed Integer Programming\",\n        \"Ecole: A gym-like library for machine learning in combinatorial optimization solvers\",\n        \"Smart feasibility pump: Reinforcement learning for (mixed) integer programming\",\n        \"Reinforcement learning for (mixed) integer programming: Smart feasibility pump\",\n        \"Interior point methods for linear optimization\",\n        \"Scheduling in supply chains using mixed integer programming\",\n        \"Mixed integer programming for multi-vehicle path planning\",\n        \"Learning primal heuristics for mixed integer programs\",\n        \"Learning to search via self-imitation with application to risk-aware planning\",\n        \"A general large neighborhood search framework for solving integer linear programs\",\n        \"Co-training for policy learning\",\n        \"Learning a large neighborhood search algorithm for mixed integer programs\",\n        \"Improving learning to branch via reinforcement learning\",\n        \"Reinforcement learning for integer programming: Learning to cut\",\n        \"Mixed integer programming in production planning with backlogging and setup carryover: Modeling and algorithms\",\n        \"Learning large neighborhood search policy for integer programming\",\n        \"Learning to solve large-scale security-constrained unit commitment problems\",\n        \"Learning efficient search approximation in mixed integer branch and bound\",\n        \"Parameterizing branch-and-bound search trees to learn branching policies\",\n        \"Opengraphgym: A parallel reinforcement learning framework for graph optimization problems\"\n    ],\n    \"reasoning\": \"Selected these 60 references because they represent foundational work and recent advances in A Survey for Solving Mixed Integer Programming via Machine Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}