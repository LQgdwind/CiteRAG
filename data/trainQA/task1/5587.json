{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Understanding Bulk-Bitwise Processing In-Memory Through Database Analytics\n\nPaper Abstract: Abstract Bulk-bitwise processing-in-memory (PIM), where large bitwise operations are performed in parallel by the memory array itself, is an emerging form of computation with the potential to mitigate the memory wall problem. This paper examines the capabilities of bulk-bitwise PIM by constructing PIMDB, a fully-digital system based on memristive stateful logic, utilizing and focusing on in-memory bulk-bitwise operations, designed to accelerate a real-life workload: analytical processing of relational databases. We introduce a host processor programming model to support bulk-bitwise PIM in virtual memory, develop techniques to efficiently perform in-memory filtering and aggregation operations, and adapt the application data set into the memory. To understand bulk-bitwise PIM, we compare it to an equivalent in-memory database on the same host system. We show that bulk-bitwise PIM substantially lowers the number of required memory read operations, thus accelerating TPC-H filter operations by 1.6×\\times–18×\\times and full queries by 56×\\times–608×\\times, while reducing the energy consumption by 1.7×\\times–18.6×\\times and 0.81×\\times–12×\\times for these benchmarks, respectively. Our extensive evaluation uses the gem5 full-system simulation environment. The simulations also evaluate cell endurance, showing that the required endurance is within the range of existing endurance of RRAM devices.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Integrating compression and execution in column-oriented database systems\",\n        \"Pim-enabled instructions: A low-overhead, locality-aware processing-in-memory architecture\",\n        \"Simpler magic: Synthesis and mapping of in-memory logic executed in a single row to improve throughput\",\n        \"The gem5 simulator\",\n        \"'memristive' switches enable 'stateful' logic operations via material implication\",\n        \"Improved power modeling of ddr sdrams\",\n        \"Catcam: Constant-time alteration ternary cam with scalable in-memory architecture\",\n        \"Automatic sql tuning in oracle 10g\",\n        \"TPC Benchmark H Full Disclosure Report For Dell Technologies PowerEdge MX740c Modular Server While Using Microsoft SQL Server 2019 Enterprise Edition and Red Hat® Enterprise Linux® 8.0\",\n        \"TPC Benchmark H Full Disclosure Report For Dell Technologies PowerEdgee R7515 Server While Using Microsoft SQL Server 2019 Enterprise Edition 64 bit and Red Hat® Enterprise Linux® 8.0\",\n        \"NVSim: A Circuit-Level Performance, Energy, and Area Model for Emerging Nonvolatile Memory\",\n        \"In-memory database query\",\n        \"Rapid: A reram processing in-memory architecture for dna sequence alignment\",\n        \"SIMDRAM: A Framework for Bit-Serial SIMD Processing Using DRAM\",\n        \"OpenCAPI 4.0 Transaction Layer Specification\",\n        \"Floatpim: In-memory acceleration of deep neural network training with high precision\",\n        \"Nvquery: Efficient query processing in nonvolatile memory\",\n        \"Intel® Optane™ Persistent Memory\",\n        \"Memory Systems: Cache, DRAM, Disk\",\n        \"Database processing-in-memory: An experimental study\",\n        \"Magic—memristor-aided logic\",\n        \"McPAT: An integrated power, area, and timing modeling framework for multicore and manycore architectures\",\n        \"Pinatubo: A processing-in-memory architecture for bulk bitwise operations in emerging non-volatile memories\",\n        \"RIME: A Scalable and Energy-Efficient Processing-In-Memory Architecture for Floating-Point Operations\",\n        \"GraphPIM: Enabling Instruction-Level PIM Offloading in Graph Computing Frameworks\",\n        \"Whitepaper NVIDIA Tesla P100\",\n        \"Fast scans on key-value stores\",\n        \"A Course in In-Memory Data Management: The Inner Mechanics of In-Memory Databases\",\n        \"Evaluation of replication mechanisms on selected database systems\",\n        \"Mouse: Inference in non-volatile memory for energy harvesting applications\",\n        \"Memristive logic: A framework for evaluation and comparison\",\n        \"The n3xt approach to energy-efficient abundant-data computing\",\n        \"Ambit: In-memory accelerator for bulk bitwise operations using commodity dram technology\",\n        \"Isaac: A convolutional neural network accelerator with in-situ analog arithmetic in crossbars\",\n        \"IBM’s Next Generation POWER Processor\",\n        \"Logic design within memristive memories using memristor-aided logic (magic)\",\n        \"Concept: A column-oriented memory controller for efficient memory and pim operations in rram\",\n        \"Said: A supergate-aided logic synthesis flow for memristive crossbars\",\n        \"TPC benchmark H standard specification revision 3.0.0\",\n        \"Racer: Bit-pipelined processing using resistive memory\",\n        \"Overcoming the challenges of crossbar resistive memory architectures\",\n        \"Aquoman: An analytic-query offloading machine\",\n        \"Flexpushdowndb: Hybrid pushdown and caching in a cloud dbms\",\n        \"Resistive Random Access Memory (RRAM): an Overview of Materials, Switching Mechanism, Performance, Multilevel Cell (mlc) Storage, Modeling, and Applications\",\n        \"Dp-sim: A full-stack simulation infrastructure for digital processing in-memory architectures\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Understanding Bulk-Bitwise Processing In-Memory Through Database Analytics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}