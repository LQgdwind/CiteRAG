{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Evolutionary Training and Abstraction Yields Algorithmic Generalization of Neural Computers\n\nPaper Abstract: Abstract A key feature of intelligent behaviour is the ability to learn abstract strategies that scale and transfer to unfamiliar problems. An abstract strategy solves every sample from a problem class, no matter its representation or complexity â€“ like algorithms in computer science. Neural networks are powerful models for processing sensory data, discovering hidden patterns, and learning complex functions, but they struggle to learn such iterative, sequential or hierarchical algorithmic strategies. Extending neural networks with external memories has increased their capacities in learning such strategies, but they are still prone to data variations, struggle to learn scalable and transferable solutions, and require massive training data. We present the Neural Harvard Computer (NHC), a memory-augmented network based architecture, that employs abstraction by decoupling algorithmic operations from data manipulations, realized by splitting the information flow and separated modules. This abstraction mechanism and evolutionary training enable the learning of robust and scalable algorithmic solutions. On a diverse set of 111111 algorithms with varying complexities, we show that the NHC reliably learns algorithmic solutions with strong generalization and abstraction: perfect generalization and scaling to arbitrary task configurations and complexities far beyond seen during training, and being independent of the data representation and the task domain.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Transfer learning for reinforcement learning domains: A survey\",\n        \"Lifelong Machine Learning Systems: Beyond Learning Algorithms.\",\n        \"A survey of transfer learning\",\n        \"Continual lifelong learning with neural networks: A review\",\n        \"Deep learning in neural networks: An overview\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Mastering the game of Go with deep neural networks and tree search\",\n        \"Deep learning for time series classification: a review\",\n        \"Reinforcement learning, fast and slow\",\n        \"Deep learning for generic object detection: A survey\",\n        \"How to grow a mind: Statistics, structure, and abstraction\",\n        \"Building machines that learn and think like people\",\n        \"On the necessity of abstraction\",\n        \"Introduction to algorithms\",\n        \"Learning context-free grammars: Capabilities and limitations of a recurrent neural network with an external stack memory\",\n        \"A connectionist symbol manipulator that discovers the structure of context-free languages\",\n        \"Discrete recurrent neural networks for grammatical inference\",\n        \"Neural turing machines\",\n        \"Inferring algorithmic patterns with stack-augmented recurrent nets\",\n        \"Hybrid computing using a neural network with dynamic external memory\",\n        \"Neural programmer: Inducing latent programs with gradient descent\",\n        \"Neural GPUs learn algorithms\",\n        \"Learning simple algorithms from examples\",\n        \"Evolving neural turing machines for reward-based learning\",\n        \"Neural arithmetic logic units\",\n        \"Neural Arithmetic Units\",\n        \"Neural Stored-program Memory\",\n        \"Neural programmer-interpreters\",\n        \"Neural random-access machines\",\n        \"Making neural programming architectures generalize via recursion\",\n        \"Neural Logic Machines\",\n        \"Neural execution of graph algorithms\",\n        \"End-to-end memory networks\",\n        \"Memory Networks\",\n        \"Learning to transduce with unbounded memory\",\n        \"Ask me anything: Dynamic memory networks for natural language processing\",\n        \"Unsupervised Predictive Memory in a Goal-Directed Agent\",\n        \"HyperNTM: evolving scalable neural Turing machines through HyperNEAT\",\n        \"Neuroevolution of a modular memory-augmented neural network for deep memory problems\",\n        \"Curriculum learning\",\n        \"Natural evolution strategies.\",\n        \"Learning Algorithmic Solutions to Symbolic Planning Tasks with a Neural Computer Architecture\",\n        \"What is intrinsic motivation? A typology of computational approaches\",\n        \"Intrinsically motivated learning systems: an overview\",\n        \"Simple random search of static linear policies is competitive for reinforcement learning\",\n        \"Evolving neural networks through augmenting topologies\",\n        \"Evolution strategies as a scalable alternative to reinforcement learning\",\n        \"A simple weight decay can improve generalization\",\n        \"Improving exploration in evolution strategies for deep reinforcement learning via a population of novelty-seeking agents\",\n        \"A decision-theoretic generalization of online learning and an application to boosting\",\n        \"Self-improving reactive agents based on reinforcement learning, planning and teaching\",\n        \"Feed-Forward Neural Networks Need Inductive Bias to Learn Equality Relations\",\n        \"Adam: A method for stochastic optimization\",\n        \"Long short-term memory\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Evolutionary Training and Abstraction Yields Algorithmic Generalization of Neural Computers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}