{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Entity Linking Features for Emerging Entities\n\nPaper Abstract: Abstract Entity linking (EL) is the process of linking entity mentions appearing in text with their corresponding entities in a knowledge base. EL features of entities (e.g., prior probability, relatedness score, and entity embedding) are usually estimated based on Wikipedia. However, for newly emerging entities (EEs) which have just been discovered in news, they may still not be included in Wikipedia yet. As a consequence, it is unable to obtain required EL features for those EEs from Wikipedia and EL models will always fail to link ambiguous mentions with those EEs correctly as the absence of their EL features. To deal with this problem, in this paper we focus on a new task of learning EL features for emerging entities in a general way. We propose a novel approach called STAMO to learn high-quality EL features for EEs automatically, which needs just a small number of labeled documents for each EE collected from the Web, as it could further leverage the knowledge hidden in the unlabeled data. STAMO is mainly based on self-training, which makes it flexibly integrated with any EL feature or EL model, but also makes it easily suffer from the error reinforcement problem caused by the mislabeled data. Instead of some common self-training strategies that try to throw the mislabeled data away explicitly, we regard self-training as a multiple optimization process with respect to the EL features of EEs, and propose both intra-slot and inter-slot optimizations to alleviate the error reinforcement problem implicitly. We construct two EL datasets involving selected EEs to evaluate the quality of obtained EL features for EEs, and the experimental results show that our approach significantly outperforms other baseline methods of learning EL features.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Entity linking with a knowledge base: Issues, techniques, and solutions\",\n        \"Entity linking meets deep learning: Techniques and solutions\",\n        \"Neural entity linking: A survey of models based on deep learning\",\n        \"Jointly learning explainable rules for recommendation with knowledge graph\",\n        \"An end-to-end model for question answering over knowledge base with cross-attention combining global knowledge\",\n        \"Fast and space-efficient entity linking for queries\",\n        \"Deep joint entity disambiguation with local neural attention\",\n        \"Neural collective entity linking\",\n        \"Dynamic graph convolutional networks for entity linking\",\n        \"High quality candidate generation and sequential graph attention network for entity linking\",\n        \"Neural collective entity linking based on recurrent random walk network learning\",\n        \"Local and global algorithms for disambiguation to wikipedia\",\n        \"Robust disambiguation of named entities in text\",\n        \"Improving entity linking by modeling latent relations between mentions\",\n        \"An attention factor graph model for tweet entity linking\",\n        \"Linden: linking named entities with knowledge base via semantic knowledge\",\n        \"Pair-linking for collective entity disambiguation: Two could be better than all\",\n        \"Kore: keyphrase overlap relatedness for entity disambiguation\",\n        \"Joint learning of the embedding of words and entities for named entity disambiguation\",\n        \"Bridge text and knowledge by learning multi-prototype entity mention embedding\",\n        \"Improving neural entity disambiguation with graph embeddings\",\n        \"Joint entity linking with deep reinforcement learning\",\n        \"Scalable zero-shot entity linking with dense entity retrieval\",\n        \"Robust and collective entity disambiguation through semantic embeddings\",\n        \"How much is wikipedia lagging behind news?\",\n        \"Discovering emerging entities with ambiguous names\",\n        \"Discovering entities with just a little help from you\",\n        \"An embarrassingly simple approach to zero-shot learning\",\n        \"Efficient one-pass end-to-end entity linking for questions\",\n        \"Zero-shot entity linking by reading entity descriptions\",\n        \"Introduction to semi-supervised learning\",\n        \"Self-labeled techniques for semi-supervised learning: taxonomy, software and empirical study\",\n        \"Sequence labeling with meta-learning\",\n        \"Few-shot named entity recognition via meta-learning\",\n        \"A survey on deep learning for named entity recognition\",\n        \"An effective, low-cost measure of semantic relatedness obtained from wikipedia links\",\n        \"Adam: A method for stochastic optimization\",\n        \"Knowledge base population: Successful approaches and challenges\",\n        \"Large-scale named entity disambiguation based on wikipedia data\",\n        \"Learning to link with wikipedia\",\n        \"Facc1: Freebase annotation of clueweb corpora, version 1 (release date 2013-06-26, format version 1, correction level 0)\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"A bidirectional multi-paragraph reading model for zero-shot entity linking\",\n        \"Boosting entity linking performance by leveraging unlabeled documents\",\n        \"Distant learning for entity linking with automatic noise detection\",\n        \"Freebase: a collaboratively created graph database for structuring human knowledge\",\n        \"Combining labeled and unlabeled data with co-training\",\n        \"Unsupervised domain adaptation for semantic segmentation via class-balanced self-training\",\n        \"Confidence regularized self-training\",\n        \"Self-training with noisy student improves imagenet classification\",\n        \"Revisiting self-training for neural sequence generation\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Learning Entity Linking Features for Emerging Entities, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}