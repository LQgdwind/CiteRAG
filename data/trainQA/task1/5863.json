{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Searching the Deployable Convolution Neural Networks for GPUs\n\nPaper Abstract: Abstract Customizing Convolution Neural Networks (CNN) for production use has been a challenging task for DL practitioners. This paper intends to expedite the model customization with a model hub that contains the optimized models tiered by their inference latency using Neural Architecture Search (NAS). To achieve this goal, we build a distributed NAS system to search on a novel search space that consists of prominent factors to impact latency and accuracy. Since we target GPU, we name the NAS optimized models as GPUNet, which establishes a new SOTA Pareto frontier in inference latency and accuracy. Within 1m‚Äãsùëöùë†ms, GPUNet is 2x faster than EfficientNet-X and FBNetV3 with even better accuracy. We also validate GPUNet on detection tasks, and GPUNet consistently outperforms EfficientNet-X and FBNetV3 on COCO detection tasks in both latency and accuracy. All of these data validate that our NAS system is effective and generic to handle different design tasks. With this NAS system, we expand GPUNet to cover a wide range of latency targets such that DL practitioners can deploy our models directly in different scenarios.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Black box optimization challenges.\",\n        \"Intel‚Äôs openvino.\",\n        \"Nvidia‚Äôs tensorrt.\",\n        \"Pytorch image models.\",\n        \"The sobol sequence implemented in the pytorch.\",\n        \"Computing receptive fields of convolutional neural networks.\",\n        \"Beit: Bert pre-training of image transformers.\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware.\",\n        \"Cascade r-cnn: Delving into high quality object detection.\",\n        \"Fbnetv3: Joint architecture-recipe search using predictor pretraining.\",\n        \"Imagenet: A large-scale hierarchical image database.\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification.\",\n        \"Deep residual learning for image recognition.\",\n        \"Searching for mobilenetv3.\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications.\",\n        \"Squeeze-and-excitation networks.\",\n        \"The design and analysis of experiments.\",\n        \"Searching for fast model families on datacenter accelerators.\",\n        \"Auto-deeplab: Hierarchical neural architecture search for semantic image segmentation.\",\n        \"Pay attention to mlps.\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows.\",\n        \"The expressive power of neural networks: A view from the width.\",\n        \"Nsga-net: neural architecture search using multi-objective genetic algorithm.\",\n        \"Efficient neural architecture search via parameters sharing.\",\n        \"Designing network design spaces.\",\n        \"Searching for activation functions.\",\n        \"Tresnet: High performance gpu-dedicated architecture.\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks.\",\n        \"On the distribution of points in a cube and the approximate evaluation of integrals.\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks.\",\n        \"Efficientnetv2: Smaller models and faster training.\",\n        \"Attention is all you need.\",\n        \"Fbnetv2: Differentiable neural architecture search for spatial and channel dimensions.\",\n        \"Alphanet: Improved training of supernet with alpha-divergence.\",\n        \"Learning search space partition for black-box optimization using monte carlo tree search.\",\n        \"Sample-efficient neural architecture search by learning actions for monte carlo tree search.\",\n        \"Alphax: exploring neural architectures with deep neural networks and monte carlo tree search.\",\n        \"Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search.\",\n        \"Self-training with noisy student improves imagenet classification.\",\n        \"Bignas: Scaling up neural architecture search with big single-stage models.\",\n        \"How to train your super-net: An analysis of training heuristics in weight-sharing nas.\",\n        \"Evaluating the search phase of neural architecture search.\",\n        \"mixup: Beyond empirical risk minimization.\",\n        \"Resnest: Split-attention networks.\",\n        \"Few-shot neural architecture search.\",\n        \"Learning transferable architectures for scalable image recognition.\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Searching the Deployable Convolution Neural Networks for GPUs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}