{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Massively Parallel Implementation of Multilevel Monte Carlo for Finite Element Models\n\nPaper Abstract: Abstract. The Multilevel Monte Carlo (MLMC) method has proven to be an effective variance-reduction statistical method for Uncertainty Quantification (UQ) in Partial Differential Equation (PDE) models, combining model computations at different levels to create an accurate estimate. Still, the computational complexity of the resulting method is extremely high, particularly for 3D models, which requires advanced algorithms for the efficient exploitation of High Performance Computing (HPC). In this article we present a new implementation of the MLMC in massively parallel computer architectures, exploiting parallelism within and between each level of the hierarchy. The numerical approximation of the PDE is performed using the finite element method but the algorithm is quite general and could be applied to other discretization methods. The two key ingredients of the implementation are a good processor partition scheme together with a good scheduling algorithm to assign work to different processors. We introduce a multiple partition of the set of processors that permits the simultaneous execution of different levels and we develop a dynamic scheduling algorithm to exploit it. The problem of finding the optimal scheduling of distributed tasks in a parallel computer is an NP-complete problem. We propose and analyze a new greedy scheduling algorithm to assign samples and we show that it is a 2-approximation, which is the best that may be expected under general assumptions. On top of this result we design a distributed memory implementation using the Message Passing Interface (MPI) standard. Finally we present a set of numerical experiments illustrating its scalability properties.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Breaking the coherence barrier: A new theory for compressed sensing\",\n        \"A stochastic collocation method for elliptic partial differential equations with random input data\",\n        \"Embedded multilevel Monte Carlo for uncertainty quantification in random domains\",\n        \"A tutorial-driven introduction to the parallel finite element library FEMPAR v1.0.0\",\n        \"Implementation and Scalability Analysis of Balancing Domain Decomposition Methods\",\n        \"Multilevel balancing domain decomposition at extreme scales\",\n        \"FEMPAR: An Object-Oriented Parallel Finite Element Framework\",\n        \"The aggregated unfitted finite element method for elliptic problems\",\n        \"PETSc Web page\",\n        \"Multi-level Monte Carlo Finite Element method for elliptic PDEs with stochastic coefficients\",\n        \"The parallel finite element system M++ with integrated multilevel preconditioning and multilevel Monte Carlo methods\",\n        \"Handbook on Scheduling\",\n        \"Efficient distribution estimation and uncertainty quantification for elliptic problems on domains with stochastic boundaries\",\n        \"Sparse quadrature for high-dimensional integration with Gaussian measure\",\n        \"Multilevel Monte Carlo methods and applications to elliptic PDEs with random coefficients\",\n        \"A continuation multilevel Monte Carlo algorithm\",\n        \"Numerical solution of the Poisson equation on domains with a thin layer of random thickness\",\n        \"Numerical solution of the homogeneous Neumann boundary value problem on domains with a thin layer of random thickness\",\n        \"Topology optimization under uncertainty using a stochastic gradient-based approach\",\n        \"Sparse polynomial chaos expansions via compressed sensing and D-optimal design\",\n        \"Scheduling Massively Parallel Multigrid for Multilevel Monte Carlo Methods\",\n        \"Design and implementation of multilevel parallel optimization on the Intel teraflops\",\n        \"Multilevel parallelism for optimization on MP computers - Theory and experiment\",\n        \"A multilevel Monte Carlo method for computing failure probabilities\",\n        \"The design and implementation of hypre, a library of parallel high performance preconditioners\",\n        \"A generic C++ library for multilevel quasi-Monte Carlo\",\n        \"Stochastic Finite Elements: A Spectral Approach\",\n        \"Multilevel Monte Carlo Path Simulation\",\n        \"Stochastic finite differences and multilevel Monte Carlo for a class of SPDEs in finance\",\n        \"Multilevel quasi-Monte Carlo path simulation\",\n        \"Bounds for Certain Multiprocessing Anomalies\",\n        \"Bounds on Multiprocessing Timing Anomalies\",\n        \"Compressive sampling of polynomial chaos expansions: Convergence analysis and sampling strategies\",\n        \"Analysis of the domain mapping method for elliptic diffusion problems on random domains\",\n        \"First order second moment analysis for stochastic interface problems based on low-rank approximation\",\n        \"Sparse second moment analysis for elliptic problems in stochastic domains\",\n        \"Boomeramg: A parallel algebraic multigrid solver and preconditioner\",\n        \"Statistical Romberg extrapolation: A new variance reduction method and applications to option pricing\",\n        \"Spectral Methods for Uncertainty Quantification: With Applications to Computational Fluid Dynamics\",\n        \"Sparse polynomial chaos expansions: Literature survey and benchmark\",\n        \"Multi-level Monte Carlo finite volume methods for nonlinear systems of conservation laws in multi-dimensions\",\n        \"Multilevel Monte Carlo finite volume methods for shallow water equations with uncertain topography in multi-dimensions\",\n        \"Stochastic projection schemes for deterministic linear elliptic partial differential equations on random domains\",\n        \"Survey of multifidelity methods in uncertainty propagation, inference, and optimization\",\n        \"A Continuation Multi Level Monte Carlo (C-MLMC) method for uncertainty quantification in compressible inviscid aerodynamics\",\n        \"Sparse Legendre expansions via ℓ1subscriptℓ1\\\\ell_{1}-minimization\",\n        \"On dynamic parallelization of multilevel Monte Carlo algorithm\",\n        \"Adaptive load balancing for massively parallel multi-level Monte Carlo solvers\",\n        \"Robust multi-level Monte Carlo finite volume methods for systems of hyperbolic conservation laws with random input data\",\n        \"Static load balancing for Multi-Level Monte Carlo finite volume solvers\",\n        \"PyCOMPSs: Parallel computational workflows in Python\",\n        \"A parallel dynamic asynchronous framework for Uncertainty Quantification by hierarchical Monte Carlo algorithms\",\n        \"Approximation Algorithms\",\n        \"Distributed-memory parallelization of the aggregated unfitted finite element method\",\n        \"High-order collocation methods for differential equations with random inputs\",\n        \"Modeling uncertainty in flow simulations via generalized polynomial chaos\",\n        \"Numerical methods for differential equations in random domains\",\n        \"Parallel Multilevel Monte Carlo Algorithms for Elliptic PDEs with Random Coefficients\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in A Massively Parallel Implementation of Multilevel Monte Carlo for Finite Element Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}