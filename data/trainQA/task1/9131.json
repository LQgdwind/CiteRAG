{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: TrojLLM: A Black-box Trojan Prompt Attack on Large Language Models\n\nPaper Abstract: Abstract Large Language Models (LLMs) are progressively being utilized as machine learning services and interface tools for various applications. However, the security implications of LLMs, particularly in relation to adversarial and Trojan attacks, remain insufficiently examined. In this paper, we propose TrojLLM, an automatic and black-box framework to effectively generate universal and stealthy triggers. When these triggers are incorporated into the input data, the LLMs’ outputs can be maliciously manipulated. Moreover, the framework also supports embedding Trojans within discrete prompts, enhancing the overall effectiveness and precision of the triggers’ attacks. Specifically, we propose a trigger discovery algorithm for generating universal triggers for various inputs by querying victim LLM-based APIs using few-shot data samples. Furthermore, we introduce a novel progressive Trojan poisoning algorithm designed to generate poisoned prompts that retain efficacy and transferability across a diverse range of models. Our experiments and results demonstrate TrojLLM’s capacity to effectively insert Trojans into text prompts in real-world black-box LLM APIs including GPT-3.5 and GPT-4, while maintaining exceptional performance on clean test sets. Our work sheds light on the potential security risks in current models and offers a potential defensive approach. The source code of TrojLLM is available at https://github.com/UCF-ML-Research/TrojLLM.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Language models are few-shot learners\",\n        \"Gpt-4 technical report\",\n        \"Making pre-trained language models better few-shot learners\",\n        \"Rlprompt: Optimizing discrete text prompts with reinforcement learning\",\n        \"Differentiable prompt makes pre-trained language models better few-shot learners\",\n        \"Language models as knowledge bases?\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Fantastically ordered prompts and where to find them: Overcoming few-shot prompt order sensitivity\",\n        \"Calibrate before use: Improving few-shot performance of language models\",\n        \"Badprompt: Backdoor attacks on continuous prompts\",\n        \"Pre-train, prompt, and predict: A systematic survey of prompting methods in natural language processing\",\n        \"How can we know what language models know?\",\n        \"Prompt waywardness: The curious case of discretized interpretation of continuous prompts\",\n        \"Exploring the universal vulnerability of prompt-based learning paradigm\",\n        \"Ppt: Backdoor attacks on pre-trained models via poisoned prompt tuning\",\n        \"Promptattack: Prompt-based attack for language models via gradient search\",\n        \"Language models are unsupervised multitask learners\",\n        \"Trojtext: Test-time invisible textual trojan insertion\",\n        \"Ssl-cleanse: Trojan detection and mitigation in self-supervised learning\",\n        \"Audit and improve robustness of private neural networks on encrypted data\",\n        \"Estas: Effective and stable trojan attacks in self-supervised encoders with one target unlabelled sample\",\n        \"Trojvit: Trojan insertion in vision transformers\",\n        \"Trojbits: A hardware aware inference-time attack on transformer-based language models\",\n        \"Prompter\",\n        \"Riku ai\",\n        \"Visualise ai\",\n        \"Landing ai visual prompting app\",\n        \"Promptbase\",\n        \"Promptperfect by jina ai\",\n        \"Promptsource: An integrated development environment and repository for natural language prompts\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Deberta: Decoding-enhanced bert with disentangled attention\",\n        \"Roberta-large\",\n        \"Gpt2-large\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"GPT-J-6B: A 6 Billion Parameter Autoregressive Language Model\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales\",\n        \"Mining and summarizing customer reviews\",\n        \"A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts\",\n        \"Character-level convolutional networks for text classification\",\n        \"Fine-pruning: Defending against backdooring attacks on deep neural networks\",\n        \"Neural attention distillation: Erasing backdoor triggers from deep neural networks\",\n        \"Universal adversarial triggers for attacking and analyzing nlp\",\n        \"Badnets: Identifying vulnerabilities in the machine learning model supply chain\",\n        \"Weight poisoning attacks on pretrained models\",\n        \"Hidden killer: Invisible textual backdoor attacks with syntactic trigger\",\n        \"Turn the combination lock: Learnable textual backdoor attacks via word substitution\",\n        \"Compression, transduction, and creation: A unified framework for evaluating natural language generation\",\n        \"Reformulating unsupervised style transfer as paraphrase generation\",\n        \"Paraphrasing for style\",\n        \"Shakespearizing modern language using copy-enriched sequence to sequence models\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in TrojLLM: A Black-box Trojan Prompt Attack on Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}