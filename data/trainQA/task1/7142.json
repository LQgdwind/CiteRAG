{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Pruning by Active Attention Manipulation\n\nPaper Abstract: Abstract Filter pruning of a CNN is typically achieved by applying discrete masks on the CNN’s filter weights or activation maps, post-training. Here, we present a new filter-importance-scoring concept named pruning by active attention manipulation (PAAM), that sparsifies the CNN’s set of filters through a particular attention mechanism, during-training. PAAM learns analog filter scores from the filter weights by optimizing a cost function regularized by an additive term in the scores. As the filters are not independent, we use attention to dynamically learn their correlations. Moreover, by training the pruning scores of all layers simultaneously, PAAM can account for layer inter-dependencies, which is essential to finding a performant sparse sub-network. PAAM can also train and generate a pruned network from scratch in a straightforward, one-stage training process without requiring a pre-trained network. Finally, PAAM does not need layer-specific hyperparameters and pre-defined layer budgets, since it can implicitly determine the appropriate number of filters in each layer. Our experimental results on different network architectures suggest that PAAM outperforms state-of-the-art structured-pruning methods (SOTA). On CIFAR-10 dataset, without requiring a pre-trained baseline network, we obtain 1.02% and 1.19% accuracy gain and 52.3% and 54% parameters reduction, on ResNet56 and ResNet110, respectively. Similarly, on the ImageNet dataset, PAAM achieves 1.06%percent1.061.06\\% accuracy gain while pruning 51.1%percent51.151.1\\% of the parameters on ResNet50. For Cifar-10, this is better than the SOTA with a margin of 9.5% and 6.6%, respectively, and on ImageNet with a margin of 11%.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Structured pruning of deep convolutional neural networks\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n        \"Model compression and hardware acceleration for neural networks: A comprehensive survey\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Efficient matrix-free approximations of second-order information, with applications to pruning and optimization\",\n        \"Discrete model compression with resource constraint for deep neural networks\",\n        \"Network pruning via performance maximization\",\n        \"Highway and residual networks learn unrolled iterative estimation\",\n        \"Attention mechanisms in computer vision: A survey\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Identity mappings in deep residual networks\",\n        \"Soft filter pruning for accelerating deep convolutional neural networks\",\n        \"Pruning filter via geometric median for deep convolutional neural networks acceleration\",\n        \"Filter pruning via geometric median for deep convolutional neural networks acceleration\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Sparsity in deep learning: Pruning and growth for efficient inference and training in neural networks\",\n        \"Squeeze-and-excitation networks\",\n        \"Residual connections encourage iterative inference\",\n        \"Neural circuit policies enabling auditable autonomy\",\n        \"Backpropagation applied to handwritten zip code recognition\",\n        \"Pruning filters for efficient convnets\",\n        \"Learning filter basis for convolutional neural network compression\",\n        \"Equal bits: Enforcing equally distributed binary network weights\",\n        \"Provable filter pruning for efficient neural networks\",\n        \"Sparse flows: Pruning continuous-depth models\",\n        \"Hrank: Filter pruning using high-rank feature map\",\n        \"Towards optimal structured cnn pruning via generative adversarial learning\",\n        \"Learning sparse neural networks through l0 regularization\",\n        \"Autopruner: An end-to-end trainable filter pruning method for efficient deep model inference\",\n        \"Interval Adjoint Significance Analysis for Neural Networks\",\n        \"Neural architecture search without training\",\n        \"Collaborative channel pruning for deep networks\",\n        \"Ac/dc: Alternating compressed/decompressed training of deep neural networks\",\n        \"Chip: Channel independence-based pruning for compact neural networks\",\n        \"Sparsifying neural network connections for face recognition\",\n        \"EfficientNet: Rethinking model scaling for convolutional neural networks\",\n        \"Scop: Scientific control for reliable neural network pruning\",\n        \"Attention is all you need\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"NISP: pruning networks using neuron importance score propagation\",\n        \"To prune, or not to prune: exploring the efficacy of pruning for model compression\",\n        \"Discrimination-aware channel pruning for deep neural networks\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in Pruning by Active Attention Manipulation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}