{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Communication-Efficient Training Workload Balancing for Decentralized Multi-Agent Learning\n\nPaper Abstract: Abstract Decentralized Multi-agent Learning (DML) enables collaborative model training while preserving data privacy. However, inherent heterogeneity in agents’ resources (computation, communication, and task size) may lead to substantial variations in training time. This heterogeneity creates a bottleneck, lengthening the overall training time due to straggler effects and potentially wasting spare resources of faster agents. To minimize training time in heterogeneous environments, we present a Communication-Efficient Training Workload Balancing for Decentralized Multi-Agent Learning (ComDML), which balances the workload among agents through a decentralized approach. Leveraging local-loss split training, ComDML enables parallel updates, where slower agents offload part of their workload to faster agents. To minimize the overall training time, ComDML optimizes the workload balancing by jointly considering the communication and computation capacities of agents, which hinges upon integer programming. A dynamic decentralized pairing scheduler is developed to efficiently pair agents and determine optimal offloading amounts. We prove that in ComDML, both slower and faster agents’ models converge, for convex and non-convex functions. Furthermore, extensive experimental results on popular datasets (CIFAR-10, CIFAR-100, and CINIC-10) and their non-I.I.D. variants, with large models such as ResNet-56 and ResNet-110, demonstrate that ComDML can significantly reduce the overall training time while maintaining model accuracy, compared to state-of-the-art methods. ComDML demonstrates robustness in heterogeneous environments, and privacy measures can be seamlessly integrated for enhanced data protection.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"“Communication-efficient learning of deep networks from decentralized data\",\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Split learning for health: Distributed deep learning without sharing raw patient data\",\n        \"Splitfed: When federated learning meets split learning\",\n        \"Accelerating federated learning with split learning on locally generated losses\",\n        \"Tifl: A tier-based federated learning system\",\n        \"Fedat: A high-performance and communication-efficient federated learning system with asynchronous tiers\",\n        \"Decentralized federated learning: Fundamentals, state of the art, frameworks, trends, and challenges\",\n        \"Fedcs: Efficient communication scheduling in decentralized federated learning\",\n        \"On safeguarding privacy and security in the framework of federated learning\",\n        \"Braintorrent: A peer-to-peer environment for decentralized federated learning\",\n        \"Gossip learning as a decentralized alternative to federated learning\",\n        \"Gossipfl: A decentralized federated learning framework with sparsified and adaptive communication\",\n        \"On the convergence of fedavg on non-iid data\",\n        \"Scaffold: Stochastic controlled averaging for federated learning\",\n        \"Decoupled greedy learning of cnns\",\n        \"Deep residual learning for image recognition\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Cinic-10 is not imagenet or cifar-10\",\n        \"Advances and open problems in federated learning\",\n        \"Heterofl: Computation and communication efficient federated learning for heterogeneous clients\",\n        \"Communication-efficient federated learning via knowledge distillation\",\n        \"Speed up federated learning in heterogeneous environment: A dynamic tiering approach\",\n        \"Communication-efficient federated learning\",\n        \"Optimizing federated learning in distributed industrial iot: A multi-agent approach\",\n        \"Model pruning enables localized and efficient federated learning for yield forecasting and data sharing\",\n        \"Towards federated learning at scale: System design\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Decentralized federated averaging\",\n        \"Gossip learning with linear models on fully distributed data\",\n        \"A blockchain-based decentralized federated learning framework with committee consensus\",\n        \"Baffle: Blockchain based aggregator free federated learning\",\n        \"Peer-to-peer federated learning on graphs\",\n        \"Threats to federated learning: A survey\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Optimization of collective communication operations in mpich\",\n        \"Quantized neural networks: Training neural networks with low precision weights and activations\",\n        \"Ringsfl: An adaptive split federated learning towards taming client heterogeneity\",\n        \"See through gradients: Image batch recovery via gradinversion\",\n        \"Deep learning with differential privacy\",\n        \"Secure aggregation for clustered federated learning\",\n        \"Certified robustness to adversarial examples with differential privacy\",\n        \"Privacy-preserving split learning via patch shuffling over transformers\",\n        \"Nopeek: Information leakage reduction to share activations in distributed deep learning\",\n        \"Splitguard: Detecting and mitigating training-hijacking attacks in split learning\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Communication-Efficient Training Workload Balancing for Decentralized Multi-Agent Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}