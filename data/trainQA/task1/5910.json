{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GraphCache: Message Passing as Caching for Sentence-Level Relation Extraction\n\nPaper Abstract: Abstract Entity types and textual context are essential properties for sentence-level relation extraction (RE). Existing work only encodes these properties within individual instances, which limits the performance of RE given the insufficient features in a single sentence. In contrast, we model these properties from the whole dataset and use the dataset-level information to enrich the semantics of every instance. We propose the GraphCache (Graph Neural Network as Caching) module, that propagates the features across sentences to learn better representations for RE. GraphCache aggregates the features from sentences in the whole dataset to learn global representations of properties, and use them to augment the local features within individual sentences. The global property features act as dataset-level prior knowledge for RE, and a complement to the sentence-level features. Inspired by the classical caching technique in computer systems, we develop GraphCache to update the property representations in an online manner. Overall, GraphCache yields significant effectiveness gains on RE and enables efficient message passing across all sentences in the dataset.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TACRED revisited: A thorough evaluation of the TACRED relation extraction task\",\n        \"Matching the blanks: Distributional similarity for relation learning\",\n        \"Graph convolutional encoders for syntax-aware neural machine translation\",\n        \"Latent dirichlet allocation\",\n        \"Connecting the dots: Document-level neural relation extraction with edge-oriented graphs\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Neural relation extraction for knowledge base enrichment\",\n        \"Attention guided graph convolutional networks for relation extraction\",\n        \"Inductive representation learning on large graphs\",\n        \"Deep convolutional networks on graph-structured data\",\n        \"Semeval-2010 task 8: Multi-way classification of semantic relations between pairs of nominals\",\n        \"Latent dirichlet allocation (lda) and topic modeling: models, applications, a survey\",\n        \"SpanBERT: Improving pre-training by representing and predicting spans\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Relation classification with entity type restriction\",\n        \"The cross entropy method for classification\",\n        \"Encoding sentences with graph convolutional networks for semantic role labeling\",\n        \"Reasoning with latent structure refinement for document-level relation extraction\",\n        \"Learning from context or names? an empirical study on neural relation extraction\",\n        \"Large-scale hierarchical text classification with recursively regularized deep graph-cnn\",\n        \"Knowledge enhanced contextual word representations\",\n        \"Pointnet: Deep learning on point sets for 3d classification and segmentation\",\n        \"Inter-sentence relation extraction with document-level graph convolutional neural network\",\n        \"Attention is all you need\",\n        \"Joint constrained learning for event-event relation extraction\",\n        \"Relation classification via multi-level attention CNNs\",\n        \"K-adapter: Infusing knowledge into pre-trained models with adapters\",\n        \"Simplifying graph convolutional networks\",\n        \"Graph neural networks for natural language processing: A survey\",\n        \"How powerful are graph neural networks?\",\n        \"Gdpnet: Refining latent multi-view graph for relation extraction\",\n        \"LUKE: Deep contextualized entity representations with entity-aware self-attention\",\n        \"Graph convolutional networks for text classification\",\n        \"Dialogue-based relation extraction\",\n        \"Relation classification via convolutional deep neural network\",\n        \"Topic memory networks for short text classification\",\n        \"Double graph based reasoning for document-level relation extraction\",\n        \"Graph convolution over pruned dependency trees improves relation extraction\",\n        \"Position-aware attention and supervised data improve slot filling\",\n        \"Condition aware and revise transformer for question answering\",\n        \"An improved baseline for sentence-level relation extraction\",\n        \"Graph neural networks with generated parameters for relation extraction\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in GraphCache: Message Passing as Caching for Sentence-Level Relation Extraction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}