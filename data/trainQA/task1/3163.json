{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Temporal Knowledge Graph Reasoning Based on Evolutional Representation Learning\n\nPaper Abstract: Abstract. Knowledge Graph (KG) reasoning that predicts missing facts for incomplete KGs has been widely explored. However, reasoning over Temporal KG (TKG) that predicts facts in the future is still far from resolved. The key to predict future facts is to thoroughly understand the historical facts. A TKG is actually a sequence of KGs corresponding to different timestamps, where all concurrent facts in each KG exhibit structural dependencies and temporally adjacent facts carry informative sequential patterns. To capture these properties effectively and efficiently, we propose a novel Recurrent Evolution network based on Graph Convolution Network (GCN), called RE-GCN, which learns the evolutional representations of entities and relations at each timestamp by modeling the KG sequence recurrently. Specifically, for the evolution unit, a relation-aware GCN is leveraged to capture the structural dependencies within the KG at each timestamp. In order to capture the sequential patterns of all facts in parallel, the historical KG sequence is modeled auto-regressively by the gate recurrent components. Moreover, the static properties of entities such as entity types, are also incorporated via a static graph constraint component to obtain better entity representations. Fact prediction at future timestamps can then be realized based on the evolutional entity and relation representations. Extensive experiments demonstrate that the RE-GCN model obtains substantial performance and efficiency improvement for the temporal reasoning tasks on six benchmark datasets. Especially, it achieves up to 11.46% improvement in MRR for entity prediction with up to 82 times speedup comparing to the state-of-the-art baseline.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Twitter mood predicts the stock market\",\n        \"Translating embeddings for modeling multi-relational data\",\n        \"ICEWS coded event data\",\n        \"Hyte: Hyperplane-based temporally aware knowledge graph embedding\",\n        \"Dynamic Knowledge Graph based Multi-Event Forecasting\",\n        \"Convolutional 2d knowledge graph embeddings\",\n        \"Temporal Knowledge Graph Forecasting with Neural ODE\",\n        \"Predicting the co-evolution of event and knowledge graphs\",\n        \"Learning sequence encoders for temporal knowledge graph completion\",\n        \"Diachronic embedding for temporal knowledge graph completion\",\n        \"Eventkg: A multilingual event-centric temporal knowledge graph\",\n        \"EventKG–the hub of event knowledge on the web–and biographical timeline generation\",\n        \"Dyernie: Dynamic evolution of riemannian manifold embeddings for temporal knowledge graph completion\",\n        \"Graph Hawkes Neural Network for Forecasting on Temporal Knowledge Graphs\",\n        \"Temporal Knowledge Base Completion: New Algorithms and Evaluation Protocols\",\n        \"Recurrent Event Network: Autoregressive Structure Inference over Temporal Knowledge Graphs\",\n        \"Recurrent Event Network for Reasoning over Temporal Knowledge Graphs\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Combining heterogeneous data sources for civil unrest forecasting\",\n        \"Deriving validity time in knowledge graph\",\n        \"Gdelt: Global data on events, location, and tone, 1979–2012\",\n        \"Deepgcns: Can gcns go as deep as cnns?\",\n        \"Yago3: A knowledge base from multilingual wikipedias\",\n        \"Planned protest modeling in news and social media\",\n        \"Using social media to predict the future: a systematic literature review\",\n        \"Temporal reasoning over event knowledge graphs\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Structured sequence modeling with graph convolutional recurrent networks\",\n        \"End-to-end structure-aware convolutional networks for knowledge base completion\",\n        \"The use of Twitter to track levels of disease activity and public concern in the US during the influenza A H1N1 pandemic\",\n        \"RotatE: Knowledge Graph Embedding by Relational Rotation in Complex Space\",\n        \"Know-evolve: Deep temporal reasoning for dynamic knowledge graphs\",\n        \"Dyrep: Learning representations over dynamic graphs\",\n        \"Complex embeddings for simple link prediction\",\n        \"Composition-based Multi-Relational Graph Convolutional Networks\",\n        \"TeMP: Temporal Message Passing for Temporal Knowledge Graph Completion\",\n        \"Efficiently embedding dynamic knowledge graphs\",\n        \"Empirical evaluation of rectified activations in convolutional network\",\n        \"Temporal Knowledge Graph Completion Based on Time Series Gaussian Embedding\",\n        \"Embedding entities and relations for learning and inference in knowledge bases\",\n        \"A vectorized relational graph convolutional network for multi-relational network alignment\",\n        \"Learning from History: Modeling Temporal Knowledge Graphs with Sequential Copy-Generation Networks\",\n        \"A survey on application of knowledge graph\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Temporal Knowledge Graph Reasoning Based on Evolutional Representation Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}