{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DAG Scheduling in the BSP Model\n\nPaper Abstract: Abstract. We study the problem of scheduling an arbitrary computational DAG on a fixed number of processors while minimizing the makespan. While previous works have mostly studied this problem in relatively restricted models, we define and analyze DAG scheduling in the Bulk Synchronous Parallel (BSP) model, which is a well-established parallel computing model that captures the communication cost between processors much more accurately. We provide a detailed taxonomy of simpler scheduling models that can be understood as variants or special cases of BSP, and discuss the properties of the problem and the optimum cost in these models, and how they differ from BSP. This essentially allows us to dissect the different building blocks of the BSP model, and gain insight into how each of these influences the scheduling problem. We then analyze the hardness of DAG scheduling in BSP in detail. We show that the problem is solvable in polynomial time for some very simple classes of DAGs, but it is already NP-hard for in-trees or DAGs of height 222. We also separately study the subproblem of scheduling communication steps, and we show that the NP-hardness of this problem can depend on the problem parameters and the communication rules within the BSP model. Finally, we present and analyze a natural formulation of our scheduling task as an Integer Linear Program.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Principles of sequencing and scheduling\",\n        \"Parallel Scientific Computation: A Structured Approach Using BSP\",\n        \"W [2]-hardness of precedence constrained k-processor scheduling\",\n        \"On the optimality of approximation schemes for the classical scheduling problem\",\n        \"Optimal scheduling for two-processor systems\",\n        \"Scheduling precedence graphs of bounded height\",\n        \"Profile scheduling of opposing forests and level orders\",\n        \"Scheduling chain-structured tasks to minimize makespan and mean flow time\",\n        \"On approximation of the bulk synchronous task scheduling problem\",\n        \"An almost-linear algorithm for two-processor scheduling\",\n        \"Scheduling opposing forests\",\n        \"Computers and Intractability: A Guide to the Theory of NP-Completeness\",\n        \"Quasi-PTAS for Scheduling with Precedences using LP Hierarchies\",\n        \"Near optimal algorithms for scheduling independent chains in BSP\",\n        \"Subset synchronization in BSP computing\",\n        \"An approximation algorithm for scheduling dependent tasks on m processors with small communication delays\",\n        \"BSPlib: The BSP programming library\",\n        \"Three, four, five, six, or the complexity of scheduling with communication delays\",\n        \"Exact k-way sparse matrix partitioning\",\n        \"Event-based MILP models for resource-constrained project scheduling problems\",\n        \"Hierarchy-based algorithms for minimizing makespan under precedence and communication constraints\",\n        \"Complexity of machine scheduling problems\",\n        \"Complexity of scheduling under precedence constraints\",\n        \"Approximation algorithms for scheduling unrelated parallel machines\",\n        \"Minimizing total tardiness on a single machine with precedence constraints\",\n        \"A (1+ epsilon)-approximation for makespan scheduling with precedence constraints using LP hierarchies\",\n        \"Scheduling to Minimize Total Weighted Completion Time via Time-Indexed Linear Programming Relaxations\",\n        \"Towards PTAS for Precedence Constrained Scheduling via Combinatorial Algorithms\",\n        \"Scheduling with Communication Delay in Near-Linear Time\",\n        \"Scheduling a computational DAG on a parallel system with communication delays and replication of node execution\",\n        \"Mathematics, Models and Architectures\",\n        \"Scalable computing\",\n        \"Memory-efficient matrix multiplication in the BSP model\",\n        \"Scheduling and fixed-parameter tractability\",\n        \"A heuristic for a scheduling problem with communication delays\",\n        \"A Scalable Clustering-Based Task Scheduler for Homogeneous Processors Using DAG Partitioning\",\n        \"Towards an architecture-independent analysis of parallel algorithms\",\n        \"Partitioning Hypergraphs is Hard: Models, Inapproximability, and Applications\",\n        \"Multilevel Acyclic Hypergraph Partitioning\",\n        \"Bulk synchronous parallel without barriers\",\n        \"Sequential and Parallel Algorithms and Data Structures\",\n        \"Scheduling graphs on two processors\",\n        \"Questions and answers about BSP\",\n        \"Conditional hardness of precedence constrained scheduling on identical machines\",\n        \"Identical parallel machines vs. unit-time shops and preemptions vs. chains in scheduling complexity\",\n        \"NP-complete scheduling problems\",\n        \"A bridging model for parallel computation\",\n        \"A bridging model for multi-core computing\",\n        \"Multiprocessor scheduling with communication delays\",\n        \"An object-oriented bulk synchronous parallel library for multicore programming\",\n        \"MulticoreBSP for C: a high-performance library for shared-memory parallel programming\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in DAG Scheduling in the BSP Model, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}