{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Role of Entropy in Guiding a Connection Prover\n\nPaper Abstract: Abstract In this work we study how to learn good algorithms for selecting reasoning steps in theorem proving. We explore this in the connection tableau calculus implemented by leanCoP where the partial tableau provides a clean and compact notion of a state to which a limited number of inferences can be applied. We start by incorporating a state-of-the-art learning algorithm – a graph neural network (GNN) – into the plCoP theorem prover. Then we use it to observe the system’s behavior in a reinforcement learning setting, i.e., when learning inference guidance from successful Monte-Carlo tree searches on many problems. Despite its better pattern matching capability, the GNN initially performs worse than a simpler previously used learning algorithm. We observe that the simpler algorithm is less confident, i.e., its recommendations have higher entropy. This leads us to explore how the entropy of the inference selection implemented via the neural network influences the proof search. This is related to research in human decision-making under uncertainty, and in particular the probability matching theory. Our main result shows that a proper entropy regularization, i.e., training the GNN not to be overconfident, greatly improves plCoP’s performance on a large mathematical corpus.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Premise selection for mathematics by corpus analysis and kernel methods\",\n        \"Deepmath - Deep Sequence Models for Premise Selection\",\n        \"Thinking fast and slow with deep learning and tree search\",\n        \"HOList: An environment for machine learning of higher order logic theorem proving\",\n        \"A vision for automated deduction rooted in the connection method\",\n        \"Tactic learning and proving for the Coq proof assistant\",\n        \"A survey of monte carlo tree search methods\",\n        \"XGBoost: A scalable tree boosting system\",\n        \"ENIGMA-NG: efficient neural and gradient-boosted inference guidance for E\",\n        \"The Coq Proof Assistant\",\n        \"A deep reinforcement learning approach to first-order logic theorem proving\",\n        \"Machine learning guidance for connection tableaux\",\n        \"TacticToe: Learning to reason with HOL4 tactics\",\n        \"TacticToe: Learning to prove with tactics\",\n        \"Introduction to HOL: A theorem proving environment for higher order logic\",\n        \"HOL Light: A tutorial introduction\",\n        \"Gamepad: A learning environment for theorem proving\",\n        \"ENIGMA anonymous: Symbol-independent inference guiding machine (system description)\",\n        \"ENIGMA: efficient learning-based inference guiding machine\",\n        \"Hammering Mizar by learning clause guidance\",\n        \"M2K dataset\",\n        \"Mizar40 dataset\",\n        \"FEMaLeCoP: Fairly efficient machine learning connection prover\",\n        \"MizAR 40 for Mizar 40\",\n        \"Reinforcement learning of theorem proving\",\n        \"Efficient semantic features for automated reasoning over large theories\",\n        \"Bandit based monte-carlo planning\",\n        \"First-order theorem proving and Vampire\",\n        \"Deep network guided proof search\",\n        \"Theorem Proving in Higher Order Logics, 21st International Conference, TPHOLs 2008, Montreal, Canada, August 18-21, 2008. Proceedings\",\n        \"PaMpeR: proof method recommendation system for Isabelle/HOL\",\n        \"Property invariant embedding for automated reasoning\",\n        \"leanCoP 2.0 and ileanCoP 1.2: High performance lean theorem proving in classical and intuitionistic logic (system descriptions)\",\n        \"leanCoP: lean connection-based theorem proving\",\n        \"Automated theorem proving, fast and slow\",\n        \"A reduction of imitation learning and structured prediction to no-regret online learning\",\n        \"The graph neural network model\",\n        \"E - A Brainiac Theorem Prover\",\n        \"System description: E 1.8\",\n        \"Mastering the game of go without human knowledge\",\n        \"A brief overview of HOL4\",\n        \"New techniques that improve Enigma-style clause selection guidance\",\n        \"Reinforcement Learning: An Introduction\",\n        \"ERC project AI4Reason final scientific report, 2021\",\n        \"MaLARea SG1 - Machine Learner for Automated Reasoning with Semantic Guidance\",\n        \"MaLeCoP: Machine learning connection prover\",\n        \"An economist’s perspective on probability matching\",\n        \"The Isabelle framework\",\n        \"Function optimization using connectionist reinforcement learning algorithms\",\n        \"Learning to prove theorems via interacting with proof assistants\",\n        \"Prolog technology reinforcement learning prover - (system description)\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in The Role of Entropy in Guiding a Connection Prover, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}