{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Automating Model Comparison in Factor Graphs\n\nPaper Abstract: Abstract Bayesian state and parameter estimation have been automated effectively in a variety of probabilistic programming languages. The process of model comparison on the other hand, which still requires error-prone and time-consuming manual derivations, is often overlooked despite its importance. This paper efficiently automates Bayesian model averaging, selection, and combination by message passing on a Forney-style factor graph with a custom mixture node. Parameter and state inference, and model comparison can then be executed simultaneously using message passing with scale factors. This approach shortens the model design cycle and allows for the straightforward extension to hierarchical and temporal model priors to accommodate for modeling complicated time-varying processes.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Robustness in the Strategy of Scientific Model Building\",\n        \"Build, Compute, Critique, Repeat: Data Analysis with Latent Variable Models\",\n        \"Science and Statistics\",\n        \"Information Theory, Inference, and Learning Algorithms\",\n        \"Probabilistic graphical models: principles and techniques\",\n        \"Bayesian Model Averaging: A Tutorial\",\n        \"Turning Bayesian model averaging into Bayesian model combination\",\n        \"A factor graph approach to automated design of Bayesian signal processing algorithms\",\n        \"RxInfer: A Julia package for reactive real-timeBayesian inference\",\n        \"Turing: A Language for Flexible Probabilistic Inference\",\n        \"Pyro: Deep Universal Probabilistic Programming\",\n        \"UltraNest – a robust, general purpose Bayesian inference engine\",\n        \"Probabilistic Programming in Python using PyMC\",\n        \"Stan: A Probabilistic Programming Language\",\n        \"Testing hypotheses via a mixture estimation model\",\n        \"Gates\",\n        \"Bayesian model averaging: A systematic review and conceptual classification\",\n        \"Bayesian model selection for group studies\",\n        \"Bayesian model selection for group studies — Revisited\",\n        \"Meta-Uncertainty in Bayesian Model Comparison\",\n        \"Bayesian model averaging is not model combination\",\n        \"Bayesian model averaging via mixture model estimation\",\n        \"Using Stacking to Average Bayesian Predictive Distributions (with Discussion)\",\n        \"Bayesian Averaging of Classifiers and the Overfitting Problem\",\n        \"Bayesian Hierarchical Stacking: Some Models Are (Somewhere) Useful\",\n        \"Stacked generalization\",\n        \"An introduction to factor graphs\",\n        \"The Factor Graph Approach to Model-Based Signal Processing\",\n        \"Factor graphs and the sum-product algorithm\",\n        \"On Variational Message Passing on Factor Graphs\",\n        \"Variational Message Passing and Local Constraint Manipulation in Factor Graphs\",\n        \"Reverend Bayes on Inference Engines: A Distributed Hierarchical Approach\",\n        \"Loopy Belief Propagation for Approximate Inference: An Empirical Study\",\n        \"Variational Message Passing and its Applications\",\n        \"Expectation maximization as message passing\",\n        \"Expectation Propagation for Approximate Bayesian Inference\",\n        \"Bethe free energy, Kikuchi approximations, and belief propagation algorithms\",\n        \"State-space methods in statistical signal processing: New ideas and applications\",\n        \"Efficient Model Evidence Computation in Tree-structured Factor Graphs\",\n        \"Variational Message Passing\",\n        \"Codes on graphs: normal realizations\",\n        \"Pattern recognition and machine learning\",\n        \"Post hoc Bayesian model selection\",\n        \"Bayesian model reduction\",\n        \"Generalised free energy and active inference\",\n        \"Machine learning: a probabilistic perspective\",\n        \"Automated design of Bayesian signal processing algorithms\",\n        \"Julia: A Fresh Approach to Numerical Computing\",\n        \"Reactive Message Passing for Scalable Bayesian Inference\",\n        \"ReactiveMP.jl: A Julia package for reactive variational Bayesian inference\",\n        \"Exact Distribution for the Product of Two Correlated Gaussian Random Variables\",\n        \"Stochastic Variational Inference\",\n        \"Weight Uncertainty in Neural Networks\",\n        \"Sampling-Free Variational Inference of Bayesian Neural Networks by Variance Backpropagation\",\n        \"An Overview of Multi-Task Learning in Deep Neural Networks\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Automating Model Comparison in Factor Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}