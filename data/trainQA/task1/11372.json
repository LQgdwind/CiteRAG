{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FastPersist: Accelerating Model Checkpointing in Deep Learning\n\nPaper Abstract: Abstract Model checkpoints are critical Deep Learning (DL) artifacts that enable fault tolerance for training and downstream applications, such as inference. However, writing checkpoints to persistent storage, and other I/O aspects of DL training, are mostly ignored by compute-focused optimization efforts for faster training of rapidly growing models and datasets. Towards addressing this imbalance, we propose FastPersist to accelerate checkpoint creation in DL training. FastPersist combines three novel techniques: (i) NVMe optimizations for faster checkpoint writes to SSDs, (ii) efficient write parallelism using the available SSDs in training environments, and (iii) overlapping checkpointing with independent training computations. Our evaluation using real world dense and sparse DL models shows that FastPersist creates checkpoints in persistent storage up to 116x faster than baseline, and enables per-iteration checkpointing with negligible overhead.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Saving and Loading a General Checkpoint in Pytorch\",\n        \"TensorFlow ModelCheckpoint Function\",\n        \"Linux aio\",\n        \"Jean zay supercomputer\",\n        \"Deepspeed\",\n        \"NVIDIA Selene SuperComputer\",\n        \"Wekafs\",\n        \"Leveraging near data processing for high-performance checkpoint/restart\",\n        \"Deepspeed-inference: Enabling efficient inference of transformer models at unprecedented scale\",\n        \"Efficient io with io_uring\",\n        \"Spin: Seamless operating system integration of peer-to-peer dma between ssds and gpus\",\n        \"Language models are few-shot learners\",\n        \"Distributed snapshots: determining global states of distributed systems\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Optimization of multi-level checkpoint model for large scale hpc applications\",\n        \"Lessons learned from the analysis of system failures at petascale: The case of blue waters\",\n        \"Clairvoyant prefetching for distributed machine learning i/o\",\n        \"Check-N-Run: a checkpointing system for training deep learning recommendation models\",\n        \"Understanding practical tradeoffs in hpc checkpoint-scheduling policies\",\n        \"Switch transformers: Scaling to trillion parameter models with simple and efficient sparsity\",\n        \"Failures in large scale systems: long-term measurement, analysis, and implications\",\n        \"Cognitive ssd: A deep learning engine for in-storage data retrieval\",\n        \"Scalable i/o-aware job scheduling for burst buffer enabled hpc clusters\",\n        \"A persistent key-value store for fast storage environments\",\n        \"Time-based sequence model for personalization and recommendation systems\",\n        \"Adam: A method for stochastic optimization\",\n        \"Flash storage disaggregation\",\n        \"Checkpointing and recovery roll back for distributed systems\",\n        \"Hardware/software co-programmable framework for computational ssds to accelerate deep learning service on large-scale graphs\",\n        \"Gshard: Scaling giant models with conditional computation and automatic sharding\",\n        \"CheckFreq: Frequent, Fine-Grained DNN checkpointing\",\n        \"Analyzing and mitigating data stalls in dnn training\",\n        \"Design, modeling, and evaluation of a scalable multi-level checkpointing system\",\n        \"Deep learning recommendation model for personalization and recommendation systems\",\n        \"Deepfreeze: Towards scalable asynchronous checkpointing of deep learning models\",\n        \"Veloc: Towards high performance adaptive asynchronous checkpointing at large scale\",\n        \"GPUDirect Storage: A Direct Path Between Storage and GPU Memory\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"An overview of checkpointing in uniprocessor and distributedsystems, focusing on implementation and performance\",\n        \"DeepSpeed-MoE: Advancing mixture-of-experts inference and training to power next-generation AI scale\",\n        \"Zero-infinity: Breaking the gpu memory wall for extreme scale deep learning\",\n        \"Zero-shot text-to-image generation\",\n        \"A study of checkpointing in large scale training of deep neural networks\",\n        \"High-resolution image synthesis with latent diffusion models\",\n        \"Dram errors in the wild: a large-scale field study\",\n        \"Using deepspeed and megatron to train megatron-turing NLG 530b, A large-scale generative language model\",\n        \"Bloom: A 176b-parameter open-access multilingual language model\",\n        \"Interpreting write performance of supercomputer i/o systems with regression models\",\n        \"Check-in: In-storage checkpointing for key-value store system leveraging flash-based ssds\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in FastPersist: Accelerating Model Checkpointing in Deep Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}