{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Going faster to see further: GPU-accelerated value iteration and simulation for perishable inventory control using JAX\n\nPaper Abstract: Abstract Value iteration can find the optimal replenishment policy for a perishable inventory problem, but is computationally demanding due to the large state spaces that are required to represent the age profile of stock. The parallel processing capabilities of modern GPUs can reduce the wall time required to run value iteration by updating many states simultaneously. The adoption of GPU-accelerated approaches has been limited in operational research relative to other fields like machine learning, in which new software frameworks have made GPU programming widely accessible. We used the Python library JAX to implement value iteration and simulators of the underlying Markov decision processes in a high-level API, and relied on this library’s function transformations and compiler to efficiently utilize GPU hardware. Our method can extend use of value iteration to settings that were previously considered infeasible or impractical. We demonstrate this on example scenarios from three recent studies which include problems with over 16 million states and additional problem features, such as substitution between products, that increase computational complexity. We compare the performance of the optimal replenishment policies to heuristic policies, fitted using simulation optimization in JAX which allowed the parallel evaluation of multiple candidate policy parameters on thousands of simulated years. The heuristic policies gave a maximum optimality gap of 2.49%. Our general approach may be applicable to a wide range of problems in operational research that would benefit from large-scale parallel computation on consumer-grade GPU hardware.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Data analytics in the supply chain management: Review of machine learning applications in demand forecasting\",\n        \"TensorFlow: a system for large-scale machine learning\",\n        \"Intelligent inventory management approaches for perishable pharmaceutical products in a healthcare supply chain\",\n        \"Optuna: A next-generation hyperparameter optimization framework\",\n        \"Tapping the supercomputer under your desk: Solving dynamic equilibrium models with graphics processors\",\n        \"Simulation optimization: a review of algorithms and applications\",\n        \"Dynamic Programming\",\n        \"Optimizing the platelet supply chain in Nova Scotia\",\n        \"Jumanji: Industry-driven hardware-accelerated RL environments\",\n        \"JAX: composable transformations of Python+NumPy programs\",\n        \"State-of-the-art literature review on inventory models for perishable products\",\n        \"Markov decision process parallel value iteration algorithm on GPU\",\n        \"Performance evaluation of decision making under uncertainty for low power heterogeneous platforms\",\n        \"Platelets inventory management: a rolling horizon sim–opt approach for an age-differentiated demand\",\n        \"Reward shaping to improve the performance of deep reinforcement learning in perishable inventory management\",\n        \"A two-stage stochastic programming model for inventory management in the blood supply chain\",\n        \"A new age-based replenishment policy for supply chain inventory optimization of highly perishable products\",\n        \"Benchmarking machine-learning software and hardware for quantitative economics\",\n        \"NVIDIA GeForce RTX 3060 Graphics Card\",\n        \"Is platelet expiring out of date? A systematic review\",\n        \"Brax - A differentiable physics engine for large scale rigid body simulation\",\n        \"Optimal ordering policy for a perishable commodity with fixed lifetime\",\n        \"Simulation optimization: A panel on the state of the art in research and practice\",\n        \"Stochastic integer programming models for reducing wastages and shortages of blood products at hospitals\",\n        \"Improved ordering of perishables: The value of stock-age information\",\n        \"Blood platelet production: optimization by dynamic programming and simulation\",\n        \"On computing optimal policies in perishable inventory control using value iteration\",\n        \"Optimization techniques for GPU programming\",\n        \"An implementation of dynamic programming for many-core computers\",\n        \"Chapter Six - Deep learning with GPUs\",\n        \"GPU-based Markov decision process solver\",\n        \"Reinforcement learning approaches for specifying ordering policies of perishable inventory systems\",\n        \"Cloud GPUs\",\n        \"A toolkit for value function iteration\",\n        \"Quantitative macroeconomics: Lessons learned from fourteen replications\",\n        \"evosax: JAX-based evolution strategies\",\n        \"gymnax: A JAX-based reinforcement learning environment library\",\n        \"A hybrid CPU-Graphics Processing Unit (GPU) approach for computationally efficient simulation-optimization\",\n        \"Isaac Gym: High Performance GPU-Based Physics Simulation For Robot Learning\",\n        \"Data-driven modelling and control of hospital blood inventory\",\n        \"A comparison of alternative approximations for ordering perishable inventory\",\n        \"Optimal ordering policies for perishable inventory—II\",\n        \"Perishable inventory theory: a review\",\n        \"Perishable Inventory Systems\",\n        \"A CUDA approach to compute perishable inventory control policies using value iteration\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"A hardware approach to value function iteration\",\n        \"Design considerations for GPU-based mixed integer programming on parallel computing platforms\",\n        \"Platelet ordering policies at hospitals using stochastic integer programming model and heuristic approaches to reduce wastage\",\n        \"A parallel solver for Markov decision process in crowd simulations\",\n        \"Dynamic programming on the GPU via JAX - QuantEcon Notes\",\n        \"Fundamentals of supply chain theory\",\n        \"Speeding up a large logistics optimization problems using GPU technology\",\n        \"Generalization of White’s method of successive approximations to periodic Markovian decision processes\",\n        \"Inventory cost control model for fresh product retailers based on DQN\",\n        \"Reinforcement learning: an introduction\",\n        \"A100 PCIe 40 GB vs GeForce RTX 3060\",\n        \"The Sustainable Development Goals Report 2022\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Going faster to see further: GPU-accelerated value iteration and simulation for perishable inventory control using JAX, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}