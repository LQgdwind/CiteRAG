{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Rethinking Graph Lottery Tickets: Graph Sparsity Matters\n\nPaper Abstract: Abstract Lottery Ticket Hypothesis (LTH) claims the existence of a winning ticket (i.e., a properly pruned sub-network together with original weight initialization) that can achieve competitive performance to the original dense network. A recent work, called UGS, extended LTH to prune graph neural networks (GNNs) for effectively accelerating GNN inference. UGS simultaneously prunes the graph adjacency matrix and the model weights using the same masking mechanism, but since the roles of the graph adjacency matrix and the weight matrices are very different, we find that their sparsifications lead to different performance characteristics. Specifically, we find that the performance of a sparsified GNN degrades significantly when the graph sparsity goes beyond a certain extent. Therefore, we propose two techniques to improve GNN performance when the graph sparsity is high. First, UGS prunes the adjacency matrix using a loss formulation which, however, does not properly involve all elements of the adjacency matrix; in contrast, we add a new auxiliary loss head to better guide the edge pruning by involving the entire adjacency matrix. Second, by regarding unfavorable graph sparsification as adversarial data perturbations, we formulate the pruning process as a min-max optimization problem to gain the robustness of lottery tickets when the graph sparsity is high. We further investigate the question: Can the “retrainable” winning ticket of a GNN be also effective for graph transferring learning? We call it the transferable graph lottery ticket (GLT) hypothesis. Extensive experiments were conducted which demonstrate the superiority of our proposed sparsification method over UGS, and which empirically verified our transferable GLT hypothesis.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Losing heads in the lottery: Pruning transformer attention in neural machine translation\",\n        \"Successfully applying the stabilized lottery ticket hypothesis to the transformer architecture\",\n        \"Fastgcn: Fast learning with graph convolutional networks via importance sampling\",\n        \"The lottery ticket hypothesis for pre-trained BERT networks\",\n        \"Data-efficient gan training beyond (just) augmentations: A lottery ticket perspective\",\n        \"A unified lottery ticket hypothesis for graph neural networks\",\n        \"Long live the lottery: The existence of winning tickets in lifelong learning\",\n        \"Coarsening the granularity: Towards structurally sparse lottery tickets\",\n        \"The elastic lottery ticket hypothesis\",\n        \"Gans can play lottery tickets too\",\n        \"Sinkhorn distances: Lightspeed computation of optimal transport\",\n        \"Multi-prize lottery ticket hypothesis: Finding accurate binary neural networks by pruning A randomly weighted network\",\n        \"Rigging the lottery: Making all tickets winners\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"The lottery ticket hypothesis at scale\",\n        \"Linear mode connectivity and the lottery ticket hypothesis\",\n        \"Hyperbolic entailment cones for learning hierarchical embeddings\",\n        \"Resprop: Reuse sparsified backpropagation\",\n        \"Inductive representation learning on large graphs\",\n        \"Chex: Channel exploration for cnn model compression\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Predicting economic growth by region embedding: A multigraph convolutional network approach\",\n        \"Winning lottery tickets in deep generative models\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Diffusion improves graph learning\",\n        \"Investigating transfer learning in graph neural networks\",\n        \"Lottery ticket preserves weight correlation: Is it desirable or not?\",\n        \"Rethinking the value of network pruning\",\n        \"Effective model sparsification by scheduled grow-and-prune methods\",\n        \"Sanity checks for lottery tickets: Does your winning ticket really win the jackpot?\",\n        \"Proving the lottery ticket hypothesis: Pruning is all you need\",\n        \"Sparse transfer learning via winning lottery tickets\",\n        \"One ticket to win them all: generalizing lottery ticket initializations across datasets and optimizers\",\n        \"When BERT plays the lottery, all tickets are winning\",\n        \"Sparse weight activation training\",\n        \"Winning the lottery with continuous sparsification\",\n        \"Sanity-checking pruning methods: Random tickets can win the jackpot\",\n        \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n        \"Digraph inception convolutional networks\",\n        \"Graph attention networks\",\n        \"Optimal transport: old and new, volume 338\",\n        \"On lottery tickets and minimal task representations in deep reinforcement learning\",\n        \"Picking winning tickets before training by preserving gradient flow\",\n        \"Fast is better than free: Revisiting adversarial training\",\n        \"Simplifying graph convolutional networks\",\n        \"How powerful are graph neural networks?\",\n        \"Greedy optimization provably wins the lottery: Logarithmic number of winning tickets is enough\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Playing the lottery with rewards and multiple languages: lottery tickets in RL and NLP\",\n        \"Mest: Accurate and fast memory-economic sparse training framework on the edge\",\n        \"Graph transformer networks\",\n        \"Why lottery ticket wins? a theoretical perspective of sample complexity on sparse neural networks\",\n        \"Validating the lottery ticket hypothesis with inertial manifold theory\",\n        \"Efficient lottery ticket finding: Less data is more\",\n        \"Deconstructing lottery tickets: Zeros, signs, and the supermask\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Rethinking Graph Lottery Tickets: Graph Sparsity Matters, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}