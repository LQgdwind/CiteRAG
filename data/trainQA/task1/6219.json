{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DeepTPI: Test Point Insertion with Deep Reinforcement Learning\n\nPaper Abstract: Abstract Test point insertion (TPI) is a widely used technique for testability enhancement, especially for logic built-in self-test (LBIST) due to its relatively low fault coverage. In this paper, we propose a novel TPI approach based on deep reinforcement learning (DRL), named DeepTPI. Unlike previous learning-based solutions that formulate the TPI task as a supervised-learning problem, we train a novel DRL agent, instantiated as the combination of a graph neural network (GNN) and a Deep Q-Learning network (DQN), to maximize the test coverage improvement. Specifically, we model circuits as directed graphs and design a graph-based value network to estimate the action values for inserting different test points. The policy of the DRL agent is defined as selecting the action with the maximum value. Moreover, we apply the general node embeddings from a pre-trained model to enhance node features, and propose a dedicated testability-aware attention mechanism for the value network. Experimental results on circuits with various scales show that DeepTPI significantly improves test coverage compared to the commercial DFT tool. The code of this work is available at https://github.com/cure-lab/DeepTPI.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Built-in self-test techniques\",\n        \"Test-point insertion efficiency analysis for lbist in high-assurance applications\",\n        \"Enhancing testability of large-scale integrated circuits via test points and additional logic\",\n        \"A dynamic programming approach to the test point insertion problem\",\n        \"Constructive multi-phase test point insertion for scan-based bist\",\n        \"Synthesis of pseudo-random pattern testable designs\",\n        \"On testability of combinational networks\",\n        \"Test point insertion based on path tracing\",\n        \"Reducing test data volume using external/lbist hybrid test patterns\",\n        \"A hybrid algorithm for test point selection for scan-based bist\",\n        \"Improved pseudo-random fault coverage through inversions: a study on test point architectures\",\n        \"Test point insertion using artificial neural networks\",\n        \"Applying neural networks to delay fault testing: Test point insertion and random circuit training\",\n        \"High performance graph convolutional networks with applications in testability analysis\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Representation learning of logic circuits\",\n        \"Test point insertion with control points driven by existing functional flip-flops\",\n        \"Novel test point insertion applications in lbist\",\n        \"Test-point condensation in the diagnosis of digital circuits\",\n        \"Embedded deterministic test points for compact cell-aware tests\",\n        \"A test point insertion algorithm for mixed-signal circuits\",\n        \"Reinforcement-learning-based test program generation for software-based self-test\",\n        \"Deep learning for logic optimization algorithms\",\n        \"Drills: Deep reinforcement learning for logic synthesis\",\n        \"A survey of graph neural networks for electronic design automation\",\n        \"Gcn-rl circuit designer: Transferable transistor sizing with graph neural networks and reinforcement learning\",\n        \"Chip placement with deep reinforcement learning\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Can q-learning with graph networks learn a generalizable branching heuristic for a sat solver?\",\n        \"Q-learning: theory and applications\",\n        \"Abc: An academic industrial-strength verification tool\",\n        \"Directed acyclic graph neural networks\",\n        \"D-vae: A variational autoencoder for directed acyclic graphs\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Language models are few-shot learners\",\n        \"Q-learning\",\n        \"Empirical evaluation of gated recurrent neural networks on sequence modeling\",\n        \"Inductive representation learning on large graphs\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Graph attention networks\",\n        \"Certified timing verification and the transition delay of a logic circuit\",\n        \"Notes on the iscas’89 benchmark circuits\",\n        \"Characteristics of the itc’99 benchmark circuits\",\n        \"The epfl combinational benchmark suite\",\n        \"Test point insertion for an area efficient bist\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in DeepTPI: Test Point Insertion with Deep Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}