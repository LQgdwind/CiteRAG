{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Winograd Convolution: A Perspective from Fault Tolerance\n\nPaper Abstract: Abstract. Winograd convolution is originally proposed to reduce the computing overhead by converting multiplication in neural network (NN) with addition via linear transformation. Other than the computing efficiency, we observe its great potential in improving NN fault tolerance and evaluate its fault tolerance comprehensively for the first time. Then, we explore the use of fault tolerance of winograd convolution for either fault-tolerant or energy-efficient NN processing. According to our experiments, winograd convolution can be utilized to reduce fault-tolerant design overhead by 27.49% or energy consumption by 7.19% without any accuracy loss compared to that without being aware of the fault tolerance.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Sanity-Check: Boosting the Reliability of Safety-Critical Deep Neural Network Applications\",\n        \"Low overhead soft error mitigation techniques for high-performance and aggressive designs\",\n        \"CMOS scaling trends and beyond\",\n        \"TensorFI: A flexible fault injection framework for TensorFlow applications\",\n        \"Retraining-based timing error mitigation for hardware neural networks\",\n        \"Model compression and hardware acceleration for neural networks: A comprehensive survey\",\n        \"Regularizing multilayer perceptron for robustness\",\n        \"CodeNet: Training large scale neural networks in presence of soft-errors\",\n        \"An Energy-Efficient Time-Domain Binary Neural Network Accelerator with Error-Detection in 28nm CMOS\",\n        \"Searching for winograd-aware quantized networks\",\n        \"DWM: a decomposable winograd method for convolution acceleration\",\n        \"Training modern deep neural networks for memory-fault robustness\",\n        \"AxTrain: Hardware-oriented neural network training for approximate inference\",\n        \"Fidelity: Efficient resilience analysis framework for deep learning accelerators\",\n        \"Calibrating process variation at system level with in-situ low-precision transfer learning for analog neural network processors\",\n        \"Optimizing N-dimensional, winograd-based convolution for manycore CPUs\",\n        \"Arithmetic-Intensity-Guided Fault Tolerance for Neural Network Inference on GPUs\",\n        \"Fast algorithms for convolutional neural networks\",\n        \"Lance: efficient low-precision quantized winograd convolution for neural networks based on graphics processing units\",\n        \"Evaluating fast algorithms for convolutional neural networks on FPGAs\",\n        \"SpWA: An efficient sparse winograd convolutional neural networks accelerator on FPGAs\",\n        \"Squeezing the Last MHz for CNN Acceleration on FPGAs\",\n        \"Exploiting asymmetry in eDRAM errors for redundancy-free error-tolerant design\",\n        \"A survey of deep neural network architectures and their applications\",\n        \"FTT-NAS: Discovering Fault-Tolerant Neural Architecture\",\n        \"Efficient sparse-winograd convolutional neural networks\",\n        \"Pytorchfi: A runtime perturbation tool for dnns\",\n        \"Safe Overclocking for CNN Accelerators Through Algorithm-Level Error Detection\",\n        \"FTT-NAS: Discovering fault-tolerant convolutional neural architecture\",\n        \"SNR: Squeezing Numerical Range Defuses Bit Error Vulnerability Surface in Deep Neural Networks\",\n        \"GreenTPU: Improving Timing Error Resilience of a Near-Threshold Tensor Processing Unit\",\n        \"Minerva: Enabling low-power, highly-accurate deep neural network accelerators\",\n        \"Ares: A framework for quantifying the resilience of deep neural networks\",\n        \"Error Probability Models for Voltage-Scaled Multiply-Accumulate Units\",\n        \"Scale-sim: Systolic cnn accelerator simulator\",\n        \"Towards a uniform template-based architecture for accelerating 2D and 3D CNNs on FPGA\",\n        \"Toward an efficient deep pipelined template-based architecture for accelerating the entire 2-D and 3-D CNNs on FPGA\",\n        \"Robust Machine Learning Systems: Challenges,Current Trends, Perspectives, and the Road Ahead\",\n        \"Fault and error tolerance in neural networks: A review\",\n        \"Investigating the interplay between energy efficiency and resilience in high performance computing\",\n        \"DNN engine: A 28-nm timing-error tolerant sparse deep neural network processor for IoT applications\",\n        \"Efficient winograd-based convolution kernel implementation on edge devices\",\n        \"R2F: A Remote Retraining Framework for AIoT Processors With Computing Errors\",\n        \"Thundervolt: enabling aggressive voltage underscaling and timing error resilience for energy efficient deep learning accelerators\",\n        \"AEP: An error-bearing neural network accelerator for energy efficiency and model protection\",\n        \"A survey on modeling and improving reliability of DNN algorithms and accelerators\",\n        \"A defect-tolerant accelerator for emerging high-performance applications\",\n        \"RANA: Towards efficient neural acceleration with refresh-optimized embedded DRAM\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Winograd Convolution: A Perspective from Fault Tolerance, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}