{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: “How Does It Detect A Malicious App?” Explaining the Predictions of AI-based Android Malware Detector\n\nPaper Abstract: Abstract AI methods have been proven to yield impressive performance on Android malware detection. However, most AI-based methods make predictions of suspicious samples in a black-box manner without transparency on models’ inference. The expectation on models’ explainability and transparency by cyber security and AI practitioners to assure the trustworthiness increases. In this article, we present a novel model-agnostic explanation method for AI models applied for Android malware detection. Our proposed method identifies and quantifies the data features relevance to the predictions by two steps: i) data perturbation that generates the synthetic data by manipulating features’ values; and ii) optimization of features attribution values to seek significant changes of prediction scores on the perturbed data with minimal feature values changes. The proposed method is validated by three experiments. We firstly demonstrate that our proposed model explanation method can aid in discovering how AI models are evaded by adversarial samples quantitatively. In the following experiments, we compare the explainability and fidelity of our proposed method with state-of-the-arts, respectively.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A survey of data mining and machine learning methods for cyber security intrusion detection\",\n        \"Machine learning and deep learning methods for cybersecurity\",\n        \"Robust physical-world attacks on deep learning visual classification\",\n        \"“why should i trust you?” explaining the predictions of any classifier\",\n        \"Axiomatic attribution for deep networks\",\n        \"Yes, machine learning can be more secure! a case study on android malware detection\",\n        \"Deep android malware detection\",\n        \"Lstm-based hierarchical denoising network for android malware detection\",\n        \"Android malware detection based on system call sequences and lstm\",\n        \"Drebin: Effective and explainable detection of android malware in your pocket.\",\n        \"Smart phone market share\",\n        \"Google play\",\n        \"Av-test\",\n        \"A scalable and extensible framework for android malware detection and family attribution\",\n        \"A unified approach to interpreting model predictions\",\n        \"Least angle regression\",\n        \"Portfolio selection\",\n        \"Antimaldroid: An efficient svm-based malware detection framework for android\",\n        \"Detecting malware for android platform: An svm-based approach\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"A survey of android exploits in the wild\",\n        \"The android malware detection systems between hope and reality\",\n        \"Analysis of clustering technique in android malware detection\",\n        \"Androdialysis: Analysis of android intent effectiveness in malware detection\",\n        \"Semantics-aware android malware classification using weighted contextual api dependency graphs\",\n        \"Droidapiminer: Mining api-level features for robust malware detection in android\",\n        \"Droiddet: Effective and robust detection of android malware using static analysis along with rotation forest model\",\n        \"A cost-sensitive rotation forest algorithm for gene expression data classification\",\n        \"Detecting android malware using long short-term memory (lstm)\",\n        \"Explainable artificial intelligence: A survey\",\n        \"The mythos of model interpretability\",\n        \"Interpretable Machine Learning\",\n        \"Visualizing and understanding convolutional networks\",\n        \"Show, attend and tell: Neural image caption generation with visual attention\",\n        \"Explainable artificial intelligence: Understanding, visualizing and interpreting deep learning models\",\n        \"Values of non-atomic games.\",\n        \"Did the model understand the question?\",\n        \"Beyond sparsity: Tree regularization of deep models for interpretability\",\n        \"Explain yourself! leveraging language models for commonsense reasoning\",\n        \"Lemna: Explaining deep learning based security applications\",\n        \"Recognizing functions in binaries with neural networks\",\n        \"Sparsity and smoothness via the fused lasso\",\n        \"Variable selection in finite mixture of regression models\",\n        \"What-if tool\",\n        \"TensorFlow: Large-scale machine learning on heterogeneous systems, software available from tensorflow.org\",\n        \"Captum\",\n        \"Learning important features through propagating activation differences\",\n        \"Investigating the influence of noise and distractors on the interpretation of neural networks\",\n        \"Automatic differentiation in pytorch.\",\n        \"secml: A python library for secure and explainable machine learning\",\n        \"Scoring, term weighting, and the vector space model\",\n        \"Virustotal\",\n        \"A primer on kernel methods\",\n        \"Huggingface’s transformers: State-of-the-art natural language processing\",\n        \"The security of machine learning\",\n        \"Adversarial samples on android malware detection systems for iot systems\",\n        \"Malicious pdf detection using metadata and structural features\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in “How Does It Detect A Malicious App?” Explaining the Predictions of AI-based Android Malware Detector, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}