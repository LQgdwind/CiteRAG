{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Machine Learning Enabled Scalable Performance Prediction of Scientific Codes\n\nPaper Abstract: Abstract. We present the Analytical Memory Model with Pipelines (AMMP) of the Performance Prediction Toolkit (PPT). PPT-AMMP takes high-level source code and hardware architecture parameters as input, predicts runtime of that code on the target hardware platform, which is defined in the input parameters. PPT-AMMP transforms the code to an (architecture-independent) intermediate representation, then (i) analyzes the basic block structure of the code, (ii) processes architecture-independent virtual memory access patterns that it uses to build memory reuse distance distribution models for each basic block, (iii) runs detailed basic-block level simulations to determine hardware pipeline usage. PPT-AMMP uses machine learning and regression techniques to build the prediction models based on small instances of the input code, then integrates into a higher-order discrete-event simulation model of PPT running on Simian PDES engine. We validate PPT-AMMP on four standard computational physics benchmarks, finally present a use case of hardware parameter sensitivity analysis to identify bottleneck hardware resources on different code inputs. We further extend PPT-AMMP to predict the performance of scientific application (radiation transport), SNAP. We analyze the application of multi-variate regression models that accurately predict the reuse profiles and the basic block counts. The predicted runtimes of SNAP when compared to that of actual times are accurate.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Instruction tables: Lists of instruction latencies, throughputs and micro-operation breakdowns for Intel, AMD and VIA CPUs\",\n        \"A Brief History of HPC Simulation and Future Challenges\",\n        \"An Integrated Interconnection Network Model for Large-scale Performance Prediction\",\n        \"LogGP: incorporating long messages into the LogP model–one step closer towards a realistic model for parallel computation\",\n        \"Fast, accurate, and scalable memory modeling of GPGPUs using reuse profiles\",\n        \"PPT-SASMM: Scalable Analytical Shared Memory Model\",\n        \"Legion: Expressing Locality and Independence with Logical Regions\",\n        \"StatCache: a probabilistic approach to efficient and accurate data locality analysis\",\n        \"New Performance Modeling Methods for Parallel Data Processing Applications\",\n        \"The Gem5 Simulator\",\n        \"An analytical model of locality and caching\",\n        \"Durango: Scalable Synthetic Workload Generation for Extreme-Scale Application Performance Modeling and Simulation\",\n        \"Kokkos: Enabling manycore performance portability through polymorphic memory access patterns\",\n        \"Estimating Cache Misses and Locality Using Stack Distances\",\n        \"Predict the performance of GE with an ACO based machine learning algorithm\",\n        \"IMCSIM: Parameterized Performance Prediction for Implicit Monte Carlo codes\",\n        \"A Scalable Analytical Memory Model for CPU Performance Prediction\",\n        \"An analytical memory hierarchy model for performance prediction\",\n        \"Performance Prediction Toolkit (PPT)\",\n        \"Codes: Enabling co-design of multilayer exascale storage architectures\",\n        \"LogP: Towards a realistic model of parallel computation\",\n        \"Cetus: A Source-to-Source Compiler Infrastructure for Multicores\",\n        \"Analytical Processor Performance and Power Modeling Using Micro–Architecture Independent Characteristics\",\n        \"Predicting Whole-program Locality Through Reuse Distance Analysis\",\n        \"Performance Analysis Through Synthetic Trace Generation\",\n        \"Reuse-distance-based Miss-rate Prediction on a Per Instruction Basis\",\n        \"The RAJA portability layer: overview and status\",\n        \"Is Reuse Distance Applicable to Data Locality Analysis on Chip Multiprocessors?\",\n        \"SNAP: SN (Discrete Ordinates) Application Proxy\",\n        \"Genetic Programming: On the Programming of Computers by Means of Natural Selection\",\n        \"Accurate and Efficient Regression Modeling for Microarchitectural Performance and Power Prediction\",\n        \"COMPASS: A Framework for Automated Performance Modeling and Prediction\",\n        \"Evaluation techniques for storage hierarchies\",\n        \"PAPI: A portable interface to hardware performance counters\",\n        \"Evolving multidimensional transformations for symbolic regression with M3GP\",\n        \"PARDA: A fast parallel reuse distance analysis algorithm\",\n        \"Parallel Application Performance Prediction Using Analysis Based Models and HPC Simulations\",\n        \"Hardware-independent application characterization\",\n        \"MARSS: a full system simulator for multicore x86 CPUs\",\n        \"ROSE: Compiler Support for Object-Oriented Frameworks\",\n        \"The structural simulation toolkit\",\n        \"The simian concept: parallel discrete event simulation with interpreted languages and just-in-time compilation\",\n        \"Accelerating Multicore Reuse Distance Analysis with Sampling and Parallelization\",\n        \"Multicore-aware reuse distance analysis\",\n        \"Aspen: a domain specific language for performance modeling\",\n        \"Palm: easing the burden of analytical performance modeling\",\n        \"Neural arithmetic logic units\",\n        \"Order of nonlinearity as a complexity measure for models generated by symbolic regression via pareto genetic programming\",\n        \"Roofline: An insightful visual performance model for floating-point programs and multicore architectures\",\n        \"Inferred models for dynamic and sparse hardware-software spaces\",\n        \"Discrete event performance prediction of speculatively parallel temperature-accelerated dynamics\",\n        \"Miss Rate Prediction Across All Program Inputs\",\n        \"Program Locality Analysis Using Reuse Distance\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Machine Learning Enabled Scalable Performance Prediction of Scientific Codes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}