{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Parameter-Efficient Detoxification with Contrastive Decoding\n\nPaper Abstract: Abstract The field of natural language generation has witnessed significant advancements in recent years, including the development of controllable text generation techniques. However, controlling the attributes of the generated text remains a challenge, especially when aiming to avoid undesirable behavior such as toxicity. In this work, we introduce Detoxification Generator (DetoxiGen), an inference-time algorithm that steers the generation away from unwanted styles. DetoxiGen is an ensemble of a pre-trained language model (generator) and a detoxifier. The detoxifier is trained intentionally on the toxic data representative of the undesirable attribute, encouraging it to generate text in that style exclusively. During the actual generation, we use the trained detoxifier to produce undesirable tokens for the generator to contrast against at each decoding step. This approach directly informs the generator to avoid generating tokens that the detoxifier considers highly likely. We evaluate DetoxiGen on the commonly used RealToxicityPrompts benchmark (Gehman et al., 2020) with various language models as generators. We find that it significantly outperforms previous approaches in detoxification metrics while not compromising on the generation quality. Moreover, the detoxifier is obtained by soft prompt-tuning using the same backbone language model as the generator. Hence, DetoxiGen requires only a tiny amount of extra weights from the virtual tokens of the detoxifier to be loaded into GPU memory while decoding, making it a promising lightweight, practical, and parameter-efficient detoxification strategy.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Evaluating the underlying gender bias in contextualized word embeddings\",\n        \"A neural probabilistic language model\",\n        \"Jigsaw unintended bias in toxicity classification\",\n        \"Finding microaggressions in the wild: A case for locating elusive phenomena in social media posts\",\n        \"A computational approach to politeness with application to social factors\",\n        \"Plug and play language models: A simple approach to controlled text generation\",\n        \"RealToxicityPrompts: Evaluating neural toxic degeneration in language models\",\n        \"A large labeled corpus for online harassment research\",\n        \"Don’t stop pretraining: Adapt language models to domains and tasks\",\n        \"The curious case of neural text degeneration\",\n        \"LoRA: Low-rank adaptation of large language models\",\n        \"Ctrl: A conditional transformer language model for controllable generation\",\n        \"GeDi: Generative discriminator guided sequence generation\",\n        \"Measuring bias in contextualized word representations\",\n        \"Gradient-based learning applied to document recognition\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"A diversity-promoting objective function for neural conversation models\",\n        \"Contrastive decoding: Open-ended text generation as optimization\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"DExperts: Decoding-time controlled text generation with experts and anti-experts\",\n        \"Few-shot parameter-efficient fine-tuning is better and cheaper than in-context learning\",\n        \"A token-level reference-free hallucination detection benchmark for free-form text generation\",\n        \"Gpt understands, too. arxiv.\",\n        \"Is prompt all you need? no. a comprehensive and broader view of instruction learning\",\n        \"Inference-time policy adapters (ipa): Tailoring extreme-scale lms without fine-tuning\",\n        \"Peft: State-of-the-art parameter-efficient fine-tuning methods\",\n        \"On measuring social biases in sentence encoders\",\n        \"Cross-task generalization via natural language crowdsourcing instructions\",\n        \"Xgen-7b technical report\",\n        \"Polite dialogue generation without parallel data\",\n        \"Contrastive decoding improves reasoning in large language models\",\n        \"Gpt-4 technical report\",\n        \"Language models are unsupervised multitask learners\",\n        \"The woman worked as a babysitter: On biases in language generation\",\n        \"“transforming” delete, retrieve, generate approach for controlled text style transfer\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Attention is all you need\",\n        \"Universal adversarial triggers for attacking and analyzing NLP\",\n        \"Exploring the limits of domain-adaptive training for detoxifying large-scale language models\",\n        \"Do prompt-based models really understand the meaning of their prompts?\",\n        \"Neural text generation with unlikelihood training\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Adaptive budget allocation for parameter-efficient fine-tuning\",\n        \"Gender bias in contextualized word embeddings\",\n        \"A survey on gpt-3\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Parameter-Efficient Detoxification with Contrastive Decoding, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}