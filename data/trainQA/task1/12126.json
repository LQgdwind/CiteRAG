{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Constrained LTL Specification Learning from Examples\n\nPaper Abstract: Abstract Temporal logic specifications play an important role in a wide range of software analysis tasks, such as model checking, automated synthesis, program comprehension, and runtime monitoring. Given a set of positive and negative examples, specified as traces, LTL learning is the problem of synthesizing a specification, in linear temporal logic (LTL), that evaluates to true over the positive traces and false over the negative ones. In this paper, we propose a new type of LTL learning problem called constrained LTL learning, where the user, in addition to positive and negative examples, is given an option to specify one or more constraints over the properties of the LTL formula to be learned. We demonstrate that the ability to specify these additional constraints significantly increases the range of applications for LTL learning, and also allows efficient generation of LTL formulas that satisfy certain desirable properties (such as minimality). We propose an approach for solving the constrained LTL learning problem through an encoding in first-order relational logic and reduction to an instance of the maximal satisfiability (MaxSAT) problem. An experimental evaluation demonstrates that ATLAS, an implementation of our proposed approach, is able to solve new types of learning problems while performing better than or competitively with the state-of-the-art tools in LTL learning.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The temporal logic of programs\",\n        \"Handbook of model checking\",\n        \"On the synthesis of a reactive module\",\n        \"General ltl specification mining (t)\",\n        \"Runtime verification for LTL and TLTL\",\n        \"Specifications for free\",\n        \"Specification: The biggest bottleneck in formal methods and autonomy\",\n        \"Specification sketching for linear temporal logic\",\n        \"Learning linear temporal properties\",\n        \"Learning interpretable models expressed in linear temporal logic\",\n        \"Mining specifications\",\n        \"The daikon system for dynamic detection of likely invariants\",\n        \"Mining assumptions for synthesis\",\n        \"Software Abstractions: Logic, language, and analysis\",\n        \"Alloymax: bringing maximum satisfaction to relational specifications\",\n        \"Maximum Satisfiability\",\n        \"Generating test cases for specification mining\",\n        \"Purltl: Mining ltl specification from imperfect traces in testing\",\n        \"Myths about the mutual exclusion problem\",\n        \"Reasoning about identifier spaces: How to make chord correct\",\n        \"CheckMate: Automated synthesis of hardware exploits and security litmus tests\",\n        \"Testera: Specification-based testing of java programs using SAT\",\n        \"Modular verification of code with sat\",\n        \"Finding bugs with a constraint solver\",\n        \"Network configuration management via model finding\",\n        \"Synthesis of reactive(1) designs\",\n        \"SAT-Based Model Checking\",\n        \"Kodkod for alloy users\",\n        \"Automating first-order relational logic\",\n        \"Kodkod: A relational model finder\",\n        \"Automated reasoning introduction and applications\",\n        \"Clay county officials and residents convicted on racketeering and voter fraud charges\",\n        \"Safe environmental envelopes of discrete systems\",\n        \"Bayesian inference of temporal task specifications from demonstrations\",\n        \"Managing conflicts in goal-driven requirements engineering\",\n        \"Adapting requirements models to varying environments\",\n        \"Relax: Incorporating uncertainty into the specification of self-adaptive systems\",\n        \"Adapting specifications for reactive controllers\",\n        \"Runtime resolution of feature interactions through adaptive requirement weakening\",\n        \"An investigation of the therac-25 accidents\",\n        \"Robustification of behavioral designs against environmental deviations\",\n        \"Open-wbo: A modular maxsat solver\",\n        \"Property specification patterns for finite-state verification\",\n        \"Scalable anytime algorithms for learning fragments of linear temporal logic\",\n        \"Specifying Systems: The TLA+ Language and Tools for Hardware and Software Engineers\",\n        \"Temporal logic motion planning with convex optimization via graphs of convex sets\",\n        \"Expanding the Horizon of Linear Temporal Logic Inference for Explainability\",\n        \"MaxSAT-based temporal logic inference from noisy data\",\n        \"Learning interpretable temporal properties from positive examples only\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Constrained LTL Specification Learning from Examples, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}