{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Lost in Interpretation: Navigating Challenges in Validating Persistency Models Amid Vague Specs and Stubborn Machines, All with a Sense of Humour\n\nPaper Abstract: Abstract Memory persistency models provide a foundation for persistent programming by specifying which (and when) writes to non-volatile memory (NVM) become persistent. Memory persistency models for the Intel-x86 and Arm architectures have been formalised, but not empirically validated against real machines. Traditional validation methods used for memory consistency models do not straightforwardly apply because a test program cannot directly observe when its data has become persistent: it cannot distinguish between reading data from a volatile cache and from NVM. We investigate addressing this challenge using a commercial off-the-shelf device that intercepts data on the memory bus and logs all writes in the order they reach the memory. Using this technique we conducted a litmus-testing campaign aimed at empirically validating the persistency guarantees of Intel-x86 and Arm machines. We observed writes propagating to memory out of order, and took steps to build confidence that these observations were not merely artefacts of our testing setup. However, despite gaining high confidence in the trustworthiness of our observation method, our conclusions remain largely negative. We found that the Intel-x86 architecture is not amenable to our approach, and on consulting Intel engineers discovered that there are currently no reliable methods of validating their persistency guarantees. For Arm, we found that even a machine recommended to us by a persistency expert at Arm did not match the formal Arm persistency model, due to a loophole in the specification. Nevertheless, our investigation and results provide confidence that if Intel were to produce machines with more transparent persistency behaviour, or if Arm machines with proper persistency support were to become available, our approach would be valuable for empirically validating them against their specifications.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"GPU concurrency: Weak behaviours and programming assumptions\",\n        \"Armed cats: Formal concurrency modelling at arm\",\n        \"Fences in weak memory models\",\n        \"Litmus: Running tests against hardware\",\n        \"BBB: simplifying persistent programming using battery-backed buffers\",\n        \"Arm Architecture Reference Manual for A-profile architecture\",\n        \"AutoIt Downloads\",\n        \"Software-only reverse engineering of physical dram mappings for rowhammer attacks\",\n        \"Armv8-a architecture evolution\",\n        \"Scalable persistent memory file system with kernel-userspace collaboration\",\n        \"Revamping hardware persistency models: View-based and axiomatic persistency models for intel-x86 and armv8\",\n        \"Review and things to know: Flash memory summit 2022\",\n        \"Are we susceptible to rowhammer? an end-to-end methodology for cloud providers\",\n        \"Exploiting correcting codes: On the effectiveness of ecc memory against rowhammer attacks\",\n        \"DDR Detective FS2800\",\n        \"Exploiting the dram rowhammer bug to gain kernel privileges\",\n        \"Deprecating the PCOMMIT Instruction\",\n        \"The semantics of shared memory in intel CPU/FPGA systems\",\n        \"Microscope on memory: Mpsoc-enabled computer memory system assessments\",\n        \"Persistent memory analysis tool (PMAT)\",\n        \"Reverse engineering of drams: Row hammer with crosshair\",\n        \"Winefs: A hugepage-aware file system for persistent memory that ages gracefully\",\n        \"An introduction to pmemcheck\",\n        \"Solar-dram: Reducing dram access latency by exploiting the variation in local bitlines\",\n        \"Linefs: Efficient smartnic offload of a distributed file system with pipeline parallelism\",\n        \"Flipping bits in memory without accessing them: An experimental study of dram disturbance errors\",\n        \"Challenges in empirically testing memory persistency models\",\n        \"Strata: A cross media file system\",\n        \"Design-induced latency variation in modern dram chips: Characterization, analysis, and latency reduction mechanisms\",\n        \"Pmfuzz: test case generation for persistent memory programs\",\n        \"Cross-failure bug detection in persistent memory programs\",\n        \"Pmtest: A fast and flexible testing framework for persistent memory programs\",\n        \"Automated synthesis of comprehensive memory model litmus test suites\",\n        \"S-store: Streaming meets transaction processing\",\n        \"DRAMA: Exploiting DRAM addressing for Cross-CPU attacks\",\n        \"Extending intel-x86 consistency and persistency: formalising the semantics of intel-x86 memory types and non-temporal stores\",\n        \"Persistency semantics of the intel-x86 architecture\",\n        \"Weak persistency semantics from the ground up: formalising the persistency semantics of armv8 and transactional models\",\n        \"Persistent memory programming\",\n        \"Persistent memory cleaning\",\n        \"Samsung electronics unveils far-reaching, next-generation memory solutions at flash memory summit 2022\",\n        \"Understanding POWER multiprocessors\",\n        \"Persistent Memory Architecture\",\n        \"Realizing the Fault-Tolerance promise of cloud storage using locks with intent\",\n        \"x86-tso: a rigorous and usable programmerâ€™s model for x86 multiprocessors\",\n        \"Relaxed virtual memory in armv8-a\",\n        \"Defeating software mitigations against rowhammer: A surgical precision hammer\",\n        \"Consistency and Completeness: Rethinking Distributed Stream Processing in Apache Kafka\",\n        \"Architectural support for persistent memory\",\n        \"One bit flips, one cloud flops: Cross-VM row hammer attacks and privilege escalation\",\n        \"NOVA: A log-structured file system for hybrid volatile/non-volatile main memories\",\n        \"Fault-tolerant and transactional stateful serverless workflows\",\n        \"Octopus++{}^{\\\\mbox{+}}: An rdma-enabled distributed persistent memory file system\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Lost in Interpretation: Navigating Challenges in Validating Persistency Models Amid Vague Specs and Stubborn Machines, All with a Sense of Humour, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}