{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 60 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Survey on Graph Neural Network Acceleration: An Algorithmic Perspective\n\nPaper Abstract: Abstract Graph neural networks (GNNs) have been a hot spot of recent research and are widely utilized in diverse applications. However, with the use of huger data and deeper models, an urgent demand is unsurprisingly made to accelerate GNNs for more efficient execution. In this paper, we provide a comprehensive survey on acceleration methods for GNNs from an algorithmic perspective. We first present a new taxonomy to classify existing acceleration methods into five categories. Based on the classification, we systematically discuss these methods and highlight their correlations. Next, we provide comparisons from aspects of the efficiency and characteristics of these methods. Finally, we suggest some promising prospects for future research.\n\n{retrieved_text}\n\nGenerate exactly 60 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 60\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Computing graph neural networks: A survey from algorithms to accelerators\",\n        \"Dare: Droplayer-aware manycore reram architecture for training graph neural networks\",\n        \"Binary graph neural networks\",\n        \"Relational inductive biases, deep learning, and graph networks\",\n        \"Scaling graph neural networks with approximate pagerank\",\n        \"Distributed optimization and statistical learning via the alternating direction method of multipliers\",\n        \"Recent advances in graph partitioning\",\n        \"Stochastic training of graph convolutional networks with variance reduction\",\n        \"Fastgcn: Fast learning with graph convolutional networks via importance sampling\",\n        \"A unified lottery ticket hypothesis for graph neural networks\",\n        \"A survey of model compression and acceleration for deep neural networks\",\n        \"Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks\",\n        \"Sparsificationâ€”a technique for speeding up dynamic graph algorithms\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Inductive representation learning on large graphs\",\n        \"Survey on graph neural network acceleration architectures\",\n        \"Lightgcn: Simplifying and powering graph convolution network for recommendation\",\n        \"Distilling the knowledge in a neural network\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Heterogeneous graph transformer\",\n        \"Adaptive sampling towards fast graph representation learning\",\n        \"A fast and high quality multilevel scheme for partitioning irregular graphs\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Graph neural networks meet neural-symbolic computing: A survey and perspective\",\n        \"Sgcn: A graph sparsifier based on graph convolutional networks\",\n        \"Adaptivegcn: Efficient gcn through adaptively sparsifying graphs\",\n        \"Pagraph: Scaling gnn training on large graphs via computation-aware caching\",\n        \"Bgl: Gpu-efficient gnn training by optimizing graph data i/o and preprocessing\",\n        \"Sampling methods for efficient training of graph convolutional networks: A survey\",\n        \"Gnnsampler: Bridging the gap between sampling algorithms of gnn and hardware\",\n        \"Ultragcn: Ultra simplification of graph convolutional networks for recommendation\",\n        \"Distgnn: Scalable distributed training for large-scale graph neural networks\",\n        \"Explainability methods for graph convolutional neural networks\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"The graph neural network model\",\n        \"Fast graph attention networks using effective resistance based graph sparsification\",\n        \"Degree-quant: Quantization-aware training for graph neural networks\",\n        \"Graph Attention Networks\",\n        \"Deep graph library: A graph-centric, highly-performant package for graph neural networks\",\n        \"Neural graph collaborative filtering\",\n        \"Bi-gcn: Binary graph convolutional network\",\n        \"Graph learning based recommender systems: A review\",\n        \"Simplifying graph convolutional networks\",\n        \"A comprehensive survey on graph neural networks\",\n        \"How powerful are graph neural networks?\",\n        \"Alleviating irregularity in graph analytics acceleration: A hardware/software co-design approach\",\n        \"Tinygnn: Learning efficient graph neural networks\",\n        \"Characterizing and understanding gcns on gpu\",\n        \"Hygcn: A gcn accelerator with hybrid architecture\",\n        \"Distilling knowledge from graph convolutional networks\",\n        \"Extract the knowledge of graph neural networks and go beyond it: An effective knowledge distillation framework\",\n        \"Gnnexplainer: Generating explanations for graph neural networks\",\n        \"Accurate, efficient and scalable graph embedding\",\n        \"GraphSAINT: Graph sampling based inductive learning method\",\n        \"Heterogeneous graph neural network\",\n        \"Deep learning on graphs: A survey\",\n        \"Automated machine learning on graphs: A survey\",\n        \"Data augmentation for graph neural networks\",\n        \"Robust graph representation learning via neural sparsification\",\n        \"Distdgl: distributed graph neural network training for billion-scale graphs\"\n    ],\n    \"reasoning\": \"Selected these 60 references because they represent foundational work and recent advances in Survey on Graph Neural Network Acceleration: An Algorithmic Perspective, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}