{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: List of Figures\n\nPaper Abstract: Abstract In this document, we describe LDBC Graphalytics, an industrial-grade benchmark for graph analysis platforms. The main goal of Graphalytics is to enable the fair and objective comparison of graph analysis platforms. Due to the diversity of bottlenecks and performance issues such platforms need to address, Graphalytics consists of a set of selected deterministic algorithms for full-graph analysis, standard graph datasets, synthetic dataset generators, and reference output for validation purposes. Its test harness produces deep metrics that quantify multiple kinds of systems scalability, weak and strong, and robustness, such as failures and performance variability. The benchmark also balances comprehensiveness with runtime necessary to obtain the deep metrics. The benchmark comes with open-source software for generating performance data, for validating algorithm results, for monitoring and sharing performance data, and for obtaining the final benchmark result as a standard performance report.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Diversified Stress Testing of RDF Data Management Systems\",\n        \"WGB: Towards a Universal Graph Benchmark\",\n        \"LinkBench: A database benchmark based on the Facebook social graph\",\n        \"Design and Implementation of the HPCS Graph Analysis Benchmark on Symmetric Multiprocessors\",\n        \"The GAP Benchmark Suite\",\n        \"The Berlin SPARQL Benchmark\",\n        \"Graphalytics: A Big Data Benchmark for Graph-Processing Platforms\",\n        \"Measuring User Influence in Twitter: The Million Follower Fallacy\",\n        \"R-MAT: A Recursive Model for Graph Mining\",\n        \"The Method of Paired Comparisons\",\n        \"Ranking from unbalanced paired-comparison data\",\n        \"Algorithm 1000: SuiteSparse:GraphBLAS: Graph Algorithms in the Language of Sparse Linear Algebra\",\n        \"Graph database benchmarking on cloud environments with XGDBench\",\n        \"Ranking the web frontier\",\n        \"Parallel Graph Processing: Prejudice and State of the Art\",\n        \"An evaluation study of BigData frameworks for graph processing\",\n        \"The LDBC Social Network Benchmark: Interactive Workload\",\n        \"The Case Against Specialized Graph Analytics Engines\",\n        \"Clearing the clouds: A study of emerging scaleout workloads on modern hardware\",\n        \"BigBench: Towards an industry standard benchmark for Big Data analytics\",\n        \"PowerGraph: Distributed Graph-Parallel Computation on Natural Graphs\",\n        \"The Game Trace Archive\",\n        \"An Empirical Performance Evaluation of GPU-Enabled Graph-Processing Systems\",\n        \"How Well Do Graph-Processing Platforms Perform?\",\n        \"LUBM: A benchmark for OWL knowledge base systems\",\n        \"An Experimental Comparison of Pregel-like Graph Processing Systems\",\n        \"Scientific benchmarking of parallel computing systems: Twelve ways to tell the masses when reporting performance results\",\n        \"PGX.D: A fast distributed graph processing engine\",\n        \"LDBC Graphalytics graphs\",\n        \"LDBC Graphalytics: A Benchmark for Large-Scale Graph Analysis on Parallel and Distributed Platforms\",\n        \"The LDBC Graphalytics Benchmark\",\n        \"VERTEXICA: Your Relational Friend for Graph Analytics!\",\n        \"Byelaws of the Linked Data Benchmark Council v1.1\",\n        \"SNAP Datasets: Stanford Large Network Dataset Collection\",\n        \"Large-Scale Distributed Graph Computing Systems: An Experimental Evaluation\",\n        \"BDGS: A Scalable Big Data Generator Suite in Big Data Benchmarking\",\n        \"Introducing the Graph 500\",\n        \"Specification of different Graphalytics Competitions\",\n        \"GraphBIG: Understanding graph computing in the context of industrial solutions\",\n        \"Umbra: A Disk-Based System with In-Memory Performance\",\n        \"The PageRank citation ranking: Bringing order to the Web.\",\n        \"The Vision of BigBench 2.0\",\n        \"Near linear time algorithm to detect community structures in large-scale networks\",\n        \"Large-Scale Graph Processing Using Apache Giraph\",\n        \"Navigating the maze of graph analytics frameworks using massive datasets\",\n        \"SP2Bench: A SPARQL Performance Benchmark\",\n        \"GraphMat: High performance graph analytics made productive\",\n        \"An early look at the LDBC Social Network Benchmarkâ€™s Business Intelligence workload\",\n        \"Psychophysical Analysis\",\n        \"TPC Pricing-Standard Specification\",\n        \"BigDataBench: A Big Data benchmark suite from internet services\",\n        \"GraphX: A resilient distributed graph system on Spark\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in List of Figures, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}