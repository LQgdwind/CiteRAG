{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: nl2spec: Interactively Translating Unstructured Natural Language to Temporal Logics with Large Language Models\n\nPaper Abstract: Abstract A rigorous formalization of desired system requirements is indispensable when performing any verification task. This often limits the application of verification techniques, as writing formal specifications is an error-prone and time-consuming manual task. To facilitate this, we present nl2spec, a framework for applying Large Language Models (LLMs) to derive formal specifications (in temporal logics) from unstructured natural language. In particular, we introduce a new methodology to detect and resolve the inherent ambiguity of system requirements in natural language: we utilize LLMs to map subformulas of the formalization back to the corresponding natural language fragments of the input. Users iteratively add, delete, and edit these sub-translations to amend erroneous formalizations, which is easier than manually redrafting the entire formalization. The framework is agnostic to specific application domains and can be extended to similar specification languages and new neural models. We perform a user study to obtain a challenging dataset, which we use to run experiments on the quality of translations. We provide an open-source implementation, including a web-based frontend.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"J.A.R.V.I.S. TSL/TLSF benchmark suite\",\n        \"Character-level language modeling with deeper self-attention\",\n        \"Rasa: Open source language understanding and dialogue management\",\n        \"Language models are few-shot learners\",\n        \"Synthesis of ltl formulas from natural language texts: State of the art and research directions\",\n        \"Evaluating large language models trained on code\",\n        \"Application of recursive arithmetic to the problem of circuit synthesis\",\n        \"Model checking\",\n        \"Iterative circuit repair against formal specifications\",\n        \"Linear temporal logic and linear dynamic logic on finite traces\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"On signal temporal logic\",\n        \"LTLf2DFA\",\n        \"Nl2ltl–a python package for converting natural language (nl) instructions to linear temporal logic (ltl) formulas\",\n        \"The pile: An 800gb dataset of diverse text for language modeling\",\n        \"Interactive synthesis of temporal specifications from examples and natural language\",\n        \"Sequence-to-sequence language grounding of non-markovian task specifications\",\n        \"Specification patterns for probabilistic quality properties\",\n        \"Teaching temporal logics to neural networks\",\n        \"Formal specifications from natural language\",\n        \"Monitoring java programs with java pathexplorer\",\n        \"Deepstl: from english requirements to signal temporal logic\",\n        \"IEEE standard for property specification language (PSL)\",\n        \"Scaling laws for neural language models\",\n        \"Real-time specification patterns\",\n        \"Generating symbolic reasoning problems with transformer gans\",\n        \"The bigscience roots corpus: A 1.6 tb composite multilingual dataset\",\n        \"Solving quantitative reasoning problems with language models\",\n        \"Datasets: A community library for natural language processing\",\n        \"Lang2ltl: Translating natural language commands to temporal specification with large language models\",\n        \"Monitoring temporal properties of continuous signals\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Learning to ground language to temporal logical form\",\n        \"A declarative approach for flexible business processes management\",\n        \"The temporal logic of programs\",\n        \"Towards the automatic mathematician\",\n        \"Improving language understanding by generative pre-training\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Bloom: A 176b-parameter open-access multilingual language model\",\n        \"Neural circuit synthesis from specification patterns\",\n        \"A mathematical theory of communication\",\n        \"Attention is all you need\",\n        \"A practical guide for SystemVerilog assertions\",\n        \"Efficient way of web development using python and flask\",\n        \"Learning a natural-language to ltl executable semantic parser for grounded robotics\",\n        \"Chain of thought prompting elicits reasoning in large language models\",\n        \"Huggingface’s transformers: State-of-the-art natural language processing\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Autoformalization with large language models\",\n        \"Star: Bootstrapping reasoning with reasoning\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in nl2spec: Interactively Translating Unstructured Natural Language to Temporal Logics with Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}