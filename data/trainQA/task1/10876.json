{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Curiosity-driven Red-teaming for Large Language Models\n\nPaper Abstract: Abstract Large language models (LLMs) hold great potential for many natural language applications but risk generating incorrect or toxic content. To probe when an LLM generates unwanted content, the current paradigm is to recruit a red team of human testers to design input prompts (i.e., test cases) that elicit undesirable responses from LLMs. However, relying solely on human testers is expensive and time-consuming. Recent works automate red teaming by training a separate red team LLM with reinforcement learning (RL) to generate test cases that maximize the chance of eliciting undesirable responses from the target LLM. However, current RL methods are only able to generate a small number of effective test cases resulting in a low coverage of the span of prompts that elicit undesirable responses from the target LLM. To overcome this limitation, we draw a connection between the problem of increasing the coverage of generated test cases and the well-studied approach of curiosity-driven exploration that optimizes for novelty. Our method of curiosity-driven red teaming (CRT) achieves greater coverage of test cases while mantaining or increasing their effectiveness compared to existing methods. Our method, CRT successfully provokes toxic responses from LLaMA2 model that has been heavily fine-tuned using human preferences to avoid toxic outputs. Code is available at https://github.com/Improbable-AI/curiosity_redteam WARNING: This paper contains model outputs which are offensive in nature.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Jointly measuring diversity and quality in text generation models\",\n        \"Training a helpful and harmless assistant with reinforcement learning from human feedback\",\n        \"Unifying count-based exploration and intrinsic motivation\",\n        \"Flow network based generative models for non-iterative diverse candidate generation\",\n        \"Pythia: A suite for analyzing large language models across training and scaling\",\n        \"Language models are few-shot learners\",\n        \"Exploration by random network distillation\",\n        \"Explore, establish, exploit: Red teaming language models from scratch\",\n        \"trlX: A scalable framework for RLHF\",\n        \"Learning to generate better than your llm\",\n        \"Redeeming intrinsic rewards via constrained optimization\",\n        \"Vicuna: An open-source chatbot impressing gpt-4 with 90%* chatgpt quality\",\n        \"Increasing diversity while maintaining accuracy: Text data generation with large language models and human interventions\",\n        \"Free dolly: Introducing the world’s first truly open instruction-tuned llm\",\n        \"Hotflip: White-box adversarial examples for text classification\",\n        \"Go-explore: a new approach for hard-exploration problems\",\n        \"Counterfactuals of counterfactuals: a back-translation-inspired approach to analyse counterfactual editors\",\n        \"Red teaming language models to reduce harms: Methods, scaling behaviors, and lessons learned\",\n        \"A survey of text similarity approaches\",\n        \"Detoxify\",\n        \"Toxigen: A large-scale machine-generated dataset for adversarial and implicit hate speech detection\",\n        \"Provably efficient maximum entropy exploration\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Query-efficient black-box red teaming via bayesian optimization\",\n        \"Learning from tay’s introduction\",\n        \"Learning word vectors for sentiment analysis\",\n        \"Flirt: Feedback loop in-context red teaming\",\n        \"Asynchronous methods for deep reinforcement learning\",\n        \"Orca: Progressive learning from complex explanation traces of gpt-4\",\n        \"Intrinsic motivation systems for autonomous mental development\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Curiosity-driven exploration by self-supervised prediction\",\n        \"Red teaming language models with language models\",\n        \"Markov decision processes: discrete stochastic dynamic programming\",\n        \"Language models are unsupervised multitask learners\",\n        \"Sentence-bert: Sentence embeddings using siamese bert-networks\",\n        \"Equivalence between policy gradients and soft q-learning\",\n        \"Proximal policy optimization algorithms\",\n        \"Softmax function\",\n        \"Learning to summarize with human feedback\",\n        \"Reinforcement learning: An introduction\",\n        \"Stanford alpaca: An instruction-following llama model\",\n        \"Evaluating the evaluation of diversity in natural language generation\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Learning from the worst: Dynamically generated datasets to improve online hate detection\",\n        \"Trl: Transformer reinforcement learning\",\n        \"Universal adversarial triggers for attacking and analyzing nlp\",\n        \"Texygen: A benchmarking platform for text generation models\",\n        \"Universal and transferable adversarial attacks on aligned language models\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Curiosity-driven Red-teaming for Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}