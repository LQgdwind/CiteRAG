{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to schedule job-shop problems: Representation and policy learning using graph neural network and reinforcement learning\n\nPaper Abstract: Abstract We propose a framework to learn to schedule a job-shop problem (JSSP) using a graph neural network (GNN) and reinforcement learning (RL). We formulate the scheduling process of JSSP as a sequential decision-making problem with graph representation of the state to consider the structure of JSSP. In solving the formulated problem, the proposed framework employs a GNN to learn that node features that embed the spatial structure of the JSSP represented as a graph (representation learning) and derive the optimum scheduling policy that maps the embedded node features to the best scheduling action (policy learning). We employ Proximal Policy Optimization (PPO) based RL strategy to train these two modules in an end-to-end fashion. We empirically demonstrate that the GNN scheduler, due to its superb generalization capability, outperforms practically favored dispatching rules and RL-based schedulers on various benchmark JSSP. We also confirmed that the proposed framework learns a transferable scheduling policy that can be employed to schedule a completely new JSSP (in terms of size and parameters) without further training.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Google or tools. version 7.3\",\n        \"The shifting bottleneck procedure for job shop scheduling\",\n        \"A computational study of the job-shop scheduling problem\",\n        \"Dynamic job-shop scheduling using reinforcement learning agents\",\n        \"Relational inductive biases, deep learning, and graph networks\",\n        \"Solving comprehensive dynamic job shop scheduling problem by using a grasp-based approach\",\n        \"Metaheuristics: intelligent problem solving\",\n        \"Competitive neural network to solve scheduling problems\",\n        \"Probabilistic learning combinations of local job-shop scheduling rules\",\n        \"Adaptive reactive job-shop scheduling with reinforcement learning agents\",\n        \"Distributed policy search reinforcement learning for job-shop scheduling tasks\",\n        \"The complexity of flowshop and jobshop scheduling\",\n        \"A tabu search approach to scheduling an automated wet etch station\",\n        \"Deep sparse rectifier neural networks\",\n        \"Job shop scheduling techniques in semiconductor manufacturing\",\n        \"Stable baselines\",\n        \"Efficient dispatching rules for scheduling in a job shop\",\n        \"Learning the multiple traveling salesmen problem with permutation invariant pooling networks\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Adam: A method for stochastic optimization\",\n        \"Attention, learn to solve routing problems!\",\n        \"Resouce constrained project scheduling: An experimental investigation of heuristic scheduling techniques (supplement)\",\n        \"Combinatorial optimization with graph convolutional networks and guided tree search\",\n        \"Smart manufacturing scheduling with edge computing using multi-class deep q network\",\n        \"A “branch-and-bound” algorithm for the exact solution of the three-machine scheduling problem\",\n        \"On the job-shop scheduling problem\",\n        \"Learning heuristics over large graphs via deep reinforcement learning\",\n        \"Playing atari with deep reinforcement learning\",\n        \"Hybrid genetic algorithm with multi-parents recombination for job shop scheduling problems/Ong Chung Sin\",\n        \"Extracting priority rules for dynamic multi-objective flexible job shop scheduling problems using gene expression programming\",\n        \"A survey of scheduling rules\",\n        \"Physics-induced graph neural network: An application to wind-farm power estimation\",\n        \"Scheduling: theory, algorithms, and systems multi-coloring\",\n        \"Learning to solve np-complete problems: A graph neural network for decision tsp\",\n        \"Scheduling problems with disjunctive constraints\",\n        \"Graph networks as learnable physics engines for inference and control\",\n        \"Trust region policy optimization\",\n        \"Proximal policy optimization algorithms\",\n        \"Differentiable physics-informed graph networks\",\n        \"Manuscript–iv: Multi-objective genetic algorithm for backup station in fault-tolerant flow line design\",\n        \"New search spaces for sequencing problems with application to job shop scheduling\",\n        \"Reinforcement learning: An introduction\",\n        \"Between mdps and semi-mdps: A framework for temporal abstraction in reinforcement learning\",\n        \"Benchmarks for basic scheduling problems\",\n        \"Designing dispatching rules to minimize total tardiness\",\n        \"Evolving dispatching rules using genetic programming for solving multi-objective flexible job-shop problems\",\n        \"The current state of bounds on benchmark instances of the job-shop scheduling problem\",\n        \"Nervenet: Learning structured policy with graph neural networks\",\n        \"A neural network job-shop scheduler\",\n        \"Implementing heuristics as an optimization criterion in neural networks for job-shop scheduling\",\n        \"Capsule graph neural network\",\n        \"How powerful are graph neural networks?\",\n        \"Studies on metaheuristics for jobshop and flowshop scheduling problems\",\n        \"A genetic algorithm applicable to large-scale job-shop problems\",\n        \"Glomo: Unsupervisedly learned relational graphs as transferable representations\",\n        \"Scheduling cluster tools in wafer fabrication using candidate list and simulated annealing\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Learning to schedule job-shop problems: Representation and policy learning using graph neural network and reinforcement learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}