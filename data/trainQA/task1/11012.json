{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accelerating Sparse Tensor Decomposition Using Adaptive Linearized Representation\n\nPaper Abstract: Abstract High-dimensional sparse data emerge in many critical application domains such as cybersecurity, healthcare, anomaly detection, and trend analysis. To quickly extract meaningful insights from massive volumes of these multi-dimensional data, scientists employ unsupervised analysis tools based on tensor decomposition (TD) methods. However, real-world sparse tensors exhibit highly irregular shapes, data distributions, and sparsity, which pose significant challenges for making efficient use of modern parallel architectures. Moreover, as the number of cores per processor continues to increase, memory contention and synchronization become substantial performance bottlenecks for irregular workloads. This study breaks the prevailing assumption that compressing sparse tensors into coarse-grained structures (i.e., tensor slices or blocks) or along a particular dimension/mode (i.e., mode-specific) is more efficient than keeping them in a fine-grained, mode-agnostic form. Our novel sparse tensor representation, Adaptive Linearized Tensor Order (ALTO), encodes tensors in a compact format that can be easily streamed from memory and is amenable to both caching and parallel execution. In contrast to existing compressed tensor formats, ALTO constructs one tensor copy that is agnostic to both the mode orientation and the irregular distribution of nonzero elements. To demonstrate the efficacy of ALTO, we accelerate popular TD methods that compute the Canonical Polyadic Decomposition (CPD) model across a range of real-world sparse tensors. We propose a set of parallel TD algorithms that exploit the inherent data reuse of tensor computations to substantially reduce synchronization overhead, decrease memory footprint, and improve parallel performance. Additionally, we characterize the major execution bottlenecks of TD methods on multiple generations of the latest Intel Xeon Scalable processors, including Sapphire Rapids CPUs, and introduce dynamic adaptation heuristics to automatically select the best algorithm based on the sparse tensor characteristics. Across a diverse set of real-world data sets, ALTO outperforms the state-of-the-art approaches, achieving more than an order-of-magnitude speedup over the best mode-agnostic formats. Compared to the best mode-specific formats, which require multiple tensor copies, ALTO achieves more than 5.1×5.1\\times geometric mean speedup at a fraction (25%percent2525\\%) of their storage.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Marble: High-throughput phenotyping from electronic health records via sparse nonnegative tensor factorization\",\n        \"Rubik: Knowledge guided tensor factorization and completion for health data analytics\",\n        \"Extracting the multi-timescale activity patterns of online financial markets\",\n        \"Tensor-based anomaly detection: An interdisciplinary survey\",\n        \"Scalable tensor decompositions for multi-aspect data mining\",\n        \"Tensors for data mining and data fusion: Models, applications, and scalable algorithms\",\n        \"Tensor decompositions for learning latent variable models\",\n        \"Tensor decomposition for signal processing and machine learning\",\n        \"FROSTT: The formidable repository of open sparse tensors and tools\",\n        \"Tensor decompositions and applications\",\n        \"Efficient matlab computations with sparse and factored tensors\",\n        \"Temporal link prediction using matrix and tensor factorizations\",\n        \"Beyond streams and graphs: Dynamic tensor analysis\",\n        \"On tensors, sparsity, and nonnegative factorizations\",\n        \"Blocking optimization techniques for sparse tensor computation\",\n        \"Scalable sparse tensor decompositions in distributed memory systems\",\n        \"Efficient, out-of-Memory Sparse MTTKRP on Massively Parallel Architectures\",\n        \"Hicoo: Hierarchical storage of sparse tensors\",\n        \"Sptfs: Sparse tensor format selection for mttkrp via deep learning\",\n        \"Splatt: Efficient and parallel sparse tensor-matrix multiplication\",\n        \"A unified optimization approach for sparse tensor operations on gpus\",\n        \"Sparten: Leveraging kokkos for on-node parallelism in a second-order method for fitting canonical polyadic tensor models to poisson data\",\n        \"Computationally efficient cp tensor decomposition update framework for emerging component discovery in streaming data\",\n        \"Efficient and scalable computations with sparse tensors\",\n        \"Tensor-matrix products with a compressed sparse tensor\",\n        \"Software for sparse tensor decomposition on emerging computing architectures\",\n        \"Efficient and effective sparse tensor reordering\",\n        \"Load-balanced sparse mttkrp on gpus\",\n        \"An efficient mixed-mode representation of sparse tensors\",\n        \"ALTO: Adaptive Linearized Storage of Sparse Tensors\",\n        \"Dynamic tensor linearization and time slicing for efficient factorization of infinite data streams\",\n        \"Format abstraction for sparse tensor algebra compilers\",\n        \"TensorFlow: A system for large-scale machine learning\",\n        \"Tensorlab 3.0 — numerical optimization strategies for large-scale constrained and coupled matrix/tensor factorization\",\n        \"Accelerating the tucker decomposition with compressed sparse tensors\",\n        \"High performance rearrangement and multiplication routines for sparse tensor arithmetic\",\n        \"Hadamard, khatri-rao, kronecker, and other matrix products\",\n        \"Newton-based optimization for Kullback-Leibler nonnegative tensor factorizations\",\n        \"Sur une courbe, qui remplit toute une aire plane\",\n        \"A computer oriented geodetic data base; and a new technique in file sequencing\",\n        \"Likwid\",\n        \"Haten2: Billion-scale tensor decompositions\",\n        \"Roofline: An insightful visual performance model for multicore architectures\",\n        \"uops.info: Characterizing latency, throughput, and port usage of instructions on intel microarchitectures\",\n        \"A survey of techniques for designing and managing cpu register file\",\n        \"Demystifying complex workload-dram interactions: An experimental study\",\n        \"Bridging the gap between deep learning and sparse matrix format selection\",\n        \"Ia-spgemm: An input-aware auto-tuning framework for parallel sparse matrix-matrix multiplication\",\n        \"Sparsity-aware tensor decomposition\",\n        \"Accelerating sparse mttkrp for tensor decomposition on fpga\",\n        \"Dynasor: A dynamic memory layout for accelerating sparse mttkrp for tensor decomposition on multi-core cpu\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Accelerating Sparse Tensor Decomposition Using Adaptive Linearized Representation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}