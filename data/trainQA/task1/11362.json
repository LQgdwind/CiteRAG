{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Formally Certified Approximate Model CountingThe first two authors contributed equally.\n\nPaper Abstract: Abstract Approximate model counting is the task of approximating the number of solutions to an input Boolean formula. The state-of-the-art approximate model counter for formulas in conjunctive normal form (CNF), 𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢\\mathsf{ApproxMC}, provides a scalable means of obtaining model counts with probably approximately correct (PAC)-style guarantees. Nevertheless, the validity of 𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢\\mathsf{ApproxMC}’s approximation relies on a careful theoretical analysis of its randomized algorithm and the correctness of its highly optimized implementation, especially the latter’s stateful interactions with an incremental CNF satisfiability solver capable of natively handling parity (XOR) constraints. We present the first certification framework for approximate model counting with formally verified guarantees on the quality of its output approximation. Our approach combines: (i) a static, once-off, formal proof of the algorithm’s PAC guarantee in the Isabelle/HOL proof assistant; and (ii) dynamic, per-run, verification of 𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢\\mathsf{ApproxMC}’s calls to an external CNF-XOR solver using proof certificates. We detail our general approach to establish a rigorous connection between these two parts of the verification, including our blueprint for turning the formalized, randomized algorithm into a verified proof checker, and our design of proof certificates for both 𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢𝖠𝗉𝗉𝗋𝗈𝗑𝖬𝖢\\mathsf{ApproxMC} and its internal CNF-XOR solving steps. Experimentally, we show that certificate generation adds little overhead to an approximate counter implementation, and that our certificate checker is able to fully certify 84.7%percent84.784.7\\% of instances with generated certificates when given the same time and memory limits as the counter.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Trustworthy graph algorithms (invited talk)\",\n        \"ApproxMCCert and CertCheck tool repository\",\n        \"A flexible proof format for SAT solver-elaborator communication\",\n        \"Locales: A module system for mathematical theories\",\n        \"Quantitative verification of neural networks and its security applications\",\n        \"Scalable fine-grained proofs for formula processing\",\n        \"Proof complexity of propositional model counting\",\n        \"CaDiCaL, Kissat, Paracooba, Plingeling and Treengeling entering the SAT Competition 2020\",\n        \"TBUDDY: A proof-generating BDD package\",\n        \"Certified knowledge compilation with application to verified model counting\",\n        \"Distribution-aware sampling and weighted model counting for SAT\",\n        \"Algorithmic improvements in approximate counting for probabilistic inference: From linear to logarithmic SAT calls\",\n        \"Approximate model counting\",\n        \"Counting-based reliability estimation for power-transmission grids\",\n        \"Verified analysis of random binary tree structures\",\n        \"A verified compiler for probability density functions\",\n        \"An extensible SAT-solver\",\n        \"Taming the curse of dimensionality: Discrete integration by hashing and optimization\",\n        \"Proofs for propositional model counting\",\n        \"Optimizing a verified SAT solver\",\n        \"FRAT-xor and cake_xlrup tool repository\",\n        \"Randomized synthesis for diversity and cost constraints with control improvisation\",\n        \"End-to-end verification for subgraph solving\",\n        \"Certifying parity reasoning efficiently using pseudo-Boolean proofs\",\n        \"Near-uniform sampling of combinatorial spaces using XOR constraints\",\n        \"Certifying certainty and uncertainty in approximate membership query structures\",\n        \"Efficient, verified checking of propositional proofs\",\n        \"A formalized hierarchy of probabilistic system types - proof pearl\",\n        \"Formal verification of probabilistic algorithms\",\n        \"CertiStr: a certified string solver\",\n        \"Formalization of randomized approximation algorithms for frequency moments\",\n        \"Median method\",\n        \"Universal hash families\",\n        \"The proof checkers Pacheck and Pastèque for the practical algebraic calculus\",\n        \"CakeML: a verified implementation of ML\",\n        \"Efficient verified (UN)SAT certificate checking\",\n        \"Certifying algorithms\",\n        \"Sparse hashing for scalable approximate model counting: Theory and practice\",\n        \"Auditable algorithms for approximate model counting\",\n        \"Model counting and uniform sampling instances\",\n        \"Isabelle/HOL - A Proof Assistant for Higher-Order Logic\",\n        \"The foundation of a generic theorem prover\",\n        \"Faster LRAT checking than solving with CaDiCaL\",\n        \"On the hardness of approximate reasoning\",\n        \"Performing Bayesian inference by weighted model counting\",\n        \"CoqQFBV: A scalable certified SMT quantifier-free bit-vector solver\",\n        \"Proof generation for CDCL solvers using Gauss-Jordan elimination\",\n        \"Tinted, detached, and lazy CNF-XOR solving and its applications to counting and sampling\",\n        \"BIRD: engineering an efficient CNF-XOR SAT solver and its applications to approximate model counting\",\n        \"Arjun: An efficient independent support computation technique and its applications to counting and sampling\",\n        \"Extending SAT solvers to cryptographic problems\",\n        \"Verified propagation redundancy and compositional UNSAT checking in CakeML\",\n        \"Certification of termination proofs using CeTA\",\n        \"The complexity of enumeration and reliability problems\",\n        \"Constant propagation with conditional branches\",\n        \"DRAT-trim: Efficient checking and trimming using expressive clausal proofs\",\n        \"Engineering an efficient PB-XOR solver\",\n        \"Rounding meets approximate model counting\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Formally Certified Approximate Model CountingThe first two authors contributed equally., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}