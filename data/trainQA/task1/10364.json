{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Searching in trees with monotonic query times11footnote 1Some results of this work have been presented at the 47th International Symposium on Mathematical Foundations of Computer Science (MFCS 2022) [20]. 22footnote 2Partially supported by National Science Centre (Poland) grant number 2018/31/B/ST6/00820.\n\nPaper Abstract: Abstract We consider the following generalization of binary search in sorted arrays to tree domains. In each step of the search, an algorithm is querying a vertex qùëûq, and as a reply, it receives an answer, which either states that qùëûq is the desired target, or it gives the neighbor of qùëûq that is closer to the target than qùëûq. A further generalization assumes that a vertex-weight function œâùúî\\omega gives the query costs, i.e., the cost of querying qùëûq is œâ‚Äã(q)ùúîùëû\\omega(q). The goal is to find an adaptive search strategy requiring the minimum cost in the worst case. This problem is NP-complete for general weight functions and one of the challenging open questions is whether there exists a polynomial-time constant factor approximation algorithm for an arbitrary tree? In this work, we prove that there exist a constant-factor approximation algorithm for trees with a monotonic cost function, i.e., when the tree has a vertex vùë£v such that the weights of the subsequent vertices on the path from vùë£v to any leaf give a monotonic (non-increasing or non-decreasing) sequence SùëÜS. This gives a constant factor approximation algorithm for trees with cost functions such that each such sequence SùëÜS has a fixed number of monotonic segments. Finally, we combine several earlier results to show that the problem is NP-complete when the number of monotonic segments in SùëÜS is at least 444. Keywords: binary search, graph search, approximation algorithm, query complexity\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A model for hierarchical memory\",\n        \"Shortest path queries, graph partitioning and covering problems in worst and beyond worst case settings\",\n        \"Optimal search in trees\",\n        \"Splay trees on trees\",\n        \"The geometry of tree-based sorting\",\n        \"Navigating in trees with permanently noisy advice\",\n        \"Approximating treewidth, pathwidth, and minimum elimination tree height\",\n        \"The complexity of bicriteria tree-depth\",\n        \"Binary identification problems for weighted trees\",\n        \"On the tree search problem with non-uniform costs\",\n        \"Binary search in graphs revisited\",\n        \"Edge ranking of weighted trees\",\n        \"Edge ranking and searching in partial orders\",\n        \"Approximation strategies for generalized binary search in weighted trees\",\n        \"Cholesky factorization of matrices in parallel and ranking of graphs\",\n        \"Efficient parallel query processing by graph ranking\",\n        \"An efficient noisy binary search in graphs via median approximation\",\n        \"Vertex rankings of chordal graphs and weighted trees\",\n        \"A framework for searching in graphs in the presence of errors\",\n        \"Constant-factor approximation algorithm for binary search in trees with monotonic query times\",\n        \"A general framework for robust interactive learning\",\n        \"Interactive learning of a dynamic structure\",\n        \"Deterministic and probabilistic binary search in graphs\",\n        \"Lifo-search: A min-max theorem and a searching game for cycle-rank and tree-depth\",\n        \"Search games: Literature and survey\",\n        \"Optimal node ranking of trees\",\n        \"On an edge ranking problem of trees and graphs\",\n        \"Ordered colourings\",\n        \"The Art of Computer Programming, Volume III: Sorting and Searching\",\n        \"On binary searching with nonuniform costs\",\n        \"An approximation algorithm for binary searching in trees\",\n        \"Optimal edge ranking of trees in linear time\",\n        \"On minimum edge ranking spanning trees\",\n        \"Np-hardness proof and an approximation algorithm for the minimum vertex ranking spanning tree problem\",\n        \"Finding an optimal tree searching strategy in linear time\",\n        \"Binary searching with nonuniform costs and its application to text retrieval\",\n        \"Tree-depth, subgraph coloring and homomorphism bounds\",\n        \"Generalization of binary search: Searching in trees and forest-like partial orders\",\n        \"Searching games with errors ‚Äî fifty years of coping with liars\",\n        \"Artificial Intelligence - A Modern Approach, Third International Edition\",\n        \"The future is big graphs: a community view on graph processing systems\",\n        \"Optimal node ranking of trees in linear time\",\n        \"On a graph partition problem with application to VLSI layout\",\n        \"Generalized edge-ranking of trees (extended abstract)\",\n        \"Generalized vertex-rankings of trees\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Searching in trees with monotonic query times11footnote 1Some results of this work have been presented at the 47th International Symposium on Mathematical Foundations of Computer Science (MFCS 2022) [20]. 22footnote 2Partially supported by National Science Centre (Poland) grant number 2018/31/B/ST6/00820., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}