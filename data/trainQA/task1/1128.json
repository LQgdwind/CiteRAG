{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Generalizing Tensor Decomposition for N-ary Relational Knowledge Bases\n\nPaper Abstract: Abstract. With the rapid development of knowledge bases (KBs), link prediction task, which completes KBs with missing facts, has been broadly studied in especially binary relational KBs (a.k.a knowledge graph) with powerful tensor decomposition related methods. However, the ubiquitous n-ary relational KBs with higher-arity relational facts are paid less attention, in which existing translation based and neural network based approaches have weak expressiveness and high complexity in modeling various relations. Tensor decomposition has not been considered for n-ary relational KBs, while directly extending tensor decomposition related methods of binary relational KBs to the n-ary case does not yield satisfactory results due to exponential model complexity and their strong assumptions on binary relations. To generalize tensor decomposition for n-ary relational KBs, in this work, we propose GETD, a generalized model based on Tucker decomposition and Tensor Ring decomposition. The existing negative sampling technique is also generalized to the n-ary case for GETD. In addition, we theoretically prove that GETD is fully expressive to completely represent any KBs. Extensive evaluations on two representative n-ary relational KB datasets demonstrate the superior performance of GETD, significantly improving the state-of-the-art methods by over 15%. Moreover, GETD further obtains the state-of-the-art results on the benchmark binary relational KB datasets.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optuna: A Next-generation Hyperparameter Optimization Framework\",\n        \"TuckER: Tensor Factorization for Knowledge Graph Completion\",\n        \"Freebase: A Collaboratively Created Graph Database for Structuring Human Knowledge\",\n        \"A Semantic Matching Energy Function for Learning with Multi-relational Data\",\n        \"Irreflexive and hierarchical relations as translations\",\n        \"Translating Embeddings for Modeling Multi-relational Data\",\n        \"A Relational Model of Data for Large Shared Data Banks\",\n        \"Convolutional 2D Knowledge Graph Embeddings\",\n        \"HighLife: Higher-arity Fact Harvesting\",\n        \"Knowledge Hypergraphs: Extending Knowledge Graphs Beyond Binary Relations\",\n        \"Link Prediction on N-ary Relational Data\",\n        \"From knowledge graph embedding to ontology embedding? An analysis of the compatibility between vector space representations and rules\",\n        \"The Expression of A Tensor or A Polyadic as A Sum of Products\",\n        \"Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift\",\n        \"Knowledge Graph Completion with Adaptive Sparse Transfer Matrix\",\n        \"Fast linear model for knowledge graph embeddings\",\n        \"Simple Embedding for Link Prediction in Knowledge Graphs\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Tensor Decompositions and Applications\",\n        \"Canonical Tensor Decomposition for Knowledge Base Completion\",\n        \"Learning Entity and Relation Embeddings for Knowledge Graph Completion\",\n        \"Barackâ€™s Wife Hillary: Using Knowledge Graphs for Fact-Aware Language Modeling\",\n        \"Neural Network-based Question Answering over Knowledge Graphs on Word and Character Level\",\n        \"A Review of Relational Machine Learning for Knowledge Graphs\",\n        \"A Three-way Model for Collective Learning on Multi-relational Data\",\n        \"Compressing recurrent neural networks with tensor ring for action recognition\",\n        \"Modeling Relational Data with Graph Convolutional Networks\",\n        \"Introducing the knowledge graph: things, not strings\",\n        \"Reasoning with Neural Tensor Networks for Knowledge Base Completion\",\n        \"Dropout: A Simple Way to Prevent Neural Networks from Overfitting\",\n        \"Yago: A Core of Semantic Knowledge\",\n        \"Complex Embeddings for Simple Link Prediction\",\n        \"Some Mathematical Notes on Three-mode Factor Analysis\",\n        \"Wikidata: a free collaborative knowledge base\",\n        \"Knowledge Graph Embedding: A Survey of Approaches and Applications\",\n        \"Wide compression: Tensor ring nets\",\n        \"On Multi-relational Link Prediction with Bilinear Models\",\n        \"Knowledge Graph Embedding by Translating on Hyperplanes\",\n        \"On the Representation and Embedding of Knowledge Bases Beyond Binary Relations\",\n        \"Embedding Entities and Relations for Learning and Inference in Knowledge Bases\",\n        \"Taking Human out of Learning Applications: A Survey on Automated Machine Learning\",\n        \"Collaborative Knowledge Base Embedding for Recommender Systems\",\n        \"Scalable Instance Reconstruction in Knowledge Bases via Relatedness Affiliated Embedding\",\n        \"AutoKGE: Searching Scoring Functions for Knowledge Graph Embedding\",\n        \"NSCaching: simple and efficient negative sampling for knowledge graph embedding\",\n        \"Tensor Ring Decomposition\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Generalizing Tensor Decomposition for N-ary Relational Knowledge Bases, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}