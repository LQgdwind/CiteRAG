{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Top-Down Synthesis for Library Learning\n\nPaper Abstract: Abstract. This paper introduces corpus-guided top-down synthesis as a mechanism for synthesizing library functions that capture common functionality from a corpus of programs in a domain specific language (DSL). The algorithm builds abstractions directly from initial DSL primitives, using syntactic pattern matching of intermediate abstractions to intelligently prune the search space and guide the algorithm towards abstractions that maximally capture shared structures in the corpus. We present an implementation of the approach in a tool called Stitch and evaluate it against the state-of-the-art deductive library learning algorithm from DreamCoder. Our evaluation shows that Stitch is 3-4 orders of magnitude faster and uses 2 orders of magnitude less memory while maintaining comparable or better library quality (as measured by compressivity). We also demonstrate Stitch‚Äôs scalability on corpora containing hundreds of complex programs that are intractable with prior deductive approaches and show empirically that it is robust to terminating the search procedure early‚Äîfurther allowing it to scale to challenging datasets by means of early stopping.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Explicit substitutions\",\n        \"A survey of machine learning for big code and naturalness\",\n        \"Mining idioms from source code\",\n        \"Deepcoder: Learning to write programs\",\n        \"Artifact for Top-Down Synthesis For Library Learning\",\n        \"A transformation system for developing recursive programs\",\n        \"babble: Learning Better Abstractions with E-Graphs and Anti-Unification\",\n        \"Multi-modal synthesis of regular expressions\",\n        \"Execution-guided neural program synthesis\",\n        \"The end of history? Using a proof assistant to replace language design with library design\",\n        \"Dominance breaking constraints\",\n        \"Playgol: Learning programs through play\",\n        \"Lambda calculus notation with nameless dummies, a tool for automatic formula manipulation, with application to the Church-Rosser theorem\",\n        \"Bootstrap learning via modular concept discovery\",\n        \"Higher-Order Unification via Explicit Substitutions\",\n        \"Unification via Explicit Substitutions: The Case of Higher-Order Patterns\",\n        \"Dreamcoder: Growing generalizable, interpretable knowledge with wake-sleep bayesian program learning\",\n        \"Dreamcoder: Bootstrapping inductive program synthesis with wake-sleep library learning\",\n        \"Library learning for neurally-guided bayesian program induction\",\n        \"The Revised Report on the Syntactic Theories of Sequential Control and State\",\n        \"Synthesizing data structure transformations from input-output examples\",\n        \"Synthesizing programs for images using reinforced adversarial learning\",\n        \"Inductive programming meets the real world\",\n        \"A Formal Basis for the Heuristic Determination of Minimum Cost Paths\",\n        \"Cumulative learning in the lambda calculus\",\n        \"A Unification Algorithm for Typed ŒªùúÜ\\\\lambda-Calculus\",\n        \"Inducing probabilistic programs by Bayesian program merging\",\n        \"The Power of Dominance Relations in Branch-and-Bound Algorithms\",\n        \"Learning programmatic idioms for scalable semantic parsing\",\n        \"Lambda Lifting: Treansforming Programs to Recursive Equations\",\n        \"ShapeMOD: macro operation discovery for 3D shape programs\",\n        \"On repair with probabilistic attribute grammars\",\n        \"Frequent Subgraph Discovery\",\n        \"Finding Frequent Patterns in a Large Sparse Graph\",\n        \"An Automatic Method of Solving Discrete Programming Problems\",\n        \"Programming by demonstration using version space algebra\",\n        \"Beyond imitation: Zero-shot task transfer on robots by learning concepts as cognitive programs\",\n        \"Synthesizing regular expressions from examples for introductory automata assignments\",\n        \"Learning programs: A hierarchical Bayesian approach\",\n        \"Bias reformulation for one-shot function induction\",\n        \"A deductive approach to program synthesis\",\n        \"A Logic Programming Language with Lambda-Abstraction, Function Variables, and Simple Unification\",\n        \"Unification under a Mixed Prefix\",\n        \"Network Motifs: Simple Building Blocks of Complex Networks\",\n        \"Version spaces: A candidate elimination approach to rule learning\",\n        \"Branch-and-bound algorithms: A survey of recent advances in searching, branching, and pruning\",\n        \"Representing Partial Programs with Blended Abstract Semantics\",\n        \"Program synthesis from polymorphic refinement types\",\n        \"Flashmeta: A framework for inductive program synthesis\",\n        \"Frequency Concepts and Pattern Detection for the Analysis of Motifs in Networks\",\n        \"Learning Differentiable Programs with Admissible Neural Heuristics\",\n        \"A mathematical theory of communication\",\n        \"Program synthesis and semantic parsing with learned code idioms\",\n        \"Logisch-kombinatorische Untersuchungen √ºber die Erf√ºllbarkeit oder Bewiesbarkeit mathematischer S√§tze nebst einem Theorem √ºber dichte Mengen\",\n        \"Egg: Fast and Extensible Equality Saturation\",\n        \"Leveraging language to learn program abstractions and search heuristics\",\n        \"Identifying concept libraries from language about object structure\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Top-Down Synthesis for Library Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}