{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Large Neighborhood Search Policy for Integer Programming\n\nPaper Abstract: Abstract We propose a deep reinforcement learning (RL) method to learn large neighborhood search (LNS) policy for integer programming (IP). The RL policy is trained as the destroy operator to select a subset of variables at each step, which is reoptimized by an IP solver as the repair operator. However, the combinatorial number of variable subsets prevents direct application of typical RL algorithms. To tackle this challenge, we represent all subsets by factorizing them into binary decisions on each variable. We then design a neural network to learn policies for each variable in parallel, trained by a customized actor-critic algorithm. We evaluate the proposed method on four representative IP problems. Results show that it can find better solutions than SCIP in much less time, and significantly outperform other LNS baselines with the same runtime. Moreover, these advantages notably persist when the policies generalize to larger problems. Further experiments with Gurobi also reveal that our method can outperform this state-of-the-art commercial solver within the same time limit.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Applications of combinatorial optimization\",\n        \"Combinatorial optimization: algorithms and complexity\",\n        \"Machine learning for combinatorial optimization: a methodological tour dâ€™horizon\",\n        \"Pointer networks\",\n        \"Neural combinatorial optimization with reinforcement learning\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Attention, learn to solve routing problems!\",\n        \"Multi-decoder attention model with embedding glimpse for solving vehicle routing problems\",\n        \"Deep reinforcement learning for solving the heterogeneous capacitated vehicle routing problem\",\n        \"Heterogeneous attentions for solving pickup and delivery problem via deep reinforcement learning\",\n        \"Learning to dispatch for job shop scheduling via deep reinforcement learning\",\n        \"Learning to perform local rewriting for combinatorial optimization\",\n        \"Learning improvement heuristics for solving routing problems\",\n        \"A learning-based iterative method for solving vehicle routing problems\",\n        \"Neural large neighborhood search for the capacitated vehicle routing problem\",\n        \"Learn to design the heuristics for vehicle routing problem\",\n        \"An automatic method for solving discrete programming problems\",\n        \"Learning to search in branch and bound algorithms\",\n        \"Learning to run heuristics in tree search\",\n        \"Exact combinatorial optimization with graph convolutional neural networks\",\n        \"A general large neighborhood search framework for solving integer linear programs\",\n        \"Reinforcement learning for integer programming: Learning to cut\",\n        \"Accelerating primal solution findings for mixed integer programs based on solution prediction\",\n        \"Solving mixed integer programs using neural networks\",\n        \"Generalized value functions for large action sets\",\n        \"Action branching architectures for deep reinforcement learning\",\n        \"Deep reinforcement learning in large discrete action spaces\",\n        \"Learning action representations for reinforcement learning\",\n        \"Discretizing continuous action space for on-policy optimization\",\n        \"Learning and planning in complex action spaces\",\n        \"Learning dexterous in-hand manipulation\",\n        \"Large neighborhood search\",\n        \"An adaptive large neighborhood search heuristic for the pickup and delivery problem with time windows\",\n        \"A branch-and-price-based large neighborhood search algorithm for the vehicle routing problem with time windows\",\n        \"Independent reinforcement learners in cooperative markov games: a survey regarding coordination problems\",\n        \"Relational inductive biases, deep learning, and graph networks\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"Graph convolutional networks for text classification\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Set covering algorithms using cutting planes, heuristics, and subgradient optimization: a computational study\",\n        \"Decision diagrams for optimization\",\n        \"Towards a universal test suite for combinatorial auction algorithms\",\n        \"Statistical mechanics of complex networks\",\n        \"Scip: solving constraint integer programs\",\n        \"Gurobi optimizer reference manual\",\n        \"MIPLIB 2017: Data-Driven Compilation of the 6th Mixed-Integer Programming Library\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Learning Large Neighborhood Search Policy for Integer Programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}