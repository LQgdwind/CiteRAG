{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Comparison and Benchmarking of AI Models and Frameworks on Mobile Devices\n\nPaper Abstract: Abstract Due to increasing amounts of data and compute resources, deep learning achieves many successes in various domains. The application of deep learning on the mobile and embedded devices is taken more and more attentions, benchmarking and ranking the AI abilities of mobile and embedded devices becomes an urgent problem to be solved. Considering the model diversity and framework diversity, we propose a benchmark suite, AIoTBench, which focuses on the evaluation of the inference abilities of mobile and embedded devices. AIoTBench covers three typical heavy-weight networks: ResNet50, InceptionV3, DenseNet121, as well as three light-weight networks: SqueezeNet, MobileNetV2, MnasNet. Each network is implemented by three frameworks which are designed for mobile and embedded devices: Tensorflow Lite, Caffe2, Pytorch Mobile. To compare and rank the AI capabilities of the devices, we propose two unified metrics as the AI scores: Valid Images Per Second (VIPS) and Valid FLOPs Per Second (VOPS). Currently, we have compared and ranked 5 mobile devices using our benchmark. This list will be extended and updated soon after.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The report of the development of chinese ai computing power in 2019-2020\",\n        \"Tensorflow lite\",\n        \"Caffe2\",\n        \"Pytorch mobile\",\n        \"Mlperf inference benchmark\",\n        \"Ai benchmark: Running deep neural networks on android smartphones\",\n        \"Ai benchmark: All about deep learning on smartphones in 2019\",\n        \"Deep residual learning for image recognition\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Densely connected convolutional networks\",\n        \"Squeezenet: Alexnet-level accuracy with 50x fewer parameters andÂ¡ 0.5 mb model size\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Benchmark analysis of representative deep neural network architectures\",\n        \"Benchmarking state-of-the-art deep learning software tools\",\n        \"Aiot bench: Towards comprehensive benchmarking mobile and embedded device intelligence\",\n        \"Fathom: Reference workloads for modern deep learning methods\",\n        \"Dawnbench: An end-to-end deep learning benchmark and competition\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Microsoft coco: Common objects in context\",\n        \"The 29th ieee conference on computer vision and pattern recognition (cvpr 2016)\",\n        \"Identity mappings in deep residual networks\",\n        \"Aggregated residual transformations for deep neural networks\",\n        \"Going deeper with convolutions\",\n        \"Inception-v4, inception-resnet and the impact of residual connections on learning\",\n        \"The 30th ieee conference on computer vision and pattern recognition (cvpr 2017)\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Searching for mobilenetv3\",\n        \"Rigid-motion scattering for texture classification\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\",\n        \"Shufflenet v2: Practical guidelines for efficient cnn architecture design\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Designing neural network architectures using reinforcement learning\",\n        \"Progressive neural architecture search\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"Squeeze-and-excitation networks\",\n        \"Tensorflow\",\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Caffe: Convolutional architecture for fast feature embedding\",\n        \"Pytorch\",\n        \"Keras applications\",\n        \"Caffe2 model zoo\",\n        \"Torchvision\",\n        \"Caffe-model\",\n        \"Nnapi\",\n        \"On-device neural net inference with mobile gpus\",\n        \"Flatbuffers\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Comparison and Benchmarking of AI Models and Frameworks on Mobile Devices, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}