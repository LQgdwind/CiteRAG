{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast Nearest Neighbor Machine Translation\n\nPaper Abstract: Abstract Though nearest neighbor Machine Translation (kùëòkNN-MT) (Khandelwal et al., 2020) has proved to introduce significant performance boosts over standard neural MT systems, it is prohibitively slow since it uses the entire reference corpus as the datastore for the nearest neighbor search. This means each step for each beam in the beam search has to search over the entire reference corpus. kùëòkNN-MT is thus two-orders slower than vanilla MT models, making it hard to be applied to real-world applications, especially online services. In this work, we propose Fast kùëòkNN-MT to address this issue. Fast kùëòkNN-MT constructs a significantly smaller datastore for the nearest neighbor search: for each word in a source sentence, Fast kùëòkNN-MT first selects its nearest token-level neighbors, which is limited to tokens that are the same as the query token. Then at each decoding step, in contrast to using the entire corpus as the datastore, the search space is limited to target tokens corresponding to the previously selected reference source tokens. This strategy avoids search through the whole datastore for nearest neighbors and drastically improves decoding efficiency. Without loss of performance, Fast kùëòkNN-MT is two-orders faster than kùëòkNN-MT, and is only two times slower than the standard NMT model. Fast kùëòkNN-MT enables the practical use of kùëòkNN-MT systems in real-world MT applications. 111The code is available at https://github.com/ShannonAI/fast-knn-nmt\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Unsupervised domain clusters in pretrained language models\",\n        \"Massively multilingual neural machine translation\",\n        \"Massively multilingual neural machine translation in the wild: Findings and challenges\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Non-parametric adaptation for neural machine translation\",\n        \"The mathematics of statistical machine translation: Parameter estimation\",\n        \"Neural fuzzy repair: Integrating fuzzy matches into neural machine translation\",\n        \"Encoding gated translation memory into neural machine translation\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"A simple, fast, and effective reparameterization of ibm model 2\",\n        \"Augmenting transformers with knn-based composite memory for dialogue\",\n        \"Multi-domain neural machine translation through unsupervised adaptation\",\n        \"Convolutional sequence to sequence learning\",\n        \"Search engine guided neural machine translation\",\n        \"Incorporating bert into parallel sequence decoding with adapters\",\n        \"Realm: Retrieval-augmented language model pre-training\",\n        \"Product quantization for nearest neighbor search\",\n        \"Boosting neural machine translation with similar translations\",\n        \"Billion-scale similarity search with gpus\",\n        \"Deep encoder, shallow decoder: Reevaluating the speed-quality tradeoff in machine translation\",\n        \"Finetuning pretrained transformers into rnns\",\n        \"Nearest neighbor machine translation\",\n        \"Generalization through memorization: Nearest neighbor language models\",\n        \"Six challenges for neural machine translation\",\n        \"Pre-training via paraphrasing\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Retrieval-augmented generation for knowledge-intensive nlp tasks\",\n        \"Mutual information and diverse decoding improve neural machine translation\",\n        \"One sentence one model for neural machine translation\",\n        \"Sac: Accelerating and structuring self-attention via sparse adaptive connection\",\n        \"Time-aware large kernel convolutions\",\n        \"Understanding the difficulty of training transformers\",\n        \"Multilingual denoising pre-training for neural machine translation\",\n        \"Effective approaches to attention-based neural machine translation\",\n        \"Large-scale pretraining for neural machine translation with tens of billions of sentence pairs\",\n        \"Facebook fair‚Äôs wmt19 news translation task submission\",\n        \"Transformers without tears: Improving the normalization of self-attention\",\n        \"A systematic comparison of various statistical alignment models\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"Random feature attention\",\n        \"A call for clarity in reporting BLEU scores\",\n        \"Sequence to sequence learning with neural networks\",\n        \"Synthesizer: Rethinking self-attention in transformer models\",\n        \"Efficient retrieval augmented generation from unstructured knowledge for task-oriented dialog\",\n        \"Learning to remember translation history with a continuous cache\",\n        \"Attention is all you need\",\n        \"Learning deep transformer models for machine translation\",\n        \"Retrieve and refine: Improved sequence generation models for dialogue\",\n        \"Approximate nearest neighbor negative contrastive learning for dense text retrieval\",\n        \"On layer normalization in the transformer architecture\",\n        \"Guiding neural machine translation with retrieved translation pieces\",\n        \"Incorporating bert into neural machine translation\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Fast Nearest Neighbor Machine Translation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}