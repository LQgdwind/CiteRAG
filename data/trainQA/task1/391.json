{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Implementing a GPU-based parallel MAX-MIN Ant System\n\nPaper Abstract: Abstract The MAX-MIN Ant System (MMAS) is one of the best-known Ant Colony Optimization (ACO) algorithms proven to be efficient at finding satisfactory solutions to many difficult combinatorial optimization problems. The slow-down in Moore’s law, and the availability of graphics processing units (GPUs) capable of conducting general-purpose computations at high speed, has sparked considerable research efforts into the development of GPU-based ACO implementations. In this paper, we discuss a range of novel ideas for improving the GPU-based parallel MMAS implementation, allowing it to better utilize the computing power offered by two subsequent Nvidia GPU architectures. Specifically, based on the weighted reservoir sampling algorithm we propose a novel parallel implementation of the node selection procedure, which is at the heart of the MMAS and other ACO algorithms. We also present a memory-efficient implementation of another key-component – the tabu list structure – which is used in the ACO’s solution construction stage. The proposed implementations, combined with the existing approaches, lead to a total of six MMAS variants, which are evaluated on a set of Traveling Salesman Problem (TSP) instances ranging from 198 to 3,795 cities. The results show that our MMAS implementation is competitive with state-of-the-art GPU-based and multi-core CPU-based parallel ACO implementations: in fact, the times obtained for the Nvidia V100 Volta GPU were up to 7.18x and 21.79x smaller, respectively. The fastest of the proposed MMAS variants is able to generate over 1 million candidate solutions per second when solving a 1,002-city instance. Moreover, we show that, combined with the 2-opt local search heuristic, the proposed parallel MMAS finds high-quality solutions for the TSP instances with up to 18,512 nodes.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"CUDA C Programming Guide\",\n        \"The Traveling Salesman Problem: A Computational Study\",\n        \"MAX-MIN ant system on GPU with CUDA\",\n        \"Fast algorithms for geometric traveling salesman problems\",\n        \"Comparing gpu-parallelized metaheuristics to branch-and-bound for batch plants optimization\",\n        \"Strategies for accelerating ant colony optimization algorithms on graphical processing units\",\n        \"Enhancing data parallelism for ant colony optimization on gpus\",\n        \"High-throughput ant colony optimization on graphics processing units\",\n        \"An artificial bee colony algorithm with a modified choice function for the traveling salesman problem\",\n        \"Ant colony system with communication strategies\",\n        \"Candidate set parallelization strategies for ant colony optimization on the GPU\",\n        \"Improving ant colony optimization performance on the GPU using CUDA\",\n        \"A hybrid memetic-ant colony optimization algorithm for the home health care problem with time window, synchronization and working time balancing\",\n        \"Parallel ant colony optimization on graphics processing units\",\n        \"Ant colony optimization\",\n        \"Ant system: optimization by a colony of cooperating agents\",\n        \"Weighted random sampling with a reservoir\",\n        \"Fundamentals of Computational Swarm Intelligence\",\n        \"General k-opt submoves for the lin-kernighan TSP heuristic\",\n        \"Nonparametric statistical methods, Third Edition\",\n        \"Effective heuristics for ant colony optimization to handle large-scale problems\",\n        \"Integrated production and transportation on parallel batch machines to minimize total weighted delivery time\",\n        \"Dissecting the NVIDIA volta GPU architecture via microbenchmarking\",\n        \"An efficient ant colony optimization algorithm for the blocks relocation problem\",\n        \"Swarm intelligence\",\n        \"Programming Massively Parallel Processors - A Hands-on Approach\",\n        \"Analysis of independent roulette selection in parallel ant colony optimization\",\n        \"Ant colony optimization: A component-wise overview\",\n        \"A parallel bees algorithm implementation on GPU\",\n        \"Parallel ant colony optimization for the traveling salesman problem\",\n        \"Evaluation of parallel particle swarm optimization algorithms within the cuda™ architecture\",\n        \"NVIDIA Tesla V100 GPU Architecture\",\n        \"A survey on parallel ant colony optimization\",\n        \"A parallel implementation of ant colony optimization\",\n        \"TSPLIB - A traveling salesman problem library\",\n        \"A CPU-GPU parallel ant colony optimization solver for the vehicle routing problem\",\n        \"Analysis of a high-performance TSP solver on the GPU\",\n        \"High performance GPU accelerated local optimization in TSP\",\n        \"The GPU-based parallel Ant Colony System\",\n        \"An improved ant colony system for the sequential ordering problem\",\n        \"Solving the uncapacitated traveling purchaser problem with the MAX-MIN ant system\",\n        \"TOP500 Supercomputer Site\",\n        \"MAX-MIN ant system\",\n        \"Parallel ant colonies for the quadratic assignment problem\",\n        \"A survey on gpu-based implementation of swarm intelligence algorithms\",\n        \"The decline of computers as a general purpose technology: Why deep learning and the end of moore’s law are fragmenting computing\",\n        \"An efficient GPU implementation of ant colony optimization for the traveling salesman problem\",\n        \"A parallel framework for multi-population cultural algorithm and its applications in TSP\",\n        \"A massively parallel neural network approach to large-scale euclidean traveling salesman problems\",\n        \"Implementation of Ant Colony Algorithm Based on GPU\",\n        \"A GPU-based parallel MAX-MIN Ant System algorithm with grouped roulette wheel selection\",\n        \"Optimization of parallel iterated local search algorithms on graphics processing unit\",\n        \"Parallel ant colony optimization on multi-core SIMD cpus\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Implementing a GPU-based parallel MAX-MIN Ant System, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}