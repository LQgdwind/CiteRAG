{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CRAC: Checkpoint-Restart Architecture for CUDA with Streams and UVM\n\nPaper Abstract: Abstract The share of the top 500 supercomputers with NVIDIA GPUs is now over 25% and continues to grow. While fault tolerance is a critical issue for supercomputing, there does not currently exist an efficient, scalable solution for CUDA applications on NVIDIA GPUs. CRAC (Checkpoint-Restart Architecture for CUDA) is a new checkpoint-restart solution for fault tolerance that supports the full range of CUDA applications. CRAC combines: low runtime overhead (approximately 1% or less); fast checkpoint-restart; support for scalable CUDA streams (for efficient usage of all of the thousands of GPU cores); and support for the full features of Unified Virtual Memory (eliminating the programmer’s burden of migrating memory between device and host). CRAC achieves its flexible architecture by segregating application code (checkpointed) and its external GPU communication via non-reentrant CUDA libraries (not checkpointed) within a single process’s memory. This eliminates the high overhead of inter-process communication in earlier approaches, and has fewer limitations.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TOP500 supercomputer sites\",\n        \"DMTCP: Transparent checkpointing for cluster computations and the desktop\",\n        \"Berkeley Lab Checkpoint/Restart (BLCR) for Linux clusters\",\n        \"CRIU\",\n        \"Monetary cost-aware checkpointing and migration on Amazon cloud spot instances\",\n        \"A large-scale study of soft-errors on GPUs in the field\",\n        \"Memory errors in modern systems: The good, the bad, and the ugly\",\n        \"Reliability lessons learned from GPU experience with the Titan supercomputer at Oak Ridge Leadership Computing Facility\",\n        \"Understanding GPU errors on large-scale HPC systems and the implications for system design and operation\",\n        \"vCUDA: GPU-accelerated high performance computing in virtual machines\",\n        \"GViM: GPU-accelerated virtual machines\",\n        \"CheCUDA: A checkpoint/restart tool for CUDA applications\",\n        \"Transparent low-overhead checkpoint for GPU-accelerated clusters\",\n        \"NVCR: A transparent checkpoint-restart library for NVIDIA CUDA\",\n        \"Transparent checkpoint and restart technology for CUDA applications\",\n        \"CRUM: Checkpoint-restart support for CUDA’s unified memory\",\n        \"CRCUDA source\",\n        \"Peer-to-peer & Unified Virtual Addressing\",\n        \"Unified memory in CUDA 6\",\n        \"Design and implementation for checkpointing of distributed resources using process-level virtualization\",\n        \"System-level scalable checkpoint-restart for petascale computing\",\n        \"MANA for MPI: MPI-agnostic network-agnostic transparent checkpointing\",\n        \"Process-in-process: Techniques for practical address-space sharing\",\n        \"[PATCH v9 00/17] Enable FSGSBASE instructions\",\n        \"A possible end to the FSGSBASE saga\",\n        \"[PATCH v13 00/16] Enable FSGSBASE instructions\",\n        \"dmtcp/dmtcp\",\n        \"Rodinia: A benchmark suite for heterogeneous computing\",\n        \"CUDA samples\",\n        \"Lulesh 2.0 updates and changes\",\n        \"HYPRE: Scalable linear solvers and multigrid methods\",\n        \"HPGMG: High-Performance Geometric Multigrid\",\n        \"Rodinia: Accelerating compute-intensive applications with accelerators\",\n        \"CUDA C programming guide\",\n        \"High-Performance Geometric multigrid, an HPC benchmark and supercomputing ranking metric\",\n        \"An updated set of basic linear algebra subprograms (BLAS)\",\n        \"Benefits of cross memory attach for MPI libraries on HPC clusters\",\n        \"Unified memory on Pascal and Volta\",\n        \"Process Hijacking\",\n        \"Comprehensively and Efficiently Protecting the Heap\",\n        \"CheCL: Transparent checkpointing and process migration of OpenCL applications\",\n        \"OpenCL: A parallel programming standard for heterogeneous computing systems\",\n        \"On the scalability, performance isolation and device driver transparency of the IHK/McKernel hybrid lightweight kernel\",\n        \"Recovering device drivers\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in CRAC: Checkpoint-Restart Architecture for CUDA with Streams and UVM, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}