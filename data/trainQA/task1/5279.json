{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Memory Partitioning in Software Defined Hardware\n\nPaper Abstract: Abstract. As programmers turn to software-defined hardware (SDH) to maintain a high level of productivity while programming hardware to run complex algorithms, heavy-lifting must be done by the compiler to automatically partition on-chip arrays. In this paper, we introduce an automatic memory partitioning system that can quickly compute more efficient partitioning schemes than prior systems. Our system employs a variety of resource-saving optimizations and an ML cost model to select the best partitioning scheme from an array of candidates. We compared our system against various state-of-the-art SDH compilers and FPGAs on a variety of benchmarks and found that our system generates solutions that, on average, consume 40.3% fewer logic resources, 78.3% fewer FFs, 54.9% fewer Block RAMs (BRAMs), and 100% fewer DSPs.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Vivado High-Level Synthesis\",\n        \"Intel FPGA SDK for OpenCL\",\n        \"SDAccel Documentation\",\n        \"Accelerating CNN inference on FPGAs: A Survey\",\n        \"The polyhedral model is more widely applicable than you think\",\n        \"Automatic Storage Optimization for Arrays\",\n        \"Have abstraction and eat performance, too: Optimized heterogeneous computing with parallel patterns\",\n        \"Field-programmable gate arrays and quantum Monte Carlo: Power efficient coprocessing for scalable high-performance computing\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"Improving Multibank Memory Access Parallelism with Lattice-Based Partitioning\",\n        \"Automatic Memory Partitioning and Scheduling for Throughput and Power Optimization\",\n        \"Extended Lattice-based Memory Allocation\",\n        \"Lattice-based memory allocation\",\n        \"Understanding and optimizing asynchronous low-precision stochastic gradient descent\",\n        \"Type-Directed Scheduling of Streaming Accelerators\",\n        \"Dataflow analysis of array and scalar references\",\n        \"Some efficient solutions to the affine scheduling problem. I. One-dimensional time\",\n        \"Some efficient solutions to the affine scheduling problem. Part II. Multidimensional time\",\n        \"Communication-free hyperplane partitioning of nested loops\",\n        \"Exploration of OpenCL for FPGAs using SDAccel and comparison to GPUs and multicore CPUs\",\n        \"The organization of computations for uniform recurrence equations\",\n        \"A study of data partitioning on OpenCL-based FPGAs\",\n        \"Spatial: A Language and Compiler for Application Accelerators\",\n        \"Automatic Generation of Efficient Accelerators for Reconfigurable Hardware\",\n        \"Optimizing storage size for static control programs in automatic parallelizers\",\n        \"Automatic storage management for parallel programs\",\n        \"Hyperplane partitioning: an approach to global data partitioning for distributed memory machines\",\n        \"Programming Heterogeneous Systems from an Image Processing DSL\",\n        \"Optimizing Memory Usage in the Polyhedral Model\",\n        \"The mapping of linear recurrence equations on regular arrays\",\n        \"Synthesis, optimization and verification of systolic architectures\",\n        \"Synthesizing systolic arrays with control signals from recurrence equations\",\n        \"On synthesizing systolic arrays from recurrence equations with linear dependencies\",\n        \"Compile-time techniques for data distribution in distributed memory machines\",\n        \"MachSuite: Benchmarks for accelerator design and customized architectures\",\n        \"Dnnweaver: From high-level deep network models to fpga acceleration\",\n        \"A Practical Decision Procedure for Arithmetic with Function Symbols\",\n        \"RIPL: A Parallel Image Processing Language for FPGAs\",\n        \"Darwin: A Hardware-acceleration Framework for Genomic Sequence Alignment\",\n        \"isl: An integer set library for the polyhedral model\",\n        \"SODA: Software Defined FPGA Based Accelerators for Big Data\",\n        \"Theory and Algorithm for Generalized Memory Partitioning in High-level Synthesis\",\n        \"Memory Partitioning for Multidimensional Arrays in High-level Synthesis\",\n        \"Memory reuse analysis in the polyhedral model\",\n        \"merlin-compiler\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Efficient Memory Partitioning in Software Defined Hardware, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}