{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Compositional Generalization via Neural-Symbolic Stack Machines\n\nPaper Abstract: Abstract Despite achieving tremendous success, existing deep learning models have exposed limitations in compositional generalization, the capability to learn compositional rules and apply them to unseen cases in a systematic manner. To tackle this issue, we propose the Neural-Symbolic Stack Machine (NeSS). It contains a neural network to generate traces, which are then executed by a symbolic stack machine enhanced with sequence manipulation operations. NeSS combines the expressive power of neural sequence models with the recursion supported by the symbolic stack machine. Without training supervision on execution traces, NeSS achieves 100%percent100100\\% generalization performance in four domains: the SCAN benchmark of language-driven navigation tasks, the task of few-shot learning of compositional instructions, the compositional machine translation benchmark, and context-free grammar parsing tasks.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Good-enough compositional data augmentation\",\n        \"Learning regular sets from queries and counterexamples\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Closure: Assessing systematic generalization of clevr models\",\n        \"An all-subtrees approach to unsupervised parsing\",\n        \"Making neural programming architectures generalize via recursion\",\n        \"Automatically composing representation transformations as a means for generalization\",\n        \"Towards synthesizing complex programs from input-output examples\",\n        \"Syntactic structures\",\n        \"Span-based constituency parsing with a structure-label system and provably optimal dynamic oracles\",\n        \"Grammatical inference: learning automata and grammars\",\n        \"Cnns found to jump around more skillfully than rnns: Compositional generalization in seq2seq convolutional networks\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Neural logic machines\",\n        \"Language to logical form with neural attention\",\n        \"Permutation equivariant models for compositional generalization in language\",\n        \"Neural turing machines\",\n        \"Learning to transduce with unbounded memory\",\n        \"Long short-term memory\",\n        \"Compositional attention networks for machine reasoning\",\n        \"Clevr: A diagnostic dataset for compositional language and elementary visual reasoning\",\n        \"Inferring algorithmic patterns with stack-augmented recurrent nets\",\n        \"Neural gpus learn algorithms\",\n        \"Measuring compositional generalization: A comprehensive method on realistic data\",\n        \"Neural random-access machines\",\n        \"Generalization without systematicity: On the compositional skills of sequence-to-sequence recurrent networks\",\n        \"Compositional generalization through meta sequence-to-sequence learning\",\n        \"Human few-shot learning of compositional instructions\",\n        \"Building machines that learn and think like people\",\n        \"Compositional generalization for primitive substitutions\",\n        \"Shift-reduce constituent parsing with neural lookahead features\",\n        \"Rearranging the familiar: Testing compositional generalization in recurrent networks\",\n        \"Neurally-guided structure inference\",\n        \"The neuro-symbolic concept learner: Interpreting scenes, words, and sentences from natural supervision\",\n        \"Neural shift-reduce ccg semantic parsing\",\n        \"Universal grammar\",\n        \"Compositional generalization in image captioning\",\n        \"Learning compositional rules via neural program synthesis\",\n        \"Learning compositional neural programs with recursive tree search and planning\",\n        \"Neural programmer-interpreters\",\n        \"A benchmark for systematic generalization in grounded language understanding\",\n        \"Compositional generalization in a deep seq2seq model by separating syntax and semantics\",\n        \"The syntactic process, volume 24\",\n        \"Attention is all you need\",\n        \"Probabilistic neural symbolic models for interpretable visual question answering\",\n        \"Pointer networks\",\n        \"Grammar as a foreign language\",\n        \"Sequence-to-sequence learning as beam-search optimization\",\n        \"Improving the universality and learnability of neural programmer-interpreters with combinator abstraction\",\n        \"Neural-symbolic vqa: Disentangling reasoning from vision and language understanding\",\n        \"Learning simple algorithms from examples\",\n        \"Reinforcement learning neural turing machines-revised\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Compositional Generalization via Neural-Symbolic Stack Machines, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}