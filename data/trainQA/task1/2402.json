{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast Parallel Newton-Raphson Power Flow Solver for Large Number of System Calculations with CPU and GPU\n\nPaper Abstract: Abstract To analyze large sets of grid states, e.g. when evaluating the impact from the uncertainties of the renewable generation with probabilistic Monte Carlo simulation or in stationary time series simulation, large number of power flow calculations have to be performed. For the application in real-time grid operation, grid planning and in further cases when computational time is critical, a novel approach on simultaneous parallelization of many Newton-Raphson power flow calculations on CPU and with GPU-acceleration is proposed. The result shows a speed-up of over x100 comparing to the open-source tool pandapower, when performing repetitive power flows of system with admittance matrix of the same sparsity pattern on both CPU and GPU. The speed-up relies on the algorithm improvement and highly optimized parallelization strategy, which can reduce the repetitive work and saturate the high hardware computational capability of modern CPUs and GPUs well. This is achieved with the proposed batched sparse matrix operation and batched linear solver based on LU-refactorization. The batched linear solver shows a large performance improvement comparing to the state-of-the-art linear system solver KLU library and a better saturation of the GPU performance with small problem scale. Finally, the method of integrating the proposed solver into pandapower is presented, thus the parallel power flow solver with outstanding performance can be easily applied in challenging real-life grid operation and innovative researches e.g. data-driven machine learning studies.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Probabilistic load flow evaluation with hybrid latin hypercube sampling and cholesky decomposition\",\n        \"Probabilistic load-flow computation using point estimate method\",\n        \"Probabilistic load flow with correlated wind power injections\",\n        \"Contingency analysis of power systems with artificial neural networks\",\n        \"Bayesian state estimation for unobservable distribution systems via deep learning\",\n        \"Data-driven power flow linearization: A regression approach\",\n        \"Distribution system monitoring for smart power grids with distributed generation using artificial neural networks\",\n        \"Matpower: Steady-state operations, planning, and analysis tools for power systems research and education\",\n        \"Pandapower—an open-source python tool for convenient modeling, analysis, and optimization of electric power systems\",\n        \"Simultaneous parallel power flow calculations using hybrid cpu-gpu approach\",\n        \"Performance comparisons of parallel power flow solvers on gpu system\",\n        \"Full parallel power flow solution: A gpu-cpu-based vectorization parallelization and sparse techniques for newton–raphson implementation\",\n        \"Gpu-based fast decoupled power flow with preconditioned iterative solver and inexact newton method\",\n        \"Parallel power flow on graphics processing units for concurrent evaluation of many networks\",\n        \"Gpu-accelerated batch-acpf solution for n-1 static security analysis\",\n        \"Gpu-accelerated algorithm for online probabilistic power flow\",\n        \"Gpu-opencl accelerated probabilistic power flow analysis using monte-carlo simulation\",\n        \"Opencl-accelerated probabilistic power flow for active distribution networks\",\n        \"Real-time contingency analysis on massively parallel architectures with compensation method\",\n        \"Gpu-based batch lu-factorization solver for concurrent analysis of massive power flows\",\n        \"Fast batched solution for real-time optimal power flow with penetration of renewable energy\",\n        \"The microarchitecture of intel, amd and via cpus: An optimization guide for assembly programmers and compiler maker\",\n        \"Algorithm 907: Klu, a direct sparse solver for circuit simulation problems\",\n        \"Gpu-accelerated sparse lu factorization for circuit simulation with performance modeling\",\n        \"Using avx2 instruction set to increase performance of high performance computing code\",\n        \"Vectorization: Performance with quantifi\",\n        \"Gpu computing\",\n        \"Cuda c++ programming guide\",\n        \"Openmp: an industry standard api for shared-memory programming\",\n        \"Simultaneous multithreading: Maximizing on-chip parallelism\",\n        \"Openmp application program interface: Version 4.0\",\n        \"A quantitative performance analysis model for gpu architectures\",\n        \"Understanding latency hiding on gpus\",\n        \"Cuda c++ best practices guide\",\n        \"Power system analysis\",\n        \"Cython: The best of both worlds\",\n        \"Data structures for statistical computing in python\",\n        \"Array programming with numpy\",\n        \"An efficient open-source implementation to compute the jacobian matrix for the newton-raphson power flow algorithm\",\n        \"An overview of superlu\",\n        \"Glu3.0: Fast gpu-based parallel sparse lu factorization for circuit simulation\",\n        \"A comparative analysis of lu decomposition methods for power system simulations\",\n        \"Algorithm 837: Amd, an approximate minimum degree ordering algorithm\",\n        \"Multiphase load-flow solution for large-scale distribution systems using mana\",\n        \"Sparse partial pivoting in time proportional to arithmetic operations: Tr 86-783\",\n        \"Nicslu: An adaptive sparse matrix solver for parallel circuit simulation\",\n        \"Parallel sparse matrix solution for circuit simulation on fpgas\",\n        \"Simbench—a benchmark dataset of electric power systems to compare innovative solutions based on power flow analysis\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Fast Parallel Newton-Raphson Power Flow Solver for Large Number of System Calculations with CPU and GPU, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}