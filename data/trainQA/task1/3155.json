{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Finding Geometric Representations of Apex Graphs is NP-Hard\n\nPaper Abstract: Abstract Planar graphs can be represented as intersection graphs of different types of geometric objects in the plane, e.g., circles (Koebe, 1936), line segments (Chalopin & Gon√ßalves, 2009), L-shapes (Gon√ßalves et al., 2018). For general graphs, however, even deciding whether such representations exist is often \\NP\\NP\\NP-hard. We consider apex graphs, i.e., graphs that can be made planar by removing one vertex from them. We show, somewhat surprisingly, that deciding whether geometric representations exist for apex graphs is \\NP\\NP\\NP-hard. More precisely, we show that for every positive integer kùëòk, recognizing every graph class ùí¢ùí¢\\mathcal{G} which satisfies Pure-2-Dir‚äÜùí¢‚äÜ1-StringPure-2-Dirùí¢1-String\\textup{{Pure-2-Dir}}\\subseteq\\mathcal{G}\\subseteq\\textup{{1-String}} is \\NP\\NP\\NP-hard, even when the input graphs are apex graphs of girth at least kùëòk. Here, Pure-2-Dir is the class of intersection graphs of axis-parallel line segments (where intersections are allowed only between horizontal and vertical segments) and 1-String is the class of intersection graphs of simple curves (where two curves share at most one point) in the plane. This partially answers an open question raised by Kratochv√≠l & Pergel (2007). Most known \\NP\\NP\\NP-hardness reductions for these problems are from variants of 3-SAT. We reduce from the Planar Hamiltonian Path Completion problem, which uses the more intuitive notion of planarity. As a result, our proof is much simpler and encapsulates several classes of geometric graphs. Keywords: Planar graphs, apex graphs, NP-hard, Hamiltonian path completion, recognition problems, geometric intersection graphs, 1-STRING, PURE-2-DIR.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Simple k-planar graphs are simple (k+ 1)-quasiplanar\",\n        \"Characterizations of deque and queue graphs\",\n        \"The solution of the four-color-map problem\",\n        \"On convex polyhedra in lobacevskii spaces\",\n        \"Label placement by maximum independent set in rectangles\",\n        \"On the size of outer-string representations\",\n        \"Boxicity of series-parallel graphs\",\n        \"On the topology of the genetic fine structure\",\n        \"Testing for the consecutive ones property, interval graphs, and graph planarity using pq-tree algorithms\",\n        \"Every planar graph is the intersection graph of segments in the plane\",\n        \"Planar graphs have 1-string representations\",\n        \"Algorithmic aspects of intersection representations\",\n        \"Refining the hierarchies of classes of geometric intersection graphs\",\n        \"Bend-bounded path intersection graphs: Sausages, noodles, and waffles on a grill\",\n        \"Diogenes: A methodology for designing fault-tolerant VLSI processor arrays\",\n        \"A graph layout problem with applications to VLSI design\",\n        \"Triangle-free planar graphs as segments intersection graphs\",\n        \"Parameterized complexity\",\n        \"Contact representations of planar graphs with cubes\",\n        \"Computing planar intertwines\",\n        \"Planar graphs as L-intersection or L-contact graphs\",\n        \"Combinatorial Algorithms: 31st International Workshop, IWOCA 2020, Bordeaux, France, June 8-10, 2020, Proceedings, volume 12126\",\n        \"Homothetic triangle representations of planar graphs\",\n        \"3-colorable planar graphs have an intersection segment representation using 3 slopes\",\n        \"Not all planar graphs are in pure-4-dir\",\n        \"Finding a maximum cut of a planar graph in polynomial time\",\n        \"On grid intersection graphs\",\n        \"Linear time algorithm for isomorphism of planar graphs (preliminary report)\",\n        \"NP-hardness results for intersection graphs\",\n        \"Kontaktprobleme der konformen Abbildung\",\n        \"Geometric intersection graphs: do short cycles help?\",\n        \"String graphs. II. recognizing string graphs is NP-hard\",\n        \"A special planar satisfiability problem and a consequence of its NP-completeness\",\n        \"Ad hoc networks beyond unit disk graphs\",\n        \"A separator theorem for planar graphs\",\n        \"On bounding the chromatic number of L-graphs\",\n        \"On unit grid intersection graphs and several other intersection graph classes\",\n        \"Invitation to fixed-parameter algorithms\",\n        \"Graph minors. xx. wagner‚Äôs conjecture\",\n        \"Intersection classes and multiple intersection parameters of graphs\",\n        \"Crossing numbers of graphs\",\n        \"Algorithms for VLSI Physical Design Automation\",\n        \"Topology of thin film rc circuits\",\n        \"Recognizing string graphs in NP\",\n        \"Planar 3-colorability is polynomial complete\",\n        \"Fast partitioning l-apex graphs with applications to approximating maximum induced-subgraph problems\",\n        \"Interval representations of planar graphs\",\n        \"Hyperbolic geometry and 3-manifolds\",\n        \"How to draw a graph\",\n        \"√úber eine eigenschaft der ebenen komplexe\",\n        \"Knots and braids: some algorithmic questions\",\n        \"Open problems\",\n        \"The complexity of the hamiltonian circuit problem for maximal planar graphs\",\n        \"Fast and accurate algorithms for protein side-chain packing\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Finding Geometric Representations of Apex Graphs is NP-Hard, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}