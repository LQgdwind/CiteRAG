{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Page Tables: Keeping them Flat and Hot (Cached)\n\nPaper Abstract: Abstract As memory capacity has outstripped TLB coverage, large data applications suffer from frequent page table walks. We investigate two complementary techniques for addressing this cost: reducing the number of accesses required and reducing the latency of each access. The first approach is accomplished by opportunistically “flattening” the page table: merging two levels of traditional 4 KB page table nodes into a single 2 MB node, thereby reducing the table’s depth and the number of indirections required to search it. The second is accomplished by biasing the cache replacement algorithm to keep page table entries during periods of high TLB miss rates, as these periods also see high data miss rates and are therefore more likely to benefit from having the smaller page table in the cache than to suffer from increased data cache misses. We evaluate these approaches for both native and virtualized systems and across a range of realistic memory fragmentation scenarios, describe the limited changes needed in our kernel implementation and hardware design, identify and address challenges related to self-referencing page tables and kernel memory allocation, and compare results across server and mobile systems using both academic and industrial simulators for robustness. We find that flattening does reduce the number of accesses required on a page walk (to 1.0), but its performance impact (+2.3%) is small due to Page Walker Caches (already 1.5 accesses). Prioritizing caching has a larger effect (+6.8%), and the combination improves performance by +9.2%. Flattening is more effective on virtualized systems (4.4 to 2.8 accesses, +7.1% performance), due to 2D page walks. By combining the two techniques we demonstrate a state-of-the-art +14.0% performance gain and -8.7% dynamic cache energy and -4.7% dynamic DRAM energy for virtualized execution with very simple hardware and software changes.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Huge Page Support - Xen\",\n        \"Mitosis: Transparently self-replicating page-tables for large-memory machines\",\n        \"Revisiting Hardware-assisted Page Walks for Virtualized Systems\",\n        \"Compendia: Reducing virtual-memory costs via selective densification\",\n        \"Enhancing and Exploiting Contiguity for Fast Memory Virtualization\",\n        \"Software Optimization Guide for AMD Family 17h Models 30h and Greater Processors\",\n        \"Transparent hugepage support\",\n        \"Arm Architecture Reference Manual Supplement: Memory System Resource Partitioning and Monitoring (MPAM), for Armv8-A\",\n        \"Arm Cortex-A76 Core Technical Reference Manual\",\n        \"Mask: Redesigning the gpu memory hierarchy to support multi-application concurrency\",\n        \"Translation Caching: Skip, Don’t Walk (the Page Table)\",\n        \"SpecTLB: A Mechanism for Speculative Address Translation\",\n        \"Efficient Virtual Memory for Big Memory Servers\",\n        \"Accelerating Two-dimensional Page Walks for Virtualized Systems\",\n        \"Large-Reach Memory Management Unit Caches\",\n        \"The Gem5 Simulator\",\n        \"Efficient Address Translation for Architectures with Multiple Page Sizes\",\n        \"Virtualising for the Masses: Exposing KVM on Android\",\n        \"Supporting Superpages in Non-Contiguous Physical Memory\",\n        \"Liblinear: A library for large linear classification\",\n        \"BioBench: A Benchmark Suite of Bioinformatics Applications\",\n        \"Efficient Memory Virtualization: Reducing Dimensionality of Nested Page Walks\",\n        \"Agile Paging: Exceeding the Best of Nested and Shadow Paging\",\n        \"Tailored Page Sizes\",\n        \"SPEC CPU2006 Benchmark Descriptions\",\n        \"TLBs, Paging-Structure Caches, and Their Invalidation\",\n        \"Intel 64 and IA-32 Architectures Optimization Reference Manual\",\n        \"5-Level Paging and 5-Level EPT\",\n        \"Intel 64 and IA-32 Architectures Software Developer’s Manual, Volume 3\",\n        \"Redundant Memory Mappings for Fast Access to Large Memories\",\n        \"Coordinated and Efficient Huge Page Management with Ingens\",\n        \"Csalt: Context switch aware large tlb\",\n        \"Prefetched Address Translation\",\n        \"Dead page and dead block predictors: Cleaning tlbs and caches together\",\n        \"A Survey of Techniques for Architecting TLBs\",\n        \"Optimizing nuca organizations and wiring alternatives for large caches with cacti 6.0\",\n        \"GraphBIG: Understanding Graph Computing in the Context of Industrial Solutions\",\n        \"Making Huge Pages Actually Useful\",\n        \"Hybrid TLB Coalescing: Improving TLB Translation Coverage under Diverse Fragmented Memory Allocations\",\n        \"Perforated Page: Supporting Fragmented Memory Allocation for Large Pages\",\n        \"Efficient Synonym Filtering and Scalable Delayed Translation for Hybrid Virtual Caching\",\n        \"Large Pages and Lightweight Memory Management in Virtualized Environments: Can You Have it Both Ways?\",\n        \"Increasing TLB Reach by Exploiting Clustering in Page Translations\",\n        \"CoLT: Coalesced Large-Reach TLBs\",\n        \"Rethinking TLB Designs in Virtualized Environments: A Very Large Part-of-Memory TLB\",\n        \"Elastic Cuckoo Page Tables: Rethinking Virtual Memory Translation for Parallelism\",\n        \"XSBench - the development and verification of a performance abstraction for Monte Carlo reactor analysis\",\n        \"Reverse Engineering Hardware Page Table Caches Using Side-Channel Attacks on the MMU\",\n        \"Hash, Don’t Cache (the Page Table)\",\n        \"Enigma: Architectural and Operating System Support for Reducing the Impact of Address Translation\",\n        \"A comprehensive analysis of superpage management mechanisms and policies\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Page Tables: Keeping them Flat and Hot (Cached), providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}