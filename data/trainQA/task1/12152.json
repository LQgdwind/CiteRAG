{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Revisiting the Necessity of Graph Learning and Common Graph Benchmarks\n\nPaper Abstract: Abstract Graph machine learning has enjoyed a meteoric rise in popularity since the introduction of deep learning in graph contexts. This is no surprise due to the ubiquity of graph data in large scale industrial settings. Tacitly assumed in all graph learning tasks is the separation of the graph structure and node features: node features strictly encode individual data while the graph structure consists only of pairwise interactions. The driving belief is that node features are (by themselves) insufficient for these tasks, so benchmark performance accurately reflects improvements in graph learning. In our paper, we challenge this orthodoxy by showing that, surprisingly, node features are oftentimes more-than-sufficient for many common graph benchmarks, breaking this critical assumption. When comparing against a well-tuned feature-only MLP baseline on seven of the most commonly used graph learning datasets, one gains little benefit from using graph structure on five datasets. We posit that these datasets do not benefit considerably from graph learning because the features themselves already contain enough graph information to obviate or substantially reduce the need for the graph. To illustrate this point, we perform a feature study on these datasets and show how the features are responsible for closing the gap between MLP and graph-method performance. Further, in service of introducing better empirical measures of progress for graph neural networks, we present a challenging parametric family of principled synthetic datasets that necessitate graph information for nontrivial performance. Lastly, we section out a subset of real-world datasets that are not trivially solved by an MLP and hence serve as reasonable benchmarks for graph neural networks.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On the bottleneck of graph neural networks and its practical implications\",\n        \"Diffwire: Inductive graph rewiring via the lovasz bound\",\n        \"Graph neural networks use graphs when they shouldn’t\",\n        \"Understanding oversquashing in gnns through the lens of effective resistance\",\n        \"Weisfeiler and lehman go topological: Message passing simplicial networks\",\n        \"Geometric deep learning: Going beyond euclidean data\",\n        \"Hyperbolic graph convolutional neural networks\",\n        \"Fully hyperbolic neural networks\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"On over-squashing in message passing neural networks: The impact of width, depth, and topology\",\n        \"Hyperbolic neural networks\",\n        \"Diffusion improves graph learning\",\n        \"Inductive representation learning on large graphs\",\n        \"Array programming with numpy\",\n        \"Mitigating degree biases in message passing mechanism by utilizing community structures\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Combining label propagation and simple models out-performs graph neural networks\",\n        \"Optimization of graph neural networks with natural gradient descent\",\n        \"FoSR: First-order spectral rewiring for addressing oversquashing in GNNs\",\n        \"Shedding light on problems with hyperbolic graph learning\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"The small-world phenomenon: an algorithmic perspective\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Towards deeper graph neural networks\",\n        \"Differentiating through the fréchet mean\",\n        \"Is heterophily a real nightmare for graph neural networks to do node classification?\",\n        \"Distilling self-knowledge from contrastive links to classify graph nodes without passing messages\",\n        \"Geometric deep learning on graphs and manifolds using mixture model cnns\",\n        \"Revisiting over-smoothing and over-squashing using ollivier-ricci curvature\",\n        \"Poincaré embeddings for learning hierarchical representations\",\n        \"On asymptotic behaviors of graph cnns from dynamical systems perspective\",\n        \"Multi-scale attributed node embedding\",\n        \"A survey on oversmoothing in graph neural networks\",\n        \"Low distortion delaunay embedding of trees in hyperbolic plane\",\n        \"Collective classification in network data\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"Exphormer: Sparse transformers for graphs\",\n        \"Relwire: Metric based graph rewiring\",\n        \"Semi-supervised learning (chapelle, o. et al., eds.; 2006) [book reviews]\",\n        \"Is rewiring actually helpful in graph neural networks?\",\n        \"Graph attention networks\",\n        \"Deep graph library: A graph-centric, highly-performant package for graph neural networks\",\n        \"Collective dynamics of ‘small-world’ networks\",\n        \"Simplifying graph convolutional networks\",\n        \"A comprehensive survey on graph neural networks\",\n        \"How powerful are graph neural networks?\",\n        \"Graph-less neural networks: Teaching old mlps new tricks via distillation\",\n        \"Hyperbolic graph attention network\",\n        \"Lorentzian graph convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Revisiting the Necessity of Graph Learning and Common Graph Benchmarks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}