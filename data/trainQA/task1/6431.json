{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: UniNet: Unified Architecture Search with Convolution, Transformer, and MLP\n\nPaper Abstract: Abstract Recently, transformer and multi-layer perceptron (MLP) architectures have achieved impressive results on various vision tasks. However, how to effectively combine those operators to form high-performance hybrid visual architectures still remains a challenge. In this work, we study the learnable combination of convolution, transformer, and MLP by proposing a novel unified architecture search approach. Our approach contains two key designs to achieve the search for high-performance networks. First, we model the very different searchable operators in a unified form, and thus enable the operators to be characterized with the same set of configuration parameters. In this way, the overall search space size is significantly reduced, and the total search cost becomes affordable. Second, we propose context-aware downsampling modules (DSMs) to mitigate the gap between the different types of operators. Our proposed DSMs are able to better adapt features from different types of operators, which is important for identifying high-performance hybrid architectures. Finally, we integrate configurable operators and DSMs into a unified search space and search with a Reinforcement Learning-based search algorithm to fully explore the optimal combination of the operators. To this end, we search a baseline network and scale it up to obtain a family of models, named UniNets, which achieve much better accuracy and efficiency than previous ConvNets and Transformers. In particular, our UniNet-B5 achieves 84.9% top-1 accuracy on ImageNet, outperforming EfficientNet-B7 and BoTNet-T7 with 44% and 55% fewer FLOPs respectively. By pretraining on the ImageNet-21K, our UniNet-B6 achieves 87.4%, outperforming Swin-L with 51% fewer FLOPs and 41% fewer parameters. Code is available at https://github.com/Sense-X/UniNet.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Layer normalization\",\n        \"High-performance large-scale image recognition without normalization\",\n        \"Once-for-all: Train one network and specialize it for efficient deployment\",\n        \"Xception: Deep learning with depthwise separable convolutions\",\n        \"Conditional positional encodings for vision transformers\",\n        \"Randaugment: Practical automated data augmentation with a reduced search space\",\n        \"Fbnetv3: Joint architecture-recipe search using neural acquisition function\",\n        \"Coatnet: Marrying convolution and attention for all data sizes\",\n        \"Convit: Improving vision transformers with soft convolutional inductive biases\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Container: Context aggregation network\",\n        \"Lip: Local importance-based pooling\",\n        \"Nasvit: Neural architecture search for efficient vision transformers with gradient conflict aware supernet training\",\n        \"Levit: a vision transformer in convnetâ€™s clothing for faster inference\",\n        \"Cmt: Convolutional neural networks meet vision transformers\",\n        \"Deep residual learning for image recognition\",\n        \"Gaussian error linear units (gelus)\",\n        \"Augment your batch: Improving generalization through instance repetition\",\n        \"Vision permutator: A permutable mlp-like architecture for visual recognition\",\n        \"Deep networks with stochastic depth\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"How much position information do convolutional neural networks encode?\",\n        \"Adam: A method for stochastic optimization\",\n        \"Convmlp: Hierarchical convolutional mlps for vision\",\n        \"Pay attention to mlps\",\n        \"Darts: Differentiable architecture search\",\n        \"Fnas: Uncertainty-aware fast neural architecture search\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"Designing network design spaces\",\n        \"Rethinking semantic segmentation from a sequence-to-sequence perspective with transformers\",\n        \"Detail-preserving pooling in deep networks\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Proximal policy optimization algorithms\",\n        \"Bottleneck transformers for visual recognition\",\n        \"How to train your vit? data, augmentation, and regularization in vision transformers\",\n        \"Going deeper with convolutions\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Efficientnetv2: Smaller models and faster training\",\n        \"Mlp-mixer: An all-mlp architecture for vision\",\n        \"Resmlp: Feedforward networks for image classification with data-efficient training\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Going deeper with image transformers\",\n        \"Scaling local self-attention for parameter efficient visual backbones\",\n        \"Attention is all you need\",\n        \"Alphanet: Improved training of supernets with alpha-divergence\",\n        \"Attentivenas: Improving neural architecture search via attentive sampling\",\n        \"Carafe++: Unified content-aware reassembly of features\",\n        \"Pyramid vision transformer: A versatile backbone for dense prediction without convolutions\",\n        \"Cvt: Introducing convolutions to vision transformers\",\n        \"Early convolutions help transformers see better\",\n        \"Incorporating convolution designs into visual transformers\",\n        \"Cutmix: Regularization strategy to train strong classifiers with localizable features\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Making convolutional networks shift-invariant again\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in UniNet: Unified Architecture Search with Convolution, Transformer, and MLP, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}