{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On Layer Normalization in the Transformer Architecture\n\nPaper Abstract: Abstract The Transformer is widely used in natural language processing tasks. To train a Transformer however, one usually needs a carefully designed learning rate warm-up stage, which is shown to be crucial to the final performance but will slow down the optimization and bring more hyper-parameter tunings. In this paper, we first study theoretically why the learning rate warm-up stage is essential and show that the location of layer normalization matters. Specifically, we prove with mean field theory that at initialization, for the original-designed Post-LN Transformer, which places the layer normalization between the residual blocks, the expected gradients of the parameters near the output layer are large. Therefore, using a large learning rate on those gradients makes the training unstable. The warm-up stage is practically helpful for avoiding this problem. On the other hand, our theory also shows that if the layer normalization is put inside the residual blocks (recently proposed as Pre-LN Transformer), the gradients are well-behaved at initialization. This motivates us to remove the warm-up stage for the training of Pre-LN Transformers. We show in our experiments that Pre-LN Transformers without the warm-up stage can reach comparable results with baselines while requiring significantly less training time and hyper-parameter tuning on a wide range of applications.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Character-level language modeling with deeper self-attention\",\n        \"Adaptive input representations for neural language modeling\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"The fifth PASCAL recognizing textual entailment challenge\",\n        \"Generating long sequences with sparse transformers\",\n        \"Transformer-xl: Attentive language models beyond a fixed-length context\",\n        \"Language modeling with gated convolutional networks\",\n        \"Universal transformers\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"Adaptive subgradient methods for online learning and stochastic optimization\",\n        \"Understanding back-translation at scale\",\n        \"Convolutional sequence to sequence learning\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Deep residual learning for image recognition\",\n        \"Mask r-cnn\",\n        \"Bag of tricks for image classification with convolutional neural networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Opennmt: Neural machine translation toolkit\",\n        \"Moses: Open source toolkit for statistical machine translation\",\n        \"Deep neural networks as gaussian processes\",\n        \"Wide neural networks of any depth evolve as linear models under gradient descent\",\n        \"Layer normalization\",\n        \"On the variance of the adaptive learning rate and beyond\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Understanding and improving transformer from a multi-particle dynamic system point of view\",\n        \"Transformers without tears: Improving the normalization of self-attention\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Training tips for the transformer model\",\n        \"Language models are unsupervised multitask learners\",\n        \"An overview of gradient descent optimization algorithms\",\n        \"Neural machine translation of rare words with subword units\",\n        \"Sequence to sequence learning with neural networks\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Lecture 6.5-rmsprop, coursera: Neural networks for machine learning\",\n        \"Attention is all you need\",\n        \"Tensor2tensor for neural machine translation\",\n        \"High-dimensional statistics: A non-asymptotic viewpoint, volume 48\",\n        \"Learning deep transformer models for machine translation\",\n        \"Dynamical isometry and a mean field theory of cnns: How to train 10,000-layer vanilla convolutional neural networks\",\n        \"Scaling limits of wide neural networks with weight sharing: Gaussian process behavior, gradient independence, and neural tangent kernel derivation\",\n        \"A mean field theory of batch normalization\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Imagenet training in minutes\",\n        \"Adadelta: an adaptive learning rate method\",\n        \"Fixup initialization: Residual learning without normalization\",\n        \"Aligning books and movies: Towards story-like visual explanations by watching movies and reading books\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in On Layer Normalization in the Transformer Architecture, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}