{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Semantic Frame Forecast\n\nPaper Abstract: Abstract This paper introduces semantic frame forecast, a task that predicts the semantic frames that will occur in the next 10, 100, or even 1,000 sentences in a running story. Prior work focused on predicting the immediate future of a story, such as one to a few sentences ahead. However, when novelists write long stories, generating a few sentences is not enough to help them gain high-level insight to develop the follow-up story. In this paper, we formulate a long story as a sequence of “story blocks,” where each block contains a fixed number of sentences (e.g., 10, 100, or 200). This formulation allows us to predict the follow-up story arc beyond the scope of a few sentences. We represent a story block using the term frequencies (TF) of semantic frames in it, normalized by each frame’s inverse document frequency (IDF). We conduct semantic frame forecast experiments on 4,794 books from the Bookcorpus and 7,962 scientific abstracts from CODA-19, with block sizes ranging from 5 to 1,000 sentences. The results show that automated models can forecast the follow-up story blocks better than the random, prior, and replay baselines, indicating the task’s feasibility. We also learn that the models using the frame representation as features outperform all the existing approaches when the block size is over 150 sentences. The human evaluation also shows that the proposed frame representation, when visualized as word clouds, is comprehensible, representative, and specific to humans. Our code is available at: https://github.com/appleternity/FrameForecasting.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"National novel writing month.\",\n        \"Story realization: Expanding plot events into sentences.\",\n        \"The berkeley framenet project.\",\n        \"Learning latent personas of film characters.\",\n        \"Scibert: A pretrained language model for scientific text.\",\n        \"Longformer: The long-document transformer.\",\n        \"Generalized denoising auto-encoders as generative models.\",\n        \"Creative writing with a machine in the loop: Case studies on slogans and stories.\",\n        \"D3-cloud.(2016).\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding.\",\n        \"Hierarchical neural story generation.\",\n        \"Strategies for structuring story generation.\",\n        \"Metaphoria: An algorithmic companion for metaphor creation.\",\n        \"Story plot generation based on cbr.\",\n        \"What happens next? event prediction using a compositional neural network model.\",\n        \"Long short-term memory.\",\n        \"Heteroglossia: In-situ story ideation with the crowd.\",\n        \"Coda-19: Using a non-expert crowd to annotate research aspects on 10,000+ abstracts in the covid-19 open research dataset.\",\n        \"Visual storytelling.\",\n        \"Unsupervised hierarchical story infilling.\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree.\",\n        \"Ctrl: A conditional transformer language model for controllable generation.\",\n        \"Reformer: The efficient transformer.\",\n        \"Story generation with crowdsourced plot graphs.\",\n        \"Scheherazade: Crowd-powered interactive narrative generation.\",\n        \"Conceptnet—a practical commonsense reasoning tool-kit.\",\n        \"Nltk: The natural language toolkit.\",\n        \"On the evaluation of dialogue systems with next utterance classification.\",\n        \"Event representations for automated story generation with deep neural nets.\",\n        \"A corpus and cloze evaluation for deeper understanding of commonsense stories.\",\n        \"Scikit-learn: Machine learning in Python.\",\n        \"Towards controllable story generation.\",\n        \"Stanza: A Python natural language processing toolkit for many human languages.\",\n        \"Language models are unsupervised multitask learners.\",\n        \"Narrative planning: Balancing plot and character.\",\n        \"Choice of plausible alternatives: An evaluation of commonsense causal reasoning.\",\n        \"An encoder-decoder approach to predicting causal relations in stories.\",\n        \"Creative help: a story writing assistant.\",\n        \"Automatic Keyword Extraction from Individual Documents, chapter 1.\",\n        \"Do massively pretrained language models make better storytellers?\",\n        \"Frame-Semantic Parsing with Softmax-Margin Segmental RNNs and a Syntactic Scaffold.\",\n        \"Progressive generation of long text.\",\n        \"Cord-19: The covid-19 open research dataset.\",\n        \"Linformer: Self-attention with linear complexity.\",\n        \"Narrative interpolation for generating and understanding stories.\",\n        \"Plan-and-write: Towards better automatic storytelling.\",\n        \"Big bird: Transformers for longer sequences.\",\n        \"Visual storytelling via predicting anchor word embeddings in the stories.\",\n        \"Aligning books and movies: Towards story-like visual explanations by watching movies and reading books.\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Semantic Frame Forecast, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}