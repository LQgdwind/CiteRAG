{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ùëÅ-gram Is Back: Residual Learning of Neural Text Generation with ùëõ-gram Language Model\n\nPaper Abstract: Abstract NùëÅN-gram language models (LM) have been largely superseded by neural LMs as the latter exhibits better performance. However, we find that nùëõn-gram models can achieve satisfactory performance on a large proportion of testing cases, indicating they have already captured abundant knowledge of the language with relatively low computational cost. With this observation, we propose to learn a neural LM that fits the residual between an nùëõn-gram LM and the real-data distribution. The combination of nùëõn-gram and neural LMs not only allows the neural part to focus on the deeper understanding of language but also provides a flexible way to customize an LM by switching the underlying nùëõn-gram model without changing the neural model. Experimental results on three typical language tasks (i.e., language modeling, machine translation, and summarization) demonstrate that our approach attains additional performance gains over popular standalone neural models consistently. We also show that our approach allows for effective domain adaptation by simply switching to a domain-specific nùëõn-gram model, without any extra training. Our code is released at https://github.com/ghrua/NgramRes.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Unsupervised domain clusters in pretrained language models\",\n        \"Adaptive input representations for neural language modeling\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"A maximum likelihood approach to continuous speech recognition\",\n        \"Unilmv2: Pseudo-masked language models for unified language model pre-training\",\n        \"Palm: Pre-training an autoencoding&autoregressive language model for context-conditioned generation\",\n        \"A statistical approach to machine translation\",\n        \"Neural machine translation with monolingual translation memory\",\n        \"Recent advances in retrieval-augmented text generation\",\n        \"Federated learning of n-gram language models\",\n        \"An empirical study of smoothing techniques for language modeling\",\n        \"Empirical evaluation of gated recurrent neural networks on sequence modeling\",\n        \"Language modeling with gated convolutional networks\",\n        \"Unified language model pre-training for natural language understanding and generation\",\n        \"Mask attention networks: Rethinking and strengthen transformer\",\n        \"Improving neural language models with a continuous cache\",\n        \"Deep residual learning for image recognition\",\n        \"Realformer: Transformer likes residual attention\",\n        \"KenLM: Faster and smaller language model queries\",\n        \"Scalable modified Kneser-Ney language model estimation\",\n        \"Long short-term memory\",\n        \"The curious case of neural text degeneration\",\n        \"A new input method for human translators: Integrating machine translation effectively and imperceptibly\",\n        \"Speech & language processing\",\n        \"Improved backing-off for m-gram language modeling\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"A survey on retrieval-augmented text generation\",\n        \"Deep recurrent generative decoder for abstractive text summarization\",\n        \"ROUGE: A package for automatic evaluation of summaries\",\n        \"Text summarization with pretrained encoders\",\n        \"Stanford neural machine translation systems for spoken language domain\",\n        \"An analysis of neural language modeling at multiple scales\",\n        \"Pointer sentinel mixture models\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"A call for clarity in reporting BLEU scores\",\n        \"Neural paraphrase generation with stacked residual LSTM networks\",\n        \"Prophetnet: Predicting future n-gram for sequence-to-sequencepre-training\",\n        \"Language models are unsupervised multitask learners.\",\n        \"Fast parametric learning with activation memorization\",\n        \"Get to the point: Summarization with pointer-generator networks\",\n        \"Neural machine translation of rare words with subword units\",\n        \"A contrastive framework for neural text generation\",\n        \"Attention is all you need\",\n        \"Language modeling, lexical translation, reordering: The training process of NMT through the lens of classical SMT\",\n        \"Recurrent residual learning for sequence classification\",\n        \"Neural text generation with unlikelihood training\",\n        \"Self-attentive residual decoder for neural machine translation\",\n        \"Ernie-gen: an enhanced multi-flow pre-training and fine-tuning framework for natural language generation\",\n        \"Learning to break the loop: Analyzing and mitigating repetitions for neural text generation\",\n        \"Pegasus: Pre-training with extracted gap-sentences for abstractive summarization\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in ùëÅ-gram Is Back: Residual Learning of Neural Text Generation with ùëõ-gram Language Model, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}