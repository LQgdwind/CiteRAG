{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Large Language Models are Interpretable Learners\n\nPaper Abstract: Abstract The trade-off between expressiveness and interpretability remains a core challenge when building human-centric predictive models for classification and decision-making. While symbolic rules offer interpretability, they often lack expressiveness, whereas neural networks excel in performance but are known for being black boxes. In this paper, we show a combination of Large Language Models (LLMs) and symbolic programs can bridge this gap. In the proposed LLM-based Symbolic Programs (LSPs), the pretrained LLM with natural language prompts provides a massive set of interpretable modules that can transform raw input into natural language concepts. Symbolic programs then integrate these modules into an interpretable decision rule. To train LSPs, we develop a divide-and-conquer approach to incrementally build the program from scratch, where the learning process of each step is guided by LLMs. To evaluate the effectiveness of LSPs in extracting interpretable and accurate knowledge from data, we introduce IL-Bench, a collection of diverse tasks, including both synthetic and real-world scenarios across different modalities. Empirical results demonstrate LSP’s superior performance compared to traditional neurosymbolic programs and vanilla automatic prompt tuning methods. Moreover, as the knowledge learned by LSP is a combination of natural language descriptions and symbolic rules, it is easily transferable to humans (interpretable), and other LLMs, and generalizes well to out-of-distribution samples.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gpt-4 technical report\",\n        \"From sparse to dense: Gpt-4 summarization with chain of density prompting\",\n        \"Towards better understanding of gradient-based attribution methods for deep neural networks\",\n        \"Concept gradient: Concept-based interpretation without linear assumption\",\n        \"Neurosymbolic programming\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"Differentiable synthesis of program architectures\",\n        \"Real time image saliency for black box classifiers\",\n        \"Rlprompt: Optimizing discrete text prompts with reinforcement learning\",\n        \"Explanations based on the missing: Towards contrastive explanations with pertinent negatives\",\n        \"Promptbreeder: Self-referential self-improvement via prompt evolution\",\n        \"Distilling a neural network into a soft decision tree\",\n        \"News summarization and evaluation in the era of gpt-3\",\n        \"Counterfactual visual explanations\",\n        \"Connecting large language models with evolutionary algorithms yields powerful prompt optimizers\",\n        \"Generalized additive models\",\n        \"Grounding visual explanations\",\n        \"Evaluations and methods for explanation through robustness analysis\",\n        \"Automatic engineering of long prompts\",\n        \"Interpretability beyond feature attribution: Quantitative testing with concept activation vectors (tcav)\",\n        \"Concept bottleneck models\",\n        \"Lsun-stanford car dataset: enhancing large-scale car image datasets using deep learning for usage in gan training\",\n        \"Interpretability beyond classification output: Semantic bottleneck networks\",\n        \"Fine-grained visual classification of aircraft\",\n        \"Interpretable and steerable sequence learning via prototypes\",\n        \"This looks like that, because… explaining prototypes for interpretable image recognition\",\n        \"Neural prototype trees for interpretable fine-grained image recognition\",\n        \"Automated flower classification over a large number of classes\",\n        \"Label-free concept bottleneck models\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Palworld\",\n        \"Rise: Randomized input sampling for explanation of black-box models\",\n        \"Automatic prompt optimization with gradient descent and beam search\",\n        \"Chatgpt vs human-authored text: Insights into controllable text summarization and sentence style transfer\",\n        \"Why should i trust you?: Explaining the predictions of any classifier\",\n        \"Learning differentiable programs with admissible neural heuristics\",\n        \"Autoprompt: Eliciting knowledge from language models with automatically generated prompts\",\n        \"Learning important features through propagating activation differences\",\n        \"Axiomatic attribution for deep networks\",\n        \"Gemini: a family of highly capable multimodal models\",\n        \"Contrastive Explanations with Local Foil Trees\",\n        \"Building a bird recognition app and large scale dataset with citizen scientists: The fine print in fine-grained dataset collection\",\n        \"The caltech-ucsd birds-200-2011 dataset\",\n        \"Promptagent: Strategic planning with language models enables expert-level prompt optimization\",\n        \"Gps: Genetic prompt search for efficient few-shot learning\",\n        \"Large language models as optimizers\",\n        \"Post-hoc concept bottleneck models\",\n        \"Tempera: Test-time prompting via reinforcement learning\",\n        \"Benchmarking large language models for news summarization\",\n        \"Large language models are human-level prompt engineers\",\n        \"Visualizing deep neural network decisions: Prediction difference analysis\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Large Language Models are Interpretable Learners, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}