{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Mercury: QoS-Aware Tiered Memory System\n\nPaper Abstract: Abstract Memory tiering has received wide adoption in recent years as an effective solution to address the increasing memory demands of memory-intensive workloads. However, existing tiered memory systems often fail to meet service-level objectives (SLOs) when multiple applications share the system because they lack Quality-of-Service (QoS) support. Consequently, applications suffer severe performance drops due to local memory contention and memory bandwidth interference. In this paper, we present Mercury, a QoS-aware tiered memory system that ensures predictable performance for coexisting memory-intensive applications with different SLOs. Mercury enables per-tier page reclamation for application-level resource management and uses a proactive admission control algorithm to satisfy SLOs via per-tier memory capacity allocation and intra- and inter-tier bandwidth interference mitigation. It reacts to dynamic requirement changes via real-time adaptation. Extensive evaluations show that Mercury improves application performance by up to 53.4% and 20.3% compared to TPP and Colloid, respectively.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"HiBench Suite\",\n        \"PostgreSQL Database Management System\",\n        \"SPEC CPU 2017\",\n        \"TPC Benchmark C (TPC-C)\",\n        \"TPC Benchmark H (TPC-H)\",\n        \"Weighted interleaving for memory tiering\",\n        \"Numa balancing\",\n        \"Linux cgroups\",\n        \"Intel platform qos technologies\",\n        \"Pebs. intel 64 and ia-32 architectures software developer‚Äôs manual\",\n        \"Compute express link (cxl)\",\n        \"Inference of meta‚Äôs llama model (and others) in pure c/c++\",\n        \"memcached\",\n        \"Redis\",\n        \"Thermostat: Application-transparent page management for two-tiered main memory\",\n        \"Œºùúá\\\\muProf User Guide\",\n        \"The gap benchmark suite\",\n        \"Rfc2475: An architecture for differentiated service\",\n        \"Rethinking software runtimes for disaggregated memory\",\n        \"Faster: A concurrent key-value store with in-place updates\",\n        \"A tale of two paths: Toward a hybrid data plane for efficient far-memory applications\",\n        \"Parties: Qos-aware resource partitioning for multiple interactive services\",\n        \"Memshare: a dynamic multi-tenant key-value cache\",\n        \"Benchmarking cloud serving systems with ycsb\",\n        \"The faiss library\",\n        \"Instruction-based sampling: A new performance analysis technique for amd family 10h processors\",\n        \"Towards an adaptable systems architecture for memory tiering at warehouse-scale\",\n        \"When cloud storage meets RDMA\",\n        \"Direct access, High-Performance memory disaggregation with DirectCXL\",\n        \"Efficient memory disaggregation with Infiniswap\",\n        \"Optimizing cpu performance for recommendation systems at-scale\",\n        \"Heteroos: Os design for heterogeneous memory management in datacenter\",\n        \"Exploring the design space of page management for multi-tiered memory systems\",\n        \"Pond: Cxl-based memory pooling systems for cloud platforms\",\n        \"Heracles: Improving resource efficiency at scale\",\n        \"TPP: Transparent page placement for CXL-enabled tiered memory\",\n        \"Reducing memory interference in multicore systems via application-aware memory channel partitioning\",\n        \"Deep learning recommendation model for personalization and recommendation systems\",\n        \"Fair queuing memory systems\",\n        \"Introduction to memory bandwidth monitoring in the Intel Xeon processor e5 v4 family\",\n        \"Tmc: Near-optimal resource allocation for tiered-memory systems\",\n        \"Renaissance: A modern benchmark suite for parallel applications on the jvm\",\n        \"Hemem: Scalable tiered memory management for big data applications and real nvm\",\n        \"vtmm: Tiered memory management for virtual machines\",\n        \"The application slowdown model: Quantifying and controlling the impact of inter-application interference at shared caches and main memory\",\n        \"Speedy transactions in multicore in-memory databases\",\n        \"Tiered memory management: Access latency is the key!\",\n        \"Semeru: A Memory-Disaggregated managed runtime\",\n        \"Canvas: Isolated and adaptive swapping for Multi-Applications on remote memory\",\n        \"Nimble page management for tiered memory systems\",\n        \"MT2: Memory Bandwidth Regulation on Hybrid NVM/DRAM Platforms\",\n        \"Resilient distributed datasets: A Fault-Tolerant abstraction for In-Memory cluster computing\",\n        \"Aequitas: Admission control for performance-critical rpcs in datacenters\",\n        \"Managing memory tiers with cxl in virtualized environments\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Mercury: QoS-Aware Tiered Memory System, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}