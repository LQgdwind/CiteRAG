{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 42 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Representations on Logs for AIOps\n\nPaper Abstract: Abstract AI for IT Operations (AIOps) is a powerful platform that Site Reliability Engineers (SREs) use to automate and streamline operational workflows with minimal human intervention. Automated log analysis is a critical task in AIOps as it provides key insights for SREs to identify and address ongoing faults. Tasks such as log format detection, log classification, and log parsing are key components of automated log analysis. Most of these tasks require supervised learning; however, there are multiple challenges due to limited labeled log data and the diverse nature of log data. Large Language Models (LLMs) such as BERT and GPT3 are trained using self-supervision on a vast amount of unlabeled data. These models provide generalized representations that can be effectively used for various downstream tasks with limited labeled data. Motivated by the success of LLMs in specific domains like science and biology, this paper introduces a LLM for log data which is trained on public and proprietary log data. Results of our experiments demonstrate that the proposed LLM outperforms existing models on multiple downstream tasks. In summary, AIOps powered by LLMs offers an efficient and effective solution for automating log analysis tasks and enabling SREs to focus on higher-level tasks. Our proposed LLM, trained on public and proprietary log data, offers superior performance on multiple downstream tasks, making it a valuable addition to the AIOps platform.\n\n{retrieved_text}\n\nGenerate exactly 42 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 42\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A survey on automated log analysis for reliability engineering\",\n        \"Failure prediction by utilizing log analysis: A systematic mapping study\",\n        \"Log anomaly to resolution: Ai based proactive incident remediation\",\n        \"Site Reliability Engineering: How Google Runs Production Systems\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Language models are few-shot learners\",\n        \"PaLM: A hybrid parser and language model\",\n        \"Zero-shot text-to-image generation\",\n        \"High-resolution image synthesis with latent diffusion models\",\n        \"Tools and benchmarks for automated log parsing\",\n        \"BioBERT: a pre-trained biomedical language representation model for biomedical text mining\",\n        \"Legal-bert: The muppets straight out of law school\",\n        \"Publicly available clinical bert embeddings\",\n        \"Rapid adaptation of bert for information extraction on domain-specific business documents\",\n        \"BERTweet: A pre-trained language model for English tweets\",\n        \"SciBERT: A pretrained language model for scientific text\",\n        \"A maximum likelihood approach to continuous speech recognition\",\n        \"Loghub: A Large Collection of System Log Datasets towards Automated Log Analytics\",\n        \"Abstracting execution logs to execution events for enterprise applications (short paper)\",\n        \"A lightweight algorithm for message type extraction in system application logs\",\n        \"A search-based approach for accurate identification of log message formats\",\n        \"Drain: An Online Log Parsing Approach with Fixed Depth Tree\",\n        \"Semi-supervised log-based anomaly detection via probabilistic label estimation\",\n        \"Improving log-based fault diagnosis by log classification\",\n        \"A coefficient of agreement for nominal scales\",\n        \"Decoupled weight decay regularization\",\n        \"Attention is all you need\",\n        \"A comprehensive survey on pretrained foundation models: A history from bert to chatgpt\",\n        \"Albert: A lite bert for self-supervised learning of language representations\",\n        \"Electra: Pre-training text encoders as discriminators rather than generators\",\n        \"XLNet: Generalized Autoregressive Pretraining for Language Understanding\",\n        \"A robustly optimized BERT pre-training approach with post-training\",\n        \"Building golden signal based signatures for log anomaly detection\",\n        \"Inter-annotator agreement and the upper limit on machine performance: Evidence from biomedical natural language processing.\",\n        \"BLOOM (revision 4ab0472)\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Automatically parsed logline components\",\n        \"Splunk\",\n        \"Logbert: Log anomaly detection via bert\",\n        \"Bert-log: Anomaly detection for system logs based on pre-trained language model\",\n        \"Log-based anomaly detection without log parsing\"\n    ],\n    \"reasoning\": \"Selected these 42 references because they represent foundational work and recent advances in Learning Representations on Logs for AIOps, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}