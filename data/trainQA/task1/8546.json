{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: LayerNAS: Neural Architecture Search in Polynomial Complexity\n\nPaper Abstract: Abstract Neural Architecture Search (NAS) has become a popular method for discovering effective model architectures, especially for target hardware. As such, NAS methods that find optimal architectures under constraints are essential. In our paper, we propose LayerNAS to address the challenge of multi-objective NAS by transforming it into a combinatorial optimization problem, which effectively constrains the search complexity to be polynomial. For a model architecture with LùêøL layers, we perform layerwise-search for each layer, selecting from a set of search options ùïäùïä\\mathbb{S}. LayerNAS groups model candidates based on one objective, such as model size or latency, and searches for the optimal model based on another objective, thereby splitting the cost and reward elements of the search. This approach limits the search complexity to O‚Äã(H‚ãÖ|ùïä|‚ãÖL)ùëÇ‚ãÖùêªùïäùêøO(H\\cdot|\\mathbb{S}|\\cdot L), where HùêªH is a constant set in LayerNAS. Our experiments show that LayerNAS is able to consistently discover superior models across a variety of search spaces in comparison to strong baselines, including search spaces derived from NATS-Bench, MobileNetV2 and MobileNetV3.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Understanding and simplifying one-shot architecture search\",\n        \"Can weight sharing outperform random architecture search? an investigation with tunas\",\n        \"Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n        \"Once for all: Train one network and specialize it for efficient deployment\",\n        \"Neural architecture search on imagenet in four gpu hours: A theoretically inspired perspective\",\n        \"A downsampled variant of imagenet as an alternative to the cifar datasets\",\n        \"Fairnas: Rethinking evaluation fairness of weight sharing neural architecture search\",\n        \"Speeding up automatic hyperparameter optimization of deep neural networks by extrapolation of learning curves\",\n        \"Nats-bench: Benchmarking nas algorithms for architecture topology and size\",\n        \"Efficient multi-objective neural architecture search via lamarckian evolution\",\n        \"Neural architecture search: A survey\",\n        \"Bohb: Robust and efficient hyperparameter optimization at scale\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Searching for mobilenetv3\",\n        \"Monas: Multi-objective neural architecture search using reinforcement learning\",\n        \"Squeeze-and-excitation networks\",\n        \"Searching by generating: Flexible and efficient one-shot nas with architecture generator\",\n        \"Reinforcement learning for neural architecture search: A review\",\n        \"Neural architecture search with bayesian optimisation and optimal transport\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Progressive neural architecture search\",\n        \"Darts: Differentiable architecture search\",\n        \"A survey on evolutionary neural architecture search\",\n        \"Metapruning: Meta learning for automatic neural network channel pruning\",\n        \"Neural architecture search without training\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"Searching for activation functions\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Proximal policy optimization algorithms\",\n        \"Nasi: Label-and data-agnostic neural architecture search at initialization\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Haq: Hardware-aware automated quantization with mixed precision\",\n        \"Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search\",\n        \"Shapley-nas: Discovering operation contribution for neural architecture search\",\n        \"Knas: green neural architecture search\",\n        \"Analyzing and mitigating interference in neural architecture search\",\n        \"Nas-bench-101: Towards reproducible neural architecture search\",\n        \"Greedynas: Towards fast one-shot nas with greedy supernet\",\n        \"Autoslim: Towards one-shot architecture search for channel numbers\",\n        \"Bayesnas: A bayesian approach for neural architecture search\",\n        \"Generalization properties of nas under activation and skip connection search\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Learning transferable architectures for scalable image recognition\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in LayerNAS: Neural Architecture Search in Polynomial Complexity, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}