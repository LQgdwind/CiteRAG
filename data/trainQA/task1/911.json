{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 62 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient AutoML Pipeline Search with Matrix and Tensor Factorization\n\nPaper Abstract: Abstract Data scientists seeking a good supervised learning model on a new dataset have many choices to make: they must preprocess the data, select features, possibly reduce the dimension, select an estimation algorithm, and choose hyperparameters for each of these pipeline components. With new pipeline components comes a combinatorial explosion in the number of choices! In this work, we design a new AutoML system to address this challenge: an automated system to design a supervised learning pipeline. Our system uses matrix and tensor factorization as surrogate models to model the combinatorial pipeline search space. Under these models, we develop greedy experiment design protocols to efficiently gather information about a new dataset. Experiments on large corpora of real-world classification problems demonstrate the effectiveness of our approach.\n\n{retrieved_text}\n\nGenerate exactly 62 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 62\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"No free lunch theorems for optimization\",\n        \"Tpot: A tree-based pipeline optimization tool for automating machine learning\",\n        \"Efficient and robust automated machine learning\",\n        \"Alphad3m: Machine learning pipeline synthesis\",\n        \"An admm based framework for automl pipeline configuration\",\n        \"Science and statistics\",\n        \"Learning to learn\",\n        \"Learning to learn by gradient descent by gradient descent\",\n        \"Building machines that learn and think like people\",\n        \"Meta-learning: A survey\",\n        \"Democratizing data science through interactive curation of ml pipelines\",\n        \"Oboe: Collaborative filtering for automl model selection\",\n        \"Meta-Learning by Landmarking Various Learning Algorithms\",\n        \"Using meta-learning to initialize Bayesian optimization of hyperparameters\",\n        \"Probabilistic matrix factorization for automated machine learning\",\n        \"Learning hyperparameter optimization initializations\",\n        \"Automl using metadata language embeddings\",\n        \"Gaussian processes for machine learning\",\n        \"Practical Bayesian optimization of machine learning algorithms\",\n        \"Algorithms for hyper-parameter optimization\",\n        \"Maximum entropy sampling and optimal Bayesian experimental design\",\n        \"Fast sparse Gaussian process methods: The informative vector machine\",\n        \"Information-based objective functions for active data selection\",\n        \"Gaussian Process Optimization in the Bandit Setting: No Regret and Experimental Design\",\n        \"Hyperparameter optimization: a spectral approach\",\n        \"Tuning search algorithms for real-world applications: A regression tree based approach\",\n        \"Sequential Model-Based Optimization for General Algorithm Configuration.\",\n        \"On the efficient design of statistical investigations\",\n        \"D-optimality for regression designs: a review\",\n        \"Optimal design of experiments\",\n        \"Convex optimization\",\n        \"Combinatorial algorithms for optimal design\",\n        \"Tensor decompositions and applications\",\n        \"Ensemble methods in machine learning\",\n        \"Bagging predictors\",\n        \"The boosting approach to machine learning: An overview\",\n        \"Stacked generalization\",\n        \"Matrix computations\",\n        \"An analysis of approximations for maximizing submodular set functions—i\",\n        \"On greedy maximization of entropy\",\n        \"Near-optimal sensor placements in gaussian processes: Theory, efficient algorithms and empirical studies\",\n        \"Submodular function maximization.\",\n        \"Matrix algebra from a statistician’s perspective\",\n        \"Adjustment of an inverse matrix corresponding to a change in one element of a given matrix\",\n        \"Updating the inverse of a matrix\",\n        \"Efficient algorithms for computing a strong rank-revealing qr factorization\",\n        \"Algorithm runtime prediction: Methods & evaluation\",\n        \"Analysis of individual differences in multidimensional scaling via an n-way generalization of “eckart-young” decomposition\",\n        \"Foundations of the parafac procedure: Models and conditions for an explanatory multimodal factor analysis\",\n        \"Some mathematical notes on three-mode factor analysis\",\n        \"Tensor-train decomposition\",\n        \"Maximum likelihood from incomplete data via the em algorithm\",\n        \"Tensor completion algorithms in big data analytics\",\n        \"Polynomial matrix completion for missing data imputation and transductive learning\",\n        \"Online high rank matrix completion\",\n        \"Openml: Networked science in machine learning\",\n        \"Openml-python: an extensible python api for openml\",\n        \"UCI machine learning repository\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"Visualizing the loss landscape of neural nets\",\n        \"Loss surfaces, mode connectivity, and fast ensembling of dnns\",\n        \"Scikit-learn: Machine learning in Python\"\n    ],\n    \"reasoning\": \"Selected these 62 references because they represent foundational work and recent advances in Efficient AutoML Pipeline Search with Matrix and Tensor Factorization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}