{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Grafenne: Learning on Graphs with Heterogeneous and Dynamic Feature Sets\n\nPaper Abstract: Abstract Graph neural networks (Gnns), in general, are built on the assumption of a static set of features characterizing each node in a graph. This assumption is often violated in practice. Existing methods partly address this issue through feature imputation. However, these techniques (i) assume uniformity of feature set across nodes, (ii) are transductive by nature, and (iii) fail to work when features are added or removed over time. In this work, we address these limitations through a novel Gnn framework called Grafenne. Grafenne performs a novel allotropic transformation on the original graph, wherein the nodes and features are decoupled through a bipartite encoding. Through a carefully chosen message passing framework on the allotropic transformation, we make the model parameter size independent of the number of features and thereby inductive to both unseen nodes and features. We prove that Grafenne is at least as expressive as any of the existing message-passing Gnns in terms of Weisfeiler-Leman tests, and therefore, the additional inductivity to unseen features does not come at the cost of expressivity. In addition, as demonstrated over four real-world graphs, Grafenne empowers the underlying Gnn with high empirical efficacy and the ability to learn in continual fashion over streaming feature sets.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"An Attribute-Aware Neural Attentive Model for Next Basket Recommendation\",\n        \"Learning articulated rigid body dynamics with lagrangian graph neural network\",\n        \"Learning the dynamics of particle-based systems with lagrangian graph neural networks\",\n        \"Stridernet: A graph reinforcement learning approach to optimize atomic structures on rough energy landscapes\",\n        \"Enhancing the inductive biases of graph neural ode for modeling dynamical systems\",\n        \"Learning and maximizing influence in social networks under capacity constraints\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Graphgen: a scalable approach to domain-agnostic labeled graph generation\",\n        \"FRIGATE: Frugal spatio-temporal forecasting on road networks\",\n        \"Tigger: Scalable generative modelling for temporal interaction graphs\",\n        \"Inductive representation learning on large graphs\",\n        \"Multilayer feedforward networks are universal approximators\",\n        \"Neuromlr: Robust & reliable route recommendation on road networks\",\n        \"Incomplete graph representation and learning via partial graph neural networks\",\n        \"Bag of tricks for efficient text classification\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Overcoming catastrophic forgetting in neural networks\",\n        \"SNAP Datasets: Stanford large network dataset collection\",\n        \"Overcoming catastrophic forgetting in graph neural networks\",\n        \"Lifelong learning for neural powered mixed integer programming\",\n        \"Gcomb: Learning budget-constrained combinatorial algorithms over billion-sized graphs\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"Graphreach: Position-aware graph neural network using reachability estimations\",\n        \"Continual lifelong learning with neural networks: A review\",\n        \"Geom-gcn: Geometric graph convolutional networks\",\n        \"Recipe for a General, Powerful, Scalable Graph Transformer\",\n        \"Greed: A neural framework for learning graph distance functions\",\n        \"On the unreasonable effectiveness of feature propagation in learning on graphs with missing node features\",\n        \"Collective classification in network data\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"Graph convolutional networks for graphs containing missing features\",\n        \"Arnetminer: extraction and mining of academic social networks\",\n        \"Unravelling the performance of physics-informed graph neural networks for dynamical systems\",\n        \"Meta-prod2vec: Product embeddings using side-information for recommendation\",\n        \"Graph Attention Networks\",\n        \"Digress: Discrete denoising diffusion for graph generation\",\n        \"Lifelong graph learning\",\n        \"Streaming graph neural networks via continual learning\",\n        \"Towards open-world feature extrapolation: An inductive graph learning approach\",\n        \"Theoretical understandings of product embedding for e-commerce machine learning\",\n        \"How powerful are graph neural networks?\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Do transformers really perform badly for graph representation?\",\n        \"Graphrnn: Generating realistic graphs with deep auto-regressive models\",\n        \"Position-aware graph neural networks\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Grafenne: Learning on Graphs with Heterogeneous and Dynamic Feature Sets, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}