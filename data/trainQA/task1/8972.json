{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Reduced Precision Floating-Point Optimization for Deep Neural Network On-Device Learning on MicroControllers\n\nPaper Abstract: Abstract Enabling On-Device Learning (ODL) for Ultra-Low-Power Micro-Controller Units (MCUs) is a key step for post-deployment adaptation and fine-tuning of Deep Neural Network (DNN) models in future TinyML applications. This paper tackles this challenge by introducing a novel reduced precision optimization technique for ODL primitives on MCU-class devices, leveraging the State-of-Art advancements in RISC-V RV32 architectures with support for vectorized 16-bit floating-point (FP16) Single-Instruction Multiple-Data (SIMD) operations. Our approach for the Forward and Backward steps of the Back-Propagation training algorithm is composed of specialized shape transform operators and Matrix Multiplication (MM) kernels, accelerated with parallelization and loop unrolling. When evaluated on a single training step of a 2D Convolution layer, the SIMD-optimized FP16 primitives result up to 1.72×\\times faster than the FP32 baseline on a RISC-V-based 8+1-core MCU. An average computing efficiency of 3.11 Multiply and Accumulate operations per clock cycle (MAC/clk) and 0.81 MAC/clk is measured for the end-to-end training tasks of a ResNet8 and a DS-CNN for Image Classification and Keyword Spotting, respectively – requiring 17.1 ms and 6.4 ms on the target platform to compute a training step on a single sample. Overall, our approach results more than two orders of magnitude faster than existing ODL software frameworks for single-core MCUs and outperforms by 1.6 ×\\times previous FP32 parallel implementations on a Continual Learning setup.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Machine learning at the network edge: A survey\",\n        \"Deep learning for edge computing applications: A state-of-the-art survey\",\n        \"512kib ram is enough! live camera face recognition dnn on mcu\",\n        \"Tiny-PULP-Dronets: Squeezing Neural Networks for Faster and Lighter Inference on Multi-Tasking Autonomous Nano-Drones\",\n        \"Accelerating rnn-based speech enhancement on a multi-core mcu with mixed fp16-int8 post-training quantization\",\n        \"Robust real-time embedded emg recognition framework using temporal convolutional networks on a multicore iot processor\",\n        \"Ultra-low energy pest detection for smart agriculture\",\n        \"Benchmarking tinyml systems: Challenges and direction\",\n        \"Concrete problems in ai safety\",\n        \"A survey of transfer learning\",\n        \"A continual learning survey: Defying forgetting in classification tasks\",\n        \"Federated optimization: Distributed machine learning for on-device intelligence\",\n        \"TinyOL: TinyML with Online-Learning on Microcontrollers\",\n        \"On-device training under 256kb memory\",\n        \"CMSIS-NN: Efficient Neural Network Kernels for Arm Cortex-M CPUs\",\n        \"Vega: A Ten-Core SoC for IoT Endnodes With DNN Acceleration and Cognitive Wake-Up From MRAM-Based State-Retentive Sleep Mode\",\n        \"Distributed low precision training without mixed precision\",\n        \"A study of bfloat16 for deep learning training\",\n        \"Mixed precision training\",\n        \"Latent replay for real-time continual learning\",\n        \"On-device training of deep learning models on edge microcontrollers\",\n        \"TinyTL: Reduce Activations, Not Trainable Parameters for Efficient On-Device Learning\",\n        \"A tinyml platform for on-device continual learning with quantized latent replays\",\n        \"Train++: An incremental ml model training algorithm to create self-learning iot devices\",\n        \"Pocketnn: Integer-only training and inference of neural networks via direct feedback alignment and pocket activations in pure c++\",\n        \"Towards on-device domain adaptation for noise-robust keyword spotting\",\n        \"Comparison of two microcontroller boards for on-device model training in a keyword spotting task\",\n        \"On-device training of machine learning models on microcontrollers with federated learning\",\n        \"Aifes for arduino.\",\n        \"PULP-TrainLib: Enabling On-Device Training for RISC-V Multi-Core MCUs Through Performance-Driven Autotuning\",\n        \"Direct feedback alignment provides learning in deep neural networks\",\n        \"A survey of quantization methods for efficient neural network inference\",\n        \"A review of applications in federated learning\",\n        \"Federated learning in mobile edge networks: A comprehensive survey\",\n        \"7.7 lnpu: A 25.3tflops/w sparse deep-neural-network learning processor with fine-grained mixed precision of fp8-fp16\",\n        \"A low-power transprecision floating-point cluster for efficient near-sensor data analytics\",\n        \"Efficient processing of deep neural networks: A tutorial and survey\",\n        \"Accelerating matrix multiplication in deep learning by using low-rank approximation\",\n        \"Implementation of strassen’s algorithm for matrix multiplication\",\n        \"StrassenNets: Deep learning with a multiplication budget\",\n        \"A customizable matrix multiplication framework for the intel harpv2 xeon+fpga platform: A deep learning case study\",\n        \"High performance and energy efficient integer matrix multiplication for deep learning\",\n        \"Pulp-nn: A computing library for quantized neural network inference at the edge on risc-v based parallel ultra low power clusters\",\n        \"Energy-efficient dnn training processors on micro-ai systems\",\n        \"Dory: Automatic end-to-end deployment of real-world dnns on low-cost iot mcus\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Reduced Precision Floating-Point Optimization for Deep Neural Network On-Device Learning on MicroControllers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}