{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Achieving High Throughput and Elasticity in a Larger-than-Memory Store\n\nPaper Abstract: Abstract Millions of sensors, mobile applications and machines now generate billions of events. Specialized many-core key-value stores (KVSs) can ingest and index these events at high rates (over 100 Mops/s on one machine) if events are generated on the same machine; however, to be practical and cost-effective they must ingest events over the network and scale across cloud resources elastically. We present Shadowfax, a new distributed KVS based on FASTER, that transparently spans DRAM, SSDs, and cloud blob storage while serving 130 Mops/s/VM over commodity Azure VMs using conventional Linux TCP. Beyond high single-VM performance, Shadowfax uses a unique approach to distributed reconfiguration that avoids any server-side key ownership checks or cross-core coordination both during normal operation and migration. Hence, Shadowfax can shift load in 17 s to improve system throughput by 10 Mops/s with little disruption. Compared to the state-of-the-art, it has 8×\\times{} better throughput (than Seastar+memcached) and avoids costly I/O to move cold data during migration. On 12 machines, Shadowfax retains its high throughput to perform 930 Mops/s, which, to the best of our knowledge, is the highest reported throughput for a distributed KVS used for large-scale data ingestion and indexing.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Accelerated Networking\",\n        \"Apache Cassandra\",\n        \"Azure Blob storage\",\n        \"Azure HPC VMs\",\n        \"Azure Memory Optimized VMs\",\n        \"Intel Flow Director\",\n        \"IPoIB\",\n        \"Redis\",\n        \"Seastar Applications\",\n        \"Seastar Framework\",\n        \"Spark Streaming\",\n        \"YCSB Workloads\",\n        \"Slicer: Auto-sharding for datacenter applications\",\n        \"Reliable communication in the presence of failures\",\n        \"Trill: A high-performance incremental query processor for diverse analytics\",\n        \"Faster: A concurrent key-value store with in-place updates\",\n        \"Microsoft Azure: Planning, Deploying, and Managing Your Data Center in the Cloud, 1st ed.\",\n        \"Dynamo: Amazon’s highly available key-value store\",\n        \"Scalog: Seamless Reconfiguration and Total Order in a Scalable Shared Log\",\n        \"Farm: Fast remote memory\",\n        \"No compromises: distributed transactions with consistency, availability, and performance\",\n        \"Squall: Fine-grained live reconfiguration for partitioned main memory databases\",\n        \"Impossibility of Distributed Consensus with One Faulty Process\",\n        \"Practical lock-freedom\",\n        \"Leases: An Efficient Fault-Tolerant Mechanism for Distributed File Cache Consistency\",\n        \"Notes on Database Operating Systems\",\n        \"Wait-free synchronization\",\n        \"ZooKeeper: Wait-free Coordination for Internet-scale Systems\",\n        \"Using RDMA efficiently for key-value services\",\n        \"H-store: A High-performance, Distributed Main Memory Transaction Processing System\",\n        \"High performance packet processing with flexnic\",\n        \"Rocksteady: Fast migration for low-latency in-memory storage\",\n        \"Concurrent manipulation of binary search trees\",\n        \"Paxos Made Simple\",\n        \"Vertical Paxos and Primary-Backup Replication\",\n        \"High Performance Transactions in Deuteronomy\",\n        \"Multi-version Range Concurrency Control in Deuteronomy\",\n        \"The Bw-Tree: A B-tree for new hardware platforms\",\n        \"Indexing on Modern Hardware: Hekaton and Beyond\",\n        \"Kv-direct: High-performance in-memory key-value store with programmable nic\",\n        \"Architecting to achieve a billion requests per second throughput on a single key-value store server platform\",\n        \"Asynchronous Prefix Recoverability for Fast Distributed Stores\",\n        \"Read-copy update: Using execution history to solve concurrency problems\",\n        \"Safe Memory Reclamation for Dynamic Lock-free Objects Using Atomic Reads and Writes\",\n        \"Using One-Sided RDMA Reads to Build a Fast, CPU-Efficient Key-Value Store\",\n        \"Scaling Memcache at Facebook\",\n        \"Viewstamped replication: A new primary copy method to support highly-available distributed systems\",\n        \"In Search of an Understandable Consensus Algorithm\",\n        \"Fast Crash Recovery in RAMCloud\",\n        \"The ramcloud storage system\",\n        \"Floem: A programming system for nic-accelerated network applications\",\n        \"Concurrent Prefix Recovery: Performing CPR on a Database\",\n        \"Introducing CloudLab: Scientific infrastructure for advancing cloud architectures and applications\",\n        \"The voltdb main memory DBMS\",\n        \"Speedy transactions in multicore in-memory databases\",\n        \"Replication-driven live reconfiguration for fast distributed transaction processing\",\n        \"Anna: A kvs for any scale\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Achieving High Throughput and Elasticity in a Larger-than-Memory Store, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}