{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Power of MEME: Adversarial Malware Creation with Model-Based Reinforcement Learning\n\nPaper Abstract: Abstract Due to the proliferation of malware, defenders are increasingly turning to automation and machine learning as part of the malware detection toolchain. However, machine learning models are susceptible to adversarial attacks, requiring the testing of model and product robustness. Meanwhile, attackers also seek to automate malware generation and evasion of antivirus systems, and defenders try to gain insight into their methods. This work proposes a new algorithm that combines Malware Evasion and Model Extraction (MEME) attacks. MEME uses model-based reinforcement learning to adversarially modify Windows executable binary samples while simultaneously training a surrogate model with a high agreement with the target model to evade. To evaluate this method, we compare it with two state-of-the-art attacks in adversarial malware creation, using three well-known published models and one antivirus product as targets. Results show that MEME outperforms the state-of-the-art methods in terms of evasion capabilities in almost all cases, producing evasive malware with an evasion rate in the range of 32-73%. It also produces surrogate models with a prediction label agreement with the respective target models between 97-99%. The surrogate could be used to fine-tune and improve the evasion rate in the future.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optuna: A Next-generation Hyperparameter Optimization Framework\",\n        \"Learning to Evade Static PE Machine Learning Malware Models via Reinforcement Learning\",\n        \"EMBER: An Open Dataset for Training Static PE Malware Machine Learning Models\",\n        \"Algorithms for Hyper-Parameter Optimization\",\n        \"OpenAI Gym\",\n        \"Shallow Security: on the Creation of Adversarial Variants to Evade Machine Learning-Based Malware Detectors\",\n        \"Exploring connections between active learning and model extraction\",\n        \"Copycat CNN: Stealing Knowledge by Persuading Confession with Random Non-Labeled Data\",\n        \"Functionality-Preserving Black-Box Optimization of Adversarial Windows Malware\",\n        \"Adversarial exemples: A survey and experimental evaluation of practical attacks on machine learning for windows malware detection\",\n        \"Using Reinforcement Learning to Conceal Honeypot Functionality\",\n        \"DeepDetectNet vs RLAttackNet: An adversarial method to improve deep learning-based static malware detection model\",\n        \"Feature Selection for Malware Detection Based on Reinforcement Learning\",\n        \"Evading Anti-Malware Engines With Deep Reinforcement Learning\",\n        \"SOREL-20M: A Large Scale Benchmark Dataset for Malicious PE Detection\",\n        \"Generating Adversarial Malware Examples for Black-Box Attacks Based on GAN\",\n        \"Adaptive Honeypot Engagement Through Reinforcement Learning of Semi-Markov Decision Processes\",\n        \"AV-ATLAS - Malware & PUA\",\n        \"High Accuracy and High Fidelity Extraction of Neural Networks\",\n        \"LightGBM: A Highly Efficient Gradient Boosting Decision Tree\",\n        \"Model-Ensemble Trust-Region Policy Optimization\",\n        \"AIMED-RL: Exploring Adversarial Malware Examples with Reinforcement Learning\",\n        \"An IRL-based malware adversarial generation method to evade anti-malware engines\",\n        \"Adversarial attacks against Windows PE malware detection: A survey of the state-of-the-art\",\n        \"A Unified Approach to Interpreting Model Predictions\",\n        \"Deep Reinforcement Learning for Cyber Security\",\n        \"Knockoff Nets: Stealing Functionality of Black-Box Models\",\n        \"ActiveThief: Model Extraction Using Active Learning and Unannotated Public Data\",\n        \"Leveraging Reinforcement Learning and Generative Adversarial Networks to Craft Mutants of Windows Malware against Black-box Malware Detectors\",\n        \"MERLIN – Malware Evasion with Reinforcement LearnINg\",\n        \"Stable-Baselines3: Reliable Reinforcement Learning Implementations\",\n        \"Stealing and evading malware classifiers and antivirus at low false positive conditions\",\n        \"Generating End-to-End Adversarial Examples for Malware Classifiers Using Explainability\",\n        \"Towards Data-Free Model Stealing in a Hard Label Setting\",\n        \"Proximal policy optimization algorithms\",\n        \"2023 Antivirus Market Annual Report\",\n        \"Explanation-Guided Backdoor Poisoning Attacks Against Malware Classifiers\",\n        \"MAB-Malware: A Reinforcement Learning Framework for Blackbox Generation of Adversarial Malware\",\n        \"New Malware Is Born Every Minute\",\n        \"Reinforcement Learning, second edition: An Introduction\",\n        \"VirusTotal - Stats\",\n        \"Reinforcement Learning for IoT Security: A Comprehensive Survey\",\n        \"Enhancing Machine Learning Based Malware Detection Model by Reinforcement Learning\",\n        \"Reinforcement Learning for Attack Mitigation in SDN-enabled Networks\",\n        \"Cybercrime Specialization: An Exposé of a Malicious Android Obfuscation-as-a-Service\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in The Power of MEME: Adversarial Malware Creation with Model-Based Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}