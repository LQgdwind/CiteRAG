{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: EvoLearner: Learning Description Logics with Evolutionary Algorithms\n\nPaper Abstract: Abstract. Classifying nodes in knowledge graphs is an important task, e.g., for predicting missing types of entities, predicting which molecules cause cancer, or predicting which drugs are promising treatment candidates. While black-box models often achieve high predictive performance, they are only post-hoc and locally explainable and do not allow the learned model to be easily enriched with domain knowledge. Towards this end, learning description logic concepts from positive and negative examples has been proposed. However, learning such concepts often takes a long time and state-of-the-art approaches provide limited support for literal data values, although they are crucial for many applications. In this paper, we propose EvoLearner‚Äîan evolutionary approach to learn concepts in ùíú‚Äã‚Ñí‚Äãùíû‚Äãùí¨‚Äã(ùíü)ùíú‚Ñíùíûùí¨ùíü\\mathcal{ALCQ(D)}, which is the attributive language with complement (ùíú‚Äã‚Ñí‚Äãùíûùíú‚Ñíùíû\\mathcal{ALC}) paired with qualified cardinality restrictions (ùí¨ùí¨\\mathcal{Q}) and data properties (ùíüùíü\\mathcal{D}). We contribute a novel initialization method for the initial population: starting from positive examples, we perform biased random walks and translate them to description logic concepts. Moreover, we improve support for data properties by maximizing information gain when deciding where to split the data. We show that our approach significantly outperforms the state of the art on the benchmarking framework SML-Bench for structured machine learning. Our ablation study confirms that this is due to our novel initialization method and support for data properties.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DBpedia: A Nucleus for a Web of Open Data\",\n        \"Evolutionary computation 1: Basic algorithms and operators\",\n        \"A Refinement Operator for Description Logics\",\n        \"Inductive logic programming at 30: a new introduction\",\n        \"Convolutional Hypercomplex Embeddings for Link Prediction\",\n        \"Convolutional Complex Knowledge Graph Embeddings\",\n        \"DRILL- Deep Reinforcement Learning for Refinement Operators in ALC\",\n        \"Evolutionary concept learning in First Order Logic: An overview\",\n        \"A Comparative Study of Distributional and Symbolic Paradigms for Relational Learning\",\n        \"DL-FOIL Concept Learning in Description Logics\",\n        \"DLFoil: Class expression learning revisited\",\n        \"On the handling of continuous-valued attributes in decision tree generation\",\n        \"DEAP: evolutionary algorithms made easy\",\n        \"Biased random walks in complex networks: The role of local navigation rules\",\n        \"A Survey of Methods for Explaining Black Box Models\",\n        \"Vandalism Detection in Wikidata\",\n        \"Debiasing Vandalism Detection Models at Wikidata\",\n        \"Schema.org as a Description Logic\",\n        \"Knowledge Graphs\",\n        \"Genetic programming: On the programming of computers by means of natural selection\",\n        \"A Description Logic Primer\",\n        \"Owlready: Ontology-oriented programming in Python with automatic classification and high level constructs for biomedical ontologies\",\n        \"Hybrid Learning of Ontology Classes\",\n        \"DL-Learner: Learning Concepts in Description Logics\",\n        \"Class expression learning for ontology engineering\",\n        \"Concept learning in description logics using refinement operators\",\n        \"Computing Views of OWL Ontologies for the Semantic Web\",\n        \"A Comparison of Bloat Control Methods for Genetic Programming\",\n        \"Enabling Automatic Discovery and Querying of Web APIs at Web Scale using Linked Data Standards\",\n        \"NABU - Multilingual Graph-Based Neural RDF Verbalizer\",\n        \"Generating Explanations in Natural Language from Knowledge Graphs\",\n        \"Inductive Logic Programming\",\n        \"Inverse Entailment and Progol\",\n        \"Efficient Induction of Logic Programs\",\n        \"Meta-interpretive learning: application to grammatical inference\",\n        \"ProGolem: A System Based on Relative Minimal Generalisation\",\n        \"A Holistic Natural Language Generation Framework for the Semantic Web\",\n        \"Type Inference on Noisy RDF Data\",\n        \"Induction of Decision Trees\",\n        \"Evolution of logic programs: part-of-speech tagging\",\n        \"Automated Refinement of First-Order Horn-Clause Domain Theories\",\n        \"Class expression induction as concept space exploration: From DL-Foil to DL-Focl\",\n        \"Experience Using OWL DL for the Exchange of Biological Pathway Information\",\n        \"Maximal-entropy random walks in complex networks with limited information\",\n        \"Yago: a core of semantic knowledge\",\n        \"Unsupervised Discovery of Corroborative Paths for Fact Validation\",\n        \"An Approach to Parallel Class Expression Learning\",\n        \"Parallel Symmetric Class Expression Learning\",\n        \"Wikidata: a free collaborative knowledgebase\",\n        \"SML-Bench - A benchmarking framework for structured machine learning\",\n        \"Linking Services to Websites by Leveraging Semantic Data\",\n        \"ASSET: A Semi-supervised Approach for Entity Typing in Knowledge Graphs\",\n        \"Product Classification Using Microdata Annotations\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in EvoLearner: Learning Description Logics with Evolutionary Algorithms, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}