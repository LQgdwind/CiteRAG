{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: LEA: Improving Sentence Similarity Robustness to Typos Using Lexical Attention Bias\n\nPaper Abstract: Abstract. Textual noise, such as typos or abbreviations, is a well-known issue that penalizes vanilla Transformers for most downstream tasks. We show that this is also the case for sentence similarity, a fundamental task in multiple domains, e.g. matching, retrieval or paraphrasing. Sentence similarity can be approached using cross-encoders, where the two sentences are concatenated in the input allowing the model to exploit the inter-relations between them. Previous works addressing the noise issue mainly rely on data augmentation strategies, showing improved robustness when dealing with corrupted samples that are similar to the ones used for training. However, all these methods still suffer from the token distribution shift induced by typos. In this work, we propose to tackle textual noise by equipping cross-encoders with a novel LExical-aware Attention module (LEA) that incorporates lexical similarities between words in both sentences. By using raw text similarities, our approach avoids the tokenization shift problem obtaining improved robustness. We demonstrate that the attention bias introduced by LEA helps cross-encoders to tackle complex scenarios with textual noise, specially in domains with short-text descriptions and limited context. Experiments using three popular Transformer encoders in five e-commerce datasets for product matching show that LEA consistently boosts performance under the presence of noise, while remaining competitive on the original (clean) splits. We also evaluate our approach in two datasets for textual entailment and paraphrasing showing that LEA is robust to typos in domains with longer sentences and more natural context. Additionally, we thoroughly analyze several design choices in our approach, providing insights about the impact of the decisions made and fostering future research in cross-encoders dealing with typos.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Block-SCL: Blocking Matters for Supervised Contrastive Learning in Product Matching\",\n        \"MS MARCO: A Human Generated MAchine Reading COmprehension Dataset\",\n        \"DiffCSE: Difference-based Contrastive Learning for Sentence Embeddings\",\n        \"ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators\",\n        \"Pairwise Supervised Contrastive Learning of Sentence Representations\",\n        \"Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Framework for syntactic string similarity measures\",\n        \"SimCSE: Simple Contrastive Learning of Sentence Embeddings\",\n        \"Self-Attention Attribution: Interpreting Information Interactions Inside Transformer\",\n        \"Bros: A pre-trained language model focusing on text and layout for better key information extraction from documents\",\n        \"Poly-encoders: Architectures and Pre-training Strategies for Fast and Accurate Multi-sentence Scoring\",\n        \"Training on Synthetic Noise Improves Robustness to Natural Noise in Machine Translation\",\n        \"Baleen: Robust multi-hop reasoning at scale via condensed retrieval\",\n        \"Colbert: Efficient and effective passage search via contextualized late interaction over bert\",\n        \"Supervised Contrastive Learning\",\n        \"PARADE: Passage Representation Aggregation for Document Reranking\",\n        \"Deep Entity Matching with Pre-Trained Language Models\",\n        \"CAPE: Encoding relative positions with continuous augmented positional embeddings\",\n        \"Trans-Encoder: Unsupervised sentence-pair modelling through self-and mutual-distillations\",\n        \"Pre-Trained Language Model for Web-Scale Retrieval in Baidu Search\",\n        \"Evaluating the Robustness of Neural Language Models to Input Perturbations\",\n        \"Deep Learning for Entity Matching: A Design Space Exploration\",\n        \"SGPT: GPT Sentence Embeddings for Semantic Search\",\n        \"Passage Re-ranking with BERT\",\n        \"UNIPI-NLE at CheckThat! 2020: Approaching Fact Checking from a Sentence Similarity Perspective Through the Lens of Transformers\",\n        \"Supervised Contrastive Learning for Product Matching\",\n        \"Train Short, Test Long: Attention with Linear Biases Enables Input Length Extrapolation\",\n        \"The WDC Training Dataset and Gold Standard for Large-Scale Product Matching\",\n        \"Combating Adversarial Misspellings with Robust Word Recognition\",\n        \"BioCreative/OHNLP Challenge 2018\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Sentence-BERT: Sentence Embeddings using Siamese BERT-Networks\",\n        \"In Defense of Cross-Encoders for Zero-Shot Retrieval\",\n        \"Colbertv2: Effective and efficient retrieval via lightweight late interaction\",\n        \"Self-Attention with Relative Position Representations\",\n        \"Analysing the Robustness of Dual Encoders for Dense Retrieval Against Misspellings\",\n        \"Adv-BERT: BERT is not robust on misspellings! Generating nature adversarial samples on BERT\",\n        \"BERT-based similarity learning for product matching\",\n        \"Well-Read Students Learn Better: On the Importance of Pre-training Compact Models\",\n        \"Attention is all you need\",\n        \"GLUE: A Multi-Task Benchmark and Analysis Platform for Natural Language Understanding\",\n        \"The Case for Translation-Invariant Self-Attention in Transformer-Based Language Models\",\n        \"DA-Transformer: Distance-aware Transformer\",\n        \"Tableformer: Robust transformer modeling for table-text encoding\",\n        \"Dealing with Typos for BERT-based Passage Retrieval and Ranking\",\n        \"CharacterBERT and Self-Teaching for Improving the Robustness of Dense Retrievers on Queries with Typos\",\n        \"VIRT: Improving Representation-based Models for Text Matching through Virtual Interaction\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in LEA: Improving Sentence Similarity Robustness to Typos Using Lexical Attention Bias, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}