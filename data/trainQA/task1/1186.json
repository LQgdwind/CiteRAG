{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast Distributed Bandits for Online Recommendation Systems\n\nPaper Abstract: Abstract. Contextual bandit algorithms are commonly used in recommender systems, where content popularity can change rapidly. These algorithms continuously learn latent mappings between users and items, based on contexts associated with them both. Recent recommendation algorithms that learn clustering or social structures between users have exhibited higher recommendation accuracy. However, as the number of users and items in the environment increases, the time required to generate recommendations deteriorates significantly. As a result, these cannot be deployed in practice. The state-of-the-art distributed bandit algorithm - DCCB - relies on a peer-to-peer network to share information among distributed workers. However, this approach does not scale well with the increasing number of users. Furthermore, it suffers from slow discovery of clusters, resulting in accuracy degradation. To address the above issues, this paper proposes a novel distributed bandit-based algorithm called DistCLUB. This algorithm lazily creates clusters in a distributed manner, and dramatically reduces the network data sharing requirement, achieving high scalability. Additionally, DistCLUB finds clusters much faster, achieving better accuracy than the state-of-the-art algorithm. Evaluation over both real-world benchmarks and synthetic datasets shows that DistCLUB is on average 8.87x faster than DCCB, and achieves 14.5% higher normalized prediction performance.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Improved algorithms for linear stochastic bandits\",\n        \"Automated web usage data mining and recommendation system using K-Nearest Neighbor (KNN) classification method\",\n        \"Taming the monster: A fast and simple algorithm for contextual bandits\",\n        \"TiVo: making show recommendations using a distributed collaborative filtering architecture\",\n        \"Amazon EC2 C5 Instances\",\n        \"Using confidence bounds for exploitation-exploration trade-offs\",\n        \"Finite-time analysis of the multiarmed bandit problem\",\n        \"Autoencoders, unsupervised learning, and deep architectures\",\n        \"A personalized recommender system based on web usage mining and decision tree induction\",\n        \"Contextual bandits with linear payoff functions\",\n        \"Dask: Library for dynamic task scheduling\",\n        \"A survey on concept drift adaptation\",\n        \"Offline and online evaluation of news recommender systems at swissinfo. ch\",\n        \"Online clustering of bandits\",\n        \"Grouplens Datasets\",\n        \"A scalable P2P recommender system based on distributed collaborative filtering\",\n        \"Fast matrix factorization for online recommendation with implicit feedback\",\n        \"Distributed exploration in multi-armed bandits\",\n        \"Distributed clustering of linear bandits in peer to peer networks\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"Adaptive treatment allocation and the multi-armed bandit problem\",\n        \"MovieLens data sets\",\n        \"Bandit algorithms\",\n        \"A contextual-bandit approach to personalized news article recommendation\",\n        \"Collaborative filtering bandits\",\n        \"Deep Reinforcement Learning based Recommendation with Explicit User-Item Interactions Modeling\",\n        \"Explore, exploit, and explain: personalizing explainable recommendations with bandits\",\n        \"How retailers can keep up with consumers\",\n        \"Measuring Scaling Performance\",\n        \"Dynamic clustering of contextual multi-armed bandits\",\n        \"Content-based recommendation systems\",\n        \"K-nearest neighbor\",\n        \"Fast als-based matrix factorization for explicit and implicit feedback datasets\",\n        \"Beyond Incremental Processing: Tracking Concept Drift.\",\n        \"An MDP-Based Recommender System\",\n        \"Distributed online learning in social recommender systems\",\n        \"The problem of concept drift: definitions and related work\",\n        \"Collaborative deep learning for recommender systems\",\n        \"Improving content-based and hybrid music recommendation using deep learning\",\n        \"Graphx: A resilient distributed graph system on spark\",\n        \"Spark: Cluster computing with working sets\",\n        \"Apache spark: a unified engine for big data processing\",\n        \"Recommender systems using linear classifiers\",\n        \"Deep reinforcement learning for page-wise recommendations\",\n        \"A fast parallel SGD for matrix factorization in shared memory systems\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Fast Distributed Bandits for Online Recommendation Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}