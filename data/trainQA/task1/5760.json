{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Rows from Many Sources: Enriching row completions from Wikidata with a pre-trained Language Model\n\nPaper Abstract: Abstract. Row completion is the task of augmenting a given table of text and numbers with additional, relevant rows. The task divides into two steps: subject suggestion, the task of populating the main column; and gap filling, the task of populating the remaining columns. We present state-of-the-art results for subject suggestion and gap filling measured on a standard benchmark (WikiTables). Our idea is to solve this task by harmoniously combining knowledge base table interpretation and free text generation. We interpret the table using the knowledge base to suggest new rows and generate metadata like headers through property linking. To improve candidate diversity, we synthesize additional rows using free text generation via GPT-3, and crucially, we exploit the metadata we interpret to produce better prompts for text generation. Finally, we verify that the additional synthesized content can be linked to the knowledge base or a trusted web source such as Wikipedia.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DBpedia: A nucleus for a web of open data\",\n        \"TabEL: Entity Linking in Web Tables\",\n        \"Enriching word vectors with subword information\",\n        \"Language models are few-shot learners\",\n        \"Evaluating Large Language Models Trained on Code\",\n        \"TURL: Table Understanding through Representation Learning\",\n        \"Top-k Entity Augmentation Using Consistent Set Covering\",\n        \"Bayesian sets\",\n        \"Answering table augmentation queries from unstructured lists on the web\",\n        \"Seisa: set expansion by iterative similarity aggregation\",\n        \"Language Models as Knowledge Bases: On Entity Representations, Storage Capacity, and Paraphrased Queries\",\n        \"TABBIE: Pretrained Representations of Tabular Data\",\n        \"Auto-Encoding Variational Bayes\",\n        \"Ontological modelling in Wikidata\",\n        \"A Two-Stage Masked LM Method for Term Set Expansion\",\n        \"Language Models as Fact Checkers?\",\n        \"PyTorch-BigGraph: A Large-scale Graph Embedding System\",\n        \"Isolation-Based Anomaly Detection\",\n        \"Pre-train, Prompt, and Predict: A Systematic Survey of Prompting Methods in Natural Language Processing\",\n        \"Generative Adversarial Active Learning for Unsupervised Outlier Detection\",\n        \"Building Top-k Consistent Results for Web Table Augmentation\",\n        \"Choosing Better Seeds for Entity Set Expansion by Leveraging Wikipedia Semantic Knowledge\",\n        \"Matching HTML Tables to DBpedia\",\n        \"Egoset: Exploiting word ego-networks and user-generated ontology for multifaceted set expansion\",\n        \"More like these growing entity classes from seeds\",\n        \"Setexpan: Corpus-based set expansion via context feature selection and rank ensemble\",\n        \"General Table Completion using a Bayesian Nonparametric Model\",\n        \"Wikidata: a free collaborative knowledgebase\",\n        \"Concept expansion using web tables\",\n        \"PatternRank+NN: A Ranking Framework Bringing User Behaviors into Entity Set Expansion from Web Search Queries\",\n        \"End-to-End Bootstrapping Neural Network for Entity Set Expansion.\",\n        \"Learning to Bootstrap for Entity Set Expansion\",\n        \"TaBERT: Pretraining for Joint Understanding of Textual and Tabular Data\",\n        \"Corpus-based Set Expansion with Lexical Features and Distributed Representations\",\n        \"Table2Vec: Neural Word and Entity Embeddings for Table Population and Retrieval\",\n        \"Entitables: Smart assistance for entity-focused tables\",\n        \"Auto-Completion for Data Cells in Relational Tables\",\n        \"Web Table Extraction, Retrieval, and Augmentation: A Survey\",\n        \"Generating Categories for Sets of Entities\",\n        \"Novel Entity Discovery from Web Tables\",\n        \"Entity Set Expansion via Knowledge Graphs\",\n        \"Empower Entity Set Expansion via Language Model Probing\",\n        \"A Joint Model for Entity Set Expansion and Attribute Extraction from Web Search Queries\",\n        \"XGBOD: Improving Supervised Outlier Detection with Unsupervised Representation Learning\",\n        \"LSCP: Locally Selective Combination in Parallel Outlier Ensembles\",\n        \"PyOD: A Python Toolbox for Scalable Outlier Detection\",\n        \"Entity Set Expansion with Meta Path in Knowledge Graph\",\n        \"Factual Probing Is [MASK]: Learning vs. Learning to Recall\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Rows from Many Sources: Enriching row completions from Wikidata with a pre-trained Language Model, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}