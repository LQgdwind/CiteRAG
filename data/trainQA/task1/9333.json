{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 5-Approximation for \"ERROR \\hh\"-Treewidth Essentially as Fast as \"ERROR \\hh\"-Deletion Parameterized by Solution Size\n\nPaper Abstract: Abstract The notion of \\hh\\hh\\hh-treewidth, where \\hh\\hh\\hh is a hereditary graph class, was recently introduced as a generalization of the treewidth of an undirected graph. Roughly speaking, a graph of \\hh\\hh\\hh-treewidth at most k𝑘k can be decomposed into (arbitrarily large) \\hh\\hh\\hh-subgraphs which interact only through vertex sets of size 𝒪​(k)𝒪𝑘\\mathcal{O}(k) which can be organized in a tree-like fashion. \\hh\\hh\\hh-treewidth can be used as a hybrid parameterization to develop fixed-parameter tractable algorithms for \\hh\\hh\\hh-deletion problems, which ask to find a minimum vertex set whose removal from a given graph G𝐺G turns it into a member of \\hh\\hh\\hh. The bottleneck in the current parameterized algorithms lies in the computation of suitable tree \\hh\\hh\\hh-decompositions. We present FPT approximation algorithms to compute tree \\hh\\hh\\hh-decompositions for hereditary and union-closed graph classes \\hh\\hh\\hh. Given a graph of ℋℋ\\mathcal{H}-treewidth k𝑘k, we can compute a 5-approximate tree ℋℋ\\mathcal{H}-decomposition in time f​(𝒪​(k))⋅n𝒪​(1)⋅𝑓𝒪𝑘superscript𝑛𝒪1f(\\mathcal{O}(k))\\cdot n^{\\mathcal{O}(1)} whenever ℋℋ\\mathcal{H}-deletion parameterized by solution size can be solved in time f​(k)⋅n𝒪​(1)⋅𝑓𝑘superscript𝑛𝒪1f(k)\\cdot n^{\\mathcal{O}(1)} for some function f​(k)≥2k𝑓𝑘superscript2𝑘f(k)\\geq 2^{k}. The current-best algorithms either achieve an approximation factor of k𝒪​(1)superscript𝑘𝒪1k^{\\mathcal{O}(1)} or construct optimal decompositions while suffering from non-uniformity with unknown parameter dependence. Using these decompositions, we obtain algorithms solving Odd Cycle Transversal in time 2𝒪​(k)⋅n𝒪​(1)⋅superscript2𝒪𝑘superscript𝑛𝒪12^{\\mathcal{O}(k)}\\cdot n^{\\mathcal{O}(1)} parameterized by 𝖻𝗂𝗉𝖺𝗋𝗍𝗂𝗍𝖾𝖻𝗂𝗉𝖺𝗋𝗍𝗂𝗍𝖾\\mathsf{bipartite}-treewidth and Vertex Planarization in time 2𝒪​(k​log⁡k)⋅n𝒪​(1)⋅superscript2𝒪𝑘𝑘superscript𝑛𝒪12^{\\mathcal{O}(k\\log k)}\\cdot n^{\\mathcal{O}(1)} parameterized by 𝗉𝗅𝖺𝗇𝖺𝗋𝗉𝗅𝖺𝗇𝖺𝗋\\mathsf{planar}-treewidth, showing that these can be as fast as the solution-size parameterizations and giving the first ETH-tight algorithms for parameterizations by hybrid width measures.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deleting, eliminating and decomposing to hereditary classes are all FPT-equivalent\",\n        \"Distance from triviality 2.0: Hybrid parameterizations\",\n        \"Complexity of finding embeddings in a k-tree\",\n        \"An improvement of reed’s treewidth approximation\",\n        \"Two short proofs concerning tree-decompositions\",\n        \"A linear-time algorithm for finding tree-decompositions of small treewidth\",\n        \"A partial k-arboretum of graphs with bounded treewidth\",\n        \"A ck​nsuperscript𝑐𝑘𝑛c^{k}n 5-approximation algorithm for treewidth\",\n        \"Efficient and constructive algorithms for the pathwidth and treewidth of graphs\",\n        \"Treewidth computations i. upper bounds\",\n        \"Treewidth computations II. lower bounds\",\n        \"Graph isomorphism parameterized by elimination distance to bounded degree\",\n        \"Fixed-parameter tractable distances to sparse graph classes\",\n        \"Fixed-parameter tractability of graph modification problems for hereditary properties\",\n        \"Linear recognition of almost interval graphs\",\n        \"Chordal editing is fixed-parameter tractable\",\n        \"Improved upper bounds for vertex cover\",\n        \"Graph Structure and Monadic Second-Order Logic - A Language-Theoretic Approach, volume 138 of Encyclopedia of mathematics and its applications\",\n        \"Parameterized Algorithms\",\n        \"Improved Bounds for the Excluded-Minor Approximation of Treedepth\",\n        \"The first parameterized algorithms and computational experiments challenge\",\n        \"The PACE 2017 Parameterized Algorithms and Computational Experiments Challenge: The Second Iteration\",\n        \"Graph Theory, 4th Edition, volume 173 of Graduate texts in mathematics\",\n        \"Fundamentals of Parameterized Complexity\",\n        \"Measuring what matters: A hybrid approach to dynamic programming with treewidth\",\n        \"Local search: Is brute-force avoidable?\",\n        \"Parameterized Complexity Theory\",\n        \"Clique-width: on the price of generality\",\n        \"Intractability of clique-width parameterizations\",\n        \"Almost optimal lower bounds for problems parameterized by clique-width\",\n        \"The parameterized complexity of local search for TSP, more refined\",\n        \"Local search for string problems: Brute-force is essentially optimal\",\n        \"FPT algorithms to compute the elimination distance to bipartite graphs and more\",\n        \"Vertex deletion parameterized by elimination distance and even less\",\n        \"A near-optimal planarization algorithm\",\n        \"Planarity allowing few error vertices in linear time\",\n        \"A single-exponential time 2-approximation algorithm for treewidth\",\n        \"An improved parameterized algorithm for treewidth\",\n        \"Known algorithms on graphs of bounded treewidth are probably optimal\",\n        \"Four shorts stories on surprising algorithmic uses of treewidth\",\n        \"Obtaining a planar graph by vertex deletion\",\n        \"Sparsity - Graphs, Structures, and Algorithms, volume 28 of Algorithms and combinatorics\",\n        \"Approximating clique-width and branch-width\",\n        \"A tight lower bound for vertex planarization on graphs of bounded treewidth\",\n        \"Finding approximate separators and computing tree width quickly\",\n        \"Finding odd cycle transversals\",\n        \"Graph minors XIII. The disjoint paths problem\",\n        \"Graph minors. II. algorithmic aspects of tree-width\",\n        \"Graph minors. IV. Tree-width and well-quasi-ordering\",\n        \"Fixed-treewidth-efficient algorithms for edge-deletion to interval graph classes\",\n        \"Combinatorial Optimization - Polyhedra and Efficiency\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in 5-Approximation for \\\"ERROR \\\\hh\\\"-Treewidth Essentially as Fast as \\\"ERROR \\\\hh\\\"-Deletion Parameterized by Solution Size, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}