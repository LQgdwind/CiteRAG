{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 63 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RAPIDx: High-performance ReRAM Processing in-Memory Accelerator for Sequence Alignment\n\nPaper Abstract: Abstract Genome sequence alignment is the core of many biological applications. The advancement of sequencing technologies produces a tremendous amount of data, making sequence alignment a critical bottleneck in bioinformatics analysis. The existing hardware accelerators for alignment suffer from limited on-chip memory, costly data movement, and poorly optimized alignment algorithms. They cannot afford to concurrently process the massive amount of data generated by sequencing machines. In this paper, we propose a ReRAM-based accelerator, RAPIDx, using processing in-memory (PIM) for sequence alignment. RAPIDx achieves superior efficiency and performance via software-hardware co-design. First, we propose an adaptive banded parallelism alignment algorithm suitable for PIM architecture. Compared to the original dynamic programming-based alignment, the proposed algorithm significantly reduces the required complexity, data bit width, and memory footprint at the cost of negligible accuracy degradation. Then we propose the efficient PIM architecture that implements the proposed algorithm. The data flow in RAPIDx achieves four-level parallelism and we design an in-situ alignment computation flow in ReRAM, delivering 5.55.55.5-9.7×9.7\\times efficiency and throughput improvements compared to our previous PIM design, RAPID. The proposed RAPIDx is reconfigurable to serve as a co-processor integrated into the existing genome analysis pipeline to boost sequence alignment or edit distance calculation. On short-read alignment, RAPIDx delivers 131.1×131.1\\times and 46.8×46.8\\times throughput improvements over state-of-the-art CPU and GPU libraries, respectively. As compared to ASIC accelerators for long-read alignment, the performance of RAPIDx is 1.81.81.8-2.9×2.9\\times higher.\n\n{retrieved_text}\n\nGenerate exactly 63 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 63\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Dna sequencing: clinical applications of new dna sequencing technologies\",\n        \"Beast: Bayesian evolutionary analysis by sampling trees\",\n        \"Viral population analysis and minority-variant detection using short read next-generation sequencing\",\n        \"A general method applicable to the search for similarities in the amino acid sequence of two proteins\",\n        \"Identification of common molecular subsequences\",\n        \"Edlib: a c/c++ library for fast, exact sequence alignment using edit distance\",\n        \"Minimap2: pairwise alignment for nucleotide sequences\",\n        \"Gasal2: a gpu accelerated sequence alignment library for high-throughput ngs data\",\n        \"Fast and accurate long-read alignment with burrows–wheeler transform\",\n        \"Fast gapped-read alignment with bowtie 2\",\n        \"Adaptively banded smith-waterman algorithm for long reads and its hardware accelerator\",\n        \"Genasm: A high-performance, low-power approximate string matching acceleration framework for genome sequence analysis\",\n        \"Darwin: A genomics co-processor provides up to 15,000×\\\\times acceleration on long read assembly\",\n        \"Cudalign 4.0: Incremental speculative traceback for exact chromosome-wide alignment in gpu clusters\",\n        \"Leveraging fpgas for accelerating short read alignment\",\n        \"Dna sequencing costs: Data from the nhgri genome sequencing program (gsp)\",\n        \"Genbank and wgs statistics\",\n        \"Accurate circular consensus long-read sequencing improves variant detection and assembly of a human genome\",\n        \"Processing in memory: The terasys massively parallel pim array\",\n        \"Pim-enabled instructions: a low-overhead, locality-aware processing-in-memory architecture\",\n        \"Pinatubo: a processing-in-memory architecture for bulk bitwise operations in emerging non-volatile memories\",\n        \"Nnpim: A processing in-memory architecture for neural network acceleration\",\n        \"A resistive cam processing-in-storage architecture for dna sequence alignment\",\n        \"Bioseal: In-memory biological sequence alignment accelerator for large-scale genomic data\",\n        \"Radar: a 3d-reram based dna alignment accelerator architecture\",\n        \"Aligns: A processing-in-memory accelerator for dna short read alignment leveraging sot-mram\",\n        \"Aligner: A process-in-memory architecture for short read alignment in rerams\",\n        \"Rapid: A reram processing in-memory architecture for dna sequence alignment\",\n        \"Barking up the wrong treelength: the impact of gap penalty on alignment and tree accuracy\",\n        \"Seedex: A genome sequencing accelerator for optimal alignments in subminimal space\",\n        \"Aligning two sequences within a specified diagonal band\",\n        \"Felix: Fast and energy-efficient logic in memory\",\n        \"A block-sorting lossless data compression algorithm\",\n        \"A fast bit-vector algorithm for approximate string matching based on dynamic programming\",\n        \"Introducing difference recurrence relations for faster semi-global alignment of long sequences\",\n        \"Pim-aligner: A processing-in-mram platform for biological sequence alignment\",\n        \"Basic local alignment search tool\",\n        \"Rapid and sensitive protein similarity searches\",\n        \"Asap: Accelerated short-read alignment on programmable hardware\",\n        \"An improved algorithm for matching biological sequences\",\n        \"Bit parallel 6t sram in-memory computing with reconfigurable bit-precision\",\n        \"Emerging nvm: A survey on architectural integration and research challenges\",\n        \"Computing in memory with fefets\",\n        \"An embedded nand flash-based compute-in-memory array demonstrated in a standard logic process\",\n        \"A 22nm 4mb 8b-precision reram computing-in-memory macro with 11.91 to 195.7 tops/w for tiny ai edge devices\",\n        \"Logic design within memristive memories using memristor-aided logic (magic)\",\n        \"Memristive switches enable stateful logic operations via material implication\",\n        \"Memristive logic-in-memory integrated circuits for energy-efficient flexible electronics\",\n        \"Vteam: a general model for voltage-controlled memristors\",\n        \"Efficient algorithms for in-memory fixed point multiplication using magic\",\n        \"MAGIC – memristor-aided logic\",\n        \"Floatpim: In-memory acceleration of deep neural network training with high precision\",\n        \"Acceleration of nucleotide semi-global alignment with adaptive banded dynamic programming\",\n        \"Memristive devices for computing\",\n        \"Nvsim: A circuit-level performance, energy, and area model for emerging nonvolatile memory\",\n        \"Freepdk: An open-source variation-aware design kit\",\n        \"Cacti 6.0: A tool to model large caches\",\n        \"Genome reference consortium human build 38\",\n        \"Pbsim: Pacbio reads simulator—toward accurate genome assembly\",\n        \"Mason–a read simulator for second generation sequencing data\",\n        \"Medal: Scalable dimm based near data processing accelerator for dna seeding algorithm\",\n        \"Nb1-x o2 based universal selector with ultra-high endurance (>1012absentsuperscript1012>10^{12}), high speed (10ns) and excellent vth stability\",\n        \"Illumina sequencing platforms\"\n    ],\n    \"reasoning\": \"Selected these 63 references because they represent foundational work and recent advances in RAPIDx: High-performance ReRAM Processing in-Memory Accelerator for Sequence Alignment, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}