{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Transformer-based Planning for Symbolic Regression\n\nPaper Abstract: Abstract Symbolic regression (SR) is a challenging task in machine learning that involves finding a mathematical expression for a function based on its values. Recent advancements in SR have demonstrated the effectiveness of pre-trained transformer-based models in generating equations as sequences, leveraging large-scale pre-training on synthetic datasets and offering notable advantages in terms of inference time over classical Genetic Programming (GP) methods. However, these models primarily rely on supervised pre-training goals borrowed from text generation and overlook equation discovery objectives like accuracy and complexity. To address this, we propose TPSR, a Transformer-based Planning strategy for Symbolic Regression that incorporates Monte Carlo Tree Search into the transformer decoding process. Unlike conventional decoding strategies, TPSR enables the integration of non-differentiable feedback, such as fitting accuracy and complexity, as external sources of knowledge into the transformer-based equation generation process. Extensive experiments on various datasets show that our approach outperforms state-of-the-art methods, enhancing the modelâ€™s fitting-complexity trade-off, extrapolation abilities, and robustness to noise 111The codes are available at: https://github.com/deep-symbolic-mathematics/TPSR .\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Evolving symbolic density functionals\",\n        \"Symbolic regression in materials science\",\n        \"Data-driven discovery of partial differential equations\",\n        \"Data-driven identification of 2d partial differential equations using extracted physical features\",\n        \"Discovering governing equations from data by sparse identification of nonlinear dynamical systems\",\n        \"Discovering symbolic models from deep learning with inductive biases\",\n        \"Sparse identification of nonlinear dynamics for model predictive control in the low-data limit\",\n        \"Identification of parametric dynamical systems using integer programming\",\n        \"Rethinking symbolic regression datasets and benchmarks for scientific discovery\",\n        \"Symbolic regression is NP-hard\",\n        \"CoNSole: Convex neural symbolic learning\",\n        \"Distilling free-form natural laws from experimental data\",\n        \"Operon c++: An efficient genetic programming framework for symbolic regression\",\n        \"Deep symbolic regression: Recovering mathematical expressions from data via risk-seeking policy gradients\",\n        \"Attention is all you need\",\n        \"Neural symbolic regression that scales\",\n        \"Symbolicgpt: A generative transformer model for symbolic regression\",\n        \"End-to-end symbolic regression with transformers\",\n        \"Symformer: End-to-end symbolic regression using transformer-based architecture\",\n        \"Sequence transduction with recurrent neural networks\",\n        \"Sequence-to-sequence learning as beam-search optimization\",\n        \"Hierarchical neural story generation\",\n        \"Fast neural models for symbolic regression at scale\",\n        \"Discovering symbolic policies with deep reinforcement learning\",\n        \"Symbolic regression via deep reinforcement learning enhanced genetic programming seeding\",\n        \"Symbolic physics learner: Discovering governing equations via monte carlo tree search\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Language models are few-shot learners\",\n        \"CodeT5: Identifier-aware unified pre-trained encoder-decoder models for code understanding and generation\",\n        \"A unified framework for deep symbolic regression\",\n        \"Deep generative symbolic regression\",\n        \"To beam or not to beam: That is a question of cooperation for language GANs\",\n        \"Machine translation decoding beyond beam search\",\n        \"PPL-MCTS: Constrained textual generation through discriminator-guided MCTS decoding\",\n        \"Execution-guided neural program synthesis\",\n        \"Execution-based code generation using deep reinforcement learning\",\n        \"Planning with large language models for code generation\",\n        \"Deep learning for symbolic mathematics\",\n        \"Practical Methods of Optimization\",\n        \"Bandit based monte-carlo planning\",\n        \"A general reinforcement learning algorithm that masters chess, shogi, and go through self-play\",\n        \"Contemporary symbolic regression methods and their relative performance\",\n        \"Pmlb: a large benchmark suite for machine learning evaluation and comparison\",\n        \"Ai feynman 2.0: Pareto-optimal symbolic regression exploiting graph modularity\",\n        \"Inference of compact nonlinear dynamic models by epigenetic local search\",\n        \"Deep symbolic regression for recurrence prediction\",\n        \"XGBoost: A scalable tree boosting system\",\n        \"Deep generative symbolic regression with Monte-Carlo-tree-search\",\n        \"Greedy function approximation: A gradient boosting machine\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Transformer-based Planning for Symbolic Regression, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}