{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: PreRoutGNN for Timing Prediction with Order Preserving Partition: Global Circuit Pre-training, Local Delay Learning and Attentional Cell Modeling\n\nPaper Abstract: Abstract Pre-routing timing prediction has been recently studied for evaluating the quality of a candidate cell placement in chip design. It involves directly estimating the timing metrics for both pin-level (slack, slew) and edge-level (net delay, cell delay), without time-consuming routing. However, it often suffers from signal decay and error accumulation due to the long timing paths in large-scale industrial circuits. To address these challenges, we propose a two-stage approach. First, we propose global circuit training to pre-train a graph auto-encoder that learns the global graph embedding from circuit netlist. Second, we use a novel node updating scheme for message passing on GCN, following the topological sorting sequence of the learned graph embedding and circuit graph. This scheme residually models the local time delay between two adjacent pins in the updating sequence, and extracts the lookup table information inside each cell via a new attention mechanism. To handle large-scale circuits efficiently, we introduce an order preserving partition scheme that reduces memory consumption while maintaining the topological dependencies. Experiments on 21 real world circuits achieve a new SOTA R2superscriptùëÖ2R^{2} of 0.93 for slack prediction, which is significantly surpasses 0.59 by previous SOTA method. Code will be available at: https://github.com/Thinklab-SJTU/EDA-AI.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"OpenROAD: Toward a Self-Driving, Open-Source Digital Layout Implementation Tool Chain\",\n        \"Beit: Bert pre-training of image transformers\",\n        \"Machine learning-based pre-routing timing prediction with reduced pessimism\",\n        \"Language models are few-shot learners\",\n        \"Simple and deep graph convolutional networks\",\n        \"The Policy-gradient Placement and Generative Routing Neural Networks for Chip Design\",\n        \"On joint learning for solving placement and routing in chip design\",\n        \"Too Big to Fail? Active Few-Shot Learning Guided Logic Synthesis\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Hubrouter: Learning global routing via hub generation and pin-hub connection\",\n        \"Generalizable Cross-Graph Embedding for GNN-based Congestion Prediction\",\n        \"A timing engine inspired graph neural network model for pre-routing slack prediction\",\n        \"Algorithm AS 136: A k-means clustering algorithm\",\n        \"TAU 2015 contest on incremental timing analysis\",\n        \"TAU 2014 contest on removing common path pessimism during timing analysis\",\n        \"Strategies for pre-training graph neural networks\",\n        \"A software package for partitioning unstructured graphs, partitioning meshes, and computing fill-reducing orderings of sparse matrices\",\n        \"DeepSeq: Deep Sequential Circuit Learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Chipformer: Transferable chip placement via offline decision transformer\",\n        \"Maskplace: Fast chip placement via reinforced visual representation learning\",\n        \"Topological ordering of a list of randomly-numbered elements of a network\",\n        \"Deepgate: Learning neural representations of logic gates\",\n        \"DREAMPlace 4.0: Timing-driven global placement with momentum-based net weighting\",\n        \"Dreamplace: Deep learning toolkit-enabled gpu acceleration for modern vlsi placement\",\n        \"ePlace: Electrostatics-based placement using fast fourier transform and Nesterov‚Äôs method\",\n        \"Nerf: Representing scenes as neural radiance fields for view synthesis\",\n        \"A graph placement methodology for fast chip design\",\n        \"How do vision transformers work?\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Think locally, act globally: Highly balanced graph partitioning\",\n        \"Attention is all you need\",\n        \"Graph attention networks\",\n        \"LHNN: Lattice hypergraph neural network for VLSI congestion prediction\",\n        \"Deep graph library: A graph-centric, highly-performant package for graph neural networks\",\n        \"Anti-oversmoothing in deep vision transformers via the fourier domain analysis: From theory to practice\",\n        \"Difformer: Scalable (graph) transformers induced by energy constrained diffusion\",\n        \"Nodeformer: A scalable graph structure learning transformer for node classification\",\n        \"Simplifying and Empowering Transformers for Large-Graph Representations\",\n        \"RouteNet: Routability prediction for mixed-size designs using convolutional neural network\",\n        \"Net2: A graph attention network method customized for pre-placement net length estimation\",\n        \"How powerful are graph neural networks?\",\n        \"Pre-routing path delay estimation based on transformer and residual framework\",\n        \"Versatile Multi-stage Graph Neural Network for Circuit Representation\",\n        \"EasySO: Exploration-enhanced Reinforcement Learning for Logic Synthesis Sequence Optimization and a Comprehensive RL Environment\",\n        \"GraphGLOW: Universal and Generalizable Structure Learning for Graph Neural Networks\",\n        \"Heterogeneous Graph Neural Network-based Imitation Learning for Gate Sizing Acceleration\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in PreRoutGNN for Timing Prediction with Order Preserving Partition: Global Circuit Pre-training, Local Delay Learning and Attentional Cell Modeling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}