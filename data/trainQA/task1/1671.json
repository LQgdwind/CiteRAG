{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DuoBFT: Resilience vs. Performance Trade-off in Byzantine Fault Tolerance\n\nPaper Abstract: Abstract. This paper presents DuoBFT, a Byzantine fault-tolerant protocol that uses trusted components to provide commit decisions in the Hybrid fault model in addition to commit decisions in the BFT model. By doing so, it enables the clients to choose the response fault model for its commands. Internally, DuoBFT commits each client command under both the hybrid and Byzantine models, but since hybrid commits take fewer communication steps and use smaller quorums than BFT commits, clients can benefit from the low-latency commits in the hybrid model. DuoBFT uses a common view-change change protocol to handle both fault models. To achieve this, we enable a notion called Flexible Quorums in the hybrid fault model by revisiting the quorum intersection requirements in hybrid protocols. The flexible quorum technique enables having a hybrid view change quorum that is of the same size as a BFT view-change quorum. This paves a path for efficiently combining both the fault models within a single unified protocol. Our evaluation on a wide-area deployment reveal that DuoBFT can provide hybrid commits with 30% lower latency to existing protocols without sacrificing throughput. In absolute terms, DuoBFT provides sub-200-millisecond latency in a geographically replicated deployment.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Azure\",\n        \"gRPC\",\n        \"Sync HotStuff: Simple and Practical Synchronous State Machine Replication\",\n        \"BAR Fault Tolerance for Cooperative Services\",\n        \"Steward: Scaling Byzantine Fault-Tolerant Replication to Wide Area Networks\",\n        \"Scaling Byzantine Fault-Tolerant Replication to Wide Area Networks\",\n        \"ezBFT: Decentralizing Byzantine Fault-Tolerant State Machine Replication\",\n        \"State Machine Replication in the Libra Blockchain\",\n        \"FastPay: High-Performance Byzantine Fault Tolerant Settlement\",\n        \"Hybrids on Steroids: SGX-Based High Performance BFT\",\n        \"High-speed high-security signatures\",\n        \"Tendermint: Byzantine fault tolerance in the age of blockchains\",\n        \"Casper the Friendly Finality Gadget\",\n        \"Introduction to Reliable and Secure Distributed Programming (2. ed ed.)\",\n        \"Practical Byzantine Fault Tolerance\",\n        \"Practical Byzantine Fault Tolerance and Proactive Recovery\",\n        \"Attested Append-only Memory: Making Adversaries Stick to Their Word\",\n        \"On the (Limited) Power of Non-Equivocation\",\n        \"Intel SGX Explained\",\n        \"Resource-Efficient Byzantine Fault Tolerance\",\n        \"Scalable Byzantine Fault Tolerance on Heterogeneous Servers\",\n        \"Lazarus: Automatic Management of Diversity in BFT Systems\",\n        \"SBFT: A Scalable and Decentralized Trust Infrastructure\",\n        \"Protocol Buffers\",\n        \"Making Speculative BFT Resilient with Trusted Monotonic Counters\",\n        \"RCC: Resilient Concurrent Consensus for High-Throughput Secure Transaction Processing\",\n        \"ResilientDB: Global Scale Resilient Blockchain Fabric\",\n        \"Flexible Paxos: Quorum Intersection Revisited\",\n        \"The Elliptic Curve Digital Signature Algorithm (ECDSA)\",\n        \"CheapBFT: Resource-efficient Byzantine Fault Tolerance\",\n        \"Zyzzyva: Speculative Byzantine Fault Tolerance\",\n        \"The Byzantine Generals Problem\",\n        \"TrInc: Small Trusted Hardware for Large Distributed Systems\",\n        \"CIPHERLEAKS: Breaking Constant-time Cryptography on AMD SEV via the Ciphertext Side Channel\",\n        \"Scalable Byzantine Consensus via Hardware-Assisted Secret Sharing\",\n        \"XFT: Practical Fault Tolerance Beyond Crashes\",\n        \"Distributed Algorithms\",\n        \"Flexible Byzantine Fault Tolerance\",\n        \"Fast Byzantine Consensus\",\n        \"A Comparison Study of Intel SGX and AMD Memory Encryption Technology\",\n        \"Bitcoin: A peer-to-peer electronic cash system\",\n        \"Thunderella: Blockchains with Optimistic Instant Confirmation\",\n        \"Demystifying Arm TrustZone: A Comprehensive Survey\",\n        \"Mir-BFT: High-Throughput BFT for Blockchains\",\n        \"Threshold signatures for blockchain systems\",\n        \"SGAxe: How SGX Fails in Practice\",\n        \"CacheOut: Leaking Data on Intel CPUs via Cache Evictions\",\n        \"EBAWA: Efficient Byzantine Agreement for Wide-Area Networks\",\n        \"Efficient Byzantine Fault-Tolerance\",\n        \"Dispel: Byzantine SMR with Distributed Pipelining\",\n        \"HotStuff: BFT Consensus with Linearity and Responsiveness\",\n        \"Building Consistent Transactions with Inconsistent Replication\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in DuoBFT: Resilience vs. Performance Trade-off in Byzantine Fault Tolerance, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}