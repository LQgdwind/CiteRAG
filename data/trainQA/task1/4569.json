{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ifMixup: Interpolating Graph Pair to Regularize Graph Classification\n\nPaper Abstract: Abstract We present a simple and yet effective interpolation-based regularization technique, aiming to improve the generalization of Graph Neural Networks (GNNs) on supervised graph classification. We leverage Mixup (Zhang et al. 2018a), an effective regularizer for vision, where random sample pairs and their labels are interpolated to create synthetic images for training. Unlike images with grid-like coordinates, graphs have arbitrary structure and topology, which can be very sensitive to any modification that alters the graphâ€™s semantic meanings. This posts two unanswered questions for Mixup-like regularization schemes: Can we directly mix up a pair of graph inputs? If so, how well does such mixing strategy regularize the learning of GNNs? To answer these two questions, we propose ifMixup, which first adds dummy nodes to make two graphs have the same input size and then simultaneously performs linear interpolation between the aligned node feature vectors and the aligned edge representations of the two graphs. We empirically show that such simple mixing schema can effectively regularize the classification learning, resulting in superior predictive accuracy to popular graph augmentation and GNN methods.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On the Bottleneck of Graph Neural Networks and its Practical Implications\",\n        \"How Attentive are Graph Attention Networks?\",\n        \"Measuring and Relieving the Over-Smoothing Problem for Graph Neural Networks from the Topological View\",\n        \"FastGCN: Fast Learning with Graph Convolutional Networks via Importance Sampling\",\n        \"Data Augmentation for Deep Graph Learning: A Survey\",\n        \"Fast Graph Representation Learning with PyTorch Geometric\",\n        \"TS-Extractor: large graph exploration via subgraph extraction based on topological and semantic information\",\n        \"Neural Message Passing for Quantum Chemistry\",\n        \"Nonlinear Mixup: Out-Of-Manifold Data Augmentation for Text Classification\",\n        \"Augmenting Data with Mixup for Sentence Classification: An Empirical Study\",\n        \"MixUp as Locally Linear Out-of-Manifold Regularization\",\n        \"SoftEdge: Regularizing Graph Classification with Random Soft Edges\",\n        \"Inductive Representation Learning on Large Graphs\",\n        \"G-Mixup: Graph Data Augmentation for Graph Classification\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Open Graph Benchmark: Datasets for Machine Learning on Graphs\",\n        \"Strategies for Pre-training Graph Neural Networks\",\n        \"Adaptive Sampling towards Fast Graph Representation Learning\",\n        \"AptRank: an adaptive PageRank model for protein function prediction on bi-relational graphs\",\n        \"Augmenting NLP models using Latent Feature Interpolations\",\n        \"Puzzle Mix: Exploiting Saliency and Local Statistics for Optimal Mixup\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"DeepGCNs: Can GCNs Go as Deep as CNNs?\",\n        \"DeeperGCN: All You Need to Train Deeper GCNs\",\n        \"Deeper Insights Into Graph Convolutional Networks for Semi-Supervised Learning\",\n        \"Graph Rationalization with Environment-based Augmentations\",\n        \"TUDataset: A collection of benchmark datasets for learning with graphs\",\n        \"Graph Transplant: Node Saliency-Guided Graph Mixup with Local Structure Preservation\",\n        \"GCC: Graph Contrastive Coding for Graph Neural Network Pre-Training\",\n        \"DropEdge: Towards Deep Graph Convolutional Networks on Node Classification\",\n        \"Topological Regularization for Graph Neural Networks Augmentation\",\n        \"On Mixup Training: Improved Calibration and Predictive Uncertainty for Deep Neural Networks\",\n        \"Graph Attention Networks\",\n        \"Manifold Mixup: Encouraging Meaningful On-Manifold Interpolation as a Regularizer\",\n        \"GraphMix: Regularized Training of Graph Neural Networks for Semi-Supervised Learning\",\n        \"Adaptive Data Augmentation on Temporal Graphs\",\n        \"GraphCrop: Subgraph Cropping for Graph Classification\",\n        \"Mixup for Node and Graph Classification\",\n        \"NodeAug: Semi-Supervised Node Classification with Data Augmentation\",\n        \"A Comprehensive Survey on Graph Neural Networks\",\n        \"MoleculeNet: a benchmark for molecular machine learning\",\n        \"How Powerful are Graph Neural Networks?\",\n        \"Model-Agnostic Augmentation for Accurate Graph Classification\",\n        \"Graph Contrastive Learning with Augmentations\",\n        \"Understanding Deep Learning (Still) Requires Rethinking Generalization\",\n        \"Circuit-GNN: Graph Neural Networks for Distributed Circuit Design\",\n        \"mixup: Beyond Empirical Risk Minimization\",\n        \"Bayesian graph convolutional neural networks for semi-supervised classification\",\n        \"Graph Data Augmentation for Graph Machine Learning: A Survey\",\n        \"Data Augmentation for Graph Neural Networks\",\n        \"Data Augmentation for Graph Classification\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in ifMixup: Interpolating Graph Pair to Regularize Graph Classification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}