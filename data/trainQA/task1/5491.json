{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RACE: Retrieval-Augmented Commit Message Generation\n\nPaper Abstract: Abstract Commit messages are important for software development and maintenance. Many neural network-based approaches have been proposed and shown promising results on automatic commit message generation. However, the generated commit messages could be repetitive or redundant. In this paper, we propose RACE, a new retrieval-augmented neural commit message generation method, which treats the retrieved similar commit as an exemplar and leverages it to generate an accurate commit message. As the retrieved commit message may not always accurately describe the content/intent of the current code diff, we also propose an exemplar guider, which learns the semantic similarity between the retrieved and current code diff and then guides the generation of commit message based on the similarity. We conduct extensive experiments on a large public dataset with five programming languages. Experimental results show that RACE can outperform all baselines. Furthermore, RACE can boost the performance of existing Seq2Seq models in commit message generation. Our data and source code are available at https://github.com/DeepSoftwareAnalytics/RACE.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Apache lucene.\",\n        \"METEOR: an automatic metric for MT evaluation with improved correlation with human judgments.\",\n        \"Helping developers help themselves: Automatic decomposition of code review changesets.\",\n        \"Automatically documenting program changes.\",\n        \"On automatically generating commit messages via summarization of source code changes.\",\n        \"Untangling fine-grained code changes.\",\n        \"Fira: Fine-grained graph-based code change representation for automated commit message generation.\",\n        \"Is a single model enough? mucos: A multi-model ensemble learning approach for semantic code search.\",\n        \"Boa: a language and infrastructure for analyzing ultra-large-scale software repositories.\",\n        \"Codebert: A pre-trained model for programming and natural languages.\",\n        \"Deep code search.\",\n        \"Answering the call for a standard reliability measure for coding data.\",\n        \"Learning human-written commit messages to document code changes.\",\n        \"Mining version control system for automatically generating commit comment.\",\n        \"Automatically generating commit messages from diffs using neural machine translation.\",\n        \"Commitbert: Commit message generation using pre-trained programming language model.\",\n        \"The treatment of ties in ranking problems.\",\n        \"Retrieval-augmented generation for knowledge-intensive NLP tasks.\",\n        \"ROUGE: A package for automatic evaluation of summaries.\",\n        \"Generating commit messages from diffs using pointer-generator network.\",\n        \"ATOM: commit message generation based on abstract syntax tree and hybrid ranking.\",\n        \"Neural-machine-translation-based commit message generation: how far are we?\",\n        \"Decoupled weight decay regularization.\",\n        \"A neural architecture for generating natural language descriptions from source code changes.\",\n        \"Automatic generation of natural language summaries for java classes.\",\n        \"Coregen: Contextualized code representation learning for commit message generation.\",\n        \"The impact of test case summaries on bug fixing performance: an empirical investigation.\",\n        \"Learning to update natural language comments based on code changes.\",\n        \"Bleu: a method for automatic evaluation of machine translation.\",\n        \"On automatic summarization of what and why information in source code changes.\",\n        \"Enhancing semantic code search with multimodal contrastive learning and soft data augmentation.\",\n        \"On the evaluation of neural code summarization.\",\n        \"Cast: Enhancing code summarization with hierarchical splitting and reconstruction of abstract syntax trees.\",\n        \"On the evaluation of commit message generation models: An experimental study.\",\n        \"Attention is all you need.\",\n        \"Cider: Consensus-based image description evaluation.\",\n        \"Context-aware retrieval-based deep commit message generation.\",\n        \"Cocogum: Contextual code summarization with multi-relational gnn on umls.\",\n        \"Codet5: Identifier-aware unified pre-trained encoder-decoder models for code understanding and generation.\",\n        \"Retrieve and refine: exemplar-based neural comment generation.\",\n        \"Critical values and probability levels for the wilcoxon rank sum test and the wilcoxon signed rank test.\",\n        \"Commit message generation for source code changes.\",\n        \"Improving query representations for dense retrieval with pseudo relevance feedback.\",\n        \"Retrieval-based neural source code summarization.\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in RACE: Retrieval-Augmented Commit Message Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}