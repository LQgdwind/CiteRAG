{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DeepRacing: Parameterized Trajectories for Autonomous Racing\n\nPaper Abstract: Abstract We consider the challenging problem of high speed autonomous racing in a realistic Formula One environment. DeepRacing is a novel end-to-end framework, and a virtual testbed for training and evaluating algorithms for autonomous racing. The virtual testbed is implemented using the realistic F1 series of video games, developed by Codemasters©, which many Formula One drivers use for training. This virtual testbed is released under an open-source license both as a standalone C++ API and as a binding to the popular Robot Operating System 2 (ROS2) framework. This open-source API allows anyone to use the high fidelity physics and photo-realistic capabilities of the F1 game as a simulator, and without hacking any game engine code. We use this framework to evaluate several neural network methodologies for autonomous racing. Specifically, we consider several fully end-to-end models that directly predict steering and acceleration commands for an autonomous race car as well as a model that predicts a list of waypoints to follow in the car’s local coordinate system, with the task of selecting a steering/throttle angle left to a classical control algorithm. We also present a novel method of autonomous racing by training a deep neural network to predict a parameterized representation of a trajectory rather than a list of waypoints. We evaluate these models performance in our open-source simulator and show that trajectory prediction far outperforms end-to-end driving. Additionally, we show that open-loop performance for an end-to-end model, i.e. root-mean-square error for a model’s predicted control values, does not necessarily correlate with increased driving performance in the closed-loop sense, i.e. actual ability to race around a track. Finally, we show that our proposed model of parameterized trajectory prediction outperforms both end-to-end control and waypoint prediction.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Global championship of driverless cars\",\n        \"Formula one esports series\",\n        \"Max verstappen trains using sim racing and shows incredible speed in both\",\n        \"Tesla car that crashed and killed driver was running on autopilot, firm says\",\n        \"An lstm network for highway trajectory prediction\",\n        \"An optimal-control-based framework for trajectory planning, threat assessment, and semi-autonomous control of passenger vehicles in hazard avoidance scenarios\",\n        \"Chauffeurnet: Learning to drive by imitating the best and synthesizing the worst\",\n        \"Autonovi: Autonomous vehicle planning with dynamic maneuvers and traffic constraints\",\n        \"End to end learning for self-driving cars\",\n        \"Explaining how a deep neural network trained with end-to-end learning steers a car\",\n        \"Udacity self-driving car simulator\",\n        \"The DARPA urban challenge: autonomous vehicles in city traffic, volume 56\",\n        \"Deepdriving: Learning affordance for direct perception in autonomous driving\",\n        \"Learning by cheating\",\n        \"Learning end-to-end autonomous steering model from spatial and temporal visual cues\",\n        \"F1 2017 d-box and udp output specification\",\n        \"Carla: An open urban driving simulator\",\n        \"vjoy\",\n        \"End-to-end deep learning for steering autonomous vehicles considering temporal dependencies\",\n        \"Going deeper: Autonomous steering with neural memory networks\",\n        \"Path planning of unmanned aerial vehicles using b-splines and particle swarm optimization\",\n        \"Learning to forget: Continual prediction with lstm\",\n        \"Visuomotor transformation in the fly gaze stabilization system\",\n        \"Computer vision for autonomous vehicles: Problems, datasets and state-of-the-art\",\n        \"Driving in the matrix: Can virtual worlds replace human-generated annotations for real world tasks?\",\n        \"Real-time motion planning methods for autonomous on-road driving: State-of-the-art and future research directions\",\n        \"Supervised learning for autonomous driving\",\n        \"Probabilistic vehicle trajectory prediction over occupancy grid map via recurrent neural network\",\n        \"Learning a cnn-based end-to-end controller for a formula sae racecar\",\n        \"Real-time trajectory generation for the cooperative path planning of multi-vehicle systems\",\n        \"Planning long dynamically feasible maneuvers for autonomous vehicles\",\n        \"Inside waymo’s secret world for training self-driving cars\",\n        \"Event-based vision meets deep learning on steering prediction for self-driving cars\",\n        \"High speed obstacle avoidance using monocular vision and reinforcement learning\",\n        \"End-to-end deep path planning and automatic emergency braking camera cocoon-based solution\",\n        \"Mathematics for Computer Graphics Applications: An Introduction to the Mathematics and Geometry of CAD/Cam, Geometric Modeling, Scientific Visualizati\",\n        \"Pure pursuit guidance and model predictive control of an autonomous underwater vehicle for cable/pipeline tracking\",\n        \"Virtual to real reinforcement learning for autonomous driving\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Perception, planning, control, and coordination for autonomous vehicles\",\n        \"End-to-end driving in a realistic racing game with deep reinforcement learning\",\n        \"Playing for data: Ground truth from computer games\",\n        \"A review of some pure-pursuit based path tracking techniques for control of autonomous vehicle\",\n        \"Learning a driving simulator\",\n        \"Autonomous emotorsports racing games: Emerging practices as speculative fictions\",\n        \"Airsim: High-fidelity visual and physical simulation for autonomous vehicles\",\n        \"Self-driving uber car kills pedestrian in arizona, where robots roam\",\n        \"First results in robot road-following\",\n        \"Deepracing: A framework for agile autonomy\",\n        \"Torcs, the open racing car simulator\",\n        \"End-to-end learning of driving models from large-scale video datasets\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in DeepRacing: Parameterized Trajectories for Autonomous Racing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}