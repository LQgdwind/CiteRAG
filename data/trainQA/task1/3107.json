{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Abusing Cache Line Dirty States to Leak Information in Commercial Processors\n\nPaper Abstract: Abstract Caches have been used to construct various types of covert and side channels to leak information. Most existing cache channels exploit the timing difference between cache hits and cache misses. However, we introduce a new and broader classification of cache covert channel attacks: Hit+Miss, Hit+Hit, and Miss+Miss. We highlight that cache misses (or cache hits) for cache lines in different states may have more significant time differences, and these can be used as timing channels. Based on this classification, we propose a new stable and stealthy Miss+Miss cache channel. Write-back caches are widely deployed in modern processors. This paper presents in detail a way in which replacement latency differences can be used to construct timing-based channels (called WB channels) to leak information in a write-back cache. Any modification to a cache line by a sender will set it to the dirty state, and the receiver can observe this through measuring the latency of replacing this cache set. We also demonstrate how senders could exploit a different number of dirty cache lines in a cache set to improve transmission bandwidth with symbols encoding multiple bits. The peak transmission bandwidths of the WB channels in commercial systems can vary between 1300 and 4400 kbps per cache set in a hyper-threaded setting without shared memory between the sender and the receiver. In contrast to most existing cache channels, which always target specific memory addresses, the new WB channels focus on the cache set and cache line states, making it difficult for the channel to be disturbed by other processes on the core, and they can still work in a cache using a random replacement policy. We also analyzed the stealthiness of WB channels from the perspective of the number of cache loads and cache miss rates. We discuss and evaluate possible defenses. The paper finishes by discussing various forms of side-channel attack.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Performance Counters to Rescue: A Machine Learning based safeguard against Micro-architectural Side-Channel-Attacks\",\n        \"Port contention for fun and profit\",\n        \"Smotherspectre: Exploiting speculative execution through port contention\",\n        \"The gem5 simulator\",\n        \"Cache-collision timing attacks against AES\",\n        \"Software mitigations to hedge AES against cache-based software side channel vulnerabilities\",\n        \"Reload+refresh: Abusing cache replacement policies to perform stealthy cache attacks\",\n        \"Real time detection of cache-based side-channel attacks using hardware performance counters\",\n        \"BranchSpec : Information Leakage Attacks Exploiting Speculative Branch Instruction Executions\",\n        \"An energy-efficient l2 cache architecture using way tag information under write-through policy\",\n        \"Non-monopolizable caches: Low-complexity mitigation of cache side channel attacks\",\n        \"Jump over ASLR: Attacking branch predictors to bypass ASLR\",\n        \"BranchScope: A new side-channel attack on directional branch predictor\",\n        \"Defeating Cache Timing Channels with Hardware Prefetchers\",\n        \"Prefetch-guard: Leveraging hardware prefetches to defend against cache timing channels\",\n        \"Beitrag zur Kenntnis des Systems PdO/H2O\",\n        \"Prefetch Side-Channel Attacks: Bypassing SMAP and kernel ASLR\",\n        \"Flush+Flush: A fast and stealthy cache attack\",\n        \"Cache games - Bringing access-based cache attacks on AES to practice\",\n        \"Reducing timing channels with fuzzy time\",\n        \"DAWG: A defense against cache timing attacks in speculative execution processors\",\n        \"Spectre attacks: Exploiting speculative execution\",\n        \"Hardware-software integrated approaches to defend against software cache-based side channel attacks\",\n        \"Architecture for protecting critical secrets in microprocessors\",\n        \"Meltdown: Reading kernel memory from user space\",\n        \"Random Fill Cache Architecture\",\n        \"Last-level cache side-channel attacks are practical\",\n        \"Newcache: Secure cache architecture thwarting cache side-channel attacks\",\n        \"Methods and apparatus for implementing a pseudo-lru cache memory replacement scheme with a locking feature\",\n        \"Reverse Engineering Intel Last-Level Cache Complex Addressing Using Performance Counters\",\n        \"MemJam: A False Dependency Attack Against Constant-Time Crypto Implementations\",\n        \"A guided tour to approximate string matching\",\n        \"Cache attacks and countermeasures: the case of AES\",\n        \"Theoretical use of cache memory as a cryptanalytic side-channel\",\n        \"Cache missing for fun and profit\",\n        \"Trusted computer system evaluation criteria\",\n        \"CEASER: Mitigating conflict-based cache attacks via encrypted-Address and remapping\",\n        \"Cache Operations by MRU Change\",\n        \"Randomized Last-Level Caches Are Still Vulnerable to Cache Side-Channel Attacks ! But We Can Fix It\",\n        \"Efficient isolation of trusted subsystems in embedded systems\",\n        \"New cache designs for thwarting software cache-based side channel attacks\",\n        \"Leaking information through cache LRU states\",\n        \"Survey of Transient Execution Attacks\",\n        \"Attack directories, not caches: Side channel attacks in a non-inclusive world\",\n        \"Are Coherence Protocol States Vulnerable to Information Leakage?\",\n        \"FLUSH+RELOAD: A high resolution, low noise, L3 cache side-channel attack\",\n        \"CacheBleed: a timing attack on OpenSSL constant-time RSA\",\n        \"PAC-PLRU: A cache replacement policy to salvage discarded predictions from hardware prefetchers\",\n        \"Cloudradar: A real-time side-channel attack detection system in clouds\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Abusing Cache Line Dirty States to Leak Information in Commercial Processors, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}