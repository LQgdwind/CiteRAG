{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Instruction Block Movement with Coupled High-Level Program Sequencing\n\nPaper Abstract: Abstract. Efficiency in instruction fetching is critical to performance, and this requires the primary structures—L1 instruction caches (L1i), branch target buffers (BTB) and instruction TLBs (iTLB)—to have the requisite information when needed. This paper proposes a high-level program sequencing mechanism and a coupled technique for block movement, instruction presending, where instruction cache blocks, BTB entries, and iTLB entries are autonomously moved (or sent) from the secondary to the primary structures in a \"just in time\" fashion so that they are available when needed. Empirical results are presented to demonstrate the efficacy of the high-level sequencing mechanism and block movement. Presending is especially effective for benchmarks with a high base MPKI, where the movement of instruction blocks (and BTB/iTLB entries) from secondary to primary structures is frequent. Presending reduces the number of misses in primary structures by an order of magnitude as compared to state-of-the-art instruction prefetching schemes, in many cases, while allowing the processor to operate with small-sized primary BTBs. This reduction in misses results in performance improvements in cases where front-end efficiency is important.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hardware Support for Prescient Instruction Prefetch\",\n        \"The ibm z15 high frequency mainframe branch predictor industrial product\",\n        \"DBMSs on a modern processor: Where does time go?\",\n        \"Transparent control independence (TCI)\",\n        \"Call graph prefetching for database applications\",\n        \"Mana: Microarchitecting an instruction prefetcher\",\n        \"Divide and conquer frontend bottleneck\",\n        \"A Storage-Effective BTB Organization for Servers\",\n        \"Memory hierarchy for web search\",\n        \"Asmdb: understanding and mitigating front-end stalls in warehouse-scale computers\",\n        \"Two level bulk preload branch prediction\",\n        \"Predictor virtualization\",\n        \"Detailed characterization of a quad Pentium Pro server running TPC-D\",\n        \"A Characterization of the Effects of Software Instruction Prefetching on an Aggressive Front-end\",\n        \"Target prediction for indirect jumps\",\n        \"Instruction prefetching using branch prediction information\",\n        \"Skipper: a microarchitecture for exploiting control-flow independence\",\n        \"Proactive instruction fetch\",\n        \"Temporal instruction fetch streaming\",\n        \"Temporal ancestry prefetcher\",\n        \"Runjump-run: Bouquet of instruction pointer jumpers for high performance instruction prefetching\",\n        \"Prefetching in supercomputer instruction caches\",\n        \"Re-establishing fetch-directed instruction prefetching: An industry perspective\",\n        \"pTask: A smart prefetching scheme for OS intensive applications\",\n        \"Profiling a warehouse-scale computer\",\n        \"Confluence: unified instruction supply for scale-out servers\",\n        \"Performance characterization of a quad Pentium Pro SMP using OLTP workloads\",\n        \"RDIP: Return-address-stack directed instruction prefetching\",\n        \"Blasting through the front-end bottleneck with shotgun\",\n        \"Boomerang: A metadata-free architecture for control flow delivery\",\n        \"An analysis of database workload performance on simultaneous multithreaded processors\",\n        \"Cooperative prefetching: Compiler and hardware support for effective instruction prefetching in modern processors\",\n        \"Program optimization for instruction caches\",\n        \"An improved lookahead instruction prefetching\",\n        \"Control flow prediction for dynamic ILP processors\",\n        \"Code layout optimizations for transaction processing workloads\",\n        \"Fetch directed instruction prefetching\",\n        \"The entangling instruction prefetcher\",\n        \"A Cost-Effective Entangling Prefetcher for Instructions\",\n        \"Cache memories\",\n        \"Multiscalar processors\",\n        \"Pdede: Partitioned, deduplicated, delta branch target buffer\",\n        \"Effective instruction prefetching in chip multiprocessors for modern commercial applications\",\n        \"Branch history guided instruction prefetching\",\n        \"Softsku: Optimizing server architectures for microservice diversity@ scale\",\n        \"Morrigan: A composite instruction tlb prefetcher\",\n        \"Instruction prefetching of systems codes with layout optimized for reduced cache misses\",\n        \"Execution history guided instruction prefetching\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Instruction Block Movement with Coupled High-Level Program Sequencing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}