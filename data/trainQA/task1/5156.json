{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Cut query algorithms with star contraction\n\nPaper Abstract: We study the complexity of determining the edge connectivity of a simple graph with cut queries. We show that (i) there is a bounded-error randomized algorithm that computes edge connectivity with O‚Äã(n)ùëÇùëõO(n) cut queries, and (ii) there is a bounded-error quantum algorithm that computes edge connectivity with O~‚Äã(n)~ùëÇùëõ\\tilde{O}(\\sqrt{n}) cut queries. To prove these results we introduce a new technique, called star contraction, to randomly contract edges of a graph while preserving non-trivial minimum cuts. In star contraction vertices randomly contract an edge incident on a small set of randomly chosen ‚Äúcenter‚Äù vertices. In contrast to the related 2-out contraction technique of Ghaffari, Nowicki, and Thorup [SODA‚Äô20], star contraction only contracts vertex-disjoint star subgraphs, which allows it to be efficiently implemented via cut queries. The O‚Äã(n)ùëÇùëõO(n) bound from item (i) was not known even for the simpler problem of connectivity, and it improves the O‚Äã(n‚Äãlog3‚Å°n)ùëÇùëõsuperscript3ùëõO(n\\log^{3}n) upper bound by Rubinstein, Schramm, and Weinberg [ITCS‚Äô18]. The bound is tight under the reasonable conjecture that the randomized communication complexity of connectivity is Œ©‚Äã(n‚Äãlog‚Å°n)Œ©ùëõùëõ\\Omega(n\\log n), an open question since the seminal work of Babai, Frankl, and Simon [FOCS‚Äô86]. The bound also excludes using edge connectivity on simple graphs to prove a superlinear randomized query lower bound for minimizing a symmetric submodular function. The quantum algorithm from item (ii) gives a nearly-quadratic separation with the randomized complexity, and addresses an open question of Lee, Santha, and Zhang [SODA‚Äô21]. The algorithm can alternatively be viewed as computing the edge connectivity of a simple graph with O~‚Äã(n)~ùëÇùëõ\\tilde{O}(\\sqrt{n}) matrix-vector multiplication queries to its adjacency matrix. Finally, we demonstrate the use of star contraction outside of the cut query setting by designing a one-pass semi-streaming algorithm for computing edge connectivity in the complete vertex arrival setting. This contrasts with the edge arrival setting where two passes are required.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graph connectivity and single element recovery via linear and OR queries\",\n        \"A simple semi-streaming algorithm for global minimum cuts\",\n        \"Analyzing graph structure via linear measurements\",\n        \"On the query complexity of connectivity with global queries\",\n        \"Complexity classes in communication complexity theory\",\n        \"Edge estimation with independent set oracles\",\n        \"Quantum complexity theory\",\n        \"Independent sets in vertex-arrival streams\",\n        \"A deterministic algorithm for balanced cut with applications to dynamic connectivity, flows, and beyond\",\n        \"Quantum query complexity with matrix-vector products\",\n        \"Isolating cuts, (bi-)submodularity, and faster algorithms for connectivity\",\n        \"Negative moments of positive random variables\",\n        \"A quantum algorithm for finding the minimum\",\n        \"Multiplicative drift analysis\",\n        \"Probabilistic tools for the analysis of randomized optimization heuristics\",\n        \"Geometric rescaling algorithms for submodular function minimization\",\n        \"Reconstructing a Hamiltonian cycle by querying the graph: Application to DNA physical mapping\",\n        \"Optimal reconstruction of graphs under the additive model\",\n        \"Geometric Algorithms and Combinatorial Optimization, volume 2 of Algorithms and Combinatorics\",\n        \"Minimum cut in O‚Äã(m‚Äãlog2‚Å°n) time\",\n        \"Faster algorithms for edge connectivity via random 2-out contractions\",\n        \"New query lower bounds for submodular function minimization\",\n        \"Matchings, matroids and submodular functions\",\n        \"On the communication complexity of graph properties\",\n        \"Quantum and classical algorithms for approximate submodular function minimization\",\n        \"Local flow partitioning for faster edge connectivity\",\n        \"A combinatorial strongly polynomial algorithm for minimizing submodular functions\",\n        \"New bounds on the classical and quantum communication complexity of some graph properties\",\n        \"Minimizing convex functions with integral minimizers\",\n        \"Tight bounds for Lpsubscript samplers, finding duplicates in streams, and related problems\",\n        \"On randomized one-round communication complexity\",\n        \"Deterministic edge connectivity in near-linear time\",\n        \"On the cut dimension of a graph\",\n        \"Deterministic min-cut in poly-logarithmic max-flows\",\n        \"On the communication complexity of edge connectivity, 2021\",\n        \"A faster cutting plane method and its implications for combinatorial and convex optimization\",\n        \"Quantum algorithms for graph problems with cut queries\",\n        \"Submodular function minimization\",\n        \"Weighted min-cut: sequential, cut-query, and streaming algorithms\",\n        \"A note on isolating cut lemma for submodular function minimization\",\n        \"Asymptotic Eulerian expansions for binomial and negative binomial reciprocals\",\n        \"A linear-time algorithm for finding a sparse k-connected spanning subgraph of a k-connected graph\",\n        \"Dynamic spanning forest with worst-case update time: adaptive, Las Vegas, and O‚Äã(n1/2‚àíŒµ)-time\",\n        \"A faster strongly polynomial time algorithm for submodular function minimization\",\n        \"Approximating the exponential, the Lanczos method and an O~‚Äã(m)-time spectral algorithm for balanced separator\",\n        \"Minimizing symmetric submodular functions\",\n        \"On the ‚Äúlog rank‚Äù-conjecture in communication complexity\",\n        \"Computing exact minimum cuts without knowing the graph\",\n        \"Functional Analysis\",\n        \"A simple deterministic algorithm for edge connectivity\",\n        \"A combinatorial algorithm minimizing submodular functions in strongly polynomial time\",\n        \"A simple min-cut algorithm\",\n        \"Expander decomposition and pruning: Faster, stronger, and simpler\",\n        \"Querying a matrix through matrix-vector products\",\n        \"Fully-dynamic minimum spanning forest with improved worst-case update time\",\n        \"Intractability of min- and max-cut in streaming graphs\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Cut query algorithms with star contraction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}