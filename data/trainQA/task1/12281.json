{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 60 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Annotated Dependency Pair Framework for Almost-Sure Termination of Probabilistic Term Rewriting\n\nPaper Abstract: Abstract Dependency pairs are one of the most powerful techniques to analyze termination of term rewrite systems automatically. We adapt dependency pairs to the probabilistic setting and develop an annotated dependency pair framework for automatically proving almost-sure termination of probabilistic term rewrite systems, both for full and innermost rewriting. To evaluate its power, we implemented our framework in the tool AProVE.\n\n{retrieved_text}\n\nGenerate exactly 60 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 60\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Lexicographic ranking supermartingales: An efficient approach to termination of probabilistic programs\",\n        \"Formalizing the dependency pair criterion for innermost termination\",\n        \"Termination of term rewriting using dependency pairs\",\n        \"A collection of examples for termination of term rewriting using dependency pairs\",\n        \"On probabilistic term rewriting\",\n        \"A modular cost analysis for probabilistic programs\",\n        \"Term Rewriting and All That\",\n        \"A calculus for amortized expected runtimes\",\n        \"On probabilistic termination of functional programs with continuous distributions\",\n        \"CoLoR: a Coq library on well-founded rewrite relations and its application to the automated verification of termination certificates\",\n        \"Probabilistic rewrite strategies. applications to ELAN\",\n        \"Proving positive almost-sure termination\",\n        \"Termination analysis of probabilistic programs with martingales\",\n        \"Certification of automated termination proofs\",\n        \"Probabilistic termination by monadic affine sized typing\",\n        \"Intersection Types and (Positive) Almost-Sure Termination\",\n        \"Matrix interpretations for proving termination of term rewriting\",\n        \"Probabilistic termination: Soundness, completeness, and compositionality\",\n        \"Proving termination by dependency pairs and inductive theorem proving\",\n        \"Sparse tiling through overlap closures for termination of string rewriting\",\n        \"Verification of Erlang processes by dependency pairs\",\n        \"The dependency pair framework: Combining techniques for automated termination proofs\",\n        \"Mechanizing and improving dependency pairs\",\n        \"Analyzing program termination and complexity automatically with AProVE\",\n        \"The termination and complexity competition\",\n        \"Computing expected runtimes for constant probability programs\",\n        \"Probabilistic programming\",\n        \"Abstract relations between restricted termination and confluence properties of rewrite systems\",\n        \"Termination and confluence: properties of structured rewrite systems\",\n        \"MU-TERM: Verify termination properties automatically (system description)\",\n        \"Automating the dependency pair method\",\n        \"Tyrolean termination tool: Techniques and features\",\n        \"Modular verification for almost-sure termination of probabilistic programs\",\n        \"Weakest precondition reasoning for expected runtimes of randomized algorithms\",\n        \"Expected runtime analyis by program verification\",\n        \"Proving almost-sure innermost termination of probabilistic term rewriting using dependency pairs\",\n        \"From innermost to full almost-sure termination of probabilistic term rewriting\",\n        \"A complete dependency pair framework for almost-sure innermost termination of probabilistic term rewriting\",\n        \"A dependency pair framework for relative termination of term rewriting\",\n        \"Annotated dependency pairs for full almost-sure termination of probabilistic term rewriting\",\n        \"Tyrolean termination tool 2\",\n        \"A probabilistic PDL\",\n        \"On proving term rewriting systems are Noetherian\",\n        \"Automated expected amortised cost analysis of probabilistic data structures\",\n        \"Abstraction, Refinement and Proof for Probabilistic Systems\",\n        \"A new proof rule for almost-sure termination\",\n        \"Inferring expected runtimes of probabilistic integer programs using expected sizes\",\n        \"Automated termination analysis of polynomial probabilistic programs\",\n        \"Bounded expectations: Resource analysis for probabilistic programs\",\n        \"Personal communication, 2023\",\n        \"Analyzing innermost runtime complexity of term rewriting by dependency pairs\",\n        \"Non-termination in term rewriting and logic programming\",\n        \"A deductive verification infrastructure for probabilistic programs\",\n        \"Certification of termination proofs using CeTA\",\n        \"The DP Framework for Proving Termination of Term Rewriting\",\n        \"Termination problem data base, 0000\",\n        \"Modular and incremental automated termination proofs\",\n        \"Matchbox: A tool for match-bounded string rewriting\",\n        \"Raising expectations: Automating expected cost analysis with types\",\n        \"Nagoya Termination Tool\"\n    ],\n    \"reasoning\": \"Selected these 60 references because they represent foundational work and recent advances in The Annotated Dependency Pair Framework for Almost-Sure Termination of Probabilistic Term Rewriting, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}