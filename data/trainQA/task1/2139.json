{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 59 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Modularising Verification of Durable Opacity\n\nPaper Abstract: Abstract. Non-volatile memory (NVM), also known as persistent memory, is an emerging paradigm for memory that preserves its contents even after power loss. NVM is widely expected to become ubiquitous, and hardware architectures are already providing support for NVM programming. This has stimulated interest in the design of novel concepts ensuring correctness of concurrent programming abstractions in the face of persistency and in the development of associated verification approaches. Software transactional memory (STM) is a key programming abstraction that supports concurrent access to shared state. In a fashion similar to linearizability as the correctness condition for concurrent data structures, there is an established notion of correctness for STMs known as opacity. We have recently proposed durable opacity as the natural extension of opacity to a setting with non-volatile memory. Together with this novel correctness condition, we designed a verification technique based on refinement. In this paper, we extend this work in two directions. First, we develop a durably opaque version of NOrec (no ownership records), an existing STM algorithm proven to be opaque. Second, we modularise our existing verification approach by separating the proof of durability of memory accesses from the proof of opacity. For NOrec, this allows us to re-use an existing opacity proof and complement it with a proof of the durability of accesses to shared state.\n\n{retrieved_text}\n\nGenerate exactly 59 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 59\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Modularising opacity verification for hybrid transactional memory\",\n        \"Proving opacity via linearizability: A sound and complete method\",\n        \"Strict linearizability and the power of aborting\",\n        \"Safety of live transactions in transactional memory: TMS is necessary and sufficient\",\n        \"A critique of ansi sql isolation levels\",\n        \"Nonblocking persistent software transactional memory\",\n        \"Delay-free concurrency on faulty persistent memory\",\n        \"Defining and verifying durable opacity: Correctness for persistent software transactional memory\",\n        \"Verification of a durable opaque version of NOREC with KIV and PVS\",\n        \"View-based Owicki-Gries reasoning for persistent x86-TSO\",\n        \"Robust shared objects for non-volatile main memory\",\n        \"Verification of Crashsafe Caching in a Virtual File System Switch\",\n        \"Atlas: Leveraging locks for non-volatile memory consistency\",\n        \"Nv-heaps: making persistent objects fast and safe with next-generation, non-volatile memories\",\n        \"Romulus: Efficient algorithms for persistent transactional memory\",\n        \"Revamping hardware persistency models: view-based and axiomatic persistency models for Intel-x86 and Armv8\",\n        \"Refinement in Z and Object-Z - Foundations and Advanced Applications (2. ed.)\",\n        \"Verifying linearisability: A comparative survey\",\n        \"Proving opacity of a pessimistic STM\",\n        \"Verifying correctness of persistent concurrent data structures\",\n        \"Verifying correctness of persistent concurrent data structures: a sound and complete method\",\n        \"Transactional mutex locks\",\n        \"Verifying opacity of a transactional mutex lock\",\n        \"Towards formally specifying and verifying transactional memory\",\n        \"Data Refinement: Model-oriented Proof Theories and their Comparison\",\n        \"Transactional locking ii\",\n        \"NOrec: streamlining STM by abolishing ownership records\",\n        \"Dynamic performance tuning of word-based software transactional memory\",\n        \"A persistent lock-free queue for non-volatile memory\",\n        \"Mirror: making lock-free data structures persistent\",\n        \"On the correctness of transactional memory\",\n        \"Principles of Transactional Memory\",\n        \"Robust emulations of shared memory in a crash-recovery model\",\n        \"Pisces: a scalable and efficient persistent transactional memory\",\n        \"Transactional memory\",\n        \"Linearizability: A correctness condition for concurrent objects\",\n        \"Failure-atomic persistent memory updates via justdo logging\",\n        \"Linearizability of persistent memory objects under a full-system-crash failure model\",\n        \"Language-level persistency\",\n        \"Durable transactional memory can scale with timestone\",\n        \"How to make a multiprocessor computer that correctly executes multiprocess programs\",\n        \"A framework for formally verifying software transactional memory algorithms\",\n        \"Putting opacity in its place\",\n        \"Hierarchical correctness proofs for distributed algorithms\",\n        \"Forward and backward simulations\",\n        \"Distributed Algorithms\",\n        \"I/O Automata and beyond: Temporal logic and abstraction in Isabelle\",\n        \"Memory persistency\",\n        \"Modular verification of order-preserving write-back caches\",\n        \"Onefile: A wait-free persistent transactional memory\",\n        \"Persistent Owicki-Gries reasoning: a program logic for reasoning about persistent programs on Intel-x86\",\n        \"Persistency semantics of the Intel-x86 architecture\",\n        \"Weak persistency semantics from the ground up: Formalising the persistency semantics of ARMv8 and transactional models\",\n        \"Software & System Verification with KIV\",\n        \"Adding concurrency to a sequential refinement tower\",\n        \"RingSTM: scalable transactions with a single atomic instruction\",\n        \"Consistent and durable data structures for non-volatile byte-addressable memory\",\n        \"Mnemosyne: Lightweight persistent memory\",\n        \"Efficient lock-free durable sets\"\n    ],\n    \"reasoning\": \"Selected these 59 references because they represent foundational work and recent advances in Modularising Verification of Durable Opacity, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}