{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 67 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Two‚Äôs Company, Three‚Äôs a Crowd: Consensus-Halving for a Constant Number of Agents1footnote 11footnote 1A preliminary version of this paper appeared in the Proceedings of the 22nd ACM Conference on Economics and Computation (EC ‚Äô21).\n\nPaper Abstract: Abstract We consider the ŒµùúÄ\\varepsilon-Consensus-Halving problem, in which a set of heterogeneous agents aim at dividing a continuous resource into two (not necessarily contiguous) portions that all of them simultaneously consider to be of approximately the same value (up to ŒµùúÄ\\varepsilon). This problem was recently shown to be PPA-complete, for nùëõn agents and nùëõn cuts, even for very simple valuation functions. In a quest to understand the root of the complexity of the problem, we consider the setting where there is only a constant number of agents, and we consider both the computational complexity and the query complexity of the problem. For agents with monotone valuation functions, we show a dichotomy: for two agents the problem is polynomial-time solvable, whereas for three or more agents it becomes PPA-complete. Similarly, we show that for two monotone agents the problem can be solved with polynomially-many queries, whereas for three or more agents, we provide exponential query complexity lower bounds. These results are enabled via an interesting connection to a monotone Borsuk-Ulam problem, which may be of independent interest. For agents with general valuations, we show that the problem is PPA-complete and admits exponential query complexity lower bounds, even for two agents.\n\n{retrieved_text}\n\nGenerate exactly 67 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 67\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"2-D Tucker is PPA complete\",\n        \"Envy-free mechanisms with minimum number of cuts\",\n        \"Splitting necklaces\",\n        \"Efficient Splitting of Necklaces\",\n        \"The Borsuk-Ulam Theorem and Bisection of Necklaces\",\n        \"An improved envy-free cake cutting protocol for four agents\",\n        \"Sharing a cake\",\n        \"A discrete and bounded envy-free cake cutting protocol for any number of agents\",\n        \"A discrete and bounded envy-free cake cutting protocol for four agents\",\n        \"Simultaneous cake cutting\",\n        \"Fair cake division under monotone likelihood ratios\",\n        \"Strong approximate Consensus Halving and the Borsuk-Ulam theorem\",\n        \"The Relative Complexity of NP Search Problems\",\n        \"Dividing a graphical cake\",\n        \"Optimal proportional cake cutting with connected pieces\",\n        \"Cake cutting: Envy and truth\",\n        \"The price of connectivity in fair division\",\n        \"Drei S√§tze √ºber die n-dimensionale euklidische Sph√§re\",\n        \"Fair allocation of indivisible goods\",\n        \"Fair Division: From cake-cutting to dispute resolution\",\n        \"The query complexity of cake cutting\",\n        \"Communication complexity of cake cutting\",\n        \"An algorithmic framework for strategic fair division\",\n        \"Towards more expressive cake cutting\",\n        \"Matching algorithmic bounds for finding a Brouwer fixed point\",\n        \"Settling the complexity of computing two-player Nash equilibria\",\n        \"Optimal envy-free cake cutting\",\n        \"Continuous local search\",\n        \"The complexity of computing a Nash equilibrium\",\n        \"Computing exact solutions of consensus halving and the Borsuk-Ulam theorem\",\n        \"Constant inapproximability for PPA\",\n        \"Pizza sharing is PPA-hard\",\n        \"Discrete fixed points: Models, complexities, and applications\",\n        \"Algorithmic solutions for envy-free cake cutting\",\n        \"Mind the gap: Cake cutting with separation\",\n        \"On the complexity of Nash equilibria and other fixed points\",\n        \"The complexity of gradient descent: CLS = PPAD ‚à©\\\\cap PLS\",\n        \"Consensus Halving is PPA-complete\",\n        \"The Complexity of Splitting Necklaces and Bisecting Ham Sandwiches\",\n        \"Hardness Results for Consensus-Halving\",\n        \"Consensus-Halving: Does it Ever Get Easier?\",\n        \"A topological characterization of modulo-p arguments and implications for necklace splitting\",\n        \"Puzzle-math\",\n        \"Bisection of Circle Colorings\",\n        \"Contiguous cake cutting: Hardness results and approximation algorithms\",\n        \"Consensus halving for sets of items\",\n        \"A Sperner lemma complete for PPA\",\n        \"A moment problem in L1 approximation\",\n        \"Fair division of time: Multi-layered cake cutting\",\n        \"Measure partitions using hyperplanes with fixed directions\",\n        \"White-box vs. black-box complexity of search problems: Ramsey and graph property testing\",\n        \"How to cut a cake before the party ends\",\n        \"Using the Borsuk-Ulam theorem: lectures on topological methods in combinatorics and geometry\",\n        \"On total functions, existence theorems and computational complexity\",\n        \"Simplotopal maps and necklace splitting\",\n        \"Un th√©or√®me d‚Äôexistence\",\n        \"On the complexity of the parity argument and other inefficient proofs of existence\",\n        \"Cake cutting: Not just child‚Äôs play\",\n        \"Cake cutting algorithms\",\n        \"Approximating fair division with a limited number of cuts\",\n        \"Cake-cutting algorithms: Be fair if you can\",\n        \"Redividing the cake\",\n        \"Consensus-halving via theorems of Borsuk-Ulam and Tucker\",\n        \"Sur la division pragmatique\",\n        \"Rental harmony: Sperner‚Äôs lemma in fair division\",\n        \"Some topological properties of disk and sphere\",\n        \"On the complexity of cake cutting\"\n    ],\n    \"reasoning\": \"Selected these 67 references because they represent foundational work and recent advances in Two‚Äôs Company, Three‚Äôs a Crowd: Consensus-Halving for a Constant Number of Agents1footnote 11footnote 1A preliminary version of this paper appeared in the Proceedings of the 22nd ACM Conference on Economics and Computation (EC ‚Äô21)., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}