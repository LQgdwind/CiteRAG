{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Language models are weak learners\n\nPaper Abstract: Abstract A central notion in practical and theoretical machine learning is that of a weak learner, classifiers that achieve better-than-random performance (on any given distribution over data), even by a small margin. Such weak learners form the practical basis for canonical machine learning methods such as boosting. In this work, we illustrate that prompt-based large language models can operate effectively as said weak learners. Specifically, we illustrate the use of a large language model (LLM) as a weak learner in a boosting algorithm applied to tabular data. We show that by providing (properly sampled according to the distribution of interest) text descriptions of tabular data samples, LLMs can produce a summary of the samples that serves as a template for classification and achieves the aim of acting as a weak learner on this task. We incorporate these models into a boosting approach, which in some settings can leverage the knowledge within the LLM to outperform traditional tree-based boosting. The model outperforms both few-shot learning and occasionally even more involved fine-tuning procedures, particularly for tasks involving small numbers of data points. The results illustrate the potential for prompt-based LLMs to function not just as few-shot learners themselves, but as components of larger machine learning pipelines.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep neural networks and tabular data: A survey\",\n        \"Language models are few-shot learners\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"Prototypical verbalizer for prompt-based few-shot tuning\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Active prompting with chain-of-thought for large language models\",\n        \"Lift: Language-interfaced fine-tuning for non-language machine learning tasks\",\n        \"UCI machine learning repository, 2017\",\n        \"A decision-theoretic generalization of on-line learning and an application to boosting\",\n        \"Greedy function approximation: a gradient boosting machine\",\n        \"Stochastic gradient boosting\",\n        \"Revisiting deep learning models for tabular data\",\n        \"Language models can teach themselves to program better\",\n        \"Structured prompting: Scaling in-context learning to 1,000 examples\",\n        \"Tapas: Weakly supervised table parsing via pre-training\",\n        \"Large language models are reasoning teachers\",\n        \"Tabpfn: A transformer that solves small tabular classification problems in a second\",\n        \"Promptboosting: Black-box text classification with ten forward passes\",\n        \"Knowledgeable prompt-tuning: Incorporating knowledge into prompt verbalizer for text classification\",\n        \"Large language models can self-improve\",\n        \"Somerville happiness survey data set\",\n        \"Large language models are zero-shot reasoners\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"Solving quantitative reasoning problems with language models\",\n        \"Pre-train, prompt, and predict: A systematic survey of prompting methods in natural language processing\",\n        \"Gpt understands, too\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Can foundation models wrangle your data?\",\n        \"Introduction to HPC with MPI for Data Science\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Learning how to ask: Querying lms with mixtures of soft prompts\",\n        \"Can discrete information extraction prompts generalize across language models?\",\n        \"Prompt programming for large language models: Beyond the few-shot paradigm\",\n        \"Murmur: Modular multi-step reasoning for semi-structured data-to-text generation\",\n        \"Hopular: Modern hopfield networks for tabular data\",\n        \"The strength of weak learnability\",\n        \"Autoprompt: Eliciting knowledge from language models with automatically generated prompts\",\n        \"Tabular data: Deep learning is not all you need\",\n        \"Openml: networked science in machine learning\",\n        \"Attention is all you need\",\n        \"Automatic multi-label prompting: Simple and interpretable few-shot classification\",\n        \"Self-consistency improves chain of thought reasoning in language models\",\n        \"Learning to prompt for continual learning\",\n        \"Chain of thought prompting elicits reasoning in large language models\",\n        \"Tabert: Pretraining for joint understanding of textual and tabular data\",\n        \"Generate rather than retrieve: Large language models are strong context generators\",\n        \"Automatic chain of thought prompting in large language models\",\n        \"Teaching algorithmic reasoning via in-context learning\",\n        \"Large language models are human-level prompt engineers\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Language models are weak learners, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}