{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RISC-NN: Use RISC, NOT CISC as Neural Network Hardware Infrastructure\n\nPaper Abstract: Abstract Neural Networks (NN) have been proven to be powerful tools to analyze Big Data. However, traditional CPUs cannot achieve the desired performance and/or energy efficiency for NN applications. Therefore, numerous NN accelerators have been used or designed to meet these goals. These accelerators all fall into three categories: GPGPUs, ASIC NN Accelerators and CISC NN Accelerators. GPGPUs achieve general purpose and high computing throughput, but cannot provide desired energy efficiency because their stream architecture cannot achieve efficient data reuse required by NN applications. ASIC NN Accelerators achieve best performance or energy efficiency through advanced data reuse optimization, however, they only support limited NN use cases. CISC NN Accelerators aim to achieve both general purpose and high energy efficiency by decomposing NN applications into multiple relatively simple matrix or vector CISC instructions. Though CISC NN Accelerators can achieve considerable smaller memory footprint than GPGPU thus improve energy efficiency; they still fail to provide same level of data reuse optimization achieved by ASIC NN Accelerators because of the inherited poor pragrammability of their CISC architecture. We argue that, for NN Accelerators, RISC is a better design choice than CISC, as is the case with general purpose processors. We propose RISC-NN, a novel many-core RISC-based NN accelerator that achieves high expressiveness and high parallelism and features strong programmability and low control-hardware costs. We show that, RISC-NN can implement all the necessary instructions of state-of-the-art CISC NN Accelerators; in the meantime, RISC-NN manages to achieve advanced optimization such as multiple-level data reuse and support for Sparse NN applications which previously only existed in ASIC NN Accelerators. Experiment results show that, RISC-NN achieves on average 11.88×\\times performance efficiency compared with state-of-the-art Nvidia TITAN Xp GPGPU for various NN applications. RISC-NN also achieves on average 1.29×\\times, 8.37×\\times and 21.71×\\times performance efficiency over CISC-based TPU in CNN, MLP and LSTM applications, respectively. Finally, RISC-NN can achieve additional 26.05% performance improvement and 33.13% energy reduction after applying pruning for Sparse NN applications. Key Words: RISC, Neural Networks Accelerators, CISC, Many-Core\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"mlperf.\",\n        \"Nvidia-smi.\",\n        \"NVIDIA Titan Xp.\",\n        \"Power gating: Reducing pci express power consumption to mobile levels.\",\n        \"TensorFlow.\",\n        \"Connection autonomy in simd computers: A vlsi implementation.\",\n        \"Measuring advertisement effectiveness—a neural network approach.\",\n        \"Caffe: Convolutional Architecture for Fast Feature Embedding.\",\n        \"General-purpose computing on graphics processing units.\",\n        \"Cnvlutin: ineffectual-neuron-free deep neural network computing.\",\n        \"End to end learning for self-driving cars.\",\n        \"Massive Exploration of Neural Machine Translation Architectures.\",\n        \"Vibnn: Hardware acceleration of bayesian neural networks.\",\n        \"Diannao: A small-footprint high-throughput accelerator for ubiquitous machine-learning.\",\n        \"Dadiannao: A machine-learning supercomputer.\",\n        \"Eyeriss: A spatial architecture for energy-efficient dataflow for convolutional neural networks.\",\n        \"Permdnn: Efficient compressed dnn architecture with permuted diagonal matrices.\",\n        \"Tie: Energy-efficient tensor train-based inference engine for deep neural network.\",\n        \"NeuFlow: A runtime reconfigurable dataflow processor for vision.\",\n        \"Gap-8: A risc-v soc for ai at the edge of the iot.\",\n        \"Pulp-nn: A computing library for quantized neural network inference at the edge on risc-v based parallel ultra low power clusters.\",\n        \"Eie: efficient inference engine on compressed deep neural network.\",\n        \"Deep Compression: Compressing Deep Neural Networks with Pruning, Trained Quantization and Huffman Coding.\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification.\",\n        \"Ucnn: Exploiting computational reuse in deep neural networks via weight repetition.\",\n        \"Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups.\",\n        \"Effective use of word order for text categorization with convolutional neural networks.\",\n        \"In-datacenter performance analysis of a tensor processing unit.\",\n        \"Ramulator: A fast and extensible dram simulator.\",\n        \"Imagenet classification with deep convolutional neural networks.\",\n        \"Maeri: Enabling flexible dataflow mapping over dnn accelerators via reconfigurable interconnects.\",\n        \"Cambricon: An Instruction Set Architecture for Neural Networks.\",\n        \"FlexFlow: A Flexible Dataflow Accelerator Architecture for Convolutional Neural Networks.\",\n        \"Diffy: a déjà vu-free differential deep neural network accelerator.\",\n        \"Stream-dataflow acceleration.\",\n        \"Energy-efficient neural network accelerator based on outlier-aware low-precision computation.\",\n        \"Plasticine: A reconfigurable architecture for parallel patterns.\",\n        \"Minerva: Enabling low-power, highly-accurate deep neural network accelerators.\",\n        \"Isaac: A convolutional neural network accelerator with in-situ analog arithmetic in crossbars.\",\n        \"Laconic deep learning inference acceleration.\",\n        \"Maximizing cnn accelerator efficiency through resource partitioning.\",\n        \"Very deep convolutional networks for large-scale image recognition.\",\n        \"C-brain: A deep learning accelerator that tames the diversity of cnns through adaptive data-level parallelization.\",\n        \"Towards efficient microarchitectural design for accelerating unsupervised gan-based deep learning.\",\n        \"Going deeper with convolutions.\",\n        \"Attention is all you need.\",\n        \"Scaledeep: A scalable compute architecture for learning and evaluating deep networks.\",\n        \"Single-graph multiple flows: Energy efficient design alternative for gpgpus.\",\n        \"Cambricon-X: An accelerator for sparse neural networks.\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in RISC-NN: Use RISC, NOT CISC as Neural Network Hardware Infrastructure, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}