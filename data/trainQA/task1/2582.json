{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Self-Supervised Deep Graph Embedding with High-Order Information Fusion for Community Discovery\n\nPaper Abstract: Abstract Deep graph embedding is an important approach for community discovery. Deep graph neural network with self-supervised mechanism can obtain the low-dimensional embedding vectors of nodes from unlabeled and unstructured graph data. The high-order information of graph can provide more abundant structure information for the representation learning of nodes. However, most self-supervised graph neural networks only use adjacency matrix as the input topology information of graph and cannot obtain too high-order information since the number of layers of graph neural network is fairly limited. If there are too many layers, the phenomenon of over smoothing will appear. Therefore how to obtain and fuse high-order information of graph by a shallow graph neural network is an important problem. In this paper, a deep graph embedding algorithm with self-supervised mechanism for community discovery is proposed. The proposed algorithm uses self-supervised mechanism and different high-order information of graph to train multiple deep graph convolution neural networks. The outputs of multiple graph convolution neural networks are fused to extract the representations of nodes which include the attribute and structure information of a graph. In addition, data augmentation and negative sampling are introduced into the training process to facilitate the improvement of embedding result. The proposed algorithm and the comparison algorithms are conducted on the five experimental data sets. The experimental results show that the proposed algorithm outperforms the comparison algorithms on the most experimental data sets. The experimental results demonstrate that the proposed algorithm is an effective algorithm for community discovery.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Computational models for social network analysis: A brief survey\",\n        \"Deep learning for community detection: Progress, challenges and opportunities\",\n        \"Defining and evaluating network communities based on ground-truth\",\n        \"Sequential scenario-specific meta learner for online recommendation\",\n        \"Controllable multi-interest framework for recommendation\",\n        \"Iteratively learning embeddings and rules for knowledge graph reasoning\",\n        \"Integrating sequence and network information to enhance protein-protein interaction prediction using graph convolutional networks\",\n        \"A survey on network embedding\",\n        \"Nonlinear dimensionality reduction by locally linear embedding\",\n        \"Laplacian eigenmaps and spectral techniques for embedding and clustering\",\n        \"Learning the parts of objects by non-negative matrix factorization\",\n        \"Deep graph learning: Foundations, advances and applications\",\n        \"Netsmf: Large-scale network embedding as sparse matrix factorization\",\n        \"Flexible orthogonal neighborhood preserving embedding.\",\n        \"Arbitrary-order proximity preserved network embedding\",\n        \"Community preserving network embedding.\",\n        \"Noise-resilient similarity preserving network embedding for social networks.\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Deepwalk: Online learning of social representations\",\n        \"Line: Large-scale information network embedding\",\n        \"struc2vec: Learning node representations from structural identity\",\n        \"metapath2vec: Scalable representation learning for heterogeneous networks\",\n        \"Inductive and unsupervised representation learning on graph structured objects\",\n        \"Spine: Structural identity preserved inductive network embedding\",\n        \"Incorporating network embedding into markov random field for better community detection\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"A comprehensive survey on graph neural networks\",\n        \"How powerful are graph neural networks?\",\n        \"What graph neural networks cannot learn: depth vs width\",\n        \"Simple and deep graph convolutional networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"Convolutional kernel networks for graph-structured data\",\n        \"Graph representation learning via graphical mutual information maximization\",\n        \"Structural deep clustering network\",\n        \"On dropping clusters to regularize graph convolutional neural networks\",\n        \"Attributed graph clustering: A deep attentional embedding approach\",\n        \"One2multi graph autoencoder for multi-view graph clustering\",\n        \"Am-gcn: Adaptive multi-channel graph convolutional networks\",\n        \"Learning robust node representation on graphs\",\n        \"Self-supervised learning: Generative or contrastive\",\n        \"Gcc: Graph contrastive coding for graph neural network pre-training\",\n        \"Understanding negative sampling in graph representation learning\",\n        \"Dynamic relu\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Finding and evaluating community structure in networks\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Prone: Fast and scalable network representation learning\",\n        \"Introduction to The Theory of Machine Learning.\",\n        \"Deep autoencoder-like nonnegative matrix factorization for community detection\",\n        \"Deep gaussian embedding of graphs: Unsupervised inductive learning via ranking\",\n        \"Modularity-based sparse soft graph clustering\",\n        \"Deep graph infomax\",\n        \"Graph infoclust: Leveraging cluster-level node information for unsupervised graph representation learning\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Self-Supervised Deep Graph Embedding with High-Order Information Fusion for Community Discovery, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}