{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Modularizing while Training: A New Paradigm for Modularizing DNN Models\n\nPaper Abstract: Abstract. Deep neural network (DNN) models have become increasingly crucial components of intelligent software systems. However, training a DNN model is typically expensive in terms of both time and computational resources. To address this issue, recent research has focused on reusing existing DNN models - borrowing the concept of software reuse in software engineering. However, reusing an entire model could cause extra overhead or inherit the weaknesses from the undesired functionalities. Hence, existing work proposes to decompose an already trained model into modules, i.e., modularizing-after-training, to enable module reuse. Since the trained models are not built for modularization, modularizing-after-training may incur huge overhead and model accuracy loss. In this paper, we propose a novel approach that incorporates modularization into the model training process, i.e., modularizing-while-training (MwT). We train a model to be structurally modular through two loss functions that optimize intra-module cohesion and inter-module coupling. We have implemented the proposed approach for modularizing Convolutional Neural Network (CNN) models. The evaluation results on representative models demonstrate that MwT outperforms the existing state-of-the-art modularizing-after-training approach. Specifically, the accuracy loss caused by MwT is only 1.13 percentage points, which is less than that of the existing approach. The kernel retention rate of the modules generated by MwT is only 14.58%, with a reduction of 74.31% over the existing approach. Furthermore, the total time cost required for training and modularizing is only 108 minutes, which is half the time required by the existing approach. Our work demonstrates that MwT is a new and more effective paradigm for realizing DNN model modularization, offering a fresh perspective on achieving model reuse.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Object-oriented analysis and design with applications\",\n        \"ImageNet: A large-scale hierarchical image database\",\n        \"Hugging Face\",\n        \"fvcore\",\n        \"The Lottery Ticket Hypothesis: Finding Sparse, Trainable Neural Networks\",\n        \"Towards end-to-end speech recognition with recurrent neural networks\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Deep residual learning for image recognition\",\n        \"Densely connected convolutional networks\",\n        \"Deep transfer bug localization\",\n        \"Software Reuse: Architecture, Process and Organization for Business Success\",\n        \"Model-reuse attacks on deep learning systems\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Software reuse\",\n        \"Gradient-based learning applied to document recognition\",\n        \"A Light Bug Triage Framework for Applying Large Pre-trained Language Model\",\n        \"ModelDiff: Testing-Based DNN Similarity Comparison for Model Reuse Detection\",\n        \"Fine-pruning: Defending against backdooring attacks on deep neural networks\",\n        \"Measuring Discrimination to Boost Comparative Testing for Multiple Deep Learning Models\",\n        \"Are sixteen heads really better than one?\",\n        \"Reading digits in natural images with unsupervised feature learning\",\n        \"On decomposing a deep neural network into modules\",\n        \"Decomposing Convolutional Neural Networks into Reusable and Replaceable Modules\",\n        \"On the integration of self-attention and convolution\",\n        \"On the criteria to be used in decomposing systems into modules\",\n        \"On the design and development of program families\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Deepxplore: Automated whitebox testing of deep learning systems\",\n        \"Measuring Software Reuse: Principles, Practices, and Economic Models\",\n        \"MwT\",\n        \"Patching Weak Convolutional Neural Network Models through Modularization and Composition\",\n        \"Reusing Deep Neural Network Models through Model Re-engineering\",\n        \"DreamLoc: A deep relevance matching-based framework for bug localization\",\n        \"DeepArc: Modularizing Neural Networks for the Model Maintenance\",\n        \"On the predictability of pruning across scales\",\n        \"Compressing Pre-trained Models of Code into 3 MB\",\n        \"A survey on image data augmentation for deep learning\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"A grammar-based structural cnn decoder for code generation\",\n        \"Software development shifting to ‘assembly and integration’\",\n        \"Inception-v4, inception-resnet and the impact of residual connections on learning\",\n        \"Going deeper with convolutions\",\n        \"Towards real-world X-ray security inspection: A high-quality benchmark and lateral inhibition module for prohibited items detection\",\n        \"N degrees of separation: Multi-dimensional separation of concerns\",\n        \"Model recommendation: Generating object detectors from few samples\",\n        \"VulCNN: an image-inspired scalable vulnerability detection system\",\n        \"Oriented R-CNN for object detection\",\n        \"Convolutional neural networks: an overview and application in radiology\",\n        \"Graph convolutional networks for text classification\",\n        \"Dynamic slicing for deep neural networks\",\n        \"ReMoS: Reducing Defect Inheritance in Transfer Learning via Relevant Model Slicing\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Modularizing while Training: A New Paradigm for Modularizing DNN Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}