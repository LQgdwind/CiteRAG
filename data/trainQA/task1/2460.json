{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Match-Ignition: Plugging PageRank into Transformer for Long-form Text Matching\n\nPaper Abstract: Abstract. **footnotetext: Corresponding author Neural text matching models have been widely used in community question answering, information retrieval, and dialogue. However, these models designed for short texts cannot well address the long-form text matching problem, because there are many contexts in long-form texts can not be directly aligned with each other, and it is difficult for existing models to capture the key matching signals from such noisy data. Besides, these models are computationally expensive for simply use all textual data indiscriminately. To tackle the effectiveness and efficiency problem, we propose a novel hierarchical noise filtering model, namely Match-Ignition. The main idea is to plug the well-known PageRank algorithm into the Transformer, to identify and filter both sentence and word level noisy information in the matching process. Noisy sentences are usually easy to detect because previous work has shown that their similarity can be explicitly evaluated by the word overlapping, so we directly use PageRank to filter such information based on a sentence similarity graph. Unlike sentences, words rely on their contexts to express concrete meanings, so we propose to jointly learn the filtering and matching process, to well capture the critical word-level matching signals. Specifically, a word graph is first built based on the attention scores in each self-attention block of Transformer, and key words are then selected by applying PageRank on this graph. In this way, noisy words will be filtered out layer by layer in the matching process. Experimental results show that Match-Ignition outperforms both SOTA short text matching models and recent long-form text matching models. We also conduct detailed analysis to show that Match-Ignition efficiently captures important sentences and words, to facilitate the long-form text matching process.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Longformer: The Long-Document Transformer\",\n        \"Content-Based Citation Recommendation\",\n        \"Latent dirichlet allocation\",\n        \"The anatomy of a large-scale hypertextual Web search engine\",\n        \"On Identifiability in Transformers\",\n        \"Learning a similarity metric discriminatively, with application to face verification\",\n        \"Transformer-XL: Attentive Language Models beyond a Fixed-Length Context\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Modeling Diverse Relevance Patterns in Ad-Hoc Retrieval\",\n        \"Matchzoo: A toolkit for deep text matching\",\n        \"A deep relevance matching model for ad-hoc retrieval\",\n        \"A deep look into neural ranking models for information retrieval\",\n        \"Star-Transformer\",\n        \"Convolutional neural network architectures for matching natural language sentences\",\n        \"Learning deep structured semantic models for web search using clickthrough data\",\n        \"PACRR: A Position-Aware Neural IR Model for Relevance Matching\",\n        \"Semantic Text Matching for Long-Form Documents\",\n        \"Beyond greedy ranking: Slate optimization via List-CVAE\",\n        \"Adam: A method for stochastic optimization\",\n        \"Matching Article Pairs with Graphical Decomposition and Convolutions\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"S2ORC: The Semantic Scholar Open Research Corpus\",\n        \"A deep architecture for matching short texts\",\n        \"Textrank: Bringing order into text\",\n        \"Learning to match using local and distributed representations of text for web search\",\n        \"Deep sentence embedding using long short-term memory networks: Analysis and application to information retrieval\",\n        \"Text matching as image recognition\",\n        \"Deeprank: A new deep architecture for relevance ranking in information retrieval\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"Overview of the 5th international competition on plagiarism detection\",\n        \"The ACL anthology network corpus\",\n        \"Language models are unsupervised multitask learners\",\n        \"The Probabilistic Relevance Framework: BM25 and Beyond\",\n        \"The graph neural network model\",\n        \"A latent semantic model with convolutional-pooling structure for information retrieval\",\n        \"Long Range Arena: A Benchmark for Efficient Transformers\",\n        \"Attention is all you need\",\n        \"A deep architecture for semantic matching with multiple positional sentence representations\",\n        \"Match-srnn: Modeling the recursive matching structure with spatial rnn\",\n        \"Bilateral multi-perspective matching for natural language sentences\",\n        \"Beyond 512 Tokens: Siamese Multi-depth Transformer-based Hierarchical Encoder for Document Matching\",\n        \"Simple and Effective Text Matching with Richer Alignment Features\",\n        \"Hierarchical Attention Networks for Document Classification\",\n        \"Sparse Transformer: Concentrated Attention Through Explicit Selection\",\n        \"Multilevel Text Alignment with Cross-Document Attention\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Match-Ignition: Plugging PageRank into Transformer for Long-form Text Matching, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}