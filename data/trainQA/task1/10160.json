{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Kairos: Efficient Temporal Graph Analytics on a Single Machine\n\nPaper Abstract: Abstract. Many important societal problems are naturally modeled as algorithms over temporal graphs. To date, however, most graph processing systems remain inefficient as they rely on distributed processing even for graphs that fit well within a commodity serverâ€™s available storage. In this paper, we introduce Kairos, a temporal graph analytics system that provides application developers a framework for efficiently implementing and executing algorithms over temporal graphs on a single machine. Specifically, Kairos relies on fork-join parallelism and a highly optimized parallel data structure as core primitives to maximize performance of graph processing tasks needed for temporal graph analytics. Furthermore, we introduce the notion of selective indexing and show how it can be used with an efficient index to speedup temporal queries. Our experiments on a 24-core server show that our algorithms obtain good parallel speedups, and are significantly faster than equivalent algorithms in existing temporal graph processing systems: up to 60x against a shared-memory approach, and several orders of magnitude when compared with distributed processing of graphs that fit within a single server.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Temporal networks\",\n        \"Use of temporal contact graphs to understand the evolution of COVID-19 through contact tracing data\",\n        \"From networks to optimal higher-order models of complex systems\",\n        \"Temporal Graph Benchmark for Machine Learning on Temporal Graphs\",\n        \"An interval-centric model for distributed computing over temporal graphs\",\n        \"Tink: A Temporal Graph Analytics Library for Apache Flink\",\n        \"Distributed temporal graph analytics with GRADOOP\",\n        \"TeGraph: A Novel General-Purpose Temporal Graph Computing Engine\",\n        \"Graphs over time: densification laws, shrinking diameters and possible explanations\",\n        \"Chronograph: A Distributed Processing Platform for Online and Batch Computations on Event-Sourced Graphs\",\n        \"You Are What You Do: Hunting Stealthy Malware via Data Provenance Analysis.\",\n        \"ASTRO: Reducing COVID-19 Exposure through Contact Prediction and Avoidance\",\n        \"Towards Crowd-Aware Indoor Path Planning\",\n        \"Time-Dependent Hop Labeling on Road Network\",\n        \"Mining Bursting Core in Large Temporal Graphs\",\n        \"Scalable Time-Range k-Core Query on Temporal Graphs (Full Version)\",\n        \"On querying historical k-cores\",\n        \"Persistent community search in temporal networks\",\n        \"Relevance of temporal cores for epidemic spread in temporal networks\",\n        \"Uncovering the structure and temporal dynamics of information propagation\",\n        \"Universality, criticality and complexity of information propagation in social media\",\n        \"Efficient distributed reachability querying of massive temporal graphs\",\n        \"Motifs in Temporal Networks\",\n        \"Maintaining knowledge about temporal intervals\",\n        \"Path Problems in Temporal Graphs\",\n        \"Efficient Algorithms for Temporal Path Computation\",\n        \"Packed Compressed Sparse Row: A Dynamic Graph Representation\",\n        \"Ligra: A Lightweight Graph Processing Framework for Shared Memory\",\n        \"Computational Geometry: Algorithms and Applications\",\n        \"Towards Event Prediction in Temporal Graphs\",\n        \"TREND: TempoRal Event and Node Dynamics for Graph Representation Learning\",\n        \"Adapting to Skew: Imputing Spatiotemporal Urban Data with 3D Partial Convolutions and Biased Masking\",\n        \"TGL: A General Framework for Temporal GNN Training on Billion-Scale Graphs\",\n        \"Temporal Ligra\",\n        \"The Cilk++ concurrency platform\",\n        \"OpenCilk: A Modular and Extensible Software Infrastructure for Fast Task-Parallel Code\",\n        \"Sampling methods for counting temporal motifs\",\n        \"Unified Host and Network Data Set\",\n        \"SNAP StackOverflow dataset\",\n        \"A collection of public transport network data sets for 25 cities\",\n        \"A large scale analysis of hundreds of in-memory cache clusters at Twitter\",\n        \"A Distributed Path Query Engine for Temporal Property Graphs\",\n        \"Chronos: A Graph Engine for Temporal Graph Analysis\",\n        \"ImmortalGraph: A System for Storage and Analysis of Temporal Graphs\",\n        \"Kineograph: taking the pulse of a fast-changing and connected world\",\n        \"GraphChi: Large-scale graph computation on just a PC\",\n        \"Time-evolving Graph Processing at Scale\",\n        \"Deep Graph Library: towards efficient and scalable deep learning on graphs\",\n        \"Graph Neural Networks for Temporal Graphs: State of the Art, Open Challenges, and Opportunities\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Kairos: Efficient Temporal Graph Analytics on a Single Machine, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}