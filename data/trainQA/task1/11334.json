{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Synchronous Programming with Refinement Types\n\nPaper Abstract: Abstract. Cyber-Physical Systems (CPS) consist of software interacting with the physical world, such as robots, vehicles, and industrial processes. CPS are frequently responsible for the safety of lives, property, or the environment, and so software correctness must be determined with a high degree of certainty. To that end, simply testing a CPS is insufficient, as its interactions with the physical world may be difficult to predict, and unsafe conditions may not be immediately obvious. Formal verification can provide stronger safety guarantees but relies on the accuracy of the verified system in representing the real system. Bringing together verification and implementation can be challenging, as languages that are typically used to implement CPS are not easy to formally verify, and languages that lend themselves well to verification often abstract away low-level implementation details. Translation between verification and implementation languages is possible, but requires additional assurances in the translation process and increases software complexity; having both in a single language is desirable. This paper presents a formalization of MARVeLus, a CPS language which combines verification and implementation. We develop a metatheory for its synchronous refinement type system and demonstrate verified synchronous programs executing on real systems.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hybrid automata: An algorithmic approach to the specification and verification of hybrid systems\",\n        \"Control barrier function based quadratic programs with application to adaptive cruise control\",\n        \"ROSCoq: Robots Powered by Constructive Reals\",\n        \"Reactive Probabilistic Programming\",\n        \"RTLola Cleared for Take-Off: Monitoring Autonomous Aircraft\",\n        \"Robot Control\",\n        \"BeagleBone® Blue\",\n        \"A type-based analysis of causality loops in hybrid systems modelers\",\n        \"A hybrid synchronous language with hierarchical automata: static typing and translation to synchronous code\",\n        \"VeriPhy: verified controller executables from verified cyber-physical system models\",\n        \"Mechanizing Refinement Types (extended)\",\n        \"Certifying Synchrony for Free\",\n        \"A Formally Verified Compiler for Lustre\",\n        \"Zélus: a synchronous language with ODEs\",\n        \"The ESTEREL language\",\n        \"Benjamin C. Pierce (ed.) Advanced Topics in Types and Programming Languages. The MIT Press (2005) ISBN 0-262-16228-8. £39.95. 574 pp. Hardbound\",\n        \"LUSTRE: A Declarative Language for Real-Time Programming\",\n        \"Synchronous Kahn networks\",\n        \"A Co-iterative Characterization of Synchronous Stream Functions\",\n        \"The Kind 2 Model Checker\",\n        \"Synchronous Programming and Refinement Types in Robotics: From Verification to Implementation\",\n        \"Mixing Signals and Modes in Synchronous Data-Flow Systems\",\n        \"SCADE 6: A formal language for embedded critical software development (invited paper)\",\n        \"Modular Causality in a Synchronous Stream Language\",\n        \"Z3: An Efficient SMT Solver\",\n        \"Dependently-typed data plane programming\",\n        \"Robustness of temporal logic specifications for continuous-time signals$\",\n        \"A Calculus for Esterel: If Can, Can. If No Can, No Can\",\n        \"Characterizing Algebraic Invariants by Differential Radical Invariants\",\n        \"Koord: A Language for Programming and Verifying Distributed Robotics Application\",\n        \"CyPhyHouse: A programming, simulation, and deployment toolchain for heterogeneous distributed coordination\",\n        \"Scaling Up the Formal Verification of Lustre Programs with SMT-Based Techniques\",\n        \"The synchronous data flow programming language LUSTRE\",\n        \"dTL2: Differential Temporal Dynamic Logic with Nested Temporalities for Hybrid Systems\",\n        \"Refinement Types: A Tutorial\",\n        \"From post-conditions to post-region invariants: deductive verification of hybrid objects\",\n        \"Lightweight Communications and Marshalling\",\n        \"Adaptive Cruise Control: Hybrid, Distributed, and Now Formally Verified\",\n        \"Towards foundational verification of cyber-physical systems\",\n        \"The Temporal Logic of Reactive and Concurrent Systems\",\n        \"Adaptive cruise control: Experimental validation of advanced controllers on scale-model cars\",\n        \"Dynamic typing with dependent types\",\n        \"Test de logiciels synchrones spécifiés en Lustre\",\n        \"Differential Dynamic Logic for Hybrid Systems\",\n        \"Logical Foundations of Cyber-Physical Systems\",\n        \"The temporal logic of programs\",\n        \"Définition et Réalisation d’un Outil de Vérification Formelle de Programmes LUSTRE: le Système LESAR\",\n        \"Liquid types\",\n        \"Fast and low-cost testing of advanced driver assistance systems using small-scale vehicles\",\n        \"Fuzzy based obstacle avoidance system for autonomous mobile robot\",\n        \"Dependent Types and Multi-Monadic Effects in F*\",\n        \"A Decision Method for Elementary Algebra and Geometry\",\n        \"Refinement types for Haskell\",\n        \"Elman fuzzy adaptive control for obstacle avoidance of mobile robots using hybrid force/position incorporation\",\n        \"A Syntactic Approach to Type Soundness\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Synchronous Programming with Refinement Types, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}