{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ConfEx: A Framework for Automating Text-based Software Configuration Analysis in the Cloud\n\nPaper Abstract: Abstract Modern cloud services have complex architectures, often comprising many software components, and depend on hundreds of configurations parameters to function correctly, securely, and with high performance. Due to the prevalence of open-source software, developers can easily deploy services using third-party software without mastering the configurations of that software. As a result, configuration errors (i.e., misconfigurations) are among the leading causes of service disruptions and outages. While existing cloud automation tools ease the process of service deployment and management, support for detecting misconfigurations in the cloud has not been addressed thoroughly, likely due to the lack of frameworks suitable for consistent parsing of unstandardized configuration files. This paper introduces ConfEx, a framework that enables discovery and extraction of text-based software configurations in the cloud. ConfEx uses a novel vocabulary-based technique to identify configuration files in cloud system instances with unlabeled content. To extract the information in these files, ConfEx leverages existing configuration parsers and post-processes the extracted data for analysis. We show that ConfEx achieves over 99% precision and 100% recall in identifying configuration files on 7805 popular Docker Hub images. Using two applied examples, we demonstrate that ConfEx also enables detecting misconfigurations in the cloud via existing tools that are designed for configurations represented as key-value pairs, revealing 184 errors in public Docker Hub images.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hey, you have given me too many knobs!: Understanding and dealing with over-designed configuration in system software\",\n        \"Determining configuration parameter dependencies via analysis of configuration data from multi-tiered enterprise applications\",\n        \"Early detection of configuration errors to reduce failure damage\",\n        \"Systems approaches to tackling configuration errors: A survey\",\n        \"Why do internet services fail, and what can be done about it?\",\n        \"How hadoop clusters break\",\n        \"An empirical study on configuration errors in commercial and open source systems\",\n        \"Microsoft: misconfigured network device led to Azure outage\",\n        \"Thanks, Amazon: The cloud crash reveals your importance\",\n        \"What I wish systems researchers would work on\",\n        \"Fail at scale\",\n        \"Learning Chef: A Guide to Configuration Management and Automation\",\n        \"Ansible: Up and Running: Automating Configuration Management and Deployment the Easy Way\",\n        \"Encore: Exploiting system environment and correlation information for misconfiguration detection\",\n        \"Automatic misconfiguration troubleshooting with PeerPressure\",\n        \"Do not blame users for misconfigurations\",\n        \"Determine configuration entry correlations for web application systems\",\n        \"X-ray: Automating root-cause diagnosis of performance anomalies in production software\",\n        \"Users beware: Preference inconsistencies ahead\",\n        \"Confseer: Leveraging customer support knowledge bases for automated misconfiguration detection\",\n        \"Synthesizing configuration file specifications with association rule learning\",\n        \"Site Reliability Engineering: How Google Runs Production Systems\",\n        \"Devops\",\n        \"Btrfs: The linux b-tree filesystem\",\n        \"The probabilistic basis of jaccardâ€™s index of similarity\",\n        \"Context-based online configuration-error detection\",\n        \"Proactive detection of inadequate diagnostic messages for software configuration errors\",\n        \"Augeas - a configuration API\",\n        \"Managing Infrastructure with Puppet: Configuration Management at Scale\",\n        \"Bcfg2: A pay as you go approach to configuration complexity\",\n        \"Conftest: Generating comprehensive misconfiguration for system reaction ability evaluation\",\n        \"Confvalley: A systematic configuration validation framework for cloud services\",\n        \"Usable declarative configuration specification and validation for applications, systems, and cloud\",\n        \"Easier said than done: Diagnosing misconfiguration via configuration constraints analysis: A study of the variance of configuration constraints in source code\",\n        \"Docker hub hits 5 billion pulls\",\n        \"Cannot use a full url in a 401 errordocument directive - ignoring!\",\n        \"Apache core features\",\n        \"Optimize mysql configuration with mysql tuner\",\n        \"MySQL 5.7 reference manual\",\n        \"Debugging nginx\",\n        \"Nginx pitfalls and common mistakes\",\n        \"Which configuration option should i change?\",\n        \"Mining configuration constraints: Static analyses and empirical results\",\n        \"Preffinder: Getting the right preference in configurable software systems\",\n        \"Partial validation of configurations at runtime\",\n        \"Integrating an online configuration checker with existing management systems: Application to cim/wbem environments\",\n        \"Automation system for validation of configuration and security compliance in managed cloud services\",\n        \"Distributed resource administration using cfengine\",\n        \"SAIC: identifying configuration files for system configuration management\",\n        \"Mining container image repositories for software configuration and beyond\",\n        \"Confex: Towards automating software configuration analytics in the cloud\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in ConfEx: A Framework for Automating Text-based Software Configuration Analysis in the Cloud, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}