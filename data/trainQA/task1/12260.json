{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Hiding, Shuffling, and Triangle Finding Quantum Algorithms on Edge Lists\n\nPaper Abstract: Abstract The edge list model is arguably the simplest input model for graphs, where the graph is specified by a list of its edges. In this model, we study the quantum query complexity of three variants of the triangle finding problem. The first asks whether there exists a triangle containing a target edge and raises general questions about the hiding of a problem’s input among irrelevant data. The second asks whether there exists a triangle containing a target vertex and raises general questions about the shuffling of a problem’s input. The third asks for finding a triangle in the input edge list; this problem bridges the 33-distinctness and 33-sum problems, which have been extensively studied by both cryptographers and complexity theorists. We provide tight or nearly tight results for all of our problems as well as some first answers to the general questions they raise. In particular, given a graph with low maximum degree, such as a random sparse graph, we prove that the quantum query complexity of triangle finding in its length-mm edge list is m5/7±o​(1)m^{5/7\\pm o(1)}. We prove the lower bound in Zhandry’s recording query framework [Zha19] and the upper bound by adapting Belovs’s learning graph algorithm for 33-distinctness [Bel12b].\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The quantum query complexity of certification\",\n        \"Easily testable graph properties\",\n        \"Quantum lower bounds by quantum arguments\",\n        \"Quantum walk algorithm for element distinctness\",\n        \"Quantum lower bounds for the collision and the element distinctness problems\",\n        \"A new quantum lower bound method,: with applications to direct product theorems and time-space tradeoffs\",\n        \"Strengths and weaknesses of quantum computing\",\n        \"Quantum lower bounds by polynomials\",\n        \"Symmetries, graph properties, and quantum speedups\",\n        \"Time-efficient quantum walks for 3-distinctness\",\n        \"Span programs for functions with constant-sized 1-certificates\",\n        \"Learning-graph-based quantum algorithm for k-distinctness\",\n        \"Key establishment à la Merkle in a quantum world\",\n        \"Sampling algorithms: lower bounds and applications\",\n        \"The polynomial method strikes back: tight quantum query bounds via dual polynomials\",\n        \"Quantum time-space tradeoffs for matrix problems\",\n        \"On the power of non-adaptive learning graphs\",\n        \"Adversary lower bound for the k-sum problem\",\n        \"Quantum algorithms for subset finding\",\n        \"On the compressed-oracle technique, and post-quantum security of proofs of sequential work\",\n        \"A Note on the Quantum Query Complexity of Permutation Symmetric Functions\",\n        \"A remark on the difference between sampling with and without replacement\",\n        \"Property testing and its connection to learning and approximation\",\n        \"Introduction to testing graph properties\",\n        \"Negative weights make adversaries stronger\",\n        \"Quantum time–space tradeoff for finding multiple collision pairs\",\n        \"Nested quantum walks with quantum data structures\",\n        \"Multidimensional quantum walks\",\n        \"A quantum advantage for a natural streaming problem\",\n        \"Random sampling in cut, flow, and network design problems\",\n        \"Testing forest-isomorphism in the adjacency list model\",\n        \"Improved quantum algorithm for triangle finding via combinatorial arguments\",\n        \"Quantum query complexity of state conversion\",\n        \"Improved quantum query algorithms for triangle finding and associativity testing\",\n        \"A strong direct product theorem for quantum query complexity\",\n        \"On finding quantum multi-collisions\",\n        \"How to construct random unitaries\",\n        \"Permutation superposition oracles for quantum query lower bounds\",\n        \"Search via quantum walk\",\n        \"Quantum algorithms for the triangle problem\",\n        \"Improved Approximate Degree Bounds for k-Distinctness\",\n        \"Probability and Computing: Randomization and Probabilistic Techniques in Algorithms and Data Analysis\",\n        \"Span programs and quantum query complexity: The general adversary bound is nearly tight for every Boolean function\",\n        \"Reflections for quantum query algorithms\",\n        \"Balls into bins — a simple and tight analysis\",\n        \"Basic quantum subroutines: finding multiple marked elements and summing numbers\",\n        \"A generalized birthday problem\",\n        \"How to record quantum queries, and applications to quantum indifferentiability\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Hiding, Shuffling, and Triangle Finding Quantum Algorithms on Edge Lists, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}