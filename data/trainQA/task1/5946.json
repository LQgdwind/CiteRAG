{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 Introduction\n\nPaper Abstract: \n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Software engineering for self-adaptive systems: A research roadmap\",\n        \"A survey on engineering approaches for self-adaptive systems\",\n        \"Self-adaptive software: Landscape and research challenges\",\n        \"MAPE-K formal templates to rigorously design behaviors for self-adaptive systems\",\n        \"Engineering self-adaptive software systems: From requirements to model predictive control\",\n        \"Control strategies for self-adaptive software systems\",\n        \"Software engineering for self-adaptive systems: Research challenges in the provision of assurances\",\n        \"Software engineering for self-adaptive systems: A second research roadmap\",\n        \"Fundamentals of Parameterized Complexity\",\n        \"Computers and Intractability\",\n        \"Computational Complexity: A Conceptual Perspective\",\n        \"Defining emergent software using continuous self-assembly, perception, and learning\",\n        \"R‚ÄãEXùëÖsuperscriptùê∏ùëã{RE^{X}}: A development platform and online learning approach for runtime emergent software systems\",\n        \"Towards emergent microservices for client-tailored design\",\n        \"Distributed emergent software: Assembling, perceiving and learning systems at scale\",\n        \"Observations on the complexity of composable simulation\",\n        \"Computational complexity of selecting components for composition\",\n        \"The computational complexity of component selection in simulation reuse\",\n        \"Approximating component selection with general costs\",\n        \"Approximating component selection\",\n        \"Approximation algorithms for software component selection problem\",\n        \"On the computational complexity of designing and reconfiguring component-based software systems\",\n        \"On the computational complexity of designing and reconfiguring component-based software systems: A computational complexity approach (full version)\",\n        \"Complexity Theory Column 76: An atypical survey of typical-case heuristic algorithms\",\n        \"Randomized Algorithms\",\n        \"Complexity and Approximation: Combinatorial Optimization Problems and their Approximability Properties\",\n        \"The Status of the P Versus NP Problem\",\n        \"On computable numbers, with an application to the entscheidungsproblem\",\n        \"Runtime modularity in complex structures: A component model for fine grained runtime adaptation\",\n        \"P, NP and mathematics ‚Äî A computational complexity perspective\",\n        \"Parameterized Complexity\",\n        \"Cognition and Intractability: A Guide to Classical and Parameterized Complexity Analysis\",\n        \"Introduction to Automata Theory, Languages, and Computation, 2nd ed.\",\n        \"Systematic parameterized complexity analysis in computational phonology\",\n        \"On the hardness of approximating minimization problems\",\n        \"Preprocessing of intractable problems\",\n        \"Structural Complexity I\",\n        \"An average-case depth hierarchy theorem for boolean circuits\",\n        \"Structural Complexity II\",\n        \"The complexity zoo\",\n        \"A catalog of complexity classes\",\n        \"A survey on quantum computing technology\",\n        \"Quantum complexity theory\",\n        \"Parameterized Algorithms\",\n        \"Kernalization: Theory of Parameterized Prepreocessing\",\n        \"Code synthesis in self-improving software systems\",\n        \"Experiments in genetic divergence for emergent systems\",\n        \"Deepcoder: Learning to write programs\",\n        \"Dimensions in program synthesis\",\n        \"Program synthesis\",\n        \"A classification framework for software component models\",\n        \"Component Software-Beyond Object-Oriented Programming\",\n        \"Component-Based Software Engineering: Putting the Pieces Together\",\n        \"Twenty-eight years of component-based software engineering\",\n        \"Turing machines that take advice\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in 1 Introduction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}