{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GGT: Graph-Guided Testing for Adversarial Sample Detection of Deep Neural Network\n\nPaper Abstract: Abstract Deep Neural Networks (DNN) are known to be vulnerable to adversarial samples, the detection of which is crucial for the wide application of these DNN models. Recently, a number of deep testing methods in software engineering were proposed to find the vulnerability of DNN systems, and one of them, i.e., Model Mutation Testing (MMT), was used to successfully detect various adversarial samples generated by different kinds of adversarial attacks. However, the mutated models in MMT are always huge in number (e.g., over 100 models) and lack diversity (e.g., can be easily circumvented by high-confidence adversarial samples), which makes it less efficient in real applications and less effective in detecting high-confidence adversarial samples. In this study, we propose Graph-Guided Testing (GGT) for adversarial sample detection to overcome these aforementioned challenges. GGT generates pruned models with the guide of graph characteristics, each of them has only about 5% parameters of the mutated model in MMT, and graph guided models have higher diversity. The experiments on CIFAR10 and SVHN validate that GGT performs much better than MMT with respect to both effectiveness and efficiency.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"End to end learning for self-driving cars\",\n        \"Audio adversarial examples: Targeted attacks on speech-to-text\",\n        \"Synthesizing robust adversarial examples\",\n        \"Iot device fingerprint using deep learning\",\n        \"Deep learning convolutional neural networks for radio identification\",\n        \"Intriguing properties of neural networks\",\n        \"Towards understanding adversarial examples systematically: Exploring data size, task and model factors\",\n        \"Explaining and harnessing adversarial examples\",\n        \"Adversarial examples are not bugs, they are features\",\n        \"Deeptest: Automated testing of deep-neural-network-driven autonomous cars\",\n        \"Guiding deep learning system testing using surprise adequacy\",\n        \"Deepmutation: Mutation testing of deep learning systems\",\n        \"Deepgauge: Multi-granularity testing criteria for deep learning systems\",\n        \"Deepxplore: Automated whitebox testing of deep learning systems\",\n        \"Testing dnn image classifiers for confusion & bias errors\",\n        \"Dlfuzz: differential fuzzing testing of deep learning systems\",\n        \"Deephunter: A coverage-guided fuzz testing framework for deep neural networks\",\n        \"Adversarial sample detection for deep neural network through model mutation testing\",\n        \"Dissector: Input validation for deep learning applications by crossing-layer dissection\",\n        \"On adaptive attacks to adversarial example defenses\",\n        \"Graph representation learning: a survey\",\n        \"Fundamentals of brain network analysis\",\n        \"Graph tools for social network analysis\",\n        \"A graph-theoretic approach for the detection of phishing webpages\",\n        \"Going deeper with convolutions\",\n        \"Deep residual learning for image recognition\",\n        \"Graph structure of neural networks\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Deepfool: a simple and accurate method to fool deep neural networks\",\n        \"Target defense against link-prediction-based attacks via evolutionary perturbations\",\n        \"Adversarial attacks on deep-learning models in natural language processing: A survey\",\n        \"The limitations of deep learning in adversarial settings\",\n        \"Towards evaluating the robustness of neural networks\",\n        \"Simple black-box adversarial attacks on deep neural networks\",\n        \"One pixel attack for fooling deep neural networks\",\n        \"Audee: Automated testing for deep learning frameworks\",\n        \"NIC: Detecting adversarial samples with neural network invariant checking\",\n        \"Adversarial example detection and classification with asymmetrical adversarial training\",\n        \"Towards characterizing adversarial defects of deep learning software from the lens of uncertainty\",\n        \"Adversarial examples are not easily detected: Bypassing ten detection methods\",\n        \"Hrank: Filter pruning using high-rank feature map\",\n        \"Autocompress: An automatic dnn structured pruning framework for ultra-high compression rates\",\n        \"Characterization of complex networks: A survey of measurements\",\n        \"Optimal symmetric networks in terms of minimizing average shortest path length and their sub-optimal growth model\",\n        \"Node matching between complex networks\",\n        \"Towards understanding the regularization of adversarial robustness on neural networks\",\n        \"Sequential analysis\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in GGT: Graph-Guided Testing for Adversarial Sample Detection of Deep Neural Network, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}