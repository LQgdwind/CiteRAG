{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Version Control of Speaker Recognition Systems\n\nPaper Abstract: Abstract This paper discusses one of the most challenging practical engineering problems in speaker recognition systems — the version control of models and user profiles. A typical speaker recognition system consists of two stages: the enrollment stage, where a profile is generated from user-provided enrollment audio; and the runtime stage, where the voice identity of the runtime audio is compared against the stored profiles. As technology advances, the speaker recognition system needs to be updated for better performance. However, if the stored user profiles are not updated accordingly, version mismatch will result in meaningless recognition results. In this paper, we describe different version control strategies for speaker recognition systems that had been carefully studied at Google from years of engineering practice. These strategies are categorized into three groups according to how they are deployed in the production environment: device-side deployment, server-side deployment, and hybrid deployment. To compare different strategies with quantitative metrics under various network configurations, we present SpeakerVerSim, an easily-extensible Python-based simulation framework for different server-side deployment strategies of speaker recognition systems.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Text-dependent speaker recognition\",\n        \"Small-footprint keyword spotting using deep neural networks\",\n        \"An overview of text-independent speaker recognition: From features to supervectors\",\n        \"Personalized keyphrase detection using speaker and environment information\",\n        \"Perceptual linear predictive (PLP) analysis of speech\",\n        \"Comparison of parametric representations for monosyllabic word recognition in continuously spoken sentences\",\n        \"Power-normalized cepstral coefficients (PNCC) for robust speech recognition\",\n        \"Speaker verification using adapted Gaussian mixture models\",\n        \"Joint factor analysis of speaker and session variability: Theory and algorithms\",\n        \"Front-end factor analysis for speaker verification\",\n        \"Generalized end-to-end loss for speaker verification\",\n        \"Deep speaker: an end-to-end neural speaker embedding system\",\n        \"X-vectors: Robust DNN embeddings for speaker recognition\",\n        \"Parameter-free attentive scoring for speaker verification\",\n        \"Deep neural network-based speaker embeddings for end-to-end speaker verification\",\n        \"Dr-Vectors: Decision residual networks and an improved loss for speaker recognition\",\n        \"Automatic gain control and multi-style training for robust small-footprint keyword spotting with deep neural networks\",\n        \"Matchmaker: data drift mitigation in machine learning for large-scale systems\",\n        \"Voiceprint identification\",\n        \"Deep learning\",\n        \"Long short-term memory\",\n        \"Attention is all you need\",\n        \"Attention-based models for text-dependent speaker verification\",\n        \"Deploying scalable face recognition pipeline using distributed microservices\",\n        \"Face recognition oak ridge (faro): A framework for distributed and scalable biometrics applications\",\n        \"Sequential and Parallel Algorithms and Data Structures\",\n        \"Versatile, scalable, and accurate simulation of distributed applications and platforms\",\n        \"BigSim: A parallel simulator for performance prediction of extremely large parallel machines\",\n        \"Modeling and simulation of scalable cloud computing environments and the cloudsim toolkit: Challenges and opportunities\",\n        \"Tomato, tomahto. Google Home now supports multiple users\",\n        \"VoiceFilter: Targeted voice separation by speaker-conditioned spectrogram masking\",\n        \"VoiceFilter-Lite: Streaming targeted voice separation for on-device speech recognition\",\n        \"Multi-user VoiceFilter-Lite via attentive speaker embedding\",\n        \"Closing the gap between single-user and multi-user voicefilter-lite\",\n        \"Conditional conformer: Improving speaker modulation for single and multi-user speech enhancement\",\n        \"Personal VAD: Speaker-conditioned voice activity detection\",\n        \"Personal vad 2.0: Optimizing personal voice activity detection for on-device speech recognition\",\n        \"Transfer learning from speaker verification to multispeaker text-to-speech synthesis\",\n        \"On the efficient representation and execution of deep acoustic models\",\n        \"Optimizing speech recognition for the edge\",\n        \"4-bit conformer with native quantization aware training for speech recognition\",\n        \"2-bit conformer quantization for automatic speech recognition\",\n        \"Compressing deep neural networks using a rank-constrained topology\",\n        \"Optimal brain damage\",\n        \"Dynamic sparsity neural networks for automatic speech recognition\",\n        \"Distilling the knowledge in a neural network\",\n        \"Google Tensor is a milestone for machine learning\",\n        \"Europe’s tough new law on biometrics\",\n        \"Turn-to-Diarize: Online speaker diarization constrained by transformer transducer speaker turn detection\",\n        \"Load-balancing algorithms in cloud computing: A survey\",\n        \"Seaborn: statistical data visualization\",\n        \"A guide to dynamic load balancing in distributed computer systems\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Version Control of Speaker Recognition Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}