{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Mixup with Soft Alignments\n\nPaper Abstract: Abstract We study graph data augmentation by mixup, which has been used successfully on images. A key operation of mixup is to compute a convex combination of a pair of inputs. This operation is straightforward for grid-like data, such as images, but challenging for graph data. The key difficulty lies in the fact that different graphs typically have different numbers of nodes, and thus there lacks a node-level correspondence between graphs. In this work, we propose S-Mixup, a simple yet effective mixup method for graph classification by soft alignments. Specifically, given a pair of graphs, we explicitly obtain node-level correspondence via computing a soft assignment matrix to match the nodes between two graphs. Based on the soft assignments, we transform the adjacency and node feature matrices of one graph, so that the transformed graph is aligned with the other graph. In this way, any pair of graphs can be mixed directly to generate an augmented graph. We conduct systematic experiments to show that S-Mixup can improve the performance and generalization of graph neural networks (GNNs) on various graph classification tasks. In addition, we show that S-Mixup can increase the robustness of GNNs against noisy labels. Our code is publicly available as part of the DIG package (https://github.com/divelab/DIG).\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mixmatch: A holistic approach to semi-supervised learning\",\n        \"Graph edit distance as a quadratic assignment problem\",\n        \"On a relation between graph edit distance and maximum common subgraph\",\n        \"Measuring and relieving the over-smoothing problem for graph neural networks from the topological view\",\n        \"Reweighted random walks for graph matching\",\n        \"Data augmentation for deep graph learning: A survey\",\n        \"A novel multistart hyper-heuristic algorithm on the grid for the quadratic assignment problem\",\n        \"Graph random neural networks for semi-supervised learning on graphs\",\n        \"Deep graph matching consensus\",\n        \"A graduated assignment algorithm for graph matching\",\n        \"Intrusion-free graph mixup\",\n        \"G-mixup: Graph data augmentation for graph classification\",\n        \"Regal: Representation learning-based graph alignment\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Graph structure learning for robust graph neural networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"A spectral technique for correspondence problems using pairwise constraints\",\n        \"An integer projected fixed point method for graph matching and map inference\",\n        \"Graph matching networks for learning the similarity of graph structured objects\",\n        \"Learning fair graph representations via automated data augmentations\",\n        \"Self-supervised learning of visual graph matching\",\n        \"Automated data augmentations for graph classification\",\n        \"Tudataset: A collection of benchmark datasets for learning with graphs\",\n        \"A quadratic programming approach to the graph edit distance problem\",\n        \"Graph transplant: Node saliency-guided graph mixup with local structure preservation\",\n        \"Graph edit distance learning via modeling optimum matchings with constraints\",\n        \"Approximate graph edit distance computation by means of bipartite graph matching\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"A distance measure between attributed relational graphs for pattern recognition\",\n        \"Automated graph representation learning for node classification\",\n        \"Adversarial graph augmentation to improve graph contrastive learning\",\n        \"Deep graph infomax\",\n        \"Manifold mixup: Better representations by interpolating hidden states\",\n        \"Towards domain-agnostic contrastive learning\",\n        \"Neural graph matching network: Learning lawlerâ€™s quadratic assignment problem with extension to hypergraph and multiple-graph matching\",\n        \"Graph matching with adaptive and branching path following\",\n        \"Mixup for node and graph classification\",\n        \"Discovering invariant rationales for graph neural networks\",\n        \"Gromov-wasserstein learning for graph matching and node embedding\",\n        \"How powerful are graph neural networks?\",\n        \"Boundary thickness and robustness in learning models\",\n        \"Model-agnostic augmentation for accurate graph classification\",\n        \"Graph contrastive learning with augmentations\",\n        \"Graph contrastive learning automated\",\n        \"Cutmix: Regularization strategy to train strong classifiers with localizable features\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Final: Fast attributed network alignment\",\n        \"M-mix: Generating hard negatives via multi-sample mixing for contrastive learning\",\n        \"Data augmentation for graph neural networks\",\n        \"Factorized graph matching\",\n        \"Deep Graph Contrastive Representation Learning\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Graph Mixup with Soft Alignments, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}