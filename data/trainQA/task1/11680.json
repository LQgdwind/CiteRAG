{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 67 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Runtime analysis of a coevolutionary algorithm on impartial combinatorial games\n\nPaper Abstract: Abstract Due to their complex dynamics, combinatorial games are a key test case and application for algorithms that train game playing agents. Among those algorithms that train using self-play are coevolutionary algorithms (CoEAs). CoEAs evolve a population of individuals by iteratively selecting the strongest based on their interactions against contemporaries, and using those selected as parents for the following generation (via randomised mutation and crossover). However, the successful application of CoEAs for game playing is difficult due to pathological behaviours such as cycling, an issue especially critical for games with intransitive payoff landscapes. Insight into how to design CoEAs to avoid such behaviours can be provided by runtime analysis. In this paper, we push the scope of runtime analysis to combinatorial games, proving a general upper bound for the number of simulated games needed for UMDA (a type of CoEA) to discover (with high probability) an optimal strategy for an impartial combinatorial game. This result applies to any impartial combinatorial game, and for many games the implied bound is polynomial or quasipolynomial as a function of the number of game positions. After proving the main result, we provide several applications to simple well-known games: Nim, Chomp, Silver Dollar, and Turning Turtles. As the first runtime analysis for CoEAs on combinatorial games, this result is a critical step towards a comprehensive theoretical framework for coevolution.\n\n{retrieved_text}\n\nGenerate exactly 67 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 67\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Estimation-of-distribution algorithms for multi-valued decision variables\",\n        \"Runtime analysis of coevolutionary algorithms on a class of symmetric zero-sum games\",\n        \"Winning Ways for Your Mathematical Plays, volume 3\",\n        \"Introductory Combinatorics\",\n        \"Evolving neural networks to play checkers without relying on expert knowledge\",\n        \"Concentration inequalities and martingale inequalities: a survey\",\n        \"On Numbers and Games\",\n        \"Simplified runtime analysis of estimation of distribution algorithms\",\n        \"The significance of Kasparov versus DEEP BLUE and the future of computer chess\",\n        \"Playing games with algorithms: Algorithmic combinatorial game theory\",\n        \"The runtime of the compact genetic algorithm on jump functions\",\n        \"A survey on recent progress in the theory of evolutionary algorithms for discrete optimization\",\n        \"A rigorous analysis of the compact genetic algorithm for linear functions\",\n        \"Upper and lower bounds for randomized search heuristics in black-box optimization\",\n        \"The Sprague–Grundy function for some nearly disjunctive sums of nim and silver dollar games\",\n        \"Using genetic programming to evolve board evaluation functions\",\n        \"Solution concepts in coevolutionary algorithms\",\n        \"A self-learning evolutionary chess program\",\n        \"Scenic trails ascending from sea-level nim to alpine chess and back\",\n        \"Computing a perfect strategy for n × n chess requires time exponential in n\",\n        \"A curious nim-type game\",\n        \"Chomp on generalized Kneser graphs and others\",\n        \"Genetic programming and coevolution to play the Bomberman™ video game\",\n        \"Deciding the winner of an arbitrary finite poset game is PSPACE-complete\",\n        \"Mathematics and games\",\n        \"Impartial games\",\n        \"What is a game?\",\n        \"Competitive coevolution for defense and security: Elo-based similar-strength opponent sampling\",\n        \"Evolving search heuristics for combinatorial games with genetic programming\",\n        \"GP-EndChess: using genetic programming to evolve chess endgame players\",\n        \"How fitness aggregation methods affect the performance of competitive CoEAs on bilinear problems\",\n        \"Runtime analysis of a co-evolutionary algorithm: Overcoming negative drift in maximin-optimisation\",\n        \"Evolutionary game dynamics\",\n        \"The cooperative coevolutionary (1+1) EA\",\n        \"Fitnessless coevolution\",\n        \"Multi-criteria comparison of coevolution and temporal difference learning on othello\",\n        \"Context and driving forces in the development of the early computer game Nimbi\",\n        \"Solving complex problems with coevolutionary algorithms\",\n        \"Co-evolution of spies and resistance fighters\",\n        \"Runtime analysis of competitive co-evolutionary algorithms for maximin optimisation of a bilinear function\",\n        \"Analysis of a pairwise dominance coevolutionary algorithm and DefendIt\",\n        \"Overcoming binary adversarial optimisation with competitive coevolution\",\n        \"Co-evolving a go-playing neural network\",\n        \"The game of nim - the Nimatron\",\n        \"Experiments on the mechanization of game-learning part I: characterization of the model and its parameters\",\n        \"Coevolution of neural networks using a layered pareto archive\",\n        \"More on the Sprague-Grundy function for Whythoff’s game\",\n        \"Pareto coevolution: using performance against coevolved opponents in a game as dimensions for pareto selection\",\n        \"Estimation of distribution algorithms\",\n        \"Co-evolution in the successful learning of backgammon strategy\",\n        \"Coevolutionary Principles, pages 987–1033\",\n        \"A machine for playing the game nim\",\n        \"The complexity of go\",\n        \"N by N checkers is exptime complete\",\n        \"New methods for competitive coevolution\",\n        \"A prehistory of nim\",\n        \"On discrete-time replicator equations with nonlinear payoff functions\",\n        \"Spel van delers\",\n        \"Take-away games\",\n        \"A general reinforcement learning algorithm that masters chess, shogi, and go through self-play\",\n        \"Über mathematische kampfspiele\",\n        \"Über zwei abarten von nim\",\n        \"The role of behavioral diversity and difficulty of opponents in coevolving game-playing agents\",\n        \"On scalability, generalization, and hybridization of coevolutionary learning: a case study for othello\",\n        \"Upper bounds on the running time of the univariate marginal distribution algorithm on onemax\",\n        \"How majority-vote crossover and estimation-of-distribution algorithms cope with fitness valleys\",\n        \"Two games with matchsticks\"\n    ],\n    \"reasoning\": \"Selected these 67 references because they represent foundational work and recent advances in Runtime analysis of a coevolutionary algorithm on impartial combinatorial games, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}