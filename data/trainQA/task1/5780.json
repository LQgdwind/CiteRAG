{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Label Efficient Regularization and Propagation for Graph Node Classification\n\nPaper Abstract: Abstract An enhanced label propagation (LP) method called GraphHop was proposed recently. It outperforms graph convolutional networks (GCNs) in the semi-supervised node classification task on various networks. Although the performance of GraphHop was explained intuitively with joint node attribute and label signal smoothening, its rigorous mathematical treatment is lacking. In this paper, we propose a label efficient regularization and propagation (LERP) framework for graph node classification, and present an alternate optimization procedure for its solution. Furthermore, we show that GraphHop only offers an approximate solution to this framework and has two drawbacks. First, it includes all nodes in the classifier training without taking the reliability of pseudo-labeled nodes into account in the label update step. Second, it provides a rough approximation to the optimum of a subproblem in the label aggregation step. Based on the LERP framework, we propose a new method, named the LERP method, to solve these two shortcomings. LERP determines reliable pseudo-labels adaptively during the alternate optimization and provides a better approximation to the optimum with computational efficiency. Theoretical convergence of LERP is guaranteed. Extensive experiments are conducted to demonstrate the effectiveness and efficiency of LERP. That is, LERP outperforms all benchmarking methods, including GraphHop, consistently on five test datasets and an object recognition task at extremely low label rates (i.e., 1, 2, 4, 8, 16, and 20 labeled samples per class).\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Graph-based semi-supervised learning: A comprehensive review\",\n        \"L-bgnn: Layerwise trained bipartite graph neural networks\",\n        \"Learning representations by back-propagating errors\",\n        \"Semi-supervised learning using gaussian fields and harmonic functions\",\n        \"Learning with local and global consistency\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Label efficient semi-supervised learning via graph filtering\",\n        \"Graph Attention Networks\",\n        \"Mixhop: Higher-order graph convolutional architectures via sparsified neighborhood mixing\",\n        \"Decoupling the depth and scope of graph neural networks\",\n        \"The pagerank citation ranking: Bringing order to the web.\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Simplifying graph convolutional networks\",\n        \"Combining label propagation and simple models out-performs graph neural networks\",\n        \"Simple spectral graph convolution\",\n        \"Consistent semi-supervised graph regularization for high dimensional data\",\n        \"Weighted nonlocal laplacian on interpolation from sparse data\",\n        \"Poisson learning: Graph based semi-supervised learning at very low label rates\",\n        \"Graphhop: an enhanced label propagation method for node classification\",\n        \"Label propagation through linear neighborhoods\",\n        \"A general graph-based semi-supervised learning with novel class discovery\",\n        \"Convex optimization\",\n        \"Pseudo-label: The simple and efficient semi-supervised learning method for deep neural networks\",\n        \"Collective classification in network data\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Image-based recommendations on styles and substitutes\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"Contrastive graph poisson networks: Semi-supervised learning with extremely limited labels\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Columbia object image library (coil-100)\",\n        \"Fastgcn: fast learning with graph convolutional networks via importance sampling\",\n        \"Spectral networks and locally connected networks on graphs\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Neural message passing for quantum chemistry\",\n        \"The graph neural network model\",\n        \"Geometric deep learning on graphs and manifolds using mixture model cnns\",\n        \"How powerful are graph neural networks?\",\n        \"An end-to-end deep learning architecture for graph classification\",\n        \"Graphrnn: Generating realistic graphs with deep auto-regressive models\",\n        \"Gmnn: Graph markov neural networks\",\n        \"Bayesian graph convolutional neural networks for semi-supervised classification\",\n        \"A flexible generative framework for graph-based semi-supervised learning\",\n        \"Multi-stage self-supervised learning for graph convolutional networks on graphs with few labeled nodes\",\n        \"Diffusion improves graph learning\",\n        \"Scalable graph neural networks via bidirectional propagation\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Label Efficient Regularization and Propagation for Graph Node Classification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}