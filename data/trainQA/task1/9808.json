{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient and Explainable Graph Neural Architecture Search via Monte-Carlo Tree Search\n\nPaper Abstract: Abstract. Graph neural networks (GNNs) are powerful tools for performing data science tasks in various domains. Although we use GNNs in wide application scenarios, it is a laborious task for researchers and practitioners to design/select optimal GNN architectures in diverse graphs. To save human efforts and computational costs, graph neural architecture search (Graph NAS) has been used to search for a sub-optimal GNN architecture that combines existing components. However, there are no existing Graph NAS methods that satisfy explainability, efficiency, and adaptability to various graphs. Therefore, we propose an efficient and explainable Graph NAS method, called ExGNAS, which consists of (i) a simple search space that can adapt to various graphs and (ii) a search algorithm that makes the decision process explainable. The search space includes only fundamental functions that can handle homophilic and heterophilic graphs. The search algorithm efficiently searches for the best GNN architecture via Monte-Carlo tree search without neural models. The combination of our search space and algorithm achieves finding accurate GNN models and the important functions within the search space. We comprehensively evaluate our method compared with twelve hand-crafted GNN architectures and three Graph NAS methods in four graphs. Our experimental results show that ExGNAS increases AUC up to 3.6 and reduces run time up to 78% compared with the state-of-the-art Graph NAS methods. Furthermore, we show ExGNAS is effective in analyzing the difference between GNN architectures in homophilic and heterophilic graphs.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mixhop: Higher-order graph convolutional architectures via sparsified neighborhood mixing\",\n        \"Optuna: A next-generation hyperparameter optimization framework\",\n        \"The use of the area under the ROC curve in the evaluation of machine learning algorithms\",\n        \"Rethinking graph neural architecture search from message-passing\",\n        \"Learning Interpretable Models Through Multi-Objective Neural Architecture Search\",\n        \"Simple and deep graph convolutional networks\",\n        \"Adaptive Universal Generalized PageRank Graph Neural Network\",\n        \"A fast and elitist multiobjective genetic algorithm: NSGA-II\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Efficient graph neural architecture search using Monte Carlo Tree search and prediction network\",\n        \"DiffMG: Differentiable meta graph search for heterogeneous graph neural networks\",\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"Benchmarking graph neural networks for materials chemistry\",\n        \"Graph Neural Architecture Search\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Large-scale graph neural architecture search\",\n        \"Inductive Representation Learning on Large Graphs\",\n        \"Search to aggregate neighborhood for graph neural network\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Bandit based monte-carlo planning\",\n        \"Random search and reproducibility for neural architecture search\",\n        \"Finding global homophily in graph neural networks when meeting heterophily\",\n        \"Autograph: Automated graph neural network\",\n        \"One-shot graph neural architecture search with dynamic search space\",\n        \"Large Scale Learning on Non-Homophilous Graphs: New Benchmarks and Strong Simple Methods\",\n        \"FOX-NAS: Fast, On-device and Explainable Neural Architecture Search\",\n        \"Darts: Differentiable architecture search\",\n        \"Is heterophily a real nightmare for graph neural networks to do node classification\",\n        \"Is homophily a necessity for graph neural networks\",\n        \"Improving Graph Neural Networks with Simple Architecture Design\",\n        \"Geometric deep learning on graphs and manifolds using mixture model cnns\",\n        \"NAS-Bench-Graph: Benchmarking Graph Neural Architecture Search\",\n        \"Automl-zero: Evolving machine learning algorithms from scratch\",\n        \"Interpretable neural architecture search via bayesian optimisation with weisfeiler-lehman kernels\",\n        \"Learning to simulate complex physics with graph networks\",\n        \"Evolutionary architecture search for graph neural networks\",\n        \"NAS-Navigator: Visual Steering for Explainable One-Shot Deep Neural Network Synthesis\",\n        \"Graph Attention Networks\",\n        \"Neural architecture search using deep neural networks and monte carlo tree search\",\n        \"Graph Neural Networks with Node-wise Architecture\",\n        \"Simplifying graph convolutional networks\",\n        \"How powerful are graph neural networks\",\n        \"Representation learning on graphs with jumping knowledge networks\",\n        \"Do Not Train It: A Linear Neural Architecture Search of Graph Neural Networks\",\n        \"Design space for graph neural networks\",\n        \"Decoupling the Depth and Scope of Graph Neural Networks\",\n        \"GraphSAINT: Graph Sampling Based Inductive Learning Method\",\n        \"DFG-NAS: DDeep and Flexible Graph Neural Architecture Search\",\n        \"Pasca: A graph neural architecture search system under the scalable paradigm\",\n        \"Autogt: Automated graph transformer architecture search\",\n        \"Automated machine learning on graphs: A survey\",\n        \"Simplifying architecture search for graph neural network\",\n        \"Probabilistic dual network architecture search on graphs\",\n        \"Auto-HeG: Automated Graph Neural Network on Heterophilic Graphs\",\n        \"EEG-based emotion recognition using regularized graph neural networks\",\n        \"Auto-gnn: Neural architecture search of graph neural networks\",\n        \"PSP: Progressive Space Pruning for Efficient Graph Neural Architecture Search\",\n        \"Beyond Homophily in Graph Neural Networks: Current Limitations and Effective Designs\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Efficient and Explainable Graph Neural Architecture Search via Monte-Carlo Tree Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}