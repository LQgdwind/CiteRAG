{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Probabilistic Guarantees for Practical LIA Loop Invariant Automation\n\nPaper Abstract: Abstract. Despite the crucial need for formal safety and security verification of programs, discovering loop invariants remains a significant challenge. Static analysis is a primary technique for inferring loop invariants but often relies on substantial assumptions about underlying theories. Data-driven methods supported by dynamic analysis and machine learning algorithms have shown impressive performance in inferring loop invariants for some challenging programs. However, state-of-the-art data-driven techniques do not offer theoretical guarantees for finding loop invariants. We present a novel technique that leverages the simulated annealing (SA) search algorithm combined with SMT solvers and computational geometry to provide probabilistic guarantees for inferring loop invariants using data-driven methods. Our approach enhances the SA search with real analysis to define the search space and employs parallelism to increase the probability of success. To ensure the convergence of our algorithm, we adapt ϵ\\epsilon-nets, a key concept from computational geometry. Our tool, DLIA2, implements these algorithms and demonstrates competitive performance against state-of-the-art techniques. We also identify a subclass of programs, on which we outperform the current state-of-the-art tool GSpacer.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Vc dimension of ellipsoids\",\n        \"Case studies: Ellipsoids\",\n        \"decision procedures: An algorithmic point of view, by daniel kroening and ofer strichman, springer-verlag, 2008\",\n        \"Computing the initial temperature of simulated annealing\",\n        \"Simulated annealing\",\n        \"Competition on software verification and witness validation: Sv-comp 2023\",\n        \"Oasis: Ilp-guided synthesis of loop invariants\",\n        \"Horn clause solvers for program verification\",\n        \"Inadequacy of computable loop invariants\",\n        \"Learnability and the vapnik-chervonenkis dimension\",\n        \"The calculus of computation: decision procedures with applications to verification\",\n        \"Static determination of dynamic properties of programs\",\n        \"Z3: An efficient smt solver\",\n        \"Inductive invariant generation via abductive inference\",\n        \"A fast linear-arithmetic solver for dpll (t)\",\n        \"Deep neural networks and mixed integer linear optimization\",\n        \"Inferring loop invariants using postconditions\",\n        \"Ice: A robust framework for learning invariants\",\n        \"Learning invariants using decision trees and implication counterexamples\",\n        \"Linear diophantine equations\",\n        \"Lattice point problems and values of quadratic forms\",\n        \"Seahorn: A framework for verifying c programs (competition contribution)\",\n        \"Epsilon-nets and simplex range queries\",\n        \"Nested interpolants\",\n        \"löwner-john ellipsoids\",\n        \"An axiomatic basis for computer programming\",\n        \"Assertion-based loop invariant generation\",\n        \"What’s decidable about linear loops?\",\n        \"Smt-based model checking for recursive programs\",\n        \"Learning invariants using decision trees\",\n        \"Automatic loop-invariant generation anc refinement through selective sampling\",\n        \"Epsilon-nets and computational geometry\",\n        \"Solving constrained horn clauses using interpolation\",\n        \"The octagon abstract domain\",\n        \"Convergence and finite-time behavior of simulated annealing\",\n        \"A learning-based approach to synthesizing invariants for incomplete verification engines\",\n        \"Counterexample-guided approach to finding numerical invariants\",\n        \"Using symbolic states to infer numerical invariants\",\n        \"Data-driven precondition inference with learned features\",\n        \"0.234: The myth of a universal acceptance ratio for monte carlo simulations\",\n        \"Loop invariant synthesis in a combined abstract domain\",\n        \"An abstract interpretation approach for automatic generation of polynomial invariants\",\n        \"A theoretical framework for simulated annealing\",\n        \"Disjunctive interpolants for horn-clause verification\",\n        \"Non-linear loop invariant generation using gröbner bases\",\n        \"From invariant checking to invariant inference using randomized search\",\n        \"Interpolants as classifiers\",\n        \"A data driven approach for algebraic loop invariants\",\n        \"Verification as learning geometric concepts\",\n        \"Learning loop invariants for program verification\",\n        \"Code2inv: A deep learning framework for program verification\",\n        \"Combinatorial sketching for finite programs\",\n        \"Global guidance for local generalization in model checking\",\n        \"Introduction to evolutionary algorithms\",\n        \"A data-driven chc solver\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Probabilistic Guarantees for Practical LIA Loop Invariant Automation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}