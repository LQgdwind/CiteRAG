{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: APNN-TC: Accelerating Arbitrary Precision Neural Networks on Ampere GPU Tensor Cores\n\nPaper Abstract: Abstract. Over the years, accelerating neural networks with quantization has been widely studied. Unfortunately, prior efforts with diverse precisions (e.g., 1-bit weights and 2-bit activations) are usually restricted by limited precision support on GPUs (e.g., int1 and int4). To break such restrictions, we introduce the first Arbitrary Precision Neural Network framework (APNN-TC)111The project is open-sourced at https://github.com/BoyuanFeng/APNN-TC to fully exploit quantization benefits on Ampere GPU Tensor Cores. Specifically, APNN-TC first incorporates a novel emulation algorithm to support arbitrary short bit-width computation with int1 compute primitives and XOR/AND Boolean operations. Second, APNN-TC integrates arbitrary precision layer designs to efficiently map our emulation algorithm to Tensor Cores with novel batching strategies and specialized memory organization. Third, APNN-TC embodies a novel arbitrary precision NN design to minimize memory access across layers and further improve performance. Extensive evaluations show that APNN-TC can achieve significant speedup over CUTLASS kernels and various NN models, such as ResNet and VGG.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"AMD Accelerated Parallel Processing OpenCL Programming Guide\",\n        \"Deep learning with low precision by half-wave gaussian quantization\",\n        \"Xception: Deep learning with depthwise separable convolutions\",\n        \"NVIDIA A100 Tensor Core GPU: Performance and Innovation\",\n        \"Volta: Performance and programmability\",\n        \"BinaryConnect: Training Deep Neural Networks with binary weights during propagations\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"BinaryCoP: Binary Neural Network-based COVID-19 Face-Mask Wear and Positioning Predictor on Edge Devices\",\n        \"XpulpNN: Accelerating Quantized Neural Networks on RISC-V Processors Through ISA Extensions\",\n        \"O3BNN-R: An out-of-order architecture for high-performance and regularized BNN inference\",\n        \"Deep Compression: Compressing Deep Neural Network with Pruning, Trained Quantization and Huffman Coding\",\n        \"Deep residual learning for image recognition\",\n        \"Intel Nervana Neural Network Processor-T (NNP-T) Fused Floating Point Many-Term Dot Product\",\n        \"MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications\",\n        \"Intel Xeon Phi Coprocessor Instruction Set Architecture Reference Manual\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Dissecting the NVidia Turing T4 GPU via microbenchmarking\",\n        \"Dissecting the NVIDIA volta GPU architecture via microbenchmarking\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Efficient Object Detection Using Embedded Binarized Neural Networks\",\n        \"BSTC: A novel binarized-soft-tensor-core design for accelerating bit-based approximated neural nets\",\n        \"X: A comprehensive analytic model for parallel machines\",\n        \"Critical points based register-concurrency autotuning for GPUs\",\n        \"Accelerating Binarized Neural Networks via Bit-Tensor-Cores in Turing GPUs\",\n        \"Transit: A visual analytical model for multithreaded machines\",\n        \"Boosting Deep Neural Network Efficiency with Dual-Module Inference.\",\n        \"AutoCompress: An automatic DNN structured pruning framework for ultra-high compression rates\",\n        \"Pconv: The missing but desirable sparsity in dnn weight pruning for real-time execution on mobile devices\",\n        \"Embedded Binarized Neural Networks\",\n        \"Towards Real-Time DNN Inference on Mobile Platforms with Model Pruning and Compiler Optimization\",\n        \"CUDA Template Library for Dense Linear Algebra at All Levels and Scales (CUTLASS)\",\n        \"NVIDIA A100 Tensor Core GPU Architecture\",\n        \"NVIDIA TESLA V100 GPU ARCHITECTURE\",\n        \"CUDA Programming Guide: Sub-byte Operations\",\n        \"Energy-Efficient Neural Network Accelerator Based on Outlier-Aware Low-Precision Computation\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Modeling deep learning accelerator enabled gpus\",\n        \"Sesor Technologies and Data Analytics\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Attention is All you Need\",\n        \"HAQ: Hardware-Aware Automated Quantization With Mixed Precision\",\n        \"DSXplore: Optimizing Convolutional Neural Networks via Sliding-Channel Convolutions\",\n        \"Quantized Convolutional Neural Networks for Mobile Devices\",\n        \"Searching for Low-Bit Weights in Quantized Neural Networks\",\n        \"Lq-nets: Learned quantization for highly accurate and compact deep neural networks\",\n        \"ChrEn: Cherokee-English Machine Translation for Endangered Language Revitalization\",\n        \"DoReFa-Net: Training Low Bitwidth Convolutional Neural Networks with Low Bitwidth Gradients\",\n        \"Training Quantized Neural Networks With a Full-Precision Auxiliary Module\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in APNN-TC: Accelerating Arbitrary Precision Neural Networks on Ampere GPU Tensor Cores, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}