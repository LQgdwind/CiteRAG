{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Quantum Backtracking in Qrisp Applied to Sudoku Problems\n\nPaper Abstract: Abstract The quantum backtracking algorithm proposed by Ashley Montanaro raised considerable interest, as it provides a quantum speed-up for a large class of classical optimization algorithms. It does not suffer from Barren-Plateaus and transfers well into the fault-tolerant era, as it requires only a limited number of arbitrary angle gates. Despite its potential, the algorithm has seen limited implementation efforts, presumably due to its abstract formulation. In this work, we provide a detailed instruction on implementing the quantum step operator for arbitrary backtracking instances. For a single controlled diffuser of a binary backtracking tree with depth nùëõn, our implementation requires only 6‚Äãn+146ùëõ146n+14 CX gates. We detail the process of constructing accept and reject oracles for Sudoku problems using our interface to quantum backtracking. The presented code is written using Qrisp, a high-level quantum programming language, making it executable on most current physical backends and simulators. Subsequently, we perform several simulator based experiments and demonstrate solving 4x4 Sudoku instances with up to 9 empty fields. This is, to the best of our knowledge, the first instance of a compilable implementation of this generality, marking a significant and exciting step forward in quantum software engineering.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Quantum optimization: Potential, challenges, and the path forward\",\n        \"Beating the random assignment on constraint satisfaction problems of bounded degree\",\n        \"A quantum-inspired classical algorithm for recommendation systems\",\n        \"Grover‚Äôs algorithm offers no quantum advantage\",\n        \"Does provable absence of barren plateaus imply classical simulability? or, why we need to rethink variational quantum computing\",\n        \"Disentangling hype from practicality: On realistically achieving quantum advantage\",\n        \"Focus beyond quadratic speedups for error-corrected quantum advantage\",\n        \"Quantum-walk speedup of backtracking algorithms\",\n        \"Quantum speedup of branch-and-bound algorithms\",\n        \"Quantum algorithms: A survey of applications and end-to-end complexities\",\n        \"Practical implementation of a quantum backtracking algorithm\",\n        \"Qiskit: An open-source framework for quantum computing\",\n        \"t|ket‚ü©: a retargetable compiler for NISQ devices\",\n        \"Pennylane: Automatic differentiation of hybrid quantum-classical computations\",\n        \"Cirq\",\n        \"Qibo: a framework for quantum simulation with hardware acceleration\",\n        \"A new quantum ripple-carry addition circuit\",\n        \"Halving the cost of quantum addition\",\n        \"A higher radix architecture for quantum carry-lookahead adder\",\n        \"Efficient floating point arithmetic for quantum computers\",\n        \"Quantum algorithm for tree size estimation, with applications to backtracking and 2-player games\",\n        \"Quantum lattice enumeration and tweaking discrete pruning\",\n        \"Quantum speedup of the traveling-salesman problem for bounded-degree graphs\",\n        \"Faster than classical quantum algorithm for dense formulas of exact satisfiability and occupation problems\",\n        \"Applying quantum algorithms to constraint satisfaction problems\",\n        \"Silq: a high-level quantum language with safe uncomputation and intuitive semantics\",\n        \"Qunity: A unified language for quantum and classical computing\",\n        \"ProjectQ: an open source software framework for quantum computing\",\n        \"Q#: Enabling scalable quantum computing and development with a high-level dsl\",\n        \"Quipper: a scalable quantum programming language\",\n        \"isQ: Towards a practical software stack for quantum programming\",\n        \"Tower: data structures in quantum superposition\",\n        \"Quantum types: going beyond qubits and quantum gates\",\n        \"Unqomp: synthesizing uncomputation in quantum circuits\",\n        \"Uncomputation in the Qrisp high-level quantum programming framework\",\n        \"A fast quantum mechanical algorithm for database search\",\n        \"Logic synthesis for quantum computing\",\n        \"Reversible pebbling game for quantum memory management\",\n        \"Efficient calculation of the Reed-Muller form by means of the Walsh transform\",\n        \"On the controlled-not complexity of controlled-not‚Äìphase circuits\",\n        \"Automatic generation of Grover quantum oracles for arbitrary data structures\",\n        \"Efficient constructions for simulating multi controlled quantum gates\",\n        \"Synthesis of quantum-logic circuits\",\n        \"Local, expressive, quantum-number-preserving VQE ans√§tze for fermionic systems\",\n        \"A meet-in-the-middle algorithm for fast synthesis of depth-optimal quantum circuits\",\n        \"Advantages of using relative-phase Toffoli gates with an application to multiple control Toffoli optimization\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Quantum Backtracking in Qrisp Applied to Sudoku Problems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}