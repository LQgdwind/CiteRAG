{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ùí™‚Å¢(1) Communication for Distributed SGD through Two-Level Gradient Averaging\n\nPaper Abstract: Abstract Large neural network models present a hefty communication challenge to distributed Stochastic Gradient Descent (SGD), with a communication complexity of ùí™‚Äã(n)ùí™ùëõ\\mathcal{O}(n) per worker for a model of nùëõn parameters. Many sparsification and quantization techniques have been proposed to compress the gradients, some reducing the communication complexity to ùí™‚Äã(k)ùí™ùëò\\mathcal{O}(k), where k‚â™nmuch-less-thanùëòùëõk\\ll n. In this paper, we introduce a strategy called two-level gradient averaging (A2SGD) to consolidate all gradients down to merely two local averages per worker before the computation of two global averages for an updated model. A2SGD also retains local errors to maintain the variance for fast convergence. Our theoretical analysis shows that A2SGD converges similarly like the default distributed SGD algorithm. Our evaluation validates the theoretical conclusion and demonstrates that A2SGD significantly reduces the communication traffic per worker, and improves the overall training time of LSTM-PTB by 3.2√ó3.2\\times and 23.2√ó23.2\\times, respectively, compared to Top-K and QSGD. To the best of our knowledge, A2SGD is the first to achieve ùí™‚Äã(1)ùí™1\\mathcal{O}(1) communication complexity per worker for distributed SGD.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Going Deeper with Convolutions\",\n        \"Identity Mappings in Deep Residual Networks\",\n        \"Language models are unsupervised multitask learners\",\n        \"Attention is all you need\",\n        \"Distributed delayed stochastic optimization\",\n        \"Scalable distributed dnn training using commodity gpu cloud computing\",\n        \"More effective distributed ml via a stale synchronous parallel parameter server\",\n        \"Scaling distributed machine learning with the parameter server\",\n        \"Project adam: Building an efficient and scalable deep learning training system\",\n        \"Accurate, Large Minibatch SGD: Training Imagenet in 1 Hour\",\n        \"Scaling SGD batch size to 32k for Imagenet Training\",\n        \"Efficient Mini-batch Training for Stochastic Optimization\",\n        \"Baidu Research, TensorFlow-Allreduce\",\n        \"Scalable distributed dnn training using tensorflow and cuda-aware mpi: Characterization, designs, and performance evaluation\",\n        \"A linear speedup analysis of distributed deep learning with sparse and quantized communication\",\n        \"Optimal brain damage\",\n        \"Second order derivatives for network pruning: Optimal brain surgeon\",\n        \"Dynamic network surgery for efficient dnns\",\n        \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding\",\n        \"Terngrad: Ternary gradients to reduce communication in distributed deep learning\",\n        \"Qsgd: Communication-efficient sgd via gradient quantization and encoding\",\n        \"Error feedback fixes signsgd and other gradient compression schemes\",\n        \"signsgd with majority vote is communication efficient and fault tolerant\",\n        \"The convergence of sparsified gradient methods\",\n        \"Understanding top-k sparsification in distributed deep learning\",\n        \"Sparse communication for distributed gradient descent\",\n        \"Sparsified sgd with memory\",\n        \"1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns\",\n        \"Error compensated quantized sgd and its applications to large-scale distributed optimization\",\n        \"Doublesqueeze: Parallel stochastic gradient descent with double-pass error-compensated compression\",\n        \"Trading redundancy for communication: Speeding up distributed sgd for non-convex optimization\",\n        \"Flexpoint: An adaptive numerical format for efficient training of deep neural networks\",\n        \"Mixed precision training\",\n        \"Highly scalable deep learning training system with mixed-precision: Training imagenet in four minutes\",\n        \"Training deep neural networks with 8-bit floating point numbers\",\n        \"Accurate and efficient 2-bit quantized neural networks\",\n        \"Deep gradient compression: Reducing the communication bandwidth for distributed training\",\n        \"Gradient sparsification for communication-efficient distributed optimization\",\n        \"A convergence analysis of distributed sgd with communication-efficient gradient sparsification\",\n        \"Sparcml: High-performance sparse communication for machine learning\",\n        \"Tensors and Dynamic neural networks in Python with strong GPU acceleration\",\n        \"Online learning and stochastic approximations\",\n        \"CUDA\",\n        \"Horovod: fast and easy distributed deep learning in tensorflow\",\n        \"Optimization of collective communication operations in mpich\",\n        \"K-Selection Implementation of Torch TopK\",\n        \"Efficient top-k query processing on massively parallel hardware\",\n        \"Torsten hoe er. 2018. demystifying parallel and distributed deep learning: An in-depth concurrency analysis\",\n        \"Xsede: accelerating scientific discovery\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in ùí™‚Å¢(1) Communication for Distributed SGD through Two-Level Gradient Averaging, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}