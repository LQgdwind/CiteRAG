{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Kalman Bayesian Neural Networks for Closed-form Online Learning\n\nPaper Abstract: Abstract Compared to point estimates calculated by standard neural networks, Bayesian neural networks (BNN) provide probability distributions over the output predictions and model parameters, i.e., the weights. Training the weight distribution of a BNN, however, is more involved due to the intractability of the underlying Bayesian inference problem and thus, requires efficient approximations. In this paper, we propose a novel approach for BNN learning via closed-form Bayesian inference. For this purpose, the calculation of the predictive distribution of the output and the update of the weight distribution are treated as Bayesian filtering and smoothing problems, where the weights are modeled as Gaussian random variables. This allows closed-form expressions for training the network’s parameters in a sequential/online fashion without gradient descent. We demonstrate our method on several UCI datasets and compare it to the state of the art.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Emergence of Invariance and Disentanglement in Deep Representations\",\n        \"Overview of artificial intelligence in medicine\",\n        \"The need for uncertainty quantification in machine-assisted medical decision making\",\n        \"Practical Recommendations for Gradient-Based Training of Deep Architectures, 437–478\",\n        \"Pyro: Deep Universal Probabilistic Programming\",\n        \"UCI Machine Learning Repository\",\n        \"Hybrid Monte Carlo\",\n        \"Simulation-driven machine learning for robotics and automation\",\n        \"Dropout as a Bayesian Approximation: Representing Model Uncertainty in Deep Learning\",\n        \"Stochastic relaxation, Gibbs distributions, and the Bayesian restoration of images\",\n        \"Assumed Density Filtering Methods for Learning Bayesian Neural Networks\",\n        \"Practical variational inference for neural networks\",\n        \"Probabilistic backpropagation for scalable learning of bayesian neural networks\",\n        \"Stochastic Variational Inference\",\n        \"The No-U-Turn sampler: adaptively setting path lengths in Hamiltonian Monte Carlo\",\n        \"Nonlinear Gaussian Filtering: Theory, Algorithms, and Applications, volume 19\",\n        \"Bayesian Perceptron: Towards fully Bayesian Neural Networks\",\n        \"A New Approach to Linear Filtering and Prediction Problems\",\n        \"Auto-Encoding Variational Bayes\",\n        \"Overcoming catastrophic forgetting in neural networks\",\n        \"Being Bayesian, Even Just a Bit, Fixes Overconfidence in ReLU Networks\",\n        \"Continual learning with bayesian neural networks for non-stationary data\",\n        \"Mean-Field Approximation to Gaussian-Softmax Integralwith Application to Uncertainty Estimation\",\n        \"A practical Bayesian framework for backpropagation networks\",\n        \"Stochastic Models, Estimation, and Control, volume 141 of Mathematics in Science and Engineering\",\n        \"Equation of state calculations by fast computing machines\",\n        \"A family of algorithms for approximate Bayesian inference\",\n        \"Virtual Vector Machine for Bayesian Online Classification\",\n        \"Machine learning: a probabilistic perspective\",\n        \"Bayesian Learning for Neural Networks\",\n        \"Variational Continual Learning\",\n        \"A Bayesian Approach to Online Learning\",\n        \"Continual lifelong learning with neural networks: A review\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Parameter-based Kalman Filter Training: Theory and Implementation\",\n        \"Maximum likelihood estimates of linear dynamic systems\",\n        \"A Scalable Laplace Approximation for Neural Networks\",\n        \"Online Structured Laplace Approximations for Overcoming Catastrophic Forgetting\",\n        \"Scalable Bayesian Optimization Using Deep Neural Networks\",\n        \"Dropout: A Simple Way to Prevent Neural Networks from Overfitting\",\n        \"Bayesian Filtering and Smoothing\",\n        \"Learning Algorithms for Neural Networks with the Kalman Filter\",\n        \"Deterministic Variational Inference for Robust Bayesian Neural Networks\",\n        \"Tossingbot: Learning to Throw Arbitrary Objects with Residual Physics\",\n        \"Advances in Variational Inference\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Kalman Bayesian Neural Networks for Closed-form Online Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}