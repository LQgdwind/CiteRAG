{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning by Fixing: Solving Math Word Problems with Weak Supervision\n\nPaper Abstract: Abstract Previous neural solvers of math word problems (MWPs) are learned with full supervision and fail to generate diverse solutions. In this paper, we address this issue by introducing a weakly-supervised paradigm for learning MWPs. Our method only requires the annotations of the final answers and can generate various solutions for a single problem. To boost weakly-supervised learning, we propose a novel learning-by-fixing (LBF) framework, which corrects the misperceptions of the neural network via symbolic reasoning. Specifically, for an incorrect solution tree generated by the neural network, the fixing mechanism propagates the error from the root node to the leaf nodes and infers the most probable fix that can be executed to get the desired answer. To generate more diverse solutions, tree regularization is applied to guide the efficient shrinkage and exploration of the solution space, and a memory buffer is designed to track and save the discovered various fixes for each problem. Experimental results on the Math23K dataset show the proposed LBF framework significantly outperforms reinforcement learning baselines in weakly-supervised learning. Furthermore, it achieves comparable top-1 and much better top-3/5 answer accuracies than fully-supervised methods, demonstrating its strength in producing diverse solutions.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning to Generalize from Sparse and Underspecified Rewards\",\n        \"MathQA: Towards Interpretable Math Word Problem Solving with Operation-Based Formalisms\",\n        \"Robust Understanding of Word Problems with Extraneous Information\",\n        \"Neural Symbolic Reader: Scalable Integration of Distributed and Symbolic Representations for Reading Comprehension\",\n        \"Semantically-Aligned Equation Generation for Solving and Reasoning Math Word Problems\",\n        \"Learning phrase representations using RNN encoder-decoder for statistical machine translation\",\n        \"Bridging Machine Learning and Logical Reasoning by Abductive Learning\",\n        \"Combining logical abduction and statistical induction: Discovering written primitives with human knowledge\",\n        \"DROP: A Reading Comprehension Benchmark Requiring Discrete Reasoning Over Paragraphs\",\n        \"Understanding and solving arithmetic word problems: A computer simulation\",\n        \"From Language to Programs: Bridging Reinforcement Learning and Maximum Marginal Likelihood\",\n        \"Academic Reader: An Interactive Question Answering System on Academic Literatures\",\n        \"Neural Math Word Problem Solver with Reinforcement Learning\",\n        \"Learning Fine-Grained Expressions to Solve Math Word Problems\",\n        \"How well do Computers Solve Math Word Problems? Large-Scale Dataset Construction and Evaluation\",\n        \"Parsing Algebraic Word Problems into Equations\",\n        \"Learning to Automatically Solve Algebra Word Problems\",\n        \"Closed Loop Neural-Symbolic Learning via Integrating Neural Perception, Grammar Parsing, and Symbolic Reasoning\",\n        \"A Competence-aware Curriculum for Visual Concepts Learning via Question Answering\",\n        \"Neural symbolic machines: Learning semantic parsers on freebase with weak supervision\",\n        \"Memory Augmented Policy Optimization for Program Synthesis and Semantic Parsing\",\n        \"Program Induction by Rationale Generation: Learning to Solve and Explain Algebraic Word Problems\",\n        \"Abductive cognition: The epistemological and eco-cognitive dimensions of hypothetical reasoning, volume 3\",\n        \"Learning To Use Formulas To Solve Simple Arithmetic Problems\",\n        \"A Restricted Visual Turing Test for Deep Scene and Event Understanding\",\n        \"Data-Driven Methods for Solving Algebra Word Problems\",\n        \"Unit Dependency Graph and Its Application to Arithmetic Word Problem Solving\",\n        \"Automatically Solving Number Word Problems by Semantic Parsing and Reasoning\",\n        \"Joint Video and Text Parsing for Understanding Events and Answering Queries\",\n        \"Learning from Explicit and Implicit Supervision Jointly For Algebra Word Problems\",\n        \"Translating Math Word Problem to Expression Tree\",\n        \"Template-Based Math Word Problem Solvers with Recursive Neural Networks\",\n        \"Deep Neural Solver for Math Word Problems\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Googleâ€™s Neural Machine Translation System: Bridging the Gap between Human and Machine Translation\",\n        \"A Goal-Driven Tree-Structured Neural Model for Math Word Problems\",\n        \"ReClor: A Reading Comprehension Dataset Requiring Logical Reasoning\",\n        \"Frame-Based Calculus of Solving Arithmetic Multi-Step Addition and Subtraction Word Problems\",\n        \"RAVEN: A Dataset for Relational and Analogical Visual REasoNing\",\n        \"Graph-to-Tree Learning for Solving Math Word Problems\",\n        \"Machine Number Sense: A Dataset of Visual Arithmetic Problems for Abstract and Relational Reasoning\",\n        \"Learn to Solve Algebra Word Problems Using Quadratic Programming\",\n        \"Abductive learning: towards bridging machine learning and logical reasoning\",\n        \"Dark, Beyond Deep: A Paradigm Shift to Cognitive AI with Humanlike Common Sense\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Learning by Fixing: Solving Math Word Problems with Weak Supervision, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}