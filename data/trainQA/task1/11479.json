{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: PutnamBench: Evaluating Neural Theorem-Provers on the Putnam Mathematical Competition\n\nPaper Abstract: Abstract We present PutnamBench, a new multilingual benchmark for evaluating the ability of neural theorem-provers to solve competition mathematics problems. PutnamBench consists of 1697 hand-constructed formalizations of 640 theorems sourced from the William Lowell Putnam Mathematical Competition, the premier undergraduate-level mathematics competition in North America. All the theorems have formalizations in Lean 4 and Isabelle; a substantial subset also has Coq formalizations. Proving the theorems requires significant problem-solving ability and proficiency in a broad range of topics taught in undergraduate mathematics courses. We use PutnamBench to evaluate several established neural and symbolic theorem-provers. These approaches can only solve a handful of the PutnamBench problems, establishing the benchmark as a difficult open challenge for research on neural theorem-proving. PutnamBench is available at https://github.com/trishullab/PutnamBench.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"AFP\",\n        \"The William Lowell Putnam Mathematical Competition: Problems and Solutions, 1965-1984\",\n        \"Proofnet: Autoformalizing and formally proving undergraduate-level mathematics\",\n        \"Llemma: An Open Language Model For Mathematics\",\n        \"The Tactician: A Seamless, Interactive Tactic Learner and Prover for Coq\",\n        \"Graph2tac: Online representation learning of formal math concepts\",\n        \"IMO Grand Challenge\",\n        \"Training verifiers to solve math word problems\",\n        \"William-Lowell Putnam Mathematical Competition\",\n        \"Compfiles\",\n        \"Coqtail\",\n        \"Coquelicot\",\n        \"Hammer for coq: Automation for dependent type theory\",\n        \"Baldur: whole-proof generation and repair with large language models\",\n        \"GeoCoq\",\n        \"A machine-checked proof of the odd order theorem\",\n        \"Measuring mathematical problem solving with the math dataset\",\n        \"The coq proof assistant a tutorial\",\n        \"Thor: Wielding hammers to integrate language models and automated theorem provers\",\n        \"Draft, sketch, and prove: Guiding formal theorem provers with informal proofs\",\n        \"Lisa: Language models of isabelle proofs\",\n        \"The William Lowell Putnam Mathematical Competition 1985-2000: Problems, Solutions and Commentary\",\n        \"The William Lowell Putnam Mathematical Competition 2001â€“2016: Problems, Solutions, and Commentary\",\n        \"Hypertree proof search for neural theorem proving\",\n        \"Formal verification of a realistic compiler\",\n        \"A survey on deep learning for theorem proving\",\n        \"Fimo: A challenge formal dataset for automated theorem proving\",\n        \"Mathcomp\",\n        \"mathcomp-analysis\",\n        \"The lean mathematical library\",\n        \"Metamath: A Computer Language for Pure Mathematics\",\n        \"The lean 4 theorem prover and programming language\",\n        \"Empirical explorations of the logic theory machine: a case study in heuristic\",\n        \"Gpt-4 technical report\",\n        \"Three years of experience with sledgehammer, a practical link between automatic and interactive theorem provers\",\n        \"Isabelle: A generic theorem prover\",\n        \"Generative language modeling for automated theorem proving\",\n        \"Formal mathematics statement curriculum learning\",\n        \"Prize\",\n        \"The four-colour theorem\",\n        \"Generating correctness proofs with neural networks\",\n        \"An In-Context Learning Agent for Formal Theorem-Proving\",\n        \"Solving olympiad geometry without human demonstrations\",\n        \"GitHub - rahul3613/ProofNet-lean4: ProofNet dataset ported into Lean 4\",\n        \"Lego-prover: Neural theorem proving with growing libraries\",\n        \"Proving theorems recursively\",\n        \"The isabelle framework\",\n        \"Deepseek-prover: Advancing theorem proving in llms through large-scale synthetic data\",\n        \"Learning to prove theorems via interacting with proof assistants\",\n        \"Leandojo: Theorem proving with retrieval-augmented language models\",\n        \"Online machine learning techniques for coq: A comparison\",\n        \"Decomposing the enigma: Subgoal-based demonstration learning for formal theorem proving\",\n        \"Lyra: Orchestrating dual correction in automated theorem proving\",\n        \"Minif2f: a cross-system benchmark for formal olympiad-level mathematics\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in PutnamBench: Evaluating Neural Theorem-Provers on the Putnam Mathematical Competition, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}