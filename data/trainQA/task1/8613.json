{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Reason and Memorize with Self-Notes\n\nPaper Abstract: Abstract Large language models have been shown to struggle with multi-step reasoning, and do not retain previous reasoning steps for future use. We propose a simple method for solving both of these problems by allowing the model to take Self-Notes. Unlike recent chain-of-thought or scratchpad approaches, the model can deviate from the input context at any time to explicitly think and write down its thoughts. This allows the model to perform reasoning on the fly as it reads the context and even integrate previous reasoning steps, thus enhancing its memory with useful information and enabling multi-step reasoning. Experiments across a wide variety of tasks demonstrate that our method can outperform chain-of-thought and scratchpad methods by taking Self-Notes that interleave the input text.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Attention Is All You Need\",\n        \"Language Models are Few-Shot Learners\",\n        \"Show Your Work: Scratchpads for Intermediate Computation with Language Models\",\n        \"Chain-of-Thought Prompting Elicits Reasoning in Large Language Models\",\n        \"Sparks of artificial general intelligence: Early experiments with gpt-4\",\n        \"Program Synthesis with Large Language Models\",\n        \"Measuring and Narrowing the Compositionality Gap in Language Models\",\n        \"Selection-Inference: Exploiting Large Language Models for Interpretable Logical Reasoning\",\n        \"STaR: Bootstrapping Reasoning With Reasoning\",\n        \"Inner Monologue: Embodied Reasoning through Planning with Language Models\",\n        \"Addressing Some Limitations of Transformers with Feedback Memory\",\n        \"Long Short-Term Memory\",\n        \"Staircase Attention for Recurrent Processing of Sequences\",\n        \"Block-Recurrent Transformers\",\n        \"Reading between the lines\",\n        \"Exploring Length Generalization in Large Language Models\",\n        \"Chess as a Testbed for Language Model State Tracking\",\n        \"Solving general arithmetic word problems\",\n        \"Training verifiers to solve math word problems\",\n        \"Language Models are Unsupervised Multitask Learners\",\n        \"HuggingFaceâ€™s Transformers: State-of-the-art Natural Language Processing\",\n        \"Towards AI-Complete Question Answering: A Set of Prerequisite Toy Tasks\",\n        \"Gpt-j-6b: A 6 billion parameter autoregressive language model\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"From machine learning to machine reasoning: An essay\",\n        \"End-to-End Memory Networks\",\n        \"Tracking the world state with recurrent entity networks\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Universal Transformers\",\n        \"e-SNLI: Natural Language Inference with Natural Language Explanations\",\n        \"Program induction by rationale generation: Learning to solve and explain algebraic word problems\",\n        \"Large Language Models are Zero-Shot Reasoners\",\n        \"Interleaving Retrieval with Chain-of-Thought Reasoning for Knowledge-Intensive Multi-Step Questions\",\n        \"Do As I Can, Not As I Say: Grounding Language in Robotic Affordances\",\n        \"Toolformer: Language models can teach themselves to use tools\",\n        \"Train Short, Test Long: Attention with Linear Biases Enables Input Length Extrapolation\",\n        \"On the Relation between Position Information and Sentence Length in Neural Machine Translation\",\n        \"SHAPE: Shifted Absolute Position Embedding for Transformers\",\n        \"Compositionality decomposed: How do neural networks generalise?\",\n        \"The Curious Case of Absolute Position Embeddings\",\n        \"Adaptive Computation Time for Recurrent Neural Networks\",\n        \"Adaptive Neural Networks for Efficient Inference\",\n        \"PonderNet: Learning to Ponder\",\n        \"PEER: A Collaborative Language Model\",\n        \"Levenshtein Transformer\",\n        \"Insertion Transformer: Flexible Sequence Generation via Insertion Operations\",\n        \"Can You Unpack That? Learning to Rewrite Questions-in-Context\",\n        \"Generating Information-Seeking Conversations from Unlabeled Documents\",\n        \"Roformer: Enhanced transformer with rotary position embedding\",\n        \"PaLM: Scaling Language Modeling with Pathways\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Learning to Reason and Memorize with Self-Notes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}