{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Neural Network Bandits\n\nPaper Abstract: Abstract We consider the bandit optimization problem with the reward function defined over graph-structured data. This problem has important applications in molecule design and drug discovery, where the reward is naturally invariant to graph permutations. The key challenges in this setting are scaling to large domains, and to graphs with many nodes. We resolve these challenges by embedding the permutation invariance into our model. In particular, we show that graph neural networks (GNNs) can be used to estimate the reward function, assuming it resides in the Reproducing Kernel Hilbert Space of a permutation-invariant additive kernel. By establishing a novel connection between such kernels and the graph neural tangent kernel (GNTK), we introduce the first GNN confidence bound and use it to design a phased-elimination algorithm with sublinear regret. Our regret bound depends on the GNTK‚Äôs maximum information gain, which we also provide a bound for. While the reward function depends on all NùëÅN node features, our guarantees are independent of the number of graph nodes NùëÅN. Empirically, our approach exhibits competitive performance and scales well on graph-structured domains.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"SMILES, a line notation and computerized interpreter for chemical structures\",\n        \"On exact computation with an infinitely wide neural net\",\n        \"Finite-time analysis of the multiarmed bandit problem\",\n        \"Near-optimal regret bounds for reinforcement learning\",\n        \"Deep equals shallow for ReLU networks in kernel regimes\",\n        \"On the sample complexity of learning under geometric stability\",\n        \"Misspecified Gaussian process bandit optimization\",\n        \"Truncated variance reduction: A unified approach to Bayesian optimization and level-set estimation\",\n        \"A robust phased elimination algorithm for corruption-tolerant Gaussian process bandits\",\n        \"Generalization bounds of stochastic gradient descent for wide and deep neural networks\",\n        \"On lazy training in differentiable programming\",\n        \"On kernelized multi-armed bandits\",\n        \"Parallel gaussian process optimization with upper confidence bound and pure exploration\",\n        \"Exponential regret bounds for Gaussian process bandits with deterministic observations\",\n        \"Graph neural tangent kernel: Fusing graph neural networks with graph kernels\",\n        \"Structure-based protein function prediction using graph convolutional networks\",\n        \"Automatic chemical design using a data-driven continuous representation of molecules\",\n        \"Constrained Bayesian optimization for automatic chemical design using variational autoencoders\",\n        \"Batched neural bandits\",\n        \"A semi-supervised approach to architected materials design using graph neural networks\",\n        \"Neural tangent kernel: Convergence and generalization in neural networks\",\n        \"Could graph neural networks learn better molecular representation for drug discovery? a comparison study of descriptor-based and graph-based models\",\n        \"Junction tree variational autoencoder for molecular graph generation\",\n        \"High dimensional Bayesian optimisation and bandits via additive models\",\n        \"Neural contextual bandits without regret\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Chembo: Bayesian optimization of small organic molecules with synthesizable recommendations\",\n        \"Contextual Gaussian process bandit optimization\",\n        \"Gaussian process bandit optimization with few batches\",\n        \"Information-theoretic confidence bounds for reinforcement learning\",\n        \"Learning with invariances in random features and kernel models\",\n        \"Neural tangents: Fast and easy infinite neural networks in Python\",\n        \"Automatic differentiation in PyTorch\",\n        \"High-dimensional Bayesian optimization via additive models with overlapping groups\",\n        \"Learning to optimize via posterior sampling\",\n        \"Gaussian process optimization in the bandit setting: No regret and experimental design\",\n        \"Accelerating Bayesian optimization for biological sequence design with denoising autoencoders\",\n        \"On the likelihood that one unknown probability exceeds another in view of the evidence of two samples\",\n        \"Optimal order simple regret for gaussian process bandits\",\n        \"On information gain and regret bounds in Gaussian process bandits\",\n        \"Finite-time analysis of kernelised contextual bandits\",\n        \"Spectral bandits for smooth graph functions\",\n        \"Neural Thompson Sampling\",\n        \"Neural contextual bandits with UCB-based exploration\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Graph Neural Network Bandits, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}