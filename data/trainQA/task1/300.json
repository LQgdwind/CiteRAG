{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Analysis of Indexing Structures for Immutable Data\n\nPaper Abstract: Abstract. In emerging applications such as blockchains and collaborative data analytics, there are strong demands for data immutability, multi-version accesses, and tamper-evident controls. To provide efficient support for lookup and merge operations, three new index structures for immutable data, namely Merkle Patricia Trie (MPT), Merkle Bucket Tree (MBT), and Pattern-Oriented-Split Tree (POS-Tree), have been proposed. Although these structures have been adopted in real applications, there is no systematic evaluation of their pros and cons in the literature, making it difficult for practitioners to choose the right index structure for their applications. To alleviate the above problem, we present a comprehensive analysis of the existing index structures for immutable data, and evaluate both their asymptotic and empirical performance. Specifically, we show that MPT, MBT, and POS-Tree are all instances of a recently proposed framework, dubbed Structurally Invariant and Reusable Indexes (SIRI). We propose to evaluate the SIRI instances on their index performance and deduplication capability. We establish the worst-case guarantees of each index, and experimentally evaluate all indexes in a wide variety of settings. Based on our theoretical and empirical analysis, we conclude that POS-Tree is a favorable choice for indexing immutable data.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Amazon quantum ledger database\",\n        \"Azure blockchain service\",\n        \"Ethereum\",\n        \"Git\",\n        \"Git(and github) for data\",\n        \"Googledocs\",\n        \"Hyperledger\",\n        \"LevelDB\",\n        \"Mercurial\",\n        \"Noms\",\n        \"RocksDB\",\n        \"Subversion\",\n        \"Webank\",\n        \"Performance evaluation of a temporal database management system\",\n        \"Concerto: A high concurrency key-value store with integrity\",\n        \"A critique of ansi sql isolation levels\",\n        \"Multiversion concurrency control-theory and algorithms\",\n        \"Datahub: Collaborative data science & dataset version mangement at scale\",\n        \"Design, implementation, and evaluation of a repairable database management system\",\n        \"Untangling blockchain: A data processing view of blockchain systems\",\n        \"Blockbench: A framework for analyzing private blockchains\",\n        \"A framework for analyzing and improving content-based chunking algorithms\",\n        \"OrpheusDB: Bolt-on versioning for relational databases\",\n        \"Hashing methods for temporal data\",\n        \"Oceanstore: An architecture for global-scale persistent storage\",\n        \"Fully persistent B+-trees\",\n        \"Decibel: The relational dataset branching system\",\n        \"A digital signature based on a conventional encryption function\",\n        \"A low-bandwidth network file system\",\n        \"Bitcoin: A peer-to-peer electronic cash system\",\n        \"Purely functional data structures\",\n        \"A survey and classification of storage deduplication systems\",\n        \"Serializable snapshot isolation in postgresql\",\n        \"Making data structures persistent\",\n        \"B-trees, shadowing, and clones\",\n        \"Fine-grained, secure and efficient data provenance on blockchain systems\",\n        \"Comparison of access methods for time-evolving data\",\n        \"Elephant: the file system that never forgets\",\n        \"Efficient versioning for scientific array databases\",\n        \"Metadata efficiency in versioning file systems\",\n        \"The design of the POSTGRES\",\n        \"Self-securing storage: Protecting data in compromised system\",\n        \"Temporal databases: Theory, design, and implementation\",\n        \"Forkbase: An efficient storage engine for blockchain and forkable applications\",\n        \"Ethereum: A secure decentralised generalised transaction ledger\",\n        \"A comprehensive study of the past, present, and future of data deduplication\",\n        \"Design, implementation, and evaluation of repairable file service\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Analysis of Indexing Structures for Immutable Data, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}