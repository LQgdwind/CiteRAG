{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Tree Decomposed Graph Neural Network\n\nPaper Abstract: Abstract. Graph Neural Networks (GNNs) have achieved significant success in learning better representations by performing feature propagation and transformation iteratively to leverage neighborhood information. Nevertheless, iterative propagation restricts the information of higher-layer neighborhoods to be transported through and fused with the lower-layer neighborhoodsâ€™, which unavoidably results in feature smoothing between neighborhoods in different layers and can thus compromise the performance, especially on heterophily networks. Furthermore, most deep GNNs only recognize the importance of higher-layer neighborhoods while yet to fully explore the importance of multi-hop dependency within the context of different layer neighborhoods in learning better representations. In this work, we first theoretically analyze the feature smoothing between neighborhoods in different layers and empirically demonstrate the variance of the homophily level across neighborhoods at different layers. Motivated by these analyses, we further propose a tree decomposition method to disentangle neighborhoods in different layers to alleviate feature smoothing among these layers. Moreover, we characterize the multi-hop dependency via graph diffusion within our tree decomposition formulation to construct Tree Decomposed Graph Neural Network (TDGNN), which can flexibly incorporate information from large receptive fields and aggregate this information utilizing the multi-hop dependency. Comprehensive experiments demonstrate the superior performance of TDGNN on both homophily and heterophily networks under a variety of node classification settings. Extensive parameter analysis highlights the ability of TDGNN to prevent over-smoothing and incorporate features from shallow layers with deeper multi-hop dependencies, which provides new insights towards deeper graph neural networks. The implementation of TDGNN is available at https://github.com/YuWVandy/TDGNN.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Multi-Scale Approach for Graph Link Prediction\",\n        \"Measuring and Relieving the Over-Smoothing Problem for Graph Neural Networks from the Topological View\",\n        \"Simple and Deep Graph Convolutional Networks\",\n        \"Adaptive Universal Generalized PageRank Graph Neural Network\",\n        \"Matrix multiplication via arithmetic progressions\",\n        \"Batch virtual adversarial training for graph convolutional networks\",\n        \"Epidemic graph convolutional network\",\n        \"Graph Random Neural Networks for Semi-Supervised Learning on Graphs\",\n        \"Graph representation learning\",\n        \"Inductive Representation Learning on Large Graphs\",\n        \"Self-supervised learning on graphs: Deep insights and new direction\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Predict then Propagate: Graph Neural Networks meet Personalized PageRank\",\n        \"Diffusion Improves Graph Learning\",\n        \"Deeper Insights Into Graph Convolutional Networks for Semi-Supervised Learning\",\n        \"Towards Deeper Graph Neural Networks\",\n        \"The small world problem\",\n        \"Multilayer perceptrons for classification and regression\",\n        \"The PageRank citation ranking: Bringing order to the web\",\n        \"Netprobe: a fast and scalable system for fraud detection in online auction networks\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Geom-GCN: Geometric Graph Convolutional Networks\",\n        \"A Simple Spectral Failure Mode for Graph Convolutional Networks\",\n        \"Deep graph learning: Foundations, advances and applications\",\n        \"On Proximity and Structural Role-based Embeddings in Networks: Misconceptions, Techniques, and Applications\",\n        \"Collective classification in network data\",\n        \"Gaussian elimination is not optimal\",\n        \"Deep Graph Infomax\",\n        \"Graph Attention Networks\",\n        \"Direct Multi-hop Attention based Graph Neural Network\",\n        \"Graph Neural Networks: Self-supervised Learning\",\n        \"Simplifying Graph Convolutional Networks\",\n        \"How Powerful are Graph Neural Networks?\",\n        \"Representation Learning on Graphs with Jumping Knowledge Networks\",\n        \"Two Sides of the Same Coin: Heterophily and Oversmoothing in Graph Convolutional Neural Networks\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Hierarchical Graph Representation Learning with Differentiable Pooling\",\n        \"Fast sparse matrix multiplication\",\n        \"Deep Graph Neural Networks with Shallow Subgraph Samplers\",\n        \"Link Prediction Based on Graph Neural Networks\",\n        \"Graph neural networks: A review of methods and applications\",\n        \"Graph Neural Networks with Heterophily\",\n        \"Beyond Homophily in Graph Neural Networks: Current Limitations and Effective Designs\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in Tree Decomposed Graph Neural Network, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}