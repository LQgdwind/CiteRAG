{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: missingum@section Introduction\n\nPaper Abstract: Abstract Despite the increasing popularity of policy gradient methods, they are yet to be widely utilized in sample-scarce applications, such as robotics. The sample efficiency could be improved by making best usage of available information. As a key component in reinforcement learning, the reward function is usually devised carefully to guide the agent. Hence, the reward function is usually known, allowing access to not only scalar reward signals but also reward gradients. To benefit from reward gradients, previous works require the knowledge of environment dynamics, which are hard to obtain. In this work, we develop the Reward Policy Gradient estimator, a novel approach that integrates reward gradients without learning a model. Bypassing the model dynamics allows our estimator to achieve a better bias-variance trade-off, which results in a higher sample efficiency, as shown in the empirical analysis. Our method also boosts the performance of Proximal Policy Optimization on different MuJoCo control tasks. 111The code is available at https://github.com/qlan3/Explorer/tree/RPG.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spinning Up in deep reinforcement learning\",\n        \"Reinforcement learning based recommender systems: A survey\",\n        \"Agent57: Outperforming the atari human benchmark\",\n        \"Dota 2 with large scale deep reinforcement learning\",\n        \"Openai gym\",\n        \"Deterministic value-policy gradients\",\n        \"An empirical analysis of measure-valued derivatives for policy gradients\",\n        \"Phasic policy gradient\",\n        \"Improving exploration in evolution strategies for deep reinforcement learning via a population of novelty-seeking agents\",\n        \"Challenges of real-world reinforcement learning\",\n        \"Impala: Scalable distributed deep-rl with importance weighted actor-learner architectures\",\n        \"Making hyper-parameters of proximal policy optimization robust to time discretization\",\n        \"Addressing function approximation error in actor-critic methods\",\n        \"Uncertainty in deep learning\",\n        \"Likelihood ratio gradient estimation for stochastic systems\",\n        \"Backpropagation through the void: Optimizing control variates for black-box gradient estimation\",\n        \"Variance reduction techniques for gradient estimates in reinforcement learning\",\n        \"Soft actor-critic algorithms and applications\",\n        \"Dream to control: Learning behaviors by latent imagination\",\n        \"Learning continuous control policies by stochastic value gradients\",\n        \"Stochastic variational inference\",\n        \"An off-policy policy gradient theorem using emphatic weightings\",\n        \"Hallucinating value: A pitfall of Dyna-style planning with imperfect environment models\",\n        \"Categorical reparameterization with Gumbel-Softmax\",\n        \"Auto-encoding variational bayes\",\n        \"Continuous control with deep reinforcement learning\",\n        \"Benchmarking reinforcement learning algorithms on real-world robots\",\n        \"Asynchronous methods for deep reinforcement learning\",\n        \"Monte Carlo gradient estimation in machine learning\",\n        \"Safe and efficient off-policy reinforcement learning\",\n        \"PIPPS: Flexible model-based policy search robust to the curse of chaos\",\n        \"Reinforcement learning of motor skills with policy gradients\",\n        \"Sampling derivatives of probabilities\",\n        \"Stochastic backpropagation and approximate inference in deep generative models\",\n        \"Trust region policy optimization\",\n        \"High-dimensional continuous control using generalized advantage estimation\",\n        \"Proximal policy optimization algorithms\",\n        \"Deterministic policy gradient algorithms\",\n        \"Reinforcement learning with replacing eligibility traces\",\n        \"Reinforcement Learning: An Introduction\",\n        \"Policy gradient methods for reinforcement learning with function approximation\",\n        \"Convex and analytically-invertible dynamics with contacts and constraints: Theory and implementation in MuJoCo\",\n        \"MuJoCo: A physics engine for model-based control\",\n        \"Batch reinforcement learning with a nonparametric off-policy policy gradient\",\n        \"When to use parametric models in reinforcement learning?\",\n        \"Grandmaster level in StarCraft II using multi-agent reinforcement learning\",\n        \"On the generalization gap in reparameterizable reinforcement learning\",\n        \"Sample efficient actor-critic with experience replay\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Variance reduction properties of the reparameterization trick\",\n        \"DouZero: Mastering DouDizhu with self-play deep reinforcement learning\",\n        \"Modularized implementation of deep RL algorithms in PyTorch\",\n        \"Deep reinforcement learning for page-wise recommendations\",\n        \"DRN: A deep reinforcement learning framework for news recommendation\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in missingum@section Introduction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}