{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: PARIS and ELSA: An Elastic Scheduling Algorithm for Reconfigurable Multi-GPU Inference Servers\n\nPaper Abstract: Abstract In cloud machine learning (ML) inference systems, providing low latency to end-users is of utmost importance. However, maximizing server utilization and system throughput is also crucial for ML service providers as it helps lower the total-cost-of-ownership. GPUs have oftentimes been criticized for ML inference usages as its massive compute and memory throughput is hard to be fully utilized under low-batch inference scenarios. To address such limitation, NVIDIA‚Äôs recently announced Ampere GPU architecture provides features to ‚Äúreconfigure‚Äù one large, monolithic GPU into multiple smaller ‚ÄúGPU partitions‚Äù. Such feature provides cloud ML service providers the ability to utilize the reconfigurable GPU not only for large-batch training but also for small-batch inference with the potential to achieve high resource utilization. In this paper, we study this emerging GPU architecture with reconfigurability to develop a high-performance multi-GPU ML inference server. Our first proposition is a sophisticated partitioning algorithm for reconfigurable GPUs that systematically determines a heterogeneous set of multi-granular GPU partitions, best suited for the inference server‚Äôs deployment. Furthermore, we co-design an elastic scheduling algorithm tailored for our heterogeneously partitioned GPU server which effectively balances low latency and high GPU utilization.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Cloud TPU\",\n        \"Amazon elastic inference\",\n        \"Habana Gaudi and Goya: New Levels of AI Performance, Low Power and Cost Efficiency for Datacenter & Cloud\",\n        \"In-datacenter Performance Analysis of A Tensor Processing Unit\",\n        \"Accelerating Facebook‚Äôs Infrastructure with Application-specific Hardware\",\n        \"Applied Machine Learning at Facebook: A Datacenter Infrastructure Perspective\",\n        \"The Architectural Implications of Facebook‚Äôs DNN-based Personalized Recommendation\",\n        \"A Configurable Cloud-Scale DNN Processor for Real-Time AI\",\n        \"A Customizable Matrix Multiplication Framework for the Intel HARPv2 Xeon+FPGA Platform: A Deep Learning Case Study\",\n        \"Can FPGAs Beat GPUs in Accelerating Next-Generation Deep Neural Networks?\",\n        \"Single Root I/O Virtualization (SR-IOV)\",\n        \"Optimizing and Troubleshooting Hyper-V Networking\",\n        \"Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism\",\n        \"High-Performance, Distributed Training of Large-Scale Deep Learning Recommendation Models\",\n        \"GShard: Scaling Giant Models with Conditional Computation and Automatic Sharding\",\n        \"MLPerf: An Industry Standard Benchmark Suite for Machine Learning Performance\",\n        \"DeepRecSys: A System for Optimizing End-to-end At-scale Neural Recommendation Inference\",\n        \"Work Stealing for Interactive Services to Meet Target Latency\",\n        \"Generating Representative Web Workloads for Network and Server Performance Evaluation\",\n        \"GDDR6 DRAM\",\n        \"High Bandwidth Memory (HBM2) DRAM\",\n        \"NVIDIA Tesla M4\",\n        \"NVIDIA T4\",\n        \"NVIDIA A100\",\n        \"NVIDIA CUDA Programming Guide\",\n        \"DjiNN and Tonic: DNN as a Service and Its Implications for Future Warehouse Scale Computers\",\n        \"TensorFlow-Serving: Flexible, High-Performance ML Serving\",\n        \"Amazon SageMaker\",\n        \"NVIDIA Triton Inference Server\",\n        \"PipeDream: Generalized Pipeline Parallelism for DNN Training\",\n        \"Gpipe: Efficient Training of Giant Neural Networks Using Pipeline Parallelism\",\n        \"MOSAIC: Heterogeneity-, Communication-, and Constraint-Aware Model Slicing and Execution for Accurate and Efficient Inference\",\n        \"Œºùúá\\\\mulayer: Low Latency On-Device Inference Using Cooperative Single-Layer Acceleration and Processor-Friendly Quantization\",\n        \"JointDNN: An Efficient Training and Inference Engine for Intelligent Mobile Cloud Computing Services\",\n        \"TETRIS: Scalable and Efficient Neural Network Acceleration with 3D Memory\",\n        \"Nexus: A GPU Cluster Engine for Accelerating DNN-based Video Analysis\",\n        \"GrandSLAm: Guaranteeing SLAs for Jobs in Microservices Execution Frameworks\",\n        \"PREMA: A Predictive Multi-task Scheduling Algorithm For Preemptible Neural Processing Units\",\n        \"Lazy Batching: An SLA-aware Batching System for Cloud Machine Learning Inference\",\n        \"ShuffleNet v2: Practical Guidelines for Efficient CNN Architecture Design\",\n        \"Mobilenets: Efficient Convolutional Neural Networks for Mobile Vision Applications\",\n        \"Training and Investigating Residual Nets\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Conformer: Convolution-augmented Transformer for Speech Recognition\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in PARIS and ELSA: An Elastic Scheduling Algorithm for Reconfigurable Multi-GPU Inference Servers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}