{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Towards Automatic Composition of ASP Programs from Natural Language Specifications1footnote 11footnote 1This work has been submitted to a conference and is awaiting approval\n\nPaper Abstract: Abstract This paper moves the first step towards automating the composition of Answer Set Programming (ASP) specifications. In particular, the following contributions are provided: (i) A dataset focused on graph-related problem specifications, designed to develop and assess tools for ASP automatic coding; (ii) A two-step architecture, implemented in the NL2ASP tool, for generating ASP programs from natural language specifications. NL2ASP uses neural machine translation to transform natural language into Controlled Natural Language (CNL) statements. Subsequently, CNL statements are converted into ASP code using the CNL2ASP tool. An experiment confirms the viability of the approach.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The ASP system DLV2\",\n        \"Introducing ASP recipes and ASP chef\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"METEOR: an automatic metric for MT evaluation with improved correlation with human judgments\",\n        \"Solving puzzles described in english by automated translation to answer set programming and learning how to do that translation\",\n        \"Sparql-qa-v2 system for knowledge base question answering\",\n        \"Answer set programming at a glance\",\n        \"Sealion: An eclipse-based IDE for answer-set programming with advanced debugging support\",\n        \"Asp-core-2 input language format\",\n        \"Github copilot AI pair programmer: Asset or liability?\",\n        \"A tool for encoding controlled natural language specifications as ASP rules\",\n        \"Lc-quad 2.0: A large dataset for complex question answering over wikidata and dbpedia\",\n        \"Semantical characterizations and complexity of equivalences in answer set programming\",\n        \"Transforming controlled natural language biomedical queries into answer set programs\",\n        \"Applications of answer set programming\",\n        \"Ai-driven development is here: Should you worry?\",\n        \"Evaluating large language models trained on code\",\n        \"An approach for representing answer sets in natural language\",\n        \"ASPIDE: integrated development environment for answer set programming\",\n        \"Answer Set Solving in Practice\",\n        \"Theory solving made easy with clingo 5\",\n        \"The seventh answer set programming competition: Design and results\",\n        \"The stable model semantics for logic programming\",\n        \"Classical negation in logic programs and disjunctive databases\",\n        \"Clingraph: A system for asp-based visualization\",\n        \"PAIR: planning and iterative refinement in pre-trained transformers for long text generation\",\n        \"Leveraging large language models to generate answer set programs\",\n        \"Speech and language processing: an introduction to natural language processing, computational linguistics, and speech recognition, 2nd Edition\",\n        \"Research: quantifying github copilot’s impact on developer productivity and happiness\",\n        \"A survey and classification of controlled natural languages\",\n        \"BART: denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Systems, engineering environments, and competitions\",\n        \"Answer Set Programming\",\n        \"Translating definitions into the language of logic programming: A case study\",\n        \"Addressing a question answering challenge by combining statistical methods with inductive rule learning and reasoning\",\n        \"COGEX: A logic prover for question answering\",\n        \"Improving coherence and consistency in neural sequence models with dual-system, neuro-symbolic reasoning\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"The impact of AI on developer productivity: Evidence from github copilot\",\n        \"Qald-9-plus: A multilingual dataset for question answering over dbpedia and wikidata translated by native speakers\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Specifying and verbalising answer set programs in controlled natural language\",\n        \"Neural machine translation: A review\",\n        \"Sequence to sequence learning with neural networks\",\n        \"Lc-quad: A corpus for complex question answering over knowledge graphs\",\n        \"Annotating answer-set programs in lana\",\n        \"Steven bird, ewan klein and edward loper: Natural language processing with python, analyzing text with the natural language toolkit - o’reilly media, beijing, 2009, ISBN 978-0-596-51649-9\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"A skeleton-based model for promoting coherence among sentences in narrative story generation\",\n        \"A survey of deep learning techniques for neural machine translation\",\n        \"Coupling large language models with logic programming for robust and general reasoning from text\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Towards Automatic Composition of ASP Programs from Natural Language Specifications1footnote 11footnote 1This work has been submitted to a conference and is awaiting approval, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}