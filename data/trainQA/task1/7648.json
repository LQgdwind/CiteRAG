{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Toolchain for Streaming Dataflow Accelerator Designs for Big Data Analytics\n\nPaper Abstract: \n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Python Interpreter Written in Rust | Hacker News\",\n        \"Systemc.Org\",\n        \"Intellectual Property\",\n        \"Interfaces for Vivado IP Flow • Vitis High-Level Synthesis User Guide (UG1399) • Reader • Documentation Portal\",\n        \"Spark Streaming - Spark 3.3.0 Documentation\",\n        \"Structured Streaming Programming Guide - Spark 3.3.0 Documentation\",\n        \"AMBA 4 AXI4-Stream Protocol Specification\",\n        \"An Introduction to AMBA AXI\",\n        \"Increasing Design Productivity through Core Reuse, Meta-data Encapsulation, and Synthesis\",\n        \"Lime: A Java-compatible and Synthesizable Language for Heterogeneous Architectures\",\n        \"Chisel: Constructing Hardware in a Scala Embedded Language\",\n        \"Ariadne\",\n        \"Chumsky\",\n        \"Nom, Eating Data Byte by Byte\",\n        \"A Survey on the Evolution of Stream Processing Systems\",\n        \"Grammar and Parsing Libraries for Rust\",\n        \"Optimus: Efficient Realization of Streaming Applications on FPGAs\",\n        \"IEEE Standard for Verilog Hardware Description Language\",\n        \"IEEE Standard VHDL Language Reference Manual\",\n        \"1. Introduction to Intel® FPGA IP Cores\",\n        \"5. Avalon® Streaming Interfaces\",\n        \"A Survey of Distributed Data Stream Processing Frameworks\",\n        \"Reusability Is FIRRTL Ground: Hardware Construction Languages, Compiler Frameworks, and Transformations\",\n        \"A Survey of Digital Design Reuse\",\n        \"HPVM: Heterogeneous Parallel Virtual Machine\",\n        \"LALRPOP\",\n        \"CIRCT/ Circuit IR Compilers and Tools\",\n        \"TIL ->> VHDL\",\n        \"Parsing Expression Grammars in Rust\",\n        \"A Survey and Evaluation of FPGA High-Level Synthesis Tools\",\n        \"Stream-Dataflow Acceleration\",\n        \"Tydi: An Open Specification for Complex Data Structures Over Hardware Streams\",\n        \"Pest. The Elegant Parser\",\n        \"Stream Computing on Fpgas\",\n        \"An Intermediate Representation for Composable Typed Streaming Dataflow Designs\",\n        \"What Should I Use to Build a Parser in Rust Today?\",\n        \"Queries: Demand-Driven Compilation - Guide to Rustc Development\",\n        \"Salsa\",\n        \"Apache Kafka\",\n        \"LLHD: A Multi-level Intermediate Representation for Hardware Description Languages\",\n        \"Micropipelines\",\n        \"StreamIt: A Language for Streaming Applications\",\n        \"Fleet: A Framework for Massively Parallel Streaming on FPGAs\",\n        \"Introduction - Tydi\",\n        \"Logical Streams - Tydi\",\n        \"Physical Streams - Tydi\",\n        \"Melia: A MapReduce Framework on OpenCL-based FPGAs\",\n        \"S2FA: An Accelerator Automation Framework for Heterogeneous Computing in Datacenters\",\n        \"Discretized Streams: A Fault-Tolerant Model for Scalable Stream Processing\",\n        \"Chumsky, a Parser Combinator Crate That Makes Writing Error-Tolerant Parsers with Recovery Easy and Fun!\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in A Toolchain for Streaming Dataflow Accelerator Designs for Big Data Analytics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}