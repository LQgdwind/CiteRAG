{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: PTSBench: A Comprehensive Post-Training Sparsity Benchmark Towards Algorithms and Models\n\nPaper Abstract: Abstract. With the increased attention to model efficiency, post-training sparsity (PTS) has become more and more prevalent because of its effectiveness and efficiency. However, there remain questions on better practice of PTS algorithms and the sparsification ability of models, which hinders the further development of this area. Therefore, a benchmark to comprehensively investigate the issues above is urgently needed. In this paper, we propose the first comprehensive post-training sparsity benchmark called PTSBench towards algorithms and models. We benchmark 10+ PTS general-pluggable fine-grained techniques on 3 typical tasks using over 40 off-the-shelf model architectures. Through extensive experiments and analyses, we obtain valuable conclusions and provide several insights from both algorithms and model aspects. Our PTSBench can provide (1) new observations for a better understanding of the PTS algorithms, (2) in-depth and comprehensive evaluations for the sparsification ability of models, and (3) a well-structured and easy-integrate open-source framework. We hope this work will provide illuminating conclusions and advice for future studies of post-training sparsity methods and sparsification-friendly model design. The code for our PTSBench is released at https://github.com/ModelTC/msbench.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Neural network matrix factorization\",\n        \"Rigging the lottery: Making all tickets winners\",\n        \"The pascal visual object classes (voc) challenge\",\n        \"Stabilizing the lottery ticket hypothesis\",\n        \"Optimal brain compression: A framework for accurate post-training quantization and pruning\",\n        \"The state of sparsity in deep neural networks\",\n        \"LLMC: Benchmarking Large Language Model Quantization with a Versatile Compression Toolkit\",\n        \"Fast and Controllable Post-training Sparsity: Learning Optimal Sparsity Allocation with Global Constraint in Minutes\",\n        \"Adaptive Contrastive Knowledge Distillation for BERT Compression\",\n        \"Multi-Dimensional Pruning: A Unified Framework for Model Compression\",\n        \"Compressing large language models by joint sparsification and quantization\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Second order derivatives for network pruning: Optimal brain surgeon\",\n        \"Deep residual learning for image recognition\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"PTQD: Accurate Post-Training Quantization for Diffusion Models\",\n        \"Gans trained by a two time-scale update rule converge to a local nash equilibrium\",\n        \"Distilling the knowledge in a neural network\",\n        \"Searching for mobilenetv3\",\n        \"Squeeze-and-excitation networks\",\n        \"Tfmq-dm: Temporal feature maintenance quantization for diffusion models\",\n        \"Accelerated sparse neural training: A provable and efficient method to find n: m transposable masks\",\n        \"Quantized neural networks: Training neural networks with low precision weights and activations\",\n        \"Channel pruning guided by classification loss and feature importance\",\n        \"Quantization and2 training of neural networks for efficient integer-arithmetic-only inference\",\n        \"Quantizing deep convolutional networks for efficient inference: A whitepaper\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Soft threshold weight reparameterization for learnable sparsity\",\n        \"Post-training deep neural network pruning via layer-wise calibration\",\n        \"Revisiting random channel pruning for neural network compression\",\n        \"Brecq: Pushing the limit of post-training quantization by block reconstruction\",\n        \"Feature pyramid networks for object detection\",\n        \"Focal loss for dense object detection\",\n        \"Microsoft coco: Common objects in context\",\n        \"Pd-quant: Post-training quantization based on prediction difference metric\",\n        \"Ssd: Single shot multibox detector\",\n        \"Learning efficient convolutional networks through network slimming\",\n        \"PTQ4SAM: Post-Training Quantization for Segment Anything\",\n        \"Shufflenet v2: Practical guidelines for efficient cnn architecture design\",\n        \"Parameter efficient training of deep convolutional neural networks by dynamic sparse reparameterization\",\n        \"Data-free quantization through weight equalization and bias correction\",\n        \"A white paper on neural network quantization\",\n        \"Designing network design spaces\",\n        \"Comparing rewinding and fine-tuning in neural network pruning\",\n        \"High-resolution image synthesis with latent diffusion models\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Picking winning tickets before training by preserving gradient flow\",\n        \"Qdrop: Randomly dropping quantization for extremely low-bit post-training quantization\",\n        \"Lsun: Construction of a large-scale image dataset using deep learning with humans in the loop\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in PTSBench: A Comprehensive Post-Training Sparsity Benchmark Towards Algorithms and Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}