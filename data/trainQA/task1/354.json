{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GPU-Accelerated Computation of Vietoris-Rips Persistence Barcodes\n\nPaper Abstract: Abstract The computation of Vietoris-Rips persistence barcodes is both execution-intensive and memory-intensive. In this paper, we study the computational structure of Vietoris-Rips persistence barcodes, and identify several unique mathematical properties and algorithmic opportunities with connections to the GPU. Mathematically and empirically, we look into the properties of apparent pairs, which are independently identifiable persistence pairs comprising up to 99% of persistence pairs. We give theoretical upper and lower bounds of the apparent pair rate and model the average case. We also design massively parallel algorithms to take advantage of the very large number of simplices that can be processed independently of each other. Having identified these opportunities, we develop a GPU-accelerated software for computing Vietoris-Rips persistence barcodes, called Ripser++. The software achieves up to 30x speedup over the total execution time of the original Ripser and also reduces CPU-memory usage by up to 2.0x. We believe our GPU-acceleration based efforts open a new chapter for the advancement of topological data analysis in the post-Moore’s Law era.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Persistence images: A stable vector representation of persistent homology\",\n        \"Javaplex tutorial\",\n        \"Persistence homology of networks: methods and applications\",\n        \"The framed morse complex and its invariants\",\n        \"Ripser: efficient computation of vietoris–rips persistence barcodes\",\n        \"Ripser: efficient computation of vietoris-rips persistence barcodes\",\n        \"Clear and compress: Computing persistent homology in chunks\",\n        \"Distributed computation of persistent homology\",\n        \"Phat–persistent homology algorithms toolbox\",\n        \"Persistent homology analysis of brain artery trees\",\n        \"The compressed annotation matrix: An efficient data structure for computing persistent cohomology\",\n        \"An Efficient Representation for Filtrations of Simplicial Complexes\",\n        \"The simplex tree: An efficient data structure for general simplicial complexes\",\n        \"Statistical topological data analysis using persistence landscapes\",\n        \"Topology and data\",\n        \"Persistent and zigzag homology: A matrix factorization viewpoint\",\n        \"A geometric perspective on sparse filtrations\",\n        \"Persistent homology computation with a twist\",\n        \"A topological paradigm for hippocampal spatial map formation using persistent homology\",\n        \"Coverage in sensor networks via persistent homology\",\n        \"Dualities in persistent (co) homology\",\n        \"Persistent cohomology and circular coordinates\",\n        \"Skeletonization and partitioning of digital images using discrete morse theory\",\n        \"Design of ion-implanted mosfet’s with very small physical dimensions\",\n        \"Computing topological persistence for simplicial maps\",\n        \"Simba: An efficient tool for approximating rips-filtration persistence via simplicial batch collapse\",\n        \"Computational topology: an introduction\",\n        \"Topological persistence and simplification\",\n        \"Dark silicon and the end of multicore scaling\",\n        \"Confidence sets for persistence diagrams\",\n        \"On characterizing the capacity of neural networks using algebraic topology\",\n        \"Eirene: a platform for computational homological algebra\",\n        \"Matroid filtrations and computational persistent homology\",\n        \"Deep learning with topological signatures\",\n        \"A framework for the automatic vectorization of parallel sort on x86-based processors\",\n        \"Performance enhancement of a computational persistent homology package\",\n        \"Sort vs. hash revisited: Fast join implementation on modern multi-core cpus\",\n        \"The art of computer programming, volume 3\",\n        \"Computing persistent homology of directed flag complexes\",\n        \"The gudhi library: Simplicial complexes and persistent homology\",\n        \"Parallel multi-scale reduction of persistent homology filtrations\",\n        \"Dionysus software\",\n        \"Finding the homology of submanifolds with high confidence from random samples\",\n        \"A roadmap for the computation of persistent homology\",\n        \"Sopra una formola numerica\",\n        \"A stable multi-scale kernel for topological machine learning\",\n        \"Designing efficient sorting algorithms for manycore gpus\",\n        \"Linear-size approximations to the Vietoris-Rips filtration\",\n        \"Proof of bijection for combinatorial number system\",\n        \"Fast parallel gpu-sorting using a hybrid algorithm\",\n        \"Persistent homology for detection of objects from mobile lidar point cloud data in autonomous vehicles\",\n        \"GUDHI User and Reference Manual\",\n        \"The end of moore’s law: A new beginning for information technology\",\n        \"Ripser. py: A lean persistent homology library for python\",\n        \"Hypha: a framework based on separation of parallelisms to accelerate persistent homology matrix reduction\",\n        \"Fast construction of the vietoris-rips complex\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in GPU-Accelerated Computation of Vietoris-Rips Persistence Barcodes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}