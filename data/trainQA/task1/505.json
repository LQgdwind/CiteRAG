{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The Right Tool for the Job: Matching Model and Instance Complexities\n\nPaper Abstract: Abstract As NLP models become larger, executing a trained model requires significant computational resources incurring monetary and environmental costs. To better respect a given inference budget, we propose a modification to contextual representation fine-tuning which, during inference, allows for an early (and fast) “exit” from neural network calculations for simple instances, and late (and accurate) exit for hard instances. To achieve this, we add classifiers to different layers of BERT and use their calibrated confidence scores to make early exit decisions. We test our proposed modification on five different datasets in two tasks: three text classification datasets and two natural language inference benchmarks. Our method presents a favorable speed/accuracy tradeoff in almost all cases, producing models which are up to five times faster than the state of the art, while preserving their accuracy. Our method also requires almost no additional training resources (in either time or parameters) compared to the baseline BERT model. Finally, our method alleviates the need for costly retraining of multiple models at different levels of efficiency; we allow users to control the inference speed/accuracy tradeoff using a single trained model, by setting a single variable at inference time. We publicly release our code.111github.com/allenai/sledgehammer\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"AI and compute\",\n        \"Controlling computation versus quality for neural sequence models\",\n        \"Adaptive neural networks for efficient inference\",\n        \"A large annotated corpus for learning natural language inference\",\n        \"Balancing cost and benefit with tied-multi transformers\",\n        \"The PASCAL recognising textual entailment challenge\",\n        \"The comparison and evaluation of forecasters\",\n        \"Calibration of pre-trained transformers\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Show your work: Improved reporting of experimental results\",\n        \"RNN architecture learning with sparse regularization\",\n        \"Efficient parsing for bilexical context-free grammars and head automaton grammars\",\n        \"Depth-adaptive transformer\",\n        \"Reducing transformer depth on demand with structured dropout\",\n        \"The state of sparsity in deep neural networks\",\n        \"AllenNLP: A deep semantic natural language processing platform\",\n        \"An efficient algorithm for easy-first non-directional dependency parsing\",\n        \"Adaptive computation time for recurrent neural networks\",\n        \"On calibration of modern neural networks\",\n        \"Annotation artifacts in natural language inference data\",\n        \"Distilling the knowledge in a neural network\",\n        \"Multi-scale dense networks for resource efficient image classification\",\n        \"To trust or not to trust a classifier\",\n        \"TinyBERT: Distilling BERT for natural language understanding\",\n        \"Sequence-level knowledge distillation\",\n        \"Measures of diversity in classifier ensembles and their relationship with the ensemble accuracy\",\n        \"Optimal brain damage\",\n        \"Efficient contextualized representation: Language model pruning for sequence labeling\",\n        \"FastBERT: a self-distilling BERT with adaptive inference time\",\n        \"Learning word vectors for sentiment analysis\",\n        \"Are sixteen heads really better than one?\",\n        \"Deep contextualized word representations\",\n        \"On fairness and calibration\",\n        \"Hypothesis Only Baselines in Natural Language Inference\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"WinoGrande: An adversarial winograd schema challenge at scale\",\n        \"DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter\",\n        \"Green AI\",\n        \"Neural speed reading via skim-RNN\",\n        \"Q-BERT: Hessian based ultra low precision quantization of BERT\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Multi-mention learning for reading comprehension with neural cascades\",\n        \"Distilling task-specific knowledge from BERT into simple neural networks\",\n        \"An empirical study of example forgetting during deep neural network learning\",\n        \"Attention is all you need\",\n        \"Analyzing multi-head self-attention: Specialized heads do the heavy lifting, the rest can be pruned\",\n        \"SkipNet: Learning dynamic routing in convolutional networks\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"Stacked generalization\",\n        \"Convolutional neural network compression for natural language processing\",\n        \"Q8BERT: Quantized 8bit BERT\",\n        \"Character-level convolutional networks for text classification\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in The Right Tool for the Job: Matching Model and Instance Complexities, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}