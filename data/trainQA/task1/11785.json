{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: KeyVisor – A Lightweight ISA Extension for Protected Key Handles with CPU-enforced Usage Policies\n\nPaper Abstract: Abstract The confidentiality of cryptographic keys is essential for the security of protection schemes used for communication, file encryption, and outsourced computation. Beyond cryptanalytic attacks, adversaries can steal keys from memory via software exploits or side channels, enabling them to, e.g., tamper with secrets or impersonate key owners. Therefore, existing defenses protect keys in dedicated devices or isolated memory, or store them only in encrypted form. However, these designs often provide unfavorable tradeoffs, sacrificing performance, fine-grained access control, or deployability. In this paper, we present KeyVisor, a lightweight ISA extension that securely offloads the handling of cryptographic keys to the CPU. KeyVisor provides CPU instructions that enable applications to request protected key handles and perform AEAD cipher operations on them. The underlying keys are accessible only by KeyVisor, and thus never leak to memory. KeyVisor’s direct CPU integration enables fast crypto operations and hardware-enforced key usage restrictions, e.g., keys usable only for de-/encryption, with a limited lifetime, or with a process binding. Furthermore, privileged software, e.g., the monitor firmware of TEEs, can revoke keys or bind them to a specific process/TEE. We implement KeyVisor for RISC-V based on Rocket Chip, evaluate its performance, and demonstrate real-world use cases, including key-value databases, automotive feature licensing, and a read-only network middlebox.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The rocket chip generator\",\n        \"Chipyard: Integrated Design, Simulation, and Implementation Framework for Custom SoCs\",\n        \"Protecting keys with the Secure Enclave\",\n        \"CURE: A Security Architecture with CUstomizable and Resilient Enclaves\",\n        \"vTPM: Virtualizing the Trusted Platform Module\",\n        \"XMSS-a practical forward secure signature scheme based on minimal security assumptions\",\n        \"AES-GCM 128-192-256 bits\",\n        \"One Glitch to Rule Them All: Fault Injection Attacks Against AMD’s Secure Encrypted Virtualization\",\n        \"Foreshadow: Extracting the Keys to the Intel SGX Kingdom with Transient Out-of-Order Execution\",\n        \"Recommendation for stateful hash-based signature schemes\",\n        \"Intel SGX Enabled Key Manager Service with OpenStack Barbican\",\n        \"SgxPectre: Stealing Intel Secrets From SGX Enclaves via Speculative Execution\",\n        \"simTPM: User-centric TPM for Mobile Devices\",\n        \"Ascon v1.2: Lightweight Authenticated Encryption and Hashing\",\n        \"Sanctum: Minimal Hardware Extensions for Strong Software Isolation\",\n        \"Supervisor mode access prevention\",\n        \"Capacity: Cryptographically-Enforced In-Process Capabilities for Modern ARM Architectures\",\n        \"WireGuard: Next Generation Kernel Network Tunnel\",\n        \"LightBox: Full-Stack Protected Stateful Middlebox at Lightning Speed\",\n        \"BliMe: Verifiably Secure Outsourced Computation with Hardware-Enforced Taint Tracking\",\n        \"Attestation – Keystone Enclave\",\n        \"CompaSeC: A Compiler-Assisted Security Countermeasure to Address Instruction Skip Fault Attacks on RISC-V\",\n        \"Cache Attacks on Intel SGX\",\n        \"Hardware-backed Keystore | Android Open Source Project\",\n        \"Trusted Platform Module (TPM)\",\n        \"XMSS: eXtended Merkle Signature Scheme\",\n        \"eHSM (SGX Enclave Based Hardware Security Module)\",\n        \"Intel Software Guard Extensions (Intel SGX) – Key Management Reference Application (KMRA)\",\n        \"TOCTTOU Vulnerabilities in UNIX-Style File Systems: An Anatomical Study\",\n        \"Intel Key Locker Specification, 343965-001us, rev. 1.0 edition\",\n        \"Integrating Remote Attestation with Transport Layer Security\",\n        \"TZ-KMS: A Secure Key Management Service for Joint Cloud Computing with ARM TrustZone\",\n        \"Keystone: An Open Framework for Architecting Trusted Execution Environments\",\n        \"maTLS: How to Make TLS middlebox-aware?\",\n        \"ROTE: Rollback Protection for Trusted Execution\",\n        \"RFC 8554: Leighton-Micali hash-based signatures\",\n        \"Measured boot and host attestation\",\n        \"Microsoft Pluton as Trusted Platform Module\",\n        \"ChaCha20 and Poly1305 for IETF Protocols\",\n        \"Bypassing Isolated Execution on RISC-V using Side-Channel-Assisted Fault-Injection and Its Countermeasure\",\n        \"HECTOR-V: A Heterogeneous CPU Architecture for a Secure RISC-V Execution Environment\",\n        \"Open source silicon root of trust (RoT) | OpenTitan\",\n        \"SafeBricks: Shielding Network Functions in the Cloud\",\n        \"libmpk: Software Abstraction for Intel Memory Protection Keys (Intel MPK)\",\n        \"fTPM: A Software-Only Implementation of a TPM Chip\",\n        \"FeIDo: Recoverable FIDO2 Tokens Using Electronic IDs\",\n        \"Recommendation for a Holistic Secure Embedded ISA Extension\",\n        \"SENG, the SGX-Enforcing Network Gateway: Authorizing Communication from Shielded Clients\",\n        \"Donky: Domain Keys – Efficient In-Process Isolation for RISC-V and x86\",\n        \"Heartbleed Bug\",\n        \"Electromagnetic fault injection against a complex CPU, toward new micro-architectural fault models\",\n        \"ERIM: Secure, Efficient In-process Isolation with Protection Keys (MPK)\",\n        \"Table of Linear Feedback Shift Registers\",\n        \"CHERI: A Hybrid Capability-System Architecture for Scalable Software Compartmentalization\",\n        \"Capstone: A Capability-based Foundation for Trustless Secure Memory Access\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in KeyVisor – A Lightweight ISA Extension for Protected Key Handles with CPU-enforced Usage Policies, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}