{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: JAX-FEM: A differentiable GPU-accelerated 3D finite element solver for automatic inverse design and mechanistic data science\n\nPaper Abstract: Abstract This paper introduces JAX-FEM, an open-source differentiable finite element method (FEM) library. Constructed on top of Google JAX, a rising machine learning library focusing on high-performance numerical computing, JAX-FEM is implemented with pure Python while scalable to efficiently solve problems with moderate to large sizes. For example, in a 3D tensile loading problem with 7.7 million degrees of freedom, JAX-FEM with GPU achieves around 10×\\times acceleration compared to a commercial FEM code depending on platform. Beyond efficiently solving forward problems, JAX-FEM employs the automatic differentiation technique so that inverse problems are solved in a fully automatic manner without the need to manually derive sensitivities. Examples of 3D topology optimization of nonlinear materials are shown to achieve optimal compliance. Finally, JAX-FEM is an integrated platform for machine learning-aided computational mechanics. We show an example of data-driven multi-scale computations of a composite material where JAX-FEM provides an all-in-one solution from microscopic data generation and model training to macroscopic FE computations. The source code of the library and these examples are shared with the community to facilitate computational mechanics research.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"tigar: Automating isogeometric analysis with fenics\",\n        \"The finite element method: linear static and dynamic finite element analysis\",\n        \"JAX: composable transformations of Python+NumPy programs\",\n        \"Machine learning–accelerated computational fluid dynamics\",\n        \"Jax-fluids: A fully-differentiable high-order computational fluid dynamics solver for compressible two-phase flows\",\n        \"Learning the nonlinear dynamics of soft mechanical metamaterials with graph networks\",\n        \"Jax md: a framework for differentiable physics\",\n        \"Physics-embedded graph network for accelerating phase-field simulation of microstructure evolution in additive manufacturing\",\n        \"deal. ii—a general-purpose object-oriented finite element library\",\n        \"Evaluating derivatives: principles and techniques of algorithmic differentiation\",\n        \"Deep learning\",\n        \"Automatic differentiation for solid mechanics\",\n        \"Automatic differentiation in metaphysicl and its applications in moose\",\n        \"Differentiable simulation for material thermal response design in additive manufacturing processes\",\n        \"Optimal solvers for pde-constrained optimization\",\n        \"Review of options for structural design sensitivity analysis. part 1: Linear systems\",\n        \"What is an adjoint model?\",\n        \"Adjoint sensitivity analysis for differential-algebraic equations: The adjoint DAE system and its numerical solution\",\n        \"A kernel method for learning constitutive relation in data-driven computational elasticity\",\n        \"Deep learning predicts path-dependent plasticity\",\n        \"Learning viscoelasticity models from indirect data using deep neural networks\",\n        \"Automated solution of differential equations by the finite element method: The FEniCS book, volume 84\",\n        \"The numpy array: a structure for efficient numerical computation\",\n        \"Array programming with numpy\",\n        \"Non-linear elastic deformations\",\n        \"Computational inelasticity, volume 7\",\n        \"ASTM D638, pages 51–51\",\n        \"Discretize then optimize\",\n        \"Non-commutative discretize-then-optimize algorithms for elliptic pde-constrained optimal control problems\",\n        \"Principles of mathematical analysis\",\n        \"Physics constrained learning for data-driven inverse modeling from sparse observations\",\n        \"Efficient and modular implicit differentiation\",\n        \"A limited memory algorithm for bound constrained optimization\",\n        \"Scipy 1.0: fundamental algorithms for scientific computing in python\",\n        \"Adjoint optimization of pressurized membrane structures using automatic differentiation tools\",\n        \"Mapped shape optimization method for the rational design of cellular mechanical metamaterials under large deformation\",\n        \"Topology optimization: theory, methods, and applications\",\n        \"The method of moving asymptotes—a new method for structural optimization\",\n        \"Numerical instabilities in topology optimization: a survey on procedures dealing with checkerboards, mesh-dependencies and local minima\",\n        \"Auto: a framework for automatic differentiation in topology optimization\",\n        \"A data-driven computational scheme for the nonlinear mechanical properties of cellular mechanical metamaterials under large deformation\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Nonlinear solid mechanics: a continuum approach for engineering science\",\n        \"On the distribution of points in a cube and the approximate evaluation of integrals\",\n        \"Pattern recognition and machine learning, volume 4\",\n        \"Bi-cgstab: A fast and smoothly converging variant of bi-cg for the solution of nonsymmetric linear systems\",\n        \"Petsc users manual\",\n        \"Inverse problems: a bayesian perspective\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in JAX-FEM: A differentiable GPU-accelerated 3D finite element solver for automatic inverse design and mechanistic data science, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}