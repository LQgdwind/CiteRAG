{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Algorithms and Complexity on Indexing Founder GraphsThis is a preprint of the extended full version of conference papers in WABI 2020 [33] and ISAAC 2021 [19]. An earlier version of this preprint has also been reviewed and presented at RECOMB-seq 2021 highlights track.\n\nPaper Abstract: Abstract We study the problem of matching a string in a labeled graph. Previous research has shown that unless the Orthogonal Vectors Hypothesis (OVH) is false, one cannot solve this problem in strongly sub-quadratic time, nor index the graph in polynomial time to answer queries efficiently (Equi et al. ICALP 2019, SOFSEM 2021). These conditional lower-bounds cover even deterministic graphs with binary alphabet, but there naturally exist also graph classes that are easy to index: For example, Wheeler graphs (Gagie et al. Theor. Comp. Sci. 2017) cover graphs admitting a Burrows-Wheeler transform -based indexing scheme. However, it is NP-complete to recognize if a graph is a Wheeler graph (Gibney, Thankachan, ESA 2019). We propose an approach to alleviate the construction bottleneck of Wheeler graphs. Rather than starting from an arbitrary graph, we study graphs induced from multiple sequence alignments (MSAs). Elastic degenerate strings (Bernadini et al. SPIRE 2017, ICALP 2019) can be seen as such graphs, and we introduce here their generalization: elastic founder graphs. We first prove that even such induced graphs are hard to index under OVH. Then we introduce two subclasses, repeat-free and semi-repeat-free graphs, that are easy to index. We give a linear time algorithm to construct a repeat-free non-elastic founder graph from a gapless MSA, and (parameterized) near-linear time algorithms to construct semi-repeat-free (repeat-free, respectively) elastic founder graphs from general MSAs. Finally, we show that repeat-free elastic founder graphs admit a reduction to Wheeler graphs in polynomial time.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Efficient string matching: An aid to bibliographic search\",\n        \"Regular languages meet prefix sorting\",\n        \"Comparing degenerate strings\",\n        \"Pattern matching in hypertext\",\n        \"Faster Online Elastic Degenerate String Matching\",\n        \"Fully-functional bidirectional burrows-wheeler indexes and infinite-order de bruijn graphs\",\n        \"Versatile succinct representations of the bidirectional burrows-wheeler transform\",\n        \"Linear-time string indexing and analysis in small space\",\n        \"Even Faster Elastic-Degenerate String Matching via Fast Matrix Multiplication\",\n        \"Pattern matching on elastic-degenerate text with errors\",\n        \"Approximate pattern matching on elastic-degenerate text\",\n        \"A block-sorting lossless data compression algorithm\",\n        \"Linear time maximum segmentation problems in column stream model\",\n        \"Multiple sequence alignment modeling: methods and applications\",\n        \"A framework for space-efficient variable-order markov models\",\n        \"File searching using variable length keys\",\n        \"On the complexity of string matching for graphs\",\n        \"Graphs cannot be indexed in polynomial time for sub-quadratic time string matching, unless SETH fails\",\n        \"Algorithms and complexity on indexing elastic founder graphs\",\n        \"Optimal suffix tree construction with large alphabets\",\n        \"Scaling and related techniques for geometry problems\",\n        \"Wheeler graphs: A framework for bwt-based data structures\",\n        \"Compressed indexes for repetitive textual datasets\",\n        \"Fully functional suffix trees and optimal text searching in bwt-runs bounded space\",\n        \"An efficient elastic-degenerate text index? not likely\",\n        \"On the hardness and inapproximability of recognizing wheeler graphs\",\n        \"High-order entropy-compressed text indexes\",\n        \"Efficient pattern matching in elastic-degenerate texts\",\n        \"Truly subquadratic-time extension queries and periodicity detection in strings with uncertainties\",\n        \"On the Complexity of k-SAT\",\n        \"Space-efficient static trees and graphs\",\n        \"The complexity of some problems on subsequences and supersequences\",\n        \"Linear time construction of indexable founder block graphs\",\n        \"Storage and retrieval of highly repetitive sequence collections\",\n        \"Approximate string matching with arbitrary costs for text and hypertext\",\n        \"Suffix arrays: A new method for on-line string searches\",\n        \"Computational pan-genomics: status, promises and challenges\",\n        \"FM-index of alignment with gaps\",\n        \"FM-index of alignment: A compressed index for similar strings\",\n        \"Suffix tree of alignment: An efficient index for similar data\",\n        \"Suffix array of alignment: A practical index for similar data\",\n        \"Linear time minimum segmentation enables scalable founder reconstruction\",\n        \"Aligning sequences to general graphs in O‚Äã(V+m‚ÄãE)ùëÇùëâùëöùê∏O(V+mE) time\",\n        \"Indexable elastic founder graphs of minimum height\",\n        \"Linear time construction of indexable elastic founder graphs\",\n        \"Compressed suffix trees with full functionality\",\n        \"Bidirectional search in a string with wavelet trees and bidirectional matching statistics\",\n        \"Indexing graphs for path queries with applications in genome research\",\n        \"Indexing hypertext\",\n        \"A new algorithm for optimal 2-constraint satisfaction and its implications\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Algorithms and Complexity on Indexing Founder GraphsThis is a preprint of the extended full version of conference papers in WABI 2020 [33] and ISAAC 2021 [19]. An earlier version of this preprint has also been reviewed and presented at RECOMB-seq 2021 highlights track., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}