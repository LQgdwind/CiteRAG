{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: From Machine Translation to Code-Switching: Generating High-Quality Code-Switched Text\n\nPaper Abstract: Abstract Generating code-switched text is a problem of growing interest, especially given the scarcity of corpora containing large volumes of real code-switched text. In this work, we adapt a state-of-the-art neural machine translation model to generate Hindi-English code-switched sentences starting from monolingual Hindi sentences. We outline a carefully designed curriculum of pretraining steps, including the use of synthetic code-switched text, that enable the model to generate high-quality code-switched text. Using text generated from our model as data augmentation, we show significant reductions in perplexity on a language modeling task, compared to using text from other generative models of CS text. We also show improvements using our text for a downstream code-switched natural language inference task. Our generated text is further subjected to a rigorous evaluation using a human evaluation study and a range of objective metrics, where we show performance comparable (and sometimes even superior) to code-switched text obtained via crowd workers who are native Hindi speakers.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Syntactic and semantic features for code-switching factored language models\",\n        \"Recurrent neural network language modeling for code switching conversational speech\",\n        \"Amazon mechanical turk website\",\n        \"Grammatical constraints on intra-sentential code-switching:from theories to working models\",\n        \"Code-Switching Sentence Generation by Generative Adversarial Networks and its Application to Data Augmentation\",\n        \"Word translation without parallel data\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Enabling code-mixed translation: Parallel corpus creation and MT augmentation approach\",\n        \"A new algorithm for data compression\",\n        \"Code-switching sentence generation by bert and generative adversarial networks\",\n        \"Code-switched language models using dual RNNs and same-source pretraining\",\n        \"Dual language models for code switched speech recognition\",\n        \"Comet: Towards code-mixed translation using parallel monolingual sentences\",\n        \"Training data augmentation for code-mixed translation\",\n        \"Metrics for modeling code-switching across corpora\",\n        \"A Data-Driven Analysis of Workers’ Earnings on Amazon Mechanical Turk\",\n        \"Analyzing the forgetting problem in pretrain-finetuning of open-domain dialogue response models\",\n        \"SimAlign: High quality word alignments without parallel training data using static and contextualized embeddings\",\n        \"GLUECoS: An evaluation benchmark for code-switched NLP\",\n        \"The IIT bombay english-hindi parallel corpus\",\n        \"Unsupervised machine translation using monolingual corpora only\",\n        \"Phrase-based & neural unsupervised machine translation\",\n        \"Modeling code-switch languages using bilingual parallel corpus\",\n        \"Improved mixed language speech recognition using asymmetric acoustic model and language model with code-switch inversion constraints\",\n        \"Code switch language modeling with functional head constraint\",\n        \"Language modeling with functional head constraint for code switching speech recognition\",\n        \"Opensubtitles2016: Extracting large parallel corpora from movie and tv subtitles\",\n        \"Multilingual denoising pre-training for neural machine translation\",\n        \"Regularizing and optimizing LSTM language models\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"Bleu: A method for automatic evaluation of machine translation\",\n        \"How multilingual is multilingual BERT?\",\n        \"“sometimes i’ll start a sentence in spanish y termino en español”: Toward a typology of code-switching\",\n        \"Language modeling for code-mixing: The role of linguistic theory based synthetic data\",\n        \"Gcm: A toolkit for generating synthetic code-mixed text\",\n        \"A deep generative model for code switched text\",\n        \"A formal production-based explanation of the facts of code-switching\",\n        \"Improving neural machine translation models with monolingual data\",\n        \"Proceedings of the Fifth Workshop on Computational Approaches to Linguistic Code-Switching\",\n        \"Parallel data, tools and interfaces in OPUS\",\n        \"Attention is all you need\",\n        \"Pointer networks\",\n        \"A first speech recognition system for mandarin-english code-switch conversational speech\",\n        \"Learn to code-switch: Data augmentation using copy mechanism on language modeling\",\n        \"Code-switched language models using neural based synthetic data from parallel sentences\",\n        \"An integrated framework for transcribing mandarin-english code-mixed lectures with improved acoustic and language modeling\",\n        \"Seqgan: Sequence generative adversarial nets with policy gradient\",\n        \"Improving massively multilingual neural machine translation and zero-shot translation\",\n        \"Bertscore: Evaluating text generation with bert\",\n        \"Texygen: A benchmarking platform for text generation models\",\n        \"A universal algorithm for sequential data compression\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in From Machine Translation to Code-Switching: Generating High-Quality Code-Switched Text, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}