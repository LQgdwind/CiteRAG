{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: HOW MUCH CAN ChatGPT REALLY HELP COMPUTATIONAL BIOLOGISTS IN PROGRAMMING?\n\nPaper Abstract: Abstract ChatGPT, a recently developed product by openAI, is successfully leaving its mark as a multi-purpose natural language based chatbot. In this paper, we are more interested in analyzing its potential in the field of computational biology. A major share of work done by computational biologists these days involve coding up bioinformatics algorithms, analyzing data, creating pipelining scripts and even machine learning modeling and feature extraction. This paper focuses on the potential influence (both positive and negative) of ChatGPT in the mentioned aspects with illustrative examples from different perspectives. Compared to other fields of computer science, computational biology has - (1) less coding resources, (2) more sensitivity and bias issues (deals with medical data) and (3) more necessity of coding assistance (people from diverse background come to this field). Keeping such issues in mind, we cover use cases such as code writing, reviewing, debugging, converting, refactoring and pipelining using ChatGPT from the perspective of computational biologists in this paper.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gapped BLAST and PSI-BLAST: a new generation of protein database search programs\",\n        \"Program synthesis with large language models\",\n        \"Accurate prediction of protein structures and interactions using a three-track neural network\",\n        \"The SWISS-PROT protein sequence database and its supplement TrEMBL in 2000\",\n        \"Unmet needs for analyzing biological big data: A survey of 704 NSF principal investigators\",\n        \"Performance of a large language model on practice questions for the Neonatal Board Examination\",\n        \"A categorical archive of ChatGPT failures\",\n        \"Language models are few-shot learners\",\n        \"Robust principal component analysis?\",\n        \"Clonal hematopoiesis in liquid biopsy: from biological noise to valuable clinical implications\",\n        \"Evaluating large language models trained on code\",\n        \"Sensitive detection of somatic point mutations in impure and heterogeneous cancer samples\",\n        \"Biopython: freely available python tools for computational molecular biology and bioinformatics\",\n        \"Twelve years of SAMtools and BCFtools\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Search and clustering orders of magnitude faster than BLAST\",\n        \"An introduction to programming for bioscientists: a Python-based primer\",\n        \"Mathematical capabilities of ChatGPT\",\n        \"How and why chatgpt failed the turing test\",\n        \"Strelka2: fast and accurate calling of germline and somatic variants\",\n        \"VarScan: variant detection in massively parallel sequencing of individual and pooled samples\",\n        \"Snakemake—a scalable bioinformatics workflow engine\",\n        \"Fast and accurate short read alignment with Burrows–Wheeler transform\",\n        \"The Sequence Alignment/Map format and SAMtools\",\n        \"Cd-hit: a fast program for clustering and comparing large sets of protein or nucleotide sequences\",\n        \"Competition-level code generation with AlphaCode\",\n        \"Ten quick tips for harnessing the power of ChatGPT in computational biology\",\n        \"CoCoNuT: combining context-aware neural translation models using ensemble for program repair\",\n        \"An overview of bard: an early experiment with generative ai\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Iterating on multiple collections in synchrony\",\n        \"Many bioinformatics programming tasks can be automated with ChatGPT\",\n        \"Improving language understanding by generative pre-training\",\n        \"Language models are unsupervised multitask learners\",\n        \"Zero-shot text-to-image generation\",\n        \"deepTools: a flexible platform for exploring deep-sequencing data\",\n        \"Spatial reconstruction of single-cell gene expression data\",\n        \"Strelka: accurate somatic small-variant calling from sequenced tumor–normal sample pairs\",\n        \"A tutorial on principal component analysis\",\n        \"An analysis of the automatic bug fixing performance of ChatGPT\",\n        \"Llama: Open and efficient foundation language models\",\n        \"A large-scale study on research code quality and execution\",\n        \"Attention is all you need\",\n        \"SciPy 1.0: fundamental algorithms for scientific computing in Python\",\n        \"SWISS-MODEL: homology modelling of protein structures and complexes\",\n        \"ChatGPT prompt patterns for improving code quality, refactoring, requirements elicitation, and software design\",\n        \"The I-TASSER Suite: protein structure and function prediction\",\n        \"A comprehensive capability analysis of gpt-3 and gpt-3.5 series models\",\n        \"One small step for generative AI, one giant leap for AGI: A complete survey on ChatGPT in AIGC era\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in HOW MUCH CAN ChatGPT REALLY HELP COMPUTATIONAL BIOLOGISTS IN PROGRAMMING?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}