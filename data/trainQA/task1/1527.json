{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Zone pAth Construction (ZAC) based Approaches for Effective Real-Time Ridesharing This paper is an extension of our earlier paper at ICAPS 2019 (?). We have extended the paper in the following ways: (a) A non-myopic approach using zone paths for generating assignment of vehicles to request combinations by approximating the future effect of an assignment; (b)Benders decomposition method to efficiently solve the resultant non-myopic optimization formulation (after including the future effect of an assignment) in real-time; (c) A detailed experimental comparison of our non-myopic approach against leading myopic and non-myopic approaches on real-world and synthetic datasets.\n\nPaper Abstract: Abstract Real-time ridesharing systems such as UberPool, Lyft Line, GrabShare have become hugely popular as they reduce the costs for customers, improve per trip revenue for drivers and reduce traffic on the roads by grouping customers with similar itineraries. The key challenge in these systems is to group the “right” requests to travel together in the “right” available vehicles in real-time, so that the objective (e.g., requests served, revenue or delay) is optimized. This challenge has been addressed in existing work by: (i) generating as many relevant feasible (with respect to the available delay for customers) combinations of requests as possible in real-time; and then (ii) optimizing assignment of the feasible request combinations to vehicles. Since the number of request combinations increases exponentially with the increase in vehicle capacity and number of requests, unfortunately, such approaches have to employ ad hoc heuristics to identify a subset of request combinations for assignment. Our key contribution is in developing approaches that employ zone (abstraction of individual locations) paths instead of request combinations. Zone paths allow for generation of significantly more “relevant” combinations (in comparison to ad hoc heuristics) in real-time than competing approaches due to two reasons: (i) Each zone path can typically represent multiple request combinations; (ii) Zone paths are generated using a combination of offline and online methods. Specifically, we contribute both myopic (ridesharing assignment focussed on current requests only) and non-myopic (ridesharing assignment considers impact on expected future requests) approaches that employ zone paths. In our experimental results, we demonstrate that our myopic approach outperforms (with respect to both objective and runtime) the current best myopic approach for ridesharing on both real-world and synthetic datasets. We also show that our non-myopic approach obtains 14.7% improvement over existing myopic approach. Our non-myopic approach gets improvements of up to 12.48% over a recent non-myopic approach, NeurADP. Even when NeurADP is allowed to optimize learning over test settings, results largely remain comparable except in a couple of cases, where NeurADP performs better.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Dynamic ride-sharing: A simulation study in metro atlanta\",\n        \"On-demand high-capacity ride-sharing via dynamic trip-vehicle assignment\",\n        \"Predictive routing for autonomous mobility-on-demand systems with ride-sharing\",\n        \"Beeline singapore - book seat on the buses\",\n        \"Partitioning procedures for solving mixed-variables programming problems\",\n        \"Online vehicle routing: The edge of optimization in large-scale applications\",\n        \"Introduction to linear optimization, Vol. 6.\",\n        \"Osmnx: New methods for acquiring, constructing, analyzing, and visualizing complex street networks\",\n        \"Online multi-server dial-a-ride problems\",\n        \"Match making in lyft line\",\n        \"Ptrider: a price-and-time-aware ridesharing system\",\n        \"Utility-aware ridesharing on road networks\",\n        \"Consumers’ reactions to waiting: when delays affect the perception of service quality\",\n        \"When hashing met matching: Efficient search for potential matches in ride sharing\",\n        \"On-line single-server dial-a-ride problems\",\n        \"Grab shuttle plus - on demand shuttle service\",\n        \"Community-based trip sharing for urban commuting.\",\n        \"Introduction to integral boundary points of convex polyhedra\",\n        \"Large scale real-time ridesharing with service guarantee on road networks\",\n        \"An optimal algorithm for on-line bipartite matching\",\n        \"Efficient large-scale fleet management via multi-agent deep reinforcement learning\",\n        \"On-line dial-a-ride problems under a restricted information model\",\n        \"Online spatio-temporal matching in stochastic and dynamic domains\",\n        \"Zac: A zone path construction approach for effective real-time ridesharing\",\n        \"T-share: A large-scale dynamic taxi ridesharing service\",\n        \"The psychology of waiting lines\",\n        \"Benders, nested benders and stochastic programming: An intuitive introduction\",\n        \"New york yellow taxi dataset\",\n        \"A survey on pickup and delivery problems\",\n        \"A partition-based match making algorithm for dynamic ridesharing\",\n        \"A survey on dynamic and stochastic vehicle routing problems\",\n        \"Clustering methods data mining and knowledge discovery handbook\",\n        \"Branch and cut and price for the pickup and delivery problem with time windows\",\n        \"Models and branch-and-cut algorithms for pickup and delivery problems with time windows\",\n        \"Quantifying the benefits of vehicle pooling with shareability networks\",\n        \"Neural approximate dynamic programming for on-demand ride-pooling\",\n        \"Shotl on demand shuttles\",\n        \"An approximate dynamic programming algorithm for large-scale fleet management: A case application\",\n        \"The data and science behind grabshare carpooling\",\n        \"A unified approach to route planning for shared mobility\",\n        \"Grabshare: The construction of a realtime ridesharing service\",\n        \"Large-scale order dispatch in on-demand ride-hailing platforms: A learning and planning approach\",\n        \"Real-time multivehicle truckload pickup and delivery problems\",\n        \"An integrated decomposition and approximate dynamic programming approach for on-demand ride pooling\",\n        \"Order dispatch in price-aware ridesharing\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Zone pAth Construction (ZAC) based Approaches for Effective Real-Time Ridesharing This paper is an extension of our earlier paper at ICAPS 2019 (?). We have extended the paper in the following ways: (a) A non-myopic approach using zone paths for generating assignment of vehicles to request combinations by approximating the future effect of an assignment; (b)Benders decomposition method to efficiently solve the resultant non-myopic optimization formulation (after including the future effect of an assignment) in real-time; (c) A detailed experimental comparison of our non-myopic approach against leading myopic and non-myopic approaches on real-world and synthetic datasets., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}