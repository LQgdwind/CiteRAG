{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: It‚Äôs Hard to HAC with Average Linkage!\n\nPaper Abstract: Abstract Average linkage Hierarchical Agglomerative Clustering (HAC) is an extensively studied and applied method for hierarchical clustering. Recent applications to massive datasets have driven significant interest in near-linear-time and efficient parallel algorithms for average linkage HAC. We provide hardness results that rule out such algorithms. On the sequential side, we establish a runtime lower bound of n3/2‚àíœµsuperscriptùëõ32italic-œµn^{3/2-\\epsilon} on nùëõn node graphs for sequential combinatorial algorithms under standard fine-grained complexity assumptions. This essentially matches the best-known running time for average linkage HAC. On the parallel side, we prove that average linkage HAC likely cannot be parallelized even on simple graphs by showing that it is CC-hard on trees of diameter 444. On the possibility side, we demonstrate that average linkage HAC can be efficiently parallelized (i.e., it is in NC) on paths and can be solved in near-linear time when the height of the output cluster hierarchy is small.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Subquadratic high-dimensional hierarchical clustering\",\n        \"Faster combinatorial k-clique algorithms\",\n        \"A refined laser method and faster matrix multiplication\",\n        \"Thread scheduling for multiprogrammed multiprocessors\",\n        \"Affinity clustering: Hierarchical clustering at scale\",\n        \"Construction d‚Äôune classification ascendante hi√©rarchique par la recherche en cha√Æne des voisins r√©ciproques\",\n        \"Scans as primitive parallel operations\",\n        \"Optimal parallel algorithms in the binary-forking model\",\n        \"Space-efficient scheduling of multithreaded computations\",\n        \"Hierarchical clustering of brain activity during human nonrapid eye movement sleep\",\n        \"Hierarchical clustering: Objective functions and algorithms\",\n        \"The complexity of the comparator circuit value problem\",\n        \"On the asymptotic complexity of matrix multiplication\",\n        \"Introduction to Algorithms (3rd edition)\",\n        \"Hierarchical agglomerative graph clustering in nearly-linear time\",\n        \"Hierarchical agglomerative graph clustering in poly-logarithmic depth\",\n        \"Terahac: Hierarchical agglomerative clustering of trillion-edge graphs\",\n        \"Cluster analysis and display of genome-wide expression patterns\",\n        \"Fibonacci heaps and their uses in improved network optimization algorithms\",\n        \"On the parallel complexity of hierarchical clustering and cc-complete problems\",\n        \"MGUPGMA: a fast UPGMA algorithm with multiple graphics processing units using NCCL\",\n        \"Programme de classification hi√©rarchique par l‚Äôalgorithme de la recherche en cha√Æne des voisins r√©ciproques\",\n        \"Step-wise clustering procedures\",\n        \"A hierarchical algorithm for extreme clustering\",\n        \"A general theory of classificatory sorting strategies: 1. hierarchical systems\",\n        \"Algorithms and hardness for multidimensional range updates and queries\",\n        \"Faster algorithms for rectangular matrix multiplication\",\n        \"Introduction to Information Retrieval\",\n        \"The complexity of circuit value and network stability\",\n        \"Scalable hierarchical agglomerative clustering\",\n        \"Approximation bounds for hierarchical clustering: Average linkage, bisecting k-means, and local search\",\n        \"Modern hierarchical, agglomerative clustering algorithms\",\n        \"Algorithms for hierarchical clustering: an overview\",\n        \"Algorithms for hierarchical clustering: an overview, ii\",\n        \"Scikit-learn: Machine learning in python\",\n        \"Alglib, a simple symbol-manipulation package\",\n        \"The principles and practice of numerical classification\",\n        \"A new approach to stable matching problems\",\n        \"Parallel batch-dynamic minimum spanning forest and the efficiency of dynamic agglomerative graph clustering\",\n        \"Scipy 1.0: fundamental algorithms for scientific computing in python\",\n        \"Multiplying matrices faster than coppersmith-winograd\",\n        \"Subcubic equivalences between path, matrix and triangle problems\",\n        \"New bounds for matrix multiplication: from alpha to omega\",\n        \"Evaluation of hierarchical clustering algorithms for document datasets\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in It‚Äôs Hard to HAC with Average Linkage!, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}