{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Formalism of DNN Accelerator Flexibility\n\nPaper Abstract: Abstract. The high efficiency of domain-specific hardware accelerators for machine learning (ML) has come from specialization, with the trade-off of less configurability/ flexibility. There is growing interest in developing flexible ML accelerators to make them future-proof to the rapid evolution of Deep Neural Networks (DNNs). However, the notion of accelerator flexibility has always been used in an informal manner, restricting computer architects from conducting systematic apples-to-apples design-space exploration (DSE) across trillions of choices. In this work, we formally define accelerator flexibility and show how it can be integrated for DSE. Specifically, we capture DNN accelerator flexibility across four axes: tiling, ordering, parallelization, and array shape. We categorize existing accelerators into 16 classes based on their axes of flexibility support, and define a precise quantification of the degree of flexibility of an accelerator across each axis. We leverage these to develop a novel flexibility-aware DSE framework. We demonstrate how this can be used to perform first-of-their-kind evaluations, including an isolation study to identify the individual impact of the flexibility axes. We demonstrate that adding flexibility features to a hypothetical DNN accelerator designed in 2014 improves runtime on future (i.e., present-day) DNNs by 11.8×11.8\\times geomean.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Freepdk15:contents.\",\n        \"Cuda c++ programming guide.\",\n        \"Fused-layer cnn accelerators.\",\n        \"A multi-neural network acceleration architecture.\",\n        \"Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures.\",\n        \"Marvel: A data-centric compiler for dnn operators on spatial accelerators.\",\n        \"Generative pretraining from pixels.\",\n        \"Learning to optimize tensor programs.\",\n        \"Eyeriss: A spatial architecture for energy-efficient dataflow for convolutional neural networks.\",\n        \"Eyeriss: An energy-efficient reconfigurable accelerator for deep convolutional neural networks.\",\n        \"Eyeriss v2: A flexible accelerator for emerging deep neural networks on mobile devices.\",\n        \"Dmazerunner: Executing perfectly nested loops on dataflow accelerators.\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding.\",\n        \"Shidiannao: Shifting vision processing closer to the sensor.\",\n        \"Switch transformers: Scaling to trillion parameter models with simple and efficient sparsity.\",\n        \"Tangram: Optimized coarse-grained dataflow for scalable nn accelerators.\",\n        \"Planaria: Dynamic architecture fission for spatial multi-tenant acceleration of deep neural networks.\",\n        \"Deep residual learning for image recognition.\",\n        \"Neural collaborative filtering.\",\n        \"Mind mappings: Enabling efficient algorithm-accelerator mapping space search extended abstract.\",\n        \"Ucnn: Exploiting computational reuse in deep neural networks via weight repetition.\",\n        \"Cosa: Scheduling by constrained optimization for spatial accelerators.\",\n        \"A domain-specific supercomputer for training deep neural networks.\",\n        \"In-datacenter performance analysis of a tensor processing unit.\",\n        \"Gamma: Automating the hw mapping of dnn models on accelerators via genetic algorithm.\",\n        \"Analyzing and improving the image quality of StyleGAN.\",\n        \"Imagenet classification with deep convolutional neural networks.\",\n        \"Maestro: A data-centric approach to understand reuse, performance, and hardware cost of dnn mappings.\",\n        \"Maeri: Enabling flexible dataflow mapping over dnn accelerators via reconfigurable interconnects.\",\n        \"Flexflow: A flexible dataflow accelerator architecture for convolutional neural networks.\",\n        \"Deep learning recommendation model for personalization and recommendation systems.\",\n        \"Nvdla deep learning accelerator.\",\n        \"Timeloop: A systematic approach to dnn accelerator evaluation.\",\n        \"Buffets: An efficient and composable storage idiom for explicit decoupled data orchestration.\",\n        \"Dyhard-dnn: Even more dnn acceleration with dynamic hardware reconfiguration.\",\n        \"Sigma: A sparse and irregular gemm accelerator with flexible interconnects for dnn training.\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks.\",\n        \"Simba: Scaling deep-learning inference with multi-chip-module-based architecture.\",\n        \"Very deep convolutional networks for large-scale image recognition.\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile.\",\n        \"Arithmetic Complexity of Computations, chapter 7, pages 71–92.\",\n        \"Interstellar: Using halide’s scheduling language to analyze dnn accelerators.\",\n        \"Sara: Scaling a reconfigurable dataflow accelerator.\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in A Formalism of DNN Accelerator Flexibility, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}