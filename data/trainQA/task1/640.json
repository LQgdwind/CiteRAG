{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Progressively Pretrained Dense Corpus Index for Open-Domain Question Answering\n\nPaper Abstract: Abstract Commonly used information retrieval methods such as TF-IDF in open-domain question answering (QA) systems are insufficient to capture deep semantic matching that goes beyond lexical overlaps. Some recent studies consider the retrieval process as maximum inner product search (MIPS) using dense question and paragraph representations, achieving promising results on several information-seeking QA datasets. However, the pretraining of the dense vector representations is highly resource-demanding, e.g., requires a very large batch size and lots of training steps. In this work, we propose a sample-efficient method to pretrain the paragraph encoder. First, instead of using heuristically created pseudo question-paragraph pairs for pretraining, we use an existing pretrained sequence-to-sequence model to build a strong question generator that creates high-quality pretraining data. Second, we propose a simple progressive pretraining algorithm to ensure the existence of effective negative samples in each batch. Across three open-domain QA datasets, our method consistently outperforms a strong dense retrieval baseline that uses 6 times more computation for training. On two of the datasets, our method achieves more than 4-point absolute improvement in terms of answer exact match. ††footnotetext: ⋆ Equal Contribution.††footnotetext: _ Our code is available at https://github.com/xwhan/ProQA.git.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning to retrieve reasoning paths over wikipedia graph for question answering\",\n        \"Yodaqa: a modular question answering system pipeline\",\n        \"Modeling of the question answering task in the yodaqa system\",\n        \"Curriculum learning\",\n        \"Semantic parsing on freebase from question-answer pairs\",\n        \"A large annotated corpus for learning natural language inference\",\n        \"An analysis of the askmsr question-answering system\",\n        \"Pre-training tasks for embedding-based large-scale retrieval\",\n        \"Reading Wikipedia to answer open-domain questions\",\n        \"Enhancing sentence embedding with generalized pooling\",\n        \"Simple and effective multi-paragraph reading comprehension\",\n        \"Supervised learning of universal sentence representations from natural language inference data\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Building watson: An overview of the deepqa project\",\n        \"REALM: retrieval-augmented language model pre-training\",\n        \"Self-paced curriculum learning\",\n        \"Billion-scale similarity search with gpus\",\n        \"Triviaqa: A large scale distantly supervised challenge dataset for reading comprehension\",\n        \"Dense passage retrieval for open-domain question answering\",\n        \"Adam: A method for stochastic optimization\",\n        \"Self-paced learning for latent variable models\",\n        \"Natural questions: a benchmark for question answering research\",\n        \"Scaling question answering to the web\",\n        \"Ranking paragraphs for improving answer recall in open-domain question answering\",\n        \"Latent retrieval for weakly supervised open domain question answering\",\n        \"BART: denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Denoising distantly supervised open-domain question answering\",\n        \"An efficient framework for learning sentence representations\",\n        \"Sparse, dense, and attentional representations for text retrieval\",\n        \"Improving question generation with sentence-level semantic matching and answer position inferring\",\n        \"A discrete hard EM approach for weakly supervised question answering\",\n        \"Knowledge guided text retrieval and reading for open domain question answering\",\n        \"A decomposable attention model for natural language inference\",\n        \"Squad: 100, 000+ questions for machine comprehension of text\",\n        \"How much knowledge can you pack into the parameters of a language model?\",\n        \"The probabilistic relevance framework: BM25 and beyond\",\n        \"Real-time open-domain question answering with dense-sparse phrase index\",\n        \"Attention is all you need\",\n        \"The TREC-8 question answering track report\",\n        \"R33{}^{\\\\mbox{3}}: Reinforced ranker-reader for open-domain question answering\",\n        \"Evidence aggregation for answer re-ranking in open-domain question answering\",\n        \"Multi-passage BERT: A globally normalized BERT model for open-domain question answering\",\n        \"Pretrained encyclopedia: Weakly supervised knowledge-pretrained language model\",\n        \"End-to-end open-domain question answering with BERTserini\",\n        \"Deconvolutional paragraph representation learning\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Progressively Pretrained Dense Corpus Index for Open-Domain Question Answering, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}