{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Nudge: Accelerating Overdue Pull Requests Towards Completion\n\nPaper Abstract: Abstract. Pull requests are a key part of the collaborative software development and code review process today. However, pull requests can also slow down the software development process when the reviewer(s) or the author do not actively engage with the pull request. In this work, we design an end-to-end service, Nudge, for accelerating overdue pull requests towards completion by reminding the author or the reviewer(s) to engage with their overdue pull requests. First, we use models based on effort estimation and machine learning to predict the completion time for a given pull request. Second, we use activity detection to filter out pull requests that may be overdue, but for which sufficient action is taking place nonetheless. Lastly, we use actor identification to understand who the blocker of the pull request is and nudge the appropriate actor (author or reviewer(s)). The key novelty of Nudge is that it succeeds in reducing pull request resolution time, while ensuring that developers perceive the notifications sent as useful, at the scale of thousands of repositories. In a randomized trial on 147 repositories in use at Microsoft, Nudge was able to reduce pull request resolution time by 60% for 8,500 pull requests, when compared to overdue pull requests for which Nudge did not send a notification. Furthermore, developers receiving Nudge notifications resolved 73% of these notifications as positive. We observed similar results when scaling up the deployment of Nudge to 8,000 repositories at Microsoft, for which Nudge sent 210,000 notifications during a full year. This demonstrates Nudge’s ability to scale to thousands of repositories. Lastly, our qualitative analysis of a selection of Nudge notifications indicates areas for future research, such as taking dependencies among pull requests and developer availability into account.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Azure DevOps REST API\",\n        \"GitHub\",\n        \"GitHub Marketplace\",\n        \"Long-Running Branches Considered Harmful\",\n        \"Whodo: Automating reviewer suggestions at scale\",\n        \"Proposing an enhanced artificial neural network prediction model to improve the accuracy in software effort estimation\",\n        \"DeCaf: diagnosing and triaging performance issues in large-scale cloud services\",\n        \"The influence of non-technical factors on code review\",\n        \"Towards Improving Statistical Modeling of Software Engineering Data: Think Locally, Act Globally\",\n        \"Orca: Differential bug localization in large-scale services\",\n        \"Cost models for future software life cycle processes: COCOMO 2.0\",\n        \"Software Engineering Economics\",\n        \"An Assessment and Comparison of Common Software Cost Estimation Modeling Techniques\",\n        \"Exploring the Relationship Between Design Measures and Software Quality in Object-oriented Systems\",\n        \"Confirmation Bias in Software Development and Testing: An Analysis of the Effects of Company Size, Experience and Reasoning Skills\",\n        \"Bayesian Analysis of Empirical Software Engineering Cost Models\",\n        \"”Yours is Better!”: Participant Response Bias in HCI\",\n        \"Detecting and Characterizing Bots that Commit Code\",\n        \"Understanding predictive factors for merge conflicts\",\n        \"Internetworked wrist sensing devices for Pervasive and M-Connected Eldercare\",\n        \"Building sankie: An AI platform for devops\",\n        \"Smart home automation using IFTTT and google assistant\",\n        \"Mining software effort data: preliminary analysis of visual studio team system data\",\n        \"Defining and classifying software bots: a faceted taxonomy\",\n        \"Spiral of Silence in Recommender Systems\",\n        \"Code Reviewing in the Trenches: Challenges and Best Practices\",\n        \"Predicting Pull Request Completion Time: A Case Study on Large Scale Cloud Services\",\n        \"Rex: Preventing bugs and misconfiguration in large services using correlated change analysis\",\n        \"An IoT-enabled intelligent automobile system for smart cities\",\n        \"Local versus Global Lessons for Defect Prediction and Effort Estimation\",\n        \"Confirmation Bias: A Ubiquitous Phenomenon in Many Guises\",\n        \"Where the Bugs Are\",\n        \"Automate the Internet With “If This Then That” (IFTTT)\",\n        \"Relationship Between Geographical Location and Evaluation of Developer Contributions in Github\",\n        \"Identifying redundancies in fork-based development\",\n        \"Acceptance Factors of Pull Requests in Open-source Projects\",\n        \"Item Popularity and Recommendation Accuracy\",\n        \"BOTse: Bots in Software Engineering (Dagstuhl Seminar 19471)\",\n        \"Gender differences and bias in open source: pull request acceptance of women versus men\",\n        \"Influence of Social and Technical Factors for Evaluating Contribution in GitHub\",\n        \"Automatically prioritizing pull requests\",\n        \"Duplicate Pull Request Detection: When Time Matters\",\n        \"Large-scale intent analysis for identifying large-review-effort code changes\",\n        \"Leveraging change intents for characterizing and identifying large-review-effort changes\",\n        \"Towards an autonomous bot for automatic source code refactoring\",\n        \"Wait for It: Determinants of Pull Request Evaluation Latency on GitHub\",\n        \"Reviewer recommendation for pull-requests in GitHub: What can we learn from code review and bug assignment?\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Nudge: Accelerating Overdue Pull Requests Towards Completion, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}