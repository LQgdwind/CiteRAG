{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Direct Encoding of Declare Constraints in ASP3footnote 33footnote 3 Extended version of a distinguished paper of PADLâ€™24 [Chiariello et al. (2024)] invited for rapid publication on TPLP.\n\nPaper Abstract: Abstract Answer Set Programming (ASP), a well-known declarative logic programming paradigm, has recently found practical application in Process Mining. In particular, ASP has been used to model tasks involving declarative specifications of business processes. In this area, Declare stands out as the most widely adopted declarative process modeling language, offering a means to model processes through sets of constraints valid traces must satisfy, that can be expressed in Linear Temporal Logic over Finite Traces (LTLf{}_{\\text{f}}). Existing ASP-based solutions encode Declare constraints by modeling the corresponding LTLf{}_{\\text{f}} formula or its equivalent automaton which can be obtained using established techniques. In this paper, we introduce a novel encoding for Declare constraints that directly models their semantics as ASP rules, eliminating the need for intermediate representations. We assess the effectiveness of this novel approach on two Process Mining tasks by comparing it with alternative ASP encodings and a Python library for Declare. Under consideration in Theory and Practice of Logic Programming (TPLP).\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Probabilistic declarative process mining\",\n        \"Efficient compliance computation in probabilistic declarative specifications\",\n        \"Towards a theory of declarative knowledge\",\n        \"Answer set programming at a glance\",\n        \"Conformance checking based on multi-perspective declarative process models\",\n        \"telingo = ASP + time\",\n        \"Asp-core-2 input language format\",\n        \"Measuring the interestingness of temporal logic behavioral specifications in process mining\",\n        \"Temporal-logic queries\",\n        \"Optimising business process discovery using answer set programming\",\n        \"Process discovery on deviant traces and other stranger things\",\n        \"Exploiting inductive logic programming techniques for declarative process mining\",\n        \"A direct ASP encoding for declare\",\n        \"Asp-based declarative process mining\",\n        \"From LTL on process traces to finite-state automata\",\n        \"BPMN: an introduction to the standard\",\n        \"Compilation-based techniques for evaluating normal logic programs under the well-founded semantics\",\n        \"Reasoning on LTL on finite traces: Insensitivity to infiniteness\",\n        \"Compositional approach to translate ltlf/ldlf into deterministic finite automata\",\n        \"Linear temporal logic and linear dynamic logic on finite traces\",\n        \"Data-aware process mining: discovering decisions in processes using alignments\",\n        \"On the discovery of declarative control flows for artful processes\",\n        \"Declarative process specifications: Reasoning, discovery, monitoring\",\n        \"Compilation of tight ASP programs\",\n        \"Blending Grounding and Compilation for Efficient ASP Solving\",\n        \"Declare4py: A python library for declarative process mining\",\n        \"Patterns in property specifications for finite-state verification\",\n        \"Applications of answer set programming\",\n        \"Checking finite traces using alternating automata\",\n        \"LTL on finite and process traces: Complexity results and a practical reasoner\",\n        \"Logic-based composition of business process models\",\n        \"Ltlf2asp: Ltlf bounded satisfiability in ASP\",\n        \"Answer Set Solving in Practice\",\n        \"Multi-shot ASP solving with clingo\",\n        \"Classical negation in logic programs and disjunctive databases\",\n        \"Misconceptions in finite-trace and infinite-trace linear temporal logic\",\n        \"Little tricky logic: Misconceptions in the understanding of LTL\",\n        \"Towards ilp-based ltlf passive learning\",\n        \"Declarative mining of business processes via ASP\",\n        \"Inconsistency measurement in ltl f{}_{mbox{ f}} based on minimal inconsistent sets and minimal correction sets\",\n        \"Non-automata based conformance checking of declarative process specifications based on ASP\",\n        \"Applying inductive logic programming to process mining\",\n        \"Conflict-driven inductive logic programming\",\n        \"Foundations of Logic Programming, 2nd Edition\",\n        \"A survey of process mining competitions: The BPI challenges 2011-2018\",\n        \"Analyzing the trajectories of patients with sepsis using process mining\",\n        \"Compilation of aggregates in ASP systems\",\n        \"Logic programs with stable model semantics as a constraint programming paradigm\",\n        \"The temporal logic of programs\",\n        \"Log-based understanding of business processes through temporal logic query checking\",\n        \"Declarative process mining in healthcare\",\n        \"Domain-dependent knowledge in answer set planning\",\n        \"Process mining: a research agenda\",\n        \"The application of petri nets to workflow management\",\n        \"Process mining: A 360 degree overview\",\n        \"Declarative workflows: Balancing between flexibility and support\",\n        \"Probabilistic compliance in declarative process mining\",\n        \"Business Process Management - Concepts, Languages, Architectures, Third Edition\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Direct Encoding of Declare Constraints in ASP3footnote 33footnote 3 Extended version of a distinguished paper of PADLâ€™24 [Chiariello et al. (2024)] invited for rapid publication on TPLP., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}