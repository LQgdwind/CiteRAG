{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Altering Backward Pass Gradients improves Convergence\n\nPaper Abstract: Abstract In standard neural network training, the gradients in the backward pass are determined by the forward pass. As a result, the two stages are coupled. This is how most neural networks are trained currently. However, gradient modification in the backward pass has seldom been studied in the literature. In this paper we explore decoupled training, where we alter the gradients in the backward pass. We propose a simple yet powerful method called PowerGrad Transform, that alters the gradients before the weight update in the backward pass and significantly enhances the predictive performance of the neural network. PowerGrad Transform trains the network to arrive at a better optima at convergence. It is computationally extremely efficient, virtually adding no additional cost to either memory or compute, but results in improved final accuracies on both the training and test sets. PowerGrad Transform is easy to integrate into existing training routines, requiring just a few lines of code. PowerGrad Transform accelerates training and makes it possible for the network to better fit the training data. With decoupled training, PowerGrad Transform improves baseline accuracies for ResNet-50 by 0.73%, for SE-ResNet-50 by 0.66% and by more than 1.0% for the non-normalized ResNet-18 network on the ImageNet classification task.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Knowledge distillation from internal representations\",\n        \"Slot machines: Discovering winning combinations of random weights in neural networks\",\n        \"Do deep nets really need to be deep?\",\n        \"High-performance large-scale image recognition without normalization\",\n        \"On the efficacy of knowledge distillation\",\n        \"Towards better decoding and language model integration in sequence to sequence models\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Pairwise confusion for fine-grained visual classification\",\n        \"Adaptive subgradient methods for online learning and stochastic optimization\",\n        \"Born again neural networks\",\n        \"Distilling channels for efficient deep tracking\",\n        \"Low-resolution face recognition in the wild via selective knowledge distillation\",\n        \"Deep residual learning for image recognition\",\n        \"Determining the optimal temperature parameter for softmax function in reinforcement learning\",\n        \"Distilling the knowledge in a neural network\",\n        \"Squeeze-and-excitation networks\",\n        \"A theoretical framework for back-propagation\",\n        \"Backpropagation and the brain\",\n        \"Sphereface: Deep hypersphere embedding for face recognition\",\n        \"Improving the interpretability of deep neural networks with knowledge distillation\",\n        \"Sgdr: Stochastic gradient descent with warm restarts\",\n        \"Regularizing and optimizing lstm language models\",\n        \"When does label smoothing help?\",\n        \"Understanding the exploding gradient problem\",\n        \"On the difficulty of training recurrent neural networks\",\n        \"Unsupervised knowledge transfer using similarity embeddings\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Training deep neural networks on noisy labels with bootstrapping\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"On the generalization benefit of noise in stochastic gradient descent\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Cosface: Large margin cosine loss for deep face recognition\",\n        \"Memory-replay knowledge distillation\",\n        \"Real-time correlation tracking via joint model compression and transfer\",\n        \"Pytorch image models\",\n        \"Improving generalization via scalable neighborhood component analysis\",\n        \"Disturblabel: Regularizing cnn on the loss layer\",\n        \"Data-distortion guided self-distillation for deep neural networks\",\n        \"Deep learning from noisy image labels with quality embedding\",\n        \"Revisiting knowledge distillation via label smoothing regularization\",\n        \"Regularizing class-wise predictions via self-knowledge distillation\",\n        \"Classification is a strong baseline for deep metric learning\",\n        \"Why gradient clipping accelerates training: A theoretical justification for adaptivity\",\n        \"Be your own teacher: Improve the performance of convolutional neural networks via self distillation\",\n        \"Deep mutual learning\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Altering Backward Pass Gradients improves Convergence, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}