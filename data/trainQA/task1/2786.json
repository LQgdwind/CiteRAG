{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Convolutional Embeddings for Recommender Systems\n\nPaper Abstract: Abstract. Modern recommender systems (RS) work by processing a number of signals that can be inferred from large sets of user-item interaction data. The main signal to analyze stems from the raw matrix that represents interactions. However, we can increase the performance of RS by considering other kinds of signals like the context of interactions, which could be, for example, the time or date of the interaction, the user location, or sequential data corresponding to the historical interactions of the user with the system. These complex, context-based interaction signals are characterized by a rich relational structure that can be represented by a multi-partite graph. Graph Convolutional Networks (GCNs) have been used successfully in collaborative filtering with simple user-item interaction data. In this work, we generalize the use of GCNs for N-partide graphs by considering N multiple context dimensions and propose a simple way for their seamless integration in modern deep learning RS architectures. More specifically, we define a graph convolutional embedding layer for N-partide graphs that processes user-item-context interactions, and constructs node embeddings by leveraging their relational structure. Experiments on several datasets from recommender systems to drug re-purposing show the benefits of the introduced GCN embedding layer by measuring the performance of different context-enriched tasks.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Context-aware recommender systems\",\n        \"Matrix factorization techniques for context aware recommendation\",\n        \"ITEM2VEC: Neural item embedding for collaborative filtering\",\n        \"Controlling the false discovery rate - a practical and powerful approach to multiple testing\",\n        \"On the adaptive control of the false discovery fate in multiple testing with independent statistics\",\n        \"Graph convolutional matrix completion\",\n        \"Hyperopt: a python library for model selection and hyperparameter optimization\",\n        \"Spectral networks and locally connected networks on graphs\",\n        \"FastGCN: Fast Learning with Graph Convolutional Networks via Importance Sampling\",\n        \"Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering\",\n        \"Statistical Comparisons of Classifiers over Multiple Data Sets\",\n        \"Convolutional Networks on Graphs for Learning Molecular Fingerprints\",\n        \"Graph Neural Networks for Social Recommendation\",\n        \"DeepFM: a factorization-machine based neural network for CTR prediction\",\n        \"Inductive representation learning on large graphs\",\n        \"The movielens datasets: History and context\",\n        \"Neural factorization machines for sparse predictive analytics\",\n        \"Nais: Neural attentive item similarity model for recommendation\",\n        \"Neural collaborative filtering\",\n        \"Deep convolutional networks on graph-structured data\",\n        \"Multiverse Recommendation: N-Dimensional Tensor Factorization for Context-Aware Collaborative Filtering\",\n        \"Introduction to pytorch\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"xdeepfm: Combining explicit and implicit feature interactions for recommender systems\",\n        \"A network integration approach for drug-target interaction prediction and computational drug repositioning from heterogeneous information\",\n        \"Factorization machines\",\n        \"BPR: Bayesian personalized ranking from implicit feedback\",\n        \"Fast Context-Aware Recommendations with Factorization Machines\",\n        \"Neural collaborative filtering vs. matrix factorization revisited\",\n        \"Learning to Simulate Complex Physics with Graph Networks\",\n        \"Multi-Graph Convolution Collaborative Filtering\",\n        \"Graph attention networks\",\n        \"Item recommendation on monotonic behavior chains\",\n        \"Fine-grained spoiler detection from large-scale review corpora\",\n        \"Kgat: Knowledge graph attention network for recommendation\",\n        \"Neural graph collaborative filtering\",\n        \"Simplifying Graph Convolutional Networks\",\n        \"CFM: convolutional factorization machines for context-aware recommendation\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Lambdafm: learning optimal ranking with factorization machines using lambda surrogates\",\n        \"# nowplaying music dataset: Extracting listening behavior from twitter\",\n        \"Graph-based regularization on embedding layers for recommendation\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Graph Convolutional Embeddings for Recommender Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}