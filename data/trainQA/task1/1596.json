{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Resilient Cloud-based Replication with Low Latency\n\nPaper Abstract: Abstract. Existing approaches to tolerate Byzantine faults in geo-replicated environments require systems to execute complex agreement protocols over wide-area links and consequently are often associated with high response times. In this paper we address this problem with Spider, a resilient replication architecture for geo-distributed systems that leverages the availability characteristics of today’s public-cloud infrastructures to minimize complexity and reduce latency. Spider models a system as a collection of loosely coupled replica groups whose members are hosted in different cloud-provided fault domains (i.e., availability zones) of the same geographic region. This structural organization makes it possible to achieve low response times by placing replica groups in close proximity to clients while still enabling the replicas of a group to interact over short-distance links. To handle the inter-group communication necessary for strong consistency Spider uses a reliable group-to-group message channel with first-in-first-out semantics and built-in flow control that significantly simplifies system design.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"RACS: A Case for Cloud Storage Diversity\",\n        \"Regions and Availability Zones\",\n        \"Summary of the Amazon EC2 and Amazon RDS Service Disruption in the US East Region\",\n        \"Customizable Fault Tolerance for Wide-Area Replication\",\n        \"Prime: Byzantine Replication Under Attack\",\n        \"Steward: Scaling Byzantine Fault-Tolerant Replication to Wide Area Networks\",\n        \"The Next 700 BFT Protocols\",\n        \"RBFT: Redundant Byzantine Fault Tolerance\",\n        \"Deploying Intrusion-Tolerant SCADA for the Power Grid\",\n        \"Network-attack-resilient Intrusion-tolerant SCADA for the Power Grid\",\n        \"Consensus-Oriented Parallelization: How to Earn Your First Million\",\n        \"Resilient Wide-Area Byzantine Consensus Using Adaptive Weighted Replication\",\n        \"Concurrency Control and Recovery in Database Systems\",\n        \"DepSky: Dependable and Secure Storage in a Cloud-of-Clouds\",\n        \"State Machine Replication for the Masses with BFT-SMaRt\",\n        \"The CRUTIAL Way of Critical Infrastructure Protection\",\n        \"Dynamic Adaptation of Byzantine Consensus Protocols\",\n        \"Practical Byzantine Fault Tolerance\",\n        \"UpRight Cluster Services\",\n        \"Adaptive Request Batching for Byzantine Replication\",\n        \"Resource-efficient Byzantine Fault Tolerance\",\n        \"Clock-RSM: Low-Latency Inter-Datacenter State Machine Replication Using Loosely Synchronized Physical Clocks\",\n        \"Consensus in the Presence of Partial Synchrony\",\n        \"Deterministic Fuzzy Checkpoints\",\n        \"Latency-Aware Leader Selection for Geo-Replicated Byzantine Fault-Tolerant Systems\",\n        \"Scalable Byzantine Fault-tolerant State-Machine Replication on Heterogeneous Servers\",\n        \"SieveQ: A Layered BFT Protection System for Critical Services\",\n        \"Regions and Zones\",\n        \"SBFT: A Scalable and Decentralized Trust Infrastructure\",\n        \"ResilientDB: Global Scale Resilient Blockchain Fabric\",\n        \"Linearizability: A Correctness Condition for Concurrent Objects\",\n        \"CheapBFT: Resource-efficient Byzantine Fault Tolerance\",\n        \"The Part-Time Parliament\",\n        \"Troxy: Transparent Access to Byzantine Fault-Tolerant Systems\",\n        \"SAREK: Optimistic Parallel Ordering in Byzantine Fault Tolerance\",\n        \"Leader Set Selection for Low-Latency Geo-Replicated State Machine\",\n        \"Mencius: Building Efficient Replicated State Machines for WANs\",\n        \"Towards Low Latency State Machine Replication for Uncivil Wide-Area Networks\",\n        \"Fast Byzantine Consensus\",\n        \"Azure Regions\",\n        \"Bounded Delay in Byzantine-Tolerant State Machine Replication\",\n        \"There Is More Consensus in Egalitarian Parliaments\",\n        \"On the Challenges of Building a BFT SCADA\",\n        \"Callinicos: Robust Transactional Storage for Distributed Data Structures\",\n        \"Augustus: Scalable and Robust Storage for Cloud Applications\",\n        \"P-Store: Genuine Partial Replication in Wide Area Networks\",\n        \"Implementing Fault-tolerant Services Using the State Machine Approach: A Tutorial\",\n        \"Practical Threshold Signatures\",\n        \"Separating the WHEAT from the Chaff: An Empirical Design for Geo-Replicated State Machines\",\n        \"A Byzantine Fault-tolerant Ordering Service for the Hyperledger Fabric Blockchain Platform\",\n        \"Consistency-based Service Level Agreements for Cloud Storage\",\n        \"Message Authentication with One-Way Hash Functions\",\n        \"Spin One’s Wheels? Byzantine Fault Tolerance with a Spinning Primary\",\n        \"EBAWA: Efficient Byzantine Agreement for Wide-Area Networks\",\n        \"Separating Agreement from Execution for Byzantine Fault Tolerant Services\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Resilient Cloud-based Replication with Low Latency, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}