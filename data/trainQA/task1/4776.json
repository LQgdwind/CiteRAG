{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Towards Generating Real-World Time Series Data\n\nPaper Abstract: Abstract Time series data generation has drawn increasing attention in recent years. Several generative adversarial network (GAN) based methods have been proposed to tackle the problem usually with the assumption that the targeted time series data are well-formatted and complete. However, real-world time series (RTS) data are far away from this utopia, e.g., long sequences with variable lengths and informative missing data raise intractable challenges for designing powerful generation algorithms. In this paper, we propose a novel generative framework for RTS data — RTSGAN to tackle the aforementioned challenges. RTSGAN first learns an encoder-decoder module which provides a mapping between a time series instance and a fixed-dimension latent vector and then learns a generation module to generate vectors in the same latent space. By combining the generator and the decoder, RTSGAN is able to generate RTS which respect the original feature distributions and the temporal dynamics. To generate time series with missing values, we further equip RTSGAN with an observation embedding layer and a decide-and-generate decoder to better utilize the informative missing patterns. Experiments on the four RTS datasets show that the proposed framework outperforms the previous generation methods in terms of synthetic data utility for downstream classification and prediction tasks. Our code is available at https://seqml.github.io/rtsgan.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"“Internet of things (iot): A literature review\",\n        \"Internet of things (iot): A literature review\",\n        \"Privacy-preserving data mining: models and algorithms\",\n        \"Data synthesis based on generative adversarial networks\",\n        \"Generating multi-label discrete patient records using generative adversarial networks\",\n        \"Time-series generative adversarial networks\",\n        \"Real-valued (medical) time series generation with recurrent conditional gans\",\n        \"Cot-gan: Generating sequential data via causal optimal transport\",\n        \"Generative adversarial nets\",\n        \"Wasserstein gan\",\n        \"Improved training of wasserstein gans\",\n        \"C-rnn-gan: Continuous recurrent neural networks with adversarial training\",\n        \"Using gans for sharing networked time series data: Challenges, initial promise, and open questions\",\n        \"Deep survival analysis\",\n        \"Deep recurrent survival analysis\",\n        \"Inference and missing data\",\n        \"Multiple imputation for missing data in epidemiological and clinical research: potential and pitfalls\",\n        \"Recurrent neural networks for multivariate time series with missing values\",\n        \"Brits: Bidirectional recurrent imputation for time series\",\n        \"Multivariate time series imputation with generative adversarial networks\",\n        \"E2gan: End-to-end generative adversarial network for multivariate time series imputation\",\n        \"Joint modeling of local and global temporal dynamics for multivariate time series forecasting with missing values.\",\n        \"Forecasting in multivariate irregularly sampled time series with missing values\",\n        \"Adversarial autoencoders\",\n        \"Adversarially regularized autoencoders\",\n        \"Latent code and text-based generative adversarial networks for soft-text generation\",\n        \"Variational recurrent auto-encoders\",\n        \"Generating sentences from a continuous space\",\n        \"Learning phrase representations using rnn encoder-decoder for statistical machine translation\",\n        \"Rectifier nonlinearities improve neural network acoustic models\",\n        \"Generating sequences with recurrent neural networks\",\n        \"Generating text with recurrent neural networks\",\n        \"Scheduled sampling for sequence prediction with recurrent neural networks\",\n        \"Layer normalization\",\n        \"Generating continuous representations of medical texts\",\n        \"Predicting in-hospital mortality of icu patients: The physionet/computing in cardiology challenge 2012\",\n        \"Multi-time attention networks for irregularly sampled time series\",\n        \"Attention is all you need\",\n        \"Time2vec: Learning a vector representation of time\",\n        \"Data driven prediction models of energy use of appliances in a low-energy house\",\n        \"Wavenet: A generative model for raw audio\",\n        \"Adversarial audio synthesis\",\n        \"Long short-term memory\",\n        \"Visualizing data using t-sne\",\n        \"Principal-components analysis and exploratory and confirmatory factor analysis.\",\n        \"Multitask learning and benchmarking with clinical time series data\",\n        \"Mimic-iii, a freely accessible critical care database\",\n        \"Learning to diagnose with lstm recurrent neural networks\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Towards Generating Real-World Time Series Data, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}