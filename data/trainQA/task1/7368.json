{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Structured Pruning Adapters\n\nPaper Abstract: Abstract Adapters are a parameter-efficient alternative to fine-tuning, which augment a frozen base network to learn new tasks. Yet, the inference of the adapted model is often slower than the corresponding fine-tuned model. To improve on this, we propose Structured Pruning Adapters (SPAs), a family of compressing, task-switching network adapters, that accelerate and specialize networks using tiny parameter sets and structured pruning. Specifically, we propose a channel-based SPA and evaluate it with a suite of pruning methods on multiple computer vision benchmarks. Compared to regular structured pruning with fine-tuning, our channel-SPAs improve accuracy by 6.9%percent\\% on average while using half the parameters at 90% pruned weights. Alternatively, they can learn adaptations with 17×\\times fewer parameters at 70% pruning with 1.6%percent\\% lower accuracy. Our experimental code and Python library of adapters are available at github.com/lukashedegaard/structured-pruning-adapters.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On pixel-wise explanations for non-linear classifier decisions by layer-wise relevance propagation\",\n        \"Asirra: A captcha that exploits interest-aligned manual image categorization\",\n        \"X3d: Expanding architectures for efficient video recognition\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Knowledge distillation: A survey\",\n        \"Quantization\",\n        \"Gpu kernels for block-sparse weights\",\n        \"Compressing by learning in a low-rank and sparse decomposition form\",\n        \"Learning both weights and connections for efficient neural networks\",\n        \"Second order derivatives for network pruning: Optimal brain surgeon\",\n        \"Towards a unified view of parameter-efficient transfer learning\",\n        \"Continual 3d convolutional neural networks for real-time processing of videos\",\n        \"DatasetOps\",\n        \"Continual Transformers: Redundancy-free attention for online inference\",\n        \"Distilling the knowledge in a neural network\",\n        \"Training compute-optimal large language models\",\n        \"Parameter-efficient transfer learning for NLP\",\n        \"LoRA: Low-rank adaptation of large language models\",\n        \"Learning multiple layers of features from tiny images\",\n        \"One weird trick for parallelizing convolutional neural networks\",\n        \"Block pruning for faster transformers\",\n        \"Optimal brain damage\",\n        \"Pruning filters for efficient convnets\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Pruning and quantization for deep neural network acceleration: A survey\",\n        \"Channel pruning based on mean gradient for accelerating convolutional neural networks\",\n        \"Compacter: Efficient low-rank hypercomplex adapter layers\",\n        \"Piggyback: Adapting a single network to multiple tasks by learning to mask weights\",\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Pruning convolutional neural networks for resource efficient inference\",\n        \"Layer-Wise Relevance Propagation: An Overview\",\n        \"Automated flower classification over a large number of classes\",\n        \"SOSP: Efficiently capturing global correlations by second-order structured pruning\",\n        \"AdapterFusion: Non-destructive task composition for transfer learning\",\n        \"What’s hidden in a randomly weighted neural network?\",\n        \"Learning multiple visual domains with residual adapters\",\n        \"Efficient parametrization of multi-domain deep neural networks\",\n        \"AdapterDrop: On the efficiency of adapters in transformers\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Movement pruning: Adaptive sparsity by fine-tuning\",\n        \"BERT and PALs: Projected attention layers for efficient adaptation in multi-task learning\",\n        \"meProp: Sparsified back propagation for accelerated deep learning with reduced overfitting\",\n        \"EfficientNet: Rethinking model scaling for convolutional neural networks\",\n        \"Improving efficiency in convolutional neural network with multilinear filters\",\n        \"Pruning by explaining: A novel criterion for deep neural network pruning\",\n        \"To prune, or not to prune: Exploring the efficacy of pruning for model compression\",\n        \"Counter-interference adapter for multilingual machine translation\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Structured Pruning Adapters, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}