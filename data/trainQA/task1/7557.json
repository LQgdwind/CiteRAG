{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 INTRODUCTION\n\nPaper Abstract: Abstract Many machine learning problems encode their data as a matrix with a possibly very large number of rows and columns. In several applications like neuroscience, image compression or deep reinforcement learning, the principal subspace of such a matrix provides a useful, low-dimensional representation of individual data. Here, we are interested in determining the dùëëd-dimensional principal subspace of a given matrix from sample entries, i.e. from small random submatrices. Although a number of sample-based methods exist for this problem (e.g. Oja‚Äôs rule (Oja, 1982)), these assume access to full columns of the matrix or particular matrix structure such as symmetry and cannot be combined as-is with neural networks (Baldi and Hornik, 1989). In this paper, we derive an algorithm that learns a principal subspace from sample entries, can be applied when the approximate subspace is represented by a neural network, and hence can be scaled to datasets with an effectively infinite number of rows and columns. Our method consists in defining a loss function whose minimizer is the desired principal subspace, and constructing a gradient estimate of this loss whose bias can be controlled. We complement our theoretical analysis with a series of experiments on synthetic matrices, the MNIST dataset (LeCun, 1998) and the reinforcement learning domain PuddleWorld (Sutton, 1995) demonstrating the usefulness of our approach.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Second-order stochastic optimization in linear time\",\n        \"An implicit form of krasulina‚Äôs k-PCA update without the orthonormality constraint\",\n        \"Neural networks and principal component analysis: Learning from examples without local minima\",\n        \"On the equivalence of oja‚Äôs algorithm and grouse\",\n        \"Online identification and tracking of subspaces from highly incomplete information\",\n        \"Low-rank feature selection for reinforcement learning\",\n        \"A geometric perspective on optimal representations for reinforcement learning\",\n        \"Learning successor states and goal-dependent values: A mathematical viewpoint\",\n        \"Jax: composable transformations of python+ numpy programs\",\n        \"The value-improvement path: Towards better representations for reinforcement learning\",\n        \"Set: An algorithm for consistent matrix completion\",\n        \"The theory of max-min and its application to weapons allocation problems, volume 5\",\n        \"Improving generalization for temporal difference learning: The successor representation\",\n        \"Global convergence of stochastic gradient descent for some non-convex matrix problems\",\n        \"Neuralef: Deconstructing kernels by deep neural networks\",\n        \"Escaping from saddle points‚Äîonline stochastic gradient for tensor decomposition\",\n        \"DeepMDP: Learning continuous latent space models for representation learning\",\n        \"EigenGame: Pca as a nash equilibrium\",\n        \"EigenGame unloaded: When playing games is better than optimizing\",\n        \"Understanding alternating minimization for matrix completion\",\n        \"Array programming with numpy\",\n        \"Matplotlib: A 2d graphics environment\",\n        \"Low-rank matrix completion using alternating minimization\",\n        \"Provable efficient online matrix completion via non-convex stochastic gradient descent\",\n        \"Scipy: Open source scientific tools for python\",\n        \"A gradient descent algorithm on the grassman manifold for matrix completion\",\n        \"Matrix completion from a few entries\",\n        \"Adam: A method for stochastic optimization\",\n        \"Method of stochastic approximation in the determination of the largest eigenvalue of the mathematical expectation of random matrices\",\n        \"The mnist database of handwritten digits\",\n        \"Symmetry, saddle points, and global optimization landscape of nonconvex matrix factorization\",\n        \"On the effect of auxiliary tasks on representation dynamics\",\n        \"Eigenoption discovery through the deep successor representation\",\n        \"Proto-value functions: A laplacian framework for learning representation and control in markov decision processes\",\n        \"Simplified neuron model as a principal component analyzer\",\n        \"A guide to NumPy, volume 1\",\n        \"Python for scientific computing\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Spectral inference networks: Unifying deep and spectral learning\",\n        \"Weighted low-rank approximations\",\n        \"Guaranteed matrix completion via non-convex factorization\",\n        \"Generalization in reinforcement learning: Successful examples using sparse coarse coding\",\n        \"Exponentially convergent stochastic k-pca without variance reduction\",\n        \"Python reference manual\",\n        \"The numpy array: a structure for efficient numerical computation\",\n        \"Slow feature analysis: Unsupervised learning of invariances\",\n        \"Global convergence of gradient descent for asymmetric low-rank matrix factorization\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in 1 INTRODUCTION, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}