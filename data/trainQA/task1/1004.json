{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Full complexity classification of the list homomorphism problem for bounded-treewidth graphs The first author was supported by the ERC Starting Grant CUTACOMBS (grant agreement No. 714704). The second and the third author were supported by the Polish National Science Centre grant no. 2018/31/D/ST6/00062.\n\nPaper Abstract: A homomorphism from a graph G𝐺G to a graph H𝐻H is an edge-preserving mapping from V​(G)𝑉𝐺V(G) to V​(H)𝑉𝐻V(H). Let H𝐻H be a fixed graph with possible loops. In the list homomorphism problem, denoted by LHom(H𝐻H), we are given a graph G𝐺G, whose every vertex v𝑣v is assigned with a list L​(v)𝐿𝑣L(v) of vertices of H𝐻H. We ask whether there exists a homomorphism hℎh from G𝐺G to H𝐻H, which respects lists L𝐿L, i.e., for every v∈V​(G)𝑣𝑉𝐺v\\in V(G) it holds that h​(v)∈L​(v)ℎ𝑣𝐿𝑣h(v)\\in L(v). The complexity dichotomy for LHom(H𝐻H) was proven by Feder, Hell, and Huang [JGT 2003]. The authors showed that the problem is polynomial-time solvable if H𝐻H belongs to the class called bi-arc graphs, and for all other graphs H𝐻H it is NP-complete. We are interested in the complexity of the LHom(H𝐻H) problem, parameterized by the treewidth of the input graph. This problem was investigated by Egri, Marx, and Rzążewski [STACS 2018], who obtained tight complexity bounds for the special case of reflexive graphs H𝐻H, i.e., if every vertex has a loop. In this paper we extend and generalize their results for all relevant graphs H𝐻H, i.e., those, for which the LHom(H𝐻H) problem is NP-hard. For every such H𝐻H we find a constant k=k​(H)𝑘𝑘𝐻k=k(H), such that the LHom(H𝐻H) problem on instances with n𝑛n vertices and treewidth t𝑡t • can be solved in time kt⋅n𝒪​(1)⋅superscript𝑘𝑡superscript𝑛𝒪1k^{t}\\cdot n^{\\mathcal{O}(1)}, provided that the input graph is given along with a tree decomposition of width t𝑡t, • cannot be solved in time (k−ε)t⋅n𝒪​(1)⋅superscript𝑘𝜀𝑡superscript𝑛𝒪1(k-\\varepsilon)^{t}\\cdot n^{\\mathcal{O}(1)}, for any ε>0𝜀0\\varepsilon>0, unless the SETH fails. For some graphs H𝐻H the value of k​(H)𝑘𝐻k(H) is much smaller than the trivial upper bound, i.e., |V​(H)|𝑉𝐻|V(H)|. Obtaining matching upper and lower bounds shows that the set of algorithmic tools we have discovered cannot be extended in order to obtain faster algorithms for LHom(H𝐻H) in bounded-treewidth graphs. Furthermore, neither the algorithm, nor the proof of the lower bound, is very specific to treewidth. We believe that they can be used for other variants of the LHom(H𝐻H) problem, e.g. with different parameterizations.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Probabilistic Method, Third Edition\",\n        \"Complexity of finding embeddings in a k𝑘k-tree\",\n        \"Linear time algorithms for NP-hard problems restricted to partial k𝑘k-trees\",\n        \"Set partitioning via inclusion-exclusion\",\n        \"A linear-time algorithm for finding tree-decompositions of small treewidth\",\n        \"The fine details of fast dynamic programming over tree decompositions\",\n        \"Deterministic single exponential time algorithms for connectivity problems parameterized by treewidth\",\n        \"A ck​nsuperscript𝑐𝑘𝑛c^{k}n 5-approximation algorithm for treewidth\",\n        \"Combinatorial optimization on graphs of bounded treewidth\",\n        \"The diameter of random graphs\",\n        \"H𝐻H-coloring dichotomy revisited\",\n        \"Constraint satisfaction problems: Complexity and algorithms\",\n        \"List H-coloring a graph by removing few vertices\",\n        \"The monadic second-order logic of graphs. I. Recognizable sets of finite graphs\",\n        \"Tight lower bounds on graph embedding problems\",\n        \"Parameterized algorithms\",\n        \"The complexity of the list homomorphism problem for graphs\",\n        \"Finding list homomorphisms from bounded-treewidth graphs to reflexive graphs: a complete complexity characterization\",\n        \"List homomorphisms to reflexive graphs\",\n        \"List homomorphisms and circular arc graphs\",\n        \"Bi-arc graphs and the complexity of list homomorphisms\",\n        \"Cantor-Bernstein type theorem for locally constrained graph homomorphisms\",\n        \"A complete complexity classification of the role assignment problem\",\n        \"Matrix and graph orders derived from locally constrained graph homomorphisms\",\n        \"Exact algorithms for graph homomorphisms\",\n        \"The complexity of first-order and monadic second-order logic revisited\",\n        \"Computers and Intractability: A Guide to the Theory of NP-Completeness\",\n        \"Handbook of product graphs\",\n        \"Two remarks on circular arc graphs\",\n        \"Graphs and homomorphisms\",\n        \"On the complexity of H𝐻H-coloring\",\n        \"On the complexity of k𝑘k-SAT\",\n        \"Which problems have strongly exponential complexity?\",\n        \"personal communication\",\n        \"Computing the chromatic number using graph decompositions via matrix rank\",\n        \"Deleting vertices to graphs of bounded genus\",\n        \"Optimality and tight results in parameterized complexity (dagstuhl seminar 14451)\",\n        \"Known algorithms on graphs of bounded treewidth are probably optimal\",\n        \"Almost all (0,1)01(0,1) matrices are primitive\",\n        \"Subexponential algorithms for variants of the homomorphism problem in string graphs\",\n        \"Fine-grained complexity of graph homomorphism problem for bounded-treewidth graphs\",\n        \"Problems parameterized by treewidth tractable in single exponential time: A logical approach\",\n        \"Exact algorithm for graph homomorphism and locally injective graph homomorphism\",\n        \"A new proof of the H𝐻H-coloring dichotomy\",\n        \"Circular-arc graphs with clique cover number two\",\n        \"Characterization problems for graphs, partially ordered sets, lattices, and families of sets\",\n        \"Dynamic programming on tree decompositions using generalised fast subset convolution\",\n        \"New plain-exponential time classes for graph homomorphism\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Full complexity classification of the list homomorphism problem for bounded-treewidth graphs The first author was supported by the ERC Starting Grant CUTACOMBS (grant agreement No. 714704). The second and the third author were supported by the Polish National Science Centre grant no. 2018/31/D/ST6/00062., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}