{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 INTRODUCTION\n\nPaper Abstract: Abstract A popular method for Neural Architecture Search (NAS) is based on growing networks via small local changes to the network’s architecture called network morphisms. These methods start with a small seed network and progressively grow the network by adding new neurons in an automated way. However, it remains a challenge to efficiently determine which parts of the network are best to grow. Here we propose a NAS method for growing a network by using a Gauss-Newton approximation of the loss function to efficiently learn and evaluate candidate network morphisms. We compare our method with state of the art NAS methods for CIFAR-10 and CIFAR-100 classification tasks, and conclude our method learns similar quality or better architectures at a smaller computational cost.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Smash: one-shot model architecture search through hypernetworks\",\n        \"Efficient architecture search by network transformation\",\n        \"Net2net: Accelerating learning via knowledge transfer\",\n        \"Xception: Deep learning with depthwise separable convolutions\",\n        \"Simple and efficient architecture search for convolutional neural networks\",\n        \"Efficient multi-objective neural architecture search via lamarckian evolution\",\n        \"Neural architecture search: A survey\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Autogan: Neural architecture search for generative adversarial networks\",\n        \"Morphnet: Fast & simple resource-constrained structure learning of deep networks\",\n        \"Deep pyramidal residual networks\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Deep residual learning for image recognition\",\n        \"Searching for mobilenetv3\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Squeeze-and-excitation networks\",\n        \"Densely connected convolutional networks\",\n        \"Deep networks with stochastic depth\",\n        \"Squeezenet: Alexnet-level accuracy with 50x fewer parameters and¡ 0.5 mb model size\",\n        \"Auto-keras: Efficient neural architecture search with network morphism\",\n        \"Progressive growing of gans for improved quality, stability, and variation\",\n        \"Learning curve prediction with bayesian neural networks\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Optimal brain damage\",\n        \"Progressive neural architecture search\",\n        \"Darts: Differentiable architecture search\",\n        \"Splitting steepest descent for growing neural architectures\",\n        \"Learning efficient convolutional networks through network slimming\",\n        \"Rethinking the value of network pruning\",\n        \"Neural architecture optimization\",\n        \"Deeparchitect: Automatically designing and training deep architectures\",\n        \"Fast neural architecture search of compact semantic segmentation models via auxiliary cells\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Large-scale evolution of image classifiers\",\n        \"Progressive neural networks\",\n        \"Differentiable neural network architecture search\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Attention is all you need\",\n        \"Energy-aware neural architecture optimization with fast splitting steepest descent\",\n        \"Transfer learning with neural automl\",\n        \"Firefly neural architecture descent: a general approach for growing neural networks\",\n        \"Steepest descent neural architecture optimization: Escaping local optimum with signed neural splitting\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\",\n        \"Practical block-wise neural network architecture generation\",\n        \"Learning transferable architectures for scalable image recognition\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in 1 INTRODUCTION, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}