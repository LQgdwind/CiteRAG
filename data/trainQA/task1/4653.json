{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FAST: DNN Training Under Variable Precision Block Floating Point with Stochastic Rounding\n\nPaper Abstract: Abstract Block Floating Point (BFP) can efficiently support quantization for Deep Neural Network (DNN) training by providing a wide dynamic range via a shared exponent across a group of values. In this paper, we propose a Fast First, Accurate Second Training (FAST) system for DNNs, where the weights, activations, and gradients are represented in BFP. FAST supports matrix multiplication with variable precision BFP input operands, enabling incremental increases in DNN precision throughout training. By increasing the BFP precision across both training iterations and DNN layers, FAST can greatly shorten the training time while reducing overall hardware resource usage. Our FAST Multipler-Accumulator (fMAC) supports dot product computations under multiple BFP precisions. We validate our FAST system on multiple DNNs with different datasets, demonstrating a 2-6Ã—\\times speedup in training on a single-chip platform over prior work based on mixed-precision or block floating point number systems while achieving similar performance in validation accuracy.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Iwslt2014 benchmark\",\n        \"Pytorch official implementation for imagenet\",\n        \"Tesla dojo technology\",\n        \"Cacti: An integrated cache and memory access time, cycle time, area, leakage, and dynamic power model\",\n        \"Design compiler: Rtl synthesis\",\n        \"Nangate freepdk45 open cell library\",\n        \"Scalable methods for 8-bit training of neural networks\",\n        \"Bit-slicing fpga accelerator for quantized neural networks\",\n        \"Single-event effects in digital cmos circuits operating at ultra-low power\",\n        \"Neural gradients are near-lognormal: improved quantized and sparse training\",\n        \"An energy-efficient deep convolutional neural network training accelerator for in situ personalization on smart devices\",\n        \"Dawnbench: An end-to-end deep learning benchmark and competition\",\n        \"Training deep neural networks with low precision multiplications\",\n        \"Binaryconnect: Training deep neural networks with binary weights during propagations\",\n        \"Pushing the limits of narrow precision inferencing at cloud scale with microsoft floating point\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Training dnns with hybrid block floating point\",\n        \"The pascal visual object classes challenge 2012 (voc2012) development kit\",\n        \"A scalable multi- teraops deep learning processor core for ai trainina and inference\",\n        \"A configurable cloud-scale dnn processor for real-time ai\",\n        \"Bfloat16: The secret to high performance on cloud tpus\",\n        \"Deep learning with limited numerical precision\",\n        \"Quantized neural networks: Training neural networks with low precision weights and activations\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference\",\n        \"A domain-specific supercomputer for training deep neural networks\",\n        \"Stripes: Bit-serial deep neural network computing\",\n        \"Low precision rnns: Quantizing rnns without losing accuracy\",\n        \"Adam: A method for stochastic optimization\",\n        \"Flexpoint: An adaptive numerical format for efficient training of deep neural networks\",\n        \"Why systolic architectures?\",\n        \"Packing sparse convolutional neural networks for efficient systolic array implementations: Column combining under joint optimization\",\n        \"7.7 lnpu: A 25.3 tflops/w sparse deep-neural-network learning processor with fine-grained mixed precision of fp8-fp16\",\n        \"Tensordash: Exploiting sparsity to accelerate deep neural network training\",\n        \"Mixed precision training\",\n        \"Adding gradient noise improves learning for very deep networks\",\n        \"Accelerating ai training with nvidia tf32 tensor cores\",\n        \"A 3.0 tflops 0.62v scalable processor core for high compute utilization ai training and inference\",\n        \"Weighted-entropy-based quantization for deep neural networks\",\n        \"Design alternatives for barrel shifters\",\n        \"Sigma: A sparse and irregular gemm accelerator with flexible interconnects for dnn training\",\n        \"Yolo9000: better, faster, stronger\",\n        \"Hybrid 8-bit floating point (hfp8) training and inference for deep neural networks\",\n        \"Rounding Errors in Algebraic Processes\",\n        \"Procrustes: a dataflow and accelerator for sparse deep neural network training\",\n        \"Eager pruning: algorithm and architecture support for fast training of deep neural networks\",\n        \"Trained ternary quantization\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in FAST: DNN Training Under Variable Precision Block Floating Point with Stochastic Rounding, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}