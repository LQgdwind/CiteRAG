{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graphtester: Exploring Theoretical Boundaries of GNNs on Graph Datasets\n\nPaper Abstract: Abstract Graph Neural Networks (GNNs) have emerged as a powerful tool for learning from graph-structured data. However, even state-of-the-art architectures have limitations on what structures they can distinguish, imposing theoretical limits on what the networks can achieve on different datasets. In this paper, we provide a new tool called graphtester for comprehensive analysis of the theoretical capabilities of GNNs for various datasets, tasks, and scores. We use graphtester to analyze over 40 different graph datasets, determining upper bounds on the performance of various GNNs based on the number of layers. Further, we show that the tool can also be used for Graph Transformers using positional node encodings, thereby expanding its scope. Finally, we demonstrate that features generated by Graphtester can be used for practical applications such as Graph Transformers, and provide a synthetic dataset to benchmark node and edge features, such as positional encodings. The package is freely available at the following URL: https://github.com/meakbiyik/graphtester.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spatial networks\",\n        \"Improving graph neural network expressivity via subgraph isomorphism counting\",\n        \"A faster algorithm for betweenness centrality\",\n        \"Geometric deep learning: going beyond euclidean data\",\n        \"Strongly Regular Graphs\",\n        \"An optimal lower bound on the number of variables for graph identification\",\n        \"Can graph neural networks count substructures?\",\n        \"The igraph software package for complex network research\",\n        \"Distinguishing enzyme structures from non-enzymes without alignments\",\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"A generalization of transformer networks to graphs\",\n        \"Benchmarking graph neural networks\",\n        \"Graph neural networks with learnable structural and positional representations\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Betweenness-selfcentric graphs\",\n        \"Exploring network structure, dynamics, and function using networkx\",\n        \"Inductive representation learning on large graphs\",\n        \"Strategies for pre-training graph neural networks\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Describing Graphs: A First-Order Approach to Graph Canonization\",\n        \"Engineering an efficient canonical labeling tool for large and sparse graphs\",\n        \"Power and limits of the Weisfeiler-Leman algorithm\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Rethinking graph transformers with spectral attention\",\n        \"Adaptive embedding dimension selection in graph neural networks\",\n        \"Provably powerful graph networks\",\n        \"Image-based recommendations on styles and substitutes\",\n        \"Practical graph isomorphism, ii\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"Tudataset: A collection of benchmark datasets for learning with graphs\",\n        \"Query-driven active surveying for collective classification\",\n        \"The structure and function of complex networks\",\n        \"A theoretical comparison of graph neural network extensions\",\n        \"Recipe for a general, powerful, scalable graph transformer\",\n        \"Discriminating power of centrality measures\",\n        \"The graph neural network model\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Collective classification in network data\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"Message passing with poincar√© embeddings and hyperbolic graph attention networks\",\n        \"Attention is all you need\",\n        \"Graph attention networks\",\n        \"Deep graph library: A graph-centric, highly-performant package for graph neural networks\",\n        \"Nodeformer: A scalable graph structure learning transformer for node classification\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Representing long-range context for graph neural networks with global attention\",\n        \"How powerful are graph neural networks?\",\n        \"Do transformers really perform badly for graph representation?\",\n        \"Graphgps: Graph generative pre-training with semantic preserving\",\n        \"1-wl expressiveness is (almost) all you need\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Graphtester: Exploring Theoretical Boundaries of GNNs on Graph Datasets, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}