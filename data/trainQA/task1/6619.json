{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: More Interpretable Graph Similarity Computation via Maximum Common Subgraph Inference\n\nPaper Abstract: Abstract Graph similarity measurement, which computes the distance/similarity between two graphs, arises in various graph-related tasks. Recent learning-based methods lack interpretability, as they directly transform interaction information between two graphs into one hidden vector and then map it to similarity. To cope with this problem, this study proposes a more interpretable end-to-end paradigm for graph similarity learning, named Similarity Computation via Maximum Common Subgraph Inference (INFMCS). Our critical insight into INFMCS is the strong correlation between similarity score and Maximum Common Subgraph (MCS). We implicitly infer MCS to obtain the normalized MCS size, with the supervision information being only the similarity score during training. To capture more global information, we also stack some vanilla transformer encoder layers with graph convolution layers and propose a novel permutation-invariant node Positional Encoding. The entire model is quite simple yet effective. Comprehensive experiments demonstrate that INFMCS consistently outperforms state-of-the-art baselines for graph-graph classification and regression tasks. Ablation experiments verify the effectiveness of the proposed computation paradigm and other components. Also, visualization and statistics of results reveal the interpretability of INFMCS.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Simgnn: A neural network approach to fast graph similarity computation\",\n        \"Learning-based efficient graph similarity computation via multi-scale convolutional set matching\",\n        \"On the exact computation of the graph edit distance\",\n        \"The use of the area under the roc curve in the evaluation of machine learning algorithms\",\n        \"What is the distance between graphs\",\n        \"A graph distance metric based on the maximal common subgraph\",\n        \"Interpretable graph similarity computation via differentiable optimal alignment of node embeddings\",\n        \"Speeding up graph edit distance computation through fast bipartite matching\",\n        \"Approximation of graph edit distance based on hausdorff matching\",\n        \"Interpreting recurrent and attention-based neural models: a case study on natural language inference\",\n        \"The predictive toxicology challenge 2000â€“2001\",\n        \"Ogb-lsc: A large-scale challenge for machine learning on graphs\",\n        \"Measuring preferential attachment in evolving networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Distance metric learning using graph convolutional networks: Application to functional brain networks\",\n        \"Aednet: Adaptive edge-deleting network for subgraph matching\",\n        \"Sub-gmn: The subgraph matching network model\",\n        \"Graph matching networks for learning the similarity of graph structured objects\",\n        \"A structured self-attentive sentence embedding\",\n        \"Multilevel graph matching networks for deep graph similarity learning\",\n        \"Learning structured text representations\",\n        \"Effective approaches to attention-based neural machine translation\",\n        \"Deep graph similarity learning for brain data analysis\",\n        \"Global-aware beam search for neural abstractive summarization\",\n        \"A partitioning algorithm for maximum common subgraph problems\",\n        \"Fast suboptimal algorithms for the computation of graph edit distance\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Learning graph distances with message passing neural networks\",\n        \"Iam graph database repository for graph based pattern recognition and machine learning\",\n        \"Approximate graph edit distance computation by means of bipartite graph matching\",\n        \"A novel software toolkit for graph edit distance computation\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"The proof and measurement of association between two things\",\n        \"Attention interpretability across nlp tasks\",\n        \"Attention is all you need\",\n        \"Deep graph library: A graph-centric, highly-performant package for graph neural networks\",\n        \"Heterogeneous graph matching networks\",\n        \"An efficient graph indexing method\",\n        \"Attention-based lstm for aspect-level sentiment classification\",\n        \"Social network analysis: Methods and applications\",\n        \"Graph partitioning and graph neural network based hierarchical graph matching for graph similarity computation\",\n        \"gspan: Graph-based substructure pattern mining\",\n        \"Do transformers really perform badly for graph representation?\",\n        \"Comparing stars: On approximating graph edit distance\",\n        \"H2mn: Graph similarity learning with hierarchical hypergraph matching networks\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in More Interpretable Graph Similarity Computation via Maximum Common Subgraph Inference, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}