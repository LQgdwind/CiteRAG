{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Overhead-free User-side Recommender Systems\n\nPaper Abstract: Abstract. Traditionally, recommendation algorithms have been designed for service developers. But recently, a new paradigm called user-side recommender systems has been proposed. User-side recommender systems are built and used by end users, in sharp contrast to traditional provider-side recommender systems. Even if the official recommender system offered by the provider is not fair, end users can create and enjoy their own user-side recommender systems by themselves. Although the concept of user-side recommender systems is attractive, the problem is they require tremendous communication costs between the user and the official system. Even the most efficient user-side recommender systems require about 5×5\\times more costs than provider-side recommender systems. Such high costs hinder the adoption of user-side recommender systems. In this paper, we propose overhead-free user-side recommender systems, RecCycle, which realizes user-side recommender systems without any communication overhead. The main idea of RecCycle is to recycle past recommendation results offered by the provider’s recommender systems. The ingredients of RecCycle can be retrieved “for free,” and it greatly reduces the cost of user-side recommendations. In the experiments, we confirm that RecCycle performs as well as state-of-the-art user-side recommendation algorithms while RecCycle reduces costs significantly.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Algorithmic effects on the diversity of consumption on spotify\",\n        \"Transparent, scrutable and explainable user models for personalized recommendation\",\n        \"Fairness in recommendation ranking through pairwise comparisons\",\n        \"Equity of attention: Amortizing individual fairness in rankings\",\n        \"Multisided fairness for recommendation\",\n        \"Topology of music recommendation networks\",\n        \"A new approach to evaluating novel recommendations\",\n        \"Values of user exploration in recommender systems\",\n        \"Exploring author gender in book rating and recommendation\",\n        \"Fairness-aware explainable recommendation over knowledge graphs\",\n        \"Building representative talent search at LinkedIn, 2018\",\n        \"Fairness-aware ranking in search & recommendation systems with application to linkedin talent search\",\n        \"Generating transparent, steerable recommendations from textual descriptions of items\",\n        \"Equality of opportunity in supervised learning\",\n        \"The movielens datasets: History and context\",\n        \"Ups and downs: Modeling the visual evolution of fashion trends with one-class collaborative filtering\",\n        \"Neural collaborative filtering\",\n        \"Enhancement of the neutrality in recommendation\",\n        \"Fairness-aware classifier with prejudice remover regularizer\",\n        \"On sampled metrics for item recommendation\",\n        \"Amazon. com recommendations: Item-to-item collaborative filtering\",\n        \"Personalized fairness-aware re-ranking for microlending\",\n        \"How retailers can keep up with consumers, 2013\",\n        \"Image-based recommendations on styles and substitutes\",\n        \"Towards a fair marketplace: Counterfactual evaluation of the trade-off between relevance, fairness & satisfaction in recommendation systems\",\n        \"Recommender systems and their ethical challenges\",\n        \"Optimizing long-term social welfare in recommender systems: A constrained matching approach\",\n        \"Big data: A report on algorithmic systems, opportunity, and civil rights\",\n        \"The filter bubble: What the Internet is hiding from you\",\n        \"Big data: Seizing opportunities, preserving values\",\n        \"BPR: bayesian personalized ranking from implicit feedback\",\n        \"Clear: A fully user-side image search system\",\n        \"Private recommender systems: How can users build their own fair recommender systems without log data?\",\n        \"Retrieving black-box optimal images from external databases\",\n        \"Towards principled user-side recommender systems\",\n        \"Making translators privacy-aware on the user’s side\",\n        \"User-side realization\",\n        \"Embarrassingly simple text watermarks\",\n        \"On the limitations of browsing top-n recommender systems\",\n        \"Fairness of exposure in rankings\",\n        \"The role of transparency in recommender systems\",\n        \"Calibrated recommendations\",\n        \"A survey of explanations in recommender systems\",\n        \"Beyond personalization: Social content recommendation for creator equality and consumer satisfaction\",\n        \"Algorithmic decision making with conditional fairness\",\n        \"Beyond parity: Fairness objectives for collaborative filtering\",\n        \"Fairness beyond disparate treatment & disparate impact: Learning classification without disparate mistreatment\",\n        \"FA*IR: A fair top-k ranking algorithm\",\n        \"Fairness in reciprocal recommendations: A speed-dating study\",\n        \"Improving recommendation lists through topic diversification\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Overhead-free User-side Recommender Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}