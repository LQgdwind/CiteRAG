{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Improving the Leading Constant of Matrix Multiplication\n\nPaper Abstract: Abstract Algebraic matrix multiplication algorithms are designed by bounding the rank of matrix multiplication tensors, and then using a recursive method. However, designing algorithms in this way quickly leads to large constant factors: if one proves that the tensor for multiplying n×n𝑛𝑛n\\times n matrices has rank ≤tabsent𝑡\\leq t, then the resulting recurrence shows that M×M𝑀𝑀M\\times M matrices can be multiplied using O​(n2⋅Mlogn⁡t)𝑂⋅superscript𝑛2superscript𝑀subscript𝑛𝑡O(n^{2}\\cdot M^{\\log_{n}t}) operations, where the leading constant scales proportionally to n2superscript𝑛2n^{2}. Even modest increases in n𝑛n can blow up the leading constant too much to be worth the slight decrease in the exponent of M𝑀M. Meanwhile, the asymptotically best algorithms use very large n𝑛n, such that n2superscript𝑛2n^{2} is larger than the number of atoms in the visible universe! In this paper, we give new ways to use tensor rank bounds to design matrix multiplication algorithms, which lead to smaller leading constants than the standard recursive method. Our main result shows that, if the tensor for multiplying n×n𝑛𝑛n\\times n matrices has rank ≤tabsent𝑡\\leq t, then M×M𝑀𝑀M\\times M matrices can be multiplied using only nO​(1/(log⁡n)0.33)⋅Mlogn⁡t⋅superscript𝑛𝑂1superscript𝑛0.33superscript𝑀subscript𝑛𝑡n^{O(1/(\\log n)^{0.33})}\\cdot M^{\\log_{n}t} operations. In other words, we improve the leading constant in general from O​(n2)𝑂superscript𝑛2O(n^{2}) to nO​(1/(log⁡n)0.33)<no​(1)superscript𝑛𝑂1superscript𝑛0.33superscript𝑛𝑜1n^{O(1/(\\log n)^{0.33})}<n^{o(1)}. We then apply this and further improve the leading constant in a number of situations of interest. We show that, in the popularly-conjectured case where ω=2𝜔2\\omega=2, a new, different recursive approach can lead to an improvement. We also show that the leading constant of the current asymptotically fastest matrix multiplication algorithm, and any algorithm designed using the group-theoretic method, can be further improved by taking advantage of additional structure of the underlying tensor identities. Our algorithms use new ways to manipulate linear transforms defined by Kronecker powers of matrices, as well as a new algorithm for very rectangular matrix multiplication. In many cases, we entirely avoid applying a large tensor rank identity by instead manipulating it implicitly or decomposing it into smaller, more manageable tensors.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Polynomial representations of threshold functions and algorithmic applications\",\n        \"Faster deterministic and las vegas algorithms for offline approximate nearest neighbors in high dimensions\",\n        \"More asymmetry yields faster matrix multiplication\",\n        \"Smaller low-depth circuits for kronecker powers\",\n        \"Kronecker products, low-depth circuits, and matrix rigidity\",\n        \"Faster walsh-hadamard and discrete fourier transforms from matrix non-rigidity\",\n        \"Probabilistic polynomials and hamming nearest neighbors\",\n        \"A refined laser method and faster matrix multiplication\",\n        \"Limits on all known (and some unknown) approaches to matrix multiplication\",\n        \"More applications of the polynomial method to algorithm design\",\n        \"On sets of integers which contain no three terms in arithmetical progression\",\n        \"Relations between exact and approximate bilinear algorithms. applications\",\n        \"On the complexity of the multiplication of matrices of small formats\",\n        \"Fast Matrix Multiplication\",\n        \"The complexity of partial derivatives\",\n        \"Faster matrix multiplication via sparse decomposition\",\n        \"On the arithmetic complexity of strassen-like matrix multiplications\",\n        \"Group-theoretic algorithms for matrix multiplication\",\n        \"Rectangular matrix multiplication revisited\",\n        \"A group-theoretic approach to fast matrix multiplication\",\n        \"On the asymptotic complexity of matrix multiplication\",\n        \"Matrix multiplication via arithmetic progressions\",\n        \"Deterministic apsp, orthogonal vectors, and more: Quickly derandomizing razborov-smolensky\",\n        \"Improved bound for complexity of matrix multiplication\",\n        \"Faster matrix multiplication via asymmetric hashing\",\n        \"An improved construction of progression-free sets\",\n        \"Matrix multiplication i\",\n        \"Faster rectangular matrix multiplication by combination loss analysis\",\n        \"Improved rectangular matrix multiplication using powers of the coppersmith-winograd tensor\",\n        \"On minimizing the number of multiplications necessary for matrix multiplication\",\n        \"Fast rectangular matrix multiplication and applications\",\n        \"Towards practical fast matrix multiplication based on trilinear aggregation\",\n        \"Strassen’s algorithm reloaded\",\n        \"Addition requirements for matrix and transposed matrix products\",\n        \"Strong bounds for 3-progressions\",\n        \"Matrix multiplication, a little faster\",\n        \"New lower bounds for the rank of matrix multiplication\",\n        \"Powers of tensors and fast matrix multiplication\",\n        \"On rectifier and switching-and-rectifier schemes\",\n        \"The rank of n×\\\\times n matrix multiplication is at least 3n2-22n32-3n\",\n        \"Strassen’s algorithm is not optimal. trilinear technique of aggregating for fast matrix multiplication\",\n        \"Partial and total matrix multiplication\",\n        \"Yet another catalogue of fast matrix multiplication algorithms\",\n        \"Notes on the complexity of coverings for kronecker powers of symmetric matrices\",\n        \"Counterexamples to Strassen’s direct sum conjecture\",\n        \"The bilinear complexity and practical algorithms for matrix multiplication\",\n        \"Gaussian elimination is not optimal\",\n        \"Vermeidung von divisionen\",\n        \"Fast generalized dfts for all finite groups\",\n        \"Improving exhaustive search implies superpolynomial lower bounds\",\n        \"Multiplying matrices faster than coppersmith-winograd\",\n        \"Faster all-pairs shortest paths via circuit complexity\",\n        \"Nonuniform acc circuit lower bounds\",\n        \"On multiplication of 2 × 2 matrices\",\n        \"New bounds for matrix multiplication: from alpha to omega\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Improving the Leading Constant of Matrix Multiplication, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}