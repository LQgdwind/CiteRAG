{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Delay-Optimal Distributed Edge Computing in Wireless Edge Networks\n\nPaper Abstract: Abstract By integrating edge computing with parallel computing, distributed edge computing (DEC) makes use of distributed devices in edge networks to perform computing in parallel, which can substantially reduce service delays. In this paper, we explore DEC that exploits distributed edge devices connected by a wireless network to perform a computation task offloaded from an end device. In particular, we study the fundamental problem of minimizing the delay of executing a distributed algorithm of the computation task. We first establish some structural properties of the optimal communication scheduling policy. Then, given these properties, we characterize the optimal computation allocation policy, which can be found by an efficient algorithm. Next, based on the optimal computation allocation, we characterize the optimal scheduling order of communications for some special cases, and develop an efficient algorithm with a finite approximation ratio to find it for the general case. Last, based on the optimal computation allocation and communication scheduling, we further show that the optimal selection of devices can be found efficiently for some special cases. Our results provide some useful insights for the optimal computation-communication co-design. We evaluate the performance of the theoretical findings using simulations.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Google Glass\",\n        \"Oculus\",\n        \"Autonomous Flight\",\n        \"Fog and IoT: An overview of research opportunities\",\n        \"Butterfly: Mobile collaborative rendering over gpu workload migration\",\n        \"Towards efficient edge cloud augmentation for virtual reality mmogs\",\n        \"When edge meets learning: Adaptive control for resource-constrained distributed machine learning\",\n        \"An edge network orchestrator for mobile augmented reality\",\n        \"Deepdecision: A mobile deep learning framework for edge video analytics\",\n        \"Vitrack: Efficient tracking on the edge for commodity video surveillance systems\",\n        \"Efficient multi-user computation offloading for mobile-edge cloud computing\",\n        \"A hierarchical edge cloud architecture for mobile computing\",\n        \"Online job dispatching and scheduling in edge-clouds\",\n        \"Winning at the starting line: Joint network selection and service placement for mobile edge computing\",\n        \"Catalyzing cloud-fog interoperation in 5G wireless networks: An SDN approach\",\n        \"Cache in the air: exploiting content caching and delivery techniques for 5G systems\",\n        \"Distributed caching and small cell cooperation for fast content delivery\",\n        \"Exploiting base station caching in MIMO cellular networks: Opportunistic cooperation for video streaming\",\n        \"Optimal load balancing and scheduling in a distributed computer system\",\n        \"Scheduling in mapreduce-like systems for fast completion time\",\n        \"A new analytical technique for designing provably efficient mapreduce schedulers\",\n        \"Minimizing makespan and total completion time in mapreduce-like systems\",\n        \"Exploiting large system dynamics for designing simple data center schedulers\",\n        \"Scheduling jobs with non-uniform demands on multiple servers without interruption\",\n        \"Distributed computation for a tree network with communication delays\",\n        \"Coupling task progress for mapreduce resource-aware scheduling\",\n        \"Symbiosis: network-aware task scheduling in data-parallel frameworks\",\n        \"Scheduling with multi-level data locality: Throughput and heavy-traffic optimality\",\n        \"Joint scheduling of processing and shuffle phases in mapreduce systems\",\n        \"On distributed computation rate optimization for deploying cloud computing programming frameworks\",\n        \"Scheduling storms and streams in the cloud\",\n        \"A simple congestion-aware algorithm for load balancing in datacenter networks\",\n        \"Managing data transfers in computer clusters with orchestra\",\n        \"Rapier: Integrating routing and scheduling for coflow-aware data center networks\",\n        \"Efficient online coflow routing and scheduling\",\n        \"Stable scheduling policies for fading wireless channels\",\n        \"A theory of QoS for wireless\",\n        \"A distributed csma algorithm for throughput and utility maximization in wireless networks\",\n        \"A framework for opportunistic scheduling in wireless networks\",\n        \"Delay analysis and optimality of scheduling policies for multihop wireless networks\",\n        \"Stability properties of constrained queueing systems and scheduling policies for maximum throughput in multihop radio networks\",\n        \"Distributed and provably efficient algorithms for joint channel-assignment, scheduling, and routing in multichannel ad hoc wireless networks\",\n        \"Delay-guaranteed cross-layer scheduling in multihop wireless networks\",\n        \"Stochastic network utility maximisation—a tribute to kelly’s paper published in this journal a decade ago\",\n        \"OpenGL ES 2.0 programming guide\",\n        \"Scheduling\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Delay-Optimal Distributed Edge Computing in Wireless Edge Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}