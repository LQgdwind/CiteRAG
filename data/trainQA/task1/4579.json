{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: NAS-HPO-Bench-II: A Benchmark Dataset on Joint Optimization of Convolutional Neural Network Architecture and Training Hyperparameters\n\nPaper Abstract: Abstract The benchmark datasets for neural architecture search (NAS) have been developed to alleviate the computationally expensive evaluation process and ensure a fair comparison. Recent NAS benchmarks only focus on architecture optimization, although the training hyperparameters affect the obtained model performances. Building the benchmark dataset for joint optimization of architecture and training hyperparameters is essential to further NAS research. The existing NAS-HPO-Bench is a benchmark for joint optimization, but it does not consider the network connectivity design as done in modern NAS algorithms. This paper introduces the first benchmark dataset for joint optimization of network connections and training hyperparameters, which we call NAS-HPO-Bench-II. We collect the performance data of 4K cell-based convolutional neural network architectures trained on the CIFAR-10 dataset with different learning rate and batch size settings, resulting in the data of 192K configurations. The dataset includes the exact data for 12 epoch training. We further build the surrogate model predicting the accuracies after 200 epoch training to provide the performance data of longer training epoch. By analyzing NAS-HPO-Bench-II, we confirm the dependency between architecture and training hyperparameters and the necessity of joint optimization. Finally, we demonstrate the benchmarking of the baseline optimization algorithms using NAS-HPO-Bench-II.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Adaptive stochastic natural gradient method for one-shot neural architecture search\",\n        \"Designing neural network architectures using reinforcement learning\",\n        \"Random search for hyper-parameter optimization\",\n        \"Bagging predictors\",\n        \"NAS-Bench-201: Extending the scope of reproducible neural architecture search\",\n        \"NATS-Bench: Benchmarking nas algorithms for architecture topology and size\",\n        \"AutoHAS: Efficient hyperparameter and architecture search\",\n        \"TransNAS-Bench-101: Improving transferability and generalizability of cross-task neural architecture search\",\n        \"Neural architecture search: A survey\",\n        \"BOHB: Robust and efficient hyperparameter optimization at scale\",\n        \"Accurate, large minibatch SGD: Training ImageNet in 1 hour\",\n        \"Deep residual learning for image recognition\",\n        \"Long short-term memory\",\n        \"Densely connected convolutional networks\",\n        \"Automated Machine Learning: Methods, Systems, Challenges\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Neural architecture search with Bayesian optimisation and optimal transport\",\n        \"Tabular benchmarks for joint architecture and hyperparameter optimization\",\n        \"NAS-Bench-NLP: Neural architecture search benchmark for natural language processing\",\n        \"Learning multiple layers of features from tiny images\",\n        \"One weird trick for parallelizing convolutional neural networks\",\n        \"ImageNet classification with deep convolutional neural networks\",\n        \"HW-NAS-Bench: Hardware-aware neural architecture search benchmark\",\n        \"DARTS: differentiable architecture search\",\n        \"SGDR: Stochastic gradient descent with warm restarts\",\n        \"NAS-Bench-ASR: Reproducible neural architecture search for speech recognition\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"Large-scale evolution of image classifiers\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"ImageNet large scale visual recognition challenge\",\n        \"NAS-Bench-301 and the case for surrogate benchmarks for neural architecture search\",\n        \"Donâ€™t decay the learning rate, increase the batch size\",\n        \"The evolved transformer\",\n        \"A genetic programming approach to designing convolutional neural network architectures\",\n        \"EfficientNet: Rethinking model scaling for convolutional neural networks\",\n        \"MnasNet: Platform-aware neural architecture search for mobile\",\n        \"Attention is all you need\",\n        \"AlphaX: eXploring neural architectures with deep neural networks and Monte Carlo tree search\",\n        \"BANANAS: Bayesian optimization with neural architectures for neural architecture search\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"How powerful are graph neural networks?\",\n        \"NAS evaluation is frustratingly hard\",\n        \"Enumerating unique computational graphs via an iterative graph invariant\",\n        \"NAS-Bench-101: Towards reproducible neural architecture search\",\n        \"NAS-Bench-1Shot1: Benchmarking and dissecting one-shot neural architecture search\",\n        \"Neural architecture search with reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in NAS-HPO-Bench-II: A Benchmark Dataset on Joint Optimization of Convolutional Neural Network Architecture and Training Hyperparameters, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}