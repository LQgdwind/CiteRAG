{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Non-Autoregressive Math Word Problem Solver with Unified Tree Structure\n\nPaper Abstract: Abstract Existing MWP solvers employ sequence or binary tree to present the solution expression and decode it from given problem description. However, such structures fail to handle the variants that can be derived via mathematical manipulation, e.g., (a1+a2)‚àóa3subscriptùëé1subscriptùëé2subscriptùëé3(a_{1}+a_{2})*a_{3} and a1‚àóa3+a2‚àóa3subscriptùëé1subscriptùëé3subscriptùëé2subscriptùëé3a_{1}*a_{3}+a_{2}*a_{3} can both be possible valid solutions for a same problem but formulated as different expression sequences or trees. The multiple solution variants depicting different possible solving procedures for the same input problem would raise two issues: 1) making it hard for the model to learn the mapping function between the input and output spaces effectively, and 2) wrongly indicating wrong when evaluating a valid expression variant. To address these issues, we introduce a unified tree structure to present a solution expression, where the elements are permutable and identical for all the expression variants. We propose a novel non-autoregressive solver, named MWP-NAS, to parse the problem and deduce the solution expression based on the unified tree. For evaluating the possible expression variants, we design a path-based metric to evaluate the partial accuracy of expressions of a unified tree. The results from extensive experiments conducted on Math23K and MAWPS demonstrate the effectiveness of our proposed MWP-NAS. The codes and checkpoints are available at: https://github.com/mengqunhan/MWP-NAS.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mathqa: Towards interpretable math word problem solving with operation-based formalisms\",\n        \"Robust understanding of word problems with extraneous information\",\n        \"Solving math word problems with reexamination\",\n        \"Non-autoregressive sentence ordering\",\n        \"Natural language input for a computer problem solving system\",\n        \"A bottom-up dag structure extraction model for math word problems\",\n        \"Computer solution of calculus word problems\",\n        \"Elementary school science and math tests as a driver for ai: Take the aristo challenge!\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Personalized fashion outfit generation with user coordination preference learning\",\n        \"Unified language model pre-training for natural language understanding and generation\",\n        \"Non-autoregressive neural machine translation\",\n        \"Fine-tuning by curriculum learning for non-autoregressive neural machine translation\",\n        \"Measuring mathematical problem solving with the math dataset\",\n        \"Neural math word problem solver with reinforcement learning\",\n        \"Directed acyclic transformer for non-autoregressive machine translation\",\n        \"Learning to reason deductively: Math word problem solving as complex relation extraction\",\n        \"Mawps: A math word problem repository\",\n        \"Learning to automatically solve algebra word problems\",\n        \"Modeling intra-relation in math word problems with different functional multi-head attentions\",\n        \"Graph-to-tree neural networks for learning structured input-output translation with applications to semantic parsing and math word problem\",\n        \"Seeking patterns, not just memorizing procedures: Contrastive learning for solving math word problems\",\n        \"Hint-based training for non-autoregressive machine translation\",\n        \"Mwp-bert: Numeracy-augmented pre-training for math word problem solving\",\n        \"HMS: A hierarchical solver with dependency-enhanced understanding for math word problem\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Edit5: Semi-autoregressive text editing with t5 warm-start\",\n        \"A diverse corpus for evaluating and developing english math word problem solvers\",\n        \"Learning to use formulas to solve simple arithmetic problems\",\n        \"Are nlp models really able to solve simple math word problems?\",\n        \"Neural-symbolic solver for math word problems with auxiliary tasks\",\n        \"Semantically-aligned universal tree-structured solver for math word problems\",\n        \"Faster r-cnn: Towards real-time object detection with region proposal networks\",\n        \"Data-driven methods for solving algebra word problems\",\n        \"Generate & rank: A multi-task framework for math word problems\",\n        \"Solving math word problems with multi-encoders and multi-decoders\",\n        \"Automatically solving number word problems by semantic parsing and reasoning\",\n        \"Attention is all you need\",\n        \"Pointer networks\",\n        \"Structure-unified m-tree coding solver for math word problem\",\n        \"Semi-autoregressive neural machine translation\",\n        \"Mathdqn: Solving arithmetic word problems via deep reinforcement learning\",\n        \"Template-based math word problem solvers with recursive neural networks\",\n        \"Deep neural solver for math word problems\",\n        \"Math word problem solving with explicit numerical values\",\n        \"A goal-driven tree-structured neural model for math word problems\",\n        \"The gap of semantic parsing: A survey on automatic math word problem solvers\",\n        \"Graph-to-tree learning for solving math word problems\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Non-Autoregressive Math Word Problem Solver with Unified Tree Structure, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}