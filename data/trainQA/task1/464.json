{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FPDetect: Efficient Reasoning About Stencil Programs Using Selective Direct Evaluation\n\nPaper Abstract: Abstract. We present FPDetect, a low overhead approach for detecting logical errors and soft errors affecting stencil computations without generating false positives. We develop an offline analysis that tightly estimates the number of floating-point bits preserved across stencil applications. This estimate rigorously bounds the values expected in the data space of the computation. Violations of this bound can be attributed with certainty to errors. FPDetect helps synthesize error detectors customized for user-specified levels of accuracy and coverage. FPDetect also enables overhead reduction techniques based on deploying these detectors coarsely in space and time. Experimental evaluations demonstrate the practicality of our approach.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"IEEE Standard for Floating-Point Arithmetic\",\n        \"Partial Differential Equations & Boundary Value Problems with Maple, Second Edition (2nd ed.)\",\n        \"PolyCheck: dynamic verification of iteration space transformations on affine programs\",\n        \"Soft errors in advanced computer systems\",\n        \"Formal Verification of Floating-Point Programs\",\n        \"Proofs of Numerical Programs when the Compiler Optimizes\",\n        \"Automatic Transformations for Communication-Minimized Parallelization and Locality Optimization in the Polyhedral Model\",\n        \"A Practical Automatic Polyhedral Parallelizer and Locality Optimizer\",\n        \"Designing reliable systems from unreliable components: the challenges of transistor variability and degradation\",\n        \"Verifying quantitative reliability for programs that execute on unreliable hardware\",\n        \"Tolerating Soft Errors in Processor Cores Using CLEAR (Cross-Layer Exploration for Architecting Resilience)\",\n        \"Rigorous floating-point mixed-precision tuning\",\n        \"Sound compilation of reals\",\n        \"Towards a Compiler for Reals\",\n        \"Guaranteed Proofs Using Interval Arithmetic\",\n        \"Affine Arithmetic: Concepts and Applications\",\n        \"Adaptive Impact-Driven Detection of Silent Data Corruption for HPC Applications\",\n        \"Evaluating the Impact of SDC on the GMRES Iterative Solver\",\n        \"Resilience in Numerical Methods: A Position on Fault Models and Methodologies\",\n        \"A Numerical Soft Fault Model for Iterative Linear Solvers\",\n        \"Exploiting data representation for fault tolerance\",\n        \"Resilience for Stencil Computations with Latent Errors\",\n        \"Local recovery and failure masking for stencil-based applications at extreme scales\",\n        \"What Every Computer Scientist Should Know About Floating-point Arithmetic\",\n        \"Detecting and Correcting Data Corruption in Stencil Applications through Multivariate Interpolation\",\n        \"A New Golden Age for Computer Architecture\",\n        \"Accuracy and Stability of Numerical Algorithms (second ed.)\",\n        \"Algorithm-Based Fault Tolerance for Matrix Operations\",\n        \"A Survey on Post-Silicon Functional Validation for Multicore Architectures\",\n        \"IEEE standard 754 for binary floating-point arithmetic\",\n        \"Comparative Analysis of Soft-error Detection Strategies: A Case Study with Iterative Methods\",\n        \"A Priori Worst-Case Error Bounds for Floating-Point Computations\",\n        \"Clover: Compiler Directed Lightweight Soft Error Resilience\",\n        \"Certified Roundoff Error Bounds Using Semidefinite Programming\",\n        \"Chisel: reliability- and accuracy-aware optimization of approximate computational kernels\",\n        \"Handbook of Floating-Point Arithmetic (1st ed.)\",\n        \"Terrestrial-based radiation upsets: a cautionary tale\",\n        \"Error Tolerance in Server Class Processors\",\n        \"Verification of Polyhedral Optimizations with Constant Loop Bounds in Finite State Space Computations\",\n        \"Radiation-induced Soft Error: A Chip-level Modeling\",\n        \"Detecting Soft Errors in Stencil based Computations\",\n        \"Addressing failures in exascale computing\",\n        \"Rigorous Estimation of Floating-Point Round-Off Errors with Symbolic Taylor Expansions\",\n        \"MACORD: Online Adaptive Machine Learning Framework for Silent Error Detection\",\n        \"Spatial Support Vector Regression to Detect Silent Errors in the Exascale Era\",\n        \"A Gaussian Process Approach for Effective Soft Error Detection\",\n        \"The pochoir stencil compiler\",\n        \"New-Sum: A Novel Online ABFT Scheme For General Iterative Methods\",\n        \"Reliability Lessons Learned from GPU Experience with the Titan Supercomputer at Oak Ridge Leadership Computing Facility\",\n        \"the PolyOpt polyhedral compiler\",\n        \"Equivalence checking of static affine programs using widening to handle recurrences\",\n        \"FT-ScaLAPACK: correcting soft errors on-line for ScaLAPACK cholesky, QR, and LU factorization routines\",\n        \"Silent Data Corruption Resilient Two-sided Matrix Factorizations\",\n        \"GS-DMR: Low-overhead soft error detection scheme for stencil-based computation\",\n        \"Reduced Precision Checking to Detect Errors in Floating Point Arithmetic\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in FPDetect: Efficient Reasoning About Stencil Programs Using Selective Direct Evaluation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}