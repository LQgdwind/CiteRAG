{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Near-Linear Time Homomorphism Counting in Bounded Degeneracy Graphs: The Barrier of Long Induced Cycles\n\nPaper Abstract: Abstract Counting homomorphisms of a constant sized pattern graph HùêªH in an input graph Gùê∫G is a fundamental computational problem. There is a rich history of studying the complexity of this problem, under various constraints on the input Gùê∫G and the pattern HùêªH. Given the significance of this problem and the large sizes of modern inputs, we investigate when near-linear time algorithms are possible. We focus on the case when the input graph has bounded degeneracy, a commonly studied and practically relevant class for homomorphism counting. It is known from previous work that for certain classes of HùêªH, HùêªH-homomorphisms can be counted exactly in near-linear time in bounded degeneracy graphs. Can we precisely characterize the patterns HùêªH for which near-linear time algorithms are possible? We completely resolve this problem, discovering a clean dichotomy using fine-grained complexity. Let mùëöm denote the number of edges in Gùê∫G. We prove the following: if the largest induced cycle in HùêªH has length at most 555, then there is an O‚Äã(m‚Äãlog‚Å°m)ùëÇùëöùëöO(m\\log m) algorithm for counting HùêªH-homomorphisms in bounded degeneracy graphs. If the largest induced cycle in HùêªH has length at least 666, then (assuming standard fine-grained complexity conjectures) there is a constant Œ≥>0ùõæ0\\gamma>0, such that there is no o‚Äã(m1+Œ≥)ùëúsuperscriptùëö1ùõæo(m^{1+\\gamma}) time algorithm for counting HùêªH-homomorphisms.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graph sketches: sparsification, spanners, and subgraphs\",\n        \"A simple sublinear-time algorithm for counting arbitrary subgraphs via edge sampling\",\n        \"Efficient graphlet counting for large networks\",\n        \"Popular conjectures imply strong lower bounds for dynamic problems\",\n        \"Finding and counting given length cycles\",\n        \"On non-serial dynamic programming\",\n        \"Towards tighter space bounds for counting triangles and other substructures in graph streams\",\n        \"Graph coloring via degeneracy in streaming and other space-conscious models\",\n        \"Counting graph homomorphisms\",\n        \"Reductions in streaming algorithms, with an application to counting triangles in graphs\",\n        \"Linear time subgraph counting, graph degeneracy, and the chasm at size six\",\n        \"Faster subgraph counting in sparse graphs\",\n        \"How the degeneracy helps for triangle counting in graph streams\",\n        \"Graph homomorphisms and phase transitions\",\n        \"Homomorphisms are a good basis for counting small subgraphs\",\n        \"Optimal implementation of conjunctive queries in relational data bases\",\n        \"Arboricity and subgraph listing algorithms\",\n        \"Graph twiddling in a mapreduce world\",\n        \"The complexity of counting graph homomorphisms\",\n        \"The complexity of counting homomorphisms seen from the other side\",\n        \"Counting answers to existential questions\",\n        \"Counting h-colorings of partial k-trees\",\n        \"Approximately counting triangles in sublinear time\",\n        \"Arboricity and bipartite subgraph listing algorithms\",\n        \"On approximating the number of k-cliques in sublinear time\",\n        \"Faster sublinear approximations of kùëòk-cliques for low arboricity graphs\",\n        \"The parameterized complexity of counting problems\",\n        \"Bounded arboricity to determine the local structure of sparse graphs\",\n        \"Counting subgraphs in degenerate graphs\",\n        \"The complexity of homomorphism and constraint satisfaction problems seen from the other side\",\n        \"S-functions for graphs\",\n        \"On the complexity of h-coloring\",\n        \"Which problems have strongly exponential complexity?\",\n        \"Finding a minimum circuit in a graph\",\n        \"A fast and provable method for estimating clique counts using tur√°n‚Äôs theorem\",\n        \"A space efficient streaming algorithm for triangle counting using the birthday paradox\",\n        \"Path sampling: A fast and provable method for estimating 4-vertex subgraph counts\",\n        \"Counting arbitrary subgraphs in data streams\",\n        \"Counting triangles in massive graphs with mapreduce\",\n        \"Operations with structures\",\n        \"Large networks and graph limits, volume 60\",\n        \"Smallest-last ordering and clustering and graph coloring algorithms\",\n        \"Approximate counting of cycles in streams\",\n        \"Better algorithms for counting triangles in data streams\",\n        \"Efficient orbit-aware triad and quad census in directed and undirected graphs\",\n        \"Efficiently counting vertex orbits of all 5-vertex subgraphs, by evoke\",\n        \"Escape: Efficiently counting all 5-vertex subgraphs\",\n        \"Counting and sampling triangles from a graph stream\",\n        \"Graph minors. i. excluding a forest\",\n        \"Graph minors. iii. planar tree-width\",\n        \"Graph minors. ii. algorithmic aspects of tree-width\",\n        \"Counting and finding homomorphisms is universal for parameterized complexity theory\",\n        \"Patterns and anomalies in kùëòk-cores of real-world graphs with applications\",\n        \"Counting triangles and the curse of the last reducer\",\n        \"An inequality for the chromatic number of a graph\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Near-Linear Time Homomorphism Counting in Bounded Degeneracy Graphs: The Barrier of Long Induced Cycles, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}