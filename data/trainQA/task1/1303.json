{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Distributed Dispatching in the Parallel Server Model\n\nPaper Abstract: Abstract With the rapid increase in the size and volume of cloud services and data centers, architectures with multiple job dispatchers are quickly becoming the norm. Load balancing is a key element of such systems. Nevertheless, current solutions to load balancing in such systems admit a paradoxical behavior in which more accurate information regarding server queue lengths degrades performance due to herding and detrimental incast effects. Indeed, both in theory and in practice, there is a common doubt regarding the value of information in the context of multi-dispatcher load balancing. As a result, both researchers and system designers resort to more straightforward solutions, such as the power-of-two-choices to avoid worst-case scenarios, potentially sacrificing overall resource utilization and system performance. A principal focus of our investigation concerns the value of information about queue lengths in the multi-dispatcher setting. We argue that, at its core, load balancing with multiple dispatchers is a distributed computing task. In that light, we propose a new job dispatching approach, called Tidal Water Filling, which addresses the distributed nature of the system. Specifically, by incorporating the existence of other dispatchers into the decision-making process, our protocols outperform previous solutions in many scenarios. In particular, when the dispatchers have complete and accurate information regarding the server queues, our policies significantly outperform all existing solutions.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Parallel randomized load balancing\",\n        \"Power-of-d-choices with memory: Fluid limit and optimality\",\n        \"Persistent-idle load-distribution\",\n        \"On the persistent-idle load distribution policy under batch arrivals and random service capacity\",\n        \"The tail at scale\",\n        \"Maglev: A fast and reliable software network load balancer\",\n        \"Asymptotically tight steady-state queue length bounds implied by drift conditions\",\n        \"Duet: Cloud scale load balancing with hardware and software\",\n        \"NGINX and the ‚ÄúPower of Two Choices‚Äù Load-Balancing Algorithm\",\n        \"Resource allocation and cross-layer control in wireless networks\",\n        \"Reducibility among combinatorial problems\",\n        \"Minima of functions of several variables with inequalities as side conditions\",\n        \"Load balancing without regret in the bulletin board model\",\n        \"Nonlinear programming\",\n        \"Time, clocks, and the ordering of events in a distributed system\",\n        \"On the advantages of free choice: A symmetric and fully distributed solution to the dining philosophers problem\",\n        \"Tight bounds for parallel randomized load balancing\",\n        \"Join-idle-queue: A novel load balancing algorithm for dynamically scalable web services\",\n        \"On the maximum queue length in the supermarket model\",\n        \"Load Balancing is Impossible. Scaleconf 2016.\",\n        \"How useful is old information?\",\n        \"The power of two choices in randomized load balancing\",\n        \"Analyzing distributed join-idle-queue: A fluid limit approach\",\n        \"Load balancing with memory\",\n        \"AccelTCP: Accelerating Network Applications with Stateful TCP Offloading\",\n        \"Large MTUs and internet performance\",\n        \"Optimal energy and delay tradeoffs for multiuser wireless downlinks\",\n        \"Stability and capacity regions or discrete time queueing networks\",\n        \"Hipster: Hybrid task manager for latency-critical cloud workloads\",\n        \"Zygos: Achieving low tail latency for microsecond-scale networked tasks\",\n        \"NùëÅN-process synchronization by 4‚Äãlog24subscript24\\\\log_{2} NùëÅN-valued shared variables\",\n        \"The user and business impact of server delays, additional bytes, and http chunking in web search\",\n        \"The use of memory in randomized load balancing\",\n        \"Netflix Technology Blog. Rethinking Netflix‚Äôs Edge Load Balancing. September 2018.\",\n        \"Pull-based load distribution in large-scale heterogeneous service systems\",\n        \"Pull-based load distribution among heterogeneous parallel servers: the case of multiple routers\",\n        \"HAProxy. Test Driving ‚ÄúPower of Two Random Choices‚Äù Load Balancing\",\n        \"Hyper-scalable jsq with sparse feedback\",\n        \"LSQ: Load Balancing in Large-Scale Heterogeneous Systems With Multiple Dispatchers\",\n        \"Queueing system with selection of the shortest of two queues: An asymptotic approach\",\n        \"Distributed join-the-idle-queue for low latency cloud services\",\n        \"On the optimal assignment of customers to parallel servers\",\n        \"Optimality of the shortest line discipline\",\n        \"The power of slightly more than one sample in randomized load balancing\",\n        \"Asymptotically optimal load balancing in large-scale heterogeneous systems with multiple dispatchers\",\n        \"Heavy-traffic delay optimality in pull-based load balancing systems: Necessary and sufficient conditions\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Distributed Dispatching in the Parallel Server Model, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}