{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: TR-BERT: Dynamic Token Reduction for Accelerating BERT Inference\n\nPaper Abstract: Abstract Existing pre-trained language models (PLMs) are often computationally expensive in inference, making them impractical in various resource-limited real-world applications. To address this issue, we propose a dynamic token reduction approach to accelerate PLMs’ inference, named TR-BERT, which could flexibly adapt the layer number of each token in inference to avoid redundant calculation. Specially, TR-BERT formulates the token reduction process as a multi-step token selection problem and automatically learns the selection strategy via reinforcement learning. The experimental results on several downstream NLP tasks show that TR-BERT is able to speed up BERT by 222-555 times to satisfy various performance demands. Moreover, TR-BERT can also achieve better performance with less computation in a suite of long-text tasks since its token-level layer number adaption greatly accelerates the self-attention operation in PLMs. The source code and experiment details of this paper can be obtained from https://github.com/thunlp/TR-BERT.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Longformer: The long-document transformer\",\n        \"Deformer: Decomposing pre-trained transformers for faster question answering\",\n        \"The lottery ticket hypothesis for pre-trained BERT networks\",\n        \"Generating long sequences with sparse transformers\",\n        \"Simple and effective multi-paragraph reading comprehension\",\n        \"Funnel-transformer: Filtering out sequential redundancy for efficient language processing\",\n        \"Universal transformers\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Reducing transformer depth on demand with structured dropout\",\n        \"MRQA 2019 shared task: Evaluating generalization in reading comprehension\",\n        \"Power-bert: Accelerating BERT inference for classification tasks\",\n        \"A baseline for detecting misclassified and out-of-distribution examples in neural networks\",\n        \"A structural probe for finding syntax in word representations\",\n        \"Distilling the knowledge in a neural network\",\n        \"Dynabert: Dynamic BERT with adaptive width and depth\",\n        \"Imitation learning: A survey of learning methods\",\n        \"Tinybert: Distilling BERT for natural language understanding\",\n        \"Triviaqa: A large scale distantly supervised challenge dataset for reading comprehension\",\n        \"Semeval-2019 task 4: Hyperpartisan news detection\",\n        \"Length-adaptive transformer: Train once with length drop, use anytime with search\",\n        \"Adam: A method for stochastic optimization\",\n        \"Natural questions: a benchmark for question answering research\",\n        \"RACE: large-scale reading comprehension dataset from examinations\",\n        \"Newsweeder: Learning to filter netnews\",\n        \"Open sesame: Getting inside bert’s linguistic knowledge\",\n        \"Fastbert: a self-distilling BERT with adaptive inference time\",\n        \"RoBERTa: A robustly optimized BERT pretraining approach\",\n        \"Learning word vectors for sentiment analysis\",\n        \"Are sixteen heads really better than one?\",\n        \"Revealing the importance of semantic retrieval for machine reading at scale\",\n        \"Know what you don’t know: Unanswerable questions for squad\",\n        \"SQuAD: 100, 000+ questions for machine comprehension of text\",\n        \"A primer in bertology: What we know about how BERT works\",\n        \"Distilbert, a distilled version of BERT: smaller, faster, cheaper and lighter\",\n        \"Q-BERT: hessian based ultra low precision quantization of BERT\",\n        \"Utilizing BERT for aspect-based sentiment analysis via constructing auxiliary sentence\",\n        \"Patient knowledge distillation for BERT model compression\",\n        \"Mobilebert: a compact task-agnostic BERT for resource-limited devices\",\n        \"Policy gradient methods for reinforcement learning with function approximation\",\n        \"MultiQA: An empirical investigation of generalization and transfer in reading comprehension\",\n        \"Newsqa: A machine comprehension dataset\",\n        \"Attention is all you need\",\n        \"Constructing datasets for multi-hop reading comprehension across documents\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"DeeBERT: Dynamic early exiting for accelerating BERT inference\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Hotpotqa: A dataset for diverse, explainable multi-hop question answering\",\n        \"Big bird: Transformers for longer sequences\",\n        \"Learning structured representation for text classification via reinforcement learning\",\n        \"Ternarybert: Distillation-aware ultra-low bit BERT\",\n        \"Character-level convolutional networks for text classification\",\n        \"Semantics-aware BERT for language understanding\",\n        \"Transformer-xh: Multi-evidence reasoning with extra hop attention\",\n        \"Token-level dynamic self-attention network for multi-passage reading comprehension\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in TR-BERT: Dynamic Token Reduction for Accelerating BERT Inference, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}