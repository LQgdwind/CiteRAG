{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Berrut Approximated Coded Computing: Straggler Resistance Beyond Polynomial Computing\n\nPaper Abstract: Abstract One of the major challenges in using distributed learning to train complicated models with large data sets is to deal with stragglers effect. As a solution, coded computation has been recently proposed to efficiently add redundancy to the computation tasks. In this technique, coding is used across data sets, and computation is done over coded data, such that the results of an arbitrary subset of worker nodes with a certain size are enough to recover the final results. The major drawbacks with those approaches are (1) they are limited to polynomial functions, (2) the number of servers that we need to wait for grows with the degree of the model, (3) they are not numerically stable for computation over real numbers. In this paper, we propose Berrut Approximated Coded Computing (BACC), as an alternative approach, as a numerically stable solution, which works beyond polynomial functions computation and with any number of servers. The accuracy of the approximation is established theoretically and verified by simulation. In particular, BACC is used to train a deep neural network on a cluster of servers, which outperforms alternative uncoded solutions in terms of the rate of convergence.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Large scale distributed deep networks\",\n        \"Distributed large-scale natural graph factorization\",\n        \"Coded MapReduce\",\n        \"The tail at scale\",\n        \"High-dimensional coded matrix multiplication\",\n        \"Speeding up distributed machine learning using codes\",\n        \"Polynomial codes: an optimal design for high-dimensional coded matrix multiplication\",\n        \"Straggler mitigation in distributed matrix multiplication: Fundamental limits and optimal coding\",\n        \"On the optimal recovery threshold of coded matrix multiplication\",\n        \"Codedsketch: A coding scheme for distributed computation of approximated matrix multiplication\",\n        \"Lagrange coded computing: Optimal design for resiliency, security, and privacy\",\n        \"CodedPrivateML: A fast and privacy-preserving framework for distributed machine learning\",\n        \"Gradient coding: Avoiding stragglers in distributed learning\",\n        \"Communication-computation efficient gradient coding\",\n        \"Gradient coding from cyclic mds codes and expander graphs\",\n        \"Fundamental limits of approximate gradient coding\",\n        \"Lower bounds for the condition number of vandermonde matrices\",\n        \"Numerically stable polynomially coded computing\",\n        \"Random convolutional coding for robust and straggler resilient distributed matrix computation\",\n        \"Numerically stable coded matrix computations via circulant and rotation matrix embeddings\",\n        \"Analog lagrange coded computing\",\n        \"Barycentric lagrange interpolation\",\n        \"Essentials of numerical analysis, with pocket calculator demonstrations\",\n        \"Lagrangian interpolation at the chebyshev points xn,ŒΩsubscriptùë•ùëõùúàx_{n,\\\\nu}= cos(ŒΩùúà\\\\nuœÄùúã\\\\pi/n), ŒΩùúà\\\\nu= 0(1)n; some unnoted advantages\",\n        \"Recent developments in barycentric rational interpolation\",\n        \"Fast and stable rational interpolation in roots of unity and chebyshev points\",\n        \"Some new aspects of rational interpolation\",\n        \"Lebesgue constant minimizing linear rational interpolation of continuous functions over the interval\",\n        \"Polynomial interpolation: Lagrange versus newton\",\n        \"Matrices for the direct determination of the barycentric weights of rational interpolation\",\n        \"Rational functions for guaranteed and experimentally well-conditioned global interpolation\",\n        \"A course in approximation theory\",\n        \"An introduction to the approximation of functions\",\n        \"A short course on approximation theory\",\n        \"Bounding the lebesgue constant for berrut‚Äôs rational interpolant at general nodes\",\n        \"An improved upper bound on the lebesgue constant of berrut‚Äôs rational interpolation operator\",\n        \"Barycentric rational interpolation with no poles and high rates of approximation\",\n        \"The numerical stability of barycentric lagrange interpolation\",\n        \"On the backward stability of the second barycentric formula for interpolation\",\n        \"√úber empirische funktionen und die interpolation zwischen √§quidistanten ordinaten\",\n        \"MNIST handwritten digit database. at&t labs\",\n        \"Fashion-MNIST: a novel image dataset for benchmarking machine learning algorithms\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Automatic differentiation in pytorch\",\n        \"Mpi for python\",\n        \"On the lebesgue constant of berrut‚Äôs rational interpolant at equidistant nodes\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Berrut Approximated Coded Computing: Straggler Resistance Beyond Polynomial Computing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}