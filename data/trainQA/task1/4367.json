{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 67 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Towards A Measure of General Machine Intelligence\n\nPaper Abstract: Abstract To build general-purpose artificial intelligence systems that can deal with unknown variables across unknown domains, we need benchmarks that measure how well these systems perform on tasks they have never seen before. A prerequisite for this is a measure of a task’s generalization difficulty, or how dissimilar it is from the system’s prior knowledge and experience. If the skill of an intelligence system in a particular domain is defined as it’s ability to consistently generate a set of instructions (or programs) to solve tasks in that domain, current benchmarks do not quantitatively measure the efficiency of acquiring new skills, making it possible to brute-force skill acquisition by training with unlimited amounts of data and compute power. With this in mind, we first propose a common language of instruction, a programming language that allows the expression of programs in the form of directed acyclic graphs across a wide variety of real-world domains and computing platforms. Using programs generated in this language, we demonstrate a match-based method to both score performance and calculate the generalization difficulty of any given set of tasks. We use these to define a numeric benchmark called the generalization index, or the g-index , to measure and compare the skill-acquisition efficiency of any intelligence system on a set of real-world tasks. Finally, we evaluate the suitability of some well-known models as general intelligence systems by calculating their g-index scores.\n\n{retrieved_text}\n\nGenerate exactly 67 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 67\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The measurement of adult intelligence\",\n        \"Computing machinery and intelligence\",\n        \"The development of intelligence in children.\",\n        \"Semantic information processing\",\n        \"A step toward automatic program writing\",\n        \"Representations and modeling in problems of program formation\",\n        \"Data responsive modular, interleaved task programming system\",\n        \"LOGO—A programming language for teaching mathematics\",\n        \"Subgraph isomorphism, matching relational structures and maximal cliques.\",\n        \"An algorithm for subgraph isomorphism\",\n        \"A methodology for LISP program construction from examples\",\n        \"A clique problem equivalent to graph isomorphism\",\n        \"Minds, brains, and programs\",\n        \"On the mapping problem\",\n        \"Gödel’s theorem and information\",\n        \"What kind of information processing is intelligence?\",\n        \"Mainstream science on intelligence: An editorial with 52 signatories, history, and bibliography Special Issue Intelligence and Social Policy\",\n        \"Brainchildren: Essays on designing minds\",\n        \"The MNIST database of handwritten digits\",\n        \"The g factor: The science of mental ability\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Creativity, the Turing test, and the (better) Lovelace test\",\n        \"Support vector machines for handwritten numerical string recognition\",\n        \"Comparison and combination of state-of-the-art techniques for handwritten character recognition: topping the mnist benchmark\",\n        \"Universal intelligence: A definition of machine intelligence\",\n        \"Unconstrained Handwritten Digit Recognition: Experimentation on MNIST Database\",\n        \"Contemporary Approaches to Artificial General Intelligence\",\n        \"An introduction to Kolmogorov complexity and its applications\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Chinese room argument revision #66188\",\n        \"Flow-Based Programming: A new approach to application development\",\n        \"Json\",\n        \"IQ tests are not for machines, yet\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"The Lovelace 2.0 test of artificial creativity and intelligence\",\n        \"Compositional program synthesis from natural language and examples\",\n        \"Neuro-Symbolic Program Synthesis\",\n        \"Foundations of JSON schema\",\n        \"Evaluation in artificial intelligence: from task-oriented to ability-oriented measurement\",\n        \"Program synthesis from natural language using recurrent neural networks\",\n        \"A Syntactic Neural Model for General-Purpose Code Generation\",\n        \"Leveraging Grammar and Reinforcement Learning for Neural Program Synthesis\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Learning to Infer Graphics Programs from Hand-Drawn Images\",\n        \"Neural program synthesis from diverse demonstration videos\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"On the Measure of Intelligence\",\n        \"Squeeze-and-Excitation Networks\",\n        \"Spoc: Search-based pseudocode to code\",\n        \"Language models are unsupervised multitask learners\",\n        \"Are we done with imagenet?\",\n        \"Language models are few-shot learners\",\n        \"Dreamcoder: Growing generalizable, interpretable knowledge with wake-sleep bayesian program learning\",\n        \"The Pile: An 800GB Dataset of Diverse Text for Language Modeling\",\n        \"Unsupervised translation of programming languages\",\n        \"Codebleu: a method for automatic evaluation of code synthesis\",\n        \"TF-Coder: Program Synthesis for Tensor Manipulations\",\n        \"Transformers: State-of-the-Art Natural Language Processing\",\n        \"Program Synthesis with Large Language Models\",\n        \"NoFloJS: Flow-based programming for Javascript\",\n        \"GPT-Neo: Large Scale Autoregressive Language Modeling with Mesh-Tensorflow\",\n        \"Evaluating Large Language Models Trained on Code\",\n        \"turtle graphics in Python 3.7.12\",\n        \"Hutter Prize: Human Knowledge Compression Contest\",\n        \"BF++: a language for general-purpose neural program synthesis\",\n        \"Node-RED: Low-code programming for event-driven applications\",\n        \"AGENT: A Benchmark for Core Psychological Reasoning\"\n    ],\n    \"reasoning\": \"Selected these 67 references because they represent foundational work and recent advances in Towards A Measure of General Machine Intelligence, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}