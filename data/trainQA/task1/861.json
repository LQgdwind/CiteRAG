{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DaSGD: Squeezing SGD Parallelization Performance in Distributed Training Using Delayed Averaging\n\nPaper Abstract: Abstract The state-of-the-art deep learning algorithms rely on distributed training systems to tackle the increasing sizes of models and training data sets. Minibatch stochastic gradient descent (SGD) algorithm requires workers to halt forward/back propagations, to wait for gradients aggregated from all workers, and to receive weight updates before the next batch of tasks. This synchronous execution model exposes the overheads of gradient/weight communication among the large number of workers a distributed training system. We propose a new SGD algorithm, DaSGD (Local SGD with Delayed Averaging), which parallelizes SGD and forward/back propagations to hide 100%percent100100\\% of the communication overhead. By adjusting the gradient update scheme, this algorithm uses hardware resources more efficiently and reduces the reliance on the low-latency and high-throughput inter-connects. The theoretical analysis and the experimental results show its convergence rate O‚Äã(1/K)ùëÇ1ùêæO(1/\\sqrt{K}), the same as SGD. The performance evaluation demonstrates it enables a linear performance scale-up with the cluster size.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Imagenet training in 24 minutes\",\n        \"Extremely large minibatch sgd: Training resnet-50 on imagenet in 15 minutes\",\n        \"Scaling sgd batch size to 32k for imagenet training\",\n        \"Image classification at supercomputer scale\",\n        \"Evaluating modern gpu interconnect: Pcie, nvlink, nv-sli, nvswitch and gpudirect\",\n        \"Nvidia dgx-1 with tesla v100 system architecture\",\n        \"Nvidia nvswitch\",\n        \"Gaudi‚Ñ¢ training platform white paper\",\n        \"The datacenter as a computer: Designing warehouse-scale machines\",\n        \"Stochastic first-and zeroth-order methods for nonconvex stochastic programming\",\n        \"Large-scale machine learning with stochastic gradient descent\",\n        \"Tensorflow: Large-scale machine learning on heterogeneous distributed systems\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Mxnet: A flexible and efficient machine learning library for heterogeneous distributed systems\",\n        \"A reliable effective terascale linear learning system\",\n        \"Bandwidth efficient all-reduce operation on tree topologies\",\n        \"Deep gradient compression: Reducing the communication bandwidth for distributed training\",\n        \"Gradient sparsification for communication-efficient distributed optimization\",\n        \"The convergence of sparsified gradient methods\",\n        \"Qsgd: Communication-efficient sgd via gradient quantization and encoding\",\n        \"Highly scalable deep learning training system with mixed-precision: Training imagenet in four minutes\",\n        \"Terngrad: Ternary gradients to reduce communication in distributed deep learning\",\n        \"Dorefa-net: Training low bitwidth convolutional neural networks with low bitwidth gradients\",\n        \"1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns\",\n        \"Sparse communication for distributed gradient descent\",\n        \"Sparcml: High-performance sparse communication for machine learning\",\n        \"Large scale distributed deep networks\",\n        \"Hogwild: A lock-free approach to parallelizing stochastic gradient descent\",\n        \"Deep learning with elastic averaging sgd\",\n        \"Asynchronous parallel stochastic gradient for nonconvex optimization\",\n        \"Adaptive communication strategies to achieve the best error-runtime trade-off in local-update sgd\",\n        \"Cooperative sgd: A unified framework for the design and analysis of communication-efficient sgd algorithms\",\n        \"Don‚Äôt use large mini-batches, use local sgd\",\n        \"Optimal distributed online prediction using mini-batches\",\n        \"Now anyone can train imagenet in 18 minutes\",\n        \"Cyclical learning rates for training neural networks\",\n        \"Going deeper with convolutions\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Deep residual learning for image recognition\",\n        \"Densely connected convolutional networks\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Aggregated residual transformations for deep neural networks\",\n        \"Dual path networks\",\n        \"Paleo: A performance model for deep neural networks\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in DaSGD: Squeezing SGD Parallelization Performance in Distributed Training Using Delayed Averaging, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}