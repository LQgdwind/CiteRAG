{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Generating Compressed Combinatory Proof Structures – An Approach to Automated First-Order Theorem Proving\n\nPaper Abstract: Abstract Representing a proof tree by a combinator term that reduces to the tree lets subtle forms of duplication within the tree materialize as duplicated subterms of the combinator term. In a DAG representation of the combinator term these straightforwardly factor into shared subgraphs. To search for proofs, combinator terms can be enumerated, like clausal tableaux, interwoven with unification of formulas that are associated with nodes of the enumerated structures. To restrict the search space, the enumeration can be based on proof schemas defined as parameterized combinator terms. We introduce here this “combinator term as proof structure” approach to automated first-order proving, present an implementation and first experimental results. The approach builds on a term view of proof structures rooted in condensed detachment and the connection method. It realizes features known from the connection structure calculus, which has not been implemented so far.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Compilers – Principles, Techniques, and Tools\",\n        \"Finding good proofs for description logic entailments using recursive quality measures\",\n        \"Generating Plans from Proofs: The Interpolation-based Approach to Query Reformulation\",\n        \"Restricted combinatory unification\",\n        \"A combinator-based superposition calculus for higher-order logic\",\n        \"Automated Theorem Proving\",\n        \"Methods and calculi for deduction\",\n        \"From Schütte’s formal systems to modern automated deduction\",\n        \"Combinatory Logic: Pure, Applied and Typed\",\n        \"Combinatory Logic, volume I\",\n        \"Higher-order unification via combinators\",\n        \"A comparison of the resolution calculus and the connection method, and a new calculus generalizing both methods\",\n        \"Relative Complexities of First Order Calculi\",\n        \"Machine learning guidance for connection tableaux\",\n        \"Asymptotic enumeration of compacted binary trees of bounded right height\",\n        \"Applying tree languages in proof theory\",\n        \"Clausal proofs of mutilated chessboards\",\n        \"Basic Simple Type Theory\",\n        \"Principal type-schemes and condensed detachment\",\n        \"On enumerating query plans using analytic tableau\",\n        \"FEMaLeCoP: Fairly efficient machine learning connection prover\",\n        \"Condensed detachment as a rule of inference\",\n        \"Tableau and Connection Calculi. Structure, Complexity, Implementation\",\n        \"Model elimination and connection tableau procedures\",\n        \"SETHEO: A high-performance theorem prover\",\n        \"XML tree structure compression using RePair\",\n        \"Automated Theorem Proving: A Logical Basis\",\n        \"OTTER 3.3 Reference Manual\",\n        \"SETHEO and E-SETHEO – the CADE-13 systems\",\n        \"Restricting backtracking in connection calculi\",\n        \"MleanCoP: A connection prover for first-order modal logic\",\n        \"Non-clausal connection-based theorem proving in intuitionistic first-order logic\",\n        \"The nanoCoP 2.0 connection provers for classical, intuitionistic and modal logics\",\n        \"leanCoP: lean connection-based theorem proving\",\n        \"The Implementation of Functional Programming Languages\",\n        \"Logicians at play; or Syll, Simp and Hilbert\",\n        \"lazyCoP: Lazy paramodulation meets neurally guided search\",\n        \"Eliminating models during model elimination\",\n        \"On a theorem of Tarski\",\n        \"Über die Bausteine der mathematischen Logik\",\n        \"A Prolog technology theorem prover: implementation by an extended Prolog compiler\",\n        \"A Prolog technology theorem prover: A new exposition and implementation in Prolog\",\n        \"The TPTP problem library and associated infrastructure. From CNF to TH0, TPTP v6.4.0\",\n        \"A legacy recalled and a tradition continued\",\n        \"Finding shortest proofs: An application of linked inference rules\",\n        \"Challenge problems with condensed detachment\",\n        \"Answers to some open questions of Ulrich and Meredith\",\n        \"The PIE system for proving, interpolating and eliminating\",\n        \"Facets of the PIE environment for proving, interpolating and eliminating on the basis of first-order logic\",\n        \"Craig interpolation with clausal first-order tableaux\",\n        \"CD Tools – Condensed detachment and structure generating theorem proving (system description)\",\n        \"Learning from Łukasiewicz and Meredith: Investigations into proof structures\",\n        \"SWI-Prolog\",\n        \"Combinators – A Centennial View\",\n        \"A Bibliography of Combinators, pages 325–356\",\n        \"Prolog technology reinforcement learning prover (system description)\",\n        \"The role of entropy in guiding a connection prover\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Generating Compressed Combinatory Proof Structures – An Approach to Automated First-Order Theorem Proving, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}