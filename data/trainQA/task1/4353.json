{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GAP2WSS: A Genetic Algorithm based on the Pareto Principle for Web Service Selection\n\nPaper Abstract: Abstract Despite all the progress in Web service selection, the need for an approach with a better optimality and performance still remains. This paper presents a genetic algorithm by adopting the Pareto principle that is called GAP2WSS for selecting a Web service for each task of a composite Web service from a pool of candidate Web services. In contrast to the existing approaches, all global QoS constraints, interservice constraints, and transactional constraints are considered simultaneously. At first, all candidate Web services are scored and ranked per each task using the proposed mechanism. Then, the top 20 percent of the candidate Web services of each task are considered as the candidate Web services of the corresponding task to reduce the problem search space. Finally, the Web service selection problem is solved by focusing only on these 20 percent candidate Web services of each task using a genetic algorithm. Empirical studies demonstrate this approach leads to a higher efficiency and efficacy as compared with the case that all the candidate Web services are considered in solving the problem.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Service-Oriented Architecture: Concepts, Technology, and Design\",\n        \"Service-oriented computing: Concepts, characteristics and directions\",\n        \"Extensible markup language (xml) 1.0 (fifth edition), w3c recommendation\",\n        \"Web services glossary, w3c working group note\",\n        \"Web services description language (wsdl) 1.1, w3c note\",\n        \"Soap version 1.2 part 0: Primer (second edition), w3c recommendation\",\n        \"Soap version 1.2 part 1: Messaging framework (second edition), w3c recommendation\",\n        \"Soap version 1.2 part 2: Adjuncts (second edition), w3c recommendation\",\n        \"Soap version 1.2 specification assertions and test collection (second edition), w3c recommendation\",\n        \"Uddi version 3.0.2, uddi spec technical committee draft\",\n        \"Qos for web services: Requirements and possible approaches, w3c working group note\",\n        \"Investigating web services on the world wide web\",\n        \"Qos-based discovery and ranking of web services\",\n        \"Discovering the best web service\",\n        \"Basic profile version 2.0, working group draft\",\n        \"Web services business process execution language version 2.0, oasis standard\",\n        \"Yawl: Yet another workflow language\",\n        \"A view of cloud computing\",\n        \"Knapsack Problems\",\n        \"Computational Complexity: A Modern Approach\",\n        \"Quality driven web services composition\",\n        \"Qos-aware middleware for web services composition\",\n        \"Adaptive service composition in flexible processes\",\n        \"Efficient algorithms for web services selection with end-to-end qos constraints\",\n        \"Combining global optimization with local selection for efficient qos-aware service composition\",\n        \"Selecting skyline services for qos-based web service composition\",\n        \"A hybrid approach for efficient web service composition with end-to-end qos constraints\",\n        \"A penalty-based genetic algorithm for qos-aware web service composition with inter-service dependencies and conflicts\",\n        \"Qos-based web service composition accommodating inter-service dependencies using minimal-conflict hill-climbing repair genetic algorithm\",\n        \"A hybrid genetic algorithm for the optimal constrained web service selection problem in web service composition\",\n        \"Genetic Algorithms\",\n        \"Ica-wss: A qos-aware imperialist competitive algorithm for web service selection\",\n        \"Imperialist competitive algorithm: An algorithm for optimization inspired by imperialistic competition\",\n        \"Particle swarm optimization with skyline operator for fast cloud-based web service composition\",\n        \"The skyline operator\",\n        \"Particle swarm optimization\",\n        \"Transactional and qos-aware dynamic service composition based on ant colony optimization\",\n        \"Ant colony optimization\",\n        \"Integer and Combinatorial Optimization\",\n        \"Tqos: Transactional and qos-aware selection algorithm for automatic web service composition\",\n        \"The wsla framework: Specifying and monitoring service level agreements for web services\",\n        \"A transaction model for multidatabase systems\",\n        \"Deriving transactional properties of composite web services\",\n        \"Multiple Criteria Decision Making\",\n        \"The 80/20 Principle: The Secret to Achieving More with Less\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in GAP2WSS: A Genetic Algorithm based on the Pareto Principle for Web Service Selection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}