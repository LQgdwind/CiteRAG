{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Spatz: Clustering Compact RISC-V-Based Vector Units to Maximize Computing Efficiency\n\nPaper Abstract: Abstract The ever-increasing computational and storage requirements of modern applications and the slowdown of technology scaling pose major challenges to designing and implementing efficient computer architectures. In this paper, we leverage the architectural balance principle to alleviate the bandwidth bottleneck at the L1 data memory boundary of a tightly-coupled cluster of Processing Elements (PEs). We thus explore coupling each PE with an L0 memory, namely a private register file implemented as Standard Cell Memory (SCM). Architecturally, the SCM is the Vector Register File (VRF) of Spatz, a compact \\qty[quantity-product=-]64 floating-point-capable vector processor based on RISC-V’s Vector Extension Zve64d. Unlike typical vector processors, whose VRFs are hundreds of \\unit Ki large, we prove that Spatz can achieve peak energy efficiency with a VRF of only \\qty2 Ki . An implementation of the Spatz-based cluster in GlobalFoundries’ 12LPP process with eight double-precision Floating Point Units (FPUs) achieves an FPU utilization just \\qty3.4 lower than the ideal upper bound on a double-precision, floating-point matrix multiplication. The cluster reaches \\qty7.7/, corresponding to \\qty15.7 G DP and \\qty95.7 G DP/ at \\qty1 G and nominal operating conditions (TT, \\qty0.80, \\qty25), with more than \\qty55 of the power spent on the FPUs. Furthermore, the optimally-balanced Spatz-based cluster reaches a \\qty95.0 FPU utilization (\\qty7.6/), \\qty15.2 G DP, and \\qty99.3 G DP/ (\\qty61 of the power spent in the FPU) on a 2D workload with a \\numproduct7x7 kernel, resulting in an outstanding area/energy efficiency of \\qty171 G DP//^ 2 m . At equi-area, our computing cluster built upon compact vector processors reaches a \\qty30 higher energy efficiency than a cluster with the same FPU count built upon scalar cores specialized for stream-based floating-point computation.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Cross-disciplinary innovations required for the future of computing\",\n        \"Memory solutions for HPC & AI\",\n        \"GAP-8: A RISC-V SoC for AI at the edge of the IoT\",\n        \"Future prospects of in- and near-memory computing\",\n        \"A 3nm CMOS FinFlex platform technology with enhanced power efficiency and performance for mobile SoC and high performance computing applications (Late News)\",\n        \"CUTIE: Beyond PetaOp/s/W ternary DNN inference acceleration with better-than-binary energy efficiency\",\n        \"Interconnect scaling: Challenges and opportunities\",\n        \"Soft tiles: Capturing physical implementation flexibility for tightly-coupled parallel processing clusters\",\n        \"MemPool: A shared-L1 memory many-core cluster with a low-latency interconnect\",\n        \"Manticore: a 4096-core RISC-V chiplet architecture for ultra-efficient floating-point computing\",\n        \"Top500 list - November 2022\",\n        \"Nvidia H100 Tensor Core GPU Architecture\",\n        \"Memory requirements for balanced computer architectures\",\n        \"The RISC-V Instruction Set Manual: Unprivileged ISA\",\n        \"Can programming be liberated from the von Neumann style?: A functional style and its algebra of programs\",\n        \"Neon.\",\n        \"Intel AVX-512 instructions\",\n        \"Scalable vector processors for embedded systems\",\n        \"The ARM scalable vector extension\",\n        \"RISC-V ‘V’ Vector Extension, version 1.0\",\n        \"Snitch: A tiny pseudo dual-issue processor for area and energy efficient execution of floating-point intensive workloads\",\n        \"Spatz: A compact vector processing unit for high-performance and energy-efficient shared-L1 clusters\",\n        \"The cost of application-class processing: Energy and performance analysis of a Linux-ready 1.7-GHz 64-Bit RISC-V core in 22-nm FDSOI technology\",\n        \"Vitruvius+: An area-efficient RISC-V decoupled vector coprocessor for high performance computing applications\",\n        \"Ara: A 1-GHz+ scalable and energy-efficient RISC-V vector processor with multiprecision floating-point support in 22-nm FD-SOI\",\n        \"Stream semantic registers: A lightweight RISC-V ISA extension achieving full compute utilization in single-issue cores\",\n        \"Power, area, and performance optimization of standard cell memory arrays through controlled placement\",\n        \"Fully digital on-chip memory using minimum height standard cells for near-threshold voltage computing\",\n        \"A roofline model of energy\",\n        \"Balance principles for algorithm-architecture co-design\",\n        \"A ‘new Ara’ for vector computing: an open source highly efficient RISC-V V 1.0 vector processor design\",\n        \"OpenHW Group eXtension Interface\",\n        \"FPnew: An open-source multiformat floating-point unit architecture for energy-proportional transprecision computing\",\n        \"MiniFloat-NN and ExSdotp: An ISA extension and a modular open hardware unit for low-precision training on RISC-V cores\",\n        \"A survey of techniques for architecting and managing GPU register file\",\n        \"A 1.15 TOPS/W, 16-cores parallel ultra-low power cluster with 2b-to-32b fully flexible bit-precision and vector lockstep execution mode\",\n        \"The Converged Vector ISA: Intel® Advanced Vector Extensions 10\",\n        \"Overcoming the limitations of conventional vector processors\",\n        \"Introduction to Armv8.1-M architecture\",\n        \"SiFive Performance P270\",\n        \"SiFive Intelligence X280\",\n        \"The CRAY-1 computer system\",\n        \"Fujitsu high performance CPU for the Post-K computer\",\n        \"Green500 list - November 2022\",\n        \"Arm Cortex-M55 Processor Datasheet\",\n        \"Vicuna: A Timing-Predictable RISC-V Vector Coprocessor for Scalable Parallel Computation\",\n        \"Arrow: A RISC-V vector accelerator for machine learning inference\",\n        \"A minimal RISC-V vector processor for embedded systems\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Spatz: Clustering Compact RISC-V-Based Vector Units to Maximize Computing Efficiency, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}