{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DPO: Dynamic-Programming Optimization on Hybrid Constraints11footnote 1Work supported in part by NSF grants IIS-1527668, CCF-1704883, IIS-1830549, and CNS-2016656; DoD MURI grant N00014-20-1-2787; and an award from the Maryland Procurement Office.\n\nPaper Abstract: Abstract In Bayesian inference, the most probable explanation (MPE) problem requests a variable instantiation with the highest probability given some evidence. Since a Bayesian network can be encoded as a literal-weighted CNF formula œÜùúë\\varphi, we study Boolean MPE, a more general problem that requests a model œÑùúè\\tau of œÜùúë\\varphi with the highest weight, where the weight of œÑùúè\\tau is the product of weights of literals satisfied by œÑùúè\\tau. It is known that Boolean MPE can be solved via reduction to (weighted partial) MaxSAT. Recent work proposed DPMC, a dynamic-programming model counter that leverages graph-decomposition techniques to construct project-join trees. A project-join tree is an execution plan that specifies how to conjoin clauses and project out variables. We build on DPMC and introduce DPO, a dynamic-programming optimizer that exactly solves Boolean MPE. By using algebraic decision diagrams (ADDs) to represent pseudo-Boolean (PB) functions, DPO is able to handle disjunctive clauses as well as XOR clauses. (Cardinality constraints and PB constraints may also be compactly represented by ADDs, so one can further extend DPO‚Äôs support for hybrid inputs.) To test the competitiveness of DPO, we generate random XOR-CNF formulas. On these hybrid benchmarks, DPO significantly outperforms MaxHS, UWrMaxSat, and GaussMaxHS, which are state-of-the-art exact solvers for MaxSAT.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"FAQ: questions asked frequently\",\n        \"MaxSAT Evaluation 2020: solver and benchmark descriptions\",\n        \"Algebraic decision diagrams and their applications\",\n        \"Biclique cryptanalysis of the full AES\",\n        \"Graph-based algorithms for Boolean function manipulation\",\n        \"Bayesian networks in fault diagnosis\",\n        \"BDD-based dynamic programming on tree decompositions\",\n        \"The complexity of theorem-proving procedures\",\n        \"Graph coloring with cardinality constraints on the neighborhoods\",\n        \"The basic algorithm for pseudo-Boolean programming revisited\",\n        \"Solving MaxSAT by solving a sequence of simpler SAT instances\",\n        \"PyEDA: data structures and algorithms for electronic design automation\",\n        \"DPMC: weighted model counting by dynamic programming on project-join trees\",\n        \"ProCount: weighted projected model counting with graded project-join trees\",\n        \"Using linear programming to decode binary linear codes\",\n        \"Exploiting database management systems and treewidth for counting\",\n        \"Maximum model counting\",\n        \"The complexity of optimization problems\",\n        \"FourierSAT: a Fourier expansion-based algebraic framework for solving hybrid boolean constraints\",\n        \"DPMS: an ADD-based symbolic approach for generalized MaxSAT solving\",\n        \"Solving exist-random quantified stochastic Boolean satisfiability via clause selection\",\n        \"CASHWMaxSAT: solver description\",\n        \"Stochastic Boolean satisfiability\",\n        \"Symbolic techniques in satisfiability solving\",\n        \"Using weighted MaxSAT engines to solve MPE\",\n        \"Bayesian networks: a model cf self-activated memory for evidential reasoning\",\n        \"UWrMaxSat: efficient solver for MaxSAT and pseudo-Boolean problems\",\n        \"CNF encodings\",\n        \"Graph minors. X. Obstructions to tree-decomposition\",\n        \"Solving# SAT and MaxSAT by dynamic programming\",\n        \"Combining component caching and clause learning for effective model counting\",\n        \"Performing Bayesian inference by weighted model counting\",\n        \"A dynamic approach for MPE and weighted MaxSAT\",\n        \"Probabilistic diagnosis using a reformulation of the INTERNIST-1/QMR knowledge base\",\n        \"CUDD: CU decision diagram package‚Äìrelease 3.0.0.\",\n        \"Tinted, detached, and lazy CNF-XOR solving and its applications to counting and sampling\",\n        \"BIRD: engineering an efficient CNF-XOR SAT solver and its applications to approximate model counting\",\n        \"Gaussian elimination meets Maximum Satisfiability\",\n        \"Extending SAT solvers to cryptographic problems\",\n        \"Computing tree decompositions with FlowCutter: PACE 2017 submission\",\n        \"On the complexity of derivation in propositional calculus\",\n        \"The complexity of enumeration and reliability problems\",\n        \"Sylvan: multi-core decision diagrams\",\n        \"SATzilla: portfolio-based algorithm selection for SAT\",\n        \"Engineering an Efficient PB-XOR Solver\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in DPO: Dynamic-Programming Optimization on Hybrid Constraints11footnote 1Work supported in part by NSF grants IIS-1527668, CCF-1704883, IIS-1830549, and CNS-2016656; DoD MURI grant N00014-20-1-2787; and an award from the Maryland Procurement Office., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}