{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: HAT: Hardware-Aware Transformers for Efficient Natural Language Processing\n\nPaper Abstract: Abstract Transformers are ubiquitous in Natural Language Processing (NLP) tasks, but they are difficult to be deployed on hardware due to the intensive computation. To enable low-latency inference on resource-constrained hardware platforms, we propose to design Hardware-Aware Transformers (HAT) with neural architecture search. We first construct a large design space with arbitrary encoder-decoder attention and heterogeneous layers. Then we train a SuperTransformer that covers all candidates in the design space, and efficiently produces many SubTransformers with weight sharing. Finally, we perform an evolutionary search with a hardware latency constraint to find a specialized SubTransformer dedicated to run fast on the target hardware. Extensive experiments on four machine translation tasks demonstrate that HAT can discover efficient models for different hardware (CPU, GPU, IoT device). When running WMT’14 translation task on Raspberry Pi-4, HAT can achieve 3×\\times speedup, 3.7×\\times smaller size over baseline Transformer; 2.7×\\times speedup, 3.6×\\times smaller size over Evolved Transformer with 12,041×\\times less search cost and no performance loss. HAT is open-sourced at https://github.com/mit-han-lab/hardware-aware-transformers.git.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Syntactically supervised transformers for faster neural machine translation\",\n        \"Training deeper neural machine translation models with transparent attention\",\n        \"Understanding and simplifying one-shot architecture search\",\n        \"Once for all: Train one network and specialize it for efficient deployment\",\n        \"ProxylessNAS: Direct neural architecture search on target task and hardware\",\n        \"The best of both worlds: Combining recent advances in neural machine translation\",\n        \"Understanding performance differences of fpgas and gpus\",\n        \"Convolutional sequence to sequence learning\",\n        \"Efficient softmax approximation for GPUs\",\n        \"Non-autoregressive neural machine translation\",\n        \"Levenshtein Transformer\",\n        \"Single path one-shot neural architecture search with uniform sampling\",\n        \"A^ 3: Accelerating attention mechanisms in neural networks with approximation\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Microsoft’s submission to the wmt2018 news translation task: How i learned to stop worrying and love the data\",\n        \"Microsoft translator at wmt 2019: Towards large-scale document-level neural machine translation\",\n        \"Marian: Cost-effective high-quality neural machine translation in C++\",\n        \"Convolutional neural networks for sentence classification\",\n        \"Sequence-level knowledge distillation\",\n        \"From research to production and back: Ludicrously fast neural machine translation\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"DARTS: Differentiable architecture search\",\n        \"SGDR: Stochastic Gradient Descent with Warm Restarts\",\n        \"Park: An open platform for learning-augmented computer systems\",\n        \"Facebook FAIR’s WMT19 news translation task submission\",\n        \"fairseq: A fast, extensible toolkit for sequence modeling\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"A call for clarity in reporting bleu scores\",\n        \"The evolved transformer\",\n        \"Energy and policy considerations for deep learning in NLP\",\n        \"Adaptive attention span in transformers\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Attention is all you need\",\n        \"Analyzing multi-head self-attention: Specialized heads do the heavy lifting, the rest can be pruned\",\n        \"Gcn-rl circuit designer: Transferable transistor sizing with graph neural networks and reinforcement learning\",\n        \"Learning to design circuits\",\n        \"Learning deep transformer models for machine translation\",\n        \"Apq: Joint search for network architecture, pruning and quantization policy\",\n        \"Imitation learning for non-autoregressive neural machine translation\",\n        \"Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search\",\n        \"Pay less attention with lightweight and dynamic convolutions\",\n        \"Lite transformer with long-short range attention\",\n        \"Micronet for efficient language modeling\",\n        \"Accelerating neural transformer via an average attention network\",\n        \"Sparch: Efficient architecture for sparse matrix multiplication\",\n        \"Neural Architecture Search with Reinforcement Learning\",\n        \"Learning Transferable Architectures for Scalable Image Recognition\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in HAT: Hardware-Aware Transformers for Efficient Natural Language Processing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}