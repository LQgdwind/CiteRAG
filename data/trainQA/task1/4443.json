{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 63 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Deep Synoptic Monte Carlo Planning in Reconnaissance Blind Chess\n\nPaper Abstract: Abstract This paper introduces deep synoptic Monte Carlo planning (DSMCP) for large imperfect information games. The algorithm constructs a belief state with an unweighted particle filter and plans via playouts that start at samples drawn from the belief state. The algorithm accounts for uncertainty by performing inference on “synopses,” a novel stochastic abstraction of information states. DSMCP is the basis of the program Penumbra, which won the official 2020 reconnaissance blind chess competition versus 33 other programs. This paper also evaluates algorithm variants that incorporate caution, paranoia, and a novel bandit algorithm. Furthermore, it audits the synopsis features used in Penumbra with per-bit saliency statistics.\n\n{retrieved_text}\n\nGenerate exactly 63 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 63\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Sanity checks for saliency maps\",\n        \"Corralling stochastic bandit algorithms\",\n        \"Baseline bots\",\n        \"Checkpoint variations for deep q-learning in reconnaissance blind chess\",\n        \"Rational and convergent learning in stochastic games\",\n        \"Superhuman ai for heads-up no-limit poker: Libratus beats top professionals\",\n        \"Superhuman ai for multiplayer poker\",\n        \"Deep counterfactual regret minimization\",\n        \"Combining deep reinforcement learning and search for imperfect-information games\",\n        \"Bitboard methods for games\",\n        \"Monte carlo tree search techniques in the game of kriegspiel\",\n        \"Whole-history rating: A bayesian rating system for players of time-varying strength\",\n        \"Information set monte carlo tree search\",\n        \"Measuring and harnessing transference in multi-task learning\",\n        \"Finding optimal strategies for imperfect information games\",\n        \"The first international competition in machine reconnaissance blind chess\",\n        \"Deep residual learning for image recognition\",\n        \"Smooth uct search in computer poker\",\n        \"Deep reinforcement learning from self-play in imperfect-information games\",\n        \"Dealing with uncertainty: A piecewisegrid agent for reconnaissance blind chess\",\n        \"A benchmark for interpretability methods in deep neural networks\",\n        \"Xrai: Better attributions through regions\",\n        \"Bandit based monte-carlo planning\",\n        \"Algorithms for multi-armed bandit problems\",\n        \"Monte carlo sampling for regret minimization in extensive games\",\n        \"No-regret learning in extensive-form games with imperfect recall\",\n        \"Minigo: A case study in reproducing reinforcement learning research\",\n        \"Online monte carlo counterfactual regret minimization for search in imperfect information games\",\n        \"An intriguing failing of convolutional neural networks and the coordconv solution\",\n        \"Understanding the success of perfect information monte carlo sampling in game tree search\",\n        \"On the complexity of reconnaissance blind chess\",\n        \"Playing atari with deep reinforcement learning\",\n        \"Deepstack: Expert-level artificial intelligence in heads-up no-limit poker\",\n        \"An introduction to counterfactual regret minimization\",\n        \"Reconnaissance blind multi-chess: an experimentation platform for ISR sensor fusion and resource management\",\n        \"A Course in Game Theory\",\n        \"Overconfidence or paranoia? search in imperfect-information games\",\n        \"Paranoia versus overconfidence in imperfect-information games\",\n        \"Anytime point-based approximations for large pomdps\",\n        \"Computing approximate nash equilibria and robust best-responses using sampling\",\n        \"Reasoning and decisions in partially observable games\",\n        \"Stockfish - open source chess engine\",\n        \"Learning Internal Representations by Error Propagation\",\n        \"Artificial Intelligence: A Modern Approach\",\n        \"Mastering reconnaissance blind chess with reinforcement learning\",\n        \"Mastering atari, go, chess and shogi by planning with a learned model\",\n        \"Monte-carlo planning in large pomdps\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Mastering the game of go without human knowledge\",\n        \"Mastering chess and shogi by self-play with a general reinforcement learning algorithm\",\n        \"Smoothgrad: removing noise by adding noise\",\n        \"Axiomatic attribution for deep networks\",\n        \"The bitter lesson\",\n        \"Elf opengo: An analysis and open reimplementation of alphazero\",\n        \"Assessing game balance with alphazero: Exploring alternative rule sets in chess\",\n        \"On the limitations of representing functions on sets\",\n        \"Dualsmc: Tunneling differentiable filtering and planning under continuous pomdps\",\n        \"A practical use of imperfect recall\",\n        \"Accelerating self-play learning in go\",\n        \"Deep sets\",\n        \"To balance or not to balance: A simple-yet-effective approach for learning with long-tailed distributions\",\n        \"Regret minimization in games with incomplete information\",\n        \"A new hashing method with application for game playing\"\n    ],\n    \"reasoning\": \"Selected these 63 references because they represent foundational work and recent advances in Deep Synoptic Monte Carlo Planning in Reconnaissance Blind Chess, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}