{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Algorithmic Strategies for Sustainable Reuse of Neural Network Accelerators with Permanent Faults\n\nPaper Abstract: Abstract Hardware failures are a growing challenge for machine learning accelerators, many of which are based on systolic arrays. When a permanent hardware failure occurs in a systolic array, existing solutions include localizing and isolating the faulty processing element (PE), using a redundant PE for re-execution, or in some extreme cases decommissioning the entire accelerator for further investigation. In this paper, we propose novel algorithmic approaches that mitigate permanent hardware faults in neural network (NN) accelerators by uniquely integrating the behavior of the faulty component instead of bypassing it. In doing so, we aim for a more sustainable use of the accelerator where faulty hardware is neither bypassed nor discarded, instead being given a second life. We first introduce a CUDA-accelerated systolic array simulator in PyTorch, which enabled us to quantify the impact of permanent faults appearing on links connecting two PEs or in weight registers, where one bit is stuck at 0 or 1 in the float32, float16, or bfloat16 representation. We then propose several algorithmic mitigation techniques for a subset of stuck-at faults, such as Invertible Scaling or Shifting of activations and weights, or fine tuning with the faulty behavior. Notably, the proposed techniques do not require any hardware modification, instead relying on existing components of widely used systolic array based accelerators, such as normalization, activation, and storage units. Extensive experimental evaluations using fully connected and convolutional NNs trained on MNIST, CIFAR-10 and ImageNet show that the proposed fault-tolerant approach matches or gets very close to the original fault-free accuracy.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Minerva: Enabling low-power, highly-accurate deep neural network accelerators\",\n        \"Intellinoc: A holistic design framework for energy-efficient and reliable on-chip communication for manycores\",\n        \"Cure: A high-performance, low-power, and reliable network-on-chip design using reinforcement learning\",\n        \"A versatile and flexible chiplet-based system design for heterogeneous manycore architectures\",\n        \"Adapt-noc: A flexible network-on-chip design for heterogeneous manycore architectures\",\n        \"Training in turmoil: Silent data corruption in systems at scale\",\n        \"Ascend: A scalable and energy-efficient deep neural network accelerator with photonic interconnects\",\n        \"Built-in test for VLSI: pseudorandom techniques\",\n        \"Mozart: Masking outputs with zeros for architectural robustness and testing of dnn accelerators\",\n        \"Cooperative built-in self-testing and self-diagnosis of noc bisynchronous channels\",\n        \"On the design and analysis of fault tolerant noc architecture using spare routers\",\n        \"Eyeriss: An energy-efficient reconfigurable accelerator for deep convolutional neural networks\",\n        \"A low-cost fault corrector for deep neural networks through range restriction\",\n        \"Numerical accuracy\",\n        \"Detecting silent data corruptions in the wild\",\n        \"An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale\",\n        \"Random-pattern coverage enhancement and diagnosis for lssd logic self-test\",\n        \"Gemmini: Enabling systematic deep-learning architecture evaluation via full-stack integration\",\n        \"Bist for network-on-chip interconnect infrastructures\",\n        \"Understanding and Mitigating Hardware Failures in Deep Learning Training Systems\",\n        \"Cores that donâ€™t count\",\n        \"A neural algorithm for reconstructing mesh-connected processor arrays using single-track switches\",\n        \"Gcnax: A flexible and energy-efficient accelerator for graph convolutional neural networks\",\n        \"SGCNAX: A scalable graph convolutional neural network accelerator with workload balancing\",\n        \"Technological Elements of Circular Economy and the Principles of 6R-Based Closed-loop Material Flow in Sustainable Manufacturing\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"High-performance, energy-efficient, fault-tolerant network-on-chip design using reinforcement learning\",\n        \"Cost-effective generation of minimal test sets for stuck-at faults in combinational logic circuits\",\n        \"A study of bfloat16 for deep learning training\",\n        \"ImageNet Classification with Deep Convolutional Neural Networks\",\n        \"Why systolic architectures?\",\n        \"Locst: A built-in self-test technique\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Special feature: Semiconductor memory reliability with error detecting and correcting codes\",\n        \"Understanding error propagation in deep learning neural network (dnn) accelerators and applications\",\n        \"Squeezing the last mhz for cnn acceleration on FPGAs\",\n        \"A scalable built-in self-test/self-diagnosis architecture for 2d-mesh based chip multiprocessor systems\",\n        \"Artificial Intelligence and Hardware Accelerators\",\n        \"Error detection by duplicated instructions in super-scalar processors\",\n        \"Gpu asynchronous stochastic gradient descent to speed up neural network training, corr abs/1312.6186\",\n        \"Stuck-at fault: a fault model for the next millennium\",\n        \"Utilizing noc switches as bist structures in 2d-mesh network-on-chips\",\n        \"On the resilience of rtl nn accelerators: Fault characterization and mitigation\",\n        \"Applying tmr in hardware accelerators generated by high-level synthesis design flow for mitigating multiple bit upsets in sram-based FPGAs\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"A built-in circuit for self-repairing mesh-connected processor arrays with spares on diagonal\",\n        \"A fault-tolerant noc scheme using bidirectional channel\",\n        \"Attention is All you Need\",\n        \"AGAPE: anomaly detection with generative adversarial network for improved performance, energy, and security in manycore systems\",\n        \"A pedestrian and vehicle rapid identification model based on convolutional neural network\",\n        \"Resilient neural network training for accelerators with computing errors\",\n        \"Fat: Training neural networks for reliable inference under hardware faults\",\n        \"Analyzing and mitigating the impact of permanent faults on a systolic array based neural network accelerator\",\n        \"Research on NVIDIA deep learning accelerator\",\n        \"Parallelized Stochastic Gradient Descent\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Algorithmic Strategies for Sustainable Reuse of Neural Network Accelerators with Permanent Faults, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}