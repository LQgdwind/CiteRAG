{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 66 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Comprehensive Tutorial on over 100 Years of Diagrammatic Representations of Logical Statements and Relational Queries\n\nPaper Abstract: Abstract Query formulation is increasingly performed by systems that need to guess a user’s intent (e.g. via spoken word interfaces). But how can a user know that the computational agent is returning answers to the “right” query? More generally, given that relational queries can become pretty complicated, how can we help users understand relational queries, whether human-generated or automatically generated? Now seems the right moment to revisit a topic that predates the birth of the relational model: developing visual metaphors that help users understand relational queries. This lecture-style tutorial surveys the key visual metaphors developed for diagrammatic representations of logical statements and relational expressions, across both the relational database and the much older diagrammatic reasoning communities. We survey the history and state-of-the-art of relationally-complete diagrammatic representations of relational queries, discuss the key visual metaphors developed in over a century of investigations into diagrammatic languages, and organize the landscape by mapping the visual alphabets of diagrammatic representation systems to the syntax and semantics of Relational Algebra (RA) and Relational Calculus (RC). Tutorial website: https://northeastern-datalab.github.io/diagrammatic-representation-tutorial/\n\n{retrieved_text}\n\nGenerate exactly 66 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 66\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"“Dataplay: interactive tweaking and example-driven correction of graphical database queries\",\n        \"Dataplay: interactive tweaking and example-driven correction of graphical database queries\",\n        \"Active Query Builder\",\n        \"QBD*: A graphical query language with recursion\",\n        \"Query by diagram: A fully visual query system\",\n        \"Expressive query construction through direct manipulation of nested relational results\",\n        \"STRATISFIMAL LAYOUT: A modular optimization model for laying out layered node-link network visualizations\",\n        \"Data-driven visual query interfaces for graphs: Past, present, and (near) future\",\n        \"Graph querying meets HCI: state of the art and future directions\",\n        \"Diagrammatic algebra of first order logic\",\n        \"Visual query systems for databases: A survey\",\n        \"Query by diagram: A graphical environment for querying databases\",\n        \"User-database interface: The effect of abstraction levels on query performance\",\n        \"DFQL: Dataflow query language for relational databases\",\n        \"The semantics of sketch: Flexibility in visual query systems for time series data\",\n        \"Queryviz: Helping users understand SQL queries and their patterns\",\n        \"dbForge\",\n        \"The tabletalk query language\",\n        \"Letters of Euler to a German princess, on different subjects in physics and philosophy addressed to a German Princess, Letters 103-106, 2nd ed. Translated by Henry Hunter\",\n        \"Towards a default reading for constraint diagrams\",\n        \"UML Distilled: A Brief Guide to the Standard Object Modeling Language, 3rd ed.\",\n        \"Begriffsschrift, eine der arithmetischen nachgebildete Formelsprache des reinen Denkens.\",\n        \"Text-to-SQL empowered by large language models: A benchmark evaluation\",\n        \"Databases will visualize queries too\",\n        \"Interpreting and understanding relational database queries using diagrams\",\n        \"A tutorial on visual representations of relational queries\",\n        \"On the reasonable effectiveness of Relational Diagrams: Explaining relational query patterns and the pattern expressiveness of relational languages\",\n        \"Principles of query visualization\",\n        \"Constraint diagrams: A step beyond UML\",\n        \"On visual formalisms\",\n        \"The effects of using a nonprocedural computer language on programmer productivity\",\n        \"Compositional diagrammatic first-order logic\",\n        \"Grundzüge der theoretischen Logik. By.\",\n        \"Diagrammatic reasoning systems\",\n        \"Visual SQL – high-quality er-based query treatment\",\n        \"A framework for choosing a database query language\",\n        \"Constraint diagrams: Visualizing invariants in object-oriented models\",\n        \"An algebraic process for visualization design\",\n        \"Writings of Charles S. Peirce: A Chronological Edition, Volume 4: 1879–1884\",\n        \"You can’t always sketch what you want: Understanding sensemaking in visual query systems\",\n        \"An empirical investigation of voice as an input modality for computer programming\",\n        \"Queryvis: Logic-based diagrams help users understand complicated SQL queries faster\",\n        \"Expressive time series querying with hand-drawn scale-free sketches\",\n        \"Microsoft Access\",\n        \"SQLVis: Visual query representations for supporting SQL learners\",\n        \"A visual query language for graphical interaction with schema-intensive databases\",\n        \"Gestural query specification\",\n        \"Collected papers of Charles Sanders Peirce. vol. 4\",\n        \"pgAdmin\",\n        \"A survey on text-to-SQL parsing: Concepts, methods, and future directions\",\n        \"QueryScope\",\n        \"Database management systems, 2nd ed.\",\n        \"Human factors studies of database query languages: A survey and assessment\",\n        \"Human factors evaluation of two data base query languages: Square and sequel\",\n        \"The existential graphs\",\n        \"The Logical Status of Diagrams\",\n        \"The Iconic Logic of Peirce’s Graphs\",\n        \"Conceptual graphs for a data base interface\",\n        \"SQL Server Management Studio\",\n        \"Towards democratizing relational data visualization\",\n        \"Optimal join algorithms meet top-k\",\n        \"Toward responsive DBMS: optimal join algorithms, enumeration, factorization, ranking, and dynamic programming\",\n        \"I. on the diagrammatic and mechanical representation of propositions and reasonings\",\n        \"The end of programming\",\n        \"Human factors comparison of a procedural and a nonprocedural query language\",\n        \"A human factors experimental comparison of SQL and QBE\"\n    ],\n    \"reasoning\": \"Selected these 66 references because they represent foundational work and recent advances in A Comprehensive Tutorial on over 100 Years of Diagrammatic Representations of Logical Statements and Relational Queries, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}