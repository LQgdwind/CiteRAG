{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Testing the Channels of Convolutional Neural Networks\n\nPaper Abstract: Abstract Neural networks have complex structures, and thus it is hard to understand their inner workings and ensure correctness. To understand and debug convolutional neural networks (CNNs) we propose techniques for testing the channels of CNNs. We design FtGAN, an extension to GAN, that can generate test data with varying the intensity (i.e., sum of the neurons) of a channel of a target CNN. We also proposed a channel selection algorithm to find representative channels for testing. To efficiently inspect the target CNNâ€™s inference computations, we define unexpectedness score, which estimates how similar the inference computation of the test data is to that of the training data. We evaluated FtGAN with five public datasets and showed that our techniques successfully identify defective channels in five different CNN models.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Wasserstein gan\",\n        \"Structure Preserving Reductions among Convex Optimization Problems\",\n        \"Slow, decorrelated features for pretraining complex cell-like networks\",\n        \"Unrestricted adversarial examples via semantic manipulation\",\n        \"Towards evaluating the robustness of neural networks\",\n        \"Morpho-MNIST: Quantitative Assessment and Diagnostics for Representation Learning\",\n        \"Infogan: Interpretable representation learning by information maximizing generative adversarial nets\",\n        \"End-to-end Driving via Conditional Imitation Learning\",\n        \"The GAN That Warped: Semantic Attribute Editing With Unpaired Data\",\n        \"Carving differential unit test cases from system test cases\",\n        \"RacerX: Effective, static detection of race conditions and deadlocks\",\n        \"Bugs as deviant behavior: A general approach to inferring errors in systems code\",\n        \"The Daikon system for dynamic detection of likely invariants\",\n        \"Extended static checking for Java\",\n        \"Image Style Transfer Using Convolutional Neural Networks\",\n        \"Importance-driven deep learning system testing\",\n        \"Test generation through programming in UDITA\",\n        \"Explaining and harnessing adversarial examples\",\n        \"Improved training of wasserstein gans\",\n        \"Dowsing for Overflows: A Guided Fuzzer to Find Buffer Boundary Violations\",\n        \"Tracking down software bugs using automatic anomaly detection\",\n        \"Automatic dimension inference and checking for object-oriented programs\",\n        \"Canonical correlation analysis: An overview with application to learning methods\",\n        \"Deep residual learning for image recognition\",\n        \"Attgan: Facial attribute editing by only changing what you want\",\n        \"Relations between two sets of variates\",\n        \"Arbitrary style transfer in real-time with adaptive instance normalization\",\n        \"Manipulating machine learning: Poisoning attacks and countermeasures for regression learning\",\n        \"Semantic adversarial attacks: Parametric transformations that fool deep classifiers\",\n        \"Testing robustness against unforeseen adversaries\",\n        \"Reluplex: An efficient SMT solver for verifying deep neural networks\",\n        \"Adversarial examples in the physical world\",\n        \"Convergent learning: Do different neural networks learn the same representations?\",\n        \"Deepgauge: Multi-granularity testing criteria for deep learning systems\",\n        \"Towards deep learning models resistant to adversarial attacks\",\n        \"Finding application errors and security flaws using PQL: a program query language\",\n        \"Deepfool: a simple and accurate method to fool deep neural networks\",\n        \"Insights on representational similarity in neural networks with canonical correlation\",\n        \"Tensorfuzz: Debugging neural networks with coverage-guided fuzzing\",\n        \"Deepxplore: Automated whitebox testing of deep learning systems\",\n        \"SemanticAdv: Generating adversarial examples via attribute-conditional image editing\",\n        \"Svcca: Singular vector canonical correlation analysis for deep learning dynamics and interpretability\",\n        \"Model-based exploration of the frontier of behaviours for deep learning system testing\",\n        \"Regularizing cnns with locally constrained decorrelations\",\n        \"Loop-extended symbolic execution on binary programs\",\n        \"Grad-cam: Visual explanations from deep networks via gradient-based localization\",\n        \"Testing deep neural networks\",\n        \"Going deeper with convolutions\",\n        \"Intriguing properties of neural networks\",\n        \"RelGAN: Multi-Domain Image-to-Image Translation via Relative Attributes\",\n        \"Spatially transformed adversarial examples\",\n        \"Deephunter: A coverage-guided fuzz testing framework for deep neural networks\",\n        \"Archer: using symbolic, path-sensitive analysis to detect memory access errors\",\n        \"Towards feature space adversarial attack\",\n        \"Stackgan: Text to photo-realistic image synthesis with stacked generative adversarial networks\",\n        \"Pipeline generative adversarial networks for facial images generation with multiple attributes\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Testing the Channels of Convolutional Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}