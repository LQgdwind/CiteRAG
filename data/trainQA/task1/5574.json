{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: How Many Data Samples is an Additional Instruction Worth?\n\nPaper Abstract: Abstract Recently introduced instruction-paradigm empowers non-expert users to leverage NLP resources by defining a new task in natural language. Instruction-tuned models have significantly outperformed multitask learning models (without instruction); however they are far from state-of-the-art task-specific models. Conventional approaches to improve model performance via creating datasets with large number of task instances or architectural changes in the model may not be feasible for non-expert users. However, they can write alternate instructions to represent an instruction task. Is Instruction-augmentation helpful? We augment a subset of tasks in the expanded version of Natural Instructions with additional instructions and find that it significantly improves model performance (up to 35%), especially in the low-data regime. Our results indicate that an additional instruction can be equivalent to ∼similar-to\\sim200 data samples on average across tasks.111Code and dataset is available at https://github.com/Ravsehajsinghpuri/Multi-Variant-Instructions\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The handbook of brain theory and neural networks\",\n        \"Adaprompt: Adaptive prompt-based finetuning for relation extraction\",\n        \"Template-based named entity recognition using bart\",\n        \"Nl-augmenter: A framework for task-sensitive natural language augmentation\",\n        \"The turking test: Can language models understand instructions?\",\n        \"A survey of data augmentation approaches for nlp\",\n        \"Towards general purpose vision systems\",\n        \"Annotation artifacts in natural language inference data\",\n        \"When can models learn from explanations? a formal framework for understanding the roles of explanation data\",\n        \"Certified robustness to adversarial word substitutions\",\n        \"How can we know what language models know?\",\n        \"Less is more: Summary of long instructions is better for program synthesis\",\n        \"Generalization without systematicity: On the compositional skills of sequence-to-sequence recurrent networks\",\n        \"How many data points is a prompt worth?\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Rouge: A package for automatic evaluation of summaries\",\n        \"Few-shot learning with multilingual language models\",\n        \"Pre-train, prompt, and predict: A systematic survey of prompting methods in natural language processing\",\n        \"Biotabqa: Instruction learning for biomedical table question answering\",\n        \"Metaicl: Learning to learn in context\",\n        \"Dqi: Measuring data quality in nlp\",\n        \"Reframing instructional prompts to gptk’s language\",\n        \"Cross-task generalization via natural language crowdsourcing instructions\",\n        \"Help me think: A simple prompting strategy for non-experts to create customized content with models\",\n        \"Training language models to follow instructions with human feedback\",\n        \"In-BoXBART: Get instructions into biomedical multi-task learning\",\n        \"Is a question decomposition unit all we need?\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Know what you don’t know: Unanswerable questions for squad\",\n        \"A recipe for arbitrary text style transfer with large language models\",\n        \"Tailor: Generating and perturbing text with semantic controls\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Multitask prompted training enables zero-shot task generalization\",\n        \"Exploiting cloze questions for few shot text classification and natural language inference\",\n        \"Attention is all you need\",\n        \"Instructionner: A multi-task instruction-based generative framework for few-shot ner\",\n        \"Super-NaturalInstructions: Generalization via declarative instructions on 1600+ NLP tasks\",\n        \"Finetuned language models are zero-shot learners\",\n        \"Learning from task descriptions\",\n        \"Towards ai-complete question answering: A set of prerequisite toy tasks\",\n        \"Huggingface’s transformers: State-of-the-art natural language processing\",\n        \"Ai chains: Transparent and controllable human-ai interaction by chaining large language model prompts\",\n        \"Zero-shot learning by generating task-specific adapters\",\n        \"Benchmarking zero-shot text classification: Datasets, evaluation and entailment approach\",\n        \"Adapting language models for zero-shot learning by meta-tuning on dataset and prompt collections\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in How Many Data Samples is an Additional Instruction Worth?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}