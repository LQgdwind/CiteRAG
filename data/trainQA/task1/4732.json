{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Get a Model! Model Hijacking Attack Against Machine Learning Models\n\nPaper Abstract: Abstract Machine learning (ML) has established itself as a cornerstone for various critical applications ranging from autonomous driving to authentication systems. However, with this increasing adoption rate of machine learning models, multiple attacks have emerged. One class of such attacks is training time attack, whereby an adversary executes their attack before or during the machine learning model training. In this work, we propose a new training time attack against computer vision based machine learning models, namely model hijacking attack. The adversary aims to hijack a target model to execute a different task than its original one without the model owner noticing. Model hijacking can cause accountability and security risks since a hijacked model owner can be framed for having their model offering illegal or unethical services. Model hijacking attacks are launched in the same way as existing data poisoning attacks. However, one requirement of the model hijacking attack is to be stealthy, i.e., the data samples used to hijack the target model should look similar to the model’s original training dataset. To this end, we propose two different model hijacking attacks, namely Chameleon and Adverse Chameleon, based on a novel encoder-decoder style ML model, namely the Camouflager. Our evaluation shows that both of our model hijacking attacks achieve a high attack success rate, with a negligible drop in model utility.111Code for our experiments is available at https://github.com/AhmedSalem2/Model-Hijacking.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Poisoning Attacks against Support Vector Machines\",\n        \"Adversarial Attacks on Node Embeddings via Graph Poisoning\",\n        \"Towards Federated Learning at Scale: System Design\",\n        \"The Secret Sharer: Evaluating and Testing Unintended Memorization in Neural Networks\",\n        \"Towards Evaluating the Robustness of Neural Networks\",\n        \"BadNL: Backdoor Attacks Against NLP Models with Semantic-preserving Improvements\",\n        \"Adversarial Reprogramming of Neural Networks\",\n        \"Model Inversion Attacks that Exploit Confidence Information and Basic Countermeasures\",\n        \"Privacy in Pharmacogenetics: An End-to-End Case Study of Personalized Warfarin Dosing\",\n        \"Badnets: Identifying Vulnerabilities in the Machine Learning Model Supply Chain\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Manipulating Machine Learning: Poisoning Attacks and Countermeasures for Regression Learning\",\n        \"AttriGuard: A Practical Defense Against Attribute Inference Attacks via Adversarial Machine Learning\",\n        \"MemGuard: Defending against Black-Box Membership Inference Attacks via Adversarial Examples\",\n        \"Scalable Optimization of Randomized Operational Decisions in Adversarial Classification Settings\",\n        \"Trojaning Attack on Neural Networks\",\n        \"Reflection Backdoor: A Natural Backdoor Attack on Deep Neural Networks\",\n        \"Deep Learning Face Attributes in the Wild\",\n        \"Towards Reverse-Engineering Black-Box Neural Networks\",\n        \"Adversarial Image Perturbation for Privacy Protection – A Game Theory Perspective\",\n        \"Knockoff Nets: Stealing Functionality of Black-Box Models\",\n        \"Practical Black-Box Attacks Against Machine Learning\",\n        \"The Limitations of Deep Learning in Adversarial Settings\",\n        \"TBT: Targeted Neural Network Attack with Bit Trojan\",\n        \"Hidden Trigger Backdoor Attacks\",\n        \"Updates-Leak: Data Set Inference and Reconstruction Attacks in Online Learning\",\n        \"Dynamic Backdoor Attacks Against Machine Learning Models\",\n        \"ML-Leaks: Model and Data Independent Membership Inference Attacks and Defenses on Machine Learning Models\",\n        \"MobileNetV2: Inverted Residuals and Linear Bottlenecks\",\n        \"You Autocomplete Me: Poisoning Vulnerabilities in Neural Code Completion\",\n        \"Poison Frogs! Targeted Clean-Label Poisoning Attacks on Neural Networks\",\n        \"Membership Inference Attacks Against Machine Learning Models\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"When Does Machine Learning FAIL? Generalized Transferability for Evasion and Poisoning Attacks\",\n        \"Data Poisoning Attack against Unsupervised Node Embedding Methods\",\n        \"Going Deeper with Convolutions\",\n        \"MnasNet: Platform-Aware Neural Architecture Search for Mobile\",\n        \"An Embarrassingly Simple Approach for Trojan Attack in Deep Neural Networks\",\n        \"Data Poisoning Attacks Against Federated Learning Systems\",\n        \"Ensemble Adversarial Training: Attacks and Defenses\",\n        \"Stealing Machine Learning Models via Prediction APIs\",\n        \"Visualizing Data using t-SNE\",\n        \"Optimal Randomized Classification in Adversarial Settings\",\n        \"Stealing Hyperparameters in Machine Learning\",\n        \"Attack of the Tails: Yes, You Really Can Backdoor Federated Learning\",\n        \"Feature Squeezing: Detecting Adversarial Examples in Deep Neural Networks\",\n        \"Latent Backdoor Attacks on Deep Neural Networks\",\n        \"Privacy Risk in Machine Learning: Analyzing the Connection to Overfitting\",\n        \"Practical Data Poisoning Attack against Next-Item Recommendation\",\n        \"Tagvisor: A Privacy Advisor for Sharing Hashtags\",\n        \"The Secret Revealer: Generative Model-Inversion Attacks Against Deep Neural Networks\",\n        \"Clean-Label Backdoor Attacks on Video Recognition Models\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Get a Model! Model Hijacking Attack Against Machine Learning Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}