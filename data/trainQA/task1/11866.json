{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: modOpt: A modular development environment and library for optimization algorithms\n\nPaper Abstract: Abstract Applications of numerical optimization have appeared across a broad range of research fields, from finance and economics to the natural sciences and engineering. It is well known that the optimization techniques employed in each field are specialized to suit their problems. Recent advances in computing hardware and modeling software have given rise to new applications for numerical optimization. These new applications occasionally uncover bottlenecks in existing optimization algorithms and necessitate further specialization of the algorithms. However, such specialization requires expert knowledge of the underlying mathematical theory and the software implementation of existing algorithms. To address this challenge, we present modOpt, an open-source software framework that facilitates the construction of optimization algorithms from modules. The modular environment provided by modOpt enables developers to tailor an existing algorithm for a new application by only altering the relevant modules. modOpt is designed as a platform to support students and beginner developers in quickly learning and developing their own algorithms. With that aim, the entirety of the framework is written in Python, and it is well-documented, well-tested, and hosted open-source on GitHub. Several additional features are embedded into the framework to assist both beginner and advanced developers. In addition to providing stock modules, the framework also includes fully transparent implementations of pedagogical optimization algorithms in Python. To facilitate testing and benchmarking of new algorithms, the framework features built-in visualization and recording capabilities, interfaces to modeling frameworks such as OpenMDAO and CSDL, interfaces to general-purpose optimization algorithms such as SNOPT and SLSQP, an interface to the CUTEst test problem set, etc. In this paper, we present the underlying software architecture of modOpt, review its various features, discuss several educational and performance-oriented algorithms within modOpt, and present numerical studies illustrating its unique benefits.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"No free lunch theorems for optimization\",\n        \"Simple explanation of the no-free-lunch theorem and its implications\",\n        \"OpenMDAO: An open-source framework for multidisciplinary design, analysis, and optimization\",\n        \"A modular adjoint approach to aircraft mission analysis and optimization\",\n        \"Optimization of turbine engine cycle analysis with analytic derivatives\",\n        \"Large-scale MDO of a small satellite using a novel framework for the solution of coupled systems and their derivatives\",\n        \"Understanding the benefits and limitations of increasing maximum rotor tip speed for utility-scale wind turbines\",\n        \"On the performance of SQP methods for nonlinear optimization\",\n        \"CasADi – A software framework for nonlinear optimization and optimal control\",\n        \"JAX: composable transformations of Python+NumPy programs\",\n        \"A graph-based methodology for constructing computational models that automates adjoint-based sensitivity analysis\",\n        \"CUTEst: a constrained and unconstrained testing environment with safe threads for mathematical optimization\",\n        \"AMPL. A modeling language for mathematical programming\",\n        \"GAMS – A User’s Guide\",\n        \"Pyomo: modeling and solving mathematical programs in Python\",\n        \"JuMP: A modeling language for mathematical optimization\",\n        \"Large-Scale Multidisciplinary Design Optimization of an eVTOL Aircraft using Comprehensive Analysis\",\n        \"Large-scale multidisciplinary design optimization of a NASA air taxi concept using a comprehensive physics-based system model\",\n        \"A software package for sequential quadratic programming\",\n        \"SNOPT: An SQP algorithm for large-scale constrained optimization\",\n        \"On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming\",\n        \"An interior-point algorithm for nonconvex nonlinear programming\",\n        \"An interior point algorithm for large-scale nonlinear programming\",\n        \"A scalable framework for large-scale 3D multimaterial topology optimization with octree-based mesh adaptation\",\n        \"Particle swarm optimization\",\n        \"Genetic algorithms\",\n        \"Optimization by simulated annealing\",\n        \"SciPy 1.0: fundamental algorithms for scientific computing in Python\",\n        \"pyOpt: a Python-based object-oriented framework for nonlinear constrained optimization\",\n        \"pyOptSparse: A Python framework for large-scale constrained nonlinear optimization of sparse systems\",\n        \"CVXOPT: Convex Optimization\",\n        \"qpsolvers: Quadratic Programming Solvers in Python\",\n        \"User guide for MINPACK-1.[In FORTRAN]\",\n        \"PyCUTEst: an open source Python package of optimization test problems\",\n        \"Engineering design optimization\",\n        \"Numerical optimization\",\n        \"A simplex method for function minimization\",\n        \"The nonlinear programming method of Wilson, Han, and Powell with an augmented Lagrangian type line search function: Part 2: An efficient implementation with linear least squares subproblems\",\n        \"Solving least squares problems\",\n        \"PySLSQP: A transparent Python package for the SLSQP optimization algorithm modernized with utilities for visualization and post-processing\",\n        \"On the implementation of an algorithm for large-scale equality constrained optimization\",\n        \"Trust region methods\",\n        \"A limited memory algorithm for bound constrained optimization\",\n        \"Representations of quasi-Newton matrices and their use in limited memory methods\",\n        \"Algorithm 778: L-BFGS-B: Fortran subroutines for large-scale bound-constrained optimization\",\n        \"Implementing the Nelder-Mead simplex algorithm with adaptive parameters\",\n        \"A Direct Search Optimization Method That Models the Objective and Constraint Functions by Linear Interpolation\",\n        \"Model-Based Derivative-Free Optimization Methods and Software\",\n        \"Least Frobenius norm updating of quadratic models that satisfy interpolation conditions\",\n        \"Benchmarking derivative-free optimization algorithms\",\n        \"Benchmarking optimization software with performance profiles\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in modOpt: A modular development environment and library for optimization algorithms, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}