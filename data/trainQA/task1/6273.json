{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Neurotoxin: Durable Backdoors in Federated Learning\n\nPaper Abstract: Abstract Due to their decentralized nature, federated learning (FL) systems have an inherent vulnerability during their training to adversarial backdoor attacks. In this type of attack, the goal of the attacker is to use poisoned updates to implant so-called backdoors into the learned model such that, at test time, the model’s outputs can be fixed to a given target for certain inputs. (As a simple toy example, if a user types “people from New York” into a mobile keyboard app that uses a backdoored next word prediction model, then the model could autocomplete the sentence to “people from New York are rude”). Prior work has shown that backdoors can be inserted into FL models, but these backdoors are often not durable, i.e., they do not remain in the model after the attacker stops uploading poisoned updates. Thus, since training typically continues progressively in production FL systems, an inserted backdoor may not survive until deployment. Here, we propose Neurotoxin, a simple one-line modification to existing backdoor attacks that acts by attacking parameters that are changed less in magnitude during training. We conduct an exhaustive evaluation across ten natural language processing and computer vision tasks, and we find that we can double the durability of state of the art backdoors.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep learning with differential privacy\",\n        \"How to backdoor federated learning\",\n        \"A little is enough: Circumventing defenses for distributed learning\",\n        \"Analyzing federated learning through an adversarial lens\",\n        \"Poisoning attacks against support vector machines\",\n        \"Machine learning with adversaries: Byzantine tolerant gradient descent\",\n        \"Practical secure aggregation for privacy-preserving machine learning\",\n        \"Towards federated learning at scale: System design\",\n        \"Targeted backdoor attacks on deep learning systems using data poisoning\",\n        \"EMNIST: Extending mnist to handwritten letters\",\n        \"Determinantal point processes in randomized numerical linear algebra\",\n        \"RandNLA: Randomized numerical linear algebra\",\n        \"Twitter sentiment classification using distant supervision\",\n        \"Dataset security for machine learning: Data poisoning, backdoor attacks, and defenses\",\n        \"Federated learning for mobile keyboard prediction\",\n        \"Deep residual learning for image recognition\",\n        \"Communication-efficient distributed SGD with sketching\",\n        \"Auditing differentially private machine learning: How private is private SGD?\",\n        \"Advances and open problems in federated learning\",\n        \"Overcoming catastrophic forgetting in neural networks\",\n        \"Learning multiple layers of features from tiny images\",\n        \"ARDIS: A swedish historical handwritten digit dataset\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Learning to detect malicious clients for robust federated learning\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Learning word vectors for sentiment analysis\",\n        \"Randomized algorithms for matrices and data\",\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"The hidden vulnerability of distributed learning in byzantium\",\n        \"SparseFed: Mitigating model poisoning attacks in federated learning with sparsification\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"Federated evaluation and tuning for on-device personalization: System design & applications\",\n        \"Language models are unsupervised multitask learners\",\n        \"FetchSGD: Communication-efficient federated learning with sketching\",\n        \"Back to the drawing board: A critical evaluation of poisoning attacks on production federated learning\",\n        \"Overcoming forgetting in federated learning on non-iid data\",\n        \"Local SGD converges fast and communicates little\",\n        \"Sparsified SGD with memory\",\n        \"Can you really backdoor federated learning?\",\n        \"Attack of the tails: Yes, you really can backdoor federated learning\",\n        \"Federated learning with matched averaging\",\n        \"DBA: Distributed backdoor attacks against federated learning\",\n        \"CRFL: Certifiably robust federated learning against backdoor attacks\",\n        \"Applied federated learning: Improving google keyboard query suggestions\",\n        \"PyHessian: Neural networks through the lens of the hessian\",\n        \"Byzantine-robust distributed learning: Towards optimal statistical rates\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Neurotoxin: Durable Backdoors in Federated Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}