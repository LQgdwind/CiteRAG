{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Lightweight Isolation Mechanism for Secure Branch Predictors\n\nPaper Abstract: Abstract Recently exposed vulnerabilities reveal the necessity to improve the security of branch predictors. Branch predictors record history about the execution of different programs, and such information from different processes are stored in the same structure and thus accessible to each other. This leaves the attackers with the opportunities for malicious training and malicious perception. Instead of flush-based or physical isolation of hardware resources, we want to achieve isolation of the content in these hardware tables with some lightweight processing using randomization as follows. (1) Content encoding. We propose to use hardware-based thread-private random numbers to encode the contents of the branch predictor tables (both direction and destination histories) which we call XOR-BP. Specifically, the data is encoded by XOR operation with the key before written in the table and decoded after read from the table. Such a mechanism obfuscates the information adding difficulties to cross-process or cross-privilege level analysis and perception. It achieves a similar effect of logical isolation but adds little in terms of space or time overheads. (2) Index encoding. We propose a randomized index mechanism of the branch predictor (Noisy-XOR-BP). Similar to the XOR-BP, another thread-private random number is used together with the branch instruction address as the input to compute the index of the branch predictor. This randomized indexing mechanism disrupts the correspondence between the branch instruction address and the branch predictor entry, thus increases the noise for malicious perception attacks. Our analyses using an FPGA-based RISC-V processor prototype and additional auxiliary simulations suggest that the proposed mechanisms incur a very small performance cost while providing strong protection.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On the power of simple branch prediction analysis\",\n        \"Predicting secret keys via branch prediction\",\n        \"Countermeasures against branch target buffer attacks\",\n        \"White paper | software techniques for managing speculation on amd processors\",\n        \"Whitepaper: Cache speculation side-channels. technical report version 2.2\",\n        \"The rocket chip generator\",\n        \"Specshield: Shielding speculative data from microarchitectural covert channels\",\n        \"The gem5 simulator\",\n        \"Saving and restoring implementation contexts with co-designed virtual machines\",\n        \"Using hybrid branch predictors to improve branch prediction accuracy in the presence of context switches\",\n        \"Covert channels through branch predictors: a feasibility study\",\n        \"Jump over aslr: Attacking branch predictors to bypass aslr\",\n        \"Understanding and mitigating covert channels through branch predictors\",\n        \"Branchscope: A new side-channel attack on directional branch predictor\",\n        \"Detecting covert timing channels: an entropy-based approach\",\n        \"Intel® 64 and ia-32 architectures software developer’s manual\",\n        \"Spec cpu2006 benchmark descriptions\",\n        \"Lattice scheduling and covert channels\",\n        \"Digital random number generator (drng) software implementation guide\",\n        \"Intel® 64 and ia32 architectures performance monitoring events\",\n        \"Speculative execution side channel mitigations\",\n        \"Mitigation overview for potential side channel cache exploits in linux\",\n        \"64 and ia-32 architectures software developer’s manual\",\n        \"Speculative Data-Oblivious Execution: Efficient Elimination of Speculative Covert Channels\",\n        \"The alpha 21264 microprocessor\",\n        \"Safespec: Banishing the spectre of a meltdown with leakage-free speculation\",\n        \"Spectre attacks: Exploiting speculative execution\",\n        \"Inferring fine-grained control flow inside {{\\\\{SGX\\\\}}} enclaves with branch shadowing\",\n        \"Conditional speculation: An effective approach to safeguard out-of-order execution against spectre attacks\",\n        \"True hardware random number generation implemented in the 32-nm soi power7+ processor\",\n        \"Random fill cache architecture\",\n        \"Improving branch prediction accuracy in embedded processors in the presence of context switches\",\n        \"CEASER: Mitigating conflict-based cache attacks via encrypted-address and remapping\",\n        \"Exploring efficient smt branch predictor design\",\n        \"CleanupSpec: An \\\"Undo\\\" Approach to Safe Speculation\",\n        \"Efficient Invisible Speculative Execution Through Selective Delay and Value Prediction\",\n        \"MuonTrap: Preventing Cross-Domain Spectre-Like Attacks by Capturing Speculative State\",\n        \"ConTExT: A Generic Approach for Mitigating Spectre\",\n        \"A 256 Kbits L-TAGE branch predictor\",\n        \"TAGE-SC-L Branch Predictors Again\",\n        \"Context-sensitive fencing: Securing speculative execution via microcode customization\",\n        \"Retpoline: a software construct for preventing branch-target-injection\",\n        \"Brb: Mitigating branch predictor side-channels.\",\n        \"New cache designs for thwarting software cache-based side channel attacks\",\n        \"The risc-v instruction set manual, volume i: User-level isa, version 2.0\",\n        \"Scattercache: Thwarting cache attacks via cache set randomization\",\n        \"Sunny cove - microarchitectures - intel, howpublished = https://en.wikichip.org/wiki/intel/microarchitectures/sunny_cove, year=2019.\",\n        \"Invisispec: Making speculative execution invisible in the cache hierarchy\",\n        \"Flush+ reload: a high resolution, low noise, l3 cache side-channel attack\",\n        \"Speculative Taint Tracking (STT): A Comprehensive Protection for Speculatively Accessed Data\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in A Lightweight Isolation Mechanism for Secure Branch Predictors, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}