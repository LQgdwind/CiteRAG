{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SocialGym 2.0: Simulator for Multi-Agent Social Robot Navigation in Shared Human Spaces\n\nPaper Abstract: Abstract We present SocialGym 2.0, a multi-agent navigation simulator for social robot research. Our simulator models multiple autonomous agents, replicating real-world dynamics in complex environments, including doorways, hallways, intersections, and roundabouts. Unlike traditional simulators that concentrate on single robots with basic kinematic constraints in open spaces, SocialGym 2.0 employs multi-agent reinforcement learning (MARL) to develop optimal navigation policies for multiple robots with diverse, dynamic constraints in complex environments. Built on the PettingZoo MARL library and Stable Baselines3 API, SocialGym 2.0 offers an accessible python interface that integrates with a navigation stack through ROS messaging. SocialGym 2.0 can be easily installed and is packaged in a docker container, and it provides the capability to swap and evaluate different MARL algorithms, as well as customize observation and reward functions. We also provide scripts to allow users to create their own environments and have conducted benchmarks using various social navigation algorithms, reporting a broad range of social navigation metrics.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Coordinating hundreds of cooperative, autonomous vehicles in warehouses\",\n        \"Planning, scheduling and monitoring for airport surface operations\",\n        \"Pettingzoo: Gym for multi-agent reinforcement learning\",\n        \"Social force model for pedestrian dynamics\",\n        \"Sean 2.0: Formalizing and generating social situations for robot navigation\",\n        \"Crowd against the machine: A simulation-based benchmark tool to evaluate and compare robot capabilities to navigate a human crowd\",\n        \"Unity: A general platform for intelligent agents\",\n        \"Socnavbench: A grounded simulation testing framework for evaluating social navigation\",\n        \"Crowd-robot interaction: Crowd-aware robot navigation with attention-based deep reinforcement learning\",\n        \"Mengeros: A crowd simulation tool for autonomous robot navigation\",\n        \"Socialgym: A framework for benchmarking social robot navigation\",\n        \"Reciprocal n-body collision avoidance\",\n        \"Efficient iterative linear-quadratic approximations for nonlinear multi-player general-sum differential games\",\n        \"Algames: a fast augmented lagrangian solver for constrained dynamic games\",\n        \"Convention over configuration\",\n        \"Stable-baselines3: Reliable reinforcement learning implementations\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Mastering chess and shogi by self-play with a general reinforcement learning algorithm\",\n        \"Superhuman ai for multiplayer poker\",\n        \"Dota 2 with large scale deep reinforcement learning\",\n        \"Starcraft ii: A new challenge for reinforcement learning\",\n        \"Outracing champion gran turismo drivers with deep reinforcement learning\",\n        \"An overview of multi-agent reinforcement learning from game theoretical perspective\",\n        \"Terp: Reliable planning in uneven outdoor environments using deep reinforcement learning\",\n        \"Terrapn: Unstructured terrain navigation using online self-supervised learning\",\n        \"Graspe: Graph based multimodal fusion for robot navigation in unstructured outdoor environments\",\n        \"Ga-nav: Efficient terrain segmentation for robot navigation in unstructured outdoor environments\",\n        \"Vi-ikd: High-speed accurate off-road navigation using learned visual-inertial inverse kinodynamics\",\n        \"Frozone: Freezing-free, pedestrian-friendly navigation in human crowds\",\n        \"Densecavoid: Real-time navigation in dense crowds using anticipatory behaviors\",\n        \"Comet: Modeling group cohesion for socially compliant robot navigation in crowded scenes\",\n        \"Decentralized non-communicating multiagent collision avoidance with deep reinforcement learning\",\n        \"Collision avoidance in pedestrian-rich environments with deep reinforcement learning\",\n        \"Robot navigation with model predictive equilibrium point control\",\n        \"High-speed accurate robot control using learned forward kinodynamics and non-linear least squares optimization\",\n        \"Steady: Simultaneous state estimation and dynamics learning from indirect observations\",\n        \"Gameplan: Game-theoretic multi-agent planning with human drivers at intersections, roundabouts, and merging\",\n        \"Cmetric: A driving behavior measure using centrality functions\",\n        \"Towards Autonomous Driving in Dense, Heterogeneous, and Unstructured Traffic\",\n        \"Gameopt: Optimal real-time multi-agent planning and control for dynamic intersections\",\n        \"Socialmapf: Optimal and efficient multi-agent path finding with strategic agents for social navigation\",\n        \"Core challenges of social robot navigation: A survey\",\n        \"Prevention and resolution of conflicts in social navigationâ€“a survey\",\n        \"Ut vector display.\",\n        \"Dynamic programming for partially observable stochastic games\",\n        \"Towards optimally decentralized multi-robot collision avoidance via deep reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in SocialGym 2.0: Simulator for Multi-Agent Social Robot Navigation in Shared Human Spaces, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}