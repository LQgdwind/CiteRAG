{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ECI: a Customizable Cache Coherency Stack for Hybrid FPGA-CPU Architectures\n\nPaper Abstract: Abstract. Unlike other accelerators, FPGAs are capable of supporting cache coherency, thereby turning them into a more powerful architectural option than just a peripheral accelerator. However, most existing deployments of FPGAs are either non-cache coherent or support only an asymmetric design where cache coherency is controlled from the CPU. Taking advantage of a recently released two socket CPU-FPGA architecture, in this paper we describe A Customizable Caching Interface (ACCI), a flexible implementation of cache coherency on the FPGA capable of supporting both symmetric and asymmetric protocols. ACCI is open and customizable, given applications the opportunity to fully interact with the cache coherency protocol, thereby opening up many interesting system design and research opportunities not available in existing designs. Through extensive microbenchmarks we show that ACCI exhibits highly competitive performance and discuss in detail one use-case illustrating the benefits of having an open cache coherency stack on the FPGA.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fast Models\",\n        \"Detailed models of instruction set architectures: From pseudocode to formal semantics\",\n        \"Single-pass covariance matrix calculation on a hybrid fpga/cpu platform\",\n        \"The Multikernel: A New OS Architecture for Scalable Multicore Systems\",\n        \"Maintaining i/o data coherence in embedded multicore systems\",\n        \"Conda: Efficient cache coherence support for near-data accelerators\",\n        \"Exploring Portability and Performance of OpenCL FPGA Kernels on Intel HARPv2\",\n        \"Project PBerry: FPGA Acceleration for Remote Memory\",\n        \"Cache Coherent Interconnect for Accelerators (CCIX)\",\n        \"A new solution to coherence problems in multicache systems\",\n        \"Denovo: Rethinking the memory hierarchy for disciplined parallelism\",\n        \"Enzian: an open, general CPU/FPGA platform for systems software research\",\n        \"Diplomatic design patterns: A tilelink case study\",\n        \"An introduction to the intel quickpath interconnect\",\n        \"Compute Express Link\",\n        \"Accelerating Raw Data Analysis with the ACCORDA Software and Hardware Architecture\",\n        \"Gen-Z Core Specification 1.1\",\n        \"Fastforward for efficient pipeline parallelism: A cache-optimized concurrent lock-free queue\",\n        \"Accelerators and coherence: An soc perspective\",\n        \"Noc-based support of heterogeneous cache-coherence models for accelerators\",\n        \"Comparing Cache Architectures and Coherency Protocols on X86-64 Multicore SMP Systems\",\n        \"Intel agilex fpga product brief\",\n        \"Runtime parameterizable regular expression operators for databases\",\n        \"A power-efficient fpga accelerator: Systolic array with cache-coherent interface for pair-hmm algorithm\",\n        \"In-Datacenter Performance Analysis of a Tensor Processing Unit\",\n        \"The common system interface: Intelâ€™s future interconnect\",\n        \"Implementing a cache consistency protocol\",\n        \"Cohesion: An adaptive hybrid memory model for accelerators\",\n        \"A small regex implementation in c\",\n        \"A hardware accelerator for tracing garbage collection\",\n        \"Why on-chip cache coherence is here to stay\",\n        \"Cache Coherence Techniques for Multicore Processors\",\n        \"Qpr: Quantizing pagerank with coherent shared memory accelerators\",\n        \"A Primer on Memory Consistency and Cache Coherence: Second Edition\",\n        \"Scalable parallel programming with cuda: Is cuda the parallel programming model that application developers have been waiting for?\",\n        \"A reconfigurable computing system based on a cache-coherent fabric\",\n        \"Distributed Inference over Decision Tree Ensembles on Clusters of FPGAs\",\n        \"Centaur: A framework for hybrid CPU-FPGA databases\",\n        \"Warehouse-Scale Video Acceleration: Co-Design and Deployment in the Wild\",\n        \"Cache implementation for multiple microprocessors\",\n        \"Energy and performance exploration of accelerator coherency port using xilinx zynq\",\n        \"Accelerating pattern matching queries in hybrid cpu-fpga architectures\",\n        \"Open sourced regular expression matching module\",\n        \"Opencl: A parallel programming standard for heterogeneous computing systems\",\n        \"IBM POWER9 Opens up a New Era of Acceleration Enablement: OpenCAPI\",\n        \"CAPI: A Coherent Accelerator Processor Interface\",\n        \"Cache system design in the tightly coupled multiprocessor system\",\n        \"Wireshark\",\n        \"Coherently attached programmable near-memory acceleration platform and its application to stencil processing\",\n        \"Xilinx zynq ultrascale+ mpsoc\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in ECI: a Customizable Cache Coherency Stack for Hybrid FPGA-CPU Architectures, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}