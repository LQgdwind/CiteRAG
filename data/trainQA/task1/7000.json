{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 184 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Untitled Document\n\nPaper Abstract: \n\n{retrieved_text}\n\nGenerate exactly 184 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 184\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Superslash: A unified design space exploration and model compression methodology for design of deep learning accelerators with reduced off-chip memory access volume\",\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Bit-pragmatic deep neural network computing\",\n        \"How to train your MAML\",\n        \"Arm cpu architecture\",\n        \"A study of lora: Long range & low power networks for internet of things\",\n        \"Deep batch active learning by diverse, uncertain gradient lower bounds\",\n        \"Mixmatch: A holistic approach to semi-supervised learning\",\n        \"Language models are few-shot learners\",\n        \"Updating software in wireless sensor networks: A survey\",\n        \"Freely scalable and reconfigurable optical hardware for deep learning\",\n        \"Efficient 8-bit quantization of transformer neural machine language translation model\",\n        \"What is a cluster? an overview of clustering in the cloud\",\n        \"Binaryconnect: Training deep neural networks with binary weights during propagations\",\n        \"Shifted and squeezed 8-bit floating point format for low-precision training of deep neural networks\",\n        \"Dynamic convolution: Attention over convolution kernels\",\n        \"Once-for-all: Train one network and specialize it for efficient deployment\",\n        \"Tiny transfer learning: Towards memory-efficient on-device learning\",\n        \"Risa: A reinforced systolic array for depthwise convolutions and embedded tensor reshaping\",\n        \"Mongoose: A learnable lsh framework for efficient neural network training\",\n        \"End-to-end object detection with transformers\",\n        \"Intriguing role of module criticality in the generalization of deep networks\",\n        \"PACT: parameterized clipping activation for quantized neural networks\",\n        \"Training deep nets with sublinear memory cost\",\n        \"Fairnas: Rethinking evaluation fairness of weight sharing neural architecture search\",\n        \"Benchmarking deep reinforcement learning for continuous control\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Splitnets: Designing neural architectures for efficient distributed computing on head-mounted systems\",\n        \"Equilibrated adaptive learning rates for non-convex optimization\",\n        \"Model-Agnostic Meta-Learning for Reinforcement Learning in PyTorch\",\n        \"Adaptive subgradient methods for online learning and stochastic optimization\",\n        \"Model compression and hardware acceleration for neural networks: a comprehensive survey\",\n        \"Torchmeta: A Meta-Learning library for PyTorch\",\n        \"Deep learning: new computational modelling techniques for genomics\",\n        \"Fast sparse convnets\",\n        \"Rigging the lottery: Making all tickets winners\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"SYQ: learning symmetric quantization for efficient deep neural networks\",\n        \"Deep learning, volume 1\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Pruning meta-trained networks for on-device adaptation\",\n        \"Metasense: few-shot adaptation to untrained conditions in deep mobile sensing\",\n        \"Differentiable soft quantization: Bridging full-precision and low-bit neural networks\",\n        \"Compressing deep convolutional networks using vector quantization\",\n        \"Memory-efficient backpropagation through time\",\n        \"Google xnnpack - github repository\",\n        \"Detectron\",\n        \"The reversible residual network: Backpropagation without storing activations\",\n        \"Highway and residual networks learn unrolled iterative estimation\",\n        \"Low-rank gradient approximation for memory-efficient on-device training of deep neural network\",\n        \"Cloud-based or on-device: An empirical study of mobile deep inference\",\n        \"Few-shot human motion prediction via meta-learning\",\n        \"Network sketching: exploiting binary structure in deep cnns\",\n        \"Switchable precision neural networks\",\n        \"Meta-learning in neural networks: a survey, 2020\",\n        \"Accelerated sparse neural training: A provable and efficient method to find n:m transposable masks\",\n        \"Multi-scale dense networks for resource efficient image classification\",\n        \"Quantized neural networks: Training neural networks with low precision weights and activations\",\n        \"Learning anytime predictions in neural networks via adaptive loss balancing\",\n        \"Mask r-cnn\",\n        \"Dynamic neural networks: A survey\",\n        \"Loss-aware weight quantization of deep networks\",\n        \"Learning agile and dynamic motor skills for legged robots\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Squeeze-and-excitation networks\",\n        \"From hashing to cnns: Training binary weight networks via hashing\",\n        \"Loss-aware binarization of deep networks\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Deep residual learning for image recognition\",\n        \"How to train your robot with deep reinforcement learning: lessons we have learned\",\n        \"Adaptive group sparse regularization for continual learning\",\n        \"Learning to quantize deep networks by optimizing quantization intervals with task loss\",\n        \"Adaptive quantization of neural networks\",\n        \"Advances and open problems in federated learning\",\n        \"Cifar (canadian institute for advanced research), 2009\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Retrieve: Coreset selection for efficient and robust semi-supervised learning\",\n        \"Gradient-based learning applied to document recognition\",\n        \"MNIST handwritten digit database, 2010\",\n        \"On-device neural net inference with mobile gpus\",\n        \"Rskdd-net: Random sample-based keypoint detector and descriptor\",\n        \"Feature pyramid networks for object detection\",\n        \"Deep gradient compression: Reducing the communication bandwidth for distributed training\",\n        \"Gazegraph: graph-based few-shot cognitive context sensing from human visual behavior\",\n        \"Pruning filters for efficient convnets\",\n        \"Fsa: A fine-grained systolic accelerator for sparse cnns\",\n        \"Microsoft coco: Common objects in context\",\n        \"Fusion-catalyzed pruning for optimizing deep learning on intelligent edge devices\",\n        \"Metapruning: Meta learning for automatic neural network channel pruning\",\n        \"Subflow: A dynamic induced-subgraph strategy toward real-time dnn inference and training\",\n        \"Relaxed quantization for discretized neural networks\",\n        \"Cmsis-nn: Efficient neural network kernels for arm cortex-m cpus\",\n        \"Lotteryfl: Personalized and communication-efficient federated learning with lottery ticket hypothesis on non-iid datasets\",\n        \"Fixed point quantization of deep convolutional networks\",\n        \"Eagleeye: Fast sub-net evaluation for efficient neural network pruning\",\n        \"Dynamic slimmable network\",\n        \"Ternary weight networks\",\n        \"Towards accurate binary convolutional neural network\",\n        \"On-device federated learning with flower\",\n        \"Event-triggered natural hazard monitoring with convolutional neural networks on the edge\",\n        \"Intermittent-aware neural architecture search\",\n        \"Accelerating sparse deep neural networks\",\n        \"Apprentice: Using knowledge distillation techniques to improve low-precision network accuracy\",\n        \"WRPN: Wide reduced-precision networks\",\n        \"A two-stage optimized next-view planning framework for 3-d unknown environment exploration, and structural reconstruction\",\n        \"Introductory lectures on convex programming volume i: Basic course\",\n        \"The power consumption of nvidia (table), 2022\",\n        \"Openai’s gpt-3 language model: A technical overview, 2020\",\n        \"Tadam: Task dependent adaptive metric for improved few-shot learning\",\n        \"Exploiting activation sparsity for fast cnn inference on mobile gpus\",\n        \"Boil: Towards representation change for few-shot learning\",\n        \"Automatic differentiation in pytorch\",\n        \"Ac/dc: Alternating compressed/decompressed training of deep neural networks\",\n        \"Espresso: Efficient forward propagation for binary deep neural networks\",\n        \"Pytorch example of lenet5 on mnist, 2019\",\n        \"Pytorch example on resnet, 2019\",\n        \"Object detection reference training scripts, 2021\",\n        \"Deep partial updating: Towards communication efficient updating for on-device inference\",\n        \"Dress: Dynamic real-time sparse subnets\",\n        \"Adaptive loss-aware quantization for multi-bit networks\",\n        \"p-meta: Towards on-device deep model adaptation\",\n        \"Sparse weight activation training\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Comparing fine-tuning and rewinding in neural network pruning\",\n        \"Faster r-cnn: Towards real-time object detection with region proposal networks\",\n        \"On the convergence of adam and beyond\",\n        \"Xnor-net: Imagenet classification using binary convolutional neural networks\",\n        \"Rapid learning or feature reuse? towards understanding the effectiveness of MAML\",\n        \"Meta-learning for semi-supervised few-shot classification\",\n        \"Fixmatch: Simplifying semi-supervised learning with consistency and confidence\",\n        \"Mastering the game of Go with deep neural networks and tree search\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Multi-task learning as multi-objective optimization\",\n        \"Learning discrete weights using the local reparameterization trick\",\n        \"Trust region policy optimization\",\n        \"Partial is better than all: Revisiting fine-tuning strategy for few-shot learning\",\n        \"Robin: A robust optical binary neural network accelerator\",\n        \"Tinyml for ubiquitous edge ai\",\n        \"Privacy-preserving deep learning\",\n        \"Prototypical networks for few-shot learning\",\n        \"Automatic acoustic detection of birds through deep learning: The first bird audio detection challenge\",\n        \"Learning to compare: Relation network for few-shot learning\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Dominosearch: Find layer-wise fine-grained n:m sparse schemes from dense neural networks\",\n        \"On-device training with tensorflow lite\",\n        \"Mujoco: A physics engine for model-based control\",\n        \"Matching networks for one shot learning\",\n        \"Arm vela compiler, 2020\",\n        \"Learning where to learn: Gradient sparsity in meta and continual learning\",\n        \"Dynamic convolutions: Exploiting spatial sparsity for faster inference\",\n        \"Caltech-UCSD Birds 200\",\n        \"Training deep neural networks with 8-bit floating point numbers\",\n        \"Group normalization\",\n        \"Augmented reality, 2022\",\n        \"Cloud computing, 2022\",\n        \"Edge device, 2022\",\n        \"Internet of things, 2022\",\n        \"List of nvidia graphics processing units, 2022\",\n        \"Self-driving car, 2022\",\n        \"Virtual assistant, 2022\",\n        \"Virtual reality, 2022\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Detectron2, 2019\",\n        \"Extending multilingual bert to low-resource languages\",\n        \"Tbn: Convolutional neural network with ternary inputs and binary weights\",\n        \"Enabling on-device cnn training by self-supervised instance filtering and error map pruning\",\n        \"Alternating multi-bit quantization for recurrent neural networks\",\n        \"Autoslim: Towards one-shot architecture search for channel numbers\",\n        \"Universally slimmable networks and improved training techniques\",\n        \"Bignas: Scaling up neural architecture search with big single-stage models\",\n        \"Tf-net: Deploying sub-byte deep neural networks on microcontrollers\",\n        \"Lifelong learning with dynamically expandable networks\",\n        \"Slimmable neural networks\",\n        \"Wide residual networks\",\n        \"Deconstructing lottery tickets: Zeros, signs, and the supermask\",\n        \"Learning n:m fine-grained structured sparse neural networks from scratch\",\n        \"A comprehensive survey on transfer learning\",\n        \"Structured binary neural networks for accurate image classification and semantic segmentation\",\n        \"Dorefa-net: Training low bitwidth convolutional neural networks with low bitwidth gradients\",\n        \"Incremental network quantization: Towards lossless cnns with low-precision weights\",\n        \"Explicit loss-error-aware quantization for low-bit deep neural networks\",\n        \"Lq-nets: Learned quantization for highly accurate and compact deep neural networks\",\n        \"A systematic dnn weight pruning framework using alternating direction method of multipliers\"\n    ],\n    \"reasoning\": \"Selected these 184 references because they represent foundational work and recent advances in Untitled Document, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}