{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Enabling Lightweight Fine-tuning for Pre-trained Language Model Compression based on Matrix Product Operators\n\nPaper Abstract: Abstract This paper presents a novel pre-trained language models (PLM) compression approach based on the matrix product operator (short as MPO) from quantum many-body physics. It can decompose an original matrix into central tensors (containing the core information) and auxiliary tensors (with only a small proportion of parameters). With the decomposed MPO structure, we propose a novel fine-tuning strategy by only updating the parameters from the auxiliary tensors, and design an optimization algorithm for MPO-based approximation over stacked network architectures. Our approach can be applied to the original or the compressed PLMs in a general way, which derives a lighter network and significantly reduces the parameters to be fine-tuned. Extensive experiments have demonstrated the effectiveness of the proposed approach in model compression, especially the reduction in fine-tuning parameters (91%percent\\% reduction on average). The code to reproduce the results of this paper can be found at https://github.com/RUCAIBox/MPOP.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Entanglement entropy and quantum field theory\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Compressing large-scale transformer-based models: A case study on bert\",\n        \"Compressing deep neural networks by matrix product operators\",\n        \"Ultimate tensorization: compressing convolutional and fc layers alike\",\n        \"[8] singular value decomposition: Application to analysis of experimental data\",\n        \"The expression of a tensor or a polyadic as a sum of products\",\n        \"Dynabert: Dynamic BERT with adaptive width and depth\",\n        \"Parameter-efficient transfer learning for nlp\",\n        \"Quantized neural networks: Training neural networks with low precision weights and activations\",\n        \"Squeezebert: What can computer vision teach nlp about efficient neural networks?\",\n        \"Matrix product states algorithms and continuous systems\",\n        \"Tinybert: Distilling BERT for natural language understanding\",\n        \"schuBERT: Optimizing elements of BERT\",\n        \"Tensorized embedding layers for efficient model compression\",\n        \"ALBERT: A lite BERT for self-supervised learning of language representations\",\n        \"Exploring versatile generative language model via parameter-efficient transfer learning\",\n        \"Fastbert: a self-distilling BERT with adaptive inference time\",\n        \"A tensorized transformer for language modeling\",\n        \"Compressing pre-trained language models by matrix decomposition\",\n        \"Tensorizing neural networks\",\n        \"Tensor-train decomposition\",\n        \"Grounded compositional outputs for adaptive language modeling\",\n        \"Deep contextualized word representations\",\n        \"Matrix product operator representations\",\n        \"Improving language understanding by generative pre-training\",\n        \"How fine can fine-tuning be? learning efficient language models\",\n        \"Learning multiple visual domains with residual adapters\",\n        \"Distilbert, a distilled version of bert: smaller, faster, cheaper and lighter\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Contrastive distillation on intermediate representations for language model compression\",\n        \"A model compression method with matrix product operators for speech enhancement\",\n        \"Mobilebert: a compact task-agnostic BERT for resource-limited devices\",\n        \"Edgebert: Optimizing on-chip inference for multi-task nlp\",\n        \"Compressing recurrent neural network with tensor train\",\n        \"Some mathematical notes on three-mode factor analysis\",\n        \"Attention is all you need\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Deebert: Dynamic early exiting for accelerating bert inference\",\n        \"Long-term forecasting using tensor-train rnns\",\n        \"Q8bert: Quantized 8bit bert\",\n        \"Bertscore: Evaluating text generation with BERT\",\n        \"Masking as an efficient alternative to finetuning for pretrained language models\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Enabling Lightweight Fine-tuning for Pre-trained Language Model Compression based on Matrix Product Operators, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}