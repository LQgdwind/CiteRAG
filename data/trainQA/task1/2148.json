{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Sigma Worksheet: Interactive Construction of OLAP Queries\n\nPaper Abstract: Abstract. The new generation of cloud data warehouses (CDWs) brings large amounts of data and compute power closer to users in enterprises. The ability to directly access the warehouse data, interactively analyze and explore it at scale can empower users to improve their decision making cycles. However, existing tools for analyzing data in CDWs are either limited in ad-hoc transformations or difficult to use for business users, the largest user segment in enterprises. Here we introduce Sigma Worksheet, a new interactive system that enables users to easily perform ad-hoc visual analysis of data in CDWs at scale. For this, Sigma Worksheet provides an accessible spreadsheet-like interface for data analysis through direct manipulation. Sigma Worksheet dynamically constructs matching SQL queries from user interactions on this familiar interface, building on the versatility and expressivity of SQL. Sigma Worksheet executes constructed queries directly on CDWs, leveraging the superior characteristics of the new generation CDWs, including scalability. To evaluate Sigma Worksheet, we first demonstrate its expressivity through two real life use cases, cohort analysis and sessionization. We then measure the performance of the Worksheet generated queries with a set of experiments using the TPC-H benchmark. Results show the performance of our compiled SQL queries is comparable to that of the reference queries of the benchmark. Finally, to assess the usefulness of Sigma Worksheet in deployment, we elicit feedback through a 100-person survey followed by a semi-structured interview study with 70 participants. We find that Sigma Worksheet is easier to use and learn, improving the productivity of users. Our findings also suggest Sigma Worksheet can further improve user experience by providing guidance to users at various steps of data analysis.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tioga-2: A direct manipulation database visualization environment\",\n        \"Airtable\",\n        \"Redshift\",\n        \"The Schema-Independent Database UI A Proposed Holy Grail and Some Suggestions\",\n        \"A spreadsheet-based user interface for managing plural relationships in structured data\",\n        \"Expressive Query Construction Through Direct Manipulation of Nested Relational Results\",\n        \"Dataspread: Unifying databases and spreadsheets\",\n        \"Towards a holistic integration of spreadsheets with databases: A scalable storage engine for presentational data management\",\n        \"Airline On-Time Performance Data\",\n        \"An overview of data warehousing and OLAP technology\",\n        \"An overview of business intelligence technology\",\n        \"Including Group-By in Query Optimization\",\n        \"Coda\",\n        \"The Snowflake Elastic Data Warehouse\",\n        \"An architecture for a business and information system\",\n        \"2020 Trends in Data Analytics\",\n        \"BigQuery\",\n        \"Data cube: A relational aggregation operator generalizing group-by, cross-tab, and sub-totals\",\n        \"Automating String Processing in Spreadsheets Using Input-Output Examples\",\n        \"Amazon redshift and the case for simpler data warehouses\",\n        \"Implementing data cubes efficiently\",\n        \"Building the Data Warehouse\",\n        \"Building the Data Warehouse (4th ed.)\",\n        \"Making Database Systems Usable\",\n        \"Cohort Query Processing\",\n        \"Project Jupyter\",\n        \"Wrangler: Interactive Visual Specification of Data Transformation Scripts\",\n        \"Dremel: interactive analysis of web-scale datasets\",\n        \"Microsoft Excel Docs - VLOOKUP\",\n        \"Power BI\",\n        \"Microstrategy\",\n        \"The Spreadsheet Interface: A Basis for End User Programming\",\n        \"Notion\",\n        \"OpenRefine\",\n        \"IPython: a System for Interactive Scientific Computing\",\n        \"PostgreSQL\",\n        \"QlikView\",\n        \"Benchmarking Spreadsheet Systems\",\n        \"Scalable Spreadsheets for Interactive Data Analysis\",\n        \"Term-weighting approaches in automatic text retrieval\",\n        \"Reactive Vega: A Streaming Dataflow Architecture for Declarative Interactive Visualization\",\n        \"Snowflake\",\n        \"Polaris: A System for Query, Analysis and Visualization of Multi-Dimensional Relational Databases\",\n        \"Multiscale visualization using data cubes\",\n        \"Tableau: Order of Operations\",\n        \"Tableau\",\n        \"Tableau Prep\",\n        \"Trifacta\",\n        \"Spreadsheet as a relational database engine\",\n        \"Learnable Programming\",\n        \"Spreadsheets in RDBMS for OLAP\",\n        \"Query by excel\",\n        \"Power BI: Chort Analysis\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Sigma Worksheet: Interactive Construction of OLAP Queries, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}