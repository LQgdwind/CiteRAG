{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: High-Order Pooling for Graph Neural Networks with Tensor Decomposition\n\nPaper Abstract: Abstract Graph Neural Networks (GNNs) are attracting growing attention due to their effectiveness and flexibility in modeling a variety of graph-structured data. Exiting GNN architectures usually adopt simple pooling operations (e.g., sum, average, max) when aggregating messages from a local neighborhood for updating node representation or pooling node representations from the entire graph to compute the graph representation. Though simple and effective, these linear operations do not model high-order non-linear interactions among nodes. We propose the Tensorized Graph Neural Network (tGNN), a highly expressive GNN architecture relying on tensor decomposition to model high-order non-linear node interactions. tGNN leverages the symmetric CP decomposition to efficiently parameterize permutation-invariant multilinear maps for modeling node interactions. Theoretical and empirical analysis on both node and graph classification tasks show the superiority of tGNN over competitive baselines. In particular, tGNN achieves the most solid results on two OGB node classification datasets and one OGB graph classification dataset.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mixhop: Higher-order graph convolutional architectures via sparsified neighborhood mixing\",\n        \"Accurate learning of graph representations with graph multiset pooling\",\n        \"Directional graph networks\",\n        \"Residual gated graph convnets\",\n        \"Tensor regression networks with various low-rank tensor approximations\",\n        \"Learning from non-binary constituency trees via tensor decomposition\",\n        \"A tensor framework for learning in structured domains\",\n        \"Simple and deep graph convolutional networks\",\n        \"Adaptive universal generalized pagerank graph neural network\",\n        \"Deep simnets\",\n        \"On the expressive power of deep learning: A tensor analysis\",\n        \"Symmetric tensors and symmetric tensor rank\",\n        \"Principal neighbourhood aggregation for graph nets\",\n        \"Benchmarking graph neural networks\",\n        \"A fair comparison of graph neural networks for graph classification\",\n        \"Neural message passing for quantum chemistry\",\n        \"node2vec: Scalable feature learning for networks\",\n        \"Graph representation learning\",\n        \"Inductive representation learning on large graphs\",\n        \"Representation learning on graphs: Methods and applications\",\n        \"Deep residual learning for image recognition\",\n        \"The expression of a tensor or a polyadic as a sum of products\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Towards a standardized notation and terminology in multiway analysis\",\n        \"Transformers generalize deepsets and can be extended to graphs & hypergraphs\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Numerical optimization for symmetric tensor decomposition\",\n        \"Tensor decompositions and applications\",\n        \"Parameterized hypercomplex graph neural networks for graph classification\",\n        \"Benefits of depth for long-term memory of recurrent networks\",\n        \"Deep learning and quantum entanglement: Fundamental connections with implications to network design\",\n        \"Deepergcn: All you need to train deeper gcns\",\n        \"Is heterophily a real nightmare for graph neural networks to do node classification?\",\n        \"Revisiting heterophily for graph neural networks\",\n        \"Complete the missing half: Augmenting aggregation filtering with diversification for graph convolutional networks\",\n        \"Geometric deep learning on graphs and manifolds using mixture model cnns\",\n        \"Exponential machines\",\n        \"Rasl: Robust alignment by sparse and low-rank decomposition for linearly correlated images\",\n        \"Low-rank regression with tensor responses\",\n        \"On the expressive power of overlapping architectures of deep learning\",\n        \"Graphaf: a flow-based autoregressive model for molecular graph generation\",\n        \"Supervised learning with quantum-inspired tensor networks. arxiv 2016\",\n        \"Generating text with recurrent neural networks\",\n        \"Graph attention networks\",\n        \"Second-order pooling for graph neural networks\",\n        \"On multiplicative integration with recurrent neural networks\",\n        \"How powerful are graph neural networks?\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Deep sets\",\n        \"Quaternion knowledge graph embeddings\",\n        \"Comonâ€™s conjecture, rank decomposition, and symmetric rank decomposition of symmetric tensors\",\n        \"Beyond homophily in graph neural networks: Current limitations and effective designs\",\n        \"Neural bellman-ford networks: A general graph neural network framework for link prediction\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in High-Order Pooling for Graph Neural Networks with Tensor Decomposition, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}