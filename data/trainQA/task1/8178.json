{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Can We Scale Transformers to Predict Parameters of Diverse ImageNet Models?\n\nPaper Abstract: Abstract Pretraining a neural network on a large dataset is becoming a cornerstone in machine learning that is within the reach of only a few communities with large-resources. We aim at an ambitious goal of democratizing pretraining. Towards that goal, we train and release a single neural network that can predict high quality ImageNet parameters of other neural networks. By using predicted parameters for initialization we are able to boost training of diverse ImageNet models available in PyTorch. When transferred to other datasets, models initialized with predicted parameters also converge faster and reach competitive final performance.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Zero-cost proxies for lightweight nas\",\n        \"Nernâ€“learning neural representations for neural networks\",\n        \"Smash: one-shot model architecture search through hypernetworks\",\n        \"Structure-aware transformer for graph representation learning\",\n        \"Net2net: Accelerating learning via knowledge transfer\",\n        \"Catch: Context-based meta reinforcement learning for transferrable architecture search\",\n        \"Breaking the architecture barrier: A method for efficient knowledge transfer across networks\",\n        \"Metainit: Initializing learning by learning to initialize\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"A generalization of transformer networks to graphs\",\n        \"Meta-learning of neural architectures for few-shot learning\",\n        \"Gradmax: Growing neural networks using gradient information\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"Hypernetworks\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n        \"Deep residual learning for image recognition\",\n        \"Pure transformers are powerful graph learners\",\n        \"Pretraining a neural network before knowing its architecture\",\n        \"Parameter prediction for unseen deep architectures\",\n        \"Do better imagenet models transfer better?\",\n        \"Learning multiple layers of features from tiny images\",\n        \"The hungarian method for the assignment problem\",\n        \"Gated graph sequence neural networks\",\n        \"Towards fast adaptation of neural architectures with meta learning\",\n        \"Darts: Differentiable architecture search\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"A convnet for the 2020s\",\n        \"Decoupled weight decay regularization\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Learning to learn with generative models of neural network checkpoints\",\n        \"Pytorch object detection finetuning tutorial\",\n        \"Fast and flexible multi-task classification using conditional neural adaptive processes\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Exact solutions to the nonlinear dynamics of learning in deep linear neural networks\",\n        \"Group sparse regularization for deep neural networks\",\n        \"Hyper-representations as generative models: Sampling unseen neural network weights\",\n        \"One hyper-initializer for all network architectures in medical image analysis\",\n        \"Energy and policy considerations for deep learning in nlp\",\n        \"The computational limits of deep learning\",\n        \"Attention is all you need\",\n        \"Object detection combining recognition and segmentation\",\n        \"Resnet strikes back: An improved training procedure in timm\",\n        \"Towards theoretically inspired neural initialization optimization\",\n        \"Do transformers really perform badly for graph representation?\",\n        \"A large-scale study of representation learning with the visual task adaptation benchmark\",\n        \"Scaling vision transformers\",\n        \"Graph hypernetworks for neural architecture search\",\n        \"Fixup initialization: Residual learning without normalization\",\n        \"Hypertransformer: Model generation for supervised and semi-supervised few-shot learning\",\n        \"Gradinit: Learning to initialize neural networks for stable and efficient training\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Can We Scale Transformers to Predict Parameters of Diverse ImageNet Models?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}