{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Compositional Neural Programs for Continuous Control\n\nPaper Abstract: Abstract We propose a novel solution to challenging sparse-reward, continuous control problems that require hierarchical planning at multiple levels of abstraction. Our solution, dubbed AlphaNPI-X, involves three separate stages of learning. First, we use off-policy reinforcement learning algorithms with experience replay to learn a set of atomic goal-conditioned policies, which can be easily repurposed for many tasks. Second, we learn self-models describing the effect of the atomic policies on the environment. Third, the self-models are harnessed to learn recursive compositional programs with multiple levels of abstraction. The key insight is that the self-models enable planning by imagination, obviating the need for interaction with the world when learning higher-level compositional programs. To accomplish the third stage of learning, we extend the AlphaNPI algorithm, which applies AlphaZero to learn recursive neural programmer-interpreters. We empirically show that AlphaNPI-X can effectively learn to tackle challenging sparse manipulation tasks, such as stacking multiple blocks, where powerful model-free baselines fail.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Solving rubik’s cube with a robot hand\",\n        \"Modular multitask reinforcement learning with policy sketches\",\n        \"Hindsight experience replay\",\n        \"Learning dexterous in-hand manipulation\",\n        \"The option-critic architecture\",\n        \"The option keyboard: Combining skills in reinforcement learning\",\n        \"Dynamics-aware latent space reachability for exploration in temporally-extended tasks\",\n        \"Openai gym\",\n        \"CURIOUS: intrinsically motivated multi-task, multi-goal reinforcement learning\",\n        \"Hierarchical reinforcement learning with the maxq value function decomposition\",\n        \"Diversity is all you need: Learning skills without a reward function\",\n        \"Prm-rl: Long-range robotic navigation tasks by combining reinforcement learning and sampling-based planning\",\n        \"Model predictive control: theory and practice—a survey\",\n        \"Variational intrinsic control\",\n        \"Efficient solution algorithms for factored mdps\",\n        \"Relay policy learning: Solving long-horizon tasks via imitation and reinforcement learning\",\n        \"Automatic goal generation for reinforcement learning agents\",\n        \"Symbolic plans as high-level instructions for reinforcement learning\",\n        \"Marginalized state distribution entropy regularization in policy optimization\",\n        \"Language as an abstraction for hierarchical deep reinforcement learning\",\n        \"Curiosity-driven multi-criteria hindsight experience replay\",\n        \"Efficient exploration via state marginal matching\",\n        \"Hierarchical actor-critic\",\n        \"Hierarchical reinforcement learning with hindsight\",\n        \"Towards practical multi-object manipulation using relational reinforcement learning\",\n        \"Continuous control with deep reinforcement learning\",\n        \"Data-efficient hierarchical reinforcement learning\",\n        \"Neural network dynamics for model-based deep reinforcement learning with model-free fine-tuning\",\n        \"Deep dynamics models for learning dexterous manipulation\",\n        \"Hierarchical foresight: Self-supervised learning of long-horizon tasks via visual subgoal generation\",\n        \"Planning with goal-conditioned policies\",\n        \"Learning compositional neural programs with recursive tree search and planning\",\n        \"Skew-fit: State-covering self-supervised reinforcement learning\",\n        \"Neural programmer-interpreters\",\n        \"Learning by playing - solving sparse reward tasks from scratch\",\n        \"Human Compatible: Artificial Intelligence and the Problem of Control\",\n        \"Universal value function approximators\",\n        \"Mastering atari, go, chess and shogi by planning with a learned model\",\n        \"Planning to explore via self-supervised world models\",\n        \"Compositional planning using optimal option models\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Mastering chess and shogi by self-play with a general reinforcement learning algorithm\",\n        \"Between mdps and semi-mdps: A framework for temporal abstraction in reinforcement learning\",\n        \"Sim-to-real: Learning agile locomotion for quadruped robots\",\n        \"Transfer learning for reinforcement learning domains: A survey\",\n        \"Feudal networks for hierarchical reinforcement learning\",\n        \"Neural Task Programming: Learning to Generalize Across Hierarchical Tasks\",\n        \"A survey on multi-task learning\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Learning Compositional Neural Programs for Continuous Control, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}