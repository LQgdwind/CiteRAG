{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Automatic Channel Pruning for Multi-Head Attention\n\nPaper Abstract: Abstract Despite the strong performance of Transformers, their quadratic computation complexity presents challenges in applying them to vision tasks. Automatic pruning is one of effective methods for reducing computation complexity without heuristic approaches. However, directly applying it to multi-head attention is not straightforward due to channel misalignment. In this paper, we propose an automatic channel pruning method to take into account the multi-head attention mechanism. First, we incorporate channel similarity-based weights into the pruning indicator to preserve more informative channels in each head. Then, we adjust pruning indicator to enforce removal of channels in equal proportions across all heads, preventing the channel misalignment. We also add a reweight module to compensate for information loss resulting from channel removal, and an effective initialization step for pruning indicator based on difference of attention between original structure and each channel. Our proposed method can be used to not only original attention, but also linear attention, which is more efficient as linear complexity with respect to the number of tokens. On ImageNet-1K, applying our pruning method to the FLattenTransformer, which includes both attention mechanisms, shows outperformed accuracy for several MACs compared with previous state-of-the-art efficient models and pruned methods. Code will be available soon.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Token merging: Your vit but faster\",\n        \"Glit: Neural architecture search for global and local image transformer\",\n        \"Autoformer: Searching transformers for visual recognition\",\n        \"Chasing sparsity in vision transformers: An end-to-end exploration\",\n        \"Auto-scaling vision transformers without training\",\n        \"A unified framework for soft threshold pruning\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Convit: Improving vision transformers with soft convolutional inductive biases\",\n        \"Structural alignment for network pruning through partial regularization\",\n        \"Cmt: Convolutional neural networks meet vision transformers\",\n        \"Flatten transformer: Vision transformer using focused linear attention\",\n        \"Transformer in transformer\",\n        \"Neighborhood attention transformer\",\n        \"Pruning self-attentions into convolutional layers in single path\",\n        \"Chex: Channel exploration for cnn model compression\",\n        \"Squeeze-and-excitation networks\",\n        \"Reformer: The efficient transformer\",\n        \"Pruning from scratch via shared pruning module and nuclear norm-based regularization\",\n        \"Differentiable subset pruning of transformer heads\",\n        \"Pruning-as-search: Efficient neural architecture search via channel pruning and structural reparameterization\",\n        \"Dhp: Differentiable meta pruning via hypernetworks\",\n        \"Not all patches are what you need: Expediting vision transformers via token reorganizations\",\n        \"Hrank: Filter pruning using high-rank feature map\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"Metapruning: Meta learning for automatic neural network channel pruning\",\n        \"Soft: Softmax-free transformer with linear complexity\",\n        \"Edgenext: efficiently amalgamated cnn-transformer architecture for mobile vision applications\",\n        \"cosformer: Rethinking softmax in attention\",\n        \"Swiftformer: Efficient additive attention for transformer-based real-time mobile vision applications\",\n        \"Dynamic token pruning in plain vision transformers for semantic segmentation\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Going deeper with image transformers\",\n        \"Attention is all you need\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Pyramid vision transformer: A versatile backbone for dense prediction without convolutions\",\n        \"Joint token pruning and squeezing towards more aggressive compression of vision transformers\",\n        \"Cvt: Introducing convolutions to vision transformers\",\n        \"Vision transformer with deformable attention\",\n        \"Autoprune: Automatic network pruning by regularizing auxiliary parameters\",\n        \"Global vision transformer pruning with hessian-aware saliency\",\n        \"Castling-vit: Compressing self-attention via switching towards linear-angular attention at vision transformer inference\",\n        \"Unified visual transformer compression\",\n        \"Tokens-to-token vit: Training vision transformers from scratch on imagenet\",\n        \"Vision transformer pruning\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Automatic Channel Pruning for Multi-Head Attention, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}