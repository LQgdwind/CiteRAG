{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Recurrent Neural Language Models as Probabilistic Finite-state Automata\n\nPaper Abstract: Abstract Studying language models (LMs) in terms of well-understood formalisms allows us to precisely characterize their abilities and limitations. Previous work has investigated the representational capacity of recurrent neural network (RNN) LMs in terms of their capacity to recognize unweighted formal languages. However, LMs do not describe unweighted formal languages‚Äîrather, they define probability distributions over strings. In this work, we study what classes of such probability distributions RNN LMs can represent, which allows us to make more direct statements about their capabilities. We show that simple RNNs are equivalent to a subclass of probabilistic finite-state automata, and can thus model a strict subset of probability distributions expressible by finite-state models. Furthermore, we study the space complexity of representing finite-state LMs with RNNs. We show that, to represent an arbitrary deterministic finite-state LM with NùëÅN states over an alphabet Œ£Œ£{{\\Sigma}}, an RNN requires Œ©‚Äã(N‚Äã|Œ£|)Œ©ùëÅŒ£\\Omega\\left(N{{|{{\\Sigma}}|}}\\right) neurons. These results present a first step towards characterizing the classes of distributions RNN LMs can represent and thus help us understand their capabilities and limitations. https://github.com/rycolab/weighted-minsky\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Probing classifiers: Promises, shortcomings, and advances\",\n        \"On the practical ability of recurrent neural networks to recognize hierarchical languages\",\n        \"Language models are few-shot learners\",\n        \"On the determinization of weighted finite automata\",\n        \"Evaluating large language models trained on code\",\n        \"Recurrent neural networks as weighted language recognizers\",\n        \"On the properties of neural machine translation: Encoder‚Äìdecoder approaches\",\n        \"Syntactic Structures\",\n        \"PaLM: Scaling language modeling with pathways\",\n        \"Neural networks and the Chomsky hierarchy\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Threshold matrices and the state assignment problem for neural nets\",\n        \"A measure-theoretic characterization of tight language models\",\n        \"Finding structure in time\",\n        \"Context-free transductions with neural stacks\",\n        \"RNNs can generate bounded hierarchical languages with optimal memory\",\n        \"A structural probe for finding syntax in word representations\",\n        \"Long short-term memory\",\n        \"Training compute-optimal large language models\",\n        \"Calibrating generative models: The probabilistic Chomsky‚ÄìSch√ºtzenberger hierarchy\",\n        \"Optimal simulation of automata by neural nets\",\n        \"What does BERT learn about the structure of language?\",\n        \"Language models can solve computer tasks\",\n        \"Representation of events in nerve nets and finite automata\",\n        \"Large language models are zero-shot reasoners\",\n        \"On the computational power of RNNs\",\n        \"Limitations of autoregressive models and their alternatives\",\n        \"Assessing the ability of LSTMs to learn syntax-sensitive dependencies\",\n        \"Linguistic knowledge and transferability of contextual representations\",\n        \"Emergent linguistic structure in artificial neural networks trained by self-supervision\",\n        \"From softmax to sparsemax: A sparse model of attention and multi-label classification\",\n        \"A logical calculus of the ideas immanent in nervous activity\",\n        \"Sequential neural networks as automata\",\n        \"Saturated transformers are constant-depth threshold circuits\",\n        \"Extracting finite automata from RNNs using state merging\",\n        \"A formal hierarchy of RNN architectures\",\n        \"Neural Nets and the Brain Model Problem\",\n        \"Finite-state transducers in language and speech processing\",\n        \"On the representational capacity of recurrent neural language models\",\n        \"Rational recurrences\",\n        \"A primer in BERTology: What we know about how BERT works\",\n        \"Distilling reasoning capabilities into smaller language models\",\n        \"On the computational power of neural nets\",\n        \"Efficiently representing finite-state automata with recurrent neural networks\",\n        \"Attention is all you need\",\n        \"Emergent abilities of large language models\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"On the practical computational power of finite precision RNNs for language recognition\",\n        \"Learning deterministic weighted automata with queries and counterexamples\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Recurrent Neural Language Models as Probabilistic Finite-state Automata, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}