{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Backdoors for Mixed Integer Programs with Contrastive Learning\n\nPaper Abstract: Abstract Many real-world problems can be efficiently modeled as Mixed Integer Programs (MIPs) and solved with the Branch-and-Bound method. Prior work has shown the existence of MIP backdoors, small sets of variables such that prioritizing branching on them when possible leads to faster running times. However, finding high-quality backdoors that improve running times remains an open question. Previous work learns to estimate the relative solver speed of randomly sampled backdoors through ranking and then decide whether to use it. In this paper, we utilize the Monte-Carlo tree search method to collect backdoors for training, rather than relying on random sampling, and adapt a contrastive learning framework to train a Graph Attention Network model to predict backdoors. Our method, evaluated on four common MIP problem domains, demonstrates performance improvements over both Gurobi and previous models.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Set covering algorithms using cutting planes, heuristics, and subgradient optimization: a computational study\",\n        \"How attentive are graph attention networks?\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Learning to schedule heuristics in branch and bound\",\n        \"Backdoors in the context of learning\",\n        \"Augment with care: Contrastive learning for combinatorial problems\",\n        \"On the evolution of random graphs\",\n        \"Learning pseudo-backdoors for mixed integer programs\",\n        \"Backdoor branching\",\n        \"Mixed integer linear programming in process scheduling: Modeling, algorithms, and applications\",\n        \"Exact combinatorial optimization with graph convolutional neural networks\",\n        \"Algorithms for the multi-resource generalized assignment problem\",\n        \"Hybrid models for learning to branch\",\n        \"Gurobi Optimizer Reference Manual\",\n        \"A gnn-guided predict-and-search framework for mixed-integer linear programming\",\n        \"Learning to search in branch and bound algorithms\",\n        \"Learning deep representations by mutual information estimation and maximization\",\n        \"Forest harvesting and minimum cuts: a new approach to handling spatial constraints\",\n        \"Searching large neighborhoods for integer linear programs with contrastive learning\",\n        \"A survey on contrastive self-supervised learning\",\n        \"Learning to branch in mixed integer programming\",\n        \"Learning to run heuristics in tree search\",\n        \"Finding backdoors to integer programs: a monte carlo tree search framework\",\n        \"Supervised contrastive learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Computation of renameable horn backdoors\",\n        \"Learning to compare nodes in branch and bound with graph neural networks\",\n        \"An automatic method for solving discrete programming problems\",\n        \"Towards a universal test suite for combinatorial auction algorithms\",\n        \"An efficient framework for learning sentence representations\",\n        \"Contrastive losses and solution caching for predict-and-optimize\",\n        \"Solving mixed integer programs using neural networks\",\n        \"Representation learning with contrastive predictive coding\",\n        \"Computing horn strong backdoor sets thanks to local search\",\n        \"Learning to cut by looking ahead: Cutting plane selection via imitation learning\",\n        \"Heuristic search viewed as path finding in a graph\",\n        \"Learning to search via retrospective imitation\",\n        \"A general large neighborhood search framework for solving integer linear programs\",\n        \"Learning a large neighborhood search algorithm for mixed integer programs\",\n        \"Reinforcement learning for integer programming: Learning to cut\",\n        \"Finding a maximum independent set\",\n        \"Directed graph contrastive learning\",\n        \"The vehicle routing problem\",\n        \"Graph attention networks\",\n        \"Backdoors to typical case complexity\",\n        \"Graph contrastive learning with augmentations\",\n        \"A survey for solving mixed integer programming via machine learning\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Learning Backdoors for Mixed Integer Programs with Contrastive Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}