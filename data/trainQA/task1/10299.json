{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SSR: Spatial Sequential Hybrid Architecture for Latency Throughput Tradeoff in Transformer Acceleration\n\nPaper Abstract: Abstract. With the increase in the computation intensity of the chip, the mismatch between computation layer shapes and the available computation resource significantly limits the utilization of the chip. Driven by this observation, prior works discuss spatial accelerators or dataflow architecture to maximize the throughput. However, using spatial accelerators could potentially increase the execution latency. In this work, we first systematically investigate two execution models: (1) sequentially (temporally) launch one monolithic accelerator, and (2) spatially launch multiple accelerators. From the observations, we find that there is a latency throughput tradeoff between these two execution models, and combining these two strategies together can give us a more efficient latency throughput Pareto front. To achieve this, we propose spatial sequential architecture (SSR) and SSR design automation framework to explore both strategies together when deploying deep learning inference. We use the 7nm AMD Versal ACAP VCK190 board to implement SSR accelerators for four end-to-end transformer-based deep learning models. SSR achieves average throughput gains of 2.53x, 35.71x, and 14.20x under different batch sizes compared to the 8nm Nvidia GPU A10G, 16nm AMD FPGAs ZCU102, and U250. The average energy efficiency gains are 8.51x, 6.75x, and 21.22x, respectively. Compared with the sequential-only solution and spatial-only solution on VCK190, our spatial-sequential-hybrid solutions achieve higher throughput under the same latency requirement and lower latency under the same throughput requirement. We also use SSR analytical models to demonstrate how to use SSR to optimize solutions on other computing platforms, e.g., 14nm Intel Stratix 10 NX.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Autonomous vehicles drive ai advances for edge computing\",\n        \"Colliding particles not cars: CERNâ€™s machine learning could help self-driving cars\",\n        \"Accelerating large scale deep learning inference through {{\\\\{DeepCPU}}} at microsoft\",\n        \"Versal: The First Adaptive Compute Acceleration Platform (ACAP)(WP505)\",\n        \"A reconfigurable fabric for accelerating large-scale datacenter services\",\n        \"A cloud-scale acceleration architecture\",\n        \"Azure accelerated networking:{{\\\\{SmartNICs}}} in the public cloud\",\n        \"A configurable cloud-scale DNN processor for real-time AI\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Aws inferentia: High performance at the lowest cost in amazon ec2 for deep learning inference\",\n        \"Vehicle computing: Vision and challenges\",\n        \"REFRESH FPGAs: Sustainable FPGA Chiplet Architectures\",\n        \"Dnnbuilder: An automated tool for building high-performance dnn hardware accelerators for fpgas\",\n        \"Ef-train: Enable efficient on-device cnn training on fpga through data reshaping for online adaptation or personalization\",\n        \"Algorithm-Hardware Co-Design of Attention Mechanism on FPGA Devices\",\n        \"Mp-opu: A mixed precision fpga-based overlay processor for convolutional neural networks\",\n        \"Inter-layer scheduling space definition and exploration for tiled accelerators\",\n        \"Full stack optimization of transformer inference\",\n        \"CHARM: Composing Heterogeneous AcceleRators for Matrix Multiply on Versal ACAP Architecture\",\n        \"AIM: Accelerating Arbitrary-precision Integer Multiplication on Heterogeneous Reconfigurable Computing Platform Versal ACAP\",\n        \"Challenges and Opportunities to Enable Large-Scale Computing via Heterogeneous Chiplets\",\n        \"Computing-in-memory neural network accelerators for safety-critical systems: Can small device variations be disastrous?\",\n        \"Swim: Selective write-verify for computing-in-memory neural accelerators\",\n        \"Improving realistic worst-case performance of nvcim dnn accelerators through training with right-censored gaussian noise\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Caffeine: Toward uniformed representation and acceleration for deep convolutional neural networks\",\n        \"Versal AI Core Series\",\n        \"Efficient inference with tensorrt\",\n        \"Nvidia aws a10g gpu data sheet\",\n        \"Versal Adaptive Compute Acceleration Platform\",\n        \"Diviml: A module-based heuristic for mapping neural networks onto heterogeneous platforms\",\n        \"Magma: An optimization framework for mapping multiple dnns on multiple accelerator cores\",\n        \"Heterogeneous dataflow accelerators for multi-dnn workloads\",\n        \"Vitcod: Vision transformer acceleration via dedicated algorithm and accelerator co-design\",\n        \"Heatvit: Hardware-efficient adaptive token pruning for vision transformers\",\n        \"Auto-vit-acc: An fpga-aware automatic acceleration framework for vision transformer with mixed-scheme quantization\",\n        \"Beyond peak performance: Comparing the real performance of ai-optimized fpgas and gpus\",\n        \"Dnnexplorer: a framework for modeling and exploring a novel paradigm of fpga-based dnn accelerator\",\n        \"TensorFlow: Learning Functions at Scale\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Gemmini: Enabling systematic deep-learning architecture evaluation via full-stack integration\",\n        \"High Performance, Low Power Matrix Multiply Design on ACAP: from Architecture, Design Challenges and DSE Perspectives\",\n        \"Genetic algorithms\",\n        \"Vitis unified software platform\",\n        \"System Management Interface SMI â€” NVIDIA Developer\",\n        \"Zynq UltraScale+ MPSoC ZCU102 Evaluation Kit\",\n        \"Alveo U250 Data Center Accelerator Card\",\n        \"Board evaluation and management Tool\",\n        \"Stratix10 NX FPGA\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in SSR: Spatial Sequential Hybrid Architecture for Latency Throughput Tradeoff in Transformer Acceleration, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}