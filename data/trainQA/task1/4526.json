{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CONetV2: Efficient Auto-Channel Size Optimization for CNNs\n\nPaper Abstract: Abstract Neural Architecture Search (NAS) has been pivotal in finding optimal network configurations for Convolution Neural Networks (CNNs). While many methods explore NAS from a global search-space perspective, the employed optimization schemes typically require heavy computational resources. This work introduces a method that is efficient in computationally constrained environments by examining the micro-search space of channel size. In tackling channel-size optimization, we design an automated algorithm to extract the dependencies within different connected layers of the network. In addition, we introduce the idea of knowledge distillation, which enables preservation of trained weights, admist trials where the channel sizes are changing. Further, since the standard performance indicators (accuracy, loss) fail to capture the performance of individual network components (providing an overall network evaluation), we introduce a novel metric that highly correlates with test accuracy and enables analysis of individual network layers. Combining dependency extraction, metrics, and knowledge distillation, we introduce an efficient searching algorithm, with simulated annealing inspired stochasticity, and demonstrate its effectiveness in finding optimal architectures that outperform baselines by a large margin.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"S3nas: Fast npu-aware neural architecture search methodology\",\n        \"A survey on neural architecture search\",\n        \"Designing neural network architectures using reinforcement learning\",\n        \"Taking human out of learning applications: A survey on automated machine learning\",\n        \"Genetic cnn\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Going deeper with convolutions\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Learning transferable architectures for scalable image recognition\",\n        \"Progressive neural architecture search\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"Hr-nas: Searching efficient high-resolution neural architectures with lightweight transformers\",\n        \"Zero-cost proxies for lightweight nas\",\n        \"Channel-directed gradients for optimization of convolutional neural networks\",\n        \"Fantastic generalization measures and where to find them\",\n        \"In search of robust measures of generalization\",\n        \"Nats-bench: Benchmarking nas algorithms for architecture topology and size\",\n        \"Evolving deep neural networks\",\n        \"Simple and efficient architecture search for convolutional neural networks\",\n        \"Efficient architecture search by network transformation\",\n        \"Auto-keras: An efficient neural architecture search system\",\n        \"Denser: deep evolutionary network structured representation\",\n        \"Deepswarm: Optimising convolutional neural networks using swarm intelligence\",\n        \"Practical block-wise neural network architecture generation\",\n        \"Dpp-net: Device-aware progressive search for pareto-optimal neural architectures\",\n        \"Path-level network transformation for efficient architecture search\",\n        \"Understanding and simplifying one-shot architecture search\",\n        \"Distilling the knowledge in a neural network\",\n        \"Transfer nas: Knowledge transfer between search spaces with transformer agents\",\n        \"Xfernas: Transfer neural architecture search\",\n        \"Towards understanding knowledge distillation\",\n        \"A comprehensive overhaul of feature distillation\",\n        \"Paying more attention to attention: Improving the performance of convolutional neural networks via attention transfer\",\n        \"Net2net: Accelerating learning via knowledge transfer\",\n        \"Fitnets: Hints for thin deep nets\",\n        \"Resnet in resnet: Generalizing residual architectures\",\n        \"Wider or deeper: Revisiting the resnet model for visual recognition\",\n        \"Unas: Differentiable architecture search meets reinforcement learning\",\n        \"Es-enas: Controller-based architecture search for evolutionary reinforcement learning\",\n        \"Evolving reinforcement learning algorithms\",\n        \"Grid search, random search, genetic algorithm: A big comparison for NAS\",\n        \"Evolutionary algorithm enhanced neural architecture search for text-independent speaker verification\",\n        \"Adas: Adaptive scheduling of stochastic gradients\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Deep residual learning for image recognition\",\n        \"A Stochastic Approximation Method\",\n        \"Darts: Differentiable architecture search\",\n        \"Learning multiple layers of features from tiny images\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in CONetV2: Efficient Auto-Channel Size Optimization for CNNs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}