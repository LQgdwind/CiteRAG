{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Catching Attention with Automatic Pull Quote Selection\n\nPaper Abstract: Abstract To advance understanding on how to engage readers, we advocate the novel task of automatic pull quote selection. Pull quotes are a component of articles specifically designed to catch the attention of readers with spans of text selected from the article and given more salient presentation. This task differs from related tasks such as summarization and clickbait identification by several aspects. We establish a spectrum of baseline approaches to the task, ranging from handcrafted features to a neural mixture-of-experts to cross-task models. By examining the contributions of individual features and embedding dimensions from these models, we uncover unexpected properties of pull quotes to help answer the important question of what engages readers. Human evaluation also supports the uniqueness of this task and the suitability of our selection models. The benefits of exploring this problem further are clear: pull quotes increase enjoyment and readability, shape reader perceptions, and facilitate learning. Code to reproduce this work is available at https://github.com/tannerbohn/AutomaticPullQuoteSelection.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Attention and the processing of emotional words: Dissociating effects of arousal\",\n        \"Natural Language Processing with Python: Analyzing Text with the Natural Language Toolkit\",\n        \"The frequency and placement of topic sentences in expository prose\",\n        \"Concreteness ratings for 40 thousand generally known english word lemmas\",\n        \"Stop clickbait: Detecting and preventing clickbaits in online news media\",\n        \"Distraction-based neural networks for document summarization\",\n        \"Keras\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Lexrank: Graph-based lexical centrality as salience in text summarization\",\n        \"How to Write Plain English: A Book for Lawyers and Consumers\",\n        \"InDesign Type: Professional Typography with Adobe InDesign\",\n        \"Exploring content models for multi-document summarization\",\n        \"Automatic keyphrase extraction: A survey of the state of the art\",\n        \"Multi-class adaboost\",\n        \"Improving neural networks by preventing co-adaptation of feature detectors\",\n        \"Subediting and Production for Journalists: Print, Digital & Social\",\n        \"Vader: A parsimonious rule-based model for sentiment analysis of social media text\",\n        \"Adaptive mixtures of local experts\",\n        \"Adam: A method for stochastic optimization\",\n        \"Buzzwords: Early cortical responses to emotional eords during reading\",\n        \"Self-normalizing neural networks\",\n        \"Predicting news headline popularity with syntactic and semantic knowledge using multi-task learning\",\n        \"Clustering to find exemplar terms for keyphrase extraction\",\n        \"The automatic creation of literature abstracts\",\n        \"Human-competitive tagging using automatic keyphrase extraction\",\n        \"Textrank: Bringing order into text\",\n        \"Multi-source social feedback of online news feeds\",\n        \"Abstractive text summarization using sequence-to-sequence rnns and beyond\",\n        \"Classify or select: Neural architectures for extractive document summarization\",\n        \"Summarunner: A recurrent neural network based sequence model for extractive summarization of documents\",\n        \"A survey of text summarization techniques\",\n        \"The impact of frequency on summarization\",\n        \"Automatic summarization\",\n        \"Scikit-learn: Machine learning in python\",\n        \"Headlines matter: Using headlines to predict the popularity of news articles on twitter and facebook\",\n        \"Clickbait detection\",\n        \"Sentence-bert: Sentence embeddings using siamese bert-networks\",\n        \"Automatic key term extraction from scientific articles in grobid\",\n        \"Engaging texts: Effects of concreteness on comprehensibility, interest, and recall in four text types\",\n        \"Selective visual attention to emotion\",\n        \"Infographics: A Journalist’s Guide\",\n        \"A language model approach to keyphrase extraction\",\n        \"Learning to extract key phrases from text, nrc technical report erb· 1057\",\n        \"How curiosity can be modeled for a clickbait detector\",\n        \"Young readers and the newspaper: Information recall and perceived enjoyment, readability, and attractiveness\",\n        \"Information recall of four newspaper elements among young readers.\",\n        \"Norms of valence, arousal, and dominance for 13,915 english lemmas\",\n        \"Pegasus: Pre-training with extracted gap-sentences for abstractive summarization\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Catching Attention with Automatic Pull Quote Selection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}