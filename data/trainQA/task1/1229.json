{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 INTRODUCTION\n\nPaper Abstract: Abstract Data cleaning is naturally framed as probabilistic inference in a generative model of ground-truth data and likely errors, but the diversity of real-world error patterns and the hardness of inference make Bayesian approaches difficult to automate. We present PClean, a probabilistic programming language (PPL) for leveraging dataset-specific knowledge to automate Bayesian cleaning.††All code available at github.com/probcomp/PClean Compared to general-purpose PPLs, PClean tackles a restricted problem domain, enabling three modeling and inference innovations: (1) a non-parametric model of relational database instances, which users’ programs customize; (2) a novel sequential Monte Carlo inference algorithm that exploits the structure of PClean’s model class; and (3) a compiler that generates near-optimal SMC proposals and blocked-Gibbs rejuvenation kernels based on the user’s model and data. We show empirically that short (<50-line) PClean programs can: be faster and more accurate than generic PPL inference on data-cleaning benchmarks; match state-of-the-art data-cleaning systems in terms of accuracy and runtime (unlike generic PPL inference in the same runtime); and scale to real-world datasets with millions of records.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Detecting data errors: Where are we and what needs to be done?\",\n        \"Gibbs sampling in open-universe stochastic languages\",\n        \"Pyro: Deep universal probabilistic programming\",\n        \"Stan: A probabilistic programming language\",\n        \"Group fairness by probabilistic modeling with latent fair decisions\",\n        \"Holistic data cleaning: Putting violations into context\",\n        \"Gen: A general-purpose probabilistic programming system with programmable inference\",\n        \"NADEEF: A commodity data cleaning system\",\n        \"BayesWipe: A scalable probabilistic framework for improving data quality\",\n        \"A formal framework for probabilistic unclean databases\",\n        \"Robust variational autoencoders for outlier detection and repair of mixed-type data\",\n        \"Learning probabilistic relational models\",\n        \"Church: A Language for Generative Models\",\n        \"The Design and Implementation of Probabilistic Programming Languages\",\n        \"Tabular: A schema-driven probabilistic programming language\",\n        \"Toward normative expert systems: Part I, the PATHFINDER project\",\n        \"HoloDetect: Few-shot learning for error detection\",\n        \"Decision theory in expert systems and artificial intelligence\",\n        \"Bayesian Data Cleaning for Web Data.\",\n        \"Probabilistic noise identification and data cleaning\",\n        \"Picture: A probabilistic programming language for scene perception\",\n        \"Raha: A configuration-free error detection system\",\n        \"Venture: a higher-order probabilistic programming platform with programmable inference\",\n        \"d-blink: Distributed end-to-end bayesian entity resolution\",\n        \"Active Duplicate Detection with Bayesian Nonparametric Models.\",\n        \"A statistical method for integrated data cleaning and imputation\",\n        \"Object Consolodation by Graph Partitioning with a Conditionally-Trained Distance Metric\",\n        \"BLOG: Probabilistic Models With Unknown Objects\",\n        \"General-purpose MCMC inference over relational structures\",\n        \"Delayed sampling and automatic rao-blackwellization of probabilistic programs\",\n        \"Bayesian state-space modelling on high-performance hardware using LibBi\",\n        \"Automated learning with a probabilistic programming language: Birch\",\n        \"Elements of sequential monte carlo\",\n        \"Identity uncertainty and citation matching\",\n        \"Probabilistic reasoning in intelligent systems: networks of plausible inference\",\n        \"HoloClean: Holistic data repairs with probabilistic inference\",\n        \"C3: Lightweight incrementalized mcmc for probabilistic programs using continuations and callsite caching\",\n        \"Bayesian Synthesis of Probabilistic Programs for Automatic Data Modeling\",\n        \"Functional programming for modular bayesian inference\",\n        \"Probabilistic expert systems\",\n        \"A Bayesian Approach to Graphical Record Linkage and Deduplication\",\n        \"Hierarchical Bayesian nonparametric models with applications\",\n        \"Design and implementation of probabilistic programming language anglican\",\n        \"County Population Totals: 2010-2019.\",\n        \"An integrated, conditional model of information extraction and coreference with application to citation matching\",\n        \"A joint model for discovering and linking entities\",\n        \"Parameter elimination in particle gibbs sampling\",\n        \"Alexandria : Unsupervised High-Precision Knowledge Base Construction using a Probabilistic Program\",\n        \"A New Approach to Probabilistic Programming Inference\",\n        \"Hierarchical probabilistic models for group anomaly detection\",\n        \"A Bayesian approach to discovering truth from conflicting sources for data integration\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in 1 INTRODUCTION, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}