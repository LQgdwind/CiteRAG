{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Large Language Models as Realistic Microservice Trace Generators\n\nPaper Abstract: Abstract Workload traces are essential to understand complex computer systems’ behavior and manage processing and memory resources. Since real-world traces are hard to obtain, synthetic trace generation is a promising alternative. This paper proposes a first-of-a-kind approach that relies on training a large language model (LLM) to generate synthetic workload traces, specifically microservice call graphs. To capture complex and arbitrary hierarchical structures and implicit constraints in such traces, we show how to fine-tune LLMs to generate recursively, making call graph generation a sequence of easier steps. To further enforce learning constraints in traces and generate uncommon situations, we argue for applying additional instruction tuning steps to align our model with the desired trace features. Our evaluation results show that we can generate diverse realistic traces under various conditions and outperform existing methods in accuracy and validity. We demonstrate that our synthetically generated traces can effectively replace real data to optimize important microservice management tasks. Additionally, our model adapts to downstream trace-related tasks, such as predicting key trace features and infilling missing data.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Aws whitepaper: Implementing microservices on aws\",\n        \"Generating complex, realistic cloud workloads using recurrent neural networks\",\n        \"Language models are realistic tabular data generators\",\n        \"Language models are few-shot learners\",\n        \"Scaling instruction-finetuned language models\",\n        \"The llama 3 herd of models\",\n        \"An open-source benchmark suite for microservices and their hardware-software implications for cloud & edge systems\",\n        \"Generative adversarial nets\",\n        \"Textbooks are all you need\",\n        \"Denoising diffusion probabilistic models\",\n        \"LoRA: Low-rank adaptation of large language models\",\n        \"Systemizing and mitigating topological inconsistencies in alibaba’s microservice call-graph datasets\",\n        \"Lifting the veil on Meta’s microservice architecture: Analyses of topology and request workflows\",\n        \"Root cause analysis of failures in microservices through causal discovery\",\n        \"Generative, high-fidelity network traces\",\n        \"Auto-encoding variational bayes\",\n        \"Recursion of thought: A divide-and-conquer approach to multi-context reasoning with language models\",\n        \"Solving quantitative reasoning problems with language models\",\n        \"Selective reflection-tuning: Student-selected data recycling for llm instruction-tuning\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Using gans for sharing networked time series data: Challenges, initial promise, and open questions\",\n        \"Visual instruction tuning\",\n        \"Chipnemo: Domain-adapted llms for chip design\",\n        \"Decoupled weight decay regularization\",\n        \"Characterizing microservice dependency and performance: Alibaba trace analysis\",\n        \"The power of prediction: microservice auto scaling via workload learning\",\n        \"Netflix tech blog: Microservices\",\n        \"Show your work: Scratchpads for intermediate computation with language models\",\n        \"Training language models to follow instructions with human feedback\",\n        \"FIRM: An intelligent fine-grained resource management framework for SLO-Oriented microservices\",\n        \"Code llama: Open foundation models for code\",\n        \"Multitask prompted training enables zero-shot task generalization\",\n        \"Tag-llm: Repurposing general-purpose llms for specialized domains\",\n        \"Fundamentals of recurrent neural network (rnn) and long short-term memory (lstm) network\",\n        \"Autoprompt: Eliciting knowledge from language models with automatically generated prompts\",\n        \"Atoll: A scalable low-latency serverless platform\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Introducing domain-oriented microservice architecture\",\n        \"Recursively summarizing enables long-term dialogue memory in large language models\",\n        \"Finetuned language models are zero-shot learners\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"Unsupervised anomaly detection on microservice traces through graph vae\",\n        \"Modeling tabular data using conditional gan\",\n        \"Tree of thoughts: Deliberate problem solving with large language models\",\n        \"Practical GAN-based synthetic IP header trace generation using NetShare\",\n        \"Ursa: Lightweight Resource Management for Cloud-Native Microservices\",\n        \"CRISP: Critical path analysis of Large-Scale microservice architectures\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Large Language Models as Realistic Microservice Trace Generators, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}