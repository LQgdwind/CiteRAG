{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast Real Evaluation Through Sound Mixed-Precision Tuning\n\nPaper Abstract: Abstract. Evaluating a real-valued expression to high precision is a key building block in computational mathematics, physics, and numerics. A typical implementation uses a uniform precision for each operation, and doubles that precision until the real result can be bounded to some sufficiently narrow interval. However, this is wasteful: usually only a few operations really need to be performed at high precision, and the bulk of the expression could use much lower precision. Uniform precision can also waste iterations discovering the necessary precision and then still overestimate by up to a factor of two. We propose to instead use mixed-precision interval arithmetic to evaluate real-valued expressions. A key challenge is deriving the mixed-precision assignment both soundly and quickly. To do so, we introduce a sound variation of error Taylor series and condition numbers, specialized to interval arithmetic, that can be evaluated with minimal overhead thanks to an ‚Äúexponent trick‚Äù. Our implementation, Reval, achieves a speed-up of 1.25√ó1.25\\times compared to the state-of-the-art Sollya tool, with the speed-up increasing to 2.99√ó2.99\\times on the most difficult input points. An examination of the precisions used with and without precision tuning shows that the speed-up results come from quickly assigning lower precisions for the majority of operations.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"IEEE Standard for Interval Arithmetic\",\n        \"Fast and Efficient Bit-Level Precision Tuning\",\n        \"[libc] Move implementations of cosf, sinf, sincosf to src/math directory\",\n        \"MPFUN: A Portable High Performance Multiprecision Package\",\n        \"High-Precision Arithmetic in Mathematical Physics\",\n        \"Constructive Real Interpretation of Numerical Programs (SIGPLAN ‚Äô87)\",\n        \"The constructive reals as a Java Library\",\n        \"Towards an API for the Real Numbers\",\n        \"Exact Real Arithmetic: A Case Study in Higher Order Programming (LFP ‚Äô86)\",\n        \"Choosing mathematical function implementations for speed and accuracy\",\n        \"Implementing exact real arithmetic in python, C++ and C\",\n        \"Correctly-rounded evaluation of a function: why, how, and at what cost?\",\n        \"Bug 29335 - transcendental functions with constant arguments should be resolved at compile-time\",\n        \"Sollya: An Environment for the Development of Numerical Codes\",\n        \"Rigorous Floating-point Mixed-precision Tuning (POPL)\",\n        \"Salsa: An automatic tool to improve the numerical accuracy of programs (AFM)\",\n        \"Formal Methods for Industrial Critical Systems: 20th International Workshop, FMICS 2015 Oslo, Norway, June 22-23, 2015 Proceedings\",\n        \"Toward a Standard Benchmark Format and Suite for Floating-Point Analysis\",\n        \"Sound Compilation of Reals (POPL)\",\n        \"Scalable yet Rigorous Floating-Point Error Analysis\",\n        \"Robustness Analysis of Loop-Free Floating-Point Programs via Symbolic Automatic Differentiation\",\n        \"Chebfun Guide\",\n        \"Making Interval Arithmetic Robust to Overflow\",\n        \"MPFR: A multiple-precision binary floating-point library with correct rounding\",\n        \"Gaol: NOT Just Another Interval Library\",\n        \"Macaulay2, a software system for research in algebraic geometry\",\n        \"FLInt: Exploiting Floating Point Enabled Integer Arithmetic for Efficient Random Forest Inference\",\n        \"On sound relative error bounds for floating-point arithmetic (FMCAD)\",\n        \"Calcium\",\n        \"Arb: Efficient Arbitrary-Precision Midpoint-Radius Interval Arithmetic\",\n        \"Optimizing Programs over the Constructive Reals (PLDI ‚Äô90)\",\n        \"Efficient Exact Arithmetic over Constructive Reals\",\n        \"An approach to generate correctly rounded math libraries for new floating point variants\",\n        \"Program Transformation for Numerical Precision (PEPM ‚Äô09)\",\n        \"Strongly Typed Numerical Computations\",\n        \"Moore: Interval Arithmetic in Modern C++\",\n        \"Arbitrary precision real arithmetic: design and algorithms\",\n        \"Automatically Improving Accuracy for Floating Point Expressions (PLDI)\",\n        \"Sur la d√©termination des polyn√¥mes d‚Äôapproximation de degr√©‚Äô donn√©e\",\n        \"Motivations for an Arbitrary Precision Interval Arithmetic and the MPFI Library\",\n        \"Floating-point Precision Tuning Using Blame Analysis (ICSE)\",\n        \"Precimonious: Tuning assistant for floating-point precision\",\n        \"dD Geometry Kernel\",\n        \"ŒªssubscriptùúÜùë†\\\\lambda_{s}: computable semantics for differentiable programming with higher-order functions and datatypes\",\n        \"Rigorous Estimation of Floating-Point Round-Off Errors with Symbolic Taylor Expansions\",\n        \"An Abstract Interpretation Framework for the Round-Off Error Analysis of Floating-Point Programs (VMCAI)\",\n        \"Numbers‚ÄîWolfram Language Documentation\",\n        \"Fast evaluation of elementary mathematical functions with correctly rounded last bit\",\n        \"Detecting floating-point errors via atomic conditions\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Fast Real Evaluation Through Sound Mixed-Precision Tuning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}