{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Apache Submarine: A Unified Machine Learning Platform Made Simple\n\nPaper Abstract: Abstract. As machine learning is applied more widely, it is necessary to have a machine learning platform for both infrastructure administrators and users including expert data scientists and citizen data scientists (Idoine, 2018) to improve their productivity. However, existing machine learning platforms are ill-equipped to address the “Machine Learning tech debts” (Sculley et al., 2015) such as glue code, reproducibility, and portability. Furthermore, existing platforms only take expert data scientists into consideration, and thus they are inflexible for infrastructure administrators and non-user-friendly for citizen data scientists. We propose Submarine, a unified machine learning platform, to address the challenges. For infrastructure administrators, Submarine is a flexible and portable platform. To improve resource efficiency and ensure portability, Submarine supports both on-premise clusters including Kubernetes (D. K. Rensin, Kubernetes, 2015) and Hadoop YARN (YARN, 2020), and cloud services, rather than only focusing on Kubernetes. In addition, Submarine supports multiple machine learning frameworks to avoid tight coupling between the modeling and infrastructure layers caused by glue code. For expert data scientists, Submarine is a unified system to streamline the workflow from idea to serving models in production. Data scientists without experience in distributed systems can operate Submarine smoothly, since Submarine hides the details of infrastructure. For citizen data scientists, Submarine is an easy-to-use platform to save their time on machine learning framework API and help them focus on domain-specific problems. To elaborate, Submarine provides a high-level SDK that allows users to develop their models in a few lines of code. Also, the Submarine Predefined Template Service enables users to run experiments without writing a single line of code. Submarine has been widely used in many technology companies, including Ke.com and LinkedIn. We present two use cases in Section 6.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Large Scale Distributed Deep Learning on Hadoop Clusters\",\n        \"[YARN-8851] GPU hierarchy/topology scheduling support based on pluggable device framework\",\n        \"Apache YuniKorn (Incubating)\",\n        \"Azkaban\",\n        \"Docker Swarm\",\n        \"etcd\",\n        \"Microsoft NNI\",\n        \"TensorFlow: A System for Large-Scale Machine Learning\",\n        \"Apache Airflow\",\n        \"AliyunContainerService gpushare-scheduler-extender\",\n        \"Tencent Angel-ML\",\n        \"Azure: Build, train, and deploy models from the cloud to the edge\",\n        \"The Winding Road to Better Machine Learning Infrastructure Through Tensorflow Extended and Kubeflow\",\n        \"Apache Beam\",\n        \"Bighead: A Framework-Agnostic, End-to-End Machine Learning Platform\",\n        \"MXNet: A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems\",\n        \"Cloudera data science workbench: Self-service data science for the enterprise\",\n        \"Introducing kubeflow - a composable, portable, scalable ml stack built for kubernetes\",\n        \"TFX: A TensorFlow-Based Production-Scale Machine Learning Platform\",\n        \"Kubernetes - Scheduling the Future at Cloud Scale\",\n        \"Determined-AI Determined\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Introducing fblearner flow: Facebook’s ai backbone\",\n        \"DeepFM: A Factorization-Machine Based Neural Network for CTR Prediction\",\n        \"Meet michelangelo: Uber’s machine learning platform\",\n        \"TonY: An Orchestrator for Distributed Machine Learning Jobs\",\n        \"Citizen Data Scientists and Why They Matter\",\n        \"Analysis of Large-Scale Multi-Tenant GPU Clusters for DNN Training Workloads\",\n        \"Jupyter notebook\",\n        \"Minimizing GPU Cost for Your Deep Learning on Kubernetes\",\n        \"One weird trick for parallelizing convolutional neural networks\",\n        \"ImageNet Classification with Deep Convolutional Neural Networks\",\n        \"MNIST handwritten digit database\",\n        \"Netflix metaflow\",\n        \"Ray: A Distributed Framework for Emerging AI Applications\",\n        \"Productionizing ML with workflows at Twitter\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Amazon sagemaker: Machine learning for every developer and data scientist\",\n        \"Hidden technical debt in machine learning systems\",\n        \"An architecture for parallel topic models\",\n        \"Valohai MLOps platform\",\n        \"Vertex AI\",\n        \"Apache Hadoop YARN\",\n        \"Introducing mlflow: an open source machine learning platform\",\n        \"Zeppelin\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Apache Submarine: A Unified Machine Learning Platform Made Simple, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}