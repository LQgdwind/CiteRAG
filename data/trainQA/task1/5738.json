{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: When NAS Meets Trees: An Efficient Algorithm for Neural Architecture Search\n\nPaper Abstract: Abstract The key challenge in neural architecture search (NAS) is designing how to explore wisely in the huge search space. We propose a new NAS method called TNAS (NAS with trees), which improves search efficiency by exploring only a small number of architectures while also achieving a higher search accuracy. TNAS introduces an architecture tree and a binary operation tree, to factorize the search space and substantially reduce the exploration size. TNAS performs a modified bi-level Breadth-First Search in the proposed trees to discover a high-performance architecture. Impressively, TNAS finds the global optimal architecture on CIFAR-10 with test accuracy of 94.37% in four GPU hours in NAS-Bench-201. The average test accuracy is 94.35%, which outperforms the state-of-the-art. Code is available at: https://github.com/guochengqian/TNAS.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Zero-cost proxies for lightweight NAS\",\n        \"Designing neural network architectures using reinforcement learning\",\n        \"Understanding and simplifying one-shot architecture search\",\n        \"Can weight sharing outperform random architecture search? an investigation with tunas\",\n        \"Random search for hyper-parameter optimization\",\n        \"SMASH: one-shot model architecture search through hypernetworks\",\n        \"Bn-nas: Neural architecture search with batch normalization\",\n        \"Neural architecture search on imagenet in four gpu hours: A theoretically inspired perspective\",\n        \"Progressive differentiable architecture search: Bridging the depth gap between search and evaluation\",\n        \"DARTS-: robustly stepping out of performance collapse without indicators\",\n        \"Chamnet: Towards efficient network design through platform-aware model adaptation\",\n        \"Searching for a robust neural architecture in four gpu hours\",\n        \"Nas-bench-201: Extending the scope of reproducible neural architecture search\",\n        \"Dots: Decoupling operation and topology in differentiable architecture search\",\n        \"Single path one-shot neural architecture search with uniform sampling\",\n        \"Deep residual learning for image recognition\",\n        \"Angle-based search space shrinking for neural architecture search\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Block-wisely supervised neural architecture search with knowledge distillation\",\n        \"BossNAS: Exploring hybrid CNN-transformers with block-wisely self-supervised neural architecture search\",\n        \"SGAS: sequential greedy architecture search\",\n        \"Random search and reproducibility for neural architecture search\",\n        \"Progressive neural architecture search\",\n        \"Darts: Differentiable architecture search\",\n        \"Neural architecture search without training\",\n        \"Cream of the crop: Distilling prioritized paths for one-shot neural architecture search\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Large-scale evolution of image classifiers\",\n        \"Evolving neural networks through augmenting topologies\",\n        \"K-shot NAS: learnable weight-sharing for NAS with k-shot supernets\",\n        \"Fbnetv2: Differentiable neural architecture search for spatial and channel dimensions\",\n        \"Learning latent architectural distribution in differentiable neural architecture search via variational information maximization\",\n        \"Stronger nas with weaker predictors\",\n        \"Nas-bench-101: Towards reproducible neural architecture search\",\n        \"Greedynas: Towards fast one-shot nas with greedy supernet\",\n        \"Bignas: Scaling up neural architecture search with big single-stage models\",\n        \"Evaluating the search phase of neural architecture search\",\n        \"Neural architecture search with random labels\",\n        \"Few-shot neural architecture search\",\n        \"Rethinking performance estimation in neural architecture search\",\n        \"Practical block-wise neural network architecture generation\",\n        \"Blockqnn: Efficient block-wise neural network architecture generation\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Learning transferable architectures for scalable image recognition\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in When NAS Meets Trees: An Efficient Algorithm for Neural Architecture Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}