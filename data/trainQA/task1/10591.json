{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Large Language Models are Few-shot Generators: Proposing Hybrid Prompt Algorithm To Generate Webshell Escape Samples\n\nPaper Abstract: Abstract The frequent occurrence of cyber-attacks has made webshell attacks and defense gradually become a research hotspot in the field of network security. However, the lack of publicly available benchmark datasets and the over-reliance on manually defined rules for webshell escape sample generation have slowed down the progress of research related to webshell escape sample generation strategies and artificial intelligence-based webshell detection algorithms. To address the drawbacks of weak webshell sample escape capabilities, the lack of webshell datasets with complex malicious features, and to promote the development of webshell detection technology, we propose the Hybrid Prompt algorithm for webshell escape sample generation with the help of large language models. As a prompt algorithm specifically developed for webshell sample generation, the Hybrid Prompt algorithm not only combines various prompt ideas including Chain of Thought, Tree of Thought, but also incorporates various components such as webshell hierarchical module and few-shot example to facilitate the LLM in learning and reasoning webshell escape strategies. Experimental results show that the Hybrid Prompt algorithm can work with multiple LLMs with excellent code reasoning ability to generate high-quality webshell samples with high Escape Rate (88.61% with GPT-4 model on VIRUSTOTAL detection engine) and Survival Rate (54.98% with GPT-4 model).\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"No honor among thieves: A large-scale analysis of malicious web shells\",\n        \"Functionality-preserving black-box optimization of adversarial windows malware\",\n        \"Opening the blackbox of virustotal: Analyzing online phishing scan engines\",\n        \"Handling webshell attacks: A systematic mapping and survey\",\n        \"Adversarial malware binaries: Evading deep learning for malware detection in executables\",\n        \"Mab-malware: A reinforcement learning framework for blackbox generation of adversarial malware\",\n        \"Poster: Attacking malware classifiers by crafting gradient-attacks that preserve functionality\",\n        \"A survey on evaluation of large language models\",\n        \"A survey of large language models\",\n        \"Understanding lstmâ€“a tutorial into long short-term memory recurrent neural networks\",\n        \"Gate-variants of gated recurrent unit (gru) neural networks\",\n        \"Improving chatgpt prompt for code generation\",\n        \"Pentestgpt: An llm-empowered automatic penetration testing tool\",\n        \"When gpt meets program analysis: Towards intelligent detection of smart contract logic vulnerabilities in gptscan\",\n        \"Copiloting the copilots: Fusing large language models with completion engines for automated program repair\",\n        \"Understanding programs by exploiting (fuzzing) test cases\",\n        \"Examining zero-shot vulnerability repair with large language models\",\n        \"Autoprompt: Eliciting knowledge from language models with automatically generated prompts\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"Tree of thoughts: Deliberate problem solving with large language models\",\n        \"Large language models are zero-shot reasoners\",\n        \"Language models as knowledge bases?\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Cwsogg: Catching web shell obfuscation based on genetic algorithm and generative adversarial network\",\n        \"Glm: General language model pretraining with autoregressive blank infilling\",\n        \"Zero-shot text-to-image generation\",\n        \"When foundation model meets federated learning: Motivations, challenges, and future directions\",\n        \"Self-consistency improves chain of thought reasoning in language models\",\n        \"Least-to-most prompting enables complex reasoning in large language models\",\n        \"Generated knowledge prompting for commonsense reasoning\",\n        \"Making language models better reasoners with step-aware verifier\",\n        \"How well does llm generate security tests?\",\n        \"Not the end of story: An evaluation of chatgpt-driven vulnerability description mappings\",\n        \"Steam: Simulating the interactive behavior of programmers for automatic bug fixing\",\n        \"Large language models are few-shot testers: Exploring llm-based general bug reproduction\",\n        \"Cnn-webshell: malicious web shell detection with convolutional neural network\",\n        \"Smartdetect: a smart detection scheme for malicious web shell codes via ensemble learning\",\n        \"Session-based webshell detection using machine learning in web logs\",\n        \"Mixed-models method based on machine learning in detecting webshell attack\",\n        \"A php and jsp web shell detection system with text processing based on machine learning\",\n        \"An efficient hybrid webshell detection method for webserver of marine transportation systems\",\n        \"Webshell detection technology based on deep learning\",\n        \"Deep learning based webshell detection coping with long text and lexical ambiguity\",\n        \"Msdetector: A static php webshell detection system based on deep-learning\",\n        \"Bert-embedding-based jsp webshell detection on bytecode level using xgboost\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Large Language Models are Few-shot Generators: Proposing Hybrid Prompt Algorithm To Generate Webshell Escape Samples, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}