{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: LogPrécis: Unleashing Language Models for Automated Shell Log Analysis Précis: a concise summary of essential points, statements, or facts\n\nPaper Abstract: Abstract The collection of security-related logs holds the key to understanding attack behaviors and diagnosing vulnerabilities. Still, their analysis remains a daunting challenge. Recently, Language Models (LMs) have demonstrated unmatched potential in understanding natural and programming languages. The question arises whether and how LMs could be also useful for security experts since their logs contain intrinsically confused and obfuscated information. In this paper, we systematically study how to benefit from the state-of-the-art in LM to automatically analyze text-like Unix shell attack logs. We present a thorough design methodology that leads to LogPrécis. It receives as input raw shell sessions and automatically identifies and assigns the attacker tactic to each portion of the session, i.e., unveiling the sequence of the attacker’s goals. We demonstrate LogPrécis capability to support the analysis of two large datasets containing about 400,000 unique Unix shell attacks. LogPrécis reduces them into about 3,000 fingerprints, each grouping sessions with the same sequence of tactics. The abstraction it provides lets the analyst better understand attacks, identify fingerprints, detect novelty, link similar attacks, and track families and mutations. Overall, LogPrécis, released as open source, paves the way for better and more responsive defense against cyberattacks.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Lockr\",\n        \"How shellshock can be exploited over dhcp\",\n        \"Report 3479\",\n        \"Dota3: Is your internet of things device moonlighting?\",\n        \"Mitre enterprise tactics\",\n        \"Codeberta, roberta-like model trained on the codesearchnet dataset from github.\",\n        \"Honeypot as a service (haas)\",\n        \"Honeypots: Know your adversary\",\n        \"Our selection of alerts on honeypots: report 9 – may 2023\",\n        \"Acme dataset - anonymised for double-blind submission\",\n        \"Dos and don’ts of machine learning in computer security\",\n        \"Fast unfolding of communities in large networks\",\n        \"Towards NLP-based Processing of Honeypot Logs\",\n        \"Language Models are Few-Shot Learners\",\n        \"Sparks of Artificial General Intelligence: Early experiments with GPT-4\",\n        \"Evaluating large language models trained on code\",\n        \"Identifying botnet IP address clusters using natural language processing techniques on honeypot command logs\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"A New Hope for Network Model Generalization\",\n        \"Deeplog: Anomaly detection and diagnosis from system logs through deep learning\",\n        \"CodeBERT: A Pre-Trained Model for Programming and Natural Languages\",\n        \"A synopsis of linguistic theory, 1930-1955\",\n        \"Data Mining in Long-Term Honeypot Data\",\n        \"Fingerprinting Tooling used for SSH Compromisation Attempts\",\n        \"Towards a Systematic Multi-Modal Representation Learning for Network Data\",\n        \"Forceatlas2, a continuous graph layout algorithm for handy network visualization designed for the gephi software\",\n        \"Symlm: Predicting function names in stripped binaries via context-sensitive execution-aware code embeddings\",\n        \"DDoS in the IoT: Mirai and Other Botnets\",\n        \"Log Parsing with Prompt-based Few-shot Learning\",\n        \"A survey on deep learning for named entity recognition\",\n        \"Rouge: A package for automatic evaluation of summaries\",\n        \"Nl2bash: A corpus and semantic parser for natural language interface to the linux operating system\",\n        \"How Machine Learning Is Solving the Binary Function Similarity Problem\",\n        \"Efficient Estimation of Word Representations in Vector Space\",\n        \"Fine-tuning\",\n        \"The carbon footprint of machine learning training will plateau, then shrink\",\n        \"Trex: Learning execution semantics from micro-traces for binary similarity\",\n        \"Honeypot cowrie implementation to protect ssh protocol in ubuntu server with visualisation using kippo-graph\",\n        \"Pre-trained models for natural language processing: A survey\",\n        \"Cyberlab honeynet dataset\",\n        \"Neural machine translation of rare words with subword units\",\n        \"GPT-2C: a parser for honeypot logs using large pre-trained language models\",\n        \"The all in one honeypot platform\",\n        \"Attention is all you need\",\n        \"Counting Outdated Honeypots: Legal and Useful\",\n        \"Generalizing from a few examples: A survey on few-shot learning\",\n        \"Levenshtein distance.\",\n        \"A survey of large language models\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in LogPrécis: Unleashing Language Models for Automated Shell Log Analysis Précis: a concise summary of essential points, statements, or facts, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}