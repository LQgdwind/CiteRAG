{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Universal Neural Functionals\n\nPaper Abstract: Abstract A challenging problem in many modern machine learning tasks is to process weight-space features, i.e., to transform or extract information from the weights and gradients of a neural network. Recent works have developed promising weight-space models that are equivariant to the permutation symmetries of simple feedforward networks. However, they are not applicable to general architectures, since the permutation symmetries of a weight space can be complicated by recurrence or residual connections. This work proposes an algorithm that automatically constructs permutation equivariant models, which we refer to as universal neural functionals (UNFs), for any weight space. Among other applications, we demonstrate how UNFs can be substituted into existing learned optimizer designs, and find promising improvements over prior methods when optimizing small image classifiers and language models. Our results suggest that learned optimizers can benefit from considering the (symmetry) structure of the weight space they optimize. We open-source our library for constructing UNFs at https://github.com/AllanYangZhou/universal_neural_functional.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Incidence networks for geometric deep learning\",\n        \"Learning to learn by gradient descent by gradient descent\",\n        \"On the optimization of a synaptic learning rule\",\n        \"Learning a synaptic learning rule\",\n        \"JAX: composable transformations of Python+NumPy programs, 2018.\",\n        \"One billion word benchmark for measuring progress in statistical language modeling\",\n        \"Empirical evaluation of gated recurrent neural networks on sequence modeling\",\n        \"Group equivariant convolutional networks\",\n        \"Spherical CNNs\",\n        \"Deep learning on implicit neural representations of shapes\",\n        \"Classifying the classifier: dissecting the weight space of neural networks\",\n        \"Finding structure in time\",\n        \"A practical method for constructing equivariant multilayer perceptrons for arbitrary matrix groups\",\n        \"On the symmetries of deep learning models and their internal representations\",\n        \"Hypernetworks\",\n        \"A closer look at learned optimization: Stability, robustness, and inductive biases\",\n        \"Deep models of interactions across sets\",\n        \"On the algebraic structure of feedforward network weight spaces\",\n        \"Meta learning backpropagation and improving it\",\n        \"Introducing symmetries to black box meta reinforcement learning\",\n        \"Graph Neural Networks for Learning Equivariant Representations of Neural Networks\",\n        \"On the generalization of equivariance and convolution in neural networks to the action of compact groups\",\n        \"Bayesian hypernetworks\",\n        \"A simple way to initialize recurrent networks of rectified linear units\",\n        \"Convolutional networks for images, speech, and time series\",\n        \"Graph metanetworks for processing diverse neural architectures\",\n        \"Invariant and equivariant graph networks\",\n        \"Understanding and correcting pathologies in the training of learned optimizers\",\n        \"Velo: Training versatile learned optimizers by scaling up\",\n        \"Equivariant architectures for learning in deep weight spaces\",\n        \"Permutation equivariant layers for higher order interactions\",\n        \"Learning to learn with generative models of neural network checkpoints\",\n        \"Equivariance through parameter-sharing\",\n        \"A ‘self-referential’weight matrix\",\n        \"Sequence to sequence learning with neural networks\",\n        \"The general theory of permutation equivarant neural networks and higher order graph variational encoders\",\n        \"Predicting neural network accuracy from weights\",\n        \"Unbiased gradient estimation in unrolled computation graphs with persistent evolution strategies\",\n        \"Fleet policy learning via weight merging and an application to robotic tool-use\",\n        \"Learned optimizers that scale and generalize\",\n        \"Fashion-mnist: a novel image dataset for benchmarking machine learning algorithms, 2017.\",\n        \"Deep sets. doi: 10.48550.\",\n        \"Neural networks are graphs! graph neural networks for equivariant processing of neural networks.\",\n        \"Permutation equivariant neural functionals\",\n        \"Neural functional transformers\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Universal Neural Functionals, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}