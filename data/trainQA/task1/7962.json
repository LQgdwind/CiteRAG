{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Link Prediction with Attention Applied on Multiple Knowledge Graph Embedding Models\n\nPaper Abstract: Abstract. Predicting missing links between entities in a knowledge graph is a fundamental task to deal with the incompleteness of data on the Web. Knowledge graph embeddings map nodes into a vector space to predict new links, scoring them according to geometric criteria. Relations in the graph may follow patterns that can be learned, e.g., some relations might be symmetric and others might be hierarchical. However, the learning capability of different embedding models varies for each pattern and, so far, no single model can learn all patterns equally well. In this paper, we combine the query representations from several models in a unified one to incorporate patterns that are independently captured by each model. Our combination uses attention to select the most suitable model to answer each query. The models are also mapped onto a non-Euclidean manifold, the Poincaré ball, to capture structural patterns, such as hierarchies, besides relational patterns, such as symmetry. We prove that our combination provides a higher expressiveness and inference power than each model on its own. As a result, the combined model can learn relational and structural patterns. We conduct extensive experimental analysis with various link prediction benchmarks showing that the combined model outperforms individual models, including state-of-the-art approaches.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DBpedia: A Nucleus for a Web of Open Data\",\n        \"Multi-relational poincaré graph embeddings\",\n        \"TuckER: Tensor Factorization for Knowledge Graph Completion\",\n        \"RDF/XML Syntax Specification\",\n        \"Translating embeddings for modeling multi-relational data\",\n        \"Low-Dimensional Hyperbolic Knowledge Graph Embeddings\",\n        \"Scaling Knowledge Access and Retrieval at Airbnb\",\n        \"Convolutional 2D Knowledge Graph Embeddings\",\n        \"Happy Birthday Watson Discovery\",\n        \"AutoKnow: Self-Driving Knowledge Collection for Products of Thousands of Types\",\n        \"A survey on knowledge graph embeddings with literals: Which model links better literal-ly?\",\n        \"Learning Mixed-Curvature Representations in Product Spaces\",\n        \"Food Discovery with Uber Eats: Building a Query Understanding Engine\",\n        \"Uncovering the Semantics of Wikipedia Categories\",\n        \"Knowledge graphs\",\n        \"BioSearch: a semantic search engine for Bio2RDF\",\n        \"A Survey on Knowledge Graphs: Representation, Acquisition, and Applications\",\n        \"Ensemble-Based Fact Classification with Knowledge Graph Embeddings\",\n        \"SimplE Embedding for Link Prediction in Knowledge Graphs\",\n        \"Ensemble solutions for link-prediction in knowledge graphs\",\n        \"Canonical Tensor Decomposition for Knowledge Base Completion\",\n        \"5* Knowledge Graph Embeddings with Projective Transformations\",\n        \"Pattern-Aware and Noise-Resilient Embedding Models\",\n        \"Loss-Aware Pattern Inference: A Correction on the Wrongly Claimed Limitations of Embedding Models\",\n        \"Industry-scale knowledge graphs: lessons and challenges\",\n        \"HybridFC: A Hybrid Fact-Checking Approach for Knowledge Graphs\",\n        \"Query2box: Reasoning over Knowledge Graphs in Vector Space Using Box Embeddings\",\n        \"Beta embeddings for multi-hop logical reasoning in knowledge graphs\",\n        \"ProjE: Embedding Projection for Knowledge Graph Completion\",\n        \"Bring rich knowledge of people, places, things and local businesses to your apps\",\n        \"Introducing the Knowledge Graph: things, not strings\",\n        \"Yago: a core of semantic knowledge\",\n        \"Rotate: Knowledge graph embedding by relational rotation in complex space\",\n        \"Observed versus latent features for knowledge base and text inference\",\n        \"Complex embeddings for simple link prediction\",\n        \"Wikidata: a free collaborative knowledgebase\",\n        \"Mulde: Multi-teacher knowledge distillation for low-dimensional knowledge graph embeddings\",\n        \"Knowledge Graph Embedding: A Survey of Approaches and Applications\",\n        \"A Probabilistic Ensemble Approach for Knowledge Graph Embedding\",\n        \"On multi-relational link prediction with bilinear models\",\n        \"Knowledge graph embedding by translating on hyperplanes\",\n        \"Ultrahyperbolic Knowledge Graph Embeddings\",\n        \"Deeppath: A reinforcement learning method for knowledge graph reasoning\",\n        \"Multiple Run Ensemble Learning with Low-Dimensional Knowledge Graph Embeddings\",\n        \"Embedding entities and relations for learning and inference in knowledge bases\",\n        \"Quaternion knowledge graph embeddings\",\n        \"Learning knowledge embeddings by combining limit-based scoring loss\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Link Prediction with Attention Applied on Multiple Knowledge Graph Embedding Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}