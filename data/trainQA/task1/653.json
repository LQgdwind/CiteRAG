{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Pointer: Constrained Progressive Text Generation via Insertion-based Generative Pre-training\n\nPaper Abstract: Abstract Large-scale pre-trained language models, such as BERT and GPT-2, have achieved excellent performance in language representation learning and free-form text generation. However, these models cannot be directly employed to generate text under specified lexical constraints. To address this challenge, we present Pointer111PrOgressive INsertion-based TransformER, a simple yet novel insertion-based approach for hard-constrained text generation. The proposed method operates by progressively inserting new tokens between existing tokens in a parallel manner. This procedure is recursively applied until a sequence is completed. The resulting coarse-to-fine hierarchy makes the generation process intuitive and interpretable. We pre-train our model with the proposed progressive insertion-based objective on a 12GB Wikipedia dataset, and fine-tune it on downstream hard-constrained generation tasks. Non-autoregressive decoding yields an empirically logarithmic time complexity during inference time. Experimental results on both News and Yelp datasets demonstrate that Pointer achieves state-of-the-art performance on constrained text generation. We released the pre-trained models and the source code to facilitate future research 222https://github.com/dreasysnail/POINTER.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Towards a human-like open-domain chatbot\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"The theory of dynamic programming\",\n        \"Programming pearls: algorithm design techniques\",\n        \"Yake! keyword extraction from single documents using multiple local features\",\n        \"Yake! collection-independent automatic keyword extractor\",\n        \"Kermit: Generative insertion-based modeling for sequences\",\n        \"Improving sequence-to-sequence learning via optimal transport\",\n        \"Towards coherent and cohesive long-form text generation\",\n        \"ELECTRA: Pre-training text encoders as discriminators rather than generators\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Automatic evaluation of machine translation quality using n-gram co-occurrence statistics\",\n        \"Enabling language models to fill in the blanks\",\n        \"Unified language model pre-training for natural language understanding and generation\",\n        \"Hierarchical neural story generation\",\n        \"Mixingboard: a knowledgeable stylized integrated text generation platform\",\n        \"Mask-predict: Parallel decoding of conditional masked language models\",\n        \"A note on a standard strategy for developing loop invariants and loops\",\n        \"Non-autoregressive neural machine translation\",\n        \"Insertion-based decoding with automatically inferred generation order\",\n        \"Incorporating copying mechanism in sequence-to-sequence learning\",\n        \"Lexically constrained decoding for sequence generation using grid beam search\",\n        \"Improved lexically constrained decoding for translation and monolingual rewriting\",\n        \"Sentence-level fluency evaluation: References help, but can be spared!\",\n        \"Parallel machine translation with disentangled context transformer\",\n        \"CTRL - A Conditional Transformer Language Model for Controllable Generation\",\n        \"Adam: A method for stochastic optimization\",\n        \"Meteor: An automatic metric for mt evaluation with high levels of correlation with human judgments\",\n        \"Deterministic non-autoregressive neural sequence modeling by iterative refinement\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"A diversity-promoting objective function for neural conversation models\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Flowseq: Non-autoregressive conditional sequence generation with generative flow\",\n        \"Cgmh: Constrained sentence generation by metropolis-hastings sampling\",\n        \"Sequence to backward and forward sequences: A content-introducing approach to generative short-text conversation\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Fast lexically constrained decoding with dynamic beam allocation for neural machine translation\",\n        \"Conversing by reading: Contentful neural conversation with on-demand machine reading\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Aircraft trajectory planning with collision avoidance using mixed integer linear programming\",\n        \"Mass: Masked sequence to sequence pre-training for language generation\",\n        \"Insertion transformer: Flexible sequence generation via insertion operations\",\n        \"Fast structured decoding for sequence models\",\n        \"Target-guided open-domain conversation\",\n        \"Non-monotonic sequential text generation\",\n        \"Pay less attention with lightweight and dynamic convolutions\",\n        \"Googleâ€™s neural machine translation system: Bridging the gap between human and machine translation\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Plan-and-write: Towards better automatic storytelling\",\n        \"Defending against neural fake news\",\n        \"Generating informative and diverse conversational responses via adversarial information maximization\",\n        \"Deconvolutional paragraph representation learning\",\n        \"Dialogpt: Large-scale generative pre-training for conversational response generation\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Pointer: Constrained Progressive Text Generation via Insertion-based Generative Pre-training, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}