{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Automatically detecting the conflicts between software requirements based on finer semantic analysis\n\nPaper Abstract: Abstract Context: Conflicts between software requirements bring uncertainties to product development. Some great approaches have been proposed to identify these conflicts. However, they usually require the software requirements represented with specific templates and/or depend on other external source which is often uneasy to build for lots of projects in practice. Objective: We aim to propose an approach Finer Semantic Analysis-based Requirements Conflict Detector (FSARC) to automatically detecting the conflicts between the given natural language functional requirements by analyzing their finer semantic compositions. Method: Firstly, we build a harmonized semantic meta-model of functional requirements with the form of eight-tuple. Then we propose algorithms to automatically analyze the linguistic features of requirements and to annotate the semantic elements for their semantic model construction. And we define seven types of conflicts as long as their heuristic detecting rules on the ground of their text pattern and semantical dependency. Finally, we design and implement the algorithm for conflicts detection. Results: The experiment with three different open requirements datasets shows that our semantic analyzing algorithms can correctly identify about 94.93% elements of software requirements in average. And the other experiment with four requirement datasets illustrates that the recall of FSARC is nearly 100% and the average precision is 83.88% on conflicts detection. Conclusion: We provide a useful tool for detecting the conflicts between natural language functional requirements to improve the quality of the final requirements set. Besides, our approach is capable of transforming the natural language functional requirements into eight semantic tuples, which is useful not only the detection of the conflicts between requirements but also some other tasks such as constructing the association between requirements and so on.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Vista documentation library\",\n        \"A short list of the most recent documents posted to the iso website\",\n        \"Reasoning with contextual requirements: Detecting inconsistency and conflicts\",\n        \"Automated extraction and clustering of requirements glossary terms\",\n        \"An active learning approach for improving the accuracy of automated domain model extraction\",\n        \"Handbook of satisfiability, volume 185\",\n        \"Identifying quality-requirement conflicts\",\n        \"Easywinwin: managing complexity in requirements negotiation with gss\",\n        \"Requirement conflicts resolution: using requirement filtering and analysis\",\n        \"Feature interactions in telecommunications systems\",\n        \"The acl2 sedan theorem proving system\",\n        \"Managing oam&p requirement conflicts\",\n        \"Dronology: an incubator for cyber-physical systems research\",\n        \"Toward a unified english-like representation of semantic models, data, and graph patterns for subject matter experts\",\n        \"Goal-directed requirements acquisition\",\n        \"Software requirements: analysis and specification\",\n        \"The stanford typed dependencies representation\",\n        \"Managing conflicts among non-functional requirements\",\n        \"A scenario-driven approach to trace dependency analysis\",\n        \"Identifying requirements conflicts and cooperation: How quality attributes and automated traceability can help\",\n        \"Part-of-speech tagging for twitter with adversarial neural networks\",\n        \"Detection of conflicting functional requirements in a use case-driven approach\",\n        \"Meta-modeling of requirement for networked softwareâ€“an open hierarchical & cooperative unified requirement framework urf\",\n        \"Software product evaluation-quality characteristics and guidelines for their use\",\n        \"A systematic review of requirements change management\",\n        \"Managing consistency between textual requirements, abstract interactions and essential use cases\",\n        \"Managing requirements conflicts in software product lines: A goal and scenario based approach\",\n        \"Market research for requirements analysis using linguistic tools\",\n        \"An ontological framework to manage the relative conflicts between security and usability requirements\",\n        \"The stanford corenlp natural language processing toolkit\",\n        \"Easy approach to requirements syntax (ears)\",\n        \"Wordnet: A lexical database for english\",\n        \"Towards development of complete and conflict-free requirements\",\n        \"Requirements management with semantic technology: An empirical study on automated requirements categorization and conflict analysis\",\n        \"The three dimensions of requirements engineering\",\n        \"Requirements engineering: fundamentals, principles, and techniques\",\n        \"Requirements Engineering Fundamentals\",\n        \"Intelligent requirement prioritization using fuzzy logic\",\n        \"Requirements engineering und management\",\n        \"Analysis of conflicts among non-functional requirements using integrated analysis of functional and non-functional requirements\",\n        \"The tension matrix and the concept of elemental decomposition: Improving identification of conflicting requirements\",\n        \"Conflict management in aspect-oriented requirements engineering\",\n        \"An experimental study of fault detection in user requirements documents\",\n        \"Detecting conflicts and inconsistencies in web application requirements\",\n        \"A formalization method to process structured natural language to logic expressions to detect redundant specification and test statements\",\n        \"Relax: Incorporating uncertainty into the specification of self-adaptive systems\",\n        \"A survey on software cost estimation in the chinese software industry\",\n        \"The three cs of requirements: consistency, completeness, and correctness\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Automatically detecting the conflicts between software requirements based on finer semantic analysis, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}