{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Depth-Adaptive Graph Recurrent Network for Text Classification\n\nPaper Abstract: Abstract The Sentence-State LSTM (S-LSTM) Zhang et al. (2018) is a powerful and high efficient graph recurrent network, which views words as nodes and performs layer-wise recurrent steps between them simultaneously. Despite its successes on text representations, the S-LSTM still suffers from two drawbacks. Firstly, given a sentence, certain words are usually more ambiguous than others, and thus more computation steps need to be taken for these difficult words and vice versa. However, the S-LSTM takes fixed computation steps for all words, irrespective of their hardness. The secondary one comes from the lack of sequential information (e.g., word order) that is inherently important for natural language. In this paper, we try to address these issues and propose a depth-adaptive mechanism for the S-LSTM, which allows the model to learn how many computational steps to conduct for different words as required. In addition, we integrate an extra RNN layer to inject sequential information, which also serves as an input feature for the decision of adaptive depths. Results on the classic text classification task (24 datasets in various sizes and domains) show that our model brings significant improvements against the conventional S-LSTM and other high-performance models (e.g., the Transformer), meanwhile achieving a good accuracy-speed trade off.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Translations as additional contexts for sentence classification\",\n        \"Graph-to-sequence learning using gated graph neural networks\",\n        \"Conditional computation in neural networks for faster models\",\n        \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n        \"The best of both worlds: Combining recent advances in neural machine translation\",\n        \"Universal transformers\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Depth-adaptive transformer\",\n        \"Spatially adaptive computation time for residual networks\",\n        \"Convolutional sequence to sequence learning\",\n        \"Adaptive computation time for recurrent neural networks\",\n        \"Statistical theory of extreme values and some practical applications\",\n        \"Star-transformer\",\n        \"Densely connected graph convolutional networks for graph-to-sequence learning\",\n        \"Long short-term memory\",\n        \"Variable computation in recurrent neural networks\",\n        \"Deep pyramid convolutional neural networks for text categorization\",\n        \"Convolutional neural networks for sentence classification\",\n        \"Adam: A method for stochastic optimization\",\n        \"Learning to remember more with less memorization\",\n        \"Learning question classifiers\",\n        \"Adversarial multi-task learning for text classification\",\n        \"CM-net: A novel collaborative memory network for spoken language understanding\",\n        \"An efficient framework for learning sentence representations\",\n        \"Learning word vectors for sentiment analysis\",\n        \"A* sampling\",\n        \"Learned in translation: Contextualized word vectors\",\n        \"A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts\",\n        \"Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales\",\n        \"On the difficulty of training recurrent neural networks\",\n        \"A new method of region embedding for text classification\",\n        \"Learning character-level representations for part-of-speech tagging\",\n        \"Baseline needs more love: On simple word-embedding-based models and associated pooling mechanisms\",\n        \"Ordered neurons: Integrating tree structures into recurrent neural networks\",\n        \"N-ary relation extraction using graph-state lstm\",\n        \"Dropout: A simple way to prevent neural networks from overfitting\",\n        \"Recurrently controlled recurrent networks\",\n        \"Attention is all you need\",\n        \"Disconnected recurrent neural networks for text categorization\",\n        \"R-transformer: Recurrent neural network enhanced transformer\",\n        \"Investigating capsule networks with dynamic routing for text classification\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Graph-based neural sentence ordering\",\n        \"Character-level convolutional networks for text classification\",\n        \"Sentence-state LSTM for text representation\",\n        \"Self-adaptive hierarchical sentence model\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Depth-Adaptive Graph Recurrent Network for Text Classification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}