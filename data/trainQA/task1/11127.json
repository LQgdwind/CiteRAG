{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: WaSP: Warp Scheduling to Mimic Prefetching in Graphics Workloads\n\nPaper Abstract: Abstract Contemporary GPUs are designed to handle long-latency operations effectively; however, challenges such as core occupancy (number of warps in a core) and pipeline width can impede their latency management. This is particularly evident in Tile-Based Rendering (TBR) GPUs, where core occupancy remains low for extended durations. To address this challenge, we introduce WaSP, a lightweight warp scheduler tailored for GPUs in graphics applications. WaSP strategically mimics prefetching by initiating a select subset of warps, termed priority warps, early in execution to reduce memory latency for subsequent warps. This optimization taps into the inherent but underutilized memory parallelism within the GPU core. This underutilization is a consequence of a baseline scheduler that evenly spaces misses throughout execution to exploit the inherent spatial locality in graphics workloads. WaSP improves on this by reducing average memory latency while maintaining locality for the majority of warps. While maximizing memory parallelism utilization, WaSP prevents saturating the caches with misses to avoid filling up the MSHRs (Miss Status Holding Registers). This approach reduces cache stalls that halt further accesses to the cache. Overall, WaSP yields a significant 3.9% performance speedup. Importantly, WaSP accomplishes these enhancements with a negligible overhead, positioning it as a promising solution for enhancing the efficiency of GPUs in managing latency challenges.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Early Visibility Resolution for Removing Ineffectual Computations in the Graphics Pipeline\",\n        \"Rendering Elimination: Early Discard of Redundant Tiles in the Graphics Pipeline\",\n        \"Memory bandwidth requirements of tile-based rendering\",\n        \"Boosting mobile gpu performance with a decoupled access/execute fragment processor\",\n        \"Teapot: A toolset for evaluating performance, power and image quality on mobile graphics systems\",\n        \"Improving gpgpu performance via cache locality aware thread block scheduling\",\n        \"Adaptive cache management for energy-efficient gpu computing\",\n        \"A model-driven approach to warp/thread-block level gpu cache bypassing\",\n        \"Cooperative caching for gpus\",\n        \"Power-efficient prefetching on gpgpus\",\n        \"Pixel-planes 5: A heterogeneous multiprocessor graphics system using processor-enhanced memories\",\n        \"Inter-kernel reuse-aware thread block scheduling\",\n        \"Prefetching in a texture cache architecture\",\n        \"Cta-aware prefetching for gpgpu\",\n        \"Owl: Cooperative thread array aware scheduling techniques for improving gpgpu performance\",\n        \"Dtexl: Decoupled raster pipeline for texture locality\",\n        \"Tcor: a tile cache with optimal replacement\",\n        \"Effective static bin patterns for sort-middle rendering\",\n        \"Performance evaluation of unified memory with prefetching and oversubscription for selected parallel cuda applications on nvidia pascal and volta gpus\",\n        \"Cta-aware prefetching and scheduling for gpu\",\n        \"Access pattern-aware cache management for improving data utilization in gpu\",\n        \"Cache capacity aware thread scheduling for irregular memory access on many-core gpgpus\",\n        \"Spare register aware prefetching for graph algorithms on gpus\",\n        \"Many-thread aware prefetching mechanisms for gpgpu applications\",\n        \"Improving gpgpu resource utilization through alternative thread block scheduling\",\n        \"Cawa: Coordinated warp scheduling and cache prioritization for critical warp acceleration of gpgpu workloads\",\n        \"Caws: Criticality-aware warp scheduling for gpgpu workloads\",\n        \"Ctrl-c: Instruction-aware control loop based adaptive cache bypassing for gpus\",\n        \"Locality-aware cta clustering for modern gpus\",\n        \"Adaptive and transparent cache bypassing for gpus\",\n        \"Locality-driven dynamic gpu cache bypassing\",\n        \"Mcpat: An integrated power, area, and timing modeling framework for multicore and manycore architectures\",\n        \"Adaptive parallel rendering on multiprocessors and workstation clusters\",\n        \"A sorting classification of parallel rendering\",\n        \"Prefetching techniques for near-memory throughput processors\",\n        \"Divergence-aware warp scheduling\",\n        \"Dramsim2: A cycle accurate memory system simulator\",\n        \"Apogee: Adaptive prefetching on gpus for energy efficiency\",\n        \"Adaptive gpu cache bypassing\",\n        \"Locality-aware cta scheduling for gaming applications\",\n        \"Dacache: Memory divergence-aware gpu cache management\",\n        \"Oaws: Memory occlusion aware warp scheduling\",\n        \"Laperm: Locality aware scheduler for dynamic parallelism on gpus\",\n        \"An efficient compiler framework for cache bypassing on gpus\",\n        \"Coordinated static and dynamic cache bypassing for gpus\",\n        \"Locality based warp scheduling in gpgpus\",\n        \"Selectively gpu cache bypassing for un-coalesced loads\",\n        \"Improving first level cache efficiency for gpus using dynamic line protection\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in WaSP: Warp Scheduling to Mimic Prefetching in Graphics Workloads, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}