{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ùí¢-Mixup: Graph Data Augmentation for Graph Classification\n\nPaper Abstract: Abstract This work develops mixup for graph data. Mixup has shown superiority in improving the generalization and robustness of neural networks by interpolating features and labels between two random samples. Traditionally, Mixup can work on regular, grid-like, and Euclidean data such as image or tabular data. However, it is challenging to directly adopt Mixup to augment graph data because different graphs typically: 1) have different numbers of nodes; 2) are not readily aligned; and 3) have unique typologies in non-Euclidean space. To this end, we propose ùí¢ùí¢\\mathcal{G}-Mixup to augment graphs for graph classification by interpolating the generator (i.e., graphon) of different classes of graphs. Specifically, we first use graphs within the same class to estimate a graphon. Then, instead of directly manipulating graphs, we interpolate graphons of different classes in the Euclidean space to get mixed graphons, where the synthetic graphs are generated through sampling based on the mixed graphons. Extensive experiments show that ùí¢ùí¢\\mathcal{G}-Mixup substantially improves the generalization and robustness of GNNs.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Stochastic blockmodel approximation of a graphon: Theory and consistent estimation\",\n        \"Centrality measures for graphons: Accounting for uncertainty in networks\",\n        \"Accurate learning of graph representations with graph multiset pooling\",\n        \"Spectral clustering with graph neural networks for graph pooling\",\n        \"Convergent sequences of dense graphs i: Subgraph frequencies, metric properties and testing\",\n        \"A consistent histogram estimator for exchangeable graph models\",\n        \"Classification and estimation in the stochastic blockmodel based on the empirical degrees\",\n        \"Matrix estimation by universal singular value thresholding\",\n        \"How robust are graph neural networks to structural noise?\",\n        \"Quick approximation to matrices and applications\",\n        \"Graph u-nets\",\n        \"Nonlinear mixup: Out-of-manifold data augmentation for text classification\",\n        \"Augmenting data with mixup for sentence classification: An empirical study\",\n        \"Mixup as locally linear out-of-manifold regularization\",\n        \"Inductive representation learning on large graphs\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Training graph neural networks by graphon estimation\",\n        \"Adaptive sampling towards fast graph representation learning\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Matrix completion from a few entries\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Large networks and graph limits, volume 60\",\n        \"Limits of dense graph sequences\",\n        \"Rectified linear units improve restricted boltzmann machines\",\n        \"Metropolis-hastings data augmentation for graph neural networks\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"Graphon neural networks and the transferability of graph neural networks\",\n        \"Graph and graphon neural network stability\",\n        \"Adversarial graph augmentation to improve graph contrastive learning\",\n        \"Data augmentation for graph convolutional network on semi-supervised classification\",\n        \"Graph attention networks\",\n        \"Manifold mixup: Better representations by interpolating hidden states\",\n        \"Graphmix: Improved training of gnns for semi-supervised learning\",\n        \"The laplacian spectrum of large graphs sampled from graphons\",\n        \"Graphcrop: Subgraph cropping for graph classification\",\n        \"Nodeaug: Semi-supervised node classification with data augmentation\",\n        \"Mixup for node and graph classification\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Learning graphons via structured gromov-wasserstein barycenters\",\n        \"How powerful are graph neural networks?\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Graph contrastive learning with augmentations\",\n        \"Bringing your own view: Graph contrastive learning without prefabricated data augmentations\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"How does mixup help with robustness and generalization?\",\n        \"An end-to-end deep learning architecture for graph classification\",\n        \"Deep learning on graphs: A survey\",\n        \"Data augmentation for graph neural networks\",\n        \"Graph theory and additive combinatorics\",\n        \"Graph neural networks: A review of methods and applications\",\n        \"Data augmentation for graph classification\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in ùí¢-Mixup: Graph Data Augmentation for Graph Classification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}