{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FIND: Human-in-the-Loop Debugging Deep Text Classifiers\n\nPaper Abstract: Abstract Since obtaining a perfect training dataset (i.e., a dataset which is considerably large, unbiased, and well-representative of unseen cases) is hardly possible, many real-world text classifiers are trained on the available, yet imperfect, datasets. These classifiers are thus likely to have undesirable properties. For instance, they may have biases against some sub-populations or may not work effectively in the wild due to overfitting. In this paper, we propose FIND – a framework which enables humans to debug deep learning text classifiers by disabling irrelevant hidden features. Experiments show that by using FIND, humans can improve CNN text classifiers which were trained under different types of imperfect datasets (including datasets with biases and datasets with dissimilar train-test distributions).\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"innvestigate neural networks!\",\n        \"Explaining predictions of non-linear classifiers in NLP\",\n        \"Explaining recurrent neural network predictions in sentiment analysis\",\n        \"On pixel-wise explanations for non-linear classifier decisions by layer-wise relevance propagation\",\n        \"Deriving machine attention from human rationales\",\n        \"Improving disentangled text representation learning with information-theoretic guidance\",\n        \"Bias in bios: A case study of semantic representation bias in a high-stakes setting\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Measuring and mitigating unintended bias in text classification\",\n        \"Using convolutional neural networks to classify hate-speech\",\n        \"Randomized significance tests in machine translation\",\n        \"Annotation artifacts in natural language inference data\",\n        \"Ups and downs: Modeling the visual evolution of fashion trends with one-class collaborative filtering\",\n        \"Pretrained transformers improve out-of-distribution robustness\",\n        \"Long short-term memory\",\n        \"exBERT: A Visual Analysis Tool to Explore Learned Representations in Transformer Models\",\n        \"Understanding convolutional neural networks for text classification\",\n        \"Invariant representations through adversarial forgetting\",\n        \"Roles and utilization of attention heads in transformer-based neural language models\",\n        \"Effective use of word order for text categorization with convolutional neural networks\",\n        \"Visualizing and understanding recurrent networks\",\n        \"Convolutional neural networks for sentence classification\",\n        \"Principles of explanatory debugging to personalize interactive machine learning\",\n        \"Rationalizing neural predictions\",\n        \"Human-grounded evaluations of explanation methods for text classification\",\n        \"Visualizing and understanding neural models in NLP\",\n        \"Incorporating priors with feature attribution on text classification\",\n        \"Towards explainable NLP: A generative explanation framework for text classification\",\n        \"A unified approach to interpreting model predictions\",\n        \"Layer-wise relevance propagation: an overview\",\n        \"Computer-intensive methods for testing hypotheses\",\n        \"Reducing gender bias in abusive language detection\",\n        \"Glove: Global vectors for word representation\",\n        \"Dataset Shift in Machine Learning\",\n        \"“why should i trust you?”: Explaining the predictions of any classifier\",\n        \"Anchors: High-precision model-agnostic explanations\",\n        \"A primer in bertology: What we know about how BERT works\",\n        \"Closing the loop: Fast, interactive semi-supervised annotation with queries on features and instances\",\n        \"Learning important features through propagating activation differences\",\n        \"Lstmvis: A tool for visual analysis of hidden state dynamics in recurrent neural networks\",\n        \"Interacting meaningfully with machine learning systems: Three experiments\",\n        \"Explanatory interactive machine learning\",\n        \"Wikipedia talk labels: Toxicity.\",\n        \"Analyzing multi-head self-attention: Specialized heads do the heavy lifting, the rest can be pruned\",\n        \"Glue: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"Hateful symbols or hateful people? predictive features for hate speech detection on twitter\",\n        \"Detection of Abusive Language: the Problem of Biased Datasets\",\n        \"Local decision pitfalls in interactive machine learning: An investigation into feature selection in sentiment analysis\",\n        \"Using “annotator rationales” to improve machine learning for text categorization\",\n        \"Mitigating unwanted biases with adversarial learning\",\n        \"Integrating semantic knowledge to tackle zero-shot text classification\",\n        \"Character-level convolutional networks for text classification\",\n        \"Gender bias in coreference resolution: Evaluation and debiasing methods\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in FIND: Human-in-the-Loop Debugging Deep Text Classifiers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}