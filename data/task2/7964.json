{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: B’MOJO: Hybrid State Space Realizations of Foundation Models with Eidetic and Fading Memory\n\nPaper Abstract: \n\nPaper Section Text:\nIn Machine Learning, data representations are parametric maps trained to re-present data either individually, by optimizing a reconstruction criterion, or collectively, by optimizing a classification criterion. A trained representation can be co-opted to map a previously unseen datum to a hypothesis, for instance a class label. Representation learning with deep neural networks has been at the core of technological progress in artificial intelligence (AI) during the past decade. This paper is instead concerned with data realizations, which are maps trained to realize, i.e., to make real, bring into existence, or generate data. Roughly speaking, realizations are “generative representations,” trained by optimizing a prediction criterion, that can be used as sequential decision or prediction maps, or as generative models for sequence data. Large language models (LLMs) and other predictive models that involve randomness in the sequential generation process are special cases of stochastic realizations . Representations are the backbone of inference from inductive learning, or induction for short. Induction refers to the process of mapping properties of a particular set of training data, through the parameters of the learned map, to properties of general test data. Successful induction, leading to generalization, hinges on an assumption of stationarity, namely the existence of some unknown distribution from which both past (training) data and present (inference) data are independently and identically drawn (IID). While uniform generalization bounds provide provable guarantees for any distribution, they do so under the assumption that the distribution exists and is the same for training and testing. This assumption is routinely violated in practice (e.g., language, climate, and business data), as manifest in so-called “out-of-distribution” effects or “distribution shift.” These lead to apparent paradoxes involving generalization and memorization . Realizations, on the other hand, are the backbone of transductive inference and generative AI (GenAI). Transduction refers to the process of inferring particular properties of test data by processing, at inference time, all given (particular) training data.111Sometimes ambiguously termed ‘test-time computation’ [ref]7 , which is confusing since inductive inference also involves test-time computation. Another term sometimes used is ‘test-time training’  [ref]49, which is also confusing since ‘training’ and ‘testing’ are disjoint and complementary phases of inference from inductive learning. All these are different forms of transduction.\nThe boundary between induction and transduction is blurry: Induction can be viewed as a restricted form of transduction, where training data is accessible only through the learned weights. An over-parametrized representation, when overfit to training data, could in principle store the training set in the weights, thus making induction functionally identical to transduction. However, optimal induction aims to foster generalization by using various forms of regularization to prevent memorization, leading to sub-optimal transduction. Another form of sub-optimal transductive inference is termed “in-context learning” – which notably involves no learning if by learning one means to “improve by experience:” The same in-context task, presented multiple times, requires identical effort and leads to no improvement. In-context learning can be optimal transduction only if all the data of interest fits in the context (including the entire training set), and even then it has been proven optimal for Transformers only for simple tasks such as linear classification. In summary, Memorization and specific inference computation at the core of transduction are in contrast with the biases fostered by inductive learning: Whereas inductive inference seeks to minimize memorization to avoid overfitting and to foster generalization to unseen data, transductive inference seeks to maximize memorization and forgo generalization in favor of sample-specific inference computation.222We report more examples on the differences between representations/realizations and induction/transduction in Appendix A. Transduction does not require the train and test distribution to be the same. Indeed, the joint distribution from which both present and past data could have been jointly drawn can change with every sample. Therefore, optimality is not measured relative to one unknown distribution, as in generalization bounds, but rather relative to all possible distributions. If the data is generated by a physically realizable process, such distributions are computable. Optimal inference measured on average over all possible computable distributions, weighted by the Universal Prior, has been described by Solomonoff [ref]38. Solomonoff-style inference can be thought of as the limit of transduction, and similarly involves no learning. Instead, it consists of cycling through all computable programs using a Universal Turing Machine, which requires infinite time, memory, and compute resources, which in turn renders such inference unattainable. Nonetheless, this Solomonoff limit points to two directions for improving inference: (a) efficient memorization, ideally by losslessly encoding all past data, and (b) efficient test-time computation through hardware and model co-design. Ideally, the resulting realizations would be such that, if memory and compute resources were extrapolated to infinity, inference would approach the Solomonoff limit. In reality, inference is always resource bound, so if something has to grow it would have to be external to the core inference engine. Accordingly, our goal in this work is to design and analyze families of architectures that (a) natively incorporate retrieval from a growing external memory (retrieval-augmented generation, or RAG), and (b) can scale to perform efficient inference computation. In order to design families of architectures that efficiently memorize and scale inference computation, we must exploit the structure of the data they realize. When past and present data are known to be independent and identically distributed (IID) one can encode inference computation through a fixed “stateless” map, or model, which is a representation that can be trained inductively regardless of the inference query. When past and future data are not IID but generated by a Markov process of known order, there exist finite-dimensional statistics, called states, that summarize all past data for the purpose of prediction   .\nBut even if the underlying process is Markovian of bounded order, unless such an order is known a-priori optimal realization is generally not possible with constant complexity . To perform optimal inference, memory has to grow, and if the data generation mechanism has finite complexity at some point an efficient encoding of past data into memory will stop growing, but it is not possible to know when . Therefore, a suitable architecture has to always allow the possibility of adding new storage. In the seventies, Stochastic Realization Theory 1 studied State Space Models (SSMs) under the known-order Markov assumption, since realizations with growing memory were unmanageable then. 333Under the stationary assumption, one stochastic realization of an SSM is a convolution. This input-output map is equivalent to an SSM and standard transformations can be applied from one to the other.\n\nToday, Foundation Models can ingest a large portion of the growing volume of data accessible through the Internet and make it available for inference. Current AI systems are typically hard-constrained by inference time and compute resources, but not by storage—one can always add more disks. To extend Stochastic Realization beyond the IID or known-Markov cases, Foundation Models need scalable architectures that comprise short-term memory updated synchronously within the given computational constraints and long-term memory updated and accessed sparingly and asynchronously. The former includes both eidetic (lossless) and fading (lossy) memory for efficient computation, while the latter is akin to an integrated form of “retrieval-augmented” inference. Such architectures would seamlessly manage short-term eidetic memory “in-context”, fading memory “in-state”, long-term structural memory “in-weights” and long-term eidetic memory ‘in-storage’ 3. Existing architectures such as Transformers and SSMs fall short of encompassing these criteria. Transformer-based architectures use eidetic memory restricted to a finite span, “context length”  , while recent SSM-based architectures 7 5  use only fading memory in their state. In both cases, scaling requires allowing the context (and the key-value cache) or recurrent state to grow unbounded. Recent work on hybrid combinations of Transformer and State Space layers   0 show promise in striking a balance between eidetic memory, fading memory and compute.\n\nReference markers found: [7]\n\nContext windows for each [ref]:\n[ref]7: refers to the process of inferring particular properties of test data by processing, at inference time, all given (particular) training data.111Sometimes ambiguously termed ‘test-time computation’ [ref]7 , which is confusing since inductive inference also involves test-time computation. Another term sometimes used is ‘test-time training’  [ref]49, which is also confusing since ‘training’ and\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 7,\n            \"titles\": [\n                \"Think you have Solved Question Answering? Try ARC, the AI2 Reasoning Challenge\",\n                \"On the Learnability of Physical Concepts: Can a Neural Network Understand What’s Real?\",\n                \"Simple linear attention language models balance the recall-throughput tradeoff\",\n                \"xlstm: Extended long short-term memory\",\n                \"PIQA: Reasoning about Physical Commonsense in Natural Language\",\n                \"On the algebraic structure of bilinear systems. theory and applica-tions of variable structure systems\",\n                \"Language Models are Few-Shot Learners\",\n                \"Transductive inference for estimating values of functions\",\n                \"Flashattention: Fast and memory-efficient exact attention with io-awareness\",\n                \"Griffin: Mixing Gated Linear Recurrences with Local Attention for Efficient Language Models\",\n                \"Realization and structure theory of bilinear dynamical systems\",\n                \"Bilinear control systems: matrices in action, volume 169\",\n                \"Inductive learning of transductive inference:.\",\n                \"Multi-Modal Hallucination Control by Visual Information Grounding\",\n                \"Hungry Hungry Hippos: Towards Language Modeling with State Space Models\",\n                \"A framework for few-shot language model evaluation\",\n                \"Mamba: Linear-time sequence modeling with selective state spaces\",\n                \"Training Compute-Optimal Large Language Models\",\n                \"Nonlinear control systems: an introduction\",\n                \"Stochastic processes and filtering theory\",\n                \"Mistral 7B\",\n                \"Linear systems, volume 156\",\n                \"A new approach to linear filtering and prediction problems\",\n                \"Scaling Laws for Neural Language Models\",\n                \"Bilinear and nonlinear realizations of input-output maps\",\n                \"Jamba: A Hybrid Transformer-Mamba Language Model\",\n                \"On the stochastic realization problem\",\n                \"On a measure of lack of fit in time series models\",\n                \"System identification toolbox: User’s guide\",\n                \"Megalodon: Efficient LLM Pretraining and Inference with Unlimited Context Length\",\n                \"Results on the non existence of finite dimensional filters\",\n                \"Landmark attention: Random-access infinite context length for transformers\",\n                \"In-context learning and induction heads\",\n                \"The lambada dataset: Word prediction requiring a broad discourse context\",\n                \"Mechanistic Design and Scaling of Hybrid Architectures\",\n                \"WinoGrande: An Adversarial Winograd Schema Challenge at Scale\",\n                \"Scrolls: Standardized CompaRison Over Long Language Sequences\",\n                \"A formal theory of inductive inference. i.\",\n                \"Test-Time Training with Self-Supervision for Generalization under Distribution Shifts\",\n                \"Subspace identification for linear systems: Theory—Implementation—Applications\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]7 based on the context and research area of B’MOJO: Hybrid State Space Realizations of Foundation Models with Eidetic and Fading Memory. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}