{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: SPRINT: Scalable Policy Pre-Training via Language Instruction Relabeling\n\nPaper Abstract: \n\nPaper Section Text:\nObservation space.\nThe state space of the ALFRED environment consists of\n300×300300300300\\times 300 RGB images. Following the baseline method in ALFRED , we\npreprocess these images by sending them through a frozen ResNet-18 encoder  pretrained on ImageNet [ref]69. This results in a 512×7×751277512\\times 7\\times 7 feature map that we use\nas the observation input to all networks. Action space. The agent chooses from 12 discrete low-level actions. There are 5 navigation actions: MoveAhead, RotateRight, RotateLeft, LookUp, and LookDown and 7 interaction actions: Pickup, Put, Open, Close, ToggleOn, ToggleOff, and Slice.\nFor interaction actions the agent additionally selects one of 82 object types to interact with, as defined by .\nIn total, the action space consists of 5+7∗82=57957825795+7*82=579 discrete action choices. Note that this action space definition is different from the action space in , which used a pixel-wise mask output to determine the object to interact with. In contrast to  we aim to train agents with reinforcement learning instead of imitation learning and found the discrete action parametrization more amenable to RL training than dense mask outputs. For all methods, due to the large discrete action space, we perform some basic action masking to prevent agents from taking actions that are not possible. For example, we do not allow the agent to Close objects that aren’t closeable nor can they ToggleOn objects that can’t be turned on. Policy and critic networks.\nFor all baselines and SPRINT  base models are implemented on the transformer architecture proposed\nin Episodic Transformers . For offline RL methods (AM, SPRINT) we follow the advice of [ref]65 and parameterize both Q functions and the Value function of IQL as separate output heads of one transformer backbone that is used for all critic networks.\nWe train both policies and critic transformer networks with an observation history of up to 16 previous observations, each one being processed by a convolutional network before being flattened into a 768-dim feature.\nOur discrete policy has two output heads of size 12 and 82 for the action and interaction object outputs respectively. Critic networks are conditioned on both the observation and the discrete action output of the policy. In networks with language input, words are individually tokenized and the entire language instruction is fed to the policy and critic networks and embedded into a sequence of learned 768-dim embeddings, one for each token. We perform cross-attention between all network inputs: language embeddings, previous observation embeddings, and the previous action where applicable. The output of this cross-attention mechanism is then transformed by linear layers into the final output for the network. Pre-training hyperparameters.\nA hyperparameter search was performed first on the language-conditioned BC-baseline to optimize for training accuracy. These hyperparameters were carried over to the IQL implementation, and another search for IQL-specific hyperpameters were performed on a baseline IQL policy conditioned on language instructions. With these parameters fixed, we performed one more hyperparameter search specific to Actionable Models but for the final implementation of SPRINT we re-used the same hyperparameters and only selected SPRINT-specific parameters heuristically.\nHyperparameters for each method are detailed in separate tables. Shared hyperparameters for all methods (where applicable) are listed below: Finetuning details and hyperparameters.\nWe fine-tune by running IQL on online-collected data without any of the chaining or aggregation steps.\nFor all models, we finetune by sampling old pre-training data and newly collected data at a ratio of 70%/30%. Without this mixed batch training, we found the transformer-based networks to overfit to the new data, something we did not see when experimenting with standard MLPs.\nThe newly collected data is also sampled from two separate buffers at equal proportions, one which contains trajectories that received at least 1 reward (i.e., completed one sub-task) and one that contains trajectories that received none. This is another transformer-specific adaptation we had to make for the models to train stably with IQL on online-collected data. Each method is finetuned on every task in the EVALSCENE task set individually; that is,\nwe pre-train once and then finetune policies for each task in the task set. We then average\nreturns over all tasks, then report metrics averaged over all random seeds. For each task, we define a maximum rollout time horizon of 2 timesteps per environment action required by an expert ALFRED task planner. When not specified, finetuning parameters are identical to pre-training parameters. Finetuning hyperparameters\nare specified below:\n\nReference markers found: [69]\n\nContext windows for each [ref]:\n[ref]69: consists of\n300×300300300300\\times 300 RGB images. Following the baseline method in ALFRED , we\npreprocess these images by sending them through a frozen ResNet-18 encoder  pretrained on ImageNet [ref]69. This results in a 512×7×751277512\\times 7\\times 7 feature map that we use\nas the observation input to all networks. Action space. The agent chooses from 12 discrete low-level actions. There\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 69,\n            \"titles\": [\n                \"Sentence-BERT: Sentence Embeddings using Siamese BERT-Networks\",\n                \"Between MDPs and semi-MDPs: A framework for temporal abstraction in reinforcement learning\",\n                \"Dynamic Movement Primitives - A Framework for Motor Control in Humans and Humanoid Robotics\",\n                \"Learning an embedding space for transferable robot skills\",\n                \"Learning Latent Plans from Play\",\n                \"Accelerating Reinforcement Learning with Learned Skill Priors\",\n                \"Learning Agile Soccer Skills for a Bipedal Robot with Deep Reinforcement Learning\",\n                \"CALVIN: A Benchmark for Language-Conditioned Policy Learning for Long-Horizon Robot Manipulation Tasks\",\n                \"Language Conditioned Imitation Learning over Unstructured Data\",\n                \"Interactive Language: Talking to Robots in Real Time\",\n                \"RT-1: Robotics Transformer for Real-World Control at Scale\",\n                \"ALFRED A Benchmark for Interpreting Grounded Instructions for Everyday Tasks\",\n                \"Learning with latent language\",\n                \"R3M: A Universal Visual Representation for Robot Manipulation\",\n                \"MineDojo: Building Open-Ended Embodied Agents with Internet-Scale Knowledge\",\n                \"Reinforcement learning for mapping instructions to actions\",\n                \"Modular Multitask Reinforcement Learning with Policy Sketches\",\n                \"Language Models as Zero-Shot Planners: Extracting Actionable Knowledge for Embodied Agents\",\n                \"Do As I Can and Not As I Say: Grounding Language in Robotic Affordances\",\n                \"Inner Monologue: Embodied Reasoning through Planning with Language Models\",\n                \"ProgPrompt: Generating Situated Robot Task Plans using Large Language Models\",\n                \"Language as a Cognitive Tool to Imagine Goals in Curiosity-Driven Exploration\",\n                \"Higher: Improving instruction following with hindsight generation for experience replay\",\n                \"Pre-Trained Language Models for Interactive Decision-Making\",\n                \"Movement imitation with nonlinear dynamical systems in humanoid robots\",\n                \"Reinforcement learning of motor skills in high dimensions: A path integral approach\",\n                \"Deep Q-learning from Demonstrations\",\n                \"Offline Reinforcement Learning: Tutorial, Review, and Perspectives on Open Problems\",\n                \"Advantage-Weighted Regression: Simple and Scalable Off-Policy Reinforcement Learning\",\n                \"COG: Connecting New Skills to Past Experience with Offline Reinforcement Learning\",\n                \"Accelerating Online Reinforcement Learning with Offline Datasets\",\n                \"Offline Reinforcement Learning with Implicit Q-Learning\",\n                \"RL 2: Fast Reinforcement Learning via Slow Reinforcement Learning\",\n                \"Model-Agnostic Meta-Learning for Fast Adaptation of Deep Networks\",\n                \"Efficient Off-Policy Meta-Reinforcement Learning via Probabilistic Context Variables\",\n                \"Skill-based Meta-Reinforcement Learning\",\n                \"Variational Option Discovery Algorithms\",\n                \"Diversity is All You Need: Learning Skills without a Reward Function\",\n                \"Dynamics-Aware Unsupervised Discovery of Skills\",\n                \"OPAL: Offline Primitive Discovery for Accelerating Offline Reinforcement Learning\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]69 based on the context and research area of SPRINT: Scalable Policy Pre-Training via Language Instruction Relabeling. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}