{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Constant congestion linkages in polynomially strong digraphs in polynomial time\n\nPaper Abstract: \n\nPaper Section Text:\nIn this section we define the most fundamental objects studied in this paper.\nFrom this point forward, and unless stated otherwise, we refer to oriented edges only, D𝐷D will always stand for a digraph, and G𝐺G for an undirected graph.\nMoreover, when D𝐷D is the input digraph of some algorithm we set n=|V​(D)|𝑛𝑉𝐷n=|V(D)|. A bramble ℬ={B1,…,Bℓ}ℬsubscript𝐵1…subscript𝐵ℓ\\mathcal{B}=\\{B_{1},\\ldots,B_{\\ell}\\} in a digraph D𝐷D is a family of strongly connected subgraphs of D𝐷D such that if {B,B′}⊆ℬ𝐵superscript𝐵′ℬ\\{B,B^{\\prime}\\}\\subseteq\\mathcal{B} then V​(B)∩V​(B′)≠∅𝑉𝐵𝑉superscript𝐵′V(B)\\cap V(B^{\\prime})\\neq\\emptyset or there are edges in D𝐷D from V​(B)𝑉𝐵V(B) to V​(B′)𝑉superscript𝐵′V(B^{\\prime}) and from V​(B′)𝑉superscript𝐵′V(B^{\\prime}) to V​(B)𝑉𝐵V(B).\nA hitting set of a bramble ℬℬ\\mathcal{B} is a set X⊆V​(D)𝑋𝑉𝐷X\\subseteq V(D) such that X∩V​(B)≠∅𝑋𝑉𝐵X\\cap V(B)\\neq\\emptyset for all B∈ℬ𝐵ℬB\\in\\mathcal{B}. The order of a bramble ℬℬ\\mathcal{B}, denoted by ord​(ℬ)ordℬ\\text{{\\sf ord}}(\\mathcal{B}), is the minimum size of a hitting set of ℬℬ\\mathcal{B}.\nWe also say that the sets Bi∈ℬsubscript𝐵𝑖ℬB_{i}\\in\\mathcal{B} are the bags of ℬℬ\\mathcal{B}.\nFor an integer c≥1𝑐1c\\geq 1 we say that ℬℬ\\mathcal{B} has congestion c𝑐c if every vertex of D𝐷D occurs in at most c𝑐c bags of the bramble. Clearly every bramble ℬℬ\\mathcal{B} of congestion c𝑐c has order at least ⌈|ℬ|/c⌉ℬ𝑐\\lceil|\\mathcal{B}|/c\\rceil since, by definition, every vertex of a hitting set of ℬℬ\\mathcal{B} can hit at most c𝑐c bags of ℬℬ\\mathcal{B}. Originally, the result of Campos et al.  builds a haven of order k𝑘k in digraphs of directed treewidth at least k𝑘k.\nSince one can easily construct a bramble of order ⌊k/2⌋𝑘2\\lfloor k/2\\rfloor from a haven of order k𝑘k and generate a haven of order k𝑘k from a bramble of order k𝑘k (see [21, Chapter 6] for example), we refrain from defining havens and state the next proposition with relation to brambles only, noting that the original statement refers to havens.\nWe also do not need the definition of directed treewidth and thus it is also skipped.\nThe aforementioned XP algorithm [ref]14 was improved to an FPT algorithm, with the same approximation ratio, by Campos et al. .\nWe remark that a sketch of a proof of an FPT algorithm is also available in [2, Theorem 9.4.4], but with a slightly worse approximation ratio. Let D𝐷D be a digraph and k𝑘k be a non-negative integer.\nThere is an algorithm running in time 2𝒪⁡(k​log⁡k)⋅n𝒪⁡(1)⋅superscript2𝒪𝑘𝑘superscript𝑛𝒪12^{\\operatorname{\\mathcal{O}}(k\\log k)}\\cdot n^{\\operatorname{\\mathcal{O}}(1)} that correctly decides that D𝐷D has directed treewidth at most 3​k−23𝑘23k-2 or outputs a bramble of order k𝑘k in D𝐷D. Both constructions of brambles with constant congestion from Edwards et al.  and Masařík et al.  start from a highly connected system of paths.\nIn order to formally define this system, we adopt the following notation. Let D𝐷D be a digraph and A,B⊆V​(D)𝐴𝐵𝑉𝐷A,B\\subseteq V(D) with A≠B𝐴𝐵A\\neq B.\nA linkage from A𝐴A to B𝐵B in D𝐷D, or an (A,B)𝐴𝐵(A,B)-linkage, is a set of of pairwise vertex-disjoint paths from A𝐴A to B𝐵B. As is this case for brambles, well-linked sets are also known obstructions for bounded directed treewidth and are also involved in the definition of a path system. Let D𝐷D be a digraph and A⊆V​(D)𝐴𝑉𝐷A\\subseteq V(D).\nWe say that A𝐴A is well-linked in D𝐷D if, for every ordered pair (X,Y)𝑋𝑌(X,Y) of disjoint sets X,Y⊆A𝑋𝑌𝐴X,Y\\subseteq A with |X|=|Y|𝑋𝑌|X|=|Y|, there is an (A,B)𝐴𝐵(A,B)-linkage of size |X|𝑋|X| in D𝐷D (not necessarily contained in A𝐴A).\nThe order of a well-linked set A𝐴A is |A|𝐴|A|.\nWe denote by 𝗐𝗅𝗂𝗇𝗄​(D)𝗐𝗅𝗂𝗇𝗄𝐷{\\sf wlink}(D) the size of a largest well-linked set in D𝐷D. Let D𝐷D be a digraph and a,b𝑎𝑏a,b be two positive integers.\nAn (a,b)𝑎𝑏(a,b)-path system is a tuple 𝒮𝒮\\mathcal{S} with 𝒮=(𝒫,ℒ,𝒜)𝒮𝒫ℒ𝒜\\mathcal{S}=(\\mathcal{P},\\mathcal{L},\\mathcal{A}) where 𝒜={Aiin,Aiout∣i∈[a]}𝒜conditional-setsuperscriptsubscript𝐴𝑖insuperscriptsubscript𝐴𝑖out𝑖delimited-[]𝑎\\mathcal{A}=\\{A_{i}^{\\textsf{\\emph{in}}},A_{i}^{\\textsf{\\emph{out}}}\\mid i\\in[a]\\} where each Aiinsuperscriptsubscript𝐴𝑖inA_{i}^{\\textsf{\\emph{in}}} and each Aioutsuperscriptsubscript𝐴𝑖outA_{i}^{\\textsf{\\emph{out}}} is a well-linked set of order b𝑏b; ℒℒ\\mathcal{L} is a collection {Li,j∣i,j∈[a]​ with ​i≠j}conditional-setsubscript𝐿𝑖𝑗𝑖𝑗delimited-[]𝑎 with 𝑖𝑗\\{L_{i,j}\\mid i,j\\in[a]\\text{ with }i\\neq j\\} of linkages where each Li,jsubscript𝐿𝑖𝑗L_{i,j} is a linkage of size b𝑏b from Aioutsuperscriptsubscript𝐴𝑖outA_{i}^{\\textsf{\\emph{out}}} to Ajinsuperscriptsubscript𝐴𝑗inA_{j}^{\\textsf{\\emph{in}}}; and 𝒫𝒫\\mathcal{P} is a sequence P1,…,Pasubscript𝑃1…subscript𝑃𝑎P_{1},\\ldots,P_{a} of pairwise vertex-disjoint paths such that, for all i∈[a]𝑖delimited-[]𝑎i\\in[a], V​(Pi)⊇Aiin∪Aioutsuperscriptsubscript𝐴𝑖insuperscriptsubscript𝐴𝑖out𝑉subscript𝑃𝑖V(P_{i})\\supseteq A_{i}^{\\textsf{\\emph{in}}}\\cup A_{i}^{\\textsf{\\emph{out}}} and every vertex in Aiinsuperscriptsubscript𝐴𝑖inA_{i}^{\\textsf{\\emph{in}}} appears in Pisubscript𝑃𝑖P_{i} before any vertex of Aioutsuperscriptsubscript𝐴𝑖outA_{i}^{\\textsf{\\emph{out}}}. Although there is a lot to unpack in the definition of path systems, it is not hard to visualize; see Figure 1 for an illustration. As shown by Kawarabayashi and Kreutzer , it is easy to construct, in polynomial time, a large path system from a path P𝑃P intersecting all elements of a bramble ℬℬ\\mathcal{B} of order roughly k2superscript𝑘2k^{2} and a well-linked set A⊆V​(P)𝐴𝑉𝑃A\\subseteq V(P) with |A|≥k𝐴𝑘|A|\\geq k.\nFinding P,ℬ𝑃ℬP,\\mathcal{B}, and A𝐴A in a digraph with large directed treewidth is no trivial matter.\nThe first algorithm that does so is (implicitly) given in  and runs in XP time parameterized by k𝑘k.\nThis was later improved in [5, Theorem 2.23] to an algorithm in time 2𝒪⁡(k2​log⁡k)⋅n𝒪⁡(1)⋅superscript2𝒪superscript𝑘2𝑘superscript𝑛𝒪12^{\\operatorname{\\mathcal{O}}(k^{2}\\log k)}\\cdot n^{\\operatorname{\\mathcal{O}}(1)}, and a better bound on ord​(ℬ)ordℬ\\text{{\\sf ord}}(\\mathcal{B}) is also given.\nThus plugging together the results from  and  we obtain the following. Let a,b𝑎𝑏a,b be non-negative integers.\nThere is a constant c𝑐c such that every digraph D𝐷D with 𝖽𝗍𝗐​(D)≥c⋅a2⋅b2𝖽𝗍𝗐𝐷⋅𝑐superscript𝑎2superscript𝑏2{\\sf dtw}(D)\\geq c\\cdot a^{2}\\cdot b^{2} contains an (a,b)𝑎𝑏(a,b)-path system.\nAdditionally, such a path system can be constructed in FPT time parameterized by max⁡{a,b}𝑎𝑏\\max\\{a,b\\}.\n\nReference markers found: [14]\n\nContext windows for each [ref]:\n[ref]14: relation to brambles only, noting that the original statement refers to havens.\nWe also do not need the definition of directed treewidth and thus it is also skipped.\nThe aforementioned XP algorithm [ref]14 was improved to an FPT algorithm, with the same approximation ratio, by Campos et al. .\nWe remark that a sketch of a proof of an FPT algorithm is also available in [2, Theorem 9.4.4], but\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 14,\n            \"titles\": [\n                \"The Directed Grid Theorem\",\n                \"Routing with Congestion in Acyclic Digraphs\",\n                \"Classes of Directed Graphs\",\n                \"Graph Theory\",\n                \"New Menger-like dualities in digraphs and applications to half-integral linkages\",\n                \"Adapting the Directed Grid Theorem into an FPT Algorithm\",\n                \"Deterministic Algorithms for the Lovász Local Lemma\",\n                \"Parameterized Algorithms\",\n                \"Fundamentals of Parameterized Complexity\",\n                \"A linear-time algorithm for finding a complete graph minor in a dense graph\",\n                \"Half-integral linkages in highly connected directed graphs\",\n                \"Jungles, bundles, and fixed-parameter tractability\",\n                \"The directed subgraph homeomorphism problem\",\n                \"Deterministic algorithms for the Lovász Local Lemma: simpler, more general, and more parallel\",\n                \"Directed tree-width\",\n                \"Lower bound of the hadwiger number of graphs by their average degree\",\n                \"Problems and results on 3-chromatic hypergraphs and some related questions\",\n                \"Homomorphieeigenschaften und mittlere kantendichte von graphen\",\n                \"Constant congestion brambles in directed graphs\",\n                \"Packing directed cycles quarter- and half-integrally\",\n                \"Quantitative Graph Theory: Mathematical Foundations and Applications\",\n                \"Smallest-last ordering and clustering and graph coloring algorithms\",\n                \"Zur allgemeinen kurventheorie\",\n                \"A Constructive Proof of the General Lovász Local Lemma\",\n                \"Polynomial treewidth forces a large grid-like-minor\",\n                \"Graph minors. XIII. the disjoint paths problem\",\n                \"Parameterized tractability of edge-disjoint paths on directed acyclic graphs\",\n                \"An extremal function for contractions of graphs\",\n                \"Highly connected non-2-linked digraphs\",\n                \"Generated Reference Title 29 for [ref]14\",\n                \"Generated Reference Title 30 for [ref]14\",\n                \"Generated Reference Title 31 for [ref]14\",\n                \"Generated Reference Title 32 for [ref]14\",\n                \"Generated Reference Title 33 for [ref]14\",\n                \"Generated Reference Title 34 for [ref]14\",\n                \"Generated Reference Title 35 for [ref]14\",\n                \"Generated Reference Title 36 for [ref]14\",\n                \"Generated Reference Title 37 for [ref]14\",\n                \"Generated Reference Title 38 for [ref]14\",\n                \"Generated Reference Title 39 for [ref]14\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]14 based on the context and research area of Constant congestion linkages in polynomially strong digraphs in polynomial time. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}