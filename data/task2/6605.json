{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Prefender: A Prefetching Defender against Cache Side Channel Attacks as A Pretender\n\nPaper Abstract: \n\nPaper Section Text:\nOver the last few decades, continuing optimization of microarchitecture has led to a dramatic increase in its complexity, which might unfortunately be accompanied by many potential security vulnerabilities.\nAs a result, the cache side channel attacks   become serious threats to modern processors.\nFor example, it is possible for Spectre  and Meltdown [ref]4 attacks to steal almost any data in the memory, by leveraging vulnerabilities of the out-of-order execution and the speculative execution.\nMore seriously, these two attacks can threaten most of the modern commercial processors from Intel, AMD, and ARM.\nLots of variants of cache side channel attacks have also been found in recent years , so the defense methods are urgently needed to enforce the security of the processors. Cache side channel attacks exploit the cache state changes for information leakage .\nFor example, the attacker can infer the cache footprint of the victim program by the time differences between cache hits and cache misses when accessing the data  [ref]4.\nDifferent countermeasures have been proposed for either general or transient execution based attacks through isolation , conditional speculation , stateless mis-speculative cache accesses , noise injection 0 1, prefetching 2, 3, etc. However, these countermeasures either incur performance overhead, or have limited scope of security, such as only defending against the attacks conducted cross-core, so they failed to benefit both security and performance. In this paper, we propose an approach to defeating the cache side channel attacks while maintaining or even improving the performance.\nDuring the attack, the attacker obtains the cache state changes made by the victim by accessing the cache.\nIf the access patterns of both the attacker and the victim can be learned, the processor can prefetch the data that can further change the cache state to confuse the attacker.\nBesides, effective prefetching can help performance if the prefetcher is able to predict the access patterns of the benign programs.\n We propose Prefender, a prefetching defender to defeat cache side channel attacks while preserving performance benefits for benign programs. Specifically, three low-cost designs are proposed, which are called Scale Tracker (ST), Access Tracker (AT), and Record Protector (RP).\nScale Tracker is able to prefetch the data that the victim may access, by tracking the target address calculation history of the memory instructions.\nAccess Tracker can learn the cache access patterns of the attackers and prefetch data for confusion, even if the attackers perform intentional random accesses.\nRecord Protector can link Scale Tracker and Access Tracker to prevent noisy instructions and accesses from affecting Prefender, and further enhance the robustness of Prefender.\nFurthermore, effective prefetching of Prefender also maintains or improves performance.\nThe contributions of this work are as follows: Prefender is proposed, where a novel address prediction and a noise preventing approaches for prefetching are proposed. Prefender can prevent wide range of general access-based cache timing side channel attacks including both single-core and cross-core attacks, while maintaining the performance. A new approach to analyzing cache access patterns is proposed. Scale Tacker and Access Tacker are designed to realize the runtime analysis for effective prefetching. An approach is proposed to protect Prefender from being affected by the noisy memory instructions and accesses. To realize this, Record Protector is designed to link the scale tracker and the access tracker to help identify the cache accesses from the attackers. The detailed experiments show the effectiveness and the robustness for defeating cache side channel attacks. Besides, Prefender also brings the performance improvement, and is highly compatible with other prefetchers. For the following sections, Section II introduces the background and the threat model. The related work is discussed in Section III, and the details of Prefender are proposed in Section IV. Then the experiments are described in Section V. Finally, Section VI concludes the paper.\n\nReference markers found: [4]\n\nContext windows for each [ref]:\n[ref]4: by many potential security vulnerabilities.\nAs a result, the cache side channel attacks   become serious threats to modern processors.\nFor example, it is possible for Spectre  and Meltdown [ref]4 attacks to steal almost any data in the memory, by leveraging vulnerabilities of the out-of-order execution and the speculative execution.\nMore seriously, these two attacks can threaten most\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 4,\n            \"titles\": [\n                \"A Systematic Evaluation of Transient Execution Attacks and Defenses\",\n                \"Theoretical use of cache memory as a cryptanalytic side-channel.\",\n                \"Flush+reload: A high resolution, low noise, l3 cache side-channel attack\",\n                \"Spectre attacks: Exploiting speculative execution\",\n                \"Meltdown: Reading kernel memory from user space\",\n                \"Cache attacks and countermeasures: the case of aes\",\n                \"Dawg: A defense against cache timing attacks in speculative execution processors\",\n                \"Conditional speculation: An effective approach to safeguard out-of-order execution against spectre attacks\",\n                \"InvisiSpec: Making Speculative Execution Invisible in the Cache Hierarchy\",\n                \"Defeating cache timing channels with hardware prefetchers\",\n                \"Reuse-trap: re-purposing cache reuse distance to defend against side channel leakage\",\n                \"Disruptive prefetching: impact on side-channel attacks and cache designs\",\n                \"Fooling the Sense of Cross-Core Last-Level Cache Eviction Based Attacker by Prefetching Common Sense\",\n                \"Cache template attacks: Automating attacks on inclusive last-level caches\",\n                \"Sequential Program Prefetching in Memory Hierarchies\",\n                \"An effective on-chip preloading scheme to reduce data access penalty\",\n                \"Feedback directed prefetching: Improving the performance and bandwidth-efficiency of hardware prefetchers\",\n                \"Prefetching using markov predictors\",\n                \"Dead-block prediction & dead-block correlating prefetchers\",\n                \"How Secure is Your Cache against Side-Channel Attacks?\",\n                \"PrODACT: Prefetch-Obfuscator to Defend Against Cache Timing Channels\",\n                \"Nda: Preventing speculative execution attacks at their source\",\n                \"Specshield: Shielding speculative data from microarchitectural covert channels\",\n                \"Safespec: Banishing the spectre of a meltdown with leakage-free speculation\",\n                \"MuonTrap: Preventing Cross-Domain Spectre-Like Attacks by Capturing Speculative State\",\n                \"SpecPref: High Performing Speculative Attacks Resilient Hardware Prefetchers\",\n                \"Catalyst: Defeating last-level cache side channel attacks in cloud computing\",\n                \"{{STEALTHMEM}}:{{System-Level}} protection against {{Cache-Based}} side channel attacks in the cloud\",\n                \"Ceaser: Mitigating conflict-based cache attacks via encrypted-address and remapping\",\n                \"New cache designs for thwarting software cache-based side channel attacks\",\n                \"Secure hierarchy-aware cache replacement policy (sharp): Defending against cache-based side channel attacks\",\n                \"Timing attacks on implementations of diffie-hellman, rsa, dss, and other systems\",\n                \"Aes proposal: Rijndael\",\n                \"Spectre Returns! Speculation Attacks using the Return Stack Buffer\",\n                \"LazyFP: Leaking FPU Register State using Microarchitectural Side-Channels\",\n                \"Foreshadow: Extracting the Keys to the Intel SGX Kingdom with Transient Out-of-Order Execution\",\n                \"The gem5 Simulator\",\n                \"SPEC CPU 2006 Benchmark\",\n                \"SPEC CPU 2017 Benchmark\",\n                \"ASAP 7nm Predictive PDK\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]4 based on the context and research area of Prefender: A Prefetching Defender against Cache Side Channel Attacks as A Pretender. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}