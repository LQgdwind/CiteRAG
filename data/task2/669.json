{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Combining Deep Reinforcement Learning and Search for Imperfect-Information Games\n\nPaper Abstract: \n\nPaper Section Text:\nWe assume that the rules of the game and the agents’ policies (including search algorithms) are common knowledge .222This is a common assumption in game theory. One argument for it is that in repeated play an adversary would eventually determine an agent’s policy. That is, they are known by all agents, all agents know they are known by all agents, etc. However, the outcome of stochastic algorithms (i.e., the random seeds) are not known.\nIn Section 6 we show how to remove the assumption that we know another player’s policy. Our notation is based on that of factored observation games  which is a modification of partially observable stochastic games 6 that distinguishes between private and public observations.\nWe consider a game with 𝒩={1,2,…,N}𝒩12…𝑁\\mathcal{N}=\\{1,2,...,N\\} agents. A world state w∈𝒲𝑤𝒲w\\in\\mathcal{W} is a state in the game. 𝒜=𝒜1×𝒜2×…×𝒜N𝒜subscript𝒜1subscript𝒜2…subscript𝒜𝑁\\mathcal{A}=\\mathcal{A}_{1}\\times\\mathcal{A}_{2}\\times...\\times\\mathcal{A}_{N} is the space of joint actions. 𝒜i​(w)subscript𝒜𝑖𝑤\\mathcal{A}_{i}(w) denotes the legal actions for agent i𝑖i at w𝑤w and a=(a1,a2,…,aN)∈𝒜𝑎subscript𝑎1subscript𝑎2…subscript𝑎𝑁𝒜a=(a_{1},a_{2},...,a_{N})\\in\\mathcal{A} denotes a joint action. After a joint action a𝑎a is chosen, a transition function 𝒯𝒯\\mathcal{T} determines the next world state w′superscript𝑤′w^{\\prime} drawn from the probability distribution 𝒯​(w,a)∈Δ​𝒲𝒯𝑤𝑎Δ𝒲\\mathcal{T}(w,a)\\in\\Delta\\mathcal{W}. After joint action a𝑎a, agent i𝑖i receives a reward ℛi​(w,a)subscriptℛ𝑖𝑤𝑎\\mathcal{R}_{i}(w,a). Upon transition from world state w𝑤w to w′superscript𝑤′w^{\\prime} via joint action a𝑎a, agent i𝑖i receives a private observation from a function 𝒪priv​(i)​(w,a,w′)subscript𝒪priv𝑖𝑤𝑎superscript𝑤′\\mathcal{O}_{\\text{priv}(i)}(w,a,w^{\\prime}). Additionally, all agents receive a public observation from a function 𝒪pub​(w,a,w′)subscript𝒪pub𝑤𝑎superscript𝑤′\\mathcal{O}_{\\text{pub}}(w,a,w^{\\prime}). Public observations may include observations of publicly taken actions by agents. For example, in many recreational games, including poker, all betting actions are public. A history (also called a trajectory) is a finite sequence of legal actions and world states, denoted h=(w0,a0,w1,a1,…,wt)ℎsuperscript𝑤0superscript𝑎0superscript𝑤1superscript𝑎1…superscript𝑤𝑡h=(w^{0},a^{0},w^{1},a^{1},...,w^{t}). An infostate (also called an action-observation history (AOH)) for agent i𝑖i is a sequence of an agent’s observations and actions si=(Oi0,ai0,Oi1,ai1,…,Oit)subscript𝑠𝑖superscriptsubscript𝑂𝑖0superscriptsubscript𝑎𝑖0superscriptsubscript𝑂𝑖1superscriptsubscript𝑎𝑖1…superscriptsubscript𝑂𝑖𝑡s_{i}=(O_{i}^{0},a_{i}^{0},O_{i}^{1},a_{i}^{1},...,O_{i}^{t}) where Oik=(𝒪priv​(i)​(wk−1,ak−1,wk),𝒪pub​(wk−1,ak−1,wk))superscriptsubscript𝑂𝑖𝑘subscript𝒪priv𝑖superscript𝑤𝑘1superscript𝑎𝑘1superscript𝑤𝑘subscript𝒪pubsuperscript𝑤𝑘1superscript𝑎𝑘1superscript𝑤𝑘O_{i}^{k}=\\big{(}\\mathcal{O}_{\\text{priv}(i)}(w^{k-1},a^{k-1},w^{k}),\\mathcal{O}_{\\text{pub}}(w^{k-1},a^{k-1},w^{k})\\big{)}.\nThe unique infostate corresponding to a history hℎh for agent i𝑖i is denoted si​(h)subscript𝑠𝑖ℎs_{i}(h). The set of histories that correspond to sisubscript𝑠𝑖s_{i} is denoted ℋ​(si)ℋsubscript𝑠𝑖\\mathcal{H}(s_{i}). A public state is a sequence spub=(Opub0,Opub1,…,Opubt)subscript𝑠pubsuperscriptsubscript𝑂pub0superscriptsubscript𝑂pub1…superscriptsubscript𝑂pub𝑡s_{\\text{pub}}=(O_{\\text{pub}}^{0},O_{\\text{pub}}^{1},...,O_{\\text{pub}}^{t}) of public observations. The unique public state corresponding to a history hℎh and an infostate sisubscript𝑠𝑖s_{i} is denoted spub​(h)subscript𝑠pubℎs_{\\text{pub}}(h) and spub​(si)subscript𝑠pubsubscript𝑠𝑖s_{\\text{pub}}(s_{i}), respectively. The set of histories that match the sequence of public observation of spubsubscript𝑠pubs_{\\text{pub}} is denoted ℋ​(spub)ℋsubscript𝑠pub\\mathcal{H}(s_{\\text{pub}}). For example, consider a game where two players roll two six-sided dice each. One die of each player is publicly visible; the other die is only observed by the player who rolled it. Suppose player 111 rolls a 333 and a 444 (with 333 being the hidden die), and player 222 rolls a 555 and a 666 (with 555 being the hidden die). The history (and world state) is h=((3,4),(5,6))ℎ3456h=\\big{(}(3,4),(5,6)\\big{)}. The set of histories corresponding to player 222’s infostate is ℋ​(s2)={((x,4),(5,6))∣x∈{1,2,3,4,5,6}}ℋsubscript𝑠2conditional-set𝑥456𝑥123456\\mathcal{H}(s_{2})=\\big{\\{}\\big{(}(x,4),(5,6)\\big{)}\\mid x\\in\\{1,2,3,4,5,6\\}\\big{\\}}, so |ℋ​(s2)|=6ℋsubscript𝑠26|\\mathcal{H}(s_{2})|=6. The set of histories corresponding to spubsubscript𝑠pubs_{\\text{pub}} is ℋ​(spub)={((x,4),(y,6))∣x,y∈{1,2,3,4,5,6}}ℋsubscript𝑠pubconditional-set𝑥4𝑦6𝑥𝑦123456\\mathcal{H}(s_{\\text{pub}})=\\big{\\{}\\big{(}(x,4),(y,6)\\big{)}\\mid x,y\\in\\{1,2,3,4,5,6\\}\\big{\\}}, so |ℋ​(spub)|=36ℋsubscript𝑠pub36|\\mathcal{H}(s_{\\text{pub}})|=36 . Public states provide an easy way to reason about common knowledge in a game. All agents observe the same public sequence spubsubscript𝑠pubs_{\\text{pub}}, and therefore it is common knowledge among all agents that the true history is some h∈ℋ​(spub)ℎℋsubscript𝑠pubh\\in\\mathcal{H}(s_{\\text{pub}}).333As explained in , it may be possible for agents to infer common knowledge beyond just public observations.\nHowever, doing this additional reasoning is inefficient both theoretically and practically. An agent’s policy πisubscript𝜋𝑖\\pi_{i} is a function mapping from an infostate to a probability distribution over actions. A policy profile π𝜋\\pi is a tuple of policies (π1,π2,…,πN)subscript𝜋1subscript𝜋2…subscript𝜋𝑁(\\pi_{1},\\pi_{2},...,\\pi_{N}).\nThe expected sum of future rewards (also called the expected value (EV)) for agent i𝑖i in history hℎh when all agents play policy profile π𝜋\\pi is denoted viπ​(h)superscriptsubscript𝑣𝑖𝜋ℎv_{i}^{\\pi}(h). The EV for the entire game is denoted vi​(π)subscript𝑣𝑖𝜋v_{i}(\\pi). A Nash equilibrium is a policy profile such that no agent can achieve a higher EV by switching to a different policy . Formally, π∗superscript𝜋\\pi^{*} is a Nash equilibrium if for every agent i𝑖i, vi​(π∗)=maxπi⁡vi​(πi,π−i∗)subscript𝑣𝑖superscript𝜋subscriptsubscript𝜋𝑖subscript𝑣𝑖subscript𝜋𝑖subscriptsuperscript𝜋𝑖v_{i}(\\pi^{*})=\\max_{\\pi_{i}}v_{i}(\\pi_{i},\\pi^{*}_{-i}) where π−isubscript𝜋𝑖\\pi_{-i} denotes the policy of all agents other than i𝑖i. A Nash equilibrium policy is a policy πi∗subscriptsuperscript𝜋𝑖\\pi^{*}_{i} that is part of some Nash equilibrium π∗superscript𝜋\\pi^{*}. A subgame is defined by a root history hℎh in a perfect-information game and all histories that can be reached going forward. In other words, it is identical to the original game except it starts at hℎh. A depth-limited subgame is a subgame that extends only for a limited number of actions into the future. Histories at the bottom of a depth-limited subgame (i.e., histories that have no legal actions in the depth-limited subgame) but that have at least one legal action in the full game are called leaf nodes. In this paper, we assume for simplicity that search is performed over fixed-size depth-limited subgame (as opposed to Monte Carlo Tree Search, which grows the subgame over time 3). A game is two-player zero-sum (2p0s) if there are exactly two players and ℛ1​(w,a)=−ℛ2​(w,a)subscriptℛ1𝑤𝑎subscriptℛ2𝑤𝑎\\mathcal{R}_{1}(w,a)=-\\mathcal{R}_{2}(w,a) for every world state w𝑤w and action a𝑎a.\nIn 2p0s perfect-information games, there always exists a Nash equilibrium that depends only on the current world state w𝑤w rather than the entire history hℎh. Thus, in 2p0s perfect-information games a policy can be defined for world states and a subgame can be defined as rooted at a world state. Additionally, in 2p0s perfect-information games every world state w𝑤w has a unique value vi​(w)subscript𝑣𝑖𝑤v_{i}(w) for each agent i𝑖i, where v1​(w)=−v2​(w)subscript𝑣1𝑤subscript𝑣2𝑤v_{1}(w)=-v_{2}(w), defined by both agents playing a Nash equilibrium in any subgame rooted at that world state. Our theoretical and empirical results are limited to 2p0s games, though related techniques have been empirically successful in some settings with more players [ref]14.\nA typical goal for RL in 2p0s perfect-information games is to learn visubscript𝑣𝑖v_{i}.\nWith that value function, an agent can compute its optimal next move by solving a depth-limited subgame that is rooted at its current world state and where the value of every leaf node z𝑧z is set to vi​(z)subscript𝑣𝑖𝑧v_{i}(z)  [ref]49.\n\nReference markers found: [14]\n\nContext windows for each [ref]:\n[ref]14: any subgame rooted at that world state. Our theoretical and empirical results are limited to 2p0s games, though related techniques have been empirically successful in some settings with more players [ref]14.\nA typical goal for RL in 2p0s perfect-information games is to learn visubscript𝑣𝑖v_{i}.\nWith that value function, an agent can compute its optimal next move by solving a depth-limited\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 14,\n            \"titles\": [\n                \"Depth-Limited Solving for Imperfect-Information Games\",\n                \"Thinking Fast and Slow with Deep Learning and Tree Search\",\n                \"Agree To Disagree\",\n                \"Layer normalization\",\n                \"Heads-up limit hold’em poker is solved\",\n                \"Iterative solution of games by fictitious play\",\n                \"Hierarchical abstraction, distributed equilibrium computation, and post-processing, with application to a champion no-limit texas hold’em agent\",\n                \"Deep Counterfactual Regret Minimization\",\n                \"Simultaneous abstraction and equilibrium finding in games\",\n                \"Baby tartanian8: Winning agent from the 2016 annual computer poker competition\",\n                \"Strategy-based warm starting for regret minimization in games\",\n                \"Safe and nested subgame solving for imperfect-information games\",\n                \"Superhuman AI for heads-up no-limit poker: Libratus beats top professionals\",\n                \"Solving Imperfect-Information Games via Discounted Regret Minimization\",\n                \"Superhuman AI for multiplayer poker\",\n                \"Solving imperfect information games using decomposition\",\n                \"AIVAT: A New Variance Reduction Technique for Agent Evaluation in Imperfect Information Games\",\n                \"Online optimization with gradual variations\",\n                \"Optimally solving dec-pomdps as continuous-state mdps\",\n                \"Bayesian Action Decoder for Deep Multi-Agent Reinforcement Learning\",\n                \"Potential-aware imperfect-recall abstraction with earth mover’s distance in imperfect-information games\",\n                \"Endgame solving in large imperfect-information games\",\n                \"Combining online and offline knowledge in uct\",\n                \"Optimal rhode island hold’em poker\",\n                \"A competitive texas hold’em poker player via automated abstraction and real-time equilibrium computation\",\n                \"Dynamic programming for partially observable stochastic games\",\n                \"Gaussian Error Linear Units (GELUs)\",\n                \"Smoothing techniques for computing nash equilibria of sequential games\",\n                \"Solving partially observable stochastic games with public observations\",\n                \"Finding optimal abstract strategies in extensive-form games\",\n                \"Planning and acting in partially observable stochastic domains\",\n                \"Adam: A method for stochastic optimization\",\n                \"Problems with the efg formalism: a solution attempt using observations\",\n                \"Rethinking Formal Models of Partially Observable Multiagent Decision Making\",\n                \"Solving large sequential games with the excessive gap technique\",\n                \"Faster algorithms for extensive-form game solving via improved smoothing functions\",\n                \"Improving Policies via Search in Cooperative Partially Observable Games\",\n                \"Generalised weakened fictitious play\",\n                \"Eqilibrium approximation quality of current no-limit poker bots\",\n                \"Deepstack: Expert-level artificial intelligence in heads-up no-limit poker\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]14 based on the context and research area of Combining Deep Reinforcement Learning and Search for Imperfect-Information Games. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}