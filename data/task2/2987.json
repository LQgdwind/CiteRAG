{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: RC-RNN: Reconfigurable Cache Architecture for Storage Systems Using Recurrent Neural Networks\n\nPaper Abstract: \n\nPaper Section Text:\nThere are numerous studies in SSD-based caching for storage systems       [ref]10 . Most of these studies suggest simple and linear caching algorithms based on conventional algorithms such as Least Recently Used (LRU) or Access Frequency that have shown to be practical and efficient in other levels of memory hierarchy such as CPU caches. Although LRU has low overhead, certain workloads can cause cache thrashingÂ   and significantly decrease its efficiency. Previous studies that use LRU as their baseline caching algorithm tried to overcome this problem with various approaches. ARC  employs two lists to keep track of recency and frequency of accessed I/O blocks. It buffers a percentage of each list based on the hit ratio in the recent accesses and keeps balance between blocks that have been accessed recently and blocks, which have been mostly accessed during the workload. LARC  employs a virtual LRU queue as a filter for recently accessed blocks and prevents randomly accessed blocks from entering cache in the first access. If a block is accessed for the second time while in filter, it gets promoted to the main LRU and will be buffered. With this approach, LARC prevents cache thrashing and significantly decreases cache replacements compared to LRU. mARC  benefits from both previous architectures in different phases of the workload. It uses hit ratio, recency, and frequency as feedback to switch between two methods. Although the mentioned studies have improved SSD caching performance in few workloads, they still have low performance in other workload types. In addition, the number of unnecessary cache replacements is still high in such architectures. In addition to modifying LRU, using access frequency has also been suggested in the previous studies  . In , a caching architecture called Azor is suggested, which is an access frequency cache that assigns metadata blocks a higher priority over data blocks. This architecture will be effective only for workloads with high percentage of metadata accesses. In case of workload change, older metadata blocks, which are not performance critical anymore, will be kept in cache and prevent performance critical pages from entering the cache. Hystor  proposes a hybrid storage architecture consists of both SSD and HDD to improve the overall performance. One of the drawbacks of hystor is allocating a fixed section of SSD as a writeback buffer for HDD subsystem, which can be either too large or too small for certain workloads. The size of the write-back cache significantly affects the performance of running workloads.\n\nReference markers found: [10]\n\nContext windows for each [ref]:\n[ref]10: There are numerous studies in SSD-based caching for storage systems       [ref]10 . Most of these studies suggest simple and linear caching algorithms based on conventional algorithms such as Least Recently Used (LRU) or Access Frequency that have shown to be practical and\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 10,\n            \"titles\": [\n                \"An Efficient Hybrid I/O Caching Architecture Using Heterogeneous SSDs\",\n                \"Investigating Power Outage Effects on Reliability of Solid-State Drives\",\n                \"Evaluating Impact of Human Errors on the Availability of Data Storage Systems\",\n                \"ReCA: an Efficient Reconfigurable Cache Architecture for Storage Systems with Online Workload Characterization\",\n                \"Outperforming lru with an adaptive replacement cache algorithm\",\n                \"Improving flash-based disk cache with lazy adaptive replacement\",\n                \"To arc or not to arc\",\n                \"Azor: Using two-level block selection to improve ssd-based i/o caches\",\n                \"Hystor: Making the best use of solid state drives in high performance storage systems\",\n                \"S-rac: Ssd friendly caching for data center workloads\",\n                \"Durable write cache in flash memory ssd for relational and nosql databases\",\n                \"A hybrid non-volatile cache design for solid-state drives using comprehensive i/o characterization\",\n                \"An anomaly in space-time characteristics of certain programs running in a paging machine\",\n                \"ì¸ê³µì§ë¥ ê¸°ë° ê³µê²© ê·¸ëí ìì±\",\n                \"Handwriting prediction based character recognition using recurrent neural network\",\n                \"Intelligent web proxy caching approaches based on machine learning techniques\",\n                \"Keras\",\n                \"Operating system level data tiering using online workload characterization\",\n                \"Integrating flash-based ssds into the storage stack\",\n                \"Exploiting concurrency to improve latency and throughput in a hybrid storage system\",\n                \"Cost effective storage using extent based dynamic tiering\",\n                \"ECI-Cache: A High-Endurance and Cost-Efficient I/O Caching Scheme for Virtualized Platforms\",\n                \"The evicted-address filter: A unified mechanism to address both cache pollution and thrashing\",\n                \"Diskaccel: Accelerating disk-based experiments by representative sampling\",\n                \"Easy and efficient disk i/o workload characterization in vmware esx server\",\n                \"Characterization of storage workload traces from production windows servers\",\n                \"24/7 characterization of petascale i/o workloads\",\n                \"Disk drive level workload characterization\",\n                \"Web server workload characterization: The search for invariants\",\n                \"Deep Learning\",\n                \"Rnn based uyghur text line recognition and its training strategy\",\n                \"Supervised sequence labelling with recurrent neural networks\",\n                \"A Critical Review of Recurrent Neural Networks for Sequence Learning\",\n                \"Multi-dimensional gated recurrent units for the segmentation of biomedical 3d-data\",\n                \"Write off-loading: Practical power management for enterprise storage\",\n                \"C-miner: Mining block correlations in storage systems.\",\n                \"The new and improved filebench\",\n                \"A survey on deep learning in big data\",\n                \"Enhanceio ssd caching software\",\n                \"Lecture 6.5-rmsprop: Divide the gradient by a running average of its recent magnitude\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]10 based on the context and research area of RC-RNN: Reconfigurable Cache Architecture for Storage Systems Using Recurrent Neural Networks. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}