{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Multi-grained Semantics-aware Graph Neural Networks\n\nPaper Abstract: \n\nPaper Section Text:\nWe evaluate our proposed model, AdamGNN, on 141414 benchmark datasets, and compare with 161616 competing methods over both node- and graph-wise tasks, including node classification, link prediction and graph classification. Datasets.\nTo validate the effectiveness of our model on real-world applications, we adopt datasets come from different domains with different topics and relations.\nWe use 888 datasets for node-wise tasks (data statistics are summarised in Table II).\nOgbn-arxiv , ACM , Cora [ref]15, Citeseer [ref]15 and Pubmed [ref]15 are paper citation graph datasets.\nDBLP  is an author graph dataset from the DBLP dataset.\nEmails  is an email communication graph dataset.\nWiki [ref]35 is a webpage graph dataset. For the graph classification task, we adopt 666 bioinformatics datasets \n(data statistics are summarised in Table III).\nD&D and PROTEINS are dataset containing proteins as graphs.\nNCI1 and NCI109 involve anticancer activity graphs.\nThe MUTAG and Mutagenicity consist of chemical compounds divided into two classes according to their mutagenic effect on a bacterium.\nNote that all datasets can be downloaded with our published code automatically. Competing methods.\nFor node-wise tasks, we adopt 101010 competing methods that include 777 GNN models with flat message-passing mechanism, and 222 state-of-the-art methods that contain a hierarchical structure:\nMLP ,\nGCN [ref]15,\nGraphSAGE ,\nGAT ,\nGIN ,\nPNA [ref]7,\nGCNII ,\nGRAND ,\nGXN 0\nand g-U-Net .\nFor the graph classification task, except for GIN, PNA, GXN and g-U-Net which support graph-wise tasks, we adopt extra 777 competing methods that involve the state-of-the-art models:\n3WL-GNN 4,\nSortPool ,\nDiffPool ,\nSagPool ,\nEigentPool 3,\nStructPool \nand ASAP 6.\nNote that we already carefully discussed these competing methods in Section 2; therefore, we do not repeat the method description to save page space.\nThe competing model implementations can be found in our published project on Github.\n Evaluation settings.\nFor the node-wise tasks, we follow the supervised node classification (Sup-NC) settings of PNA [ref]7, i.e., using two sets of 10%percent1010\\% labelled nodes as validation and test sets, with the remaining 80%percent8080\\% labelled nodes used as the training set.\nMeanwhile, we follow the semi-supervised node classification (Semi-NC) settings of GCN [ref]15, and the data split is shown in Table II.\nThat said, for Cora, Citeseer and Pubmed, we use the fixed splits and for other datasets, we randomly assign 202020 labelled nodes for each class for training, and 500500500 and 100010001000 nodes for validation and testing, respectively.\nNote that since the Email does not have a sufficient number of nodes for classic Semi-NC setting, we choose 101010 labelled nodes for each class for training, and the rest data is evenly separated as validation and test sets.\nWiki is imbalanced, where some classes only have very few labelled nodes, e.g., class 121212 has 999 labelled nodes and class 444 has 101010 labelled nodes, which cannot support Semi-NC settings.\nTherefore, we follow Sup-NC settings to split Wiki for the Semi-NC experimental parts but use only 20%percent2020\\% labelled nodes for training and the remaining nodes for validation and testing, respectively.\nOgbn-arxiv follows the fixed split of OGB leaderboard .\nFor the Link Prediction (LP) task, we follow the settings of , i.e., using two sets of 10%percent1010\\% existing edges as validation and test sets, with the remaining 80%percent8080\\% edges used as the training set.\nNote that, an equal number of non-existent links are randomly sampled and used for every set.\nWe present the average performance of 101010 times experiments with random seeds.\nThe AUC score evaluates link prediction, and node classification tasks are evaluated by accuracy.\nWe conduct the experiments with random parameter initialisation with 101010 random seeds and report the average performance. For the graph-wise task, i.e., graph classification (GC) task, we perform all experiments following the pooling pipeline of SagPool .\n80%percent8080\\% of the graphs are randomly selected as training, and the rest two 10%percent1010\\% graphs are used for validation and testing, respectively.\nWe conduct the experiments using 101010-fold cross-validation and report the average classification accuracy on 101010 random seeds. Model configuration.\nFor all methods, we set the embedding dimension d=64𝑑64d=64 and utilise the same learning rate =0.01absent0.01=0.01, Adam optimiser, number of training epochs =1000absent1000=1000 with early stop (100100100).\nIn terms of the neural network layers, we report the one with better performance of GCNII with better performance among {8,16,32,64,128}8163264128\\{8,16,32,64,128\\}; for other models, we report the one with better performance between 2−4242\\!-\\!4;\nFor all models with hierarchical structure (including AdamGNN), we use GCN as the GNN encoder for fair comparision.\nIn terms of the number of levels that is required by hierarchical models, we present the one with better performance, between 2−5252\\!-\\!5.\nOn other hyper-parameter settings of competing methods, we employ the default values of each competing method as shown in the paper’s official implementation.\nParticularly, for AdamGNN, by tuning the hyper-parameters based on the validation set,\nwe have γ=0.1𝛾0.1\\gamma=0.1 and δ=0.01𝛿0.01\\delta=0.01 for Eq. 10 for the experiments to let loss values lie in a reasonable range, i.e., (0,10)010(0,10).\nWe employ Pytorch and PyTorch Geometric to implement all models.\nExperiments were conducted with GPU (NVIDIA Tesla V100) machines.\n\nReference markers found: [15]\n\nContext windows for each [ref]:\n[ref]15: we adopt datasets come from different domains with different topics and relations.\nWe use 888 datasets for node-wise tasks (data statistics are summarised in Table II).\nOgbn-arxiv , ACM , Cora [ref]15, Citeseer [ref]15 and Pubmed [ref]15 are paper citation graph datasets.\nDBLP  is an author graph dataset from the DBLP dataset.\nEmails  is an email communication graph dataset.\nWiki [ref]35\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 15,\n            \"titles\": [\n                \"Self-Attention Graph Pooling\",\n                \"The logical expressiveness of graph neural networks\",\n                \"Structural Deep Clustering Network\",\n                \"Spectral networks and locally connected networks on graphs\",\n                \"Towards Sparse Hierarchical Graph Classifiers\",\n                \"Measuring and Relieving the Over-smoothing Problem for Graph Neural Networks from the Topological View\",\n                \"Simple and Deep Graph Convolutional Networks\",\n                \"Principal Neighbourhood Aggregation for Graph Nets\",\n                \"Graph Random Neural Networks for Semi-Supervised Learning on Graphs\",\n                \"Graph U-Nets\",\n                \"Inductive Representation Learning on Large Graphs\",\n                \"Neural networks: A comprehensive foundation\",\n                \"The vanishing gradient problem during learning recurrent neural nets and problem solutions\",\n                \"Open Graph Benchmark: Datasets for Machine Learning on Graphs\",\n                \"Accelerating training and inference of graph neural networks with fast sampling and pipelining\",\n                \"Semi-Supervised Classification with Graph Convolutional Networks\",\n                \"SNAP Datasets: Stanford large network dataset collection\",\n                \"A model to slice java programs hierarchically\",\n                \"Deepgcns: Can gcns go as deep as cnns?\",\n                \"Graph Cross Networks with Vertex Infomax Pooling\",\n                \"Deeper Insights into Graph Convolutional Networks for Semi-Supervised Learning\",\n                \"Overcoming Catastrophic Forgetting in Graph Neural Networks\",\n                \"Graph Convolutional Networks with EigenPooling\",\n                \"Provably powerful graph networks\",\n                \"GCC: Graph Contrastive Coding for Graph Neural Network Pre-Training\",\n                \"ASAP: adaptive structure aware pooling for learning hierarchical graph representations\",\n                \"GraphAF: a Flow-based Autoregressive Model for Molecular Graph Generation\",\n                \"Scalable algorithms for data and network analysis\",\n                \"Directed Acyclic Graph Neural Networks\",\n                \"Attention Is All You Need\",\n                \"Graph Attention Networks\",\n                \"A Comprehensive Survey on Graph Neural Networks\",\n                \"Unsupervised Deep Embedding for Clustering Analysis\",\n                \"How Powerful are Graph Neural Networks?\",\n                \"Network representation learning with rich text information\",\n                \"Understanding Negative Sampling in Graph Representation Learning\",\n                \"Hierarchical Graph Representation Learning with Differentiable Pooling\",\n                \"Position-aware Graph Neural Networks\",\n                \"Structpool: Structured graph pooling via conditional random fields\",\n                \"An information flow model for conflict and fission in small groups\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]15 based on the context and research area of Multi-grained Semantics-aware Graph Neural Networks. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}