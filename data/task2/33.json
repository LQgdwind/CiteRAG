{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: High-Quality Hierarchical Process Mapping1footnote 11footnote 1This work was partially supported by the Austrian Science Fund (FWF, project P 31763-N31) and partially supported by DFG grant FINCA (ME-3619/3-2) within the SPP 1736 Algorithms for Big Data as well as the German Federal Ministry of Education and Research (BMBF) project WAVE (grant 01‚ÄîH15004B).\n\nPaper Abstract: \n\nPaper Section Text:\nThe performance of applications that run on high-performance computing systems depends on many factors such as the capability and topology (structure) of the underlying communication system, the required communication (patterns, frequencies, volumes, and dependencies) between processes in the given applications, and the software and algorithms used to realize the communication.\nFor example, communication is typically faster (has lower latency, higher bandwidth, more communication channels) if communicating processes are located on the same physical processor node compared to cases where processes reside on different nodes.\nThis becomes even more pronounced for large supercomputer systems where processors are hierarchically organized (e.‚Äâg., islands, racks, nodes, processors, cores) with corresponding communication links of similar quality, and where differences in the process placement can have a huge impact on the communication performance\n(latency, bandwidth, congestion).\nOften the communication pattern between application processes is or can be known. Additionally, a hardware topology description that reflects the capacity of the communication links is typically available. Hence, it is natural to attempt to find a good mapping of the application processes onto the hardware processors such that pairs of processes that frequently communicate large amounts of data are¬†located¬†closely.\nFinding such best or just good mappings is the objective of some usually hard¬†optimization¬†problems. Previous work can be grouped into two categories.\nOne line of research intertwines process mapping with multilevel graph partitioning (see for example  ).\nTo this end, the objective of the partitioning algorithm ‚Äì most commonly the number of cut edges ‚Äì is typically replaced by an objective function that considers the processor distances.\nThroughout these algorithms, the distances are directly taken into consideration.\nThe second category decouples partitioning and mapping (see for example    ).\nFirst, a graph partitioning algorithm is used to partition a large graph into kùëòk blocks, while minimizing some measure of communication, such as edge-cut, and at the same time balancing the load (size of the blocks).\nAfterwards, a coarser model of computation and communication is created in which the number of nodes matches the number of processing elements (PEs) in the given processor network.\nThis model is then mapped to a processor network of kùëòk PEs with given pair-wise distances using a process mapping algorithm.\nAs shown in , the decoupling approach can lead to worse results than the integrated approach.\nWe refer the reader to   for more details on mapping and graph partitioning. The starting point for this research is as follows.\nRecently, process mapping algorithms have made two assumptions that are typically valid for modern supercomputers and the applications that run on those: communication patterns are sparse and there is a hierarchical communication topology where links on the same level in the hierarchy exhibit the same communication speed.\nUsing these assumptions, better decoupled ‚Äì¬†non-integrated¬†‚Äì mapping algorithms have been obtained, e.g.¬†.\nIn this problem formulation, the model of computation and communication is first partitioned using a standard graph partitioning algorithm, and then a smaller model that has the same number of nodes as the underlying network of processors is mapped.\nOn the other hand, there has been a large body of work on the multilevel (hyper-)graph partitioning problem, which led to enhanced partitioning quality or faster local search¬† [ref]38 [ref]27  .\nThe multilevel approach¬† is probably the most prominently used algorithm in the graph partitioning field.\nHere, the input is recursively contracted to obtain a smaller instance which should reflect the same basic structure as the input.\nAfter applying an initial partitioning algorithm to the smallest instance, contraction is undone and, at each level, local search methods are used to improve the partitioning induced by the coarser level.\nRecent enhancements to the multilevel scheme include novel local search techniques such as very localized local search algorithms, fast label propagation algorithms,  or gain caches to avoid expensive recomputations throughout local search algorithms. Our main contribution in this paper is the integration of process mapping into a multilevel scheme with high-quality local search techniques and recently developed non-integrated mapping algorithms. Additionally, we introduce faster techniques that avoid to store distance matrices.\nOverall, our algorithms are able to compute better solutions than other recent heuristics for the problem scale well to large instances.\nThe rest of this paper is organized as follows.\nIn Section¬†2, we introduce basic concepts and describe relevant related work in more detail.\nWe present our main contributions in Section¬†3.\nWe implemented the techniques presented here in the graph partitioning framework KaHIP¬†[ref]38 (Karlsruhe High Quality Graph Partitioning).\nWe present a summary of extensive experiments to evaluate algorithm performance in Section¬†4. The experiments indicate that our new integrated algorithm improves mapping quality over other state-of-the-art integrated and non-integrated mapping algorithms.\nFor example, one configuration of our algorithm yields better solutions than the previous state-of-the-art in terms of mapping quality while being a factor 62 faster.\nCompared to the currently fastest iterated multilevel mapping algorithm Scotch, we obtain 16% better solutions while investing slightly more running time.\nMost importantly, hierarchical multisection algorithms that take the system hierarchy into account for model creation improve the results of the overall process mapping significantly.\n\nReference markers found: [38]\n\nContext windows for each [ref]:\n[ref]38: processors is mapped.\nOn the other hand, there has been a large body of work on the multilevel (hyper-)graph partitioning problem, which led to enhanced partitioning quality or faster local search¬† [ref]38 [ref]27  .\nThe multilevel approach¬† is probably the most prominently used algorithm in the graph partitioning field.\nHere, the input is recursively contracted to obtain a smaller instance\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Advanced Multilevel Node Separator Algorithms\",\n                \"RAHTM: Routing algorithm aware hierarchical task mapping\",\n                \"Memetic Multilevel Hypergraph Partitioning\",\n                \"Benchmarking for graph clustering and partitioning\",\n                \"A fast multilevel implementation of recursive spectral bisection for partitioning unstructured problems\",\n                \"What MPI could (and cannot) do for mesh-partitioning on non-homogeneous networks\",\n                \"Graph Partitioning\",\n                \"Fast unfolding of community hierarchies in large networks\",\n                \"Rank reordering for MPI communication optimization\",\n                \"Recent Advances in Graph Partitioning, pages 117‚Äì158\",\n                \"The university of florida sparse matrix collection\",\n                \"Orca reduction and contraction graph clustering\",\n                \"Engineering route planning algorithms\",\n                \"A Linear-Time Heuristic for Improving Network Partitions\",\n                \"Some Simplified NP-Complete Problems\",\n                \"Algorithms for mapping parallel processes onto grid and torus architectures\",\n                \"Topology-induced Enhancement of Mappings\",\n                \"A multilevel bilinear programming algorithm for the vertex separator problem\",\n                \"Rank reordering strategy for MPI topology creation functions\",\n                \"A computationally simplified pair-exchange algorithm for the quadratic assignment problem\",\n                \"A Multilevel Algorithm for Partitioning Graphs\",\n                \"Multilevel algorithms for acyclic partitioning of directed acyclic graphs\",\n                \"Generic topology mapping strategies for large-scale parallel architectures\",\n                \"A Fast and High Quality Multilevel Scheme for Partitioning Irregular Graphs\",\n                \"Multilevel k-way hypergraph partitioning\",\n                \"Towards an efficient process placement policy for MPI applications in multicore environments\",\n                \"Improving MPI applications performance on multicore clusters with rank reordering\",\n                \"Partitioning Complex Networks via Size-constrained Clustering\",\n                \"Drawing Large Graphs by Multilevel Maxent-Stress Optimization\",\n                \"Graph partitioning with acyclicity constraints\",\n                \"Evolutionary multi-level acyclic graph partitioning\",\n                \"Optimale reihenfolgen, volume 15 of √ñkonometrie und Unternehmensforschung\",\n                \"Scotch Home Page\",\n                \"SCOTCH: A software package for static mapping by dual recursive bipartitioning of process and architecture graphs\",\n                \"Near linear time algorithm to detect community structures in large-scale networks\",\n                \"P-complete approximation problems\",\n                \"KaHIP ‚Äì Karlsruhe High Qualtity Partitioning Homepage\",\n                \"Engineering Multilevel Graph Partitioning Algorithms\",\n                \"Think Locally, Act Globally: Highly Balanced Graph Partitioning\",\n                \"ùëò-way Hypergraph Partitioning via ùëõ-Level Recursive Bisection\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]38 based on the context and research area of High-Quality Hierarchical Process Mapping1footnote 11footnote 1This work was partially supported by the Austrian Science Fund (FWF, project P 31763-N31) and partially supported by DFG grant FINCA (ME-3619/3-2) within the SPP 1736 Algorithms for Big Data as well as the German Federal Ministry of Education and Research (BMBF) project WAVE (grant 01‚ÄîH15004B).. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}