{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Neural Networks Based Detection of Stealth False Data Injection Attacks in Smart Grids\n\nPaper Abstract: \n\nPaper Section Text:\nSmart power grids can be modeled by a connected, undirected, weighted graph 𝒢=(𝒱,ℰ,𝑾)𝒢𝒱ℰ𝑾\\mathcal{G}=(\\mathcal{V},\\mathcal{E},\\bm{W}) that consists of a finite set of vertices 𝒱𝒱\\mathcal{V} with |𝒱|=n𝒱𝑛|\\mathcal{V}|=n, a finite set of edges ℰℰ\\mathcal{E} and a weighted adjacency matrix 𝑾∈ℝn×n𝑾superscriptℝ𝑛𝑛\\bm{W}\\in\\mathbb{R}^{n\\times n} . Buses are represented by vertices 𝒱𝒱\\mathcal{V}, branches and transformers are represented by edges ℰℰ\\mathcal{E} and line admittances are represented by 𝑾𝑾\\bm{W} in this mapping. If the buses i𝑖i and j𝑗j are connected, the corresponding weight of the edge e=(i,j)𝑒𝑖𝑗e=(i,j) connecting vertices i𝑖i and j𝑗j is assigned to Wi​jsubscript𝑊𝑖𝑗W_{ij}. A signal or a function f:𝒱→ℝ:𝑓→𝒱ℝf:\\mathcal{V}\\rightarrow\\mathbb{R} in 𝒢𝒢\\mathcal{G} can be represented by a vector 𝒇∈ℝn𝒇superscriptℝ𝑛\\bm{f}\\in\\mathbb{R}^{n}, where i𝑖ith component of the vector 𝒇𝒇\\bm{f} corresponds to scalar value at the vertex i∈𝒱𝑖𝒱i\\in\\mathcal{V}. A fundamental operator defined in spectral graph theory  is the graph Laplacian operator L∈ℝn×n𝐿superscriptℝ𝑛𝑛L\\in\\mathbb{R}^{n\\times n}. Its normalized definition is represented as\nL=In−D−1/2​W​D−1/2𝐿subscript𝐼𝑛superscript𝐷12𝑊superscript𝐷12L=I_{n}-D^{-1/2}WD^{-1/2}\nwhere Insubscript𝐼𝑛I_{n} is the identity matrix, and D∈ℝn×n𝐷superscriptℝ𝑛𝑛D\\in\\mathbb{R}^{n\\times n} is the diagonal degree matrix with Di​i=∑jWi​jsubscript𝐷𝑖𝑖subscript𝑗subscript𝑊𝑖𝑗D_{ii}=\\sum_{j}W_{ij}. Since L𝐿L is a real symmetric positive semi-definite matrix, all eigenvalues λisubscript𝜆𝑖\\lambda_{i} of it are real valued and non-negative, and it has a complete set of orthonormal eigenvectors 𝒖𝒊subscript𝒖𝒊\\bm{u_{i}} . Thus, L𝐿L can be diagonalized as L=U​Λ​UT𝐿𝑈Λsuperscript𝑈𝑇L=U\\Lambda U^{T}\nwhere U=[𝒖0,𝒖1,…,𝒖n−1]∈ℝn×n𝑈subscript𝒖0subscript𝒖1…subscript𝒖𝑛1superscriptℝ𝑛𝑛U=[\\bm{u}_{0},\\bm{u}_{1},\\ldots,\\bm{u}_{n-1}]\\in\\mathbb{R}^{n\\times n} represent the n𝑛n orthonormal eigenvectors, and Λ=diag([λ0,λ1,…,λn−1])∈ℝn×nΛdiagsubscript𝜆0subscript𝜆1…subscript𝜆𝑛1superscriptℝ𝑛𝑛\\Lambda=\\operatorname*{diag}([\\lambda_{0},\\lambda_{1},\\ldots,\\lambda_{n-1}])\\in\\mathbb{R}^{n\\times n} denotes the diagonal matrix of n𝑛n eigenvalues 0=λ0<λ1<…<λn−1<20subscript𝜆0subscript𝜆1…subscript𝜆𝑛120=\\lambda_{0}<\\lambda_{1}<\\ldots<\\lambda_{n-1}<2 due to the normalization . In fact, vectors 𝒖isubscript𝒖𝑖\\bm{u}_{i} form the graph Fourier basis and λisubscript𝜆𝑖\\lambda_{i} values represent frequencies in the graph spectral domain . The Fourier Transform and its inverse can be defined in the graph spectral domain analogously to the classical Fourier Transform. Namely, the Graph Fourier Transform (GFT) and Inverse Graph Fourier Transformation (IGFT) are defined as\ns~=UT​s~𝑠superscript𝑈𝑇𝑠\\tilde{s}=U^{T}s and s=U​s~𝑠𝑈~𝑠s=U\\tilde{s}\nwhere s𝑠s and s~~𝑠\\tilde{s} denote vertex and spectral domain signals, respectively. Unlike classical signal processing, a meaningful translation operator does not exist in the vertex domain . Therefore, to apply a convolution operation to graph signals, they are first transformed into the spectral domain using GFT, then convolved (Hadamard product) in the spectral domain and finally the result transformed back to the vertex domain using IGFT . Formally, x∗𝒢y=U​((UT​x)⊙(UT​y))subscript∗𝒢𝑥𝑦𝑈direct-productsuperscript𝑈𝑇𝑥superscript𝑈𝑇𝑦x\\ast_{\\mathcal{G}}y=U((U^{T}x)\\odot(U^{T}y)). Similarly, a graph signal x∈ℝn𝑥superscriptℝ𝑛x\\in\\mathbb{R}^{n} is filtered by a kernel gθsubscript𝑔𝜃g_{\\theta}: where gθ​(Λ)=diag(θ)subscript𝑔𝜃Λdiag𝜃g_{\\theta}(\\Lambda)=\\operatorname*{diag}(\\theta) is a non-parametric kernel, and θ∈ℝn𝜃superscriptℝ𝑛\\theta\\in\\mathbb{R}^{n} is a vector of Fourier coefficients . To put it differently, gθsubscript𝑔𝜃g_{\\theta} filters the signal x𝑥x in the spectral domain by multiplying its spectral components with the free θ𝜃\\theta coefficients in a similar way with the classical signal processing in the Fourier domain. Eventually, the filtered signal is transformed back to the vertex domain by IGFT . Nevertheless, those non-parametric filters are not spatially localized and hence computational complexity of eq. (6) is 𝒪​(n2)𝒪superscript𝑛2\\mathcal{O}(n^{2}) due to the matrix multiplication with U𝑈U. To thwart this problem,  proposed to parameterize gθ​(L)subscript𝑔𝜃𝐿g_{\\theta}(L) as a Cheybyshev polynomial function which can be computed recursively from L𝐿L. The K𝐾K order Chebyshev polynomial of the first kind Tk​(x)subscript𝑇𝑘𝑥T_{k}(x) is computed recursively as follows [ref]40: where T0​(x)=1subscript𝑇0𝑥1T_{0}(x)=1 and T1​(x)=xsubscript𝑇1𝑥𝑥T_{1}(x)=x.\nTherefore, a filter gθsubscript𝑔𝜃g_{\\theta} can be approximated by\nChebyshev polynomials, Tksubscript𝑇𝑘T_{k}, up to order K−1𝐾1K-1 and a signal x𝑥x can be filtered by gθsubscript𝑔𝜃g_{\\theta}: where the parameter θ∈ℝK𝜃superscriptℝ𝐾\\theta\\in\\mathbb{R}^{K} is a vector of Chebyshev coefficients, and Tk​(L~)∈ℝn×nsubscript𝑇𝑘~𝐿superscriptℝ𝑛𝑛T_{k}(\\tilde{L})\\in\\mathbb{R}^{n\\times n} is the Chebyshev polynomial of order k𝑘k evaluated at the scaled Laplacian L~~𝐿\\tilde{L} given by L~=2​L/λm​a​x−In~𝐿2𝐿subscript𝜆𝑚𝑎𝑥subscript𝐼𝑛\\tilde{L}=2L/\\lambda_{max}-I_{n}.\nFinally, filtered signal y𝑦y can be calculated by the help of (7) and (8) as: where x¯0=xsubscript¯𝑥0𝑥\\bar{x}_{0}=x, x¯1=L~​xsubscript¯𝑥1~𝐿𝑥\\bar{x}_{1}=\\tilde{L}x, and x¯ksubscript¯𝑥𝑘\\bar{x}_{k} is computed recursively: Note that convolution in eq. (9) is K𝐾K-localized, and its computational complexity is reduced to 𝒪​(K​|ℰ|)𝒪𝐾ℰ\\mathcal{O}(K|\\mathcal{E}|). Thus, it can efficiently be utilized in the intermediate layers of the GNN to model the non-Euclidean measurement data of power grids. For detailed analysis, please refer to  .\n\nReference markers found: [40]\n\nContext windows for each [ref]:\n[ref]40: as a Cheybyshev polynomial function which can be computed recursively from L𝐿L. The K𝐾K order Chebyshev polynomial of the first kind Tk​(x)subscript𝑇𝑘𝑥T_{k}(x) is computed recursively as follows [ref]40: where T0​(x)=1subscript𝑇0𝑥1T_{0}(x)=1 and T1​(x)=xsubscript𝑇1𝑥𝑥T_{1}(x)=x.\nTherefore, a filter gθsubscript𝑔𝜃g_{\\theta} can be approximated by\nChebyshev polynomials, Tksubscript𝑇𝑘T_{k}, up to\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 40,\n            \"titles\": [\n                \"pandapower - an Open Source Python Tool for Convenient Modeling, Analysis and Optimization of Electric Power Systems\",\n                \"Power flow cyber attacks and perturbation-based defense\",\n                \"Cyber–physical system security for the electric power grid\",\n                \"Monitoring and optimization for power grids: A signal processing perspective\",\n                \"Power System State Estimation: Theory and Implementation\",\n                \"Cyber-physical attacks and defences in the smart grid: a survey\",\n                \"A review of false data injection attacks against modern power systems\",\n                \"False data injection attacks against state estimation in electric power grids\",\n                \"Detection of false data injection attacks in smart-grid systems\",\n                \"Malicious data attacks on the smart grid\",\n                \"Real-time detection of false data injection in smart grid networks: An adaptive cusum method and analysis\",\n                \"Detection of false data injection attacks in smart grids based on graph signal processing\",\n                \"Resilient distributed dc optimal power flow against data integrity attack\",\n                \"Real-Time Detection of Hybrid and Stealthy Cyber-Attacks in Smart Grid\",\n                \"Adaptive statistical detection of false data injection attacks in smart grids\",\n                \"Distributed quickest detection of cyber-attacks in smart grid\",\n                \"An adaptive markov strategy for defending smart grid false data injection from malicious attackers\",\n                \"Detecting stealthy false data injection using machine learning in smart grid\",\n                \"Real-time cyber-physical false data attack detection in smart grids using neural networks\",\n                \"Detection of power grid disturbances and cyber-attacks based on machine learning\",\n                \"Subset level detection of false data injection attacks in smart grids\",\n                \"A big data framework for intrusion detection in smart grids using apache spark\",\n                \"Detection of false data injection attacks in power systems with graph fourier transform\",\n                \"Detection of false data injection attack using graph signal processing for the power grid\",\n                \"Defending against false data injection attacks on power system state estimation\",\n                \"Detecting false data injection attacks on power grid by sparse optimization\",\n                \"A survey on the detection algorithms for false data injection attacks in smart grids\",\n                \"Deep Learning\",\n                \"Thirty Years of Machine Learning: The Road to Pareto-Optimal Wireless Networks\",\n                \"Graph neural networks: A review of methods and applications\",\n                \"OPTIMAL POWER FLOW USING GRAPH NEURAL NETWORKS\",\n                \"Bad data analysis for power system state estimation\",\n                \"On false data-injection attacks against power system state estimation: Modeling and countermeasures\",\n                \"Stealth false data injection using independent component analysis in smart grid\",\n                \"False data injection attacks with incomplete information against smart power grids\",\n                \"Blind false data injection attack using pca approximation method in smart grid\",\n                \"Vulnerability assessment of ac state estimation with respect to false data injection cyber-attacks\",\n                \"Optimizing the Latent Space of Generative Networks\",\n                \"Graph signal processing: Overview, challenges, and applications\",\n                \"Convolutional neural networks on graphs with fast localized spectral filtering\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]40 based on the context and research area of Graph Neural Networks Based Detection of Stealth False Data Injection Attacks in Smart Grids. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}