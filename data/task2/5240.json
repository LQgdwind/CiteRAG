{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: AI Model Utilization Measurements For Finding Class Encoding Patterns\n\nPaper Abstract: \n\nPaper Section Text:\nBinary tensor-states in AI computation graphs:\nWhile one computation unit in an AI computation graph produces real-value numbers, they can be binarized by thresholding at zero during measurement extraction. The thresholding operation reduces the real-value variability to {0,1}01\\{0,1\\} by discretizing the output real values.\nOne can model the discretization step according to Hopfield Neural Networks (HNN)  where a computation unit is viewed as an associative content-addressable memory for storing information bits about training data points 8. The HNN model was motivated by collective properties of neurons in neurobiology adapted to integrated circuits , and the more recent work on dense associative memory  and Hopfield layers . The thresholding value at zero is motivated by zero-centered normalizations of input data and the majority of nonlinear activation functions being centered around zero (i.e., tanh, sigmoid, rectified linear unit (ReLU), or leaky ReLU). Utilization With Respect to State Representation Power of a Computation Unit:\nA particular computation unit in an AI computation graph can represent a maximum number of states depending on the number of outputs. For example, a fully connected layer (one computation unit) consisting of two nodes (two scalar outputs) can represent no more than four states, such as {00,01,10,11}00011011\\{00,01,10,11\\}. This fully connected layer would be fully utilized if all four states were used for predicting output labels. In order to define the utilization of a computation unit mathematically, one can use the parallels drawn by Bajcsy et al. [ref]17 between neural network and communication fields in terms of (a) computation unit maximum representation power and channel capacity in communications and (b) computation unit utilization and channel efficiency while leveraging the universal approximation theorem  and the source coding theorem .\nUsing the theorems, a computation unit vjsubscript𝑣𝑗v_{j} with DjO​u​tsuperscriptsubscript𝐷𝑗𝑂𝑢𝑡D_{j}^{Out} nodes has the maximum representation power (or computation unit capacity) of nj=2DjO​u​tsubscript𝑛𝑗superscript2superscriptsubscript𝐷𝑗𝑂𝑢𝑡n_{j}=2^{D_{j}^{Out}} possible states. The utilization definition can also be related to Vapnik-Chervonenkis (VC) dimension of a class of binary classifiers H𝐻H from the image space χ𝜒\\chi to the label space {0,1}01\\{0,1\\}; H:χ→{0,1}:𝐻→𝜒01H:\\chi\\rightarrow\\{0,1\\} , . The VC dimension V​C​d​i​m​(H)𝑉𝐶𝑑𝑖𝑚𝐻VCdim(H) is defined as the size m𝑚m of the largest shattered set of inputs {x→1,…,x→m}subscript→𝑥1…subscript→𝑥𝑚\\{\\vec{x}_{1},...,\\vec{x}_{m}\\} such that the growth function\nΠH​(m)=maxx→1,…,x→m∈χ⁡|{(h​(x→1),…,h​(x→m)):h∈H}|=2msubscriptΠ𝐻𝑚subscriptsubscript→𝑥1…subscript→𝑥𝑚𝜒conditional-setℎsubscript→𝑥1…ℎsubscript→𝑥𝑚ℎ𝐻superscript2𝑚\\Pi_{H}(m)=\\max_{\\vec{x}_{1},...,\\vec{x}_{m}\\in\\chi}|\\{(h(\\vec{x}_{1}),...,h(\\vec{x}_{m})):h\\in H\\}|=2^{m} .\nFor real-valued functions ℱℱ\\mathcal{F} present in neural networks, one can define VCdim(ℱ)=VCdim({sgn(f):f∈ℱ}VCdim(\\mathcal{F})=VCdim(\\{sgn(f):f\\in\\mathcal{F}\\}, which is achieved by thresholding at zero in the utilization computation. The pseudodimension of ℱℱ\\mathcal{F} or P​d​i​m​(ℱ)𝑃𝑑𝑖𝑚ℱPdim(\\mathcal{F}) has been proven to satisfy V​C​d​i​m​(ℱ)≤P​d​i​m​(ℱ)𝑉𝐶𝑑𝑖𝑚ℱ𝑃𝑑𝑖𝑚ℱVCdim(\\mathcal{F})\\leq Pdim(\\mathcal{F}) .\nFor example, a convolutional computation unit vjsubscript𝑣𝑗v_{j} with the output tensor (C​h​a​n​n​e​l​s,W​i​d​t​h,H​e​i​g​h​t)𝐶ℎ𝑎𝑛𝑛𝑒𝑙𝑠𝑊𝑖𝑑𝑡ℎ𝐻𝑒𝑖𝑔ℎ𝑡(Channels,Width,Height) per input image xi→→subscript𝑥𝑖\\vec{x_{i}} would yield V​C​d​i​m​(ℱ​(vj))=C​h​a​n​n​e​l​s𝑉𝐶𝑑𝑖𝑚ℱsubscript𝑣𝑗𝐶ℎ𝑎𝑛𝑛𝑒𝑙𝑠VCdim(\\mathcal{F}(v_{j}))=Channels after binarizing the output values. The V​C​d​i​m𝑉𝐶𝑑𝑖𝑚VCdim values are used to quantify utilization of each computation unit as documented in Section 3. Our work does not currently leverage the possibility of using lower and upper bounds on V​C​d​i​m​(ℱ)𝑉𝐶𝑑𝑖𝑚ℱVCdim(\\mathcal{F}) for an entire neural network. These bounds have been derived for AI architectures with computation units characterized by constant and known non-linearities (piece-wise constant, piece-wise linear, and piece-wise polynomial ) with respect to the number of layers L𝐿L and parameters W𝑊W. While in practice there is no guarantee that computation units in one architecture are not characterized by a mixture of non-linearity types, it would be possible to verify the theoretical bounds for a combination of L𝐿L and W𝑊W in a variety of existing popular AI architectures. Analytical and Statistical Utilization Definitions:\nGiven a set of training data points activating a computation unit in an AI computation graph, the computation unit will generate unique output states at varying frequencies. Considering that training datasets are formed by sampling and split into train, validation, and test subsets, the utilization value would vary depending on the sampling techniques and subset of samples. Thus, one can define the utilization ηjsubscript𝜂𝑗\\eta_{j} of a computation unit vjsubscript𝑣𝑗v_{j} using analytical or statistical views since the states generated as outputs of a computation unit by evaluating a set of training data points can be interpreted as deterministic states or as a statistical distribution of states. An analytical definition of computation unit utilization ηs​t​a​t​esuperscript𝜂𝑠𝑡𝑎𝑡𝑒\\eta^{state} is directly derived as a ratio of a number of unique tensor-states and a computation unit capacity. One could aim at optimizing a network architecture search (NAS)  such that every computation unit reaches maximum utilization ηs​t​a​t​e=1.0superscript𝜂𝑠𝑡𝑎𝑡𝑒1.0\\eta^{state}=1.0 over all training data points and all predicted labels.\nA statistical definition of computation unit utilization is derived from a tensor-state distribution shape and aims at maximum normalized entropy of the state distribution for each predicted label (entropy-based utilization) ηe​n​t​r​o​p​ysuperscript𝜂𝑒𝑛𝑡𝑟𝑜𝑝𝑦\\eta^{entropy} or at minimum Kullback–Leibler (KL) divergence of the state distribution from a uniform distribution allocated per predicted label ηK​L​D​i​vsuperscript𝜂𝐾𝐿𝐷𝑖𝑣\\eta^{KLDiv}. The use of Entropy and KL divergence  are borrowed from the source coding theorem . Ordering Utilization Values in Class Encodings and AI Model Fingerprints:\nFor image classification AI models, a training dataset consists of one set of input images per output class label. Performing an inference on a set of training images per class label will produce one of the three utilization values per measurement probe (e.g., right after each computation unit of a computation graph). The order of probes can be determined based on the flow of input images through a computation graph since it is deterministic and well-defined during an inference computation. Given a sorted (ordered) list of probes and their utilization values, a utilization-based class encoding is uniquely defined. An AI model predicts multiple class labels, and, therefore, utilization evaluations of the same AI model will consists of multiple class encodings. Although class labels have semantic annotations (i.e., cat or dog), they are typically numerically labeled as well, and, therefore, they can be ordered. Given a sorted (ordered) list of classes by numerical labels, a utilization-based fingerprint of an AI model is well-defined as a matrix of ordered utilization-based class encodings.\n\nReference markers found: [17]\n\nContext windows for each [ref]:\n[ref]17: be fully utilized if all four states were used for predicting output labels. In order to define the utilization of a computation unit mathematically, one can use the parallels drawn by Bajcsy et al. [ref]17 between neural network and communication fields in terms of (a) computation unit maximum representation power and channel capacity in communications and (b) computation unit utilization and\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 17,\n            \"titles\": [\n                \"Explaining Explanations: An Overview of Interpretability of Machine Learning\",\n                \"Detecting AI Trojans Using Meta Neural Analysis\",\n                \"Explainable Artificial Intelligence (XAI): Concepts, Taxonomies, Opportunities and Challenges toward Responsible AI\",\n                \"Explaining Machine Learning Predictions: State-of-the-Art, Challenges, and Opportunities\",\n                \"NAS-bench-101: Towards reproducible neural architecture search\",\n                \"OpenAI Microscope\",\n                \"Predicting the Computational Cost of Deep Learning Models\",\n                \"The Expressive Power of Neural Networks: A View from the Width\",\n                \"Assessing Intelligence in Artificial Neural Networks\",\n                \"Toward a unified framework for debugging concept-based models\",\n                \"A Survey of the Recent Architectures of Deep Convolutional Neural Networks\",\n                \"Modeling Order in Neural Word Embeddings at Scale\",\n                \"Switch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity\",\n                \"Trojans in Artificial Intelligence (TrojAI)\",\n                \"Fine-Pruning: Defending Against Backdooring Attacks on Deep Neural Networks\",\n                \"Zoom in: An introduction to circuits\",\n                \"Feature visualization\",\n                \"Designing trojan detectors in neural networks using interactive simulations\",\n                \"Intelligence and changes in regional cerebral glucose metabolic rate following learning\",\n                \"Toward Transparent AI: A Survey on Interpreting the Inner Structures of Deep Neural Networks\",\n                \"Net2Vec: Quantifying and Explaining how Concepts are Encoded by Filters in Deep Neural Networks\",\n                \"Network Dissection: Quantifying Interpretability of Deep Visual Representations\",\n                \"Concept Whitening for Interpretable Image Recognition\",\n                \"Grad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization\",\n                \"Sanity checks for saliency maps\",\n                \"Understanding Community Structure in Layered Neural Networks\",\n                \"Quantifying Local Specialization in Deep Neural Networks\",\n                \"Clusterability in neural networks\",\n                \"Challenging Common Assumptions in the Unsupervised Learning of Disentangled Representations\",\n                \"A sober look at the unsupervised learning of disentangled representations and their evaluation\",\n                \"The Cityscapes Dataset for Semantic Urban Scene Understanding\",\n                \"Object scene flow for autonomous vehicles\",\n                \"Pexels: Photo and Video Sharing\",\n                \"Complexity of finding maximum regular induced subgraphs with prescribed degree\",\n                \"Torchvision the machine-vision package of torch\",\n                \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n                \"Digraph: An efficient path-based iterative directed graph processing system on multiple gpus\",\n                \"TrojAI code used to construct each round of the TrojAI challenge\",\n                \"Second Order Derivatives for Network Pruning: Optimal Brain Surgeon\",\n                \"Pruning Filters for Efficient ConvNets\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]17 based on the context and research area of AI Model Utilization Measurements For Finding Class Encoding Patterns. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}