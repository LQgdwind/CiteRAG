{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Verification of Neural Network Control Systems using Symbolic Zonotopes and Polynotopes This work has been submitted to the IEEE for possible publication. Copyright may be transferred without notice, after which this version may no longer be accessible.\n\nPaper Abstract: \n\nPaper Section Text:\nThe proliferation of data and access to ever-increasing computational power have fueled a renewed interest in deep neural-networks (NNs). These networks have shown a significant ability to address classification/estimation/control tasks that can hardly be formalized and designed from knowledge-based models. However, despite their impressive ability for solving complex problems, it is well known that NNs can be vulnerable to small perturbations or adversarial attacks  . This lack of robustness (or fragility) represents a major barrier for their application to safety-critical system where safety assurances are of primary importance. For example, in Guidance, Navigation and Control of flight systems, one must ensure that some output/state trajectories remain inside a flight envelope when some inputs explore a given region. The above issues have fostered a large amount of works that analyze the sensitivity to local disturbances of NNs in isolation (open-loop), as well as the satisfaction of pre-/post- safety conditions . Nevertheless, as reported in , reasoning about the safety verification of neural-network control systems (NNCSs), where the NN is used as a feedback controller, still remains a key challenge that requires tractable methods capable of efficiently integrating the heterogeneous components that make up the control loop. This paper focuses on the reachability analysis of NNCSs which, in turn, allows for formal reasoning about the satisfaction of safety properties (reachability of a target set, or the avoidance of non-secure sets of states). A key challenge in NNCSs reachability analysis is to successfully retain the system-controller interplay by preserving (at each time instant) the dependencies between relevant variables. This, in fact, discourages a direct application of off-the-shelf verification tools which, although able to compute accurate output bounds for elements in isolation, return coarse approximations when iteratively concatenated for the analysis of closed-loop systems since most of (if not all) the I/O dependencies are quickly broken/lost during the computations [ref]5  . Furthermore, effective NNCSs verification tools must be able to assess the system state during (relatively) large time intervals. The above issues motivate the development of computationally efficient analysis methods capable of capturing the interaction between the control loop elements while granting a good scalability both in the system dimensions and in the time horizon length. Another relevant factor that should be taken into account is the size of the initial state set under study. Mainly, the performance of open- and closed-loop verification techniques that are based on (locally) abstracting the system non-linearities, deteriorates considerably for large initial sets. A common approach to address this issue, particularly in NNCSs verification problems where the number of dimensions is relatively small, is to recast the initial reachability problem into simpler subproblems that analyze a subset of the initial conditions [ref]5    0 1 2 3. Nonetheless, the design of efficient and scalable partitioning strategies, specially in closed-loop verification schemes, remains also an open problem. Preserving dependencies for NNCS verification has spurred on some recent studies. In 4, the authors abstract the I/O mapping of a ReLU NN controller using a polynomial expression (plus an error interval). The polynomial rule is obtained by regression of I/O samples, whereas a sound error term is derived from solving a mixed-integer program (MIP). In a similar fashion, 5 uses Bernstein polynomials to abstract the NN controller. A theoretical and a sampled-based method is proposed to compute the error term based on the Lipschitz constant of the NN. Although both approaches preserve the system-controller interplay, they are computationally expensive, scaling poorly with the number of NN inputs while requiring to be iteratively repeated for each output. In  a NN with differentiable activation functions is transformed into an equivalent hybrid system built upon Taylor models that retain dependencies. However, this approach is not applicable to ReLU functions and the number of states (resp. modes) of the hybrid automaton scales with the number of neurons (resp. layers). Other approaches preserve system-controller dependencies by formulating the reachable set computation as an optimization problem. The work 6 proposes a semidefinite program for reachability analysis based on the abstraction of the NN non-linearities using quadratic constraints 7. 1 relies on the tool CROWN 8, and preserves system-controller interaction by solving LP-programs. However, dependencies are broken from one sample to the next. In 0, the closed-loop is firstly abstracted as a conjunction of piecewise-linear functions, and then analyzed using ReLU NNs verification tools like 9 0. On the other hand, other works address the reachability problem by chaining different verification tools. In [ref]5, the authors combine a polytopic abstraction of the dynamical system with the tool Sherlock 1, that is used to bound the NN controller outputs. The tool NNV , integrates the non-linear dynamics reachability tool CORA 2 with a star sets abstraction of ReLU NN controllers 3. Besides,  combines validated simulation to soundly approximate the dynamical system with common tools for NN output bounding like DeepPoly 4. In all the above works, dependencies are broken in the switch between the different tools. This latter issue is somehow palliated in , where the authors use second order zonotopes (i.e. zonotopes with generators matrix size n×2​n𝑛2𝑛n\\times 2n) as an interface between system and NN controller analysis tools. Although capable to retain first order dependencies in the system-to-controller (and controller-to-system) set transformations, dependencies in the I/O mapping of the NN controller are broken. Focusing on partitioning strategies, in 5 the gradient of a ReLU NN (open-loop) is used to decide the next input direction to be bisected, whereas in 6 a uniform grid of the initial set is employed. Other works propose a simulation-based splitting strategy. In 2, the bisection is guided by comparing the interval bound of Monte-Carlo samples with a guaranteed Interval Bound Propagation 7 of the initial subsets. Working in a similar fashion, 3 proposes a simulation-guided framework that unifies standard NN output bounding tools. The decision on the bisection order is based on the distance to the simulation samples enclosure. A closed-loop implementation of the latter algorithm is reported in 1. This paper takes a new and original direction based on symbolic zonotopes (s-zonotopes) as a generic tool for the closed-loop verification of discrete-time NN controlled systems. The generators (matrix) representation of s-zonotopes enables to efficiently abstract the input-output mappings of the NN controller and non-linear physical system through (inclusion preserving) affine symbolic expressions. The evolution of the closed-loop system can then be bounded in a propagation-based fashion that benefits from the efficient computation of basic operations granted by s-zonotopes, while preserving system-controller linear dependencies. Besides, the computational complexity of the verification tool can be fixed by limiting (reducing) the number of independent symbols. Simulations show the good performance/computational efficiency trade-off granted by this approach. Furthermore, two extensions are proposed. On the one hand, the use of polynomial symbolic expressions to abstract the input-output mapping of the loop elements is explored. In particular, symbolic polynotope (s-polynotope) structures 8 are used to enclose the NN activation functions graph via the non-convex sets that arise from the polynomial map of interval symbols. Polynomial abstractions enable to reduce the conservatism induced by linear relaxations, at the price of increasing the computation needs. On the other hand, the symbols preservation throughout the control loop is exploited to develop a smart partitioning strategy of the initial conditions set. The proposed algorithm reasons upon the influence of the input symbols in the output set in order to select which dimension to bisect next, and upon the influence of the (independent) error symbols to assess the quality of each over-approximation. The paper is organized as follows. Section II is devoted to some useful preliminaries. Section III introduces the problem statement. Then, Section IV analyzes the closed-loop verification using s-zonotopes. In Section V the use of s-polynotopes is investigated, whereas the input partitioning algorithm is detailed in Section VI. Section VII presents simulation results. Finally, some concluding remarks are provided in Section VIII. The following notations are used along this work. ℝnsuperscriptℝ𝑛\\mathbb{R}^{n}, ℝm×nsuperscriptℝ𝑚𝑛\\mathbb{R}^{m\\times n} and ℕℕ\\mathbb{N} denote the n𝑛n dimension Euclidean space, the m×n𝑚𝑛m\\times n dimensional Euclidean space and the set of non-negative integers, respectively. The notation visubscript𝑣𝑖v_{i} stands for the i𝑖i-th element of vector v𝑣v and M[i,:]subscript𝑀𝑖:M_{[i,:]} (M[:,j]subscript𝑀:𝑗M_{[:,j]}) for the i𝑖i-th row (j𝑗j-th column) of matrix M𝑀M. The 1-norm of the (row) vector v𝑣v is ‖v‖1=|v|​𝟏subscriptnorm𝑣1𝑣1\\|v\\|_{1}=|v|\\mathbf{1}, with |.||.| the elementwise absolute value, and 𝟏1\\mathbf{1} a column vector of ones of appropriate size. d​i​a​g​(v)𝑑𝑖𝑎𝑔𝑣diag(v) returns a square diagonal matrix with the elements of vector v𝑣v in the main diagonal, whereas c​a​r​d​(⋅)𝑐𝑎𝑟𝑑⋅card(\\cdot) gives the cardinal.\n\nReference markers found: [5]\n\nContext windows for each [ref]:\n[ref]5: return coarse approximations when iteratively concatenated for the analysis of closed-loop systems since most of (if not all) the I/O dependencies are quickly broken/lost during the computations [ref]5  . Furthermore, effective NNCSs verification tools must be able to assess the system state during (relatively) large time intervals. The above issues motivate the development of\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 5,\n            \"titles\": [\n                \"NNV: The Neural Network Verification Tool for Deep Neural Networks and Learning-Enabled Cyber-Physical Systems\",\n                \"Intriguing properties of neural networks\",\n                \"Adversarial examples in the physical world\",\n                \"Algorithms for verifying deep neural networks\",\n                \"Arch-comp21 category report: Artificial intelligence and neural network control systems (ainncs) for continuous and hybrid systems plants.\",\n                \"Efficient verification of control systems with neural network controllers\",\n                \"Safety verification of neural network controlled systems\",\n                \"Verification of neural-network control systems by integrating taylor models and zonotopes\",\n                \"Verifying the safety of autonomous systems with neural network controllers\",\n                \"Overt: An algorithm for safety verification of neural network control policies for nonlinear systems\",\n                \"Efficient Reachability Analysis of Closed-Loop Systems with Neural Network Controllers\",\n                \"Reachable Set Estimation for Neural Network Control Systems: A Simulation-Guided Approach\",\n                \"Robustness Analysis of Neural Networks via Efficient Partitioning with Applications in Control Systems\",\n                \"Reachability analysis for neural feedback systems using regressive polynomial rule inference\",\n                \"ReachNN: Reachability Analysis of Neural-Network Controlled Systems\",\n                \"Reach-SDP: Reachability Analysis of Closed-Loop Systems with Neural Network Controllers via Semidefinite Programming\",\n                \"Safety verification and robustness analysis of neural networks via quadratic constraints and semidefinite programming\",\n                \"Efficient Neural Network Robustness Certification with General Activation Functions\",\n                \"Evaluating robustness of neural networks with mixed integer programming\",\n                \"Reluplex: An efficient smt solver for verifying deep neural networks\",\n                \"Output Range Analysis for Deep Neural Networks\",\n                \"An introduction to cora 2015\",\n                \"Verification of Deep Convolutional Neural Networks Using ImageStars\",\n                \"An abstract domain for certifying neural networks\",\n                \"Formal security analysis of neural networks using symbolic intervals\",\n                \"Output Reachable Set Estimation and Verification for Multi-Layer Neural Networks\",\n                \"On the Effectiveness of Interval Bound Propagation for Training Verifiably Robust Models\",\n                \"Functional sets with typed symbols: Mixed zonotopes and polynotopes for hybrid nonlinear reachability and filtering\",\n                \"Introduction to interval analysis\",\n                \"A distributed kalman filter with symbolic zonotopes and unique symbols provider for robust state estimation in cps\",\n                \"Fast and effective robustness certification\",\n                \"A state bounding observer for uncertain non-linear continuous-time systems based on zonotopes\",\n                \"Interval analysis\",\n                \"Zonotopes and kalman observers: Gain optimality under distinct uncertainty paradigms and robust convergence\",\n                \"Theory and computation of disturbance invariant sets for discrete-time linear systems\",\n                \"Generated Reference Title 35 for [ref]5\",\n                \"Generated Reference Title 36 for [ref]5\",\n                \"Generated Reference Title 37 for [ref]5\",\n                \"Generated Reference Title 38 for [ref]5\",\n                \"Generated Reference Title 39 for [ref]5\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]5 based on the context and research area of Verification of Neural Network Control Systems using Symbolic Zonotopes and Polynotopes This work has been submitted to the IEEE for possible publication. Copyright may be transferred without notice, after which this version may no longer be accessible.. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}