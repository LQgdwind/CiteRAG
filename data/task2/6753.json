{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Towards Scene-Text to Scene-Text Translation\n\nPaper Abstract: \n\nPaper Section Text:\nGiven an image of a word in the source language (xs​r​csubscript𝑥𝑠𝑟𝑐x_{src}), our goal is to generate an image of the word in the target language (xt​g​t)x_{tgt}), i.e., perform scene text-to-scene text translation. To this end, we introduce Visual Translation Network (VTNet) – a unified framework that involves a two-stage generation process as illustrated in Figure 3 (a). VTNet is a conditional diffusion-based model that is trained to generate three images in the visual translation process – the background, foreground, and target images. Formally, given the source image xs​r​csubscript𝑥𝑠𝑟𝑐x_{src} and a gray-scale target word image xwsubscript𝑥𝑤x_{w}††We obtain xwsubscript𝑥𝑤x_{w} by recognizing text in the source image using a popular scene-text recognition method [ref]2 and then obtaining the translation using an off-the-shelf translation method  on the recognized text., we aim to learn a conditional noise predictor fθ1subscript𝑓subscript𝜃1f_{\\theta_{1}} to generate the background xb​gsubscript𝑥𝑏𝑔x_{bg} and foreground images xf​gsubscript𝑥𝑓𝑔x_{fg}. Further, we utilize xb​gsubscript𝑥𝑏𝑔x_{bg} and xf​gsubscript𝑥𝑓𝑔x_{fg} to learn a conditional noise predictor fθ2subscript𝑓subscript𝜃2f_{\\theta_{2}} for the generation of the target image xt​g​tsubscript𝑥𝑡𝑔𝑡x_{tgt}. Table 1 describes the major notations used in this paper. We describe VTNet and its training and inference below. Conditional Noise Predictor Network: The conditional noise predictor network fθsubscript𝑓𝜃f_{\\theta} predicts the noise ηtsubscript𝜂𝑡\\eta_{t} added at each timestep in the diffusion process and is conditioned on input image information. As illustrated in Figure 3 (a), VTNet consists of two noise predictors fθ1subscript𝑓subscript𝜃1f_{\\theta_{1}} and fθ2subscript𝑓subscript𝜃2f_{\\theta_{2}}. Each of them takes a word image xtsubscript𝑥𝑡x_{t}, output of the image encoder E𝐸E, and timestep embedding tesubscript𝑡𝑒t_{e} as input. It consists of four D-blocks for down-sampling (Figure 3 (b)), followed by eight FMSA blocks (Figure 3 (c), and four additional D-blocks to perform upsampling of the feature maps. The D-Block consists of a sequence of convolution, Fast Fourier Transform (FFT), inverse Fast Fourier Transform (inverse FFT), and an adaptation of the Squeeze and Excitation (SE) block  which is dependent on timestep information. Our utilization of Fourier-convolutions is motivated by their recent success in generative tasks of image inpainting [ref]47 and image super-resolution [ref]44 which improves perceptual quality and parameter efficiency of the network. The SE block is utilized to selectively emphasize informative features and suppress less informative ones, resulting in improved performance. The FMSA block consists of a multiheaded-self attention layer (MSA)  followed by linear and Fourier operations. In the noise predictor fθ1subscript𝑓subscript𝜃1f_{\\theta_{1}}, we perform cross-attention between the FMSA blocks, inspired by the co-attention mechanism in ViLBERT  to facilitate information transfer from source image xs​r​csubscript𝑥𝑠𝑟𝑐x_{src} to generate foreground image xf​gsubscript𝑥𝑓𝑔x_{fg}.\n\n\n Training:\nImage Encoder: An image encoder E𝐸E encodes information from input images, which is added to each downsampling D-Block in the noise predictor network to conditionally guide the generation process. In VTNet, we use three image encoders: (i) Style Encoder Es​r​csubscript𝐸𝑠𝑟𝑐E_{src} for encoding style of the source image, (ii) Glyph Encoder Ewsubscript𝐸𝑤E_{w} for encoding the glyphs and characters of the target text content, and (iii) Target Image Encoder Ef​bsubscript𝐸𝑓𝑏E_{fb} for encoding the generated foreground and background content, as shown in Figure 3 (a). It utilises four D-Block networks as employed in the noise predictor network. Each image encoder is also appended with two transformer encoder blocks that are used to train the model using CTC loss , to better encode the text content in images.\nAs shown in Figure 3 (a), training is performed in the following two stages: In the stage-1, we aim to a learn conditional noise predictor to generate xb​gsubscript𝑥𝑏𝑔x_{bg} and xf​gsubscript𝑥𝑓𝑔x_{fg} conditioned on the xs​r​csubscript𝑥𝑠𝑟𝑐x_{src} and xwsubscript𝑥𝑤x_{w} image input, respectively. Let T𝑇T be the total diffusion steps, Es​r​csubscript𝐸𝑠𝑟𝑐E_{src} and Ewsubscript𝐸𝑤E_{w} be the image encoders, and fθ1subscript𝑓subscript𝜃1f_{\\theta_{1}} be the conditional noise predictor at stage I. We encode xs​r​csubscript𝑥𝑠𝑟𝑐x_{src} and xwsubscript𝑥𝑤x_{w} as follows: xs​r​ce=Es​r​c​(xs​r​c)subscript𝑥𝑠𝑟subscript𝑐𝑒subscript𝐸𝑠𝑟𝑐subscript𝑥𝑠𝑟𝑐x_{{src}_{e}}=E_{src}(x_{src}) and xwe=Ew​(xw)subscript𝑥subscript𝑤𝑒subscript𝐸𝑤subscript𝑥𝑤x_{w_{e}}=E_{w}(x_{w}). We then sample noise ηt∼𝒩​(𝟎,𝐈)similar-tosubscript𝜂𝑡𝒩0𝐈\\eta_{t}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}) at timestep t∼{0,1,…,T−1}similar-to𝑡01…𝑇1t\\sim\\{0,1,\\ldots,T-1\\}. Further, we optimize the noise predictor in Stage I by taking the gradient step on: where, by setting αt=1−βtsubscript𝛼𝑡1subscript𝛽𝑡\\alpha_{t}=1-\\beta_{t} and αt¯=∏s=1tαs¯subscript𝛼𝑡superscriptsubscriptproduct𝑠1𝑡subscript𝛼𝑠\\bar{\\alpha_{t}}=\\prod_{s=1}^{t}\\alpha_{s} where βtsubscript𝛽𝑡\\beta_{t} is the variance schedule of the diffusion process that determines how much noise is added at each timestep. In the stage-2, we consider Ef​bsubscript𝐸𝑓𝑏E_{fb} as the image encoder for the target image xt​g​tsubscript𝑥𝑡𝑔𝑡x_{tgt}, which is conditioned on the concatenation of the generated background and foreground images (xf​g⊕xb​g)direct-sumsubscript𝑥𝑓𝑔subscript𝑥𝑏𝑔(x_{fg}\\oplus x_{bg}). We consider T𝑇T as the total diffusion steps and fθ2subscript𝑓subscript𝜃2f_{\\theta_{2}} as the conditional noise predictor. We encode (xf​g⊕xb​g)direct-sumsubscript𝑥𝑓𝑔subscript𝑥𝑏𝑔(x_{fg}\\oplus x_{bg}) as xf​be=Ef​b​(xf​g⊕xb​g)subscript𝑥𝑓subscript𝑏𝑒subscript𝐸𝑓𝑏direct-sumsubscript𝑥𝑓𝑔subscript𝑥𝑏𝑔x_{fb_{e}}=E_{fb}(x_{fg}\\oplus x_{bg}). Then we sample noise ηt∼𝒩​(𝟎,𝐈)similar-tosubscript𝜂𝑡𝒩0𝐈\\eta_{t}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}) and timestep t∼{0,1,…,T−1}similar-to𝑡01…𝑇1t\\sim\\{0,1,\\ldots,T-1\\}. Further, we optimize the noise predictor in this Stage by taking the gradient step on: where, Inference. In the inference stage, we use the learned VTNet to generate the target image xt​g​tsubscript𝑥𝑡𝑔𝑡x_{tgt} from sampled Gaussian noise ηTsubscript𝜂𝑇\\eta_{T}, conditioned source image xs​r​csubscript𝑥𝑠𝑟𝑐x_{src}, target word image xwsubscript𝑥𝑤x_{w} inputs as illustrated in Figure 4. Similar to training, we perform inference in two stages: (i)In the first stage, we are given the source image xs​r​csubscript𝑥𝑠𝑟𝑐x_{src} and target word image xwsubscript𝑥𝑤x_{w}, learned conditional noise predictor fθ1subscript𝑓subscript𝜃1f_{\\theta_{1}} and image encoders Es​r​csubscript𝐸𝑠𝑟𝑐E_{src} and Ewsubscript𝐸𝑤E_{w} and we consider T𝑇T steps for the reverse diffusion process. We sample noise ηt∼𝒩​(𝟎,𝐈)similar-tosubscript𝜂𝑡𝒩0𝐈\\eta_{t}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}) and encode xs​r​csubscript𝑥𝑠𝑟𝑐x_{src} and xwsubscript𝑥𝑤x_{w} as xs​r​ce=Es​r​c​(xs​r​c)subscript𝑥𝑠𝑟subscript𝑐𝑒subscript𝐸𝑠𝑟𝑐subscript𝑥𝑠𝑟𝑐x_{{src}_{e}}=E_{src}(x_{src}) and xwe=Ew​(xw)subscript𝑥subscript𝑤𝑒subscript𝐸𝑤subscript𝑥𝑤x_{{w}_{e}}=E_{w}(x_{w}). Starting from timestep t=T−1𝑡𝑇1t=T-1 to t=0𝑡0t=0 we re-compute ηt−1subscript𝜂𝑡1\\eta_{t-1} as follows: These steps are repeated in reverse progression until t=0𝑡0t=0 step where we obtain xf​gsubscript𝑥𝑓𝑔x_{fg} and xb​gsubscript𝑥𝑏𝑔x_{bg} images. (ii) In syage-2, we utilize the concatenation of xf​gsubscript𝑥𝑓𝑔x_{fg} and xb​gsubscript𝑥𝑏𝑔x_{bg} images to conditionally generate the target image xt​g​tsubscript𝑥𝑡𝑔𝑡x_{tgt}. We consider the learned image encoder Ef​bsubscript𝐸𝑓𝑏E_{fb} and conditional noise predictor fθ2subscript𝑓subscript𝜃2f_{\\theta_{2}}, and T𝑇T steps for the reverse diffusion process. We sample noise ηt∼𝒩​(𝟎,𝐈)similar-tosubscript𝜂𝑡𝒩0𝐈\\eta_{t}\\sim\\mathcal{N}(\\mathbf{0},\\mathbf{I}) and obtain xf​be=Ef​b​(xf​g⊕xb​g)subscript𝑥𝑓subscript𝑏𝑒subscript𝐸𝑓𝑏direct-sumsubscript𝑥𝑓𝑔subscript𝑥𝑏𝑔x_{fb_{e}}=E_{fb}(x_{fg}\\oplus x_{bg}). Starting from timestep t=T−1𝑡𝑇1t=T-1 to t=0𝑡0t=0 we re-compute ηt−1subscript𝜂𝑡1\\eta_{t-1} as follows: At the end of this reverse diffusion, we obtain the final target word image xt​g​tsubscript𝑥𝑡𝑔𝑡x_{tgt} in desired language.\n\nReference markers found: [2]\n\nContext windows for each [ref]:\n[ref]2: xs​r​csubscript𝑥𝑠𝑟𝑐x_{src} and a gray-scale target word image xwsubscript𝑥𝑤x_{w}††We obtain xwsubscript𝑥𝑤x_{w} by recognizing text in the source image using a popular scene-text recognition method [ref]2 and then obtaining the translation using an off-the-shelf translation method  on the recognized text., we aim to learn a conditional noise predictor fθ1subscript𝑓subscript𝜃1f_{\\theta_{1}} to\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 2,\n            \"titles\": [\n                \"Neural Machine Translation by Jointly Learning to Align and Translate\",\n                \"Wasserstein generative adversarial networks\",\n                \"Vision Transformer for Fast and Efficient Scene Text Recognition\",\n                \"Large Scale GAN Training for High Fidelity Natural Image Synthesis\",\n                \"Improving Diffusion Models for Inverse Problems using Manifold Constraints\",\n                \"A domain-restricted, rule based, english-hindi machine translation system based on dependency parsing\",\n                \"Diffusion Models Beat GANs on Image Synthesis\",\n                \"Understanding Back-Translation at Scale\",\n                \"Beyond English-Centric Multilingual Machine Translation\",\n                \"Convolutional sequence to sequence learning\",\n                \"Understanding the difficulty of training deep feedforward neural networks\",\n                \"Generative Adversarial Networks\",\n                \"인공지능 기반 공격 그래프 생성\",\n                \"Connectionist temporal classification: labelling unsegmented sequence data with recurrent neural networks\",\n                \"Improved training of wasserstein gans\",\n                \"GANs Trained by a Two Time-Scale Update Rule Converge to a Local Nash Equilibrium\",\n                \"Imagen Video: High Definition Video Generation with Diffusion Models\",\n                \"Denoising Diffusion Probabilistic Models\",\n                \"Squeeze-and-Excitation Networks\",\n                \"Rule-based machine translation from english to finnish\",\n                \"Image-to-Image Translation with Conditional Adversarial Networks\",\n                \"Direct speech-to-speech translation with a sequence-to-sequence model\",\n                \"Transformer-based direct speech-to-speech translation with transcoder\",\n                \"Icdar 2013 robust reading competition\",\n                \"Alias-Free Generative Adversarial Networks\",\n                \"Auto-encoding variational bayes\",\n                \"Diffwave: A versatile diffusion model for audio synthesis\",\n                \"TextStyleBrush: Transfer of Text Aesthetics from a Single Example\",\n                \"Janus-iii: Speech-to-speech translation in multiple languages\",\n                \"Direct Speech-to-Speech Translation With Discrete Units\",\n                \"RewriteNet: Reliable Scene Text Editing with Implicit Decomposition of Text Contents and Styles\",\n                \"Decoupled Weight Decay Regularization\",\n                \"DPM-Solver++: Fast Solver for Guided Sampling of Diffusion Probabilistic Models\",\n                \"Vilbert: Pretraining task-agnostic visiolinguistic representations for vision-and-language tasks\",\n                \"Benchmarking Scene Text Recognition in Devanagari, Telugu and Malayalam\",\n                \"The atr multilingual speech-to-speech translation system\",\n                \"Point-e: A system for generating 3d point clouds from complex prompts\",\n                \"Apertium-fin-eng–rule-based shallow machine translation for wmt 2019 shared task\",\n                \"Exploring Stroke-Level Modifications for Scene Text Editing\",\n                \"STEFANN: Scene Text Editor using Font Adaptive Neural Network\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]2 based on the context and research area of Towards Scene-Text to Scene-Text Translation. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}