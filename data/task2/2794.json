{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Structured Prediction in NLP - A survey\n\nPaper Abstract: \n\nPaper Section Text:\nEnergy based approaches rely on the principle that there is an energy function which assign values to each output 𝐲𝐲\\mathbf{y} given an input 𝐱𝐱\\mathbf{x} such that the most compatible 𝐲𝐲\\mathbf{y} has the minimum energy. Additive nature of energy makes it straightforward to incorporate domain knowledge and hard constraints in the model. Probability based approaches are a subset where probabilities can be thought as normalised energy. Most of the previous approaches assumed a particular graphical models for energy E𝐱(.)E_{\\mathbf{x}}(.) which results in an excessively strict inductive bias. Structured prediction energy networks (SPENs) was introduced in [ref]8 as the first framework for structured prediction in which energy is defined using neural networks over possible outputs and gradient based approaches for energy minimization is used for inference. SPENs were found to be very well suited to multi-label classification problems in the NLP domain.\nThe neural network consist of two arbitrary neural network F​(𝐱)𝐹𝐱F(\\mathbf{x}) (feature network) and E​(F​(𝐱),𝐲¯)𝐸𝐹𝐱¯𝐲E(F(\\mathbf{x}),\\mathbf{\\bar{y}}) (energy network). Energy network is sum of two terms, E𝐱​(𝐲¯)=E𝐱l​o​c​a​l​(𝐲¯)+E𝐱g​l​o​b​a​l​(𝐲¯)subscript𝐸𝐱¯𝐲superscriptsubscript𝐸𝐱𝑙𝑜𝑐𝑎𝑙¯𝐲superscriptsubscript𝐸𝐱𝑔𝑙𝑜𝑏𝑎𝑙¯𝐲E_{\\mathbf{x}}(\\mathbf{\\bar{y}})=E_{\\mathbf{x}}^{local}(\\mathbf{\\bar{y}})+E_{\\mathbf{x}}^{global}(\\mathbf{\\bar{y}}) where The SSVM (structured support vector machine) technique is used for training and the loss is :-\n\n Where Δ​(𝐲𝐢,𝐲)Δsubscript𝐲𝐢𝐲\\Delta(\\mathbf{y_{i}},\\mathbf{y}) is a error function between prediction and ground truth label and [.]+=max(0,.)[.]_{+}=\\max(0,.). Sub-gradient computation requires loss-augmented inference: 𝐲𝐩=arg⁡min𝐲⁡(−Δ​(𝐲𝐢,𝐲)+E𝐱𝐢​(𝐲))subscript𝐲𝐩subscript𝐲Δsubscript𝐲𝐢𝐲subscript𝐸subscript𝐱𝐢𝐲\\mathbf{y_{p}}=\\arg\\min_{\\mathbf{y}}(-\\Delta(\\mathbf{y_{i}},\\mathbf{y})+E_{\\mathbf{x_{i}}}(\\mathbf{y})) for every training example.\nSPENs are more expressive and scalable while being less vulnerable to overfitting and performing competitively to previous energy-based approaches.\nLike most energy networks, the inference involves optimization of E𝐱​(𝐲)subscript𝐸𝐱𝐲E_{\\mathbf{x}}(\\mathbf{y}) w.r.t 𝐲𝐲\\mathbf{y} which limits the practical use of model to an extent. Also, non-convexity of E𝐱(.)E_{\\mathbf{x}}(.) or relaxation used to get 𝐲¯¯𝐲\\mathbf{\\bar{y}} from 𝐲𝐲\\mathbf{y} can affect the model performance and convergence. Some of these can be tackled using techniques like inference network  and Input Convex Neural Networks [ref]10. Deep value networks(DVN), introduced in , are similar to SPENs but are much easier to train and works even when Δ​(𝐲,𝐲∗)Δ𝐲superscript𝐲\\Delta(\\mathbf{y},\\mathbf{y^{*}}) is non-continuous and require no convexity constraints.\nThe key idea is that the loss function in every structured prediction problem can be used to define a quantitative value for a configuration as v​(𝐱,𝐲)≈−Δ​(𝐲,𝐲∗)𝑣𝐱𝐲Δ𝐲superscript𝐲v(\\mathbf{x},\\mathbf{y})\\approx-\\Delta(\\mathbf{y},\\mathbf{y^{*}}). The deep network will model v(.,.)v(.,.) and hence learn to mimic the loss function. Instead of using max-margin surrogate objective (SSVM) [ref]8 or other complex approaches, this method just do a simple regression during training and has better performance than [ref]8. Training data ((𝐱,𝐲,v​(𝐱,𝐲))𝐱𝐲𝑣𝐱𝐲(\\mathbf{x},\\mathbf{y},v(\\mathbf{x},\\mathbf{y})) tuples) can be generated via random sampling, generating adversarial tuple, or samples generated during train-time inference. Therefore it needs lesser number of (𝐱,𝐲∗)𝐱superscript𝐲(\\mathbf{x},\\mathbf{y^{*}}) ground truth pairs for training. Gradient based inference (deep dreaming) is found to iteratively refine prediction. SPEN objective (Eq. (1)) optimisation requires loss augmented inference which may fail to discover margin violations if exact energy minimisation is intractable. This can be tackled using End-to-End learning for SPENs, introduced in [ref]12 where the energy function is discriminatively trained by back-propagating\nthrough gradient-based prediction. These are more accurate and allows non-convex energy. The idea is not to do exact energy minimization and instead assume a particular approximate minimisation algorithm and optimize performance of this algorithm.\nSuppose we chose T𝑇T step gradient descent as our algorithm for minimization where T𝑇T is some hyper-parameter. Then, the model’s output is 𝐲𝐓subscript𝐲𝐓\\mathbf{y_{T}} given by, The energy function is defined identically to the original SPEN paper. However, energy funciton must be twice sub-differentiable and it is not straightforward to implement this model using standard learning libraries. The model loss can be defined as, L=1T​∑t=1Twt​Δ​(𝐲𝐭,𝐲∗)𝐿1𝑇superscriptsubscript𝑡1𝑇subscript𝑤𝑡Δsubscript𝐲𝐭superscript𝐲L=\\frac{1}{T}\\sum_{t=1}^{T}w_{t}\\Delta(\\mathbf{y_{t}},\\mathbf{y^{*}}) with wt=1T−t+1subscript𝑤𝑡1𝑇𝑡1w_{t}=\\frac{1}{T-t+1}.\nUnlike in DVNs, here explicit energy function provides interpretability. Another benefit is that the model outputs inference procedure along with the energy function. The inference procedure has fixed T𝑇T meaning that the inference time complexity is independent of 𝐱𝐱\\mathbf{x}.\nAlthough it is worth noting that the learned energy may be such that the energy minima doesn’t actually represents the best output as our model is learning just to optimise the inference procedure which may not be converging to minima. The approaches used till now for training SPENs were supervised and required labeled data which are expensive to collect in many problems, so we are now exploring the space of semi-supervised learning where we use domain knowledge in form of reward functions and ranking based supervision.\nThe first approach introduced in  is to rank every pair of consecutive candidates obtained from training time gradient-descent inference on 𝐲𝐲\\mathbf{y}; and update energy network parameters by optimising an objective function if the energy values are not consistent with domain knowledge based ranking.\nIn the above approach we collect training pairs from gradient descent based inference on energy functions, but it has several problems such as not able to get relevant pairwise rank violations, not reaching to a region of high reward or if we have plateaus in our energy functions. To overcome these issues,  introduced a new approach where for each example we start with a gradient descent inference output, and then use a randomized search procedure for iteratively selecting a random output variable, if the reward increases more than the margin we return the new sample or else we begin sampling again. Graph Structured Prediction\nEnergy Networks (GSPEN)  was introduced as a combination of classical structured prediction models and SPENs to score an\nentire set of predictions jointly which allows to both model explicit local and implicit higher-order correlations while maintaining tractability of inference. Inference in GSPENs is a maximization of a generally non-concave function with respect to structural constraints which is an approach inspired by . GSPENs use Frank-Wolfe Inference as its objectives\nare non-linear\nwhile the constraints are linear and use Structured Entropic Mirror Descent for optimization, an approach similar to SPEN optimization with some additional entropy-based constraints.\nGSPENs are found to outperform SPENs and other baselines on multilabel classification and named entity recognition.\n\nReference markers found: [8]\n\nContext windows for each [ref]:\n[ref]8: assumed a particular graphical models for energy E𝐱(.)E_{\\mathbf{x}}(.) which results in an excessively strict inductive bias. Structured prediction energy networks (SPENs) was introduced in [ref]8 as the first framework for structured prediction in which energy is defined using neural networks over possible outputs and gradient based approaches for energy minimization is used for\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 8,\n            \"titles\": [\n                \"Structured Prediction Energy Networks\",\n                \"“An introduction to hidden markov models\",\n                \"An introduction to hidden markov models\",\n                \"The viterbi algorithm\",\n                \"Maximum entropy markov models for information extraction and segmentation\",\n                \"Conditional random fields: Probabilistic models for segmenting and labeling sequence data\",\n                \"An introduction to conditional random fields\",\n                \"Generalizing with perceptrons in the case of structured phase- and pattern-spaces\",\n                \"Structured variable selection in support vector machines\",\n                \"Learning approximate inference networks for structured prediction\",\n                \"Input Invex Neural Network\",\n                \"Deep value networks learn to evaluate and iteratively refine structured outputs\",\n                \"End-to-End Learning for Structured Prediction Energy Networks\",\n                \"Training structured prediction energy networks with indirect supervision\",\n                \"Search-Guided, Lightly-Supervised Training of Structured Prediction Energy Networks\",\n                \"Graph Structured Prediction Energy Networks\",\n                \"Deep Structured Prediction with Nonlinear Output Transformations\",\n                \"Structured Attention Networks\",\n                \"Neural Architectures for Named Entity Recognition\",\n                \"Natural language processing (almost) from scratch\",\n                \"Structural attention network for graph\",\n                \"Graph classification using structural attention\",\n                \"Improved Semantic Representations From Tree-Structured Long Short-Term Memory Networks\",\n                \"Recursive lstm tree representation for arc-standard transition-baseddependency parsing\",\n                \"Tree-stack LSTM in transition based dependency parsing\",\n                \"An enhanced tree-lstm architecture for sentence semantic modeling using typed dependencies\",\n                \"Improving Tree-LSTM with Tree Attention\",\n                \"Investigating dynamic routing in tree-structured LSTM for sentiment analysis\",\n                \"Long short-term memory\",\n                \"On the properties of neural machine translation: Encoder-decoder approaches\",\n                \"A neural network model for part-of-speech tagging of social media texts\",\n                \"Named entity recognition with bidirectional lstm-cnns\",\n                \"Harnessing Deep Neural Networks with Logic Rules\",\n                \"Bidirectional LSTM-CRF Models for Sequence Tagging\",\n                \"End-to-end Sequence Labeling via Bi-directional LSTM-CNNs-CRF\",\n                \"Dialogue Act Sequence Labeling using Hierarchical encoder with CRF\",\n                \"Efficient estimation of word representations in vector space\",\n                \"GloVe: Global vectors for word representation\",\n                \"Semantic structure-based word embedding by incorporating concept convergence and word divergence\",\n                \"Deep contextualized word representations\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]8 based on the context and research area of Structured Prediction in NLP - A survey. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}