{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Dataset Distillation Meets Provable Subset Selection\n\nPaper Abstract: \n\nPaper Section Text:\nSystem details. Our algorithms were implemented in Python 3.9 [ref]51 using Numpy [ref]16, Scikit-Learn , and\nPytorch . Tests were performed on NVIDIA DGX A100 servers with 8 NVIDIA A100 GPUs each, fast InfiniBand interconnect, and supporting infrastructure. Neural network and Datasets. Throughout our experiments, we used the ConvNet network  for both training and evaluating synthetic dataset. This network is comprised of three 3×3333\\times 3 convolution layers, each followed by 2×2222\\times 2 average pooling and instance normalization. The hidden embedding size is set to 128128128. As for the datasets, we have used MNIST , Fashion-MNIST , SVHN , CIFAR10 [ref]23 and CIFAR100 [ref]23. Kernel ridge regression\nIn what follows, we deploy both Algorithm 1 and Algorithm 2 in the context of boosting the results of KRRs for RFAD . To ensure a fair comparison, we used the same setting of , i.e., we used the regularized Zero Component Analysis (ZCA) preprocessing. As seen from Table 1, our algorithms boosted the performance of RFAD in terms of KRR test accuracy where in this experiment, across the whole table, our algorithms ensured a higher accuracy, furthermore, in some cases our boosting methodology achieves almost a 5%percent55\\% accuracy improvement (see SVHN). \n\n\n\n\n\nNTK-based\nNNLMDTs\n\n\nImg/Cls\nKIP\nRFAD\nRFAD∗superscriptRFAD∗\\text{RFAD}^{\\ast}\nDC\nDC∗\n\nMNIST\n111\n95.2±0.2plus-or-minus95.20.295.2\\pm 0.2\n96.7±0.2plus-or-minus96.70.296.7\\pm 0.2\n97.21±0.2plus-or-minus97.210.2\\mathbf{97.21\\pm 0.2}\n91.7±0.5plus-or-minus91.70.591.7\\pm 0.5\n92.01±0.4¯¯plus-or-minus92.010.4\\underline{92.01\\pm 0.4}\n\n101010\n98.4±0.0plus-or-minus98.40.098.4\\pm 0.0\n99.0±0.1plus-or-minus99.00.199.0\\pm 0.1\n99.14±0.0plus-or-minus99.140.0\\mathbf{99.14\\pm 0.0}\n97.4±0.2plus-or-minus97.40.297.4\\pm 0.2\n97.83±0.15¯¯plus-or-minus97.830.15\\underline{97.83\\pm 0.15}\n\n505050\n99.1±0.0plus-or-minus99.10.099.1\\pm 0.0\n99.1±0.0plus-or-minus99.10.099.1\\pm 0.0\n99.26±0.0plus-or-minus99.260.0\\mathbf{99.26\\pm 0.0}\n98.8±0.1plus-or-minus98.80.198.8\\pm 0.1\n98.89±0.1¯¯plus-or-minus98.890.1\\underline{98.89\\pm 0.1}\n\nFashion-MNIST\n111\n78.9±0.2plus-or-minus78.90.278.9\\pm 0.2\n81.6±0.6plus-or-minus81.60.681.6\\pm 0.6\n83.51±0.4plus-or-minus83.510.4\\mathbf{83.51\\pm 0.4}\n70.5±0.6¯¯plus-or-minus70.50.6\\underline{70.5\\pm 0.6}\n70.43±0.64plus-or-minus70.430.6470.43\\pm 0.64\n\n101010\n87.6±0.1plus-or-minus87.60.187.6\\pm 0.1\n90.0±0.1plus-or-minus90.00.1{90.0\\pm 0.1}\n90.64±0.1plus-or-minus90.640.1\\mathbf{90.64\\pm 0.1}\n82.3±0.4¯¯plus-or-minus82.30.4\\underline{82.3\\pm 0.4}\n82.23±0.48plus-or-minus82.230.4882.23\\pm 0.48\n\n505050\n90.0±0.1plus-or-minus90.00.190.0\\pm 0.1\n91.3±0.1plus-or-minus91.30.1{91.3\\pm 0.1}\n91.7±0.1plus-or-minus91.70.1\\mathbf{91.7\\pm 0.1}\n83.6±0.4plus-or-minus83.60.483.6\\pm 0.4\n85.65±0.25¯¯plus-or-minus85.650.25\\underline{85.65\\pm 0.25}\n\nSVHN\n111\n48.1±0.7plus-or-minus48.10.748.1\\pm 0.7\n51.4±1.3plus-or-minus51.41.351.4\\pm 1.3\n56.96±0.9plus-or-minus56.960.9\\mathbf{56.96\\pm 0.9}\n31.2±1.4¯¯plus-or-minus31.21.4\\underline{31.2\\pm 1.4}\n28.81±1.31plus-or-minus28.811.3128.81\\pm 1.31\n\n101010\n75.8±0.1plus-or-minus75.80.175.8\\pm 0.1\n77.2±0.3plus-or-minus77.20.377.2\\pm 0.3\n78.59±0.2plus-or-minus78.590.2\\mathbf{78.59\\pm 0.2}\n76.1±0.6plus-or-minus76.10.676.1\\pm 0.6\n77.14±0.72¯¯plus-or-minus77.140.72\\underline{77.14\\pm 0.72}\n\n505050\n81.3±0.2plus-or-minus81.30.281.3\\pm 0.2\n81.8±0.2plus-or-minus81.80.281.8\\pm 0.2\n82.48±0.2plus-or-minus82.480.2\\mathbf{82.48\\pm 0.2}\n82.3±0.3¯¯plus-or-minus82.30.3\\underline{82.3\\pm 0.3}\n81.15±0.3plus-or-minus81.150.381.15\\pm 0.3\n\nCIFAR10\n111\n59.1±0.4plus-or-minus59.10.459.1\\pm 0.4\n61.1±0.7plus-or-minus61.10.761.1\\pm 0.7\n64.42±0.4plus-or-minus64.420.4\\mathbf{64.42\\pm 0.4}\n28.3±0.5¯¯plus-or-minus28.30.5\\underline{28.3\\pm 0.5}\n28.13±0.54plus-or-minus28.130.5428.13\\pm 0.54\n\n101010\n67.0±0.4plus-or-minus67.00.467.0\\pm 0.4\n73.1±0.1plus-or-minus73.10.173.1\\pm 0.1\n74.29±0.2plus-or-minus74.290.2\\mathbf{74.29\\pm 0.2}\n44.9±0.5plus-or-minus44.90.544.9\\pm 0.5\n46.41±0.69¯¯plus-or-minus46.410.69\\underline{46.41\\pm 0.69}\n\n505050\n71.7±0.2plus-or-minus71.70.271.7\\pm 0.2\n76.1±0.3plus-or-minus76.10.376.1\\pm 0.3\n77.01±0.2plus-or-minus77.010.2\\mathbf{77.01\\pm 0.2}\n53.9±0.5¯¯plus-or-minus53.90.5\\underline{53.9\\pm 0.5}\n53.4±0.5plus-or-minus53.40.553.4\\pm 0.5\n\nCIFAR100\n111\n31.8±0.3plus-or-minus31.80.331.8\\pm 0.3\n36.0±0.4plus-or-minus36.00.436.0\\pm 0.4\n38.49±0.2plus-or-minus38.490.2\\mathbf{38.49\\pm 0.2}\n12.8±0.3plus-or-minus12.80.312.8\\pm 0.3\n12.81±0.34¯¯plus-or-minus12.810.34\\underline{12.81\\pm 0.34}\n\n101010\n46.0±0.2plus-or-minus46.00.2\\mathbf{46.0\\pm 0.2}\n44.9±0.2plus-or-minus44.90.244.9\\pm 0.2\n45.82±0.1plus-or-minus45.820.1{45.82\\pm 0.1}\n25.2±0.3plus-or-minus25.20.325.2\\pm 0.3\n26.5±0.34¯¯plus-or-minus26.50.34\\underline{26.5\\pm 0.34}\n\n Neural network training. We have adopted Algorithms 1 and 2 to boost the performance of a distillation technique that belongs to the NNLMDTs family, namely (DC) . Similarly to before, to ensure fairness across the board, we have adopted here the same settings of  where we modified the implementation  to include our smart initialization (Algorithm 1) and our greedy sampling (Algorithm 2), and we report the average results over 555 trials. In addition, in this experiment, we used lightweight coresets for our initialization technique, while ϕitalic-ϕ\\phi function was set to be the cross-entropy loss of the network that is being trained during the distillation process of the DC method. For most of the datasets, we were able to boost the performance of the DC technique using our algorithms, while in the rest, we got comparable results. Boosting the results of DM. In this experiment, we have tested the quality of our initialization technique against the K𝐾K-center initialization technique, where K𝐾K denotes the number of images taken from each class. We evaluated the quality of such techniques on the DM method . To this end, we ran the DM method 101010 times, each with a different number of iterations from the set {2000​i}i=110superscriptsubscript2000𝑖𝑖110\\left\\{2000i\\right\\}_{i=1}^{10}. Figure 3 shows that our initialization technique is comparable to the K𝐾K-center initialization technique for the case of having K=1𝐾1K=1, while for the case of K=10𝐾10K=10, the advantage of choosing our initialization technique is more clear. As for the case of K=50𝐾50K=50, our method is far superior to the K𝐾K-center initialization techniques.\n\nReference markers found: [51]\n\nContext windows for each [ref]:\n[ref]51: System details. Our algorithms were implemented in Python 3.9 [ref]51 using Numpy [ref]16, Scikit-Learn , and\nPytorch . Tests were performed on NVIDIA DGX A100 servers with 8 NVIDIA A100 GPUs each, fast InfiniBand interconnect, and supporting infrastructure.\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 51,\n            \"titles\": [\n                \"Dataset Distillation\",\n                \"Scalable k-means clustering via lightweight coresets\",\n                \"One-shot coresets: The case of k-clustering\",\n                \"Optimal core-sets for balls\",\n                \"Distributed k𝑘k-means and k𝑘k-median clustering on general topologies\",\n                \"Monotone funktionen, stieltjessche integrale und harmonische analyse\",\n                \"New Frameworks for Offline and Streaming Coreset Constructions\",\n                \"Coresets for Clustering with Missing Values\",\n                \"Coresets for ordered weighted clustering\",\n                \"Dataset Distillation by Matching Training Trajectories\",\n                \"DC-BENCH: Dataset Condensation Benchmark\",\n                \"On Coresets for Regularized Loss Minimization\",\n                \"The mnist database of handwritten digit images for machine learning research\",\n                \"Introduction to core-sets: an updated survey\",\n                \"Deep Learning\",\n                \"Array Programming with NumPy\",\n                \"Neural Tangent Kernel: Convergence and Generalization in Neural Networks\",\n                \"Introduction to coresets: Accurate coresets\",\n                \"Sets Clustering\",\n                \"Anytime motion planning using the rrt*\",\n                \"Grad-Match: Gradient Matching based Data Subset Selection for Efficient Deep Model Training\",\n                \"Glister: Generalization based Data Subset Selection for Efficient and Robust Learning\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Deep Neural Networks as Gaussian Processes\",\n                \"Efficient dataset distillation using random feature approximation\",\n                \"A unified approach to coreset learning\",\n                \"Fast and Accurate Least-Mean-Squares Solvers\",\n                \"Fast and accurate least-mean-squares solvers for high dimensional data\",\n                \"Coresets for the average case error for finite query sets\",\n                \"AutoCoreset: An Automatic Practical Coreset Construction Framework\",\n                \"Coresets for data discretization and sine wave fitting\",\n                \"Coresets for data-efficient training of machine learning models\",\n                \"Data-Independent Structured Pruning of Neural Networks via Coresets\",\n                \"Reading digits in natural images with unsupervised feature learning\",\n                \"Dataset Meta-Learning from Kernel Ridge-Regression\",\n                \"Dataset Distillation with Infinitely Wide Convolutional Networks\",\n                \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n                \"Deep learning on a data diet: Finding important examples early in training\",\n                \"Scikit-learn: Machine learning in Python\",\n                \"Random features for large-scale kernel machines\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]51 based on the context and research area of Dataset Distillation Meets Provable Subset Selection. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}