{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Monte Carlo Tree Search based Variable Selection for High Dimensional Bayesian Optimization\n\nPaper Abstract: \n\nPaper Section Text:\nWe use Hartmann (d=6ùëë6d=6) and Levy (d=10ùëë10d=10) as the synthetic benchmark functions, and extend them to high dimensions by adding unrelated variables as¬†  . For example, Hartmann666_300300300 has the dimension D=300ùê∑300D=300, and is generated by appending 294294294 unrelated dimensions to Hartmann. The variables affecting the value of fùëìf are called valid variables. Effectiveness of Variable Selection. Dropout¬† is the previous variable selection method which randomly selects dùëëd variables in each iteration, while our proposed MCTS-VS applies MCTS to automatically select important variables. We compare them against vanilla BO [ref]32 without variable selection. The first two subfigures in Figure¬†1 show that Dropout-BO and MCTS-VS-BO are better than vanilla BO, implying the effectiveness of variable selection. We can also see that MCTS-VS-BO performs the best, implying the superiority of MCTS-based variable selection over random selection. We also equip MCTS-VS and Dropout with the advanced BO algorithm TuRBO¬†, resulting in MCTS-VS-TuRBO and Dropout-TuRBO. The last two subfigures in Figure¬†1 show the similar results except that MCTS-VS-TuRBO needs more evaluations to be better than Dropout-TuRBO. This is because TuRBO costs more evaluations than BO on the same selected variables, and thus needs more evaluations to generate sufficient samples for an accurate estimation of the variable score in Eq.¬†(2). Comparison with State-of-The-Art Methods. We compare MCTS-VS with the state-of-the-art methods, including TuRBO¬†, LA-MCTS-TuRBO¬†, SAASBO¬†[ref]9, HeSBO¬†, ALEBO¬† and CMA-ES¬†[ref]14. TuRBO fits a collection of local models to optimize in the trust regions for overcoming the homogeneity of the global model and over-exploration. LA-MCTS-TuRBO applies MCTS to partition the search space and uses TuRBO to optimize in a small sub-region. SAASBO uses sparsity-inducing prior to select variables implicitly. HeSBO and ALEBO are state-of-the-art embedding methods. CMA-ES is a popular evolutionary algorithm. We also implement VAE-BO by combining VAE¬† with vanilla BO directly, as a baseline of learning-based embedding. For MCTS-VS, we implement the two versions of MCTS-VS-BO and MCTS-VS-TuRBO, i.e., MCTS-VS equipped with vanilla BO and TuRBO. As shown in Figure¬†2, MCTS-VS can achieve the best performance except on Levy101010_100100100, where it is a little worse than TuRBO. For low-dimensional functions (e.g., D=100ùê∑100D=100 for Levy101010_100100100), TuRBO can adjust the trust region quickly while MCTS-VS needs samples to estimate the variable score. But as the dimension increases, the search space increases exponentially and it becomes difficult for TuRBO to adjust the trust region; while the number of variables only increases linearly, making MCTS-VS more scalable. SAASBO has similar performance to MCTS-VS due to the advantage of sparsity-inducing prior. HeSBO is not stable, which has a moderate performance on Hartmann but a relatively good performance on Levy. Note that we only run SAASBO and ALEBO for 200200200 evaluations on Hartmann functions because it has already taken more than hours to finish one iteration when the number of samples is large. More details about runtime are shown in Table¬†1. VAE-BO has the worst performance, suggesting that the learning algorithm in high-dimensional BO needs to be designed carefully. We also conduct experiments on extremely low and high dimensional variants of Hartmann (i.e., Hartmann666_100100100 and Hartmann666_100010001000), showing that MCTS-VS still performs well, and perform the significance test by running each method more times. Please see Appendix¬†E. Next, we compare the practical running overheads of these methods. We run each method for 100100100 evaluations independently using 303030 different random seeds, and calculate the average wall clock time. The results are shown in Table¬†1. As expected, when using variable selection (i.e., Dropout and MCTS-VS), the time is less than that of Vanilla BO or TuRBO, because we only optimize a subset of variables. MCTS-VS is a little slower than Dropout, which is because MCTS-VS needs to build the search tree and calculate the variable score, while Dropout only randomly selects variables. MCTS-VS is much faster than LA-MCTS-TuRBO, showing the advantage of partitioning the variables to partitioning the search space. SAASBO optimizes all variables instead of only a subset of variables and uses No-U-Turn sampler (NUTS) to inference, consuming √ó500‚Äã¬†‚Äì√ó1000absent500¬†‚Äì1000\\times 500\\text{ --}\\times 1000 time. HeSBO and ALEBO consume √ó10‚Äã¬†‚Äì√ó500absent10¬†‚Äì500\\times 10\\text{ --}\\times 500 time compared with the variable selection methods. CMA-ES is very fast because it does not need to fit a GP model or optimize an acquisition function. The reasons for the small running overhead of MCTS-VS can be summarized as follows: 1)¬†it only optimizes a selected subset of variables; 2)¬†the depth of the search tree is shallow, i.e., O‚Äã(log‚Å°D)ùëÇùê∑O(\\log D) in expectation and less than Dùê∑D in the worse case; 3)¬†the variable score vector in Eq.¬†(2) is easy to calculate for bifurcating a tree node. Why MCTS-VS Can Perform Well. The theoretical results have suggested that a good variable selection method should select as important variables as possible. Thus, we compare the quality of the variables selected by MCTS-VS and Dropout (i.e., random selection), measured by the recall dt‚àó/dsubscriptsuperscriptùëëùë°ùëëd^{*}_{t}/d, where dùëëd is the number of valid variables, and dt‚àósubscriptsuperscriptùëëùë°d^{*}_{t} is the number of valid variables selected at iteration tùë°t. Dropout randomly selects dùëëd variables at each iteration, and thus, the recall is d/Dùëëùê∑d/D in expectation. For MCTS-VS, we run MCTS-VS-BO for 600600600 evaluations on five different random seeds, and calculate the average recall. As shown in Table¬†2, the average recall of MCTS-VS is much larger than that of Dropout, implying that MCTS-VS can select better variables than random selection, and thus achieve a good performance as shown before. Meanwhile, the recall between 0.350.350.35 and 0.4330.4330.433 of MCTS-VS also implies that the variable selection method could be further improved.\n\nReference markers found: [32]\n\nContext windows for each [ref]:\n[ref]32: selection method which randomly selects dùëëd variables in each iteration, while our proposed MCTS-VS applies MCTS to automatically select important variables. We compare them against vanilla BO [ref]32 without variable selection. The first two subfigures in Figure¬†1 show that Dropout-BO and MCTS-VS-BO are better than vanilla BO, implying the effectiveness of variable selection. We can also\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 32,\n            \"titles\": [\n                \"Computationally Efficient High-Dimensional Bayesian Optimization via Variable Selection\",\n                \"Finite-time analysis of the multiarmed bandit problem\",\n                \"A survey on high-dimensional Gaussian process modeling with application to Bayesian optimization\",\n                \"A warped kernel improving robustness in Bayesian optimization via random embeddings\",\n                \"On the choice of the low-dimensional domain for global optimization via random embeddings\",\n                \"A survey of Monte Carlo tree search methods\",\n                \"Bayesian optimization for learning gaits under uncertainty\",\n                \"NAS-Bench-201: Extending the Scope of Reproducible Neural Architecture Search\",\n                \"TransNAS-Bench-101: Improving Transferability and Generalizability of Cross-Task Neural Architecture Search\",\n                \"High-Dimensional Bayesian Optimization with Sparse Axis-Aligned Subspaces\",\n                \"Scalable Global Optimization via Local Bayesian Optimization\",\n                \"A tutorial on Bayesian optimization\",\n                \"Automatic Chemical Design Using a Data-Driven Continuous Representation of Molecules\",\n                \"High-Dimensional Bayesian Optimization via Tree-Structured Additive Models\",\n                \"The CMA evolution strategy: A tutorial\",\n                \"Decentralized High-Dimensional Bayesian Optimization with Factor Graphs\",\n                \"Efficient global optimization of expensive black-box functions\",\n                \"High Dimensional Bayesian Optimisation and Bandits via Additive Models\",\n                \"Auto-encoding variational Bayes\",\n                \"A new method of locating the maximum point of an arbitrary multipeak curve in the presence of noise\",\n                \"Re-Examining Linear Embeddings for High-Dimensional Bayesian Optimization\",\n                \"High dimensional Bayesian optimization using dropout\",\n                \"Structured variationally auto-encoded optimization\",\n                \"Bayesian optimization in high-dimensional spaces: A brief survey\",\n                \"A comparison of three methods for selecting values of input variables in the analysis of output from a computer code\",\n                \"NAS-Bench-ASR: Reproducible neural architecture search for speech recognition\",\n                \"Efficient high dimensional Bayesian optimization with additivity and quadrature Fourier features\",\n                \"A framework for Bayesian optimization in embedded subspaces\",\n                \"Numerical Optimization\",\n                \"Bayesian Optimization using Pseudo-Points\",\n                \"Gaussian Processes for Machine Learning\",\n                \"High-dimensional Bayesian optimization via additive models with overlapping groups\",\n                \"Taking the human out of the loop: A review of Bayesian optimization\",\n                \"Mastering the game of Go with deep neural networks and tree search\",\n                \"Mastering the game of Go without human knowledge\",\n                \"Scalable Bayesian optimization using deep neural networks\",\n                \"Bayesian optimization in effective dimensions via kernel-based sensitivity indices\",\n                \"Information-theoretic regret bounds for Gaussian process optimization in the bandit setting\",\n                \"MuJoCo: A physics engine for model-based control\",\n                \"Learning Search Space Partition for Black-box Optimization using Monte Carlo Tree Search\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]32 based on the context and research area of Monte Carlo Tree Search based Variable Selection for High Dimensional Bayesian Optimization. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}