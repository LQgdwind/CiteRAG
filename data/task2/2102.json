{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Heuristic-Guided Reinforcement Learning\n\nPaper Abstract: \n\nPaper Section Text:\nIn addition to MuJoCo environments, where the agent has direct access to the true low-dimensional system state, we conducted experiments on the Procgen benchmark suite [ref]56 . The Procgen suite consists of 16 procedurally generated Atari-like game environments, whose main conceptual differences from MuJoCo environments are partial observability and much higher dimensionality of agents’ observations (RGB images). The 16 games are very distinct structurally, but each game has an unlimited number of levels888In Procgen, levels aren’t ordered by difficulty. They are merely game variations. that share common characteristics. All levels of a given game are situated in the same underlying state space and have the same transition function but differ in terms of the regions of the state space reachable within each level and in their observation spaces. We focus on the sample efficiency Procgen mode : in each RL episode the agent faces a new game level, and is expected to eventually learn a single policy that performs well across all levels of the given game. Besides the differences in environment characteristics between MuJoCo and Procgen, the Procgen experiments are also dissimilar in their design: In contrast to the MuJoCo experiments, where we assumed to be given a batch of data from which we constructed a heuristic and a warm-start policy, in the Procgen experiments we simulate a scenario where we are given only the heuristic function itself. Thus, we don’t warm-start the base algorithm with a BC policy when running HuRL. In the Procgen experiments, we share a single set of all hyperparameters’ values – those of the base algorithm, those of HuRL’s λ𝜆\\lambda-scheduling, and those used for generating heuristics – across all 16 games. This is meant to simulate a scenario where HuRL is applied across a diverse set of problems using good but problem-independent hyperparameters. We used PPO  implemented in RLlib (Apache License 2.0) [ref]57 as the base algorithm. We generated a heuristic for each game as follows: We ran PPO for 8​M8𝑀8M environment interaction steps and saved the policy after every 500​K500𝐾500K steps, for a total of 16 checkpoint policies. We ran the policies in a random order by executing 12000 environment interaction steps using each policy. For each rollout trajectory, we computed the discounted return for each observation in that trajectory, forming ⟨o​b​s​e​r​v​a​t​i​o​n,r​e​t​u​r​n⟩𝑜𝑏𝑠𝑒𝑟𝑣𝑎𝑡𝑖𝑜𝑛𝑟𝑒𝑡𝑢𝑟𝑛\\langle observation,return\\rangle training pairs. We used this data to learn a heuristic via regression. We mixed the data, divided it into batches of 5000 training pairs and took a gradient step w.r.t. MSE computed over each batch. The learning rate was 10−4superscript10410^{-4}. Our main algorithm, a HuRL flavor denoted as PPO-HuRL, is identical to the base PPO but uses the Monte-Carlo heuristic computed as above. The base PPO’s hyperparameters in RLlib were chosen to match PPO’s performance reported in the original Procgen paper [ref]56 for the \"easy\" mode as closely as possible across all 16 games (Cobbe et al. [ref]56 used a different PPO implementation with a different set of hyperparameters). As in that work, our agent used the IMPALA-CNN×4absent4\\times 4 network architecture  [ref]56 without the LSTM. The heuristics employed the same architecture as well. We used a single set of hyperparameter values, listed in Table 4, for all Procgen games, both for policy learning and for generating the checkpoints for computing the heuristics. In order to choose values for PPO-HuRL’s hyperparameters α𝛼\\alpha and λ0subscript𝜆0\\lambda_{0}, we fixed all of PPO’s hyperparameters, took the pre-computed heuristic for each game, and did a grid search over α𝛼\\alpha and λ0subscript𝜆0\\lambda_{0}’s values listed in Table 5 to maximize the normalized average AUC across all games. To evaluate each hyperparameter value combination, we used 4 runs per game, each run using a random seed and lasting 8M environment interaction steps. The resulting values are listed in Table 4. Like PPO’s hyperparameters, they were kept fixed for all Procgen environments. To obtain experimental results, we ran PPO and PPO-HuRL  with the aforementioned hyperparameters on each of 16 games 20 times, each run using a random seed and lasting 8M steps as in Mohanty et al. . We report the 25th, 50th, and 75th-percentile training curves. Each of the reported training curves was computed by smoothing policy performance in terms of unnormalized game scores over the preceding 100 episodes. Each policy learning run used a single Azure ND6s machine (6 Intel Xeon E5-2690 v4 CPUs with 112 GB memory and base core frequency of 2.6 GHz; 1 P40 GPU with 24 GB memory). A single PPO run took approximately 1.5 hours on average. A single PPO-HuRL  run took approximately 1.75 hours. The results are shown in Fig. 4. They indicate that, HuRL helps despite the highly challenging setup of this experiment: a) environments with a high-dimensional observation space; a) the chosen hyperparameter values being likely suboptimal for individual environments; c) the heuristics naively generated using Monte-Carlo samples from a mixture of policies of wildly varying quality; and d) the lack of policy warm-starting.\nWe hypothesize that PPO-HuRL’s performance can be improved further with environment-specific hyperparameter tuning and a scheme for heuristic-quality-dependent adjustment of HuRL’s λ𝜆\\lambda-schedules on the fly.\n\nReference markers found: [56]\n\nContext windows for each [ref]:\n[ref]56: In addition to MuJoCo environments, where the agent has direct access to the true low-dimensional system state, we conducted experiments on the Procgen benchmark suite [ref]56 . The Procgen suite consists of 16 procedurally generated Atari-like game environments, whose main conceptual differences from MuJoCo environments are partial observability and much higher\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 56,\n            \"titles\": [\n                \"RLlib: Abstractions for Distributed Reinforcement Learning\",\n                \"Dota 2 with Large Scale Deep Reinforcement Learning\",\n                \"Grandmaster level in Starcraft II using multi-agent reinforcement learning\",\n                \"Sample complexity of episodic fixed-horizon reinforcement learning\",\n                \"Near-optimal time and sample complexities for solving Markov decision processes with a generative model\",\n                \"Maximizing the total reward via reward tweaking\",\n                \"Using a logarithmic mapping to enable lower discount factors in reinforcement learning\",\n                \"Blending MPC & Value Function Approximation for Efficient Reinforcement Learning\",\n                \"Truncated approximate dynamic programming with task-dependent terminal value\",\n                \"Accelerating online reinforcement learning with offline datasets\",\n                \"Deep Q-learning from Demonstrations\",\n                \"Planning with Markov decision processes: An AI perspective\",\n                \"Beyond UCB: Optimal and efficient contextual bandits with regression oracles\",\n                \"The FF planning system: Fast plan generation through heuristic search\",\n                \"The LAMA planner: Guiding cost-based anytime planning with landmarks\",\n                \"Classical planning in MDP heuristics: With a little help from generalization\",\n                \"Regularized Behavior Value Estimation\",\n                \"Policy Improvement via Imitation of Multiple Oracles\",\n                \"Discrete dynamic programming\",\n                \"Biasing approximate dynamic programming with a lower discount factor\",\n                \"The dependence of effective planning horizon on model accuracy\",\n                \"On structural properties of mdps that bound loss due to shallow planning\",\n                \"Improving offline value-function approximations for pomdps by reducing discount factors\",\n                \"Discount factor as a regularizer in reinforcement learning\",\n                \"A formal basis for the heuristic determination of minimum cost paths\",\n                \"A survey of monte carlo tree search methods\",\n                \"Value function approximation and model predictive control\",\n                \"Deep Value Model Predictive Control\",\n                \"Planning with a Receding Horizon for Manipulation in Clutter using a Learned Value Function\",\n                \"Policy invariance under reward transformations: Theory and application to reward shaping\",\n                \"Is pessimism provably efficient for offline RL?\",\n                \"Provably good batch off-policy reinforcement learning without great exploration\",\n                \"Mujoco: A physics engine for model-based control\",\n                \"Measuring Sample Efficiency and Generalization in Reinforcement Learning Benchmarks: NeurIPS 2020 Procgen Benchmark\",\n                \"Is Q-learning provably efficient?\",\n                \"Soft Actor-Critic: Off-Policy Maximum Entropy Deep Reinforcement Learning with a Stochastic Actor\",\n                \"Proximal policy optimization algorithms\",\n                \"Garage: A toolkit for reproducible reinforcement learning research\",\n                \"Learning to Utilize Shaping Rewards: A New Approach of Reward Shaping\",\n                \"True online td (lambda)\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]56 based on the context and research area of Heuristic-Guided Reinforcement Learning. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}