{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: An Empirical Comparison of Video Frame Sampling Methods for Multi-Modal RAG Retrieval\n\nPaper Abstract: \n\nPaper Section Text:\nWe hypothesized that using more frames would lead to a higher recall@k𝑘k score but would also require more storage. We chose a combination of video frame sampling techniques to encompass traditional, deep learning-based and latest shot boundary-based approaches. Recognizing that many sampling methods involve choosing a threshold , we conducted experiments with a range of threshold values, including dynamically calculating them. Detailed descriptions of the novel dynamic threshold calculation methodology for the respective methods have been provided in subsequent sections. The majority of the methods require frame-input, with a few others support video-input. Figure 10 illustrates the outputs of the video frame sampling methods.\n Interval-based\nPrevious research has explored the application of uniform sampling  methods for identifying redundancies in video frames. Following this work, to maximize the number of frames for better recall@k𝑘k, we considered extracting each frame from the 1K test video set (sampled at 1 FPS). Additionally, we sought to investigate the impact of altering the stride value on the recall@k𝑘k score. Therefore, we introduced variations into this method by selecting stride (S) values of 1, 2, 3 and 5. The frame reduction factor achieved through the uniform interval sampling method is 1/S1𝑆1/S. It is important to note that this method does not entail the comparison of frames to identify discrepancies.\n Pixel intensity-based Consecutive video frames are partitioned into 16 regions  (4 ×\\times 4 pattern) and the likelihood ratio   for each region is computed across each colour channel. These individual results are then aggregated to obtain the mean likelihood ratio between frames being compared. We noticed that the likelihood ratio value approaches 1 when two frames are similar, a higher ratio indicates greater dissimilarity between frames. Let misubscript𝑚𝑖m_{i} and mi+1subscript𝑚𝑖1m_{i+1} denote the mean intensity values for a given colour channel for the region in two consecutive frames and let Sisubscript𝑆𝑖S_{i} and Si+1subscript𝑆𝑖1S_{i+1} denote the corresponding variances. The following formula  computes the likelihood ratio for single region and a colour channel. Frames were selected for sampling based on the combined likelihood ratio value reaching or surpassing the specified threshold. Higher threshold values increase sensitivity to image changes, detecting subtle variations, while lower values were less sensitive to minor variations, necessitating more significant dissimilarities between consecutive frames to get selected as key sampled frames. Following analysis of the sampled frame counts and the recall@k𝑘k metrics, we established threshold values at 1.50, 2.00, 2.50, 3.00 and 5.0. Figure 6 depicts the analysis of change detection using likelihood ratio values across regions (4 ×\\times 4). We applied a similar approach using Histogram difference , where consecutive video frames are divided into 16 regions  (4 ×\\times 4 pattern). The Histogram difference for each region is computed separately by colour channel level calculation first and the histogram difference of the same region between two frames represents the mean of the histogram difference across all colour channels for that region. All regions are aggregated using mean to arrive at the single histogram difference value between two frames. We selected 64 bins  for the construction of the histogram. The Histogram difference has been normalized  by dividing it by the product of bins, region height and region width. Figure 7 depicts the analysis of change detection with histogram difference values across regions (4 ×\\times 4). The metric values will be close to 0 when two frames are similar. Let Hi​(j)subscript𝐻𝑖𝑗H_{i}(j) and Hi+1​(j)subscript𝐻𝑖1𝑗H_{i+1}(j) denote the histogram value for a colour channel of a region, let i𝑖i be frame number and j𝑗j be the bin number. G𝐺G is total bins (64 in our case). The following formula  computes the Histogram difference for single region and a colour channel. Fluctuations in the measurement values for both methods, when paired with the appropriate threshold, facilitate the identification of key frames to be included in the sample. Figure 8 illustrates the comparison of these values for a video clip. Threshold values of 0.005, 0.010, 0.015 and 0.020 were utilized in our tests. In addition to using static threshold values, we incorporated dynamic threshold (per video clip) calculations for both likelihood ratio and histogram-based methods. The dynamic thresholds were determined as the median value of the respective metrics for frames within a video clip. Frames are sampled when their individual metric values exceed or equal the static/dynamic threshold value. Structural feature-based\nWe utilize the default structural similarity  implementation within scikit-image, a popular image processing library in Python. Figure 9 shows structural similarity values for consecutive frames in a video clip. Frames are sampled based on their individual metric values being less than or equal to the static/dynamic threshold value, in contrast to pixel-based methods. The selected static test values for the threshold were 0.20, 0.30, 0.40 and 0.50. Higher threshold value results in more frames getting sampled. The dynamic threshold value (per video clip) was calculated by marginally raising the mean value of structural similarity to accommodate less stringent sampling. The subsequent formula calculates the dynamic threshold for the structural feature-based method for a video clip. where  S​Si𝑆subscript𝑆𝑖SS_{i}  is the structural similarity of the  i𝑖ith frame of the video clip, N𝑁N is total frames in a video, C𝐶C = 0.01 and  K𝐾K = 1000.\n Semantic feature-based\nFollowing [ref]21 we used ResNet50, ResNet150 and CLIP  deep learning models to extract feature vectors for each video frame. The decision to employ two variations of the ResNet model was based on the objective of evaluating whether a larger model can provide a more intricate representation of feature vectors to distinguish similarity. We utilized the CLIP[ref]40 model for its capability to map images into a joint-vector space and derive meaningful representations of visual content, making it a valuable feature extractor for our research. Similarity between consecutive frames was assessed through the comparison of feature vectors using cosine similarity[ref]20 measurement. The ResNet feature extraction yields a larger 2048-element vector, with approximately 30% to 70% of values observed to be blank (0), we hypothesize that the observed behaviour is a consequence of the ReLU activation function. This is not observed in case of the CLIP embeddings. Considering this, we explored the possibility of concatenating the ResNet152 and CLIP embeddings to create a 2560-element vector for sampling purposes only, not for storage in the vector database. To preserve the feature representations learned by these vectors through separate models, normalization was not performed before or after the concatenation. where f​1𝑓1f1 is the ResNet152 feature vector and f​2𝑓2f2 is the CLIP feature vector of a frame. Additionally, it was observed that the ResNet embeddings effectively capture differences between consecutive frames at a deeper level, as indicated by their lower cosine similarity score compared to the CLIP embeddings. We sought to investigate whether the cosine similarity values are further reduced when using the 2560-element vector obtained after concatenation and found that the cosine similarity values are higher compared to the semantic representation of ResNet152/50. Figure 9 shows an example of the measurement value intensities when comparing subsequent frames in a video clip. Similar to the aforementioned methods, the choice of threshold value was crucial. We opted to test threshold values of 0.95, 0.90, 0.85 and 0.80. Given our focus on detecting dissimilarity, we specifically selected frames with cosine similarity (compared to the previous frame) less than or equal to the specified threshold. We incorporated a reward factor in the computation of the dynamic threshold for a video clip. This adjustment serves to incrementally raise the threshold in instances where the average cosine similarity for the video is lower, indicating greater dissimilarity among frames, to favour sampling more frames. Conversely, the reward factor diminishes when the mean cosine similarity value is high, signifying greater similarity among video frames. Dynamic threshold calculation is given below. \n where  C​Si𝐶subscript𝑆𝑖CS_{i}  is the cosine similarity of the  i𝑖ith frame of the video clip, N𝑁N is total frames in a video, C𝐶C = 0.01 and  K𝐾K = 1000.\n Shot boundary-based\nWe employed advanced video shot boundary detection technique , utilizing 3D Convolutional Networks and Transformers that take entire video as the input. The confidence threshold for detecting shot boundary frames was set at 0.5 and we maintained the input parameter values for width=48 and height=27 while extracting frames at the original FPS rate using ffmpeg, as per the implementation of this method. As all previous methods were evaluated for recall@k𝑘k using frames sampled from the video at 1 FPS, to extend this analysis we mapped the boundary frame indices generated by this advanced model with the 1 FPS frames using the formula x // FPS, where each x represents the index of the frame (model output of this method) at the original FPS rate. In addition to the boundary frames, subsequent frame after each boundary index (if available) was also included to ensure that we get a good number of representative frames from each shot. As a general practice, we consistently retained the first frame as one of the sampled frames for each video. We also want to emphasize that using the percentage change of similarity measures as threshold value may not be the most effective approach for detecting differences between consecutive frames. This limitation arises from the fact that distinct consecutive frames typically exhibit nearly same / low similarity measure values. This is the reason we chose to use static and dynamic thresholds for most of the methods explained in this section. Lastly, we defer the empirical investigation of multiple-pass similarity measure calculations between non-consecutive frames to future work.\n\nReference markers found: [21]\n\nContext windows for each [ref]:\n[ref]21: clip. where  S​Si𝑆subscript𝑆𝑖SS_{i}  is the structural similarity of the  i𝑖ith frame of the video clip, N𝑁N is total frames in a video, C𝐶C = 0.01 and  K𝐾K = 1000.\n Semantic feature-based\nFollowing [ref]21 we used ResNet50, ResNet150 and CLIP  deep learning models to extract feature vectors for each video frame. The decision to employ two variations of the ResNet model was based on the\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 21,\n            \"titles\": [\n                \"Deep Residual Learning for Image Recognition\",\n                \"Emergent Abilities of Large Language Models\",\n                \"A Survey of Large Language Models\",\n                \"Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks\",\n                \"Sparks of Artificial General Intelligence: Early experiments with GPT-4\",\n                \"A Survey on Multimodal Large Language Models\",\n                \"Introducing GPT-4o: our fastest and most affordable flagship model\",\n                \"MM-Vid : Advancing Video Understanding with GPT-4V(ision)\",\n                \"A Fast and Robust Key Frame Extraction Method for Video Copyright Protection\",\n                \"A comprehensive review of significant researches on content based indexing and retrieval of visual information\",\n                \"Comparison of video shot boundary detection techniques\",\n                \"Automatic partitioning of full-motion video\",\n                \"Dynamic Vision\",\n                \"A Survey of Technologies for Parsing and Indexing Digital Video1\",\n                \"A robust approach for camera break detection in color video sequence\",\n                \"Performance characterization of video-shot-change detection methods\",\n                \"Image quality assessment: from error visibility to structural similarity\",\n                \"Gradual shot boundary detection using localized edge blocks\",\n                \"Video shot boundary detection using multiscale geometric analysis of nsct and least squares support vector machine\",\n                \"Sampling Matters in Deep Embedding Learning\",\n                \"A Vector Space Model for Automatic Indexing\",\n                \"Semantic Redundancies in Image-Classification Datasets: The 10% You Don’t Need\",\n                \"Learning Transferable Visual Models From Natural Language Supervision\",\n                \"The comparison and analysis of extracting video key frame\",\n                \"AutoShot: A Short Video Dataset and State-of-the-Art Shot Boundary Detection\",\n                \"Learning Spatio-Temporal Representation with Pseudo-3D Residual Networks\",\n                \"Attention Is All You Need\",\n                \"Single Path One-Shot Neural Architecture Search with Uniform Sampling\",\n                \"TransNet V2: An effective deep network architecture for fast shot transition detection\",\n                \"Frozen in Time: A Joint Video and Image Encoder for End-to-End Retrieval\",\n                \"X-Pool: Cross-Modal Language-Video Attention for Text-Video Retrieval\",\n                \"MSR-VTT: A Large Video Description Dataset for Bridging Video and Language\",\n                \"VideoCLIP: Contrastive Pre-training for Zero-shot Video-Text Understanding\",\n                \"Comparison of estimators of variance for forest inventories with systematic sampling - results from artificial populations\",\n                \"Towards Automatic Learning of Procedures from Web Instructional Videos\",\n                \"Exploring Video Frame Redundancies for Efficient Data Sampling and Annotation in Instance Segmentation\",\n                \"Comparison of Video Shot Boundary Detection Techniques\",\n                \"skimage metrics structural_similarity\",\n                \"Resnet PyTorch torchvision 0.18\",\n                \"Hugging Face CLIP June 2024\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]21 based on the context and research area of An Empirical Comparison of Video Frame Sampling Methods for Multi-Modal RAG Retrieval. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}