{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Design Patterns for AI-based Systems: A Multivocal Literature Review and Pattern Repository\n\nPaper Abstract: \n\nPaper Section Text:\nWe categorized existing patterns that were adapted to the AI context as traditional patterns.\nFrom the 70 patterns, 36 were such traditional ones (∼similar-to\\sim51%).\nFor example, among them is the well-known Client-Server pattern, originally published in 1992 .\nSharma and Davuluri  mentioned the adaption of this pattern for AI-based systems in 2019.\nFor these patterns, the most prominent categories were architecture (15 patterns), process (8), and implementation (6).\nAll these categories also have more traditional than new patterns, even though the difference is more pronounced for the latter two.\nFor example, process contains exclusively traditional patterns.\nThis may suggest that challenges in these areas may not differ so much between AI and non-AI systems that a large number of fundamentally new patterns are required.\nMany implementation patterns are also adaptations of the original “Gang of Four” design patterns to an AI context, e.g., Strategy, Adapter, or Decorator.\nRegarding architecture, Sculley et al. [ref]57 stated that ML components only make up a small portion of ML systems, i.e., many ML challenges are not limited to their ML components.\nThis might explain why so many traditional architecture patterns have been adapted to this context.\nSome traditional patterns like Multi-Layer Pattern or Lambda Architecture even received a large number of mentions.\nIn the following, we present some examples.\n\n\nName: Multi-Layer Pattern\naka: Separation of Concerns, Multi-Tiered Architecture\nMotivation: An application comprises several groups of subtasks, each of which is at a different level of abstraction.\nSolution: Divide the application into different layers.\nEach layer consists of submodules, and can be independently designed to feed into foreign prototypes.\nIt has an input and corresponding output to the succeeding layer.\nThe succeeding return is used as a feed to the next layer for further processing.\nEvery layer communicates only with its direct neighbor.\nConsequences: This pattern enables inference of results at the individual steps.\nExtra components can be added or modified to meet the computational requirements, giving it high flexibility.\nExamples: self-learning student platform described in \nRelated: -\nCategories: architecture, traditional\nResources:            [ref]53\n\nName: Continuous Integration and Deployment\naka: -\nMotivation: Reduce the risk of releasing broken applications.\nSolution: Always build with unit and component tests and deploy with verification tests using code that itself is under version control.\nAfter you commit to a development branch, the system deploys to a development environment. Once all end-to-end and manual smoke testing is complete, a manual action deploys to production.\nConsequences: -\nExamples: ease.ml/ci presented in \nRelated: Continued Model Evaluation, End-To-End Tests\nCategories: process, traditional\nResources:   \n\nName: Strategy Pattern\naka: -\nMotivation: How can an ML model that performs a task in a given context be flexibly changed?\nSolution: Define an interface (strategy) that different models implement.\nThe context will call the methods exposed by the interface, and the implemented models will behave differently based on the contextual data.\nConsequences: Switching models or achieving flexibility in model behavior is easier, but code complexity is increased.\nExamples: XGBoost’s custom objective functions, Hugging Face’s pipeline interface\nRelated: -\nCategories: implementation, traditional\nResources: 0  \n\nName: Deploy Canary Model\naka: -\nMotivation: You trained a new model with assumed better prediction quality, but it’s not certain if this will carry over to production.\nAdditionally, there could be other quality issues with the new model that should not affect all users in production at once.\nSolution: Deploy the new model in addition to the existing ones and route a small number of requests to it to evaluate its performance.\nIf this test is successful, all existing models can be replaced.\nIf not, the new model needs to be improved.\nConsequences: Only a small number of users are subjected to potential bugs or low-quality predictions.\nAdditional serving and monitoring infrastructure is required.\nExamples: -\nRelated: -\nCategories: deployment, traditional\nResources:   [ref]53\n\nName: Batch Serving\naka: -\nMotivation: Predictions need to be carried out asynchronously over large volumes of data (contrary to predictions for small, individual requests), e.g., generating personalized playlists every week. This is only applicable if there is no need for (near-)real-time predictions.\nSolution: Use distributed data processing infrastructure (e.g, based on MapReduce) to asynchronously carry out complex ML inference tasks on a large number of computing nodes.\nThe individual predictions are aggregated back into a single result.\nConsequences: Positive: You can manage server resources flexibly and in strict accordance with demand. You may rerun the job in case of error. There is no requirement for high availability in your server system. Negative: You need a job management server. This pattern depends on the ability to split a task across multiple workers.\nExamples: -\nRelated: Stateless Serving Function\nCategories: deployment, traditional\nResources:\n\nReference markers found: [57]\n\nContext windows for each [ref]:\n[ref]57: implementation patterns are also adaptations of the original “Gang of Four” design patterns to an AI context, e.g., Strategy, Adapter, or Decorator.\nRegarding architecture, Sculley et al. [ref]57 stated that ML components only make up a small portion of ML systems, i.e., many ML challenges are not limited to their ML components.\nThis might explain why so many traditional architecture\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 57,\n            \"titles\": [\n                \"Continuous Integration of Machine Learning Models with ease.ml/ci: Towards a Rigorous Yet Practical Treatment\",\n                \"Annual number of scholarly publications on artificial intelligence\",\n                \"A definition of ai: Main capabilities and scientific disciplines\",\n                \"The one practice that is separating the ai successes from the failures\",\n                \"Gartner says nearly half of cios are planning to deploy artificial intelligence\",\n                \"Engineering AI Systems: A Research Agenda\",\n                \"Adapting Software Architectures to Machine Learning Challenges\",\n                \"Design patterns\",\n                \"Impact of design patterns on software quality: A systematic literature review\",\n                \"Software-engineering design patterns for machine learning applications\",\n                \"Software Engineering for AI-Based Systems: A Survey\",\n                \"Machine learning: Trends, perspectives, and prospects\",\n                \"Characterizing technical debt and antipatterns in ai-based systems: A systematic mapping study\",\n                \"A pattern language: towns, buildings, construction\",\n                \"Cloud Computing Patterns\",\n                \"Architectural patterns for microservices: a systematic mapping study\",\n                \"Enterprise integration patterns: Designing, building, and deploying messaging solutions\",\n                \"The benefit of patterns\",\n                \"The state of the art on design patterns: A systematic mapping of the literature\",\n                \"Landscape of architecture and design patterns for iot systems\",\n                \"Visual representation of web design patterns for end-users\",\n                \"Machine learning design patterns\",\n                \"Understand machine learning through 7 software design patterns\",\n                \"System design patterns for machine learning\",\n                \"Design patterns for machine learning applications\",\n                \"The need for multivocal literature reviews in software engineering: Complementing systematic literature reviews with grey literature\",\n                \"Encyclopedia of library and information sciences\",\n                \"Guidelines for including grey literature and conducting multivocal literature reviews in software engineering\",\n                \"Systematic mapping studies in software engineering\",\n                \"Machine learning architecture and design patterns\",\n                \"Practitioners’ insights on machine-learning software engineering design patterns: A preliminary study\",\n                \"Software engineering for responsible ai: An empirical study and operationalised patterns\",\n                \"Client-server computing\",\n                \"Artificial intelligence service architecture for edge device\",\n                \"Guidelines for snowballing in systematic literature studies and a replication in software engineering\",\n                \"Studying Software Engineering Patterns for Designing Machine Learning Systems\",\n                \"Towards a secure proxy-based architecture for collaborative ai engineering\",\n                \"MLOps Challenges in Multi-Organization Setup: Experiences from Two Real-World Cases\",\n                \"Machine learning design patterns: Reproducibility - pain is inevitable. suffering is optional\",\n                \"Anyscale - serving ml models in production: Common patterns\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]57 based on the context and research area of Design Patterns for AI-based Systems: A Multivocal Literature Review and Pattern Repository. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}