{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: An Overview of Privacy in Machine Learning\n\nPaper Abstract: \n\nPaper Section Text:\nLearning process. ML provides automated methods of analysis for large sets of data, or to perform tasks that are too hard to program by hand.\nThe general approach to create a machine learning model is as follows [ref]45: Training: Most ML models can be seen as parametric functions hθ​(x)subscriptℎ𝜃𝑥h_{\\theta}(x) taking an input x𝑥x and a parameter vector θ𝜃\\theta.\nThe input x𝑥x is often represented as a vector of values called features.\nThe space of functions {∀θ,x→hθ​(x)}→for-all𝜃𝑥subscriptℎ𝜃𝑥\\{\\forall\\theta,x\\rightarrow h_{\\theta}(x)\\} is the set of candidate hypotheses to model the distribution from which the dataset was sampled.\nA learning algorithm analyzes the training data to find the value(s) of parameter(s)\nθ𝜃\\theta.\nIn other words, during training, an ML algorithm aims to learn the “characteristics” of some data with respect to a given “task” – e.g., given enough pictures of pets, the algorithm should learn to distinguish what differentiates pictures of, say, cats from dogs. Validation: The model performance is then validated on a test dataset, which must be disjoint from the training dataset in order to measure the model’s generalization.\nIn other words, validation performs a sanity check to make sure the algorithm has indeed learned what it is supposed to. Inference (or testing): Once training completes, the model is deployed to make predictions on inputs unseen during training: the value of parameters θ𝜃\\theta are fixed, and the model computes hθ​(x)subscriptℎ𝜃𝑥h_{\\theta}(x) for new inputs x𝑥x.\nThe model prediction may take different forms but, e.g. for classification, the most common is a vector assigning a probability for each class of the problem, which\ncharacterizes how likely the input belongs to that class.\nIn other words, we can now use the algorithm in the wild, and use it for the task at hand – e.g., given a picture, the algorithm tells us whether that is a picture of a cat or a dog. Stochastic gradient descent (SGD). With each function hℎh and θ𝜃\\theta, one typically associates a loss L​(h,θ)𝐿ℎ𝜃L(h,\\theta), a value that quantifies the cost of any discrepancies between the model’s prediction hθ​(x)subscriptℎ𝜃𝑥h_{\\theta}(x) and the true value f​(x)𝑓𝑥f(x), over all examples x𝑥x (approximated by the training examples) .\nTraining the model hℎh is the process of searching for a value of θ𝜃\\theta with the smallest loss, or with a tolerably small loss.\nOften, both the model hℎh and the loss L𝐿L are differentiable functions of θ𝜃\\theta. Therefore, training often relies on a process called stochastic gradient descent (SGD), where one repeatedly picks an example x𝑥x (or batches thereof), calculates hθ​(x)subscriptℎ𝜃𝑥h_{\\theta}(x), and the corresponding loss, and adjusts θ𝜃\\theta to reduce the loss by going in the opposite direction of the gradient .\nIn a nutshell, SGD is a very common process used during training to find the settings in the ML algorithm that maximize its accuracy. Tasks. The process discussed above is typical in what is referred to as supervised learning.\nHowever, ML tasks are actually commonly divided into two main types, depending on the structure of the data at hand: Supervised learning: an association between inputs and outputs based on training examples in the form of inputs labeled with corresponding outputs.\nIf the output data is categorical, the task is called classification, and real-valued output domains define regression problems [ref]45. Classic examples of supervised learning tasks include object recognition in images, machine translation, and spam filtering.\nIn this setting, the model parameters are adjusted to reduce the gap between model predictions hθ​(x)subscriptℎ𝜃𝑥h_{\\theta}(x) and the expected output indicated by the dataset. Unsupervised learning: When the method is given unlabeled\ninputs, its task is unsupervised.\nUnsupervised learning considers problems such as clustering points according to a similarity metric, dimensionality reduction to project data in lower dimensional subspaces, etc [ref]45. Other types of techniques include reinforcement learning, which we omit to ease presentation. ML approaches. ML models can be also categorized depending on the probability distributions they learn.\nAssuming one has some input data x𝑥x and wants to classify it into labels y𝑦y, then, roughly speaking, one can use either: Discriminative models to learn the conditional probability distribution p​(y|x)𝑝conditional𝑦𝑥p(y|x), or Generative models to learn the joint probability distribution p​(x,y)𝑝𝑥𝑦p(x,y).\nAmong these, Generative Adversarial Networks (GANs) 1 were originally proposed for unsupervised learning, but now also used for supervised and reinforcement learning, and have become very popular as they learn to generate new data with the same statistical properties as the training set. The two kinds of model are exemplified in Figure 1. Another distinction is based on whether the learning task is centralized or (somewhat) distributed: Centralized learning: in conventional ML methodologies, all training data is pooled and stored at a single entity, and models are trained on this joint pool. Collaborative/federated learning: multiple participants, each with their own training dataset, construct a joint model by training a local model on their own data, but periodically exchange model parameters, updates to these parameters, or partially constructed models with the other participants.\nThis intuition is illustrated in Figure 2.\nThere are several techniques in this category, including federated learning deployed by Google  on million of devices, e.g., for training of predictive keyboards on character sequences that users type on their phones. ML Algorithms. As discussed above, ML involves creating models.\nThese can be built using different approaches, sometimes referred to as algorithms.\nSupervised learning techniques include Linear Regression, Logistic Regression, K-Nearest Neighbors, Decision Trees, Support Vector Machines, Random Forest, Naive Bayes, etc.\nFor instance, Logistic Regression is a linear model where the probabilities describing the possible outcomes of a single trial are modeled via a logistic (logit) function; the parameters of the model are estimated with maximum likelihood estimation, using an iterative algorithm.\nUnsupervised learning algorithms include clustering ones–e.g., hierarchical clustering, k-means, DBSCAN, etc. Neural networks, which have attracted a lot of attention in recent years, are also types of ML instantiations, where learning can be either supervised or unsupervised.\nA neural net consists of a large number of simple processing nodes that are densely interconnected, usually organized into layers, to which weights are assigned.\nDuring training, weights are initially set to random values; as training data passes through the layers, weights are continually adjusted until training data with the same labels consistently yield similar outputs 4.\nIn particular, in deep neural networks (“deep learning”), each level learns to transform its input data into a slightly more abstract and composite representation; in fact, the word “deep” typically refers to the number of layers through which the data is transformed. Overall, choosing the right machine learning algorithm depends on several factors, including, but not limited to: data size, quality and diversity, as well as what answers businesses want to derive from that data.\nAdditional considerations include accuracy, training time, parameters, data points and much more.\nTherefore, the right choice is typically both a combination of business need, specification, experimentation, and time available.\n\nReference markers found: [45]\n\nContext windows for each [ref]:\n[ref]45: ML provides automated methods of analysis for large sets of data, or to perform tasks that are too hard to program by hand.\nThe general approach to create a machine learning model is as follows [ref]45: Training: Most ML models can be seen as parametric functions hθ​(x)subscriptℎ𝜃𝑥h_{\\theta}(x) taking an input x𝑥x and a parameter vector θ𝜃\\theta.\nThe input x𝑥x is often represented as a\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 45,\n            \"titles\": [\n                \"Scalable Private Learning with PATE\",\n                \"Deep Learning with Differential Privacy\",\n                \"On the protection of private information in machine learning systems: Two recent approches\",\n                \"Privacy-preserving deep learning: Revisited and Enhanced\",\n                \"Hacking smart machines with smarter ones: How to extract meaningful data from machine learning classifiers\",\n                \"Practical secure aggregation for privacy-preserving machine learning\",\n                \"Private Predictive Analysis on Encrypted Medical Data\",\n                \"Machine learning classification over encrypted data\",\n                \"The Secret Sharer: Measuring Unintended Neural Network Memorization & Extracting Secrets\",\n                \"Towards Formalizing the GDPR’s Notion of Singling Out\",\n                \"Towards a methodology for statistical disclosure control\",\n                \"Cryptonets: Applying neural networks to encrypted data with high throughput and accuracy\",\n                \"Privacy-preserving multivariate statistical analysis: Linear regression and classification\",\n                \"Differential privacy: A survey of results\",\n                \"On the difficulties of disclosure prevention in statistical databases or the case for differential privacy\",\n                \"The Algorithmic Foundations of Differential Privacy\",\n                \"Robust traceability from trace amounts\",\n                \"Model inversion attacks that exploit confidence information and basic countermeasures\",\n                \"Privacy in pharmacogenetics: An end-to-end case study of personalized warfarin dosing\",\n                \"Property Inference Attacks on Fully Connected Neural Networks using Permutation Invariant Representations\",\n                \"Differentially Private Federated Learning: A Client Level Perspective\",\n                \"Generative adversarial nets\",\n                \"Ml confidential: Machine learning on encrypted data\",\n                \"Mlcapsule: Guarded offline deployment of machine learning as a service\",\n                \"Explained: Neural networks\",\n                \"Logan: Membership inference attacks against generative models\",\n                \"Deep Models Under the GAN: Information Leakage from Collaborative Deep Learning\",\n                \"Resolving individuals contributing trace amounts of DNA to highly complex mixtures using high-density SNP genotyping microarrays\",\n                \"Chiron: Privacy-preserving machine learning as a service\",\n                \"Efficient deep learning on multi-source private data\",\n                \"Evaluating Differentially Private Machine Learning in Practice\",\n                \"Privacy preserving data mining\",\n                \"Oblivious neural network predictions via minionn transformations\",\n                \"Communication-efficient learning of deep networks from decentralized data\",\n                \"Learning differentially private language models without losing accuracy\",\n                \"Exploiting Unintended Feature Leakage in Collaborative Learning∗\",\n                \"Secureml: A system for scalable privacy-preserving machine learning\",\n                \"Comprehensive Privacy Analysis of Deep Learning: Passive and Active White-box Inference Attacks against Centralized and Federated Learning\",\n                \"Privacy-preserving ridge regression on hundreds of millions of records\",\n                \"Differential privacy: A primer for a non-technical audience\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]45 based on the context and research area of An Overview of Privacy in Machine Learning. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}