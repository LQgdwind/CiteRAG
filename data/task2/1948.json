{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Reverse Shortest Path Problem for Unit-Disk GraphsThis research was supported in part by NSF under Grant CCF-2005323. Preliminary results of this paper appeared in Proceedings of the 17th Algorithms and Data Structures Symposium (WADS 2021) and Proceedings of the 16th International Conference and Workshops on Algorithms and Computation (WALCOM 2022).\n\nPaper Abstract: \n\nPaper Section Text:\nGiven a set P𝑃P of n𝑛n points in the plane and a parameter r𝑟r, the\nunit-disk graph Gr​(P)subscript𝐺𝑟𝑃G_{r}(P) is an undirected graph whose vertex set is\nP𝑃P such that an edge connects two points p,q∈P𝑝𝑞𝑃p,q\\in P if the\n(Euclidean) distance between p𝑝p and q𝑞q is at most r𝑟r.\nThe weight of each edge of Gr​(P)subscript𝐺𝑟𝑃G_{r}(P) is defined to be one in the unweighted case\nand is defined to the distance between the two vertices of the edge in the weighted case. Alternatively, Gr​(P)subscript𝐺𝑟𝑃G_{r}(P) can be viewed as the\nintersection graph of the set of congruous disks centered at the\npoints of P𝑃P with radii equal to r/2𝑟2r/2, i.e., two vertices are\nconnected if their disks intersect. The length of a\npath in Gr​(P)subscript𝐺𝑟𝑃G_{r}(P) is the sum of the weights of the edges of the path. Computing shortest paths in unit-disk graphs\nwith different distance metrics and different weights assigning\nmethods has been extensively studied,\ne.g.,       .\nAlthough a unit-disk graph may have Ω​(n2)Ωsuperscript𝑛2\\Omega(n^{2}) edges, geometric properties allow to solve the single-source-shortest-path problem (SSSP) in sub-quadratic time. Roditty and Segal  first proposed an algorithm of O​(n4/3+ϵ)𝑂superscript𝑛43italic-ϵO(n^{4/3+\\epsilon}) time for unit-disk graphs for both unweighted and weighted cases, for any ϵ>0italic-ϵ0\\epsilon>0. Cabello and Jejčič  gave an algorithm of O​(n​log⁡n)𝑂𝑛𝑛O(n\\log n) time for the unweighted case. Using a dynamic data structure for bichromatic closest pairs , they also solved the weighted case in O​(n1+ϵ)𝑂superscript𝑛1italic-ϵO(n^{1+\\epsilon}) time . Chan and Skrepetos  gave an O​(n)𝑂𝑛O(n) time algorithm for the unweighted case, assuming that all points of P𝑃P are presorted. Kaplan et al.  developed a new randomized result for the dynamic bichromatic closest pair problem; applying the new result to the algorithm of  leads to an O​(n​log12+o​(1)⁡n)𝑂𝑛superscript12𝑜1𝑛O(n\\log^{12+o(1)}n) expected time randomized algorithm for the weighted case. Recently, Wang and Xue  proposed a new algorithm that solves the weighted case in O​(n​log2⁡n)𝑂𝑛superscript2𝑛O(n\\log^{2}n) time. Somce approximation algorithms for the problem have also been developed   . The L1subscript𝐿1L_{1} version of the SSSP problem has also been studied, where the distance of two points in the plane is measured under the L1subscript𝐿1L_{1} metric when defining Gr​(P)subscript𝐺𝑟𝑃G_{r}(P). Note that in the L1subscript𝐿1L_{1} version a “disk” is a diamond. The SSSP algorithms of   for the L2subscript𝐿2L_{2} unweighted version can be easily adapted to the L1subscript𝐿1L_{1} unweighted version. Wang and Zhao  recently solved the L1subscript𝐿1L_{1} weighted case in O​(n​log⁡n)𝑂𝑛𝑛O(n\\log n) time. It is known that Ω​(n​log⁡n)Ω𝑛𝑛\\Omega(n\\log n) is a lower bound for the SSSP problem in both L1subscript𝐿1L_{1} and L2subscript𝐿2L_{2} versions  . Hence, the SSSP problem in the L1subscript𝐿1L_{1} weighted/unweighted case as well as in the L2subscript𝐿2L_{2} unweighted case has been solved optimally. In this paper, we consider the following reverse shortest path (RSP)\nproblem. In addition to P𝑃P, given a value λ>0𝜆0\\lambda>0 and two points s,t∈P𝑠𝑡𝑃s,t\\in P, the problem is to compute the smallest value r𝑟r such that the distance between s𝑠s and t𝑡t in Gr​(P)subscript𝐺𝑟𝑃G_{r}(P) is at most λ𝜆\\lambda. There are four cases for the RSP problem depending on whether L1subscript𝐿1L_{1} or L2subscript𝐿2L_{2} metric is considered and whether the unit-disk graphs are weighted or not. Throughout the paper, we let r∗superscript𝑟r^{*} denote the optimal value r𝑟r for any case. The goal is therefore to compute r∗superscript𝑟r^{*}. Observe that r∗superscript𝑟r^{*} must be equal to the distance of two points in P𝑃P in any case (i.e., L1subscript𝐿1L_{1}, L2subscript𝐿2L_{2}, weighted, unweighted). In light of this observation, Cabello and Jejčič  mentioned a straightforward solution that can compute r∗superscript𝑟r^{*} in O​(n4/3​log3⁡n)𝑂superscript𝑛43superscript3𝑛O(n^{4/3}\\log^{3}n) time for both the unweighted and the weighted cases in the L2subscript𝐿2L_{2} metric, by using the distance selection algorithm of Katz and Sharir  to perform binary search on all interpoint distances of P𝑃P. In this paper, we gave two algorithms for the L2subscript𝐿2L_{2} unweighted case and their time complexities are O​(⌊λ⌋⋅n​log⁡n)𝑂⋅𝜆𝑛𝑛O(\\lfloor\\lambda\\rfloor\\cdot n\\log n) and O​(n5/4​log7/4⁡n)𝑂superscript𝑛54superscript74𝑛O(n^{5/4}\\log^{7/4}n), respectively; we also gave an algorithm of O​(n5/4​log5/2⁡n)𝑂superscript𝑛54superscript52𝑛O(n^{5/4}\\log^{5/2}n) time for the L2subscript𝐿2L_{2} weighted case. In addition, we solve the L1subscript𝐿1L_{1} RSP problem in O​(n​log3⁡n)𝑂𝑛superscript3𝑛O(n\\log^{3}n) time for both the unweighted and weighted cases. Since the original reporting of our results,111Our algorithms for the L2subscript𝐿2L_{2} unweighted case were included in ; our results for the L2subscript𝐿2L_{2} weighted case and the L1subscript𝐿1L_{1} problem have been presented in the 29th Fall Workshop on Computational Geometry (FWCG 2021) and has also been accepted in . Note that the second algorithm for the L2subscript𝐿2L_{2} unweighted case runs in O​(n5/4​log2⁡n)𝑂superscript𝑛54superscript2𝑛O(n^{5/4}\\log^{2}n) time in ; in this full version, we slightly improve the time to O​(n5/4​log7/4⁡n)𝑂superscript𝑛54superscript74𝑛O(n^{5/4}\\log^{7/4}n) by changing the threshold for defining large cells from n3/4superscript𝑛34n^{3/4} to (n/log⁡n)3/4superscript𝑛𝑛34(n/\\log n)^{3/4} in Section 4. some exciting progress has been made by Katz and Sharir , who proposed randomized algorithms of O​(n6/5+ϵ)𝑂superscript𝑛65italic-ϵO(n^{6/5+\\epsilon}) expected time for the L2subscript𝐿2L_{2} RSP problem for both the unweighted and weighted cases, for any arbitrarily small ϵ>0italic-ϵ0\\epsilon>0.222It is not explicitly stated in  that the algorithm is randomized. A key subroutine used in the algorithm is Theorem 1, which is originally from  and is a randomized algorithm (see Section 4 in ). Note that all our results are deterministic. Note that reverse/inverse shortest path problems have been studied in the literature under various problem settings. Roughly speaking, the problems are to modify the graph (e.g., modify some edge weights) so that certain desired constraints related to shortest paths in the graph can be satisfied, e.g., [ref]6 8. Our reverse shortest path problem in unit-disk graphs may find applications in scenarios like the following. Consider Gr​(P)subscript𝐺𝑟𝑃G_{r}(P) as an L2subscript𝐿2L_{2} unit-disk intersection graph representing a wireless sensor network in which each disk represents a sensor and two sensors can communicate with each other (e.g., directly transmit a message) if there is an edge connecting them in Gr​(P)subscript𝐺𝑟𝑃G_{r}(P). The disk radius is proportional to the energy of the sensor. For two specific sensors s𝑠s and t𝑡t, suppose we want to know the minimum energy for all sensors so that s𝑠s and t𝑡t can transmit messages to each other within λ𝜆\\lambda steps for a given value λ𝜆\\lambda. It is easy to see that this is equivalent to our L2subscript𝐿2L_{2} RSP problem in the unweighted case. If the latency of transmitting a message between two neighboring sensors is proportional to their Euclidean distance and we want to know the minimum energy for all sensors so that the total latency of transmitting messages between s𝑠s and t𝑡t is no more than a target value λ𝜆\\lambda, then the problem becomes the weighted case. In addition to the shortest path problem, many other problems of unit-disk graphs have also been studied, i.e. clique 2, independent set , distance oracle  , diameter   , etc. Comparing to general graphs, many problems can be solved efficiently in unit-disk graphs by exploiting their underlying geometric structures, although there are still problems that are NP-hard for unit-disk graphs and other geometric intersection graphs, e.g., 5 2.\n\nReference markers found: [6]\n\nContext windows for each [ref]:\n[ref]6: settings. Roughly speaking, the problems are to modify the graph (e.g., modify some edge weights) so that certain desired constraints related to shortest paths in the graph can be satisfied, e.g., [ref]6 8. Our reverse shortest path problem in unit-disk graphs may find applications in scenarios like the following. Consider Gr​(P)subscript𝐺𝑟𝑃G_{r}(P) as an L2subscript𝐿2L_{2} unit-disk\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 6,\n            \"titles\": [\n                \"Shortest Paths in Intersection Graphs of Unit Disks\",\n                \"Vertical decomposition of shallow levels in 3-dimensional arrangements and its applications\",\n                \"An O​(n​log⁡n)𝑂𝑛𝑛O(n\\\\log n) sorting network\",\n                \"The discrete and semicontinuous Fréchet distance with shortcuts via approximate distance counting and selection\",\n                \"Decomposable searching problems\",\n                \"Time bounds for selection\",\n                \"On an instance of the inverse shortest paths problem\",\n                \"All-pairs shortest paths in unit-disk graphs in slightly subquadratic time\",\n                \"Approximate shortest paths and distance oracles in weighted unit-disk graphs\",\n                \"Cutting hyperplanes for divide-and-conquer\",\n                \"A deterministic view of random sampling and its use in geometry\",\n                \"Unit disk graphs\",\n                \"Slowing down sorting networks to obtain faster sorting algorithms\",\n                \"Introduction to Algorithms\",\n                \"A framework for ETH-tight algorithms and lower bounds in geometric intersection graphs\",\n                \"Computational Geometry – Algorithms and Applications\",\n                \"Optimal point location in a monotone subdivision\",\n                \"On the relative complexities of some geometric problems\",\n                \"New lower bounds for hopcroft’s problem\",\n                \"A sweepline algorithm for Voronoi diagrams\",\n                \"Finding k𝑘kth paths and p𝑝p-centers by generating and searching good data structures\",\n                \"Generalized selection and ranking: Sorted matrices\",\n                \"Well-separated pair decomposition for the unit-disk graph metric and its applications\",\n                \"Dynamic planar Voronoi diagrams for general distance functions and their algorithmic applications\",\n                \"An expander-based approach to geometric optimization\",\n                \"Efficient algorithms for optimization problems involving distances in a point set\",\n                \"Optimal search in planar subdivisions\",\n                \"Explicit expanders and the Ramanujan conjectures\",\n                \"Approximation algorithms for maximum independent set problems and fractional coloring problems on unit disk graphs\",\n                \"Applying parallel computation algorithms in the design of serial algorithms\",\n                \"On bounded leg shortest paths problems\",\n                \"Planar point location using persistent search trees\",\n                \"Closest-point problems\",\n                \"Near-optimal algorithms for shortest paths in weighted unit-disk graphs\",\n                \"An optimal algorithm for L1subscript𝐿1{L}_{1} shortest paths in unit-disk graphs\",\n                \"Reverse shortest path problem for unit-disk graphs\",\n                \"Reverse shortest path problem for weighted unit-disk graphs\",\n                \"Computation of the reverse shortest-path problem\",\n                \"Generated Reference Title 38 for [ref]6\",\n                \"Generated Reference Title 39 for [ref]6\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]6 based on the context and research area of Reverse Shortest Path Problem for Unit-Disk GraphsThis research was supported in part by NSF under Grant CCF-2005323. Preliminary results of this paper appeared in Proceedings of the 17th Algorithms and Data Structures Symposium (WADS 2021) and Proceedings of the 16th International Conference and Workshops on Algorithms and Computation (WALCOM 2022).. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}