{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Deterministic computation of the characteristic polynomial in the time of matrix multiplication\n\nPaper Abstract: \n\nPaper Section Text:\nPrevious algorithms based on linear algebra over 𝕂𝕂\\mathbb{K} for computing the\ncharacteristic polynomial of 𝐌∈𝕂m×m𝐌superscript𝕂𝑚𝑚\\mathbf{{M}}\\in\\mathbb{K}^{m\\times m} mainly fall in three\ntypes of methods. combining the traces of the first n𝑛n powers of the input matrix using\nthe Newton identities reveals the coefficients of the characteristic\npolynomial. Known as the Faddeev-LeVerrier algorithm, it was introduced in\n, refined and rediscovered in\n  , and used in  to prove that\nthe problem is in the 𝒩​𝒞2𝒩superscript𝒞2\\mathcal{NC}^{2} parallel complexity class. introduced in  and improved in , this\napproach does not involve division, and is therefore well suited for\ncomputing over integral domains. Later developments in this field include\n[ref]1 , the latter reaching the best known cost bound of O(m2.6973log(m)c)\\mathchoice{O\\left(m^{2.6973}\\log(m)^{c}\\right)}{O(m^{2.6973}\\log(m)^{c})}{O(m^{2.6973}\\log(m)^{c})}{O(m^{2.6973}\\log(m)^{c})}\nring operations using a deterministic algorithm, for some constant c>0𝑐0c>0. based on sequences of iterates of vectors under the application of the\nmatrix: (𝐯,𝐌𝐯,𝐌2​𝐯,…)𝐯𝐌𝐯superscript𝐌2𝐯…(\\mathbf{{v}},\\mathbf{{M}}\\mathbf{{v}},\\mathbf{{M}}^{2}\\mathbf{{v}},\\ldots). These methods\nrely on the fact that the first linear dependency between these iterates\ndefines a polynomial which divides the characteristic polynomial. Some\nalgorithms construct the Krylov basis explicitly   , while others can be interpreted as an implicit\nKrylov iteration with structured vectors [ref]12 . Methods based on traces of powers use O​(m4)𝑂superscript𝑚4\\mathchoice{O\\left(m^{4}\\right)}{O(m^{4})}{O(m^{4})}{O(m^{4})} or\nO​(mω+1)𝑂superscript𝑚𝜔1\\mathchoice{O\\left(m^{\\omega+1}\\right)}{O(m^{\\omega+1})}{O(m^{\\omega+1})}{O(m^{\\omega+1})} field operations, and are mostly competitive for\ntheir parallel complexity. Methods based on determinant expansions use\nO​(m4)𝑂superscript𝑚4\\mathchoice{O\\left(m^{4}\\right)}{O(m^{4})}{O(m^{4})}{O(m^{4})} or O​(mω+1)𝑂superscript𝑚𝜔1\\mathchoice{O\\left(m^{\\omega+1}\\right)}{O(m^{\\omega+1})}{O(m^{\\omega+1})}{O(m^{\\omega+1})} field operations and are\nrelevant for division-free algorithms. Lastly, the Krylov methods run in\nO​(m3)𝑂superscript𝑚3\\mathchoice{O\\left(m^{3}\\right)}{O(m^{3})}{O(m^{3})}{O(m^{3})} [ref]12  or O​(mω​log⁡m)𝑂superscript𝑚𝜔𝑚\\mathchoice{O\\left(m^{\\omega}\\log m\\right)}{O(m^{\\omega}\\log m)}{O(m^{\\omega}\\log m)}{O(m^{\\omega}\\log m)}  field operations with deterministic algorithms, or in\nO​(mω)𝑂superscript𝑚𝜔\\mathchoice{O\\left(m^{\\omega}\\right)}{O(m^{\\omega})}{O(m^{\\omega})}{O(m^{\\omega})} field operations with the Las Vegas randomized\nalgorithm in . Note that the characteristic polynomial of 𝐌𝐌\\mathbf{{M}} cannot be computed\nfaster than the determinant of 𝐌𝐌\\mathbf{{M}}, since the latter is the constant\ncoefficient of the former. Furthermore, under the model of computation trees,\nthe determinant of m×m𝑚𝑚m\\times m matrices cannot be computed faster than\nthe product of two m×m𝑚𝑚m\\times m matrices\n[8, Sec. 16.4], a consequence of Baur and\nStrassen’s theorem . Another type of characteristic polynomial algorithms is based on operations on\nmatrices over 𝕂​[x]𝕂delimited-[]𝑥\\mathbb{K}[x], called polynomial matrices in what follows. Indeed\nthe characteristic polynomial may be obtained by calling a determinant\nalgorithm on the characteristic matrix x​𝐈m−𝐌𝑥subscript𝐈𝑚𝐌x\\mathbf{{I}}_{m}-\\mathbf{{M}}, which is\nin 𝕂​[x]m×m𝕂superscriptdelimited-[]𝑥𝑚𝑚\\mathbb{K}[x]^{m\\times m}. Existing algorithms, which accept any matrix in\n𝕂​[x]m×m𝕂superscriptdelimited-[]𝑥𝑚𝑚\\mathbb{K}[x]^{m\\times m} of degree d𝑑d as input, include the evaluation-interpolation method, which costs\nO​(mω+1​d+m3​𝖬′⁡(d))𝑂superscript𝑚𝜔1𝑑superscript𝑚3superscript𝖬′𝑑\\mathchoice{O\\left(m^{\\omega+1}d+m^{3}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}\\right)}{O(m^{\\omega+1}d+m^{3}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)})}{O(m^{\\omega+1}d+m^{3}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)})}{O(m^{\\omega+1}d+m^{3}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)})} field operations,\nrequires that the field 𝕂𝕂\\mathbb{K} is large enough, and mainly relies on\nthe computation of about m​d𝑚𝑑md determinants of matrices in\n𝕂m×msuperscript𝕂𝑚𝑚\\mathbb{K}^{m\\times m}; the algorithm of Mulders and Storjohann [ref]36 based on weak\nPopov form computation, which uses O​(m3​d2)𝑂superscript𝑚3superscript𝑑2\\mathchoice{O\\left(m^{3}d^{2}\\right)}{O(m^{3}d^{2})}{O(m^{3}d^{2})}{O(m^{3}d^{2})} field\noperations; retrieving the determinant as the product of the diagonal entries of\nthe Smith form, itself computed by a Las Vegas randomized algorithm in\nO(mω𝖬′(d)log(m)2)\\mathchoice{O\\left(m^{\\omega}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}\\log(m)^{2}\\right)}{O(m^{\\omega}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}\\log(m)^{2})}{O(m^{\\omega}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}\\log(m)^{2})}{O(m^{\\omega}\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}\\log(m)^{2})} field operations\n[45, Prop. 41], assuming 𝖬′⁡(d)∈O​(dω−1)superscript𝖬′𝑑𝑂superscript𝑑𝜔1\\mathchoice{\\operatorname{\\mathsf{M}}^{\\prime}\\!\\left(d\\right)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}{\\operatorname{\\mathsf{M}}^{\\prime}(d)}\\in\\mathchoice{O\\left(d^{\\omega-1}\\right)}{O(d^{\\omega-1})}{O(d^{\\omega-1})}{O(d^{\\omega-1})}; the algorithm based on unimodular triangularization in\n, which is deterministic and uses O(mωdlog(d)alog(m)b)\\mathchoice{O\\left(m^{\\omega}d\\log(d)^{a}\\log(m)^{b}\\right)}{O(m^{\\omega}d\\log(d)^{a}\\log(m)^{b})}{O(m^{\\omega}d\\log(d)^{a}\\log(m)^{b})}{O(m^{\\omega}d\\log(d)^{a}\\log(m)^{b})} field operations for some constants a,b∈ℤ>0𝑎𝑏subscriptℤabsent0a,b\\in\\mathbb{Z}_{>0}. In the last two items the cost bound is, up to logarithmic factors, the same as\nthe cost of multiplying matrices 𝕂​[x]m×m𝕂superscriptdelimited-[]𝑥𝑚𝑚\\mathbb{K}[x]^{m\\times m} of degree d𝑑d by\nrelying on both fast linear algebra over 𝕂𝕂\\mathbb{K} and fast arithmetic in\n𝕂​[x]𝕂delimited-[]𝑥\\mathbb{K}[x], as showed in . The last two of these cost bounds\ndo involve factors logarithmic in m𝑚m, whereas the first two have an\nexponent on m𝑚m which exceeds ω𝜔\\omega. In summary, the fastest characteristic polynomial algorithms either are\nrandomized or have a cost a logarithmic factor away from the lower bound. This\npaper, with Theorem 1.1, bridges this gap by proposing the first\ndeterministic algorithm with cost O​(mω)𝑂superscript𝑚𝜔\\mathchoice{O\\left(m^{\\omega}\\right)}{O(m^{\\omega})}{O(m^{\\omega})}{O(m^{\\omega})}.\n\nReference markers found: [1]\n\nContext windows for each [ref]:\n[ref]1: complexity class. introduced in  and improved in , this\napproach does not involve division, and is therefore well suited for\ncomputing over integral domains. Later developments in this field include\n[ref]1 , the latter reaching the best known cost bound of\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 1,\n            \"titles\": [\n                \"On the complexity of partial derivatives\",\n                \"Efficient algorithms for computing the characteristic polynomial in a domain\",\n                \"A uniform approach for the fast computation of matrix-type Padé approximants\",\n                \"Shifted normal forms of polynomial matrices\",\n                \"Normal forms for general polynomial matrices\",\n                \"On computing the determinant in small parallel time using a small number of processors\",\n                \"Triangular factorization and inversion by fast matrix multiplication\",\n                \"Algebraic Complexity Theory\",\n                \"On fast multiplication of polynomials over arbitrary algebras\",\n                \"On the minimum computation time of functions\",\n                \"Fast parallel matrix inversion algorithms\",\n                \"The numerical solution of the secular equation\",\n                \"Fast Computation of the Rank Profile Matrix and the Generalized Bruhat Decomposition\",\n                \"Efficient computation of the characteristic polynomial\",\n                \"Abstract Algebra\",\n                \"Collected Problems in Higher Algebra, Problem n°979\",\n                \"Minimal Bases of Rational Vector Spaces, with Applications to Multivariable Linear Systems\",\n                \"A simple recurrent formula for inverting a matrix (abstract)\",\n                \"Modern Computer Algebra (third edition)\",\n                \"Nearly optimal algorithms for canonical matrix forms\",\n                \"On the complexity of polynomial matrix computations\",\n                \"Certification of Minimal Approximant Bases\",\n                \"Triangular x𝑥x-basis decompositions and derandomization of linear algebra algorithms over K​[x]𝐾delimited-[]𝑥{K}[x]\",\n                \"Faster polynomial multiplication over finite fields\",\n                \"A generalization of the fast LUP matrix decomposition algorithm and applications\",\n                \"Fast Computation of Minimal Interpolation Bases in Popov Form for Arbitrary Shifts\",\n                \"Computing minimal interpolation bases\",\n                \"Fast computation of approximant bases in canonical form\",\n                \"Linear Systems\",\n                \"On the complexity of computing determinants\",\n                \"Fast algorithms for the characteristic polynomial\",\n                \"Fast, deterministic computation of the Hermite normal form and determinant of a polynomial matrix\",\n                \"Powers of Tensors and Fast Matrix Multiplication\",\n                \"Sur les variations séculaires des éléments elliptiques des sept plantètes principales\",\n                \"Bruhat canonical form for linear systems\",\n                \"On lattice reduction for polynomial matrices\",\n                \"Computing Popov and Hermite Forms of Rectangular Polynomial Matrices\",\n                \"Computing Canonical Bases of Modules of Univariate Relations\",\n                \"Faster Algorithms for the Characteristic Polynomial\",\n                \"Invariant description of linear, time-invariant controllable systems\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]1 based on the context and research area of Deterministic computation of the characteristic polynomial in the time of matrix multiplication. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}