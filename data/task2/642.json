{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Unsupervised Text Generation by Learning from Search\n\nPaper Abstract: \n\nPaper Section Text:\nThe search-based text generation [ref]29 [ref]24 relies on a heuristic-based objective function s​(y|x)𝑠conditionalyxs(\\rm y|\\rm x) that (roughly) evaluates the quality of an output sequence yy\\rm y given the input xx\\rm x (usually, one or a few sentences). Typically, the objective involves language modeling fluency slm​(x)subscript𝑠lmxs_{\\text{lm}}(\\rm x), semantic compliance ssemantic​(x,y)subscript𝑠semanticxys_{\\text{semantic}}(\\rm x,\\rm y), and other task-specific scorers stask​(y,⋅)subscript𝑠tasky⋅s_{\\text{task}}(\\rm y,\\cdot).\nThese individual scorers are combined by the product of experts [ref]13: We adopt simulated annealing (SA)  [ref]24, which performs local stochastic search to maximize the objective. Concretely, SA starts from an initial candidate output sentence y(0)superscripty0\\mathrm{y}^{(0)}, which is set to the input xx\\mathrm{x} in our first-stage SA. For the second stage, it will be the output of our GPT2 model. At a search step t𝑡t, SA iteratively proposes a new candidate y′superscripty′\\rm y^{\\prime} by local edits of y(t)superscripty𝑡\\mathrm{y}^{(t)}, namely, word insertion, deletion, and replacement. The proposal y′superscripty′\\rm y^{\\prime} is accepted with probability p​(accept|y′,y(t),x,T)=min​{1,exp⁡(s​(y′|x)−s​(y(t)|x)T)}𝑝conditionalacceptsuperscripty′superscripty𝑡x𝑇min1𝑠conditionalsuperscripty′x𝑠conditionalsuperscripty𝑡x𝑇p(\\text{accept}|\\mathrm{y}^{\\prime},\\mathrm{y}^{(t)},\\mathrm{x},T)=\\text{min}\\big{\\{}1,\\exp(\\frac{s(\\mathrm{y}^{\\prime}|\\mathrm{x})-s(\\mathrm{y}^{(t)}|\\mathrm{x})}{T})\\big{\\}}. Then, y(t+1)=y′superscripty𝑡1superscripty′\\mathrm{y}^{(t+1)}=\\mathrm{y}^{\\prime} if y′superscripty′\\rm y^{\\prime} is accepted, or otherwise, y(t+1)=y(t)superscript𝑦𝑡1superscripty𝑡y^{(t+1)}=\\mathrm{y}^{(t)}. In SA, T𝑇T is a temperature controlling how greedy the search algorithm is. Usually, T𝑇T is high at the beginning of search so as to be more explorative, and then T𝑇T is cooled down to achieve a better (local) optimum.\nAlthough we follow the generic SA framework of text generation as in [ref]24, the objective function and proposal are largely redesigned, detailed below. Fluency scorer (slmsubscript𝑠lms_{\\text{lm}}). The fluency of a sentence can oftentimes be approximated by a language model’s predicted probability. Previous search-based work uses recurrent neural networks for fluency evaluation [ref]29 [ref]24. In our work, we use the large-scale pretrained GPT2 model . For an output y=y1​⋯​ynysubscript𝑦1⋯subscript𝑦𝑛\\mathrm{y}=y_{1}\\cdots y_{n}, the language fluency scorer is the joint likelihood of yy\\mathrm{y}, given by slm​(y)=(∏i=1np​(yi|y1,⋯,yi−1))αsubscript𝑠lmysuperscriptsuperscriptsubscriptproduct𝑖1𝑛𝑝conditionalsubscript𝑦𝑖subscript𝑦1⋯subscript𝑦𝑖1𝛼s_{\\text{lm}}(\\mathrm{y})=(\\prod_{i=1}^{n}p(y_{i}|y_{1},\\cdots,y_{i-1}))^{\\alpha}, where α𝛼\\alpha is a hyperparameter balancing slmsubscript𝑠lms_{\\text{lm}} with other scorers in (1). In fact, we use the vocabulary of GPT2 with bype-pair encoding (BPE), and yisubscript𝑦𝑖y_{i} here is a token after BPE segmentation. Our GPT2 is fine-tuned with non-parallel in-domain corpora to learn the specificity of a task. Semantic scorer (ssemanticsubscript𝑠semantics_{\\text{semantic}}). In this part, we extend the semantic scorers in [ref]24 with a RoBERTa . Fine-tuning details are presented in Appendex A. Compared with autoregressive GPT2 used for fluency evaluation, RoBERTa is pretrained by masked language modeling, and is better at feature representation. Let x=(x1,⋯,xm)xsubscript𝑥1⋯subscript𝑥𝑚\\mathrm{x}=(x_{1},\\cdots,x_{m}) be a sentence. RoBERTa computes a contexualized representation of a word in the sentence as RoBERTa​(xi,x)RoBERTasubscript𝑥𝑖x\\text{RoBERTa}(x_{i},\\mathrm{x}). A word-level semantic scorer evaluates how much keyword information (detected by Rake ) is preserved, given by the least matched keyword of xx\\mathrm{x}: A sentence-level semantic scorer evaluates the cosine similarity of two sentence vectors ssent​(y,x)=𝒚⊤​𝒙∥𝒚∥𝒙∥s_{\\text{sent}}(\\mathrm{y},\\mathrm{x})=\\frac{\\bm{y}^{\\top}\\bm{x}}{\\|\\bm{y}\\,\\|\\bm{x}\\|}, where the sentence vector is given by the RoBERTa feature of the padded token [BOS] at the beginning end of a sentence, i.e., 𝒙=RoBERTa​([BOS],x)𝒙RoBERTa[BOS]x\\bm{x}=\\text{RoBERTa}(\\text{[BOS]},\\mathrm{x}) and 𝒚𝒚\\bm{y} is computed analogously. Finally, the semantic scorer is the product of both word- and sentence-level scores as where β𝛽\\beta and γ𝛾\\gamma are weighting hyperparameters. Task-specific scorers. We apply tgls to two tasks: paraphrasing and text formalization. For paraphrasing, the goal is to generate a semantically similar but lexically different sentence. Previous work [ref]24 uses the BLEU score to penalize the n𝑛n-gram overlapping between the output and input: sparaphrase(y,x)=(1−BLEU(y,x))δs_{\\text{paraphrase}}(\\mathrm{y},\\mathrm{x})=(1-\\operatorname{BLEU(\\mathrm{y},\\mathrm{x}))^{\\delta}}, which is also adopted in our work. Here, δ𝛿\\delta is a weighting hyperparameter for the task-specific scorer. For text formalization, the goal is to transform an informal sentence to the formal style , which is an example of text style transfer. We follow the setting of most text style-transfer work , where we assume the style labels are available, but no parallel supervision is given.\nWe train a classifier that predicts the probability of the style, also based on the RoBERTa features. Then, the task-specific scorer becomes sformality​(y)=(p​(formal|RoBERTa​([BOS],y)))δsubscript𝑠formalityysuperscript𝑝conditionalformalRoBERTa[BOS]y𝛿s_{\\text{formality}}(\\mathrm{y})=(p(\\text{formal}\\,|\\,\\text{RoBERTa}(\\text{[BOS]},\\mathrm{y})))^{\\delta},\nwhere δ𝛿\\delta is the weighting hyparaparameter for this task. Proposal of local edits. At a step t𝑡t of SA search, a new candidate y′superscripty′\\mathrm{y}^{\\prime} is proposed from y(t)superscripty𝑡\\mathrm{y}^{(t)} by local editing. SA randomly picks a position to edit, as well as one of the following edits: Replace, Insert, and Delete. For Replace, the model suggests a candidate word at xisubscript𝑥𝑖x_{i} based on the posterior distribution induced by s​(y|x)𝑠conditionalyxs(\\rm{y}|\\rm{x}). For efficiency concerns, previous work [ref]29 [ref]24 evaluates top-K𝐾K candidate words, suggested by a forward and backward language model. In our work, we adopt RoBERTa to evaluate the posterior probability of a word, where the word embedding layer of RoBERTa at this slot is randomly masked.\nThe Insert edit also suggests a word from the posterior, predicting a word given the newly added [MASK] token and the context. This complies with RoBERTa’s pretraining criteria of masked language modeling and is able to suggest high-quality candidate words. The Delete operator simply removes the word at a chosen position. In text formalization, we have local edits based on a set of rules, e.g., “we are” substituting “we’re.”, which are retrieved from PPDB. Previous sequence-to-sequence approaches on this task adopt manually designed rules as a preprocessing step . Our unsupervised tgls, on the other hand, can easily make use of the off-the-shelf resources, since it can filter out the noise by rejecting the bad candidates. In short, the SA search component in our tgls mainly follows [ref]24, but we re-design the scoring functions and the proposals. The main focus of this paper is to couple search and learning, especially the methods of training a machine learning model that learns from the search results, as follows.\n\nReference markers found: [29]\n\nContext windows for each [ref]:\n[ref]29: The search-based text generation [ref]29 [ref]24 relies on a heuristic-based objective function s​(y|x)𝑠conditionalyxs(\\rm y|\\rm x) that (roughly) evaluates the quality of an output sequence yy\\rm y given the input xx\\rm x (usually,\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 29,\n            \"titles\": [\n                \"Unsupervised Sentence Simplification Using Deep Semantics\",\n                \"Unsupervised opinion summarization with noising and denoising\",\n                \"Generating Sentences from Disentangled Syntactic and Semantic Spaces\",\n                \"Generating sentences from a continuous space\",\n                \"MeanSum : A Neural Model for Unsupervised Multi-Document Abstractive Summarization\",\n                \"Learning as search optimization: Approximate large margin methods for structured prediction\",\n                \"An Empirical Comparison on Imitation Learning and Reinforcement Learning for Paraphrase Generation\",\n                \"Paraphrase generation with latent bag of words\",\n                \"Style transfer in text: Exploration and evaluation\",\n                \"An empirical investigation of global and local normalization for recurrent neural sequence models using a continuous relaxation to beam search\",\n                \"Zero-Shot Paraphrase Generation with Multilingual Language Models\",\n                \"A Deep Generative Framework for Paraphrase Generation\",\n                \"Training products of experts by minimizing contrastive divergence\",\n                \"Toward Controlled Generation of Text\",\n                \"Auto-encoding variational bayes\",\n                \"Optimization by simulated annealing\",\n                \"Learning to Search Better than Your Teacher\",\n                \"Iterative Edit-Based Unsupervised Sentence Simplification\",\n                \"Cross-lingual Language Model Pretraining\",\n                \"Unsupervised Machine Translation Using Monolingual Corpora Only\",\n                \"Phrase-Based & Neural Unsupervised Machine Translation\",\n                \"Delete, Retrieve, Generate: A Simple Approach to Sentiment and Style Transfer\",\n                \"Paraphrase generation with deep reinforcement learning\",\n                \"Unsupervised paraphrasing by simulated annealing\",\n                \"RoBERTa: A Robustly Optimized BERT Pretraining Approach\",\n                \"A Dual Reinforcement Learning Framework for Unsupervised Text Style Transfer\",\n                \"Paraphrasing revisited with neural machine translation\",\n                \"An augmented template-based approach to text realization\",\n                \"CGMH: Constrained Sentence Generation by Metropolis-Hastings Sampling\",\n                \"Ppdb 2.0: Better paraphrase ranking, fine-grained entailment relations, word embeddings, and style classification\",\n                \"Style Transfer Through Back-Translation\",\n                \"Exploring diverse expressions for paraphrase generation\",\n                \"Language models are unsupervised multitask learners\",\n                \"Sequence Level Training with Recurrent Neural Networks\",\n                \"Dear Sir or Madam, May I Introduce the GYAFC Dataset: Corpus, Benchmarks and Metrics for Formality Style Transfer\",\n                \"Automatic keyword extraction from individual documents\",\n                \"Discrete Optimization for Unsupervised Sentence Summarization with Word-Level Extraction\",\n                \"Style Transfer from Non-Parallel Text by Cross-Alignment\",\n                \"A general reinforcement learning algorithm that masters chess, shogi, and Go through self-play\",\n                \"Joint learning of a dual SMT system for paraphrase generation\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]29 based on the context and research area of Unsupervised Text Generation by Learning from Search. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}