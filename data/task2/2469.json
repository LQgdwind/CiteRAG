{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: CCGL: Contrastive Cascade Graph Learning\n\nPaper Abstract: \n\nPaper Section Text:\nWe overview four main streams of relevant literature and position our contribution in that context. Information cascade modeling.\nThis has been a long-standing and critical problem in the field of information diffusion and social network analysis . Most of existing works on information cascades can be categorized into three distinct groups: Feature-based models characterize information cascades in different aspects by hand-crafted features, e.g., temporal and structural characteristics, textual and visual content, metadata and historical behaviors 0 1. Temporal models mainly study the time-series data, incorporated by additional social information. They adopt various stochastic processes to model and simulate the information diffusion in networks, in a statistical and generative manner 2 3; Deep learning-based models are utilizing state-of-the-art techniques from neural networks to learn expressive representations of cascades 4 5.\nAmong them many adopted techniques from recurrent and graph neural networks.\nAlthough they have achieved promising results in comparison to more traditional approaches, relying on supervised models still need extensive annotated labels and lack of generalization capability. Self-supervised learning (SSL)\nleverages data itself as supervision and therefore exploits the massive unlabeled data for improving representation learning and downstream tasks. Existing SSL methods usually follow a paradigm called contrastive learning, which learns representations by contrasting positive and negative instances.\nFor example, discriminative approaches have been proposed, mainly studying the design of pretext tasks and contrastive losses: Pretext tasks are generally for recovering noisy data, predicting neighboring words, or transforming the original data. Examples include instance discrimination between positive and negative samples 6 7, global-local contrast for relative position prediction 8 or mutual information maximization 9  .\nThese pretext tasks are used to learn and extract useful data representations, but not for actual demands. Contrastive losses focus on the similarity between positive and negative samples and are critical for learning good representations, along with negative sampling strategies.\nPrevious work have come up with many learning mechanisms, e.g., end-to-end 9, memory mechanism 6, projection head, augmentation and fine-tuning [ref]22 . Data augmentation on graphs.\nOne of the critical components in SSL is data augmentation, used to improve the capability of model generalization and performance. Augmentation procedures are used in NLP and CV domains \nand previous works have investigated various strategies for data augmentations  8.\nUnlike texts and images, graph data is usually non-Euclidean, sparse, and complex. Graphs can be directed, dynamic, attributed, and heterogeneous – which further increases the complexity of their modeling.\nSince graph data have no analogous augmentations within languages and images (due to their irregularities), there are very few works that tackle the graph data augmentation problem. How to define an effective graph augmentation strategy is a challenging and non-trivial task to retrieve general knowledge from graph structures under an unsupervised learning paradigm. Existing augmentation procedures for images, such as rotation, random crop and resize, cutout, color distortion, Gaussian blur, etc. [ref]22, cannot be directly applied to graph data for pre-training and fine-tuning . The most straightforward way to augment graph data is adding or removing nodes and/or edges.\nHowever, such operations may confront multiple obstacles , including: how to choose the target nodes/edges to add or remove, how to label the newly added nodes/edges, how to process the features associated with these nodes/edges, etc.\nThere are few attempts in the existing literature, such as removing edges at random and covering node features   to prevent over-fitting and over-smoothing; relieving the over-smoothing for GNNs by adding or removing edges between nodes based on model predictions ; utilizing graph auto-encoder as an edge predictor module to add “missing” edges and remove “noisy” edges .\nGCC designs a pre-training task as a sub-graph instance discrimination. An r𝑟r-ego network was augmented by random walk with restart, sub-graph induction, and anonymization, to capture general and transferable patterns in the graph structure .\nAugmenting graphs by manipulate (i) node features, e.g., masking or adding Gaussian noise; and (ii) graph structures, e.g., adding/removing connectivities or sub-sampling . In CCGL, we design a new data augmentation strategy specifically for information cascade graph.\nDifferent from existing graph data augmentations which cannot be directly used for cascade graphs (as we will explain in Section 4.2), we simulate the information diffusion process to create new graph views as re-diffusion, and then contrast them for cascade representation learning.\nThe unique aspects of our augmentation strategy are:\n(i) they are suitable for cascade graphs, while most of the previous models are not;\n(ii) we add and remove both edges and nodes, as well as features in the graph; and (iii) we do not study node/graph classification but information cascade prediction. Pre-training and transfer learning on graphs.\nOne important application of unsupervised graph pre-training is to learn a transferrable graph encoder for downstream graph-based tasks. While commonly seen in CV and NLP domains, there are relatively few work aiming to tackle the graph pre-training and transferring problems  , given the fact that it faces several challenges such as designing graph pre-training strategies and mitigating negative transfer.\nA GNN-based strategy proposed in combines both node- and graph-level pre-training to handle out-of-distribution samples when transferring.\nUDA-GCN developed by  jointly integrates local and global consistency and facilitates knowledge transferring across graphs.\nGPT-GNN  is another generative GNN framework that uses attribute/edge generations for pre-training on large-scale graphs. In this work, CCGL has largely expanded the training data including labeled, unlabeled, and augmented cascade graphs from different data domains, enabling the model to learn general and robust graph representations from abundant data, and then transferring the learned knowledge to downstream prediction tasks, at where the task-specific labeled data are scarce.\nCCGL does not rely on special pretext tasks nor domain expertise and can be easily extended to other cascade graph applications.\n\nReference markers found: [22]\n\nContext windows for each [ref]:\n[ref]22: along with negative sampling strategies.\nPrevious work have come up with many learning mechanisms, e.g., end-to-end 9, memory mechanism 6, projection head, augmentation and fine-tuning [ref]22 . Data augmentation on graphs.\nOne of the critical components in SSL is data augmentation, used to improve the capability of model generalization and performance. Augmentation procedures are\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 22,\n            \"titles\": [\n                \"A Simple Framework for Contrastive Learning of Visual Representations\",\n                \"A Survey of Information Cascade Analysis: Models, Predictions, and Recent Advances\",\n                \"Mobility network models of covid-19 explain inequities and inform reopening\",\n                \"Full-scale information diffusion prediction with reinforced recurrent networks\",\n                \"DeepCas: an End-to-end Predictor of Information Cascades\",\n                \"Fully exploiting cascade graphs for real-time forwarding prediction\",\n                \"DeepHawkes: Bridging the gap between prediction and understanding of information cascades\",\n                \"Unsupervised domain adaptive graph convolutional networks\",\n                \"Auto-encoding variational bayes\",\n                \"Strategies for Pre-training Graph Neural Networks\",\n                \"Can cascades be predicted?\",\n                \"A comparative study of transactional and semantic approaches for predicting cascades on Twitter\",\n                \"SEISMIC: A Self-Exciting Point Process Model for Predicting Tweet Popularity\",\n                \"Using survival theory in early pattern detection for viral cascades\",\n                \"Variational information diffusion for probabilistic cascades prediction\",\n                \"Popularity Prediction on Social Platforms with Coupled Graph Neural Networks\",\n                \"Momentum Contrast for Unsupervised Visual Representation Learning\",\n                \"Unsupervised Feature Learning via Non-Parametric Instance Discrimination\",\n                \"Self-Supervised Learning of Pretext-Invariant Representations\",\n                \"Learning representations by maximizing mutual information across views\",\n                \"Deep Graph Infomax\",\n                \"Representation Learning with Contrastive Predictive Coding\",\n                \"Big Self-Supervised Models are Strong Semi-Supervised Learners\",\n                \"AutoAugment: Learning Augmentation Strategies from Data\",\n                \"Data Augmentation for Graph Neural Networks\",\n                \"DropEdge: Towards Deep Graph Convolutional Networks on Node Classification\",\n                \"Measuring and Relieving the Over-smoothing Problem for Graph Neural Networks from the Topological View\",\n                \"GCC: Graph Contrastive Coding for Graph Neural Network Pre-Training\",\n                \"Contrastive Multi-View Representation Learning on Graphs\",\n                \"Transfer learning via learning to transfer\",\n                \"GPT-GNN: Generative Pre-Training of Graph Neural Networks\",\n                \"Information diffusion in online social networks: A survey\",\n                \"Information diffusion prediction via recurrent cascades convolution\",\n                \"InfoGraph: Unsupervised and semi-supervised graph-level representation learning via mutual information maximization\",\n                \"Robust dynamic classes revealed by measuring the response function of a social system\",\n                \"Improved Baselines with Momentum Contrastive Learning\",\n                \"Learning deep representations by mutual information estimation and maximization\",\n                \"Virality prediction and community structure in social networks\",\n                \"ArnetMiner: Extraction and mining of academic social networks\",\n                \"node2vec: Scalable Feature Learning for Networks\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]22 based on the context and research area of CCGL: Contrastive Cascade Graph Learning. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}