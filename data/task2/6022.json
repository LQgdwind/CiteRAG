{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Partial Correlation based Deep Visual Representation for Image Classification\n\nPaper Abstract: \n\nPaper Section Text:\nWe evaluate the performance of the proposed iSICE and compare it with its covariance-based competitors. We also include comparisons with our baseline, the inverse covariance matrix, called precision matrix444The use of precision matrix (and partial correlations) as a visual representation in place of the sample-based covariance matrix 𝚺𝚺\\mathbf{\\Sigma} is also our minor but novel proposition. We obtain it via Alg. 1 from which we recover the inverse square root 𝐐𝐐\\mathbf{Q} and then 𝛀=𝚺−1=𝐐𝐐⊤/trace​(𝚺)𝛀superscript𝚺1superscript𝐐𝐐toptrace𝚺\\mathbf{\\Omega}\\!=\\!\\mathbf{\\Sigma}^{-1}\\!\\!=\\!\\mathbf{Q}\\mathbf{Q}^{\\top}\\!/\\mathrm{trace}(\\mathbf{\\Sigma}). (for simplicity denoted as Precision 𝛀𝛀\\mathbf{\\Omega} in experiments). In contrast to iSICE which represents a sparse graph, precision matrix is used as a baseline as it represents a graph without imposed sparsity. The covariance representations (denoted with COV) are widely used in literature   [ref]24. We use the Newton-Schulz iteration555In contrast to our precision matrix 𝛀=𝚺−1=𝐐𝐐⊤/trace​(𝚺)𝛀superscript𝚺1superscript𝐐𝐐toptrace𝚺\\mathbf{\\Omega}\\!=\\!\\mathbf{\\Sigma}^{-1}\\!\\!=\\!\\mathbf{Q}\\mathbf{Q}^{\\top}\\!/\\mathrm{trace}(\\mathbf{\\Sigma}) from Alg. 1, iSQRT-COV uses 𝚺12=𝐘N/trace​(𝚺)superscript𝚺12subscript𝐘𝑁trace𝚺\\mathbf{\\Sigma}^{\\frac{1}{2}}\\!\\!=\\!\\mathbf{Y}_{N}/\\sqrt{\\mathrm{trace}(\\mathbf{\\Sigma})} from Alg. 1. for computing the matrix square root normalised covariance (iSQRT-COV) due to efficiency of the Newton-Schulz iteration with GPUs, as well as good empirical results reported by multiple authors  . Backbones.\nWe choose VGG-16  and ResNet-50  CNNs as our backbones for the majority of experiments (we also include the VGG-19, ResNet-101, ResNeXt-101 , and latest ConvNext-T 0, Swin-T and Swin-B [ref]29 in the main table). VGG-16 and ResNet-50 are popular in\nimage classification (including fine-grained benchmarks). We choose these two backbones in order to better understand the performance of our methods compared to baselines in the common testbed (the same backbones and experimental settings). Given an input image, we obtain a set of feature channels shaped as a tensor after the 1×1111\\times 1 convolution operation. Using these feature channels, we compute the iSICE, iSQRT-COV and Precision 𝛀𝛀\\mathbf{\\Omega} representations. Since these representations are symmetric, we only use the upper-triangular entries (and the diagonal entries) passed to a fully-connected layer to obtain classification scores. Hyper-parameters. There are three hyper-parameters associated with iSICE: sparsity constant λ𝜆\\lambda, learning rate η𝜂\\eta and number of iterations N𝑁N. We experiment with a large range of values for a better understanding, i.e., λ∈𝜆absent\\lambda\\!\\in{1.0, 0.5, 0.1, 0.01, 0.001, 0.0001, 0.00001}, η∈𝜂absent\\eta\\!\\in{0.001, 0.01, 0.1, 1.0, 5.0, 10.0, 20.0}, and N∈𝑁absentN\\!\\in{1, 5, 10}. Since the total combination of hyper-parameters in the table is 147, we choose the median values of each hyper-parameter range (highlighted in bold) and keep them throughout experiments on all datasets.\nAppendix C studies the impact of hyper-parameters on results. Overview of results. Table\n1 shows the performance of several COV models (e.g., popular iSQRT-COV), and our Precision 𝛀𝛀\\mathbf{\\Omega} and iSICE models.\nThe rightmost column summarizes the average performance over one scene and three fine-grained image classification benchmarks.\nIt is clear that on average, iSICE outperforms MPN-COV, iSQRT-COV, DeepCOV, and DeepKSPD, etc. iSICE also outperforms our baseline Precision 𝛀𝛀\\mathbf{\\Omega}. This achievement is consistent in all four backbones. It is interesting to see that except a few cases, the inverse covariance method, i.e., Precision 𝛀𝛀\\mathbf{\\Omega}, performs slightly better than the covariance method, i.e., iSQRT-COV. This improved performance highlights the effectiveness of characterising partial correlations of features with inverse covariance instead of pairwise correlations of features based on the sample covariance. Our iSICE method makes the inverse covariance estimation more robust and reliable by enforcing sparsity, as demonstrated by improved performance over Precision 𝛀𝛀\\mathbf{\\Omega} baseline. However, there may be some situations when Precision 𝛀𝛀\\mathbf{\\Omega} outperforms iSICE (e.g., MIT with VGG-16 backbone). Notice that iSICE can be considered as sparse precision matrix. When N=0𝑁0N=0 in Alg. 2, iSICE reduces to Precision 𝛀𝛀\\mathbf{\\Omega}. In further experiments we show that once the size of matrix is increased, iSICE does outperform Precision 𝛀𝛀\\mathbf{\\Omega}. Table 2 corroborates that iSICE significantly outperforms Precision 𝛀𝛀\\mathbf{\\Omega} and iSQRT-COV. Robustness of iSICE to Hyper-parameters.\nWe have conducted experiments with the hyper-parameter range given in Section 4.1.\nAppendix C shows that the performance of iSICE remains stable across a range of values. Detailed comparisons with SPD-based SOTA models.\nTable 1 compares the performance of iSICE to several prior works.\nWe first compare our VGG-16 backbone based iSICE with BCNN, CBP, LRBP, KP, HIHCA, Improved BCNN, SMSO, MPN-COV, iSQRT-COV, DeepCOV, DeepKSPD, RUN, FCBN and TKPF methods. The MPN-COV and iSQRT-COV methods use backbones pre-trained with second-order pooling. For fair comparison with iSICE, we re-run those methods on our machine with the same backbone and evaluation protocols as ours. iSICE outperforms all existing methods on fine-grained datasets. On MIT dataset, our performance is better than CBP, BCNN and iSQRT-COV. iSICE could outperform DeepKSPD and other methods on MIT if a large-dimensional matrix similar to those is used (see Table 3). Secondly, we compare our ResNet-50 backbone based iSICE with CBP, KP, SMO, iSQRT-COV, DeepCOV-ResNet and TKPF methods. iSICE achieves better performance than existing methods on both Airplane and Cars datasets. DeepCOV-ResNet uses 1024×1024102410241024\\times 1024-dimensional matrix which is four times larger than ours. TKPF uses an advanced feature projection to reduce the CNN feature channels and we use a simple linear projection with 1×1111\\times 1 convolution. However, on average, we are still better than DeepCOV-ResNet and TKPF. Thirdly, we integrate iSICE with the popular VGG-19, ResNet-101, ResNeXt-101, ConvNext-T 0, Swin-T and Swin-B [ref]29 backbones pre-trained on ImageNet-1K, and compare their performance with iSQRT-COV and Precision 𝛀𝛀\\mathbf{\\Omega} (Alg. 1).\niSICE outperforms iSQRT-COV and Precision 𝛀𝛀\\mathbf{\\Omega} methods across all datasets.\nThis highlights that SPD-based visual representations (1) are still relevant for modern powerful classification backbones and (2) they improve results on large-scale datasets. Ablations on the size of Sparse Inverse Matrix.\nTable 3 shows results for 512×512512512512\\times 512 vs. 256×256256256256\\times 256 matrix size (we keep the hyper-parameters fixed).\nTo produce 512×512512512512\\times 512 dim. matrix, (1) from VGG-16, we simply remove the 1×1111\\times 1 convolution layer to obtain 512 feature channels and (2) from ResNet-50, we set the output channels of 1×1111\\times 1 convolution layer to 512. Generally, switching to a larger matrix improves the performance, e.g., on MIT our iSICE gains between 1.2 and 2.4% (sparsity helps with a larger matrix).\nOn average, all methods improved performance by switching to a larger matrix at the computational expense. See runtimes in Table 5 and memory consumption in Appendix E. Finally, Table 3 also shows that iSICE performs much better than SICE (based on ADMM solver ) computed over pre-extracted features. Table 5 shows that iSICE is 3×3\\times faster. SICE is almost intractable on larger datasets. This validates our claim that learning sparse inverse covariance matrix end-to-end produces robust visual representation. iSICE with learning rate and sparsity modulators. As iSICE\ntrades between log​det(⋅)⋅\\log\\det(\\cdot) (changes rapidly) and the ℓ1subscriptℓ1\\ell_{1} norm (changes linearly), optimizing Eq. (1) with PGD may struggle with non-optimal learning rates and sparsity. Thus, we design a simple modulator that updates β𝛽\\beta in Alg. 2 by setting β:=β⋅κassign𝛽⋅𝛽𝜅\\beta:=\\beta\\!\\cdot\\!\\kappa in lines 10, where\nκ=τ+2​Sigm​(FC​(𝐗𝟏/n))𝜅𝜏2SigmFC𝐗𝟏𝑛\\kappa\\!=\\!\\tau\\!+\\!2\\text{Sigm}\\big{(}\\text{FC}(\\mathbf{X}\\mathbf{1}/n)\\big{)},\nSigm​(⋅)Sigm⋅\\text{Sigm}(\\cdot) is a sigmoid, and FC layer is of d×1𝑑1d\\times 1 size.\nWe also add a penalty −γ​(κ−1)2𝛾superscript𝜅12-\\gamma(\\kappa\\!-\\!1)^{2} to the classification loss to encourage κ𝜅\\kappa to be close to 1 unless classification loss gets smaller for κ≠1𝜅1\\kappa\\!\\neq\\!1 while incurring the above penalty. We set γ=0.0001𝛾0.0001\\gamma\\!=\\!0.0001. We use the above modulator (we do not claim this is the most optimal design) as a tool akin to ModGrad 6. τ=0.01𝜏0.01\\tau\\!=\\!0.01 is a small offset to prevent zero learning rate. Another modulator with the same architecture is used to adapt sparsity parameter λ𝜆\\lambda. Table 4 shows that modulating the learning rate and sparsity on-the-fly helps iSICE. Experiments on dense vs. sparse structure estimation w.r.t. sample size. Below we randomly generate a dense or sparse inverse covariance matrix 𝐏𝐏{\\mathbf{P}} (size 100×100100100100\\!\\times\\!100) and sample various amount of data from the resulted normal distribution (via mvnrnd(⋅⋅\\cdot) in Matlab) to get its estimate 𝐏^^𝐏\\hat{\\mathbf{P}}. Fig. 3 (left) shows estimation error ‖𝐏^−𝐏‖Fsubscriptnorm^𝐏𝐏𝐹\\|\\hat{\\mathbf{P}}-{\\mathbf{P}}\\|_{F} for dense structure. Sparse and non-sparse estimation (by SICE and MLE, resp.) show high errors in low sample regime. For the sparse structure in Fig. 3 (right), sparse estimation works better.\n\nReference markers found: [24]\n\nContext windows for each [ref]:\n[ref]24: represents a sparse graph, precision matrix is used as a baseline as it represents a graph without imposed sparsity. The covariance representations (denoted with COV) are widely used in literature   [ref]24. We use the Newton-Schulz iteration555In contrast to our precision matrix\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 24,\n            \"titles\": [\n                \"Improved Bilinear Pooling with CNNs\",\n                \"Differentiable convex optimization layers\",\n                \"NetVLAD: CNN architecture for weakly supervised place recognition\",\n                \"Distributed optimization and statistical learning via the alternating direction method of multipliers\",\n                \"Higher-order integration of hierarchical convolutional activations for fine-grained visual categorization\",\n                \"Describing textures in the wild\",\n                \"Kernel pooling for convolutional neural networks\",\n                \"Optimal statistical decisions\",\n                \"Cvxpy: A python-embedded modeling language for convex optimization\",\n                \"Deepkspd: Learning kernel-matrix-based spd representation for fine-grained image recognition\",\n                \"Sparse inverse covariance estimation with the graphical lasso\",\n                \"Compact bilinear pooling\",\n                \"The elements of statistical learning: data mining, inference, and prediction, volume 2\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Functions of matrices: theory and computation\",\n                \"Learning with structured sparsity\",\n                \"Matrix backpropagation for deep networks with structured layers\",\n                \"Low-rank Bilinear Pooling for Fine-Grained Classification\",\n                \"Tensor Representations for Action Recognition\",\n                \"Higher-order occurrence pooling on mid-and low-level features: Visual concept detection\",\n                \"Power Normalizations in Fine-grained Image, Few-shot Image and Graph Classification\",\n                \"3d object representations for fine-grained categorization\",\n                \"Neural networks: a comprehensive foundation by simon haykin, macmillan, 1994, isbn 0-02-352781-7\",\n                \"Towards Faster Training of Global Covariance Pooling Networks by Iterative Matrix Square Root Normalization\",\n                \"Is Second-order Information Helpful for Large-scale Visual Recognition?\",\n                \"Second-order Democratic Aggregation\",\n                \"Bilinear cnn models for fine-grained visual recognition\",\n                \"Bilinear convolutional neural networks for fine-grained visual recognition\",\n                \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n                \"A ConvNet for the 2020s\",\n                \"Decoupled Weight Decay Regularization\",\n                \"Fine-grained visual classification of aircraft\",\n                \"Recognizing indoor scenes\",\n                \"Redro: Efficiently learning large-sized spd visual representation\",\n                \"Projected gradient descent for the lasso\",\n                \"On modulating the gradient for meta-learning\",\n                \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n                \"Why approximate matrix square root outperforms accurate svd in global covariance pooling?\",\n                \"Contrastive Multiview Coding\",\n                \"The iNaturalist Species Classification and Detection Dataset\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]24 based on the context and research area of Learning Partial Correlation based Deep Visual Representation for Image Classification. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}