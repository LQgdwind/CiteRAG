{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Algorithmic progress in language models\n\nPaper Abstract: \n\nPaper Section Text:\nThe field of language modeling has seen rapid advances, with recent large language models (LLMs) demonstrating strong performance in domains such as programming [ref]30 , mathematics  [ref]48, and a wide range of standardized tests . These capabilities have enabled LLMs to support a range of commercial and scientific applications [ref]24. A key driver of this progress has been algorithmic improvements, which result in more efficient use of resources such as compute and training data. These include changes in model architectures, optimization algorithms, and software frameworks. Many surveys of progress in language modeling describe specific innovations in detail, such as the transformer architecture, layer normalization, IO-aware exact attention algorithms such as FlashAttention, positional embeddings such as RoPE, and innovations in the attention mechanism such as multi-query attention      . In addition, data quality improvements, such as training on high-quality textbook examples () and data pruning ( ), can enable LLMs to be trained on substantially smaller datasets. The rapid scaling of compute for training language models , coupled with insights from scaling laws  , suggests that a substantial portion of the improvement in language model capabilities can be attributed to the increased use of computational resources. The key question we wish to answer is thus: How much of recent progress in language models has come from algorithmic improvements during pre-training, and how much has been from scaling up models and datasets? Related questions have been investigated in other domains of scientific computing, such as linear programming, SAT solvers, and computer chess, among others (see Figure 1). While machine learning resists traditional computational complexity analyses, it is possible to quantify algorithmic progress in terms of compute savings: How much less compute is required to attain some fixed level of performance over time? That is, we might say that an algorithm or architecture is two times better than another one if it achieves the same result on a benchmark with half the compute. In this paper, we quantify pre-training algorithmic improvements by following the approach first presented by  in computer vision. Note that this is distinct from algorithmic progress in general, since we are not considering â€œpost-training enhancements\", such as chain-of-thought prompting, improvements to fine-tuning techniques, or the integration of search-based methods, which can significantly improve the performance of already-trained models on downstream tasks (e.g. programming or solving mathematics problems) . To this end, we produce a dataset of over 200 language models that have been evaluated, by others and by ourselves, on a range of popular language modeling datasets. We then use this data to estimate the rate of algorithmic progress. The language modeling datasets we focus on are Wikipedia (WikiText-103 and WikiText-2 ) as well as Penn Treebank . We focus on evaluations on these datasets because these represent high-quality text data that have been used for many years to evaluate language models. Focusing on established benchmarks used throughout the development of neural language models provides continuity to compare models old and new.\n\nReference markers found: [30]\n\nContext windows for each [ref]:\n[ref]30: The field of language modeling has seen rapid advances, with recent large language models (LLMs) demonstrating strong performance in domains such as programming [ref]30 , mathematics  [ref]48, and a wide range of standardized tests . These capabilities have enabled LLMs to support a range of commercial and scientific applications [ref]24. A key driver of\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 30,\n            \"titles\": [\n                \"World Model on Million-Length Video And Language With RingAttention\",\n                \"Neuro-symbolic language modeling with automaton-augmented retrieval\",\n                \"Adaptive Input Representations for Neural Language Modeling\",\n                \"A brief history of linear and mixed-integer programming computation\",\n                \"Language Models are Few-Shot Learners\",\n                \"PaLM: Scaling Language Modeling with Pathways\",\n                \"Training Verifiers to Solve Math Word Problems\",\n                \"FlashAttention: Fast and Memory-Efficient Exact Attention with IO-Awareness\",\n                \"What a compute-centric framework says about AI takeoff speeds\",\n                \"AI capabilities can be significantly improved without expensive retraining\",\n                \"Measuring Progress in Deep Reinforcement Learning Sample Efficiency\",\n                \"Scaling Laws for Acoustic Models\",\n                \"Algorithmic progress in computer vision\",\n                \"A Time Leap Challenge for SAT-Solving\",\n                \"The Pile: An 800GB dataset of diverse text for language modeling\",\n                \"A framework for few-shot language model evaluation\",\n                \"Gemini 1.5: Unlocking multimodal understanding across millions of tokens of context\",\n                \"Mamba: Linear-Time Sequence Modeling with Selective State Spaces\",\n                \"Textbooks Are All You Need\",\n                \"Measuring the algorithmic efficiency of neural networks\",\n                \"Training Compute-Optimal Large Language Models\",\n                \"Towards Reasoning in Large Language Models: A Survey\",\n                \"Perplexity of fixed-length models\",\n                \"A Survey on Neural Network Language Models\",\n                \"Challenges and Applications of Large Language Models\",\n                \"Scaling Laws for Neural Language Models\",\n                \"Deep Neural Nets: 33 years ago and 33 years from now\",\n                \"Progress in mathematical programming solvers from 2001 to 2020\",\n                \"AlphaCode 2 Technical Report\",\n                \"Backpropagation applied to handwritten zip code recognition\",\n                \"Competition-Level Code Generation with AlphaCode\",\n                \"When Less is More: Investigating Data Pruning for Pretraining LLMs at Scale\",\n                \"Pointer Sentinel Mixture Models\",\n                \"Augmented Language Models: a Survey\",\n                \"Scaling Data-Constrained Language Models\",\n                \"GPT-4 Technical Report\",\n                \"GPT-4 Architecture, Infrastructure, Training Dataset, Costs, Vision, MoE\",\n                \"Language Models are Unsupervised Multitask Learners\",\n                \"Scaling Language Models: Methods, Analysis & Insights from Training Gopher\",\n                \"Estimating training compute of Deep Learning models\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]30 based on the context and research area of Algorithmic progress in language models. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}