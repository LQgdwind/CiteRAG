{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Multi-node Bert-pretraining: Cost-efficient Approach\n\nPaper Abstract: \n\nPaper Section Text:\nThe BERT language model  has significantly improved the state-of-the-art performance of many downstream NLP tasks such as language understanding and question answering. However, training BERT is computationally intensive due to its high model complexity and large amount of training data that needs to be processed to achieve the state-of-the-art model accuracy. There are 110M parameters in BERT base and 340M parameters in BERT large, and, due to the unsupervised nature of the algorithm, the model is trained on an abundance of unlabeled data over many epochs, e.g., the BookCorpus dataset [ref]2 (800M words) and the English Wikipedia (2500M words) dataset were trained for 40 epochs in the original BERT model  . Nonetheless, with BERT being a Transformer-based language model , the stacked attention and fully-connected layers allow significantly more parallelism as compared to sequential models (e.g., LSTM RNN models [ref]4  [ref]6  ), as LSTM RNNs have a higher memory requirement that prevents the GPU to utilize its compute cores efficiently . This architectural advantage of BERT naturally provides opportunities to train BERT on multiple GPU/TPU devices, which reduces the training time linearly with the amount of hardware resource available. Nonetheless, machines that are capable of servicing such level of parallelism are usually very expensive and overly dedicated to computationally intensive workloads  0. For example, NVIDIA released its BERT pre-training results that took place on 32 interconnected DGX-1, DGX-2, or DGX-A100 workstations 1. The DGX machines are equipped with high-end GPUs, CPUs, and interconnects 2, and have a unit price ranging from $150K to $400K  3. Therefore, such a hardware setup requires an initial capital cost of around $4.8M to $12.8M. The capital cost to enable such experiment is not affordable for many researchers and research institutions despite the significant improvement in training time for the large models. In addition, the setup is over-powered to the routine computation needs of many typical ML users. For example, Vector Institute only averages 1.28 GPUs per job allocation over a month period for one of its major clusters equipped with 64 nodes, 8 GPUs each. This indicates a relatively low interest in academic users to utilize the high-speed interconnects and communication collectives provided by the system, which is unsuitable for the configuration of DGX machines and other high-performance workstations alike. Anecdotally, we also observe relatively low usage of advanced hardware features such as TensorCores 4 and mixed precision 5. We attribute this to two factors: (i) limited awareness among ML researchers/practitioners into advanced hardware features for ML and (ii) the necessity to deal with problems such overflow/underflow in FP16 computation 5 6 that require special software tricks 6 to be handled properly. Our work aims to exploit the same parallelism in BERT model, but distribute the workload over a much cheaper 32-node cluster available to us at Vector Institute connected with a commodity 10Gb/s network, where each node is equipped with 8 low-budget NVIDIA T4 GPUs 7. We apply multiple layers of optimization to improve both the single GPU performance and distributed performance over the network and over internal PCIe interconnect (used within a node). With a much lower hardware budget of approximately $600K and a much more generic compute environment, we are able to achieve a 70% weak scaling efficiency and complete BERT training in 12 days, which we consider to be a reasonable training time under an academic setting.\n\nReference markers found: [2]\n\nContext windows for each [ref]:\n[ref]2: base and 340M parameters in BERT large, and, due to the unsupervised nature of the algorithm, the model is trained on an abundance of unlabeled data over many epochs, e.g., the BookCorpus dataset [ref]2 (800M words) and the English Wikipedia (2500M words) dataset were trained for 40 epochs in the original BERT model  . Nonetheless, with BERT being a Transformer-based language model , the\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 2,\n            \"titles\": [\n                \"Attention Is All You Need\",\n                \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n                \"Aligning books and movies: Towards story-like visual explanations by watching movies and reading books\",\n                \"Long short-term memory\",\n                \"Google’s Neural Machine Translation System: Bridging the Gap between Human and Machine Translation\",\n                \"Sequence to Sequence Learning with Neural Networks\",\n                \"Neural Machine Translation by Jointly Learning to Align and Translate\",\n                \"Massive Exploration of Neural Machine Translation Architectures\",\n                \"Echo: Compiler-based GPU Memory Footprint Reduction for LSTM RNN Training\",\n                \"Energy and Policy Considerations for Deep Learning in NLP\",\n                \"Deep learning example\",\n                \"Nvidia dgx-1 with tesla v100 system architecture\",\n                \"Nvidia’s dgx-2: Sixteen tesla v100s, 30 tb of nvme, only $400k\",\n                \"NVIDIA Tensor Core Programmability, Performance & Precision\",\n                \"Mixed Precision Training\",\n                \"Mixed precision grappler optimizer\",\n                \"Nvidia t4\",\n                \"Language models are unsupervised multitask learners\",\n                \"XLNet: Generalized Autoregressive Pretraining for Language Understanding\",\n                \"RoBERTa: A Robustly Optimized BERT Pretraining Approach\",\n                \"Language Models are Few-Shot Learners\",\n                \"MLPerf Training Benchmark\",\n                \"Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour\",\n                \"Reducing BERT pre-training time from 3 days to 76 minutes\",\n                \"Deep Residual Learning for Image Recognition\",\n                \"Deep Speech 2: End-to-End Speech Recognition in English and Mandarin\",\n                \"Ai and compute\",\n                \"Measuring the Effects of Data Parallelism on Neural Network Training\",\n                \"One weird trick for parallelizing convolutional neural networks\",\n                \"Gpipe: Efficient training of giant neural networks using pipeline parallelism\",\n                \"Fast multi-gpu collectives with nccl\",\n                \"Nccl tests\",\n                \"Nvidia tesla v100 gpu architecture.\",\n                \"Wikiextractor\",\n                \"SQuAD: 100,000+ Questions for Machine Comprehension of Text\",\n                \"High level introduction to hdf5\",\n                \"Bridging nonlinearities and stochastic regularizers with gaussian error linear units\",\n                \"Layer Normalization\",\n                \"Apex (A PyTorch Extension)\",\n                \"Nvidia p100\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]2 based on the context and research area of Multi-node Bert-pretraining: Cost-efficient Approach. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}