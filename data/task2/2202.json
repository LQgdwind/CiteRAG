{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Score-Based Explanations in Data Management and Machine Learning: An Answer-Set Programming Approach to Counterfactual Analysis\n\nPaper Abstract: \n\nPaper Section Text:\nAnswer-set programs (ASPs) can be used to specify, compute and query S- and C-repairs. These ASPs are called “repair programs”. We will show the main ideas behind them by means of an example. For a more complete treatment see [ref]17 [ref]4. (example 2 cont.)  Let us consider the DC associated to the query 𝒬𝒬\\mathcal{Q} in (2):  κ​(𝒬):¬∃x​∃y​(S​(x)∧R​(x,y)∧S​(y)):𝜅𝒬𝑥𝑦𝑆𝑥𝑅𝑥𝑦𝑆𝑦\\kappa(\\mathcal{Q}):\\ \\neg\\exists x\\exists y(S(x)\\wedge R(x,y)\\wedge S(y)). The given database is inconsistent w.r.t. κ​(𝒬)𝜅𝒬\\kappa(\\mathcal{Q}), and we may consider its repairs.\n Its repair program contains the D𝐷D  as set of facts, now (only for convenience) with global tuple identifiers (tids) in the first attribute:  R​(1,a,b),𝑅1𝑎𝑏R(1,a,b), R​(2,c,d),R​(3,b,b),𝑅2𝑐𝑑𝑅3𝑏𝑏R(2,c,d),R(3,b,b), S​(4,a),𝑆4𝑎S(4,a), S​(5,c),S​(6,b)𝑆5𝑐𝑆6𝑏S(5,c),S(6,b). The main rule is the properly repair rule: Here, d is an annotation constant for “tuple deleted”.  This rule detects in its body (its right-hand side) a violation of the DC. If this happens, its head (its left-hand-side)\ninstructs the deletion of one of the tuples participating in the violation. The semantics of the program forces the choice of only one atom in the head (unless forced otherwise by other rules in the program, which does not occur in repair programs). Different choices will lead to different models of the program, and then, to different repairs. In order to “build” the repairs, we need the collection rules: Here,   s is an annotation for “tuple stays in repair”; and the rule collects the tuples in the original instance that have not been deleted. There is a one-to-one correspondence between the answer-sets of the repair program and the database repairs. Actually, a model M𝑀M of the program determines an S-repair D′superscript𝐷′D^{\\prime} of D𝐷D, as\nD′:={R​(c¯)|R′​(t,c¯,𝗌)∈M}assignsuperscript𝐷′conditional-set𝑅¯𝑐superscript𝑅′𝑡¯𝑐𝗌𝑀D^{\\prime}\\ :=\\ \\{R(\\bar{c})\\ |\\ R^{\\prime}(t,\\bar{c},{\\sf s})\\ \\in\\ M\\}.  Conversely, every S-repair can obtained in this way. In this example, the S-repair,  D1={R​(a,b),R​(c,d),R​(b,b),S​(a),S​(c)}subscript𝐷1𝑅𝑎𝑏𝑅𝑐𝑑𝑅𝑏𝑏𝑆𝑎𝑆𝑐D_{1}=\\{R(a,b),R(c,d),R(b,b),S(a),S(c)\\},  can be obtained from the model  M1={R′(1,a,b,𝗌),R′(2,c,d,𝗌),R′(3,b,b,𝗌),M_{1}=\\{R^{\\prime}(1,a,b,{\\sf s}),R^{\\prime}(2,c,d,{\\sf s}),R^{\\prime}(3,b,b,{\\sf s}), S′(4,a,𝗌),S′(5,c,𝗌),S′(6,b,𝖽),…}S^{\\prime}(4,a,{\\sf s}),S^{\\prime}(5,c,{\\sf s}),S^{\\prime}(6,b,{\\sf d}),\\ldots\\}. Actually, D1subscript𝐷1D_{1} is a C-repair. There is another S-repair, D2={R​(c,d),S​(a),S​(c),S​(b)}subscript𝐷2𝑅𝑐𝑑𝑆𝑎𝑆𝑐𝑆𝑏D_{2}=\\{R(c,d),S(a),S(c),S(b)\\}, that is associated to the model M2={R′(1,a,b,𝖽),R′(2,c,d,𝗌),R′(3,b,b,𝖽),M_{2}=\\{R^{\\prime}(1,a,b,{\\sf d}),R^{\\prime}(2,c,d,{\\sf s}),R^{\\prime}(3,b,b,{\\sf d}), S′​(4,a,𝗌),superscript𝑆′4𝑎𝗌S^{\\prime}(4,a,{\\sf s}), S′(5,c,𝗌),S′(6,b,𝗌),…}S^{\\prime}(5,c,{\\sf s}),S^{\\prime}(6,b,{\\sf s}),\\ldots\\}. This is not a C-repair.\n  □□\\Box For sets of DCs, repair programs can be made normal, i.e. non-disjunctive [ref]17.\nCQA becomes query answering under the cautious or skeptical semantics of ASPs (i.e. true in all repairs), which, for normal programs, is N​P𝑁𝑃{\\it N\\!P}-complete (in data).\nThis matches the data complexity of consistent QA under DCs (c.f. [ref]4 for references to complexity of CQA). Now, if we want to obtain from the program only those models that correspond to C-repairs, we can add  weak program constraints   (WCs), as shown in the example. (example 9 cont.)  Let us add to the program the WCs A (hard) program constraint in a program , usually denoted as leads to discarding all the models where the join in the RHS of the constraint holds.\nWeak program constraints, now preceded by a “:∼:absentsimilar-to:\\sim”, may be violated by a model, buy only the models where the number of violations of them is minimized are kept.  In our example, the WCs have the effect of\nminimizing the number of deleted tuples. In this way, we obtain as models only C-repairs. In our example, we obtain C-repair D1subscript𝐷1D_{1}, corresponding to model M1subscript𝑀1M_{1}, but not S-repair D2subscript𝐷2D_{2}, because it is associated to model M2subscript𝑀2M_{2} that is discarded due to the WCs.\n  □□\\Box As we already mentioned, C-repairs are those that can be used to obtain most-responsible actual causes. Accordingly, the latter task can be accomplished through the use of repair programs with weak constraints. We illustrate this by means of our example (c.f. [ref]8 for a detailed treatment). Actually, cause and responsibility computation become query answering on extended repair programs.\nIn them, causes will be represented by means of the tids we introduced for repair programs. (example 10 cont.)  The causes can be obtained through a new predicate, defined by the rules because they correspond to deleted tuples in a repair. If we want to obtain them, it is good enough to pose a query under the brave semantics, which returns what is true in some model:  Π⊧𝑏𝑟𝑎𝑣𝑒𝐶𝑎𝑢𝑠𝑒​(t)subscriptmodels𝑏𝑟𝑎𝑣𝑒Π𝐶𝑎𝑢𝑠𝑒𝑡\\Pi\\ \\models_{\\it brave}{\\it Cause}(t)? However, we would like to obtain contingency sets (for causes) and responsibilities. We will concentrate on maximum-responsibility causes and their (maximum) responsibilities, for which we assume the repair program has weak constraints, as above (c.f. [ref]8 for non-maximum responsibility causes). We first introduce a new binary predicate, to collect a cause and an associated contingency tuple (which is deleted together with the tuple-cause in a same repair). This predicate is of the form  𝐶𝑎𝑢𝐶𝑜𝑛​(t,t′)𝐶𝑎𝑢𝐶𝑜𝑛𝑡superscript𝑡′{\\it CauCon}(t,t^{\\prime}), indicating that t𝑡t  is actual cause, and t′superscript𝑡′t^{\\prime}  is a member of the former’s contingency set. For this, for each pair of predicates Pi,Pjsubscript𝑃𝑖subscript𝑃𝑗P_{i},P_{j}, not necessarily different, in the DC  κ​(𝒬)𝜅𝒬\\kappa(\\mathcal{Q}), we introduce the rule: This will make t′superscript𝑡′t^{\\prime} a member of t𝑡t’s contingency set.\n In our example,  we have the rule: where the inequality is not needed (for having different predicates), but also, among others, In model M1subscript𝑀1M_{1}, corresponding to C-repair D1subscript𝐷1D_{1}, where there is no pair of simultaneously deleted tuples, we have no 𝐶𝑎𝑢𝐶𝑜𝑛𝐶𝑎𝑢𝐶𝑜𝑛{\\it CauCon} atoms. Had model M2subscript𝑀2M_{2} not been discarded due to the WCs, we would find in it (actually in its extension) the atoms:   𝐶𝑎𝑢𝐶𝑜𝑛​(1,3)𝐶𝑎𝑢𝐶𝑜𝑛13{\\it CauCon}(1,3)  and  𝐶𝑎𝑢𝐶𝑜𝑛​(3,1)𝐶𝑎𝑢𝐶𝑜𝑛31{\\it CauCon}(3,1).\n  □□\\Box Contingency sets, which is what we want next, are sets, which in general are not returned as objects from an ASP. However, there are extensions of ASP and their implementations, such as DLV , that, trough aggregations, support set construction. This is the case of DLV-Complex  , that we have used in for running repair programs and their extensions. We do this as follows (in the program below , t,t′𝑡superscript𝑡′t,t^{\\prime} are variables). The auxiliary predicate in rule (2) is used to avoid a non-safe negation. That predicate is defined by rule (8). We are capturing here causes that do not have contingency companions, and then, they have an empty contingency set. Rule (9 is indeed redundant, but shows the main idea: a contingency companion of a cause is taken as element into the latter’s pre-contingency set.\nIn rule (11) we have an auxiliary predicate for the same reason as in the first rule. The main idea is to stepwise keep adding by means of set union (c.f. rule (4.3), a contingent element to a possibly partial contingency set, until there is nothing left to add.  These maximal contingency sets are obtained with rule (11). In each model of the program with WCs, these contingency sets will have the same minimum size, and will lead to maximum responsibility causes.\nResponsibility computation can be done, with numerical aggregation supported by DLV-Complex, as follows: The first rule gives us the (minimum) size, n𝑛n, of contingency sets, which leads to a responsibility of 11+n11𝑛\\frac{1}{1+n}.\n The responsibility of a (maximum responsibility) cause t𝑡t can be obtained through a query to the extended program:   Πe⊧𝑏𝑟𝑎𝑣𝑒𝑟ℎ𝑜​(t,X)​?subscriptmodels𝑏𝑟𝑎𝑣𝑒superscriptΠ𝑒𝑟ℎ𝑜𝑡𝑋?\\Pi^{e}\\ \\models_{{\\it brave}}{\\it rho}(t,X)?. ASP with WCs computation has exactly the required expressive power or computational complexity\nneeded for maximum-responsibility computation [ref]8.\n\nReference markers found: [17]\n\nContext windows for each [ref]:\n[ref]17: can be used to specify, compute and query S- and C-repairs. These ASPs are called “repair programs”. We will show the main ideas behind them by means of an example. For a more complete treatment see [ref]17 [ref]4. (example 2 cont.)  Let us consider the DC associated to the query 𝒬𝒬\\mathcal{Q} in (2):  κ​(𝒬):¬∃x​∃y​(S​(x)∧R​(x,y)∧S​(y)):𝜅𝒬𝑥𝑦𝑆𝑥𝑅𝑥𝑦𝑆𝑦\\kappa(\\mathcal{Q}):\\ \\neg\\exists x\\exists\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 17,\n            \"titles\": [\n                \"An Interpretable Model with Globally Consistent Explanations for Credit Risk\",\n                \"Computational Complexity\",\n                \"Consistent Query Answers in Inconsistent Databases\",\n                \"The Tractability of SHAP-Scores over Deterministic and Decomposable Boolean Circuits\",\n                \"Database Repairing and Consistent Query Answering\",\n                \"From Causes for Database Queries to Repairs and Model-Based Diagnosis and Back\",\n                \"Causes for Query Answers from Databases: Datalog Abduction, View-Updates, and Integrity Constraints\",\n                \"Repair-Based Degrees of Database Inconsistency\",\n                \"Specifying and Computing Causes for Query Answers in Databases via Database Repairs and Repair-Programs\",\n                \"Causality-based Explanation of Classification Outcomes\",\n                \"An ASP-Based Approach to Counterfactual Explanations for Classification\",\n                \"Declarative Approaches to Counterfactual Explanations for Classification\",\n                \"Classification and Regression Trees\",\n                \"Answer Set Programming at a Glance\",\n                \"Why and Where: A Characterization of Data Provenance\",\n                \"Computable Functions in ASP: Theory and Implementation\",\n                \"An ASP System with Functions, Lists,and Sets\",\n                \"The Consistency Extractor System: Answer Set Programs for Consistent Query Answering in Databases\",\n                \"Responsibility and Blame: A Structural-Model Approach\",\n                \"Complexity and Expressive Power of Logic Programming\",\n                \"On the Complexity of Cooperative Solution Concepts\",\n                \"The Shapley Value for Cooperative Games under Precedence Constraints\",\n                \"Classical Negation in Logic Programs and Disjunctive Databases\",\n                \"Knowledge Representation and Reasoning, and the Design of Intelligent Agents\",\n                \"Programming with Non-Determinism in Deductive Databases\",\n                \"Causes and Explanations: A Structural-Model Approach. Part I: Causes\",\n                \"A Modification of the Halpern-Pearl Definition of Causality\",\n                \"On the Measure of Conflicts: Shapley Inconsistency Values\",\n                \"The DLV System for Knowledge Representation and Reasoning\",\n                \"The Shapley Value of Tuples in Query Answering\",\n                \"The Shapley Value of Inconsistency Measures for Functional Dependencies\",\n                \"Complexity of Consistent Query Answering in Databases under Cardinality-Based and Incremental Repair Semantics\",\n                \"Explaining Predictions from Tree-based Boosting Ensembles\",\n                \"From Local Explanations to Global Understanding with Explainable AI for Trees\",\n                \"A Unified Approach to Interpreting Model Predictions\",\n                \"The Complexity of Causality and Responsibility for Query Answers and Non-Answers\",\n                \"Causality in Databases\",\n                \"Machine Learning\",\n                \"Interpretable Machine Learning: A Guide for Making Black Box Models Explainable\",\n                \"Algorithmic Game Theory\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]17 based on the context and research area of Score-Based Explanations in Data Management and Machine Learning: An Answer-Set Programming Approach to Counterfactual Analysis. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}