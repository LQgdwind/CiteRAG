{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: A Hierarchical Poisson Generator for Universal Graphs under Limited Resources 1 Yanlong Wen is the corresponding author.\n\nPaper Abstract: \n\nPaper Section Text:\nAfter the first stage, we split the whole graph into a sequence of substructures, ensuring the generation of N𝑁N nodes and carrying a small amount of edges.\nIn the second stage, we generate the remaining edges gradually.\nInstead of  directly specifying the probability of edge generation, we build edges by selecting two endpoints.\nInspired by [ref]37 , we expand D𝐷D into a list of entries Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent} as follows. Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent} is a list of entries, and Le​n​t​[i]subscript𝐿𝑒𝑛𝑡delimited-[]𝑖L_{ent}[i] represents the degree sequence Ds​u​b(i)superscriptsubscript𝐷𝑠𝑢𝑏𝑖D_{sub}^{(i)} of 𝒢s​u​b(i)superscriptsubscript𝒢𝑠𝑢𝑏𝑖\\mathcal{G}_{sub}^{(i)}, where Ds​u​b(i)​superscriptsubscript𝐷𝑠𝑢𝑏𝑖delimited-[]0D_{sub}^{(i)} is the degree of the v0(i)superscriptsubscript𝑣0𝑖v_{0}^{(i)}.\nWe use Le​n​t​[i]​[j]subscript𝐿𝑒𝑛𝑡delimited-[]𝑖delimited-[]𝑗L_{ent}[i][j] to refer to the node vj(i)superscriptsubscript𝑣𝑗𝑖v_{j}^{(i)} located in 𝒢s​u​b(i)superscriptsubscript𝒢𝑠𝑢𝑏𝑖\\mathcal{G}_{sub}^{(i)}, forming an entry.\nFor example, in Figure 3, Le​n​t​​[ref]2subscript𝐿𝑒𝑛𝑡delimited-[]0delimited-[]2L_{ent}[ref]2 represents node u𝑢u. This auxiliary structure costs additional 𝒪​(N)𝒪𝑁\\mathcal{O}(N) space, assisting the probability list generation.\nWe independently sample nodes u𝑢u and v𝑣v to form the edge eu​vsubscript𝑒𝑢𝑣e_{uv}.\nFor each node vj(i)superscriptsubscript𝑣𝑗𝑖v_{j}^{(i)}, the probability is as follows: The probability consists of two parts: ss​u​b(i)superscriptsubscript𝑠𝑠𝑢𝑏𝑖s_{sub}^{(i)} represents the probability of entering 𝒢s​u​b(i)superscriptsubscript𝒢𝑠𝑢𝑏𝑖\\mathcal{G}_{sub}^{(i)}, and P​(Le​n​t​[i]​[j]+1|D¯)𝑃subscript𝐿𝑒𝑛𝑡delimited-[]𝑖delimited-[]𝑗conditional1¯𝐷P(L_{ent}[i][j]+1|\\bar{D}) represents the sampling probability of the node jumping to the next degree of the current one based on Equation 1.\nss​u​b(i)superscriptsubscript𝑠𝑠𝑢𝑏𝑖s_{sub}^{(i)} refers to the preferential attachment theory proposed by . The more connections between nodes, the more likely it is to receive new connections.\nConsequently, there are central nodes or hubs in networks linking to abundant new nodes. Since the first stage creates independent substructures, we naturally use Ns​u​b(i)superscriptsubscript𝑁𝑠𝑢𝑏𝑖N_{sub}^{(i)} to calculate the probability of connecting 𝒢s​u​b(i)superscriptsubscript𝒢𝑠𝑢𝑏𝑖\\mathcal{G}_{sub}^{(i)} with the formula: Each node located in 𝒢s​u​b(i)superscriptsubscript𝒢𝑠𝑢𝑏𝑖\\mathcal{G}_{sub}^{(i)} shares Equation 4 and adjusts itself according to the next-degree distribution of the current one, which is P​(Le​n​t​[i]​[j]+1|D¯)𝑃subscript𝐿𝑒𝑛𝑡delimited-[]𝑖delimited-[]𝑗conditional1¯𝐷P(L_{ent}[i][j]+1|\\bar{D}).\nThis design is a variant of  based on the desired degree theory. It can estimate the probability of selecting nodes via the occurrence of nodes with a particular degree d∗subscript𝑑d_{*}, called the desired degree. Our method samples nodes according to the current Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent} and updates constantly.\nAccording to the assumptions in  [ref]37, the process of selecting nodes u𝑢u and v𝑣v is independent.\nThus, the probability of an edge is where P​r¯​(⋅)¯𝑃𝑟⋅\\bar{Pr}(\\cdot) is the probability after normalization, satisfying the probability sum of 1, that is Algorithm 1 gives the procedure to build the probability list p​l​i​s​t𝑝𝑙𝑖𝑠𝑡plist through Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent}.\nSince we sample anchor nodes based on the Poisson distribution, where D∼P​(D¯)similar-to𝐷𝑃¯𝐷D\\sim P(\\bar{D}), the expectation of the outer loop (line 2) is 𝔼​(l)=ND¯+1𝔼𝑙𝑁¯𝐷1\\mathbb{E}(l)=\\frac{N}{\\bar{D}+1}, and the inner (line 5) is 𝔼​(Ns​u​b(i))=D¯+1𝔼superscriptsubscript𝑁𝑠𝑢𝑏𝑖¯𝐷1\\mathbb{E}(N_{sub}^{(i)})=\\bar{D}+1.\nThus, our method needs 𝒪​(N)𝒪𝑁\\mathcal{O}(N) to build the probability list each time. In addition, our method prioritizes establishing connections between non-anchor nodes.\nFigure 3 illustrates the edge generation strategy under different node types.\nGiven the max degree dm​a​xsubscript𝑑𝑚𝑎𝑥d_{max} constraint, we set P​r​(v0(i))=0𝑃𝑟superscriptsubscript𝑣0𝑖0Pr(v_{0}^{(i)})=0 if existing non-anchor nodes whose degrees are less than dm​a​xsubscript𝑑𝑚𝑎𝑥d_{max}.\nWe use ∗* to mask the corresponding positions Le​n​t​[i]​subscript𝐿𝑒𝑛𝑡delimited-[]𝑖delimited-[]0L_{ent}[i], as shown in Figure 3(A).\nAfter sampling the nodes u𝑢u and v𝑣v, the change of degree updates in Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent} from 1 to 2.\nAs the number of edges increases, as shown in Figure 3(B), there will be a case where all non-anchor nodes have connected dm​a​xsubscript𝑑𝑚𝑎𝑥d_{max} edges like 𝒢s​u​b(j)superscriptsubscript𝒢𝑠𝑢𝑏𝑗\\mathcal{G}_{sub}^{(j)}.\nIn this case, we mask the Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent} of the non-anchor nodes with ∗* and restore the anchor node to its current degree.\nFor example, in Figure 3(B), we set Le​n​t​[j]​=2subscript𝐿𝑒𝑛𝑡delimited-[]𝑗delimited-[]02L_{ent}[j]=2.\nAfter sampling the node pair, the update is the same as in 3(A).\nIf the anchor node v0(i)superscriptsubscript𝑣0𝑖v_{0}^{(i)} exceeds dm​a​xsubscript𝑑𝑚𝑎𝑥d_{max}, too, we mask this 𝒢s​u​b(i)superscriptsubscript𝒢𝑠𝑢𝑏𝑖\\mathcal{G}_{sub}^{(i)} without visiting anymore. Finally, we give the pseudocode of our method, as shown in Algorithm 2.\nOur method contains three parts.\nFirstly, we select anchor nodes and build the initial star graphs in the first stage (lines 2-7).\nNext, we ensure the previous graph connection at the beginning of the second stage (lines 9-14).\nAnd finally, we create the remaining edges (lines 17-22).\nNote that our method is hierarchical, and each part includes an update of the probability, which guarantees the accuracy of the generation.\n\nReference markers found: [37]\n\nContext windows for each [ref]:\n[ref]37: of edges.\nIn the second stage, we generate the remaining edges gradually.\nInstead of  directly specifying the probability of edge generation, we build edges by selecting two endpoints.\nInspired by [ref]37 , we expand D𝐷D into a list of entries Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent} as follows. Le​n​tsubscript𝐿𝑒𝑛𝑡L_{ent} is a list of entries, and Le​n​t​[i]subscript𝐿𝑒𝑛𝑡delimited-[]𝑖L_{ent}[i] represents\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 37,\n            \"titles\": [\n                \"Darwini: Generating realistic large-scale social graphs\",\n                \"FastSGG: Efficient Social Graph Generation Using a Degree Distribution Generation Model\",\n                \"Efficient Learning-based Community-Preserving Graph Generation\",\n                \"FairGen: Towards Fair Graph Generation\",\n                \"Conditional Diffusion Based on Discrete Graph Structures for Molecular Graph Generation\",\n                \"MolHF: A Hierarchical Normalizing Flow for Molecular Graph Generation\",\n                \"Navigating Chemical Space with Latent Flows\",\n                \"GraphGDP: Generative Diffusion Processes for Permutation Invariant Graph Generation\",\n                \"Protein Design with Guided Discrete Diffusion\",\n                \"Doob’s Lagrangian: A Sample-Efficient Variational Approach to Transition Path Sampling\",\n                \"Deep Generative Models for Spatial Networks\",\n                \"TGG: Transferable Graph Generation for Zero-shot and Few-shot Learning\",\n                \"Deep Transfer Learning for City-scale Cellular Traffic Generation through Urban Knowledge Graph\",\n                \"Generalize to Fully Unseen Graphs: Learn Transferable Hyper-Relation Structures for Inductive Link Prediction\",\n                \"An embarrassingly simple approach to zero-shot learning\",\n                \"LinkBench: A database benchmark based on the Facebook social graph\",\n                \"LinkGen: Multipurpose linked data generator\",\n                \"gMark: Schema-Driven Generation of Graphs and Queries\",\n                \"Network Motifs: Simple Building Blocks of Complex Networks\",\n                \"NeVAE: A Deep Generative Model for Molecular Graphs∗\",\n                \"Deep Latent-Variable Models for Controllable Molecule Generation\",\n                \"Interpretable Molecular Graph Generation via Monotonic Constraints\",\n                \"FLOOD: A Flexible Invariant Learning Framework for Out-of-Distribution Generalization on Graphs\",\n                \"Building Graphs at Scale via Sequence of Edges: Model and Generation Algorithms (Extended Abstract)\",\n                \"Temporal Graph Generation Featuring Time-Bound Communities\",\n                \"Top-N: Equivariant set and graph generation without exchangeability\",\n                \"Coarse-to-Fine: a Hierarchical Diffusion Model for Molecule Generation in 3D\",\n                \"Graph Invariant Learning with Subgraph Co-mixup for Out-Of-Distribution Generalization\",\n                \"GraphVAE: Towards Generation of Small Graphs Using Variational Autoencoders\",\n                \"MolGAN: An implicit generative model for small molecular graphs\",\n                \"GraphDF: A Discrete Flow Model for Molecular Graph Generation\",\n                \"A Survey on Generative Diffusion Models\",\n                \"Variational Flow Matching for Graph Generation\",\n                \"Graph Generators: State of the Art and Open Challenges\",\n                \"A Systematic Survey on Deep Generative Models for Graph Generation\",\n                \"Generative Diffusion Models on Graphs: Methods and Applications\",\n                \"R-MAT: A recursive model for graph mining\",\n                \"A scalable generative graph model with community structure\",\n                \"Semi-Supervised Classification with Graph Convolutional Networks\",\n                \"A Random Graph Model for Power Law Graphs\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]37 based on the context and research area of A Hierarchical Poisson Generator for Universal Graphs under Limited Resources 1 Yanlong Wen is the corresponding author.. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}