{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: Envy-Free Cake-Cutting for Four Agents\n\nPaper Abstract: \n\nPaper Section Text:\nThe field of fair division studies ways of dividing and allocating a resource among different agents, while ensuring that the division is fair in some sense. The perhaps most famous, and certainly most well-studied problem in fair division is cake-cutting. In this problem, first introduced by Steinhaus [Ste48], the resource is a “cake”. The cake serves as a metaphor for modeling settings where the resource is divisible – namely it can be divided arbitrarily – and heterogeneous – different parts of the resource have different attributes and can thus be valued differently by different agents. Examples where the resource can be modeled as a cake, include, among other things, division of land, time, and other natural resources. The problem has been extensively studied in mathematics and economics [BT96, RW98] and more recently in computer science [Pro13]. More formally, the cake is usually modeled as the interval [ref]0 [ref]0 , and there are n𝑛n agents, each with their own preferences over different pieces of the cake. The preferences of each agent i𝑖i are represented by a valuation function visubscript𝑣𝑖v_{i} which assigns a value to each piece of the cake. The goal is to divide the cake into n𝑛n pieces A1,…,Ansubscript𝐴1…subscript𝐴𝑛A_{1},\\dots,A_{n} and assign one piece to each agent in a fair manner. Different notions of fairness have been proposed and studied. Steinhaus [Ste48], with the help of Banach and Knaster, originally studied a fairness notion known as proportionality. An allocation where agent i𝑖i is assigned piece Aisubscript𝐴𝑖A_{i} is proportional, if vi​(Ai)≥vi​([ref]0 )/nsubscript𝑣𝑖subscript𝐴𝑖subscript𝑣𝑖01𝑛v_{i}(A_{i})\\geq v_{i}([ref]0 )/n for all agents i𝑖i. While proportionality ensures that each agent obtains a fair share of the total cake, some agent might be unhappy, because they prefer a piece Ajsubscript𝐴𝑗A_{j} allocated to some other agent to their own piece Aisubscript𝐴𝑖A_{i}. A stronger notion of fairness which tries to address this is envy-freeness. An allocation is envy-free, if no agent is envious of another agent’s piece. Formally, we require that vi​(Ai)≥vi​(Aj)subscript𝑣𝑖subscript𝐴𝑖subscript𝑣𝑖subscript𝐴𝑗v_{i}(A_{i})\\geq v_{i}(A_{j}) for all agents i,j𝑖𝑗i,j. The problem of envy-free cake-cutting was popularized by Gamow and Stern [GS58] and has since been studied extensively. Stromquist [Str80] and Woodall [Woo80] have shown that an envy-free allocation always exists under some mild continuity assumptions on the valuations. Moreover, this envy-free allocation is also connected (or contiguous), meaning that every agent is allocated a piece that is a single interval. In other words, the cake is only cut at n−1𝑛1n-1 positions. The existence proofs of Stromquist and Woodall, as well as the more recent proof of Su [Su99], all rely on tools such as Brouwer’s fixed point theorem, or Sperner’s lemma. These powerful tools prove the existence of envy-free allocations, but they do not yield an efficient algorithm for finding one. Given the practical importance of fair division problems such as cake-cutting, this is a serious drawback to the existence result. Mathematicians and economists have tried to address this by proposing so called moving-knife protocols to solve the problem. Unfortunately, the definition of a moving-knife protocol is mostly informal and thus not well-suited for theoretical investigation (see [BTZ97] for a discussion). In more recent years, research in theoretical computer science has started studying these questions in formal models of computation. However, despite extensive efforts on the envy-free cake-cutting problem, its complexity is still poorly understood. In this paper we study the envy-free cake-cutting problem with connected pieces. A simple algorithm is known for two agents: the cut-and-choose protocol. The first agent cuts the cake in two equal parts, according to its own valuation, and then the second agent picks its favorite piece, and the first agent receives the remaining piece. This simple algorithm can be implemented in the standard Robertson-Webb query model [WS07], and yields an envy-free allocation. For three players or more, Stromquist [Str08] has shown that no algorithm using Robertson-Webb queries exists for finding envy-free allocations. In order to bypass this impossibility result, Brânzei and Nisan [BN22] propose to study the complexity of finding approximate envy-free allocations instead. An allocation is ε𝜀\\varepsilon-envy-free, if vi​(Ai)≥vi​(Aj)−εsubscript𝑣𝑖subscript𝐴𝑖subscript𝑣𝑖subscript𝐴𝑗𝜀v_{i}(A_{i})\\geq v_{i}(A_{j})-\\varepsilon for all agents i,j𝑖𝑗i,j. In this setting, an ε𝜀\\varepsilon-envy-free allocation can be found by brute force using \\poly​(1/ε)\\poly1𝜀\\poly(1/\\varepsilon) queries when the number of agents is constant. An efficient algorithm is one that instead only uses \\poly​(log⁡(1/ε))\\poly1𝜀\\poly(\\log(1/\\varepsilon)) queries. With this relaxation in place, the problem with three agents can be solved efficiently [DQS12]. As shown by Brânzei and Nisan [BN22], a moving-knife algorithm due to Barbanel and Brams [BB04] can also be efficiently simulated in the query model. Both of these algorithms require that the valuations be monotone, a standard assumption in many works on the topic. A valuation function visubscript𝑣𝑖v_{i} is monotone if vi​(A)≥vi​(B)subscript𝑣𝑖𝐴subscript𝑣𝑖𝐵v_{i}(A)\\geq v_{i}(B), whenever A𝐴A is a superset of B𝐵B. For four agents, the problem has remained open, even for moving-knife procedures. Barbanel and Brams [BB04] provided a moving-knife procedure for four agents but using 5 cuts, improving upon an existing result of Brams et al [BTZ97] which used 111111 cuts, and asked whether the minimal number of cuts could be achieved. The problem of finding an algorithm for connected ε𝜀\\varepsilon-envy-free cake-cutting with four agents was explicitly posed by Deng et al. [DQS12]. More recently it was conjectured by Brânzei and Nisan [BN22] that such an algorithm might not exist: “We conjecture that unlike equitability, which remains logarithmic in 1/ε1𝜀1/\\varepsilon for any number of players, computing a contiguous ε𝜀\\varepsilon-envy-free allocation for n=4𝑛4n=4 players […] will require Ω​(1/ε)Ω1𝜀\\Omega(1/\\varepsilon) queries.” Our first contribution is to disprove this conjecture by providing an efficient algorithm that finds an ε𝜀\\varepsilon-envy-free allocation using O​(log3⁡(1/ε))𝑂superscript31𝜀O(\\log^{3}(1/\\varepsilon)) value queries.111The conjecture of Brânzei and Nisan [BN22] was stated in a slightly different model (compared to the one in [DQS12]) where one does not assume any upper bound on the Lipschitz-constant of the valuations, but instead allows the added power of cut queries from the Robertson-Webb model (as well as restricting attention to additive valuations). We show that a modification of our algorithm also applies to their model, thus disproving their conjecture; see Section 6. As for existing approaches for three agents [DQS12, BB04, BN22], our algorithm also relies on the monotonicity assumption. In the second part of our work, we investigate whether monotonicity is necessary for obtaining efficient algorithms. We prove that this is indeed the case, in a very strong sense. Namely, we show that the communication complexity of finding an ε𝜀\\varepsilon-envy-free allocation with four non-monotone agents is Ω​(\\poly​(1/ε))Ω\\poly1𝜀\\Omega(\\poly(1/\\varepsilon)). To the best of our knowledge, this is the first intractability result for any version of the cake-cutting problem in the communication model. For the case of agents with identical non-monotone valuations, our reduction also yields an Ω​(\\poly​(1/ε))Ω\\poly1𝜀\\Omega(\\poly(1/\\varepsilon)) query lower bound, as well as a PPAD-hardness result in the standard Turing machine model. Our hardness results improve upon existing lower bounds by Deng et al. [DQS12] in two ways: Our lower bounds apply to valuation functions, whereas the lower bounds of Deng et al. only apply to a much more general class of preference functions, where the value of an agent for a piece can depend on how the whole cake is divided. Whereas their lower bounds apply only to the query and Turing machine models, we show hardness in the communication model. We note that the communication model was recently formalized and studied by Brânzei and Nisan [BN19]. In Tables 1, 2 and 3 we summarize the current state-of-the-art results for connected ε𝜀\\varepsilon-envy-free cake-cutting, including our results, in three natural models of computation for this problem. In all of these tables, upper bounds appearing in a certain cell also continue to apply for any cell to the left or above. Similarly, lower bounds also apply to any cell to the right or below. This is due to the fact that “monotone” is a special case of “general”, as well as to the (surprisingly) non-trivial fact that the problem with n𝑛n agents can be efficiently reduced to the problem with n+1𝑛1n+1 agents; see Appendix A. The following questions are particularly interesting: What is the complexity of the problem for five agents with monotone valuations? Can the problem be solved efficiently, or can we show a lower bound? Can we at least show a lower bound for some larger number of players? What is the complexity of the problem for three agents with general valuations? Can any of the insights used in our algorithm for four players be used to tackle the problem of proving existence of EFX allocations for four agents in the indivisible goods setting? The envy-free cake-cutting model has also been extensively studied without requiring that the pieces allocated to the agents be connected. The celebrated works of Aziz and Mackenzie [AM20] have shown that an exact envy-free allocation can be found in the Robertson-Webb query model for any number of players, albeit with a prohibitive number of cuts. It is an open question whether this can be improved, as only a lower bound of Ω​(n2)Ωsuperscript𝑛2\\Omega(n^{2}) due to Procaccia [Pro13] is currently known. Efficient algorithms for envy-free cake cutting have been obtained for some relatively large constant approximation factors [ABKR19, GHS20, BK22], or under stronger assumptions, e.g. [Brâ15, BR22].\nOur focus in this work is on (approximately) envy-free cake cutting, but other objectives have been considered such as equitable [PW17], (Nash) Social Welfare [ADH13, ABKR19], and extensions to group fairness [SN19, SS21, SS23].\nIn this work we are only concerned with the algorithmic question of finding an envy free allocation, but several works have also considered the important question of incentives, e.g. [MT10, MN12, CLPP13, ADH14, BCH+17, OS22, Tao22].\n\nReference markers found: [0]\n\nContext windows for each [ref]:\n[ref]0: The problem has been extensively studied in mathematics and economics [BT96, RW98] and more recently in computer science [Pro13]. More formally, the cake is usually modeled as the interval [ref]0 [ref]0 , and there are n𝑛n agents, each with their own preferences over different pieces of the cake. The preferences of each agent i𝑖i are represented by a valuation function\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 0,\n            \"titles\": [\n                \"Fair and Efficient Cake Division with Connected Pieces\",\n                \"Computing socially-efficient cake divisions\",\n                \"Auctioning a cake: truthful auctions of heterogeneous divisible goods\",\n                \"A bounded and envy-free cake cutting algorithm\",\n                \"Cake division with minimal cuts: envy-free procedures for three persons, four persons, and beyond\",\n                \"Chore Cutting: Envy and Truth\",\n                \"Approximation Algorithms for Envy-Free Cake Division with Connected Pieces\",\n                \"Communication complexity of cake cutting\",\n                \"The query complexity of cake cutting\",\n                \"Communication complexity of Nash equilibrium in potential games (extended abstract)\",\n                \"Fair Cake Division Under Monotone Likelihood Ratios\",\n                \"A note on envy-free cake cutting with polynomial valuations\",\n                \"Fair Division: From cake-cutting to dispute resolution\",\n                \"A moving-knife solution to the four-person envy-free cake-division problem\",\n                \"On the complexity of 2d discrete fixed point problem\",\n                \"Truth, justice, and cake cutting\",\n                \"Algorithmic solutions for envy-free cake cutting\",\n                \"The complexity of gradient descent: CLS = PPAD ∩\\\\cap PLS\",\n                \"The Hairy Ball problem is PPAD-complete\",\n                \"Contiguous cake cutting: Hardness results and approximation algorithms\",\n                \"On communication complexity of fixed point computation\",\n                \"Communication lower bounds via critical block sensitivity\",\n                \"Near-optimal communication lower bounds for approximate Nash equilibria\",\n                \"Puzzle-math\",\n                \"Exponential lower bounds for finding brouwer fix points\",\n                \"Incentive compatible two player cake cutting\",\n                \"Truthful fair division\",\n                \"Obvious Manipulations in Cake-Cutting\",\n                \"On the complexity of the parity argument and other inefficient proofs of existence\",\n                \"Cake cutting: Not just child’s play\",\n                \"A lower bound for equitable cake cutting\",\n                \"Cake-cutting algorithms: Be fair if you can\",\n                \"On the communication complexity of approximate fixed points\",\n                \"Communication lower bounds using directional derivatives\",\n                \"Fair cake-cutting among families\",\n                \"How to Cut a Cake Fairly: A Generalization to Groups\",\n                \"Cutting a Cake Fairly for Groups Revisited\",\n                \"The problem of fair division\",\n                \"How to cut a cake fairly\",\n                \"Envy-free cake divisions cannot be found by finite protocols\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]0 based on the context and research area of Envy-Free Cake-Cutting for Four Agents. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}