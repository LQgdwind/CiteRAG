{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic citation prediction expert. Your task is to predict the most likely citations for [ref] markers in academic paper sections based on the paper content and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract + section text with [ref] markers\n- Output: top {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nTASK DESCRIPTION:\n- Input: Paper section text with [ref] markers + retrieved relevant papers\n- Output: top 40 predicted reference titles for each [ref] marker with reasoning\n- Format: JSON object with \"citations\" array containing objects with \"ref_index\", \"titles\", and \"reasoning\" fields\n\nREQUIREMENTS:\n1. Analyze the context around each [ref] marker to understand what reference is needed\n2. Consider the retrieved papers as potential references (when available)\n3. Consider the surrounding text, research area, and topic\n4. Generate realistic and relevant reference titles that would fit the context\n5. Provide detailed reasoning for each prediction to prevent hallucination\n6. Output format: JSON object with \"citations\" array\n7. Generate exactly 40 most relevant reference titles for each [ref]\n8. Ensure titles are realistic and appropriate for the research area\n9. Include reasoning that explains why each title is relevant to the specific [ref] context\n10. Use proper JSON escaping for special characters (escape quotes with \\\")\n11. Ensure all strings are properly quoted and escaped\n\nEXAMPLE:\nInput:\n\"Federated Learning aims to train models in massively distributed networks [ref]38 at a large scale [ref]5, over multiple sources of heterogeneous data [ref]30.\"\n\nRetrieved papers (top {top_r}):\n1. Title: Communication-efficient learning of deep networks from decentralized data\n   Abstract: We report on a series of experiments with federated learning systems for decentralized data training.\n\n2. Title: Federated Learning: Challenges, Methods, and Future Directions\n   Abstract: A comprehensive survey of federated learning approaches and challenges in distributed settings.\n\nOutput:\n{\n  \"citations\": [\n    {\n      \"ref_index\": 38,\n      \"titles\": [\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated Learning: Challenges, Methods, and Future Directions\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Towards federated learning at scale: System design\",\n        \"A performance evaluation of federated learning algorithms\",\n        \"Distributed machine learning: A survey\",\n        \"Communication protocols for distributed learning\",\n        \"Scalable federated learning systems\",\n        \"Efficient distributed training algorithms\",\n        \"Large-scale distributed learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]38 appears in the context of 'massively distributed networks' for federated learning, so it likely refers to foundational papers on federated learning systems, distributed training, and communication-efficient methods in distributed networks.\"\n    },\n    {\n      \"ref_index\": 5,\n      \"titles\": [\n        \"Bagging predictors\",\n        \"Ensemble methods in machine learning\",\n        \"Random forests for classification\",\n        \"Bootstrap methods and their application\",\n        \"Combining multiple classifiers\",\n        \"Large-scale machine learning systems\",\n        \"Distributed ensemble methods\",\n        \"Scalable classification algorithms\",\n        \"Massive data processing techniques\",\n        \"High-performance machine learning frameworks\"\n      ],\n      \"reasoning\": \"This [ref]5 appears in the context of 'at a large scale', suggesting it refers to papers on scaling machine learning methods, ensemble techniques, or methods that can handle large-scale data and distributed settings.\"\n    },\n    {\n      \"ref_index\": 30,\n      \"titles\": [\n        \"Learning fair representations\",\n        \"Fair machine learning: A survey\",\n        \"Bias in machine learning systems\",\n        \"Addressing fairness in AI systems\",\n        \"Fair representation learning\",\n        \"Heterogeneous data handling methods\",\n        \"Multi-source learning algorithms\",\n        \"Cross-domain representation learning\",\n        \"Fair learning from diverse data\",\n        \"Bias mitigation in heterogeneous datasets\"\n      ],\n      \"reasoning\": \"This [ref]30 appears in the context of 'heterogeneous data' and 'fair representation learning', indicating it likely refers to papers on heterogenous data handling, bias mitigation, and learning representations that are fair across different data distributions.\"\n    }\n  ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped.\n\nIMPORTANT NOTES ON REASONING:\n- The reasoning field is crucial for preventing hallucination\n- Each reasoning should be specific to the context around the [ref] marker\n- Explain the connection between the predicted titles and the research topic\n- This helps validate that predictions are grounded in the actual content\n- Reasoning should be concise but informative (2-3 sentences)\n- Consider retrieved papers when available to improve prediction accuracy"
    },
    {
      "role": "user",
      "content": "Paper Title: OSOA: One-Shot Online Adaptation of Deep Generative Models for Lossless Compression\n\nPaper Abstract: \n\nPaper Section Text:\nDatasets\nThe datasets for base model pretraining are the renowned natural image datasets CIFAR10  and ImageNet32 , including images of size 32×32323232\\times 32.\nWe obtain three target datasets randomly sampled from the large image dataset Yahoo Flickr Creative Commons 100 Million (YFCC100m)  to test the compression performance.\nWe name the three subsets from YFCC100m by SET32/64/128, where SET32 means the dataset of image height and width both being 32.\nTo remove potential artifacts introduced by previous image compression, we first obtain SET256 by cropping the central 256×256256256256\\times 256 part in 217superscript2172^{17} RGB images with size larger than 256×256256256256\\times 256 and downsample the obtained dataset into our targets, as conducted in 4.\nWe use Pillow to downsample the SET256 into SET128, SET64 and SET32 with the high quality filter Image.ANTIALIAS.\nThe 217superscript2172^{17} RGB images are selected only with their shapes and no other discretionary criteria. Experiments configurations\nSince an OSOA algorithm can be regarded as a general strategy to make a static deep generative model dynamic, it can be used for any DGMs based lossless compression frameworks.\nWe adopt two representative DGMs based compression frameworks, HiLLoC  for hierarchical VAEs and IDF++  for normalizing flows, to validate the OSOA setting.\nSpecifically, for HiLLoC, we use the ResNet VAE (RVAE) model, which is proposed in 5 and adopted for compression in , with 24 layers and bi-directional connections for inference (a.k.a. top-down inference).\nMoreover, we showcase for a proof-of-concept purpose the IAF RVAE 5, with the same configuration as the RVAE model except for additional IAF layers in the inference model, making the approximate posterior more expressive.\nFor IDF++, we use the same architecture proposed in , with 24 stacked flow layer blocks, where each block contains a permutation layer and a coupling layer.\nFor each coupling layer in the flow model, a 12-layer Densenet  with 512 feature maps is used.\nFor narrative simplicity, we use HiLLoC and IDF++ to refer to both the frameworks and the associated models.\nWe use an Nvidia V100 32GB GPU for HiLLoC (and IAF RVAE) and an Nvidia V100 16 GB GPU for IDF++.\nCapped by the GPU memory limit, the batch size should be reduced as the image size grows.\nWe quadruple the batch size as the image size decreases, i.e., batch size 256/64/16 in HiLLoC and batch size 48/12/3 in IDF++, for SET32/64/128 respectively. Baselines\nWe adopt three baselines, referred to as ReTrain, PreTrain and FineTune.\nFor ReTrain, we train a separate model for each target dataset from scratch and use the final model to compress the target datasets.\nFor PreTrain, we directly use the pretrained models to compress the target datasets.\nFor FineTune, we fine tune the pretrained model on the target datasets and use the final model to compress the target datasets.\nDepending on how to set the number of fine-tuning epoches, we have three versions of FineTune.\nFor FineTune v1, we fine tune the pretrained model for 2 epochs, as the whole OSOA Encoding & Decoding procedures involve 2 epochs of adaptations in total.\nFor FineTune v2, we fine tune the pretrained model for 4 epochs for HiLLoC (and IAF RVAE) and 3 epochs for IDF++ to make the model updating time comparable with OSOA.\nThis is because the dynamical system module in vanilla OSOA needs strict determinism  and it could cause extra time cost in current deep learning frameworks.\nThe time ratio we measured with/without the determinism is 1.98 (HiLLoC) in TensorFlow 1.14 [ref]4 with tensorflow-determinism 0.3.0  and 1.34 (IDF++) in Pytorch 1.6 .\nFor FineTune v3, we fine tune the pretrained model for 20 epochs as an indicator of overfitting the pretrained model on target datasets.\nTo take the additional model storage in FineTune baselines into consideration, we convert the model (in float32) storage size into effective bpd values and show them in the Model column in Table 2.\nNote that the bpd values shown under OSOA and baselines are of the codewords only, and the associated model bpd in the Model column need to be added to ReTrain and FineTune baselines for comparison of total storage cost.\nAs bpd is the average number of bits needed to compress each dimension of the data, a lower value indicates a higher compression ratio.\nThe time costs of OSOA and baselines are caused by model training, network inference (pmf evaluation) and entropy coding.\nWe predominately use the model training time for comparison, as it dominates the time cost and the model and the entropy coder are controlled factors for comparisons. Recent work 6  7 show that DGMs can assign high density values on data points not in the training datasets.\nAnd pretrained models can provide reasonable compression performance on unseen datasets  .\nWhile PreTrain in Table 2 further confirms this point, the extra cost comparing to best possible ones can be significant, due to the distribution discrepancy between the training data and the target data.\nNevertheless, PreTrain has the best time efficiency, since no extra training is needed. Comparing to FineTune, OSOA does not require additional model storage for decompression.\nFixing the batch order, the unrolled models in OSOA are the models in the first fine-tuning epoch, which tend to fit the data worse than the final one in the whole fine-tuning process (not necessarily true, cf. negative difference values in Fig 2 Right).\nNevertheless, by comparing the decreased code space shown in green and the increased model space shown in red for FineTune v1 or FineTune v2 in Table 2, one can see that with the same optimisation budget or time budget, OSOA exhibits better total space efficiency than FineTune.\nFor instance, with the CIFAR10 pretrained HiLLoC on SET32, OSOA takes 46.73%percent46.7346.73\\% less space than FineTune v2, with the same model training cost.\nTo better understand the comparison between OSOA and FineTune v2 on SET128, we take the CIFAR10 pretrained HiLLoC and fix the order of images.\nIf we only compress the first 216superscript2162^{16}, 215superscript2152^{15} and 214superscript2142^{14} images in SET128, the FineTune v2 admits bpd, in the code bpd + model bpd format, 2.564 + 0.408, 2.611 + 0.816 and 2.658 + 1.632.\nHowever, OSOA admits bpd, in the code bpd format since no model storage required, 2.734, 2.788 and 2.842, which are 0.238, 0.639 and 1.448 less than FineTune v2 respectively.\nTherefore, OSOA remains a clear net advantage than FineTune with the same time budget up to a reasonable large sample size even on large size images.\nFrom the comparison between OSOA and FineTune v3, one can see that the space advantage is still valid even if we conduct the FineTune for much longer time for SET32/64.\nFineTune v3 performs better on space efficiency on SET128, but it takes more than 4 times as much time as OSOA.\nRecent work on data lossy compression  introduces a model update coding term to the objective function and conducts lossless compression on the model update.\nHowever, this introduces an extra layer of complexity and time cost to determine suitable prior distributions for network parameters and to balance the data compression and model compression.\nSince OSOA does not require extra model saving, it exhibits huge advantage over the baselines on large-scale models or data of limited size.\nNote that OSOA achieves the optimal space & time cost balance with conducting model updates during data decoding.\nTherefore, it will be more suitable to scenarios of data backup or data cold storage than scenarios with real time data usage, e.g., video streaming. At each OSOA step, the potential improvement of the model from the current batch can only benefit the compression of following batches.\nMoreover, the batch gradient can have a large variance and the stochastic gradient methods, e.g. SGD, Adam, etc., are not strictly descent algorithms.\nTo investigate the online compression performance along the OSOA path, we showcase the results at the batch level in OSOA Encoding in Fig. 2 Middle and Right, with the CIFAR10 pretrained HiLLoC on SET32 and SET128.\nTo make the bpd values comparable, we use the same batch order for OSOA, FineTune and PreTrain and showcase the differences between the bpd values of compressing each batch with OSOA and the baselines.\nHere we abuse the notation and use OSOA/FineTune to denote the vector of bpd values of each batch in OSOA/FineTune, with above fixed batch order.\nThen the 100th entry in the difference vector (OSOA - FineTune v1) is the extra cost of compressing the 100th batch with OSOA at the 100th OSOA Encoding step instead of FineTune v1 (with the fine-tuned model).\nNote that a negative difference value indicates that OSOA performs better than the corresponding baseline for that batch.\nFrom Fig. 2 Middle and Right, we can see that the advantage of compression with OSOA instead of PreTrain enlarges and the disadvantage (w.r.t. code space) of compression with OSOA instead of FineTune decreases, which validates the benefits brought by adaptation with previous batches to following batches in OSOA. Note that the theoretical bpd values reported in this paper are evaluated based on the discretised distributions of models for coding.\nMoreover, for HiLLoC, although the free-bits technique is used for the ResNet VAE model training, theoretical bpd evaluation does not involve free-bits.\nWe showcase the real bpd values of HiLLoC and IDF++ on SET32 in Appendix B.\n\nReference markers found: [4]\n\nContext windows for each [ref]:\n[ref]4: OSOA needs strict determinism  and it could cause extra time cost in current deep learning frameworks.\nThe time ratio we measured with/without the determinism is 1.98 (HiLLoC) in TensorFlow 1.14 [ref]4 with tensorflow-determinism 0.3.0  and 1.34 (IDF++) in Pytorch 1.6 .\nFor FineTune v3, we fine tune the pretrained model for 20 epochs as an indicator of overfitting the pretrained model on\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for each [ref] marker. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL REQUIREMENTS:\n1. For each [ref] marker, provide detailed reasoning explaining why the predicted titles are relevant\n2. The reasoning should analyze the specific context around each [ref] marker\n3. Explain how each title connects to the research topic, methodology, or problem being discussed\n4. This reasoning helps prevent hallucination by grounding predictions in the actual context\n5. Consider retrieved papers when available to improve prediction accuracy\n\nCRITICAL FORMAT REQUIREMENT: You must respond with ONLY valid JSON. Do not include any explanatory text, markdown formatting, or other content outside the JSON structure.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"citations\": [\n        {\n            \"ref_index\": 38,\n            \"titles\": [\n                \"Reference Title 1\",\n                \"Reference Title 2\",\n                \"Reference Title 3\",\n                \"Reference Title 4\",\n                \"Reference Title 40\"\n            ],\n            \"reasoning\": \"Detailed explanation of why these titles are relevant to [ref]38 based on the surrounding context, research area, and specific topic being discussed.\"\n        }\n    ]\n}\n\nCRITICAL: Return ONLY the JSON object. Do not include any text before or after the JSON. Do not use markdown formatting. Ensure all quotes and special characters are properly escaped. Do not include authors, venues, or years - only the paper titles. Generate exactly 40 titles for each [ref] marker with reasoning."
    },
    {
      "role": "assistant",
      "content": "{\n    \"citations\": [\n        {\n            \"ref_index\": 4,\n            \"titles\": [\n                \"The Description Length of Deep Learning Models\",\n                \"Determinism in deep learning\",\n                \"Pytorch reproducibility\",\n                \"Tensorflow determinism\",\n                \"TensorFlow: A system for large-scale machine learning\",\n                \"WAIC, but Why? Generative Ensembles for Robust Anomaly Detection\",\n                \"A Downsampled Variant of ImageNet as an Alternative to the CIFAR datasets\",\n                \"Smaller and faster data compression with zstandard\",\n                \"Asymmetric numeral systems: entropy coding combining speed of huffman coding with compression rate of arithmetic coding\",\n                \"A new algorithm for data compression\",\n                \"Generative adversarial nets\",\n                \"DeepZip: Lossless Data Compression using Recurrent Neural Networks\",\n                \"Video Compression With Rate-Distortion Autoencoders\",\n                \"Minimal random code learning: Getting bits back from compressed model parameters\",\n                \"Keeping neural networks simple by minimising the description length of weights. 1993\",\n                \"Flow++: Improving Flow-Based Generative Models with Variational Dequantization and Architecture Design\",\n                \"Compression with Flows via Local Bits-Back Coding\",\n                \"Learning Discrete Distributions by Dequantization\",\n                \"Integer Discrete Flows and Lossless Compression\",\n                \"Densely connected convolutional networks\",\n                \"A method for the construction of minimum-redundancy codes\",\n                \"Adam: A method for stochastic optimization\",\n                \"Auto-encoding variational bayes\",\n                \"Glow: Generative Flow with Invertible 1×1 Convolutions\",\n                \"Improved variational inference with inverse autoregressive flow\",\n                \"Bit-Swap: Recursive Bits-Back Coding for Lossless Compression with Hierarchical Latent Variables\",\n                \"Dynamic huffman coding\",\n                \"Learning multiple layers of features from tiny images\",\n                \"Videoflow: A conditional flow-based model for stochastic video generation\",\n                \"Information theory, inference and learning algorithms\",\n                \"Fast text compression with neural networks\",\n                \"Adaptive weighing of context models for lossless data compression\",\n                \"Context-based adaptive binary arithmetic coding in the h. 264/avc video compression standard\",\n                \"Practical Full Resolution Learned Lossless Image Compression\",\n                \"Learning Better Lossless Compression Using Lossy Compression\",\n                \"Do Deep Generative Models Know What They Don’t Know?\",\n                \"Detecting Out-of-Distribution Inputs to Deep Generative Models Using Typicality\",\n                \"An overview of the basic principles of the q-coder adaptive binary arithmetic coder\",\n                \"Jpeg2000: Image compression fundamentals, standards and practice\",\n                \"PNG: the definitive guide\"\n            ],\n            \"reasoning\": \"Selected these 40 citations for [ref]4 based on the context and research area of OSOA: One-Shot Online Adaptation of Deep Generative Models for Lossless Compression. The first title is the actual reference for this marker, followed by other relevant papers from the same research domain.\"\n        }\n    ]\n}"
    }
  ],
  "format": "chatml"
}