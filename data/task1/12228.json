{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Implicit Rankings for Verifying Liveness Properties in First-Order Logic\n\nPaper Abstract: Abstract Liveness properties are traditionally proven using a ranking function that maps system states to some well-founded set. Carrying out such proofs in first-order logic enables automation by SMT solvers. However, reasoning about many natural ranking functions is beyond reach of existing solvers. To address this, we introduce the notion of implicit rankings — first-order formulas that soundly approximate the reduction of some ranking function without defining it explicitly. We provide recursive constructors of implicit rankings that can be instantiated and composed to induce a rich family of implicit rankings. Our constructors use quantifiers to approximate reasoning about useful primitives such as cardinalities of sets and unbounded sums that are not directly expressible in first-order logic. We demonstrate the effectiveness of our implicit rankings by verifying liveness properties of several intricate examples, including Dijkstra’s kk-state, 44-state and 33-state self-stabilizing protocols.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \": Certification of an exact worst-case self-stabilization time\",\n        \"Certification of an exact worst-case self-stabilization time\",\n        \"Proving convergence of self-stabilizing systems using first-order rewriting and regular languages\",\n        \"Liveness checking as safety checking\",\n        \"An improved algorithm for decentralized extrema-finding in circular configurations of processes\",\n        \"Abstraction refinement for termination\",\n        \"Termination proofs for systems code\",\n        \"Proving self-stabilization with a proof assistant\",\n        \"Proving program invariance and termination by parametric abstraction, lagrangian relaxation and semidefinite programming\",\n        \"Infinite-state liveness-to-safety via implicit abstraction and well-founded relations\",\n        \"Fairness modulo theory: A new approach to LTL software model checking\",\n        \"Self-stabilization with four-state machines\",\n        \"Self-stabilizing systems in spite of distributed control\",\n        \"A belated proof of self-stabilization\",\n        \"An infinite needle in a finite haystack: Finding infinite counter-models in deductive verification\",\n        \"Axe ’em: Eliminating spurious states with induction axioms\",\n        \"Liveness with invisible ranking\",\n        \"Proving liveness of parameterized programs\",\n        \"Bounded quantifier instantiation for checking inductive invariants\",\n        \"Assigning Meanings to Programs\",\n        \"A note on k-state self-stabilization in a ring with k=n\",\n        \"An alternative solution to a problem on self-stabilization\",\n        \"Ironfleet: proving safety and liveness of practical distributed systems\",\n        \"Linear ranking for linear lasso programs\",\n        \"Regular abstractions for array systems\",\n        \"Run-time complexity bounds using squeezers\",\n        \"An exercise in proving self-stabilization with a variant function\",\n        \"Proving cutoff bounds for safety properties in first-order logic (full version)\",\n        \"Implicit rankings fol\",\n        \"Completing the temporal picture\",\n        \"Toward liveness proofs at scale\",\n        \"Z3: an efficient SMT solver\",\n        \"Towards automatic convergence verification of self-stabilizing algorithms\",\n        \"Reducing liveness to safety in first-order logic\",\n        \"Temporal prophecy for proving temporal properties of infinite-state systems\",\n        \"Paxos made epr: decidable reasoning about distributed protocols\",\n        \"Ivy: Safety verification by interactive generalization\",\n        \"A complete method for the synthesis of linear ranking functions\",\n        \"Transition invariants\",\n        \"Anvil: Verifying liveness of cluster management controllers\",\n        \"Counterexample driven quantifier instantiations with applications to distributed protocols\",\n        \"Modularity for decidability of deductive verification with applications to distributed systems\",\n        \"Checking a large routine\",\n        \"Synthesizing ranking functions from bits and pieces\",\n        \"An abstract domain to infer ordinal-valued ranking functions\",\n        \"An automata-theoretic approach to linear temporal logic\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Implicit Rankings for Verifying Liveness Properties in First-Order Logic, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}