{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CSGCL: Community-Strength-Enhanced Graph Contrastive Learning\n\nPaper Abstract: Abstract Graph Contrastive Learning (GCL) is an effective way to learn generalized graph representations in a self-supervised manner, and has grown rapidly in recent years. However, the underlying community semantics has not been well explored by most previous GCL methods. Research that attempts to leverage communities in GCL regards them as having the same influence on the graph, leading to extra representation biases. To tackle this issue, we define “community strength” to measure the difference of influence among communities. Under this premise, we propose a Community-Strength-enhanced Graph Contrastive Learning (CSGCL) framework to preserve community strength throughout the learning process. Firstly, we present two novel graph augmentation methods, Communal Attribute Voting (CAV) and Communal Edge Dropping (CED), where the perturbations of node attributes and edges are guided by community strength. Secondly, we propose a dynamic “Team-up” contrastive learning scheme, where community strength is used to progressively fine-tune the contrastive objective. We report extensive experiment results on three downstream tasks: node classification, node clustering, and link prediction. CSGCL achieves state-of-the-art performance compared with other GCL methods, validating that community strength brings effectiveness and generality to graph representations. Our code is available at https://github.com/HanChen-HUST/CSGCL.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Robust data clustering\",\n        \"Self-organizing neural network that discovers surfaces in random-dot stereograms\",\n        \"Fast unfolding of communities in large networks\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Finding community structure in very large networks\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Community structure in social and biological networks\",\n        \"node2vec: Scalable feature learning for networks\",\n        \"Contrastive multi-view representation learning on graphs\",\n        \"LightGCN: Simplifying and powering graph convolution network for recommendation\",\n        \"Learning deep representations by mutual information estimation and maximization\",\n        \"Peer-to-peer communities: formation and discovery\",\n        \"Variational graph auto-encoders\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Augmentation-free self-supervised learning on graphs\",\n        \"Hierarchical bipartite graph neural networks: Towards large-scale e-commerce applications\",\n        \"Graph communal contrastive learning\",\n        \"Graph self-supervised learning: A survey\",\n        \"Classification and analysis of multivariate observations\",\n        \"Wiki-CS: A wikipedia-based benchmark for graph neural networks\",\n        \"Finding and evaluating community structure in networks\",\n        \"Finding community structure in networks using the eigenvectors of matrices\",\n        \"Representation learning with contrastive predictive coding\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"DeepWalk: Online learning of social representations\",\n        \"Communicative subgraph representation learning for multi-relational inductive drug-gene interaction prediction\",\n        \"DropEdge: Towards deep graph convolutional networks on node classification\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"General optimization technique for high-quality community detection in complex networks\",\n        \"Learning deep representations for graph clustering\",\n        \"From Louvain to Leiden: guaranteeing well-connected communities\",\n        \"Visualizing data using t-SNE\",\n        \"Graph attention networks\",\n        \"Deep graph infomax\",\n        \"Community preserving network embedding\",\n        \"Locating structural centers: A density-based clustering method for community detection\",\n        \"Unsupervised learning for community detection in attributed networks based on graph convolutional network\",\n        \"Contrastive graph structure learning via information bottleneck for recommendation\",\n        \"Individual comparisons by ranking methods\",\n        \"CLARE: A semi-supervised community detection algorithm\",\n        \"Graph contrastive learning with augmentations\",\n        \"An information flow model for conflict and fission in small groups\",\n        \"SEAL: Learning heuristics for community detection with generative adversarial networks\",\n        \"A benchmark and comprehensive survey on knowledge graph entity alignment via representation learning\",\n        \"WGCN: Graph convolutional networks with weighted structural features\",\n        \"Predicting missing links via local information\",\n        \"Deep graph contrastive representation learning\",\n        \"Graph contrastive learning with adaptive augmentation\",\n        \"RoSA: A robust self-aligned framework for node-node graph contrastive learning\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in CSGCL: Community-Strength-Enhanced Graph Contrastive Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}