{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: From Innermost to Full Probabilistic Term Rewriting: Almost-Sure Termination, Complexity, and Modularity\n\nPaper Abstract: Abstract. There are many evaluation strategies for term rewrite systems, but automatically proving termination or analyzing complexity is usually easiest for innermost rewriting. Several syntactic criteria exist when innermost termination implies full termination or when runtime complexity and innermost runtime complexity coincide. We adapt these criteria to the probabilistic setting, e.g., we show when it suffices to analyze almost-sure termination w.r.t. innermost rewriting in order to prove full almost-sure termination of probabilistic term rewrite systems. These criteria can be applied for both termination and complexity analysis in the probabilistic setting. We implemented and evaluated our new contributions in the tool AProVE. Moreover, we also use our new results on innermost and full probabilistic rewriting to investigate the modularity of probabilistic termination properties.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Formalizing the dependency pair criterion for innermost termination\",\n        \"Lexicographic ranking supermartingales: An efficient approach to termination of probabilistic programs\",\n        \"On probabilistic term rewriting\",\n        \"Termination of term rewriting using dependency pairs\",\n        \"A combination framework for complexity\",\n        \"PMaude: Rewrite-based specification language for probabilistic object systems\",\n        \"TcT: Tyrolean Complexity Tool\",\n        \"A modular cost analysis for probabilistic programs\",\n        \"Analysing parallel complexity of term rewriting\",\n        \"Proving positive almost-sure termination\",\n        \"Probabilistic rewrite strategies. Applications to ELAN\",\n        \"CoLoR: a Coq library on well-founded rewrite relations and its application to the automated verification of termination certificates\",\n        \"A calculus for amortized expected runtimes\",\n        \"Term Rewriting and All That\",\n        \"On probabilistic termination of functional programs with continuous distributions\",\n        \"Certification of automated termination proofs\",\n        \"Termination analysis of probabilistic programs with martingales\",\n        \"Confluence in probabilistic rewriting\",\n        \"Intersection types and (positive) almost-sure termination\",\n        \"Probabilistic termination by monadic affine sized typing\",\n        \"Probabilistic rewriting and asymptotic behaviour: On termination and unique normal forms\",\n        \"Termination of nondeterministic probabilistic programs\",\n        \"Probabilistic termination: Soundness, completeness, and compositionality\",\n        \"Analyzing runtime complexity via innermost runtime complexity\",\n        \"Transforming derivational complexity of term rewriting to runtime complexity\",\n        \"Analyzing program termination and complexity automatically with AProVE\",\n        \"Computing expected runtimes for constant probability programs\",\n        \"Probabilistic programming\",\n        \"MU-TERM: Verify termination properties automatically (system description)\",\n        \"Abstract relations between restricted termination and confluence properties of rewrite systems\",\n        \"Mechanizing and improving dependency pairs\",\n        \"Modular verification for almost-sure termination of probabilistic programs\",\n        \"Termination proofs and the length of derivations (preliminary version)\",\n        \"Automated complexity analysis based on the dependency pair method\",\n        \"Simple word problems in universal algebras\",\n        \"A complete dependency pair framework for almost-sure innermost termination of probabilistic term rewriting\",\n        \"From innermost to full almost-sure termination of probabilistic term rewriting\",\n        \"Proving almost-sure innermost termination of probabilistic term rewriting using dependency pairs\",\n        \"Annotated dependency pairs for full almost-sure termination of probabilistic term rewriting\",\n        \"Expected runtime analyis by program verification\",\n        \"Weakest precondition reasoning for expected runtimes of randomized algorithms\",\n        \"Some characteristics of strong innermost normalization\",\n        \"Tyrolean Termination Tool 2\",\n        \"Automated expected amortised cost analysis of probabilistic data structures\",\n        \"Automated termination analysis of polynomial probabilistic programs\",\n        \"Inferring expected runtimes of probabilistic integer programs using expected sizes\",\n        \"A new proof rule for almost-sure termination\",\n        \"Bounded expectations: Resource analysis for probabilistic programs\",\n        \"Analyzing innermost runtime complexity of term rewriting by dependency pairs\",\n        \"On theories with a combinatorial definition of equivalence\",\n        \"Computing in Systems Described by Equations\",\n        \"Probabilistic LCF\",\n        \"Counterexamples to the termination for the direct sum of term rewriting systems\",\n        \"Certification of termination proofs using CeTA\",\n        \"Raising expectations: Automating expected cost analysis with types\",\n        \"Nagoya Termination Tool\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in From Innermost to Full Probabilistic Term Rewriting: Almost-Sure Termination, Complexity, and Modularity, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}