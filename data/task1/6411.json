{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Transformer Neural Processes: Uncertainty-Aware Meta Learning Via Sequence Modeling\n\nPaper Abstract: Abstract Neural Processes (NPs) are a popular class of approaches for meta-learning. Similar to Gaussian Processes (GPs), NPs define distributions over functions and can estimate uncertainty in their predictions. However, unlike GPs, NPs and their variants suffer from underfitting and often have intractable likelihoods, which limit their applications in sequential decision making. We propose Transformer Neural Processes (TNPs), a new member of the NP family that casts uncertainty-aware meta learning as a sequence modeling problem. We learn TNPs via an autoregressive likelihood-based objective and instantiate it with a novel transformer-based architecture. The model architecture respects the inductive biases inherent to the problem structure, such as invariance to the observed data points and equivariance to the unobserved points. We further investigate knobs within the TNP framework that tradeoff expressivity of the decoding distribution with extra computation. Empirically, we show that TNPs achieve state-of-the-art performance on various benchmark problems, outperforming all previous NP variants on meta regression, image completion, contextual multi-armed bandits, and Bayesian optimization.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fixing a broken elbo\",\n        \"Botorch: A framework for efficient monte-carlo bayesian optimization\",\n        \"Language models are few-shot learners\",\n        \"The gaussian neural process\",\n        \"Prediction, learning, and games\",\n        \"Data distributional properties drive emergent in-context learning in transformers\",\n        \"Decision transformer: Reinforcement learning via sequence modeling\",\n        \"Generative pretraining from pixels\",\n        \"Variational lossy autoencoder\",\n        \"Uncertainty toolbox: an open-source library for assessing, visualizing, and improving uncertainty quantification\",\n        \"Emnist: Extending mnist to handwritten letters\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Meta-learning stationary stochastic process prediction with convolutional neural processes\",\n        \"A tutorial on bayesian optimization\",\n        \"Meta-learning surrogate models for sequential decision making\",\n        \"Gpytorch: Blackbox matrix-matrix gaussian process inference with gpu acceleration\",\n        \"Conditional neural processes\",\n        \"Neural processes\",\n        \"Convolutional conditional neural processes\",\n        \"Probing uncertainty estimates of neural processes\",\n        \"Jumbo: Scalable multi-task bayesian optimization using offline data\",\n        \"Equivariant learning of stochastic fields: Gaussian processes and steerable conditional neural processes\",\n        \"Attentive neural processes\",\n        \"Benchmark functions for bayesian optimization\",\n        \"BayesO: A Bayesian optimization framework in Python\",\n        \"Auto-encoding variational bayes\",\n        \"Self-attention between datapoints: Going beyond individual input-output pairs in deep learning\",\n        \"Empirical evaluation of neural process objectives\",\n        \"Set transformer: A framework for attention-based permutation-invariant neural networks\",\n        \"Bootstrapping neural processes\",\n        \"Variational transformers for diverse response generation\",\n        \"Large-scale celebfaces attributes (celeba) dataset\",\n        \"Pretrained transformers as universal computation engines\",\n        \"On contrastive representations of stochastic processes\",\n        \"The application of bayesian methods for seeking the extremum\",\n        \"Transformers can do bayesian inference\",\n        \"Janossy pooling: Learning deep permutation-invariant functions for variable-size inputs\",\n        \"Improving language understanding with unsupervised learning\",\n        \"Language models are unsupervised multitask learners\",\n        \"Learning transferable visual models from natural language supervision\",\n        \"Deep bayesian bandits showdown: An empirical comparison of bayesian deep networks for thompson sampling\",\n        \"Evolutionary principles in self-referential learning, or on learning how to learn: the meta-meta-â€¦ hook\",\n        \"Global versus local search in constrained optimization of computer models\",\n        \"Taking the human out of the loop: A review of bayesian optimization\",\n        \"Sequential neural processes\",\n        \"Meta-learning: A survey\",\n        \"Attention is all you need\",\n        \"Metafun: Meta-learning with iterative functional updates\",\n        \"Online decision transformer\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Transformer Neural Processes: Uncertainty-Aware Meta Learning Via Sequence Modeling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}