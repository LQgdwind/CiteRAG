{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DisCo-CLIP: A Distributed Contrastive Loss for Memory Efficient CLIP Training\n\nPaper Abstract: Abstract We propose DisCo-CLIP, a distributed memory-efficient CLIP training approach, to reduce the memory consumption of contrastive loss when training contrastive learning models. Our approach decomposes the contrastive loss and its gradient computation into two parts, one to calculate the intra-GPU gradients and the other to compute the inter-GPU gradients. According to our decomposition, only the intra-GPU gradients are computed on the current GPU, while the inter-GPU gradients are collected via all_reduce from other GPUs instead of being repeatedly computed on every GPU. In this way, we can reduce the GPU memory consumption of contrastive loss computation from ùí™‚Äã(B2)ùí™superscriptùêµ2\\mathcal{O}(B^{2}) to ùí™‚Äã(B2N)ùí™superscriptùêµ2ùëÅ\\mathcal{O}(\\frac{B^{2}}{N}), where BùêµB and NùëÅN are the batch size and the number of GPUs used for training. Such a distributed solution is mathematically equivalent to the original non-distributed contrastive loss computation, without sacrificing any computation accuracy. It is particularly efficient for large-batch CLIP training. For instance, DisCo-CLIP can enable contrastive training of a ViT-B/32 model with a batch size of 32K or 196K using 8 or 64 A100 40GB GPUs, compared with the original CLIP solution which requires 128 A100 40GB GPUs to train a ViT-B/32 model with a batch size of 32K. The code will be released at https://github.com/IDEA-Research/DisCo-CLIP\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Colossal-ai: A unified deep learning system for large-scale parallel training\",\n        \"Language models are few-shot learners\",\n        \"Conceptual 12M: Pushing web-scale image-text pre-training to recognize long-tail visual concepts\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Training deep nets with sublinear memory cost\",\n        \"An empirical study of training self-supervised vision transformers\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Scaling deep contrastive learning batch size under memory limited setup\",\n        \"The reversible residual network: Backpropagation without storing activations\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Memory-efficient backpropagation through time\",\n        \"Deep residual learning for image recognition\",\n        \"The many faces of robustness: A critical analysis of out-of-distribution generalization\",\n        \"Openclip\",\n        \"Scaling up visual and vision-language representation learning with noisy text supervision\",\n        \"Adam: A method for stochastic optimization\",\n        \"Reformer: The efficient transformer\",\n        \"Big transfer (bit): General visual representation learning\",\n        \"Blip: Bootstrapping language-image pre-training for unified vision-language understanding and generation\",\n        \"Grounded language-image pre-training\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"Sgdr: Stochastic gradient descent with warm restarts\",\n        \"Decoupled weight decay regularization\",\n        \"Combined scaling for open-vocabulary image classification\",\n        \"Learning transferable visual models from natural language supervision\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Zero: Memory optimizations toward training trillion parameter models\",\n        \"Zero-infinity: Breaking the gpu memory wall for extreme scale deep learning\",\n        \"Deepspeed: System optimizations enable training deep learning models with over 100 billion parameters\",\n        \"Do imagenet classifiers generalize to imagenet?\",\n        \"Imagenet-21k pretraining for the masses\",\n        \"Laion-5b: An open large-scale dataset for training next generation image-text models\",\n        \"Laion-400m: Open dataset of clip-filtered 400 million image-text pairs\",\n        \"K-lite: Learning transferable visual models with external knowledge\",\n        \"Wit: Wikipedia-based image text dataset for multimodal multilingual machine learning\",\n        \"Yfcc100m: The new data in multimedia research\",\n        \"Attention is all you need\",\n        \"Learning robust global representations by penalizing local predictive power\",\n        \"Git: A generative image-to-text transformer for vision and language\",\n        \"Cvt: Introducing convolutions to vision transformers\",\n        \"Filip: Fine-grained interactive language-image pre-training\",\n        \"Scaling sgd batch size to 32k for imagenet training\",\n        \"Large batch optimization for deep learning: Training bert in 76 minutes\",\n        \"Coca: Contrastive captioners are image-text foundation models\",\n        \"Florence: A new foundation model for computer vision\",\n        \"Lit: Zero-shot transfer with locked-image text tuning\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in DisCo-CLIP: A Distributed Contrastive Loss for Memory Efficient CLIP Training, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}