{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: How the Move Acceptance Hyper-Heuristic Copes With Local Optima: Drastic Differences Between Jumps and Cliffs\n\nPaper Abstract: Abstract. In recent work, Lissovoi, Oliveto, and Warwicker (Artificial Intelligence (2023)) proved that the Move Acceptance Hyper-Heuristic (MAHH) leaves the local optimum of the multimodal cliff benchmark with remarkable efficiency. With its O​(n3)𝑂superscript𝑛3O(n^{3}) runtime, for almost all cliff widths d,𝑑d, the MAHH massively outperforms the Θ​(nd)Θsuperscript𝑛𝑑\\Theta(n^{d}) runtime of simple elitist evolutionary algorithms (EAs). For the most prominent multimodal benchmark, the jump functions, the given runtime estimates of O​(n2​m​m−Θ​(m))𝑂superscript𝑛2𝑚superscript𝑚Θ𝑚O(n^{2m}m^{-\\Theta(m)}) and Ω​(2Ω​(m))Ωsuperscript2Ω𝑚\\Omega(2^{\\Omega(m)}), for gap size m≥2𝑚2m\\geq 2, are far apart and the real performance of MAHH is still an open question. In this work, we resolve this question. We prove that for any choice of the MAHH selection parameter p𝑝p, the expected runtime of the MAHH on a jump function with gap size m=o​(n1/2)𝑚𝑜superscript𝑛12m=o(n^{1/2}) is at least Ω​(n2​m−1/(2​m−1)!)Ωsuperscript𝑛2𝑚12𝑚1\\Omega(n^{2m-1}/(2m-1)!). This renders the MAHH much slower than simple elitist evolutionary algorithms with their typical O​(nm)𝑂superscript𝑛𝑚O(n^{m}) runtime. We also show that the MAHH with the global bit-wise mutation operator instead of the local one-bit operator optimizes jump functions in time O​(min⁡{m​nm,n2​m−1m!​Ω​(m)m−2})𝑂𝑚superscript𝑛𝑚superscript𝑛2𝑚1𝑚Ωsuperscript𝑚𝑚2O(\\min\\{mn^{m},\\frac{n^{2m-1}}{m!\\Omega(m)^{m-2}}\\}), essentially the minimum of the optimization times of the (1+1)11(1+1) EA and the MAHH. This suggests that combining several ways to cope with local optima can be a fruitful approach.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Runtime analysis of selection hyper-heuristics with classical learning mechanisms\",\n        \"Lazy parameter tuning and control: choosing all parameters randomly from a power-law distribution\",\n        \"Runtime analysis of a heavy-tailed (1+(λ,λ)) genetic algorithm on jump functions\",\n        \"A rigorous runtime analysis of the (1+(λ,λ)) GA on Jump functions\",\n        \"Theory of Randomized Search Heuristics\",\n        \"Generalized jump functions\",\n        \"A rigorous runtime analysis of the 2-MMASib on jump functions: ant colony optimizers can cope well with local optima\",\n        \"Stochastic population update can provably be helpful in multi-objective evolutionary algorithms\",\n        \"Hyper-heuristics: a survey of the state of the art\",\n        \"The unrestricted black-box complexity of jump functions\",\n        \"When hypermutations and ageing enable artificial immune systems to outperform evolutionary algorithms\",\n        \"Escaping local optima with diversity mechanisms and crossover\",\n        \"Escaping local optima using crossover with emergent diversity\",\n        \"The runtime of the compact genetic algorithm on Jump functions\",\n        \"Does comma selection help to cope with local optima?\",\n        \"Theory of parameter control for discrete black-box optimization: provable performance gains through dynamic parameter choices\",\n        \"How the move acceptance hyper-heuristic copes with local optima: drastic differences between jumps and cliffs\",\n        \"Lasting Diversity and Superior Runtime Guarantees for the (μ+1) Genetic Algorithm\",\n        \"How well does the Metropolis algorithm cope with local optima?\",\n        \"Multiplicative drift analysis\",\n        \"Fast genetic algorithms\",\n        \"On the runtime analysis of selection hyper-heuristics with adaptive learning periods\",\n        \"Theory of Evolutionary Computation—Recent Developments in Discrete Optimization\",\n        \"A first runtime analysis of the NSGA-II on a multimodal problem\",\n        \"From understanding the population dynamics of the NSGA-II to the first proven lower bounds\",\n        \"Runtime analysis for the NSGA-II: Provable speed-ups from crossover\",\n        \"Stagnation detection meets fast mutation\",\n        \"Theoretical analyses of multi-objective evolutionary algorithms on multi-modal objectives\",\n        \"Dynamic parameter control in simple evolutionary algorithms\",\n        \"On the analysis of the (1+1) evolutionary algorithm\",\n        \"Fast building block assembly by majority vote crossover\",\n        \"Escaping local optima with local search: A theory-driven discussion\",\n        \"Evolutionary algorithms and the maximum matching problem\",\n        \"On the runtime dynamics of the compact genetic algorithm on jump functions\",\n        \"Self-adjusting offspring population sizes outperform fixed parameters on the cliff function\",\n        \"When the plus strategy outperforms the comma strategy and when not\",\n        \"Analyzing Evolutionary Algorithms – The Computer Science Perspective\",\n        \"On the black-box complexity of example functions: the real jump function\",\n        \"Evolutionary algorithms - how to cope with plateaus of constant fitness and when to reject strings of the same fitness\",\n        \"How crossover helps in pseudo-Boolean optimization\",\n        \"A runtime analysis of simple hyper-heuristics: to mix or not to mix operators\",\n        \"On the time complexity of algorithm selection hyper-heuristics for multimodal optimisation\",\n        \"How the duration of the learning period affects the performance of random gradient selection hyper-heuristics\",\n        \"Simple hyper-heuristics control the neighbourhood size of randomised local search optimally for LeadingOnes\",\n        \"When move acceptance selection hyper-heuristics outperform Metropolis and elitist evolutionary algorithms and when not\",\n        \"The compact genetic algorithm struggles on Cliff functions\",\n        \"Randomized local search, evolutionary algorithms, and the minimum spanning tree problem\",\n        \"Bioinspired Computation in Combinatorial Optimization – Algorithms and Their Computational Complexity\",\n        \"Towards a runtime comparison of natural and artificial evolution\",\n        \"Stagnation detection in highly multimodal fitness landscapes\",\n        \"Self-adjusting evolutionary algorithms for multimodal optimization\",\n        \"Stagnation detection with randomized local search\",\n        \"The benefits and limitations of voting mechanisms in evolutionary optimisation\",\n        \"On cumulative sums of random variables\",\n        \"Exploration and exploitation without mutation: solving the jump function in Θ(n) time\",\n        \"How majority-vote crossover and estimation-of-distribution algorithms cope with fitness valleys\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in How the Move Acceptance Hyper-Heuristic Copes With Local Optima: Drastic Differences Between Jumps and Cliffs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}