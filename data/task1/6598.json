{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Towards Understanding Mixture of Experts in Deep Learning\n\nPaper Abstract: Abstract The Mixture-of-Experts (MoE) layer, a sparsely-activated model controlled by a router, has achieved great success in deep learning. However, the understanding of such architecture remains elusive. In this paper, we formally study how the MoE layer improves the performance of neural network learning and why the mixture model will not collapse into a single model. Our empirical results suggest that the cluster structure of the underlying problem and the non-linearity of the expert are pivotal to the success of MoE. To further understand this, we consider a challenging classification problem with intrinsic cluster structures, which is hard to learn using a single expert. Yet with the MoE layer, by choosing the experts as two-layer nonlinear convolutional neural networks (CNNs), we show that the problem can be learned successfully. Furthermore, our theory shows that the router can learn the cluster-center features, which helps divide the input complex problem into simpler linear classification sub-problems that individual experts can conquer. To our knowledge, this is the first result towards formally understanding the mechanism of the MoE layer for deep learning.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"What can ResNet learn efficiently, going beyond kernels?\",\n        \"Backward feature correction: How deep learning performs deep learning\",\n        \"Feature purification: How adversarial training performs robust deep learning\",\n        \"Towards understanding ensemble, knowledge distillation and self-distillation in deep learning\",\n        \"Learning and generalization in overparameterized neural networks, going beyond two layers\",\n        \"A convergence theory for deep learning via over-parameterization\",\n        \"Tensor decompositions for learning latent variable models\",\n        \"A method of moments for mixture models and hidden markov models\",\n        \"Fine-grained analysis of optimization and generalization for overparameterized two-layer neural networks\",\n        \"On exact computation with an infinitely wide neural net\",\n        \"Beyond linearization: On quadratic and higher-order approximation of wide neural networks\",\n        \"Statistical guarantees for the em algorithm: From population to sample-based analysis\",\n        \"French sentiment analysis with bert\",\n        \"Benign overfitting in two-layer convolutional neural networks\",\n        \"Generalization bounds of stochastic gradient descent for wide and deep neural networks\",\n        \"Spectral experts for estimating mixtures of linear regressions\",\n        \"A parallel mixture of svms for very large scale problems\",\n        \"Language modeling with gated convolutional networks\",\n        \"Mixtures of linear regressions\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Gradient descent provably optimizes over-parameterized neural networks\",\n        \"Tricks for training sparse translation models\",\n        \"Learning factored representations in a deep mixture of experts\",\n        \"Fitting mixtures of linear regressions\",\n        \"Switch transformers: Scaling to trillion parameter models with simple and efficient sparsity\",\n        \"Twitter sentiment classification using distant supervision\",\n        \"Deep residual learning for image recognition\",\n        \"Identifiability and unmixing of latent parse trees\",\n        \"Adaptive mixtures of local experts\",\n        \"Neural tangent kernel: Convergence and generalization in neural networks\",\n        \"Adam is no better than normalized sgd: Dissecting how adaptivity improves gan performance\",\n        \"Hidden markov decision trees\",\n        \"Hierarchical mixtures of experts and the em algorithm\",\n        \"Variable selection in finite mixture of regression models\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Base layers: Simplifying training of large, sparse models\",\n        \"Learning overparameterized neural networks via stochastic gradient descent on structured data\",\n        \"Learning over-parametrized two-layer neural networks beyond ntk\",\n        \"An end-to-end discriminative approach to machine translation\",\n        \"Conditional random fields for object recognition\",\n        \"Hash layers for large sparse models\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Outrageously large neural networks: The sparsely-gated mixture-of-experts layer\",\n        \"Sentiment analysis of product reviews in russian using convolutional neural networks\",\n        \"Mixtures of gaussian processes\",\n        \"Visualizing data using t-sne\",\n        \"Attention is all you need\",\n        \"Learning and approximation capabilities of adaptive spline activation function neural networks\",\n        \"Max-margin hidden conditional random fields for human action recognition\",\n        \"High dimensional em algorithm: Statistical optimization and asymptotic normality\",\n        \"Toward understanding the feature learning process of self-supervised contrastive learning\",\n        \"Alternating minimization for mixed linear regression\",\n        \"Understanding the generalization of adam in learning neural networks with proper regularization\",\n        \"Stochastic gradient descent optimizes over-parameterized deep relu networks\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Towards Understanding Mixture of Experts in Deep Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}