{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Re-parameterizing Your Optimizers rather than Architectures\n\nPaper Abstract: Abstract The well-designed structures in neural networks reflect the prior knowledge incorporated into the models. However, though different models have various priors, we are used to training them with model-agnostic optimizers such as SGD. In this paper, we propose to incorporate model-specific prior knowledge into optimizers by modifying the gradients according to a set of model-specific hyper-parameters. Such a methodology is referred to as Gradient Re-parameterization, and the optimizers are named RepOptimizers. For the extreme simplicity of model structure, we focus on a VGG-style plain model and showcase that such a simple model trained with a RepOptimizer, which is referred to as RepOpt-VGG, performs on par with or better than the recent well-designed models. From a practical perspective, RepOpt-VGG is a favorable base model because of its simple structure, high inference speed and training efficiency. Compared to Structural Re-parameterization, which adds priors into models via constructing extra training-time structures, RepOptimizers require no extra forward/backward computations and solve the problem of quantization. We hope to spark further research beyond the realms of model structure design. Code and models https://github.com/DingXiaoH/RepOptimizers.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Backprop evolution\",\n        \"Derivative-free optimization of noisy functions via quasi-newton methods\",\n        \"Cascade r-cnn: High quality object detection and instance segmentation\",\n        \"Repghost: A hardware-efficient ghost module via re-parameterization\",\n        \"MMDetection: Open mmlab detection toolbox and benchmark\",\n        \"MMSegmentation: Openmmlab semantic segmentation toolbox and benchmark\",\n        \"The cityscapes dataset for semantic urban scene understanding\",\n        \"Randaugment: Practical automated data augmentation with a reduced search space\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Quasi-newton methods, motivation and theory\",\n        \"Repvgg: Making vgg-style convnets great again\",\n        \"Repmlpnet: Hierarchical vision mlp with re-parameterized locality\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Adaptive subgradient methods for online learning and stochastic optimization\",\n        \"Accurate, large minibatch sgd: Training imagenet in 1 hour\",\n        \"Caltech-256 object category dataset\",\n        \"Shampoo: Preconditioned stochastic tensor optimization\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n        \"Deep residual learning for image recognition\",\n        \"Mask r-cnn\",\n        \"Structured quasi-newton methods for optimization with orthogonality constraints\",\n        \"Squeeze-and-excitation networks\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Adam: A method for stochastic optimization\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Incorporating prior knowledge on features into learning\",\n        \"Fast algorithms for convolutional neural networks\",\n        \"Microsoft coco: Common objects in context\",\n        \"Darts: Differentiable architecture search\",\n        \"Decoupled weight decay regularization\",\n        \"Shufflenet v2: Practical guidelines for efficient cnn architecture design\",\n        \"The need for biases in learning generalizations\",\n        \"Compatible natural gradient policy search\",\n        \"Derivative-free optimization: a review of algorithms and comparison of software implementations\",\n        \"A stochastic approximation method\",\n        \"Sub-sampled newton methods\",\n        \"Conditioning of quasi-newton methods for function minimization\",\n        \"Is normalization indispensable for training deep neural network?\",\n        \"Adafactor: Adaptive learning rates with sublinear memory cost\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"A survey of optimization methods from a machine learning perspective\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Divide the gradient by a running average of its recent magnitude\",\n        \"Mlp-mixer: An all-mlp architecture for vision\",\n        \"Unbiased gradient estimation in unrolled computation graphs with persistent evolution strategies\",\n        \"Unified perceptual parsing for scene understanding\",\n        \"Diracnets: Training very deep neural networks without skip-connections\",\n        \"Visualizing and understanding convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Re-parameterizing Your Optimizers rather than Architectures, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}