{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Bayesian Flow Networks\n\nPaper Abstract: Abstract This paper introduces Bayesian Flow Networks (BFNs), a new class of generative model in which the parameters of a set of independent distributions are modified with Bayesian inference in the light of noisy data samples, then passed as input to a neural network that outputs a second, interdependent distribution. Starting from a simple prior and iteratively updating the two distributions yields a generative procedure similar to the reverse process of diffusion models; however it is conceptually simpler in that no forward process is required. Discrete and continuous-time loss functions are derived for continuous, discretised and discrete data, along with sample generation procedures. Notably, the network inputs for discrete data lie on the probability simplex, and are therefore natively differentiable, paving the way for gradient-based sample guidance and few-step generation in discrete domains such as language modelling. The loss function directly optimises data compression and places no restrictions on the network architecture. In our experiments BFNs achieve competitive log-likelihoods for image modelling on dynamically binarized MNIST and CIFAR-10, and outperform all known discrete diffusion models on the text8 character-level language modelling task111Code and trained models can be found at https://github.com/nnaisense/bayesian-flow-networks.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Structured Denoising Diffusion Models in Discrete State-Spaces\",\n        \"Analog bits: Generating discrete data using diffusion models with self-conditioning\",\n        \"Very deep vaes generalize autoregressive models and can outperform them on images\",\n        \"Generating long sequences with sparse transformers\",\n        \"Diffusion models beat gans on image synthesis\",\n        \"Continuous diffusion for categorical data\",\n        \"Asymmetric numeral systems\",\n        \"Stochastics: Introduction to Probability and Statistics\",\n        \"Generating sequences with recurrent neural networks\",\n        \"Gaussian error linear units (gelus)\",\n        \"Keeping the neural networks simple by minimizing the description length of the weights\",\n        \"Denoising diffusion probabilistic models\",\n        \"Autoregressive diffusion models\",\n        \"Argmax Flows and Multinomial Diffusion: Learning Categorical Distributions\",\n        \"Locally masked convolution for autoregressive models\",\n        \"Soft truncation: A universal training technique of score-based diffusion model for high precision score estimation\",\n        \"Variational diffusion models\",\n        \"Auto-encoding variational bayes\",\n        \"Learning multiple layers of features from tiny images\",\n        \"MNIST handwritten digit database\",\n        \"Diffusion-lm improves controllable text generation\",\n        \"Decoupled weight decay regularization\",\n        \"Reflected diffusion models\",\n        \"Tess: Text-to-text self-conditioned simplex diffusion\",\n        \"Large text compression benchmark.\",\n        \"Generating high fidelity images with subscale pixel networks and multidimensional upscaling\",\n        \"Conjugate bayesian analysis of the gaussian distribution\",\n        \"Improved denoising diffusion probabilistic models\",\n        \"Gpt-4 technical report\",\n        \"Image transformer\",\n        \"Language models are unsupervised multitask learners\",\n        \"Variational inference with normalizing flows\",\n        \"Categorical SDEs with simplex diffusion\",\n        \"High-resolution image synthesis with latent diffusion models\",\n        \"Pixelvae++: Improved pixelvae with discrete prior\",\n        \"On the quantitative analysis of deep belief networks\",\n        \"Progressive distillation for fast sampling of diffusion models\",\n        \"Pixelcnn++: Improving the PixelCNN with discretized logistic mixture likelihood and other modifications\",\n        \"Training and inference on any-order autoregressive models the right way\",\n        \"Consistency regularization for variational auto-encoders\",\n        \"Deep unsupervised learning using nonequilibrium thermodynamics\",\n        \"Score-based generative modeling through stochastic differential equations\",\n        \"Consistency models\",\n        \"Self-conditioned embedding diffusion for text generation\",\n        \"Adaptive Attention Span in Transformers\",\n        \"Generating text with recurrent neural networks\",\n        \"Practical lossless compression with latent variables using bits back coding\",\n        \"Discrete flows: Invertible generative models of discrete data\",\n        \"Nvae: A deep hierarchical variational autoencoder\",\n        \"Score-based generative modeling in latent space\",\n        \"Classification by minimum-message-length inference\",\n        \"Learning fast samplers for diffusion models by differentiating through sample quality\",\n        \"Arithmetic coding for data compression\",\n        \"Latent Normalizing Flows for Discrete Sequences\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Bayesian Flow Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}