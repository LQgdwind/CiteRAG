{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Plan-then-Generate: Controlled Data-to-Text Generation via Planning\n\nPaper Abstract: Abstract Recent developments in neural networks have led to the advance in data-to-text generation. However, the lack of ability of neural models to control the structure of generated output can be limiting in certain real-world applications. In this study, we propose a novel Plan-then-Generate (PlanGen) framework to improve the controllability of neural data-to-text models. Extensive experiments and analyses are conducted on two benchmark datasets, ToTTo and WebNLG. The results show that our model is able to control both the intra-sentence and inter-sentence structure of the generated output. Furthermore, empirical comparisons against previous state-of-the-art methods show that our model improves the generation quality as well as the output diversity as judged by human and automatic evaluations.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"METEOR: an automatic metric for MT evaluation with improved correlation with human judgments\",\n        \"Open question answering over tables and text\",\n        \"KGPT: knowledge-grounded pre-training for data-to-text generation\",\n        \"Few-shot NLG with pre-trained language model\",\n        \"Generating text from anonymised structures\",\n        \"The webnlg challenge: Generating text from dbpedia data\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Handling divergent reference texts when evaluating table-to-text generation\",\n        \"Hierarchical neural story generation\",\n        \"Enriching the webnlg corpus\",\n        \"Neural data-to-text generation: A comparison between pipeline and end-to-end architectures\",\n        \"Measuring nominal scale agreement among many raters\",\n        \"The webnlg challenge: Generating text from RDF data\",\n        \"Survey of the state of the art in natural language generation: Core tasks, applications and evaluation\",\n        \"End-to-end content and plan selection for data-to-text generation\",\n        \"The curious case of neural text degeneration\",\n        \"Text-to-text pre-training for data-to-text tasks\",\n        \"Adam: A method for stochastic optimization\",\n        \"A statistical NLG framework for aggregated planning and realization\",\n        \"Design of a knowledge-based report generator\",\n        \"Conditional random fields: Probabilistic models for segmenting and labeling sequence data\",\n        \"BART: denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Triple-to-text generation with an anchor-to-prototype framework\",\n        \"Table-to-text generation by structure-aware seq2seq learning\",\n        \"Roberta: A robustly optimized BERT pretraining approach\",\n        \"Key fact as pivot: A two-stage model for low resource table-to-text generation\",\n        \"Text generation - using discourse strategies and focus constraints to generate natural language text\",\n        \"Step-by-step: Separating planning from realization in neural data-to-text generation\",\n        \"The E2E dataset: New challenges for end-to-end generation\",\n        \"Stochastic language generation for spoken dialogue systems\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Totto: A controlled table-to-text generation dataset\",\n        \"Centering: A parametric theory and its instantiations\",\n        \"Data-to-text generation with content selection and planning\",\n        \"Data-to-text generation with entity modeling\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Building applied natural language generation systems\",\n        \"Investigating pretrained language models for graph-to-text generation\",\n        \"Leveraging pre-trained checkpoints for sequence generation tasks\",\n        \"Get to the point: Summarization with pointer-generator networks\",\n        \"BLEURT: learning robust metrics for text generation\",\n        \"Trainable sentence planning for complex information presentations in spoken dialog systems\",\n        \"Non-autoregressive text generation with pre-trained language models\",\n        \"Few-shot table-to-text generation with prototype memory\",\n        \"Joint learning of a dual SMT system for paraphrase generation\",\n        \"GTR-LSTM: A triple encoder for sentence generation from RDF data\",\n        \"Multi-domain neural network language generation for spoken dialogue systems\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Learning neural templates for text generation\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"Variational template machine for data-to-text generation\",\n        \"Bridging the structural gap between encoding and decoding for data-to-text generation\",\n        \"Texygen: A benchmarking platform for text generation models\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Plan-then-Generate: Controlled Data-to-Text Generation via Planning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}