{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: An 𝑂⁢(𝑛⁢log𝑛)-Time Approximation Scheme for Geometric Many-to-Many Matching\n\nPaper Abstract: Abstract Geometric matching is an important topic in computational geometry and has been extensively studied over decades. In this paper, we study a geometric-matching problem, known as geometric many-to-many matching. In this problem, the input is a set S𝑆S of n𝑛n colored points in ℝdsuperscriptℝ𝑑\\mathbb{R}^{d}, which implicitly defines a graph G=(S,E​(S))𝐺𝑆𝐸𝑆G=(S,E(S)) where E​(S)={(p,q):p,q∈S​ have different colors}𝐸𝑆conditional-set𝑝𝑞𝑝𝑞𝑆 have different colorsE(S)=\\{(p,q):p,q\\in S\\text{ have different colors}\\}, and the goal is to compute a minimum-cost subset E∗⊆E​(S)superscript𝐸𝐸𝑆E^{*}\\subseteq E(S) of edges that cover all points in S𝑆S. Here the cost of E∗superscript𝐸E^{*} is the sum of the costs of all edges in E∗superscript𝐸E^{*}, where the cost of a single edge e𝑒e is the Euclidean distance (or more generally, the Lpsubscript𝐿𝑝L_{p}-distance) between the two endpoints of e𝑒e. Our main result is a (1+ε)1𝜀(1+\\varepsilon)-approximation algorithm with an optimal running time Oε​(n​log⁡n)subscript𝑂𝜀𝑛𝑛O_{\\varepsilon}(n\\log n) for geometric many-to-many matching in any fixed dimension, which works under any Lpsubscript𝐿𝑝L_{p}-norm. This is the first near-linear approximation scheme for the problem in any d≥2𝑑2d\\geq 2. Prior to this work, only the bipartite case of geometric many-to-many matching was considered in ℝ1superscriptℝ1\\mathbb{R}^{1} and ℝ2superscriptℝ2\\mathbb{R}^{2}, and the best known approximation scheme in ℝ2superscriptℝ2\\mathbb{R}^{2} takes Oε​(n1.5⋅𝗉𝗈𝗅𝗒​(log⁡n))subscript𝑂𝜀⋅superscript𝑛1.5𝗉𝗈𝗅𝗒𝑛O_{\\varepsilon}(n^{1.5}\\cdot\\mathsf{poly}(\\log n)) time.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deterministic, near-linear ε𝜀\\\\varepsilon-approximation algorithm for geometric bipartite matching\",\n        \"Euclidean minimum spanning trees and bichromatic closest pairs\",\n        \"Optimal time bounds for some proximity problems in the plane\",\n        \"Polynomial time approximation schemes for Euclidean TSP and other geometric problems\",\n        \"Nearly linear time approximation schemes for Euclidean TSP and other geometric problems\",\n        \"Euclidean spanners: short, thin, and lanky\",\n        \"Approximation algorithms for NP-complete problems on planar graphs\",\n        \"Euclidean bottleneck steiner tree is fixed-parameter tractable\",\n        \"Exact and approximation algorithms for many-to-many point matching in the plane\",\n        \"Data mining-based approach for ontology matching problem\",\n        \"The restriction scaffold problem\",\n        \"On the history of the Euclidean steiner tree problem\",\n        \"On locality-sensitive orderings and their applications\",\n        \"Efficient many-to-many point matching in one dimension\",\n        \"Faster algorithms for computing distances between one-dimensional point sets\",\n        \"Parameterized Algorithms\",\n        \"An ETH-tight exact algorithm for Euclidean TSP\",\n        \"Distance measures for point sets and their computation\",\n        \"On the relative complexities of some geometric problems\",\n        \"New approximation algorithms for minimum weighted edge cover\",\n        \"Fibonacci heaps and their uses in improved network optimization algorithms\",\n        \"Faster scaling algorithms for network problems\",\n        \"A 4/3-approximation for Minimum Weight Edge Cover\",\n        \"Euclidean spanners in high dimensions\",\n        \"A near linear time constant factor approximation for Euclidean bichromatic matching (cost)\",\n        \"Dynamic planar voronoi diagrams for general distance functions and their algorithmic applications\",\n        \"An efficient algorithm for minimum-weight bibranching\",\n        \"Variants of the Hungarian method for assignment problems\",\n        \"Truly optimal Euclidean spanners\",\n        \"Fast Euclidean minimum spanning tree: algorithm, analysis, and applications\",\n        \"Fuzzy minimum weight edge covering problem\",\n        \"An algorithm for a minimum cover of a graph\",\n        \"A near-linear time ε𝜀\\\\varepsilon-approximation algorithm for geometric bipartite matching\",\n        \"An O​(n2)𝑂superscript𝑛2{O}(n^{2}) algorithm for the limited-capacity many-to-many point matching in one dimension\",\n        \"A fast and efficient algorithm for many-to-many matching of points with demands in one dimension\",\n        \"A faster algorithm for the limited-capacity many-to-many point matching in one dimension\",\n        \"A machine learning approach for product matching and categorization\",\n        \"Closest-point problems\",\n        \"How to find steiner minimal trees in Euclidean d𝑑d-space\",\n        \"The geometry of musical rhythm\",\n        \"A comparison of rhythmic similarity measures\",\n        \"Geometry helps in matching\",\n        \"An O​(n​log⁡n)𝑂𝑛𝑛{O}(n\\\\log n) algorithm for the all-nearest-neighbors problem\",\n        \"A divide-and-conquer algorithm for min-cost perfect matching in the plane\",\n        \"Approximation algorithms for bipartite and non-bipartite matching in the plane\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in An 𝑂⁢(𝑛⁢log𝑛)-Time Approximation Scheme for Geometric Many-to-Many Matching, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}