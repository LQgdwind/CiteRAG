{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 63 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Empirical Evaluation of ChatGPT on Requirements Information Retrieval Under Zero-Shot Setting\n\nPaper Abstract: Abstract Recently, various illustrative examples have shown the impressive ability of generative large language models (LLMs) to perform NLP related tasks. ChatGPT undoubtedly is the most representative model. We empirically evaluate ChatGPT’s performance on requirements information retrieval (IR) tasks to derive insights into designing or developing more effective requirements retrieval methods or tools based on generative LLMs. We design an evaluation framework considering four different combinations of two popular IR tasks and two common artifact types. Under zero-shot setting, evaluation results reveal ChatGPT’s promising ability to retrieve requirements relevant information (high recall) and limited ability to retrieve more specific requirements information (low precision). Our evaluation of ChatGPT on requirements IR under zero-shot setting provides preliminary evidence for designing or developing more effective requirements IR methods or tools based on LLMs.\n\n{retrieved_text}\n\nGenerate exactly 63 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 63\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Managing privacy in the digital economy\",\n        \"Understanding “software-defined” from an OS perspective: technical challenges and research issues\",\n        \"Requirements engineering: fundamentals, principles, and techniques\",\n        \"Engineering and managing software requirements, vol. 1\",\n        \"The fundamental nature of requirements engineering activities as a decision-making process\",\n        \"Toward data-driven requirements engineering\",\n        \"User feedback in the appstore: An empirical study\",\n        \"Mining twitter feeds for software user requirements\",\n        \"Prioritizing user concerns in app reviews–A study of requests for new features, enhancements and bug fixes\",\n        \"Understanding in-app advertising issues based on large scale app review analysis\",\n        \"Emerging app issue identification via online joint sentiment-topic tracing\",\n        \"Mining non-functional requirements from app store reviews\",\n        \"Strategies, Benefits and Challenges of App Store-inspired Requirements Elicitation\",\n        \"Recommending new features from mobile app descriptions\",\n        \"Classifying mobile applications using word embeddings\",\n        \"Deep learning\",\n        \"Machine learning for software engineering: A tertiary study\",\n        \"Natural language requirements processing: a 4D vision\",\n        \"Natural language requirements processing: from research to practice\",\n        \"The role of natural language in requirements engineering\",\n        \"Natural Language Processing for Requirements Engineering: A Systematic Mapping Study\",\n        \"PRCBERT: Prompt Learning for Requirement Classification using BERT-based Pretrained Language Models\",\n        \"Nlp-based automated compliance checking of data processing agreements against gdpr\",\n        \"A survey of large language models\",\n        \"A brief overview of ChatGPT: The history, status quo and potential future development\",\n        \"ChatGPT: potential, prospects, and limitations\",\n        \"A systematic process for Mining Software Repositories: Results from a systematic literature review\",\n        \"Intelligent Requirements Elicitation and Modeling: A Literature Review\",\n        \"Norbert: Transfer learning for requirements classification\",\n        \"Automatic Terminology Extraction and Ranking for Feature Modeling\",\n        \"Identifying key features from app user reviews\",\n        \"Analysing app reviews for software engineering: a systematic literature review\",\n        \"Natural Language Annotation for Machine Learning: A guide to corpus-building for applications\",\n        \"Pure: A dataset of public requirements documents\",\n        \"Natural language processing with Python: analyzing text with the natural language toolkit\",\n        \"Using domain-specific corpora for improved handling of ambiguity in requirements\",\n        \"An Aspect-Based Unsupervised Approach for Classifying Non-Functional Requirements on Software Reviews\",\n        \"Pre-train, prompt, and predict: A systematic survey of prompting methods in natural language processing\",\n        \"The coding manual for qualitative researchers\",\n        \"Super-NaturalInstructions: Generalization via Declarative Instructions on 1600+ NLP Tasks\",\n        \"Exploring the feasibility of chatgpt for event extraction\",\n        \"Introduction to information retrieval, vol. 39\",\n        \"Empirical evaluation of tools for hairy requirements engineering tasks\",\n        \"The content analysis guidebook\",\n        \"Acquiring creative requirements from the crowd: Understanding the influences of personality and creative potential in Crowd RE\",\n        \"A survey of app store analysis for software engineering\",\n        \"App store effects on software engineering practices\",\n        \"Software requirements and specifications: A survey of needs and languages\",\n        \"Environment-driven abstraction identification for requirements-based testing\",\n        \"Mining requirements knowledge from collections of domain documents\",\n        \"On the automatic classification of app reviews\",\n        \"An approach to constructing feature models based on requirements clustering\",\n        \"Analyzing user perspectives on mobile app privacy at scale\",\n        \"Identifying security issues for mobile applications based on user review summarization\",\n        \"Domain-Specific Analysis of Mobile App Reviews Using Keyword-Assisted Topic Models\",\n        \"Generating question titles for stack overflow from mined code snippets\",\n        \"Exploring privacy requirements gap between developers and end users\",\n        \"An exploratory study of twitter messages about software applications\",\n        \"Automatically Matching Bug Reports With Related App Reviews\",\n        \"Opinion mining for software development: a systematic literature review\",\n        \"A Review of ChatGPT Applications in Education, Marketing, Software Engineering, and Healthcare: Benefits, Drawbacks, and Research Directions\",\n        \"An Analysis of the Automatic Bug Fixing Performance of ChatGPT\",\n        \"No More Manual Tests? Evaluating and Improving ChatGPT for Unit Test Generation\"\n    ],\n    \"reasoning\": \"Selected these 63 references because they represent foundational work and recent advances in Empirical Evaluation of ChatGPT on Requirements Information Retrieval Under Zero-Shot Setting, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}