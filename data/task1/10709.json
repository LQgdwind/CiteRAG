{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: WKVQuant: Quantizing Weight and Key/Value Cache for Large Language Models Gains More\n\nPaper Abstract: Abstract Large Language Models (LLMs) face significant deployment challenges due to their substantial memory requirements and the computational demands of auto-regressive text generation process. This paper addresses these challenges by focusing on the quantization of LLMs, a technique that reduces memory consumption by converting model parameters and activations into low-bit integers. We critically analyze the existing quantization approaches, identifying their limitations in balancing the accuracy and efficiency of the quantized LLMs. To advance beyond these limitations, we propose WKVQuant, a PTQ framework especially designed for quantizing weights and the key/value (KV) cache of LLMs. Specifically, we incorporates past-only quantization to improve the computation of attention. Additionally, we introduce two-dimensional quantization strategy to handle the distribution of KV cache, along with a cross-block reconstruction regularization for parameter optimization. Experiments show that WKVQuant achieves almost comparable memory savings to weight-activation quantization, while also approaching the performance of weight-only quantization.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Longbench: A bilingual, multitask benchmark for long context understanding\",\n        \"Language models are few-shot learners\",\n        \"Quip: 2-bit quantization of large language models with guarantees\",\n        \"Think you have solved question answering? try arc, the ai2 reasoning challenge\",\n        \"A dataset of information-seeking questions and answers anchored in research papers\",\n        \"Llm. int8 (): 8-bit matrix multiplication for transformers at scale\",\n        \"Qlora: Efficient finetuning of quantized llms\",\n        \"Spqr: A sparse-quantized representation for near-lossless llm weight compression\",\n        \"Gptq: Accurate post-training quantization for generative pre-trained transformers\",\n        \"Longcoder: A long-range pre-trained language model for code completion\",\n        \"Constructing a multi-hop qa dataset for comprehensive evaluation of reasoning steps\",\n        \"Triviaqa: A large scale distantly supervised challenge dataset for reading comprehension\",\n        \"Memory-efficient fine-tuning of compressed large language models via sub-4-bit integer quantization\",\n        \"Squeezellm: Dense-and-sparse quantization\",\n        \"Owq: Lessons learned from activation outliers for weight quantization in large language models\",\n        \"Norm tweaking: High-performance low-bit quantization of large language models\",\n        \"Loftq: Lora-fine-tuning-aware quantization for large language models\",\n        \"Awq: Activation-aware weight quantization for llm compression and acceleration\",\n        \"Pd-quant: Post-training quantization based on prediction difference metric\",\n        \"Llm-qat: Data-free quantization aware training for large language models\",\n        \"The penn treebank: Annotating predicate argument structure\",\n        \"Pointer sentinel mixture models\",\n        \"Towards efficient generative large language model serving: A survey from algorithms to systems\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Winogrande: An adversarial winograd schema challenge at scale\",\n        \"Pb-llm: Partially binarized large language models\",\n        \"Omniquant: Omnidirectionally calibrated quantization for large language models\",\n        \"Piqa: An algebra for querying protein data sets\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Outlier suppression+: Accurate quantization of large language models by equivalent and optimal shifting and scaling\",\n        \"Outlier suppression: Pushing the limit of low-bit transformer language models\",\n        \"Smoothquant: Accurate and efficient post-training quantization for large language models\",\n        \"Qa-lora: Quantization-aware low-rank adaptation of large language models\",\n        \"Hotpotqa: A dataset for diverse, explainable multi-hop question answering\",\n        \"Zeroquant: Efficient and affordable post-training quantization for large-scale transformers\",\n        \"LLMViewer\",\n        \"Rptq: Reorder-based post-training quantization for large language models\",\n        \"Asvd: Activation-aware singular value decomposition for compressing large language models\",\n        \"Ptq4vit: Post-training quantization for vision transformers with twin uniform quantization\",\n        \"Hellaswag: Can a machine really finish your sentence?\",\n        \"Opt: Open pre-trained transformer language models\",\n        \"A survey of large language models\",\n        \"Lidar-ptq: Post-training quantization for point cloud 3d object detection\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in WKVQuant: Quantizing Weight and Key/Value Cache for Large Language Models Gains More, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}