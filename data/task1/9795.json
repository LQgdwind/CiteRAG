{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scalable and Configurable Tracking for Any Rowhammer Threshold\n\nPaper Abstract: Abstract The Rowhammer vulnerability continues to get worse, with the Rowhammer Threshold (TR‚ÄãHsubscriptùëáùëÖùêªT_{RH}) reducing from 139K activations to 4.8K activations over the last decade. Typical Rowhammer mitigations rely on tracking aggressor rows. The number of possible aggressors increases with lowering thresholds, making it difficult to reliably track such rows in a storage-efficient manner. At lower thresholds, academic trackers such as Graphene require prohibitive SRAM overheads (hundreds of KBs to MB). Recent in-DRAM trackers from industry, such as DSAC-TRR, perform approximate tracking, sacrificing guaranteed protection for reduced storage overheads, leaving DRAM vulnerable to Rowhammer attacks. Ideally, we seek a scalable tracker that tracks securely and precisely, and incurs negligible dedicated SRAM and performance overheads, while still being able to track arbitrarily low thresholds. To that end, we propose START - a Scalable Tracker for Any Rowhammer Threshold. Rather than relying on dedicated SRAM structures, START dynamically repurposes a small fraction the Last-Level Cache (LLC) to store tracking metadata. START is based on the observation that while the memory contains millions of rows, typical workloads touch only a small subset of rows within a refresh period of 64ms, so allocating tracking entries on demand significantly reduces storage. If the application does not access many rows in memory, START does not reserve any LLC capacity. Otherwise, START dynamically uses 1-way, 2-way, or 8-way of the cache set based on demand. START consumes, on average, 9.4% of the LLC capacity to store metadata, which is 5√ó\\times lower compared to dedicating a counter in LLC for each row in memory. We also propose START-M, a memory-mapped START for large-memory systems. Our designs require only 4KB SRAM for newly added structures and perform within 1% of idealized tracking even at TR‚ÄãHsubscriptùëáùëÖùêªT_{RH}of less than 100.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spec cpu2017 benchmark suite\",\n        \"half-double: Next-row-over assisted rowhammer\",\n        \"Data direct i/o characterization for future i/o system exploration\",\n        \"Anvil: Software-based protection against next-generation rowhammer attacks\",\n        \"Cacti 7: New tools for interconnect exploration in innovative off-chip memories\",\n        \"Panopticon: A complete in-dram rowhammer mitigation\",\n        \"The parsec benchmark suite: Characterization and architectural implications\",\n        \"Phantom-btb: A virtualized branch target buffer design\",\n        \"Predictor virtualization\",\n        \"Exploiting correcting codes: On the effectiveness of ecc memory against rowhammer attacks\",\n        \"Cache hierarchy and memory subsystem of the amd opteron processor\",\n        \"Clearing the clouds: a study of emerging scale-out workloads on modern hardware\",\n        \"TRRespass: Exploiting the many sides of target row refresh\",\n        \"The championship simulator: Architectural simulation for education and competition\",\n        \"Another flip in the wall of rowhammer defenses\",\n        \"Rowhammer. js: A remote software-induced fault attack in javascript\",\n        \"Dsac: Low-cost rowhammer mitigation using in-dram stochastic and approximate counting algorithm\",\n        \"Sgx-bomb: Locking down the processor via rowhammer attack\",\n        \"BLACKSMITH: Rowhammering in the Frequency Domain\",\n        \"Near-term dram level rowhammer mitigation (jep300-1)\",\n        \"System level rowhammer mitigation (jep301-1)\",\n        \"Architectural support for mitigating row hammering in dram memories\",\n        \"Revisiting rowhammer: An experimental analysis of modern dram devices and mitigation techniques\",\n        \"Mithril: Cooperative row hammer protection on commodity dram leveraging managed refresh\",\n        \"A 1.1v 16gb ddr5 dram with probabilistic-aggressor tracking, refresh-management functionality, per-row hammer tracking, a multi-step precharge, and core-bias modulation for security and reliability enhancement\",\n        \"Flipping bits in memory without accessing them: An experimental study of dram disturbance errors\",\n        \"Rambleed: Reading bits in memory without accessing them\",\n        \"Twice: preventing row-hammering by exploiting time window counters\",\n        \"Maps: Understanding metadata access patterns in secure memory\",\n        \"DRAMsim3: A Cycle-Accurate, Thermal-Capable DRAM Simulator\",\n        \"Rega: Scalable rowhammer mitigation with refresh-generating activations\",\n        \"System Power Calculators\",\n        \"DDR5 SDRAM Datasheet\",\n        \"Graphene: Strong yet Lightweight Row Hammer Protection\",\n        \"Hydra: enabling low-overhead mitigation of row-hammer at ultra-low thresholds via hybrid tracking\",\n        \"Randomized row-swap: mitigating row hammer by breaking spatial correlation between aggressor and victim rows\",\n        \"How to configure row-sampling-based rowhammer defenses\",\n        \"Aqua: Scalable rowhammer mitigation by quarantining aggressor rows at runtime\",\n        \"Exploiting the DRAM rowhammer bug to gain kernel privileges\",\n        \"Mitigating wordline crosstalk using adaptive trees of counters\",\n        \"Ligra: A lightweight graph processing framework for shared memory\",\n        \"Making dram stronger against row hammering\",\n        \"Drammer: Deterministic rowhammer attacks on mobile platforms\",\n        \"Shadow: Preventing row hammer in dram with intra-subarray row shuffling\",\n        \"Hira: Hidden row activation for reducing refresh latency of off-the-shelf dram chips\",\n        \"Blockhammer: Preventing rowhammer at low cost by blacklisting rapidly-accessed dram rows\",\n        \"Mrloc: Mitigating row-hammering based on memory locality\",\n        \"Pthammer: Cross-user-kernel-boundary rowhammer through implicit accesses\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Scalable and Configurable Tracking for Any Rowhammer Threshold, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}