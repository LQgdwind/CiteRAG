{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: An Efficient Combinatorial Optimization Model Using Learning-to-Rank Distillation\n\nPaper Abstract: Abstract Recently, deep reinforcement learning (RL) has proven its feasibility in solving combinatorial optimization problems (COPs). The learning-to-rank techniques have been studied in the field of information retrieval. While several COPs can be formulated as the prioritization of input items, as is common in the information retrieval, it has not been fully explored how the learning-to-rank techniques can be incorporated into deep RL for COPs. In this paper, we present the learning-to-rank distillation-based COP framework, where a high-performance ranking policy obtained by RL for a COP can be distilled into a non-iterative, simple model, thereby achieving a low-latency COP solver. Specifically, we employ the approximated ranking distillation to render a score-based ranking model learnable via gradient descent. Furthermore, we use the efficient sequence sampling to improve the inference performance with a limited delay. With the framework, we demonstrate that a distilled model not only achieves comparable performance to its respective, high-performance RL, but also provides several times faster inferences. We evaluate the framework with several COPs such as priority-based task scheduling and multidimensional knapsack, demonstrating the benefits of the framework in terms of inference latency and performance.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A State Aggregation Approach for Solving Knapsack Problem with Deep Reinforcement Learning\",\n        \"Constrained Optimization for Homepage Relevance\",\n        \"A Fast Scaling Algorithm for Minimizing Separable Convex Functions Subject to Chain Constraints\",\n        \"Optimal priority assignment and feasibility of static priority tasks with arbitrary start times\",\n        \"On priority assignment in fixed priority scheduling\",\n        \"Neural Combinatorial Optimization with Reinforcement Learning\",\n        \"Fast Differentiable Sorting and Ranking\",\n        \"Global Scheduling Not Required: Simple, Near-Optimal Multiprocessor Real-Time Scheduling with Semi-Partitioned Reservations\",\n        \"Learning to rank using gradient descent\",\n        \"Learning to rank: from pairwise approach to listwise approach\",\n        \"TVM: An Automated End-to-End Optimizing Compiler for Deep Learning\",\n        \"A genetic algorithm for the multidimensional knapsack problem\",\n        \"Improved priority assignment for global fixed priority pre-emptive scheduling in multiprocessor real-time systems\",\n        \"A review of priority assignment in real-time systems\",\n        \"Techniques For The Synthesis Of Multiprocessor Tasksets\",\n        \"Tabu Search - Part I\",\n        \"Stochastic Optimization of Sorting Networks via Continuous Relaxations\",\n        \"A pointer network based deep learning algorithm for 0-1 Knapsack Problem\",\n        \"New Response Time Bounds for Fixed Priority Multiprocessor Scheduling\",\n        \"Multiprocessor real-time scheduling with arbitrary processor affinities: from practice to theory\",\n        \"The maxima of the mean largest value and of the range\",\n        \"Email Volume Optimization at LinkedIn\",\n        \"Distilling the Knowledge in a Neural Network\",\n        \"Categorical Reparameterization with Gumbel-Softmax\",\n        \"TinyBERT: Distilling BERT for Natural Language Understanding\",\n        \"Sequence-Level Knowledge Distillation\",\n        \"Attention, Learn to Solve Routing Problems!\",\n        \"Estimating Gradients for Discrete Random Variables by Sampling without Replacement\",\n        \"Panda: Reinforcement Learning-Based Priority Assignment for Multi-Processor Real-Time Scheduling\",\n        \"A* sampling\",\n        \"Resource Management with Deep Reinforcement Learning\",\n        \"Learning scheduling algorithms for data processing clusters\",\n        \"Device Placement Optimization with Reinforcement Learning\",\n        \"OR-Tools\",\n        \"RankDistil: Knowledge Distillation for Ranking\",\n        \"BPR: Bayesian Personalized Ranking from Implicit Feedback\",\n        \"A parameterized compositional multi-dimensional multiple-choice knapsack heuristic for CMP run-time management\",\n        \"Mastering the game of go without human knowledge\",\n        \"Ranking Distillation: Learning Compact Ranking Models With High Performance for Recommender System\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Attention is All you Need\",\n        \"Grandmaster level in StarCraft II using multi-agent reinforcement learning\",\n        \"Simple Statistical Gradient-Following Algorithms for Connectionist Reinforcement Learning\",\n        \"Fast Multi-Dimension Multi-Choice Knapsack Heuristic for MP-SoC Run-Time Management\",\n        \"A Reinforcement Learning Approach to job-shop Scheduling\",\n        \"Neural Architecture Search with Reinforcement Learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in An Efficient Combinatorial Optimization Model Using Learning-to-Rank Distillation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}