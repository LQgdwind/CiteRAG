{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CCGen: Explainable Complementary Concept Generation in E-Commerce\n\nPaper Abstract: Abstract We propose and study Complementary Concept Generation (CCGen): given a concept of interest, e.g., “Digital Cameras”, generating a list of complementary concepts, e.g., 1) Camera Lenses 2) Batteries 3) Camera Cases 4) Memory Cards 5) Battery Chargers. CCGen is beneficial for various applications like query suggestion and item recommendation, especially in the e-commerce domain. To solve CCGen, we propose to train language models to generate ranked lists of concepts with a two-step training strategy. We also teach the models to generate explanations by incorporating explanations distilled from large teacher models. Extensive experiments and analysis demonstrate that our model can generate high-quality concepts complementary to the input concept while producing explanations to justify the predictions. ††∗Work done during internship at Amazon. †To whom correspondence should be addressed.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Siamese neural networks for detecting complementary products\",\n        \"Item2vec: neural item embedding for collaborative filtering\",\n        \"Language models are few-shot learners\",\n        \"Context-aware query suggestion by mining click-through and session data\",\n        \"Support-vector networks\",\n        \"Discriminatory analysis. nonparametric discrimination: Consistency properties\",\n        \"Multiresolution transformer networks: Recurrence is not essential for modeling hierarchical structure\",\n        \"P-companion: A principled framework for diversified complementary product recommendation\",\n        \"Automatic acquisition of hyponyms from large text corpora\",\n        \"Open relation modeling: Learning to define relations between entities\",\n        \"Towards reasoning in large language models: A survey\",\n        \"Ver: Learning natural language representations for verbalizing entities and relations\",\n        \"DEER: Descriptive knowledge graph for explaining entity relationships\",\n        \"Are training resources insufficient? predict first then explain!\",\n        \"Cumulated gain-based evaluation of ir techniques\",\n        \"X-FACTR: Multilingual factual knowledge retrieval from pretrained language models\",\n        \"How can we know what language models know?\",\n        \"Complete the look: Scene-based complementary product recommendation\",\n        \"Question answering using web lists\",\n        \"Can language models learn from explanations in context?\",\n        \"Explanations from large language models make small reasoners better\",\n        \"Dimongen: Diversified generative commonsense reasoning for explaining concept relationships\",\n        \"Item relationship graph neural networks for e-commerce\",\n        \"Automatic taxonomy construction from keywords\",\n        \"Decoupled graph convolution network for inferring substitutable and complementary items\",\n        \"Diversifying query suggestion results\",\n        \"Teaching small language models to reason\",\n        \"Exploratory search: from finding to understanding\",\n        \"Inferring networks of substitutable and complementary products\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"WordNet: A lexical database for English\",\n        \"On the study of transformers for query suggestion\",\n        \"Justifying recommendations using distantly-labeled reviews and fine-grained aspects\",\n        \"A survey of query expansion, query suggestion and query refinement techniques\",\n        \"GloVe: Global vectors for word representation\",\n        \"Language models as knowledge bases?\",\n        \"Language models are unsupervised multitask learners\",\n        \"How much knowledge can you pack into the parameters of a language model?\",\n        \"Hearst patterns revisited: Automatic hypernym detection from large text corpora\",\n        \"Distilling multi-step reasoning capabilities of large language models into smaller models via semantic decompositions\",\n        \"Learning syntactic patterns for automatic hypernym discovery\",\n        \"Language-independent set expansion of named entities using the web\",\n        \"A path-constrained framework for discriminating substitutable and complementary products in e-commerce\",\n        \"Reframing human-AI collaboration for generating free-text explanations\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Ex3: Explainable attribute-aware item-set recommendations\",\n        \"Wikipedia2Vec: An efficient toolkit for learning and visualizing the embeddings of words and entities from Wikipedia\",\n        \"Personalized complementary product recommendation\",\n        \"Opt: Open pre-trained transformer language models\",\n        \"Quality-aware neural complementary item recommendation\",\n        \"Evaluating commonsense in pre-trained language models\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in CCGen: Explainable Complementary Concept Generation in E-Commerce, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}