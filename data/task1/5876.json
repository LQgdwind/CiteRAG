{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Neural Combinatorial Optimization: a New Player in the Field\n\nPaper Abstract: Abstract Neural Combinatorial Optimization attempts to learn good heuristics for solving a set of problems using Neural Network models and Reinforcement Learning. Recently, its good performance has encouraged many practitioners to develop neural architectures for a wide variety of combinatorial problems. However, the incorporation of such algorithms in the conventional optimization framework has raised many questions related to their performance and the experimental comparison with other methods such as exact algorithms, heuristics and metaheuristics. This paper presents a critical analysis on the incorporation of algorithms based on neural networks into the classical combinatorial optimization framework. Subsequently, a comprehensive study is carried out to analyse the fundamental aspects of such algorithms, including performance, transferability, computational cost and generalization to larger-sized instances. To that end, we select the Linear Ordering Problem as a case of study, an NP-hard problem, and develop a Neural Combinatorial Optimization model to optimize it. Finally, we discuss how the analysed aspects apply to a general learning framework, and suggest new directions for future work in the area of Neural Combinatorial Optimization algorithms.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Combinatorial optimization\",\n        \"Metaheuristics in combinatorial optimization: Overview and conceptual comparison\",\n        \"On the properties of neural machine translation: Encoder-decoder approaches\",\n        \"Highly accurate protein structure prediction with AlphaFold\",\n        \"Mastering atari, go, chess and shogi by planning with a learned model\",\n        \"Neural computation of decisions in optimization problems\",\n        \"Machine learning for combinatorial optimization: a methodological tour d’horizon\",\n        \"Machine Learning into Metaheuristics: A Survey and Taxonomy\",\n        \"Hyper-parameter optimization: A review of algorithms and applications\",\n        \"A survey of automatic parameter tuning methods for metaheuristics\",\n        \"A graph neural network assisted Monte Carlo tree search approach to traveling salesman problem\",\n        \"The linear ordering problem revisited\",\n        \"SCIP: solving constraint integer programs\",\n        \"Das Helmstädtersche Reihenfolgeproblem—die Effizienz verschiedener Näherungsverfahren\",\n        \"A Diversity-Aware Memetic Algorithm for the Linear Ordering Problem\",\n        \"Using pairwise precedences for solving the linear ordering problem\",\n        \"Exact combinatorial optimization with graph convolutional neural networks\",\n        \"Pointer networks\",\n        \"Reinforcement learning: An introduction\",\n        \"Neural combinatorial optimization with reinforcement learning\",\n        \"The vehicle routing problem\",\n        \"Or-tools, google optimization tools\",\n        \"An efficient graph convolutional network technique for the travelling salesman problem\",\n        \"Learning TSP requires rethinking generalization\",\n        \"Combinatorial optimization and reasoning with graph neural networks\",\n        \"Learning Combinatorial Optimization Algorithms over Graphs\",\n        \"Attention is all you need\",\n        \"Learning heuristics for the tsp by policy gradient\",\n        \"Attention, learn to solve routing problems!\",\n        \"Concorde TSP solver\",\n        \"Deep Reinforcement Learning Based Optimization Algorithm for Permutation Flow-Shop Scheduling\",\n        \"A differential evolution algorithm for the permutation flowshop scheduling problem with total flow time criterion\",\n        \"Efficient Active Search for Combinatorial Optimization Problems\",\n        \"Learning heuristics over large graphs via deep reinforcement learning\",\n        \"Learning linear ordering problems for better translation\",\n        \"Input-output economics\",\n        \"Der corruption perceptions index und das linear ordering problem\",\n        \"The rankability of weighted data from pairwise comparisons\",\n        \"On the linear ordering problem and the rankability of data\",\n        \"Fairness and the set of optimal rankings for the linear ordering problem\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Self-critical sequence training for image captioning\",\n        \"Linear ordering library\",\n        \"Graph Neural Network Guided Local Search for the Traveling Salesperson Problem\",\n        \"Learning 2-opt heuristics for the traveling salesman problem via deep reinforcement learning\",\n        \"Learning Improvement Heuristics for Solving Routing Problems\",\n        \"Learning to perform local rewriting for combinatorial optimization\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Neural Combinatorial Optimization: a New Player in the Field, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}