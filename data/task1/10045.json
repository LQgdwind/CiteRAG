{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: From Deep Filtering to Deep Econometrics\n\nPaper Abstract: Abstract Calculating true volatility is an essential task for option pricing and risk management. However, it is made difficult by market microstructure noise. Particle filtering has been proposed to solve this problem as it favorable statistical properties, but relies on assumptions about underlying market dynamics. Machine learning methods have also been proposed but lack interpretability, and often lag in performance. In this paper we implement the SV-PF-RNN: a hybrid neural network and particle filter architecture. Our SV-PF-RNN is designed specifically with stochastic volatility estimation in mind. We then show that it can improve on the performance of a basic particle filter.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Pricing of Options and Corporate Liabilities\",\n        \"Stochastic Volatility Option Pricing\",\n        \"Stochastic Volatility: Origins and Overview\",\n        \"Analysis of financial time series\",\n        \"A forecast comparison of volatility models: does anything beat a GARCH(1, 1)?\",\n        \"Generalized autoregressive conditional heteroskedasticity\",\n        \"Practical Issues in the Analysis of Univariate GARCH Models\",\n        \"Modeling energy price dynamics: GARCH versus stochastic volatility\",\n        \"Neural Network–Based Financial Volatility Forecasting: A Systematic Review\",\n        \"A machine learning approach to volatility forecasting\",\n        \"A Statistical Recurrent Stochastic Volatility Model for Stock Markets\",\n        \"Stochastic Volatility\",\n        \"Filtering via Simulation: Auxiliary Particle Filters\",\n        \"Modelling Stochastic Volatility with Leverage and Jumps: A Simulated Maximum Likelihood Approach via Particle Filtering\",\n        \"Particle Filter Networks with Application to Visual Localization\",\n        \"Options, Futures, and Other Derivatives\",\n        \"File:long strangle option.svg;.\",\n        \"Autoregressive Conditional Heteroscedasticity with Estimates of the Variance of United Kingdom Inflation\",\n        \"Principal Component Analysis of Volatility Smiles and Skews\",\n        \"No news is good news\",\n        \"Think again: volatility asymmetry and volatility persistence\",\n        \"Forecasting the volatility of currency exchange rates\",\n        \"MODELING STOCHASTIC VOLATILITY: A REVIEW AND COMPARATIVE STUDY\",\n        \"Incorporation of a Leverage Effect in a Stochastic Volatility Model\",\n        \"Empirical Evidence of the Leverage Effect in a Stochastic Volatility Model: A Realized Volatility Approach\",\n        \"Novel approach to nonlinear/non-Gaussian Bayesian state estimation\",\n        \"Deep Learning\",\n        \"Neural networks and physical systems with emergent collective computational abilities\",\n        \"A Focused Backpropagation Algorithm for Temporal Pattern Recognition\",\n        \"Recurrent neural networks: Building a custom LSTM cell\",\n        \"Long Short-Term Memory\",\n        \"LSTM gradients\",\n        \"Time series forecasting using a hybrid ARIMA and neural network model\",\n        \"Statistical and Machine Learning forecasting methods: Concerns and ways forward\",\n        \"Novel volatility forecasting using deep learning–Long Short Term Memory Recurrent Neural Networks\",\n        \"Forecasting Volatility of Stock Index: Deep Learning Model with Likelihood-Based Loss Function\",\n        \"Volatility forecasting using deep recurrent neural networks as GARCH models\",\n        \"A hybrid deep learning approach by integrating LSTM-ANN networks with GARCH model for copper price volatility prediction\",\n        \"Forecasting the volatility of stock price index: A hybrid model integrating LSTM with multiple GARCH-type models\",\n        \"ImageNet Classification with Deep Convolutional Neural Networks\",\n        \"Convolutional neural networks applied to high-frequency market microstructure forecasting\",\n        \"Estimation of stochastic volatility models via Monte Carlo maximum likelihood\",\n        \"Simulated likelihood inference for stochastic volatility models using continuous particle filtering\",\n        \"American Option Pricing Using Particle Filtering Under Stochastic Volatility Correlated Jump Model\",\n        \"Particle Filter Recurrent Neural Networks\",\n        \"Multilayer feedforward networks are universal approximators\",\n        \"CUDA, release: 10.2.89\",\n        \"Reproducibility\",\n        \"Are There Structural Breaks in Realized Volatility?\",\n        \"Combined Parameter and State Estimation in Simulation-Based Filtering\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in From Deep Filtering to Deep Econometrics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}