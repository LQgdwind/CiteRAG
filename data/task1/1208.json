{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Frequency Estimation in Data Streams: Learning the Optimal Hashing Scheme\n\nPaper Abstract: Abstract We present a novel approach for the problem of frequency estimation in data streams that is based on optimization and machine learning. Contrary to state-of-the-art streaming frequency estimation algorithms, which heavily rely on random hashing to maintain the frequency distribution of the data steam using limited storage, the proposed approach exploits an observed stream prefix to near-optimally hash elements and compress the target frequency distribution. We develop an exact mixed-integer linear optimization formulation, which enables us to compute optimal or near-optimal hashing schemes for elements seen in the observed stream prefix; then, we use machine learning to hash unseen elements. Further, we develop an efficient block coordinate descent algorithm, which, as we empirically show, produces high quality solutions, and, in a special case, we are able to solve the proposed formulation exactly in linear time using dynamic programming. We empirically evaluate the proposed approach both on synthetic datasets and on real-world search query data. We show that the proposed approach outperforms existing approaches by one to two orders of magnitude in terms of its average (per element) estimation error and by 45-90% in terms of its expected magnitude of estimation error.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Data streams: Algorithms and applications\",\n        \"Data stream management: processing high-speed data streams\",\n        \"Internet live stats\",\n        \"Netflow services and applications\",\n        \"Estimating entropy over data streams\",\n        \"Finding repeated elements\",\n        \"Finding the frequent items in streams of data\",\n        \"Learning-based frequency estimation algorithms\",\n        \"Mining high-speed data streams\",\n        \"Synopses for massive data: Samples, histograms, wavelets, sketches\",\n        \"An improved data stream summary: the count-min sketch and its applications\",\n        \"Finding frequent items in data streams\",\n        \"The space complexity of approximating the frequency moments\",\n        \"Software defined traffic measurement with opensketch\",\n        \"Sketch algorithms for estimating point queries in nlp\",\n        \"Sparse recovery using sparse matrices\",\n        \"Mission: Ultra large-scale feature selection using count-sketches\",\n        \"The case for learned index structures\",\n        \"A model for learned bloom filters and optimizing by sandwiching\",\n        \"Space/time trade-offs in hash coding with allowable errors\",\n        \"Network applications of bloom filters: A survey\",\n        \"Empowering sketches with machine learning for network measurements\",\n        \"A survey on learning to hash\",\n        \"Learning to hash with binary reconstructive embeddings\",\n        \"A general two-step approach to learning-based hashing\",\n        \"Fast supervised hashing with decision trees for high-dimensional data\",\n        \"Optimal data-dependent hashing for approximate near neighbors\",\n        \"Improving online algorithms via ml predictions\",\n        \"Learning scheduling algorithms for data processing clusters\",\n        \"A deep learning approach to structured signal recovery\",\n        \"Learning to branch in mixed integer programming\",\n        \"Learning to branch\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"The voice of optimization\",\n        \"Online mixed-integer optimization in milliseconds\",\n        \"Learning to optimize join queries with deep reinforcement learning\",\n        \"Learning state representations for query optimization with deep reinforcement learning\",\n        \"Learned frequency estimation algorithms under zipfian distribution\",\n        \"Ckmeans. 1d. dp: optimal k-means clustering in one dimension by dynamic programming\",\n        \"Optimal quantization by matrix searching\",\n        \"Fast exact k-means, k-medians and bregman divergence clustering in 1d\",\n        \"Gurobi optimizer reference manual; 2016\",\n        \"Classification and regression trees\",\n        \"Random forests\",\n        \"Scikit-learn: Machine learning in Python\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Frequency Estimation in Data Streams: Learning the Optimal Hashing Scheme, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}