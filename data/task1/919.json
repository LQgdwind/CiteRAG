{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 41 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Test and Yield Loss Reduction of AI and Deep Learning Accelerators\n\nPaper Abstract: Abstract With data-driven analytics becoming mainstream, the global demand for dedicated AI and Deep Learning accelerator chips is soaring. These accelerators, designed with densely packed Processing Elements (PE), are especially vulnerable to the manufacturing defects and functional faults common in the advanced semiconductor process nodes resulting in significant yield loss. In this work, we demonstrate an application-driven methodology of binning the AI accelerator chips, and yield loss reduction by correlating the circuit faults in the PEs of the accelerator with the desired accuracy of the target AI workload. We exploit the inherent fault tolerance features of trained deep learning models and a strategy of selective deactivation of faulty PEs to develop the presented yield loss reduction and test methodology. An analytical relationship is derived between fault location, fault rate, and the AI task’s accuracy for deciding if the accelerator chip can pass the final yield test. A yield-loss reduction aware fault isolation, ATPG, and test flow are presented for the multiply and accumulate units of the PEs. Results obtained with widely used AI/deep learning benchmarks demonstrate that the accelerators can sustain 5% fault-rate in PE arrays while suffering from less than 1% accuracy loss, thus enabling product-binning and yield loss reduction of these chips.\n\n{retrieved_text}\n\nGenerate exactly 41 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 41\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Efficient Processing of Deep Neural Networks: A Tutorial and Survey\",\n        \"Eyeriss v2: A Flexible Accelerator for Emerging Deep Neural Networks on Mobile Devices\",\n        \"LNPU: A 25.3TFLOPS/W Sparse Deep-Neural-Network Learning Processor with Fine-Grained Mixed Precision of FP8-FP16\",\n        \"A domain-specific architecture for deep neural networks\",\n        \"NVIDIA Tensor Core Programmability, Performance & Precision\",\n        \"Artificial-intelligence hardware: New opportunities for semiconductor companies\",\n        \"GPU Killer: Google reveals just how powerful its TPU2 chip really is\",\n        \"Cerebras’s Giant Chip Will Smash Deep Learning’s Speed Barrier\",\n        \"ImageNet classification with deep convolutional neural networks\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"ImageNet: A large-scale hierarchical image database\",\n        \"Yield and Reliability Challenges at 7nm and Below\",\n        \"Yield-centric layout optimization with precise quantification of lithographic yield loss\",\n        \"Concept Recognition in Production Yield Data Analytics\",\n        \"Accelerating 14nm device learning and yield ramp using parallel test structures as part of a new inline parametric test strategy\",\n        \"Cell-aware diagnosis: Defective inmates exposed in their cells\",\n        \"Application of Cell-Aware Test on an Advanced 3nm CMOS Technology Library\",\n        \"Intel’s 2020 Forecast is Grim\",\n        \"3 Ways Chiplets Are Remaking Processors\",\n        \"Goodbye, Motherboard. Hello, Silicon-Interconnect Fabric\",\n        \"Learning both weights and connections for efficient neural networks\",\n        \"SNIP: Single-shot network pruning based on connection sensitivity\",\n        \"Deep Compression: Compressing Deep Neural Networks with Pruning, Trained Quantization and Huffman Coding\",\n        \"Dropout: A Simple Way to Prevent Neural Networks from Overfitting\",\n        \"AxNN: Energy-efficient neuromorphic systems using approximate computing\",\n        \"ApproxANN: An approximate computing framework for artificial neural network\",\n        \"Design of power-efficient approximate multipliers for approximate artificial neural networks\",\n        \"Improving the Accuracy and Hardware Efficiency of Neural Networks Using Approximate Multipliers\",\n        \"Testing of Neuromorphic Circuits: Structural vs Functional\",\n        \"Fault-Tolerant Systolic Array Based Accelerators for Deep Neural Network Execution\",\n        \"Thundervolt: enabling aggressive voltage underscaling and timing error resilience for energy efficient deep learning accelerators\",\n        \"Energy-Efficient Neural Network Acceleration in the Presence of Bit-Level Memory Errors\",\n        \"On the design of fault-tolerant two-dimensional systolic arrays for yield enhancement\",\n        \"DNN Accelerator Architecture – SIMD or Systolic?\",\n        \"Quantized Convolutional Neural Networks for Mobile Devices\",\n        \"8-bit Inference with TensorRT\",\n        \"Mixed Precision Training\",\n        \"BFloat16: The secret to high performance on Cloud TPUs\",\n        \"EvoApprox8b: Library of Approximate Adders and Multipliers for Circuit Design and Benchmarking of Approximation Methods\",\n        \"Method and apparatus for disabling and swapping cores in a multi-core microprocessor\"\n    ],\n    \"reasoning\": \"Selected these 41 references because they represent foundational work and recent advances in Test and Yield Loss Reduction of AI and Deep Learning Accelerators, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}