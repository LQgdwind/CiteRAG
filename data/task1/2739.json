{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Revisiting Peng’s Q(𝜆) for Modern Reinforcement Learning\n\nPaper Abstract: Abstract Off-policy multi-step reinforcement learning algorithms consist of conservative and non-conservative algorithms: the former actively cut traces, whereas the latter do not. Recently, Munos et al. (2016) proved the convergence of conservative algorithms to an optimal Q-function. In contrast, non-conservative algorithms are thought to be unsafe and have a limited or no theoretical guarantee. Nonetheless, recent studies have shown that non-conservative algorithms empirically outperform conservative ones. Motivated by the empirical results and the lack of theory, we carry out theoretical analyses of Peng’s Q(λ𝜆\\lambda), a representative example of non-conservative algorithms. We prove that it also converges to an optimal policy provided that the behavior policy slowly tracks a greedy policy in a way similar to conservative policy iteration. Such a result has been conjectured to be true but has not been proven. We also experiment with Peng’s Q(λ𝜆\\lambda) in complex continuous control tasks, confirming that Peng’s Q(λ𝜆\\lambda) often outperforms conservative algorithms despite its simplicity. These results indicate that Peng’s Q(λ𝜆\\lambda), which was thought to be unsafe, is a theoretically-sound and practically effective algorithm.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spinning Up in Deep Reinforcement Learning\",\n        \"An Alternative Softmax Operator for Reinforcement Learning\",\n        \"Dynamic policy programming\",\n        \"Distributed distributional deterministic policy gradients\",\n        \"The Arcade Learning Environment: An Evaluation Platform for General Agents\",\n        \"Temporal differences-based policy iteration and applications in neuro-dynamic programming\",\n        \"OpenAI gym\",\n        \"Statistical Inference, volume 2\",\n        \"PyBullet, a Python module for physics simulation for games, robotics and machine learning\",\n        \"Reconciling λ𝜆\\\\lambda-returns with experience replay\",\n        \"Revisiting fundamentals of experience replay\",\n        \"Taming the noise in reinforcement learning via soft updates\",\n        \"Addressing function approximation error in actor-critic methods\",\n        \"Reinforcement learning with deep energy-based policies\",\n        \"Soft actor-critic: Off-policy maximum entropy deep reinforcement learning with a stochastic actor\",\n        \"Investigating recurrence and eligibility traces in deep Q-networks\",\n        \"Q(λ𝜆\\\\lambda) with off-policy corrections\",\n        \"Double Q-learning\",\n        \"Rainbow: Combining improvements in deep reinforcement learning\",\n        \"Approximately optimal approximate reinforcement learning\",\n        \"Recurrent experience replay in distributed reinforcement learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Theoretical analysis of efficiency and robustness of softmax and gap-increasing operators in reinforcement learning\",\n        \"Continuous control with deep reinforcement learning\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Applying Q(λ𝜆\\\\lambda)-learning in deep reinforcement learning to play Atari games\",\n        \"Error bounds for approximate policy iteration\",\n        \"Error bounds for approximate value iteration\",\n        \"Safe and efficient off-policy reinforcement learning\",\n        \"Self-imitation learning\",\n        \"Incremental multi-step Q-learning\",\n        \"Eligibility traces for off-policy policy evaluation\",\n        \"Markov Decision Processes: Discrete Stochastic Dynamic Programming\",\n        \"Modified policy iteration algorithms for discounted Markov decision problems\",\n        \"Adaptive trade-offs in off-policy learning\",\n        \"Performance bounds for λ𝜆\\\\lambda policy iteration and application to the game of Tetris\",\n        \"Approximate policy iteration schemes: A comparison\",\n        \"Approximate modified policy iteration\",\n        \"Approximate modified policy iteration and its application to the game of Tetris\",\n        \"Deterministic policy gradient algorithms\",\n        \"Reinforcement Learning: An Introduction\",\n        \"dm_control: Software and Tasks for Continuous Control\",\n        \"Mujoco: A physics engine for model-based control\",\n        \"Leverage the average: an analysis of KL regularization in reinforcement learning\",\n        \"Sample efficient actor-critic with experience replay\",\n        \"Learning from Delayed Rewards\",\n        \"A deeper look at experience replay\",\n        \"Maximum entropy inverse reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Revisiting Peng’s Q(𝜆) for Modern Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}