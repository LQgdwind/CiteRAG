{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: UNComp: Uncertainty-Aware Long-Context Compressor for Efficient Large Language Model Inference\n\nPaper Abstract: Abstract Deploying large language models (LLMs) is challenging due to their high memory and computational demands, especially during long-context inference. While key-value (KV) caching accelerates inference by reusing previously computed keys and values, it also introduces significant memory overhead. Existing KV cache compression methods—such as eviction and merging—typically compress the KV cache after it is generated and overlook the hidden states, failing to improve the speed of the prefilling stage. Additionally, applying a uniform compression rate across different attention heads can harm crucial retrieval heads in needle-in-a-haystack tasks due to excessive compression. In this paper, we propose UNComp, an uncertainty-aware compression scheme that leverages matrix entropy to estimate model uncertainty across layers and heads at the token sequence level. By grouping layers and heads based on their uncertainty, UNComp adaptively compresses both the hidden states and the KV cache. Our method achieves a 1.6×\\times speedup in the prefilling stage and reduces the KV cache to 4.74% of its original size, resulting in a 6.4×\\times increase in throughput and a 1.4×\\times speedup in inference with only a 1.41% performance loss. Remarkably, in needle-in-a-haystack tasks, UNComp outperforms the full-size KV cache even when compressed to 9.38% of its original size. Our approach offers an efficient, training-free Grouped-Query Attention paradigm that can be seamlessly integrated into existing KV cache schemes.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gpt-4 technical report\",\n        \"Chai: Clustered head attention for efficient llm inference\",\n        \"Llama 3: A family of large language models\",\n        \"Gqa: Training generalized multi-query transformer models from multi-head checkpoints\",\n        \"Longbench: A bilingual, multitask benchmark for long context understanding\",\n        \"Reducing transformer key-value cache size with cross-layer attention\",\n        \"Pearson correlation coefficient\",\n        \"Language modeling is compression\",\n        \"Rank diminishing in deep neural networks\",\n        \"Model tells you what to discard: Adaptive kv cache compression for llms\",\n        \"Measures of entropy from data using infinitely divisible kernels\",\n        \"Kvquant: Towards 10 million context length llm inference with kv cache quantization\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Compression represents intelligence linearly\",\n        \"Mistral 7b\",\n        \"Minference 1.0: Accelerating pre-filling for long-context llms via dynamic sparse attention\",\n        \"Scaling laws for neural language models\",\n        \"Compressing context to enhance inference efficiency of large language models\",\n        \"Snapkv: Llm knows what you are looking for before generation\",\n        \"Deepseek-v2: A strong, economical, and efficient mixture-of-experts language model\",\n        \"Minicache: Kv cache compression in depth dimension for large language models\",\n        \"Lost in the middle: How language models use long contexts\",\n        \"Scissorhands: Exploiting the persistence of importance hypothesis for llm kv cache compression at test time\",\n        \"Kivi: A tuning-free asymmetric 2bit quantization for kv cache\",\n        \"The wikitext long term dependency language modeling dataset\",\n        \"Efficiently scaling transformer inference\",\n        \"The effective rank: A measure of effective dimensionality\",\n        \"Fast transformer decoding: One write-head is all you need\",\n        \"Outrageously large neural networks: The sparsely-gated mixture-of-experts layer\",\n        \"Flexgen: High-throughput generative inference of large language models with a single gpu\",\n        \"Massive activations in large language models\",\n        \"Scaling laws with vocabulary: Larger models deserve larger vocabularies\",\n        \"Who belongs in the family?\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Mathematische grundlagen der quantenmechanik, volume 38\",\n        \"D2o: Dynamic discriminative operations for efficient generative inference of large language models\",\n        \"Label words are anchors: An information flow perspective for understanding in-context learning\",\n        \"Model tells you where to merge: Adaptive kv cache merging for llms on long-context tasks\",\n        \"Retrieval head mechanistically explains long-context factuality\",\n        \"Efficient streaming language models with attention sinks\",\n        \"Recomp: Improving retrieval-augmented lms with compression and selective augmentation\",\n        \"Effectively compress kv heads for llm\",\n        \"Kv cache is 1 bit per channel: Efficient large language model inference with coupled quantization\",\n        \"Pyramidkv: Dynamic kv cache compression based on pyramidal information funneling\",\n        \"Matrix information theory for self-supervised learning\",\n        \"Cam: Cache merging for memory-efficient llms inference\",\n        \"H2o: Heavy-hitter oracle for efficient generative inference of large language models\",\n        \"Towards a unified theoretical understanding of non-contrastive learning via rank differential mechanism\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in UNComp: Uncertainty-Aware Long-Context Compressor for Efficient Large Language Model Inference, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}