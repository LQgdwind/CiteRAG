{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: High-performance and Scalable Software-based NVMe Virtualization Mechanism with I/O Queues Passthrough\n\nPaper Abstract: Abstract. NVMe(Non-Volatile Memory Express) is an industry standard for solid-state drives (SSDs) that has been widely adopted in data centers. NVMe virtualization is crucial in cloud computing as it allows for virtualized NVMe devices to be used by virtual machines (VMs), thereby improving the utilization of storage resources. However, traditional software-based solutions have flexibility benefits but often come at the cost of performance degradation or high CPU overhead. On the other hand, hardware-assisted solutions offer high performance and low CPU usage, but their adoption is often limited by the need for special hardware support or the requirement for new hardware development. In this paper, we propose LightIOV, a novel software-based NVMe virtualization mechanism that achieves high performance and scalability without consuming valuable CPU resources and without requiring special hardware support. LightIOV can support thousands of VMs on each server. The key idea behind LightIOV is NVMe hardware I/O queues passthrough, which enables VMs to directly access I/O queues of NVMe devices, thus eliminating virtualization overhead and providing near-native performance. Results from our experiments show that LightIOV can provide comparable performance to VFIO, with an IOPS of 97.6%-100.2% of VFIO. Furthermore, in high-density VMs environments, LightIOV achieves 31.4% lower latency than SPDK-Vhost when running 200 VMs, and an improvement of 27.1% in OPS performance in real-world applications.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Flexible I/O Tester\",\n        \"Non-uniform memory access (NUMA)\",\n        \"A comparison of software and hardware techniques for x86 virtualization\",\n        \"Firecracker: Lightweight Virtualization for Serverless Applications.\",\n        \"Alibaba Cloud\",\n        \"Amazon Web Services\",\n        \"AMD I/O Virtualization Technology (IOMMU) Specification\",\n        \"AMD EPYC™ 7773X\",\n        \"SPDK I/O Virtualization with Vhost-user\",\n        \"Disk-locality in datacenter computing considered irrelevant.\",\n        \"Non-volatile memory host controller interface performance analysis in high-performance I/O systems\",\n        \"The Turtles Project: Design and Implementation of Nested Virtualization\",\n        \"Adding advanced storage controller functionality via low-overhead virtualization.\",\n        \"Serial ATA AHCI: Specification, Rev. 1.3.1\",\n        \"BM-Store: A Transparent and High-performance Local Storage Architecture for Bare-metal Clouds Enabling Large-scale Deployment\",\n        \"Intel DC P4510 SSD Specification\",\n        \"NVM Express\",\n        \"High-performance hypervisor architectures: Virtualization in hpc systems\",\n        \"Google Cloud\",\n        \"ELI: Bare-metal performance for I/O virtualization\",\n        \"Intel® Scalable I/O Virtualization Technical Specification\",\n        \"Intel® Virtualization Technology for Directed I/O\",\n        \"NVME virtualization ideas for machines on cloud\",\n        \"Direct-Virtio: A New Direct Virtualized I/O Framework for NVMe SSDs\",\n        \"Re-architecting VMMs for multicore systems: The sidecore approach\",\n        \"Paravirtual remote i/o\",\n        \"FVM: FPGA-assisted virtual device emulation for fast, scalable, and flexible storage virtualization\",\n        \"SplitX: Split Guest/Hypervisor Execution on Multi-Core\",\n        \"Leapio: Efficient and portable virtual nvme storage on arm socs\",\n        \"{{{RunD}}}: A Lightweight Secure Container Runtime for High-density Deployment and High-concurrency Startup in Serverless Computing\",\n        \"RunD: A Lightweight Secure Container Runtime for High-density Deployment and High-concurrency Startup in Serverless Computing\",\n        \"Virtualization polling engine (VPE) using dedicated CPU cores to accelerate I/O virtualization\",\n        \"My VM is Lighter (and Safer) than your Container\",\n        \"Microsoft Azure\",\n        \"Migrating server storage to SSDs: analysis of tradeoffs\",\n        \"VFIO Mediated devices\",\n        \"A Throughput-Oriented NVMe Storage Virtualization With Workload-Aware Management\",\n        \"MDev-NVMe: Mediated Pass-Through NVMe Virtualization Solution With Adaptive Polling\",\n        \"MDev-NVMe: A NVMe Storage Virtualization Solution with Mediated Pass-Through\",\n        \"A Persistent Key-Value Store for Fast Storage Environments\",\n        \"I/O Virtualization: Decoupling a logical device from its physical implementation offers many compelling advantages\",\n        \"virtio: towards a de-facto standard for virtual I/O devices\",\n        \"Single root I/O virtualization and sharing specification\",\n        \"SRCMap: Energy Proportional Storage Using Dynamic Consolidation.\",\n        \"VFIO: A user’s perspective\",\n        \"IRQ bypass manager\",\n        \"Performance analysis of NVMe SSDs and their implication on real world databases\",\n        \"SPDK: A development kit to build high performance storage applications\",\n        \"Spdk vhost-nvme: Accelerating i/os in virtual machines on nvme ssds via user space vhost target\",\n        \"Fast and scalable VMM live upgrade in large cloud infrastructure\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in High-performance and Scalable Software-based NVMe Virtualization Mechanism with I/O Queues Passthrough, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}