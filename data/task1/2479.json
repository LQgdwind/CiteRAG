{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: dtControl 2.0: Explainable Strategy Representation via Decision Tree Learning Steered by Experts This work has been partially supported by the German Research Foundation (DFG) project No. 383882557 SUV (KR 4890/2-1), No. 427755713 GOPro (KR 4890/3-1) and the TUM International Graduate School of Science and Engineering (IGSSE) grant 10.06 PARSEC. We thank Tim Quatman for implementing JSON-export of strategies in STORM and Pushpak Jagtap for his support with the SCOTS models.\n\nPaper Abstract: Abstract Recent advances have shown how decision trees are apt data structures for concisely representing strategies (or controllers) satisfying various objectives. Moreover, they also make the strategy more explainable. The recent tool dtControl had provided pipelines with tools supporting strategy synthesis for hybrid systems, such as SCOTS and Uppaal Stratego. We present dtControl 2.0, a new version with several fundamentally novel features. Most importantly, the user can now provide domain knowledge to be exploited in the decision tree learning process and can also interactively steer the process based on the dynamically provided information. To this end, we also provide a graphical user interface. It allows for inspection and re-computation of parts of the result, suggesting as well as receiving advice on predicates, and visual simulation of the decision-making process. Besides, we interface model checkers of probabilistic systems, namely STORM and PRISM and provide dedicated support for categorical enumeration-type state variables. Consequently, the controllers are more explainable and smaller.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Flask web development: developing web applications with python\",\n        \"Peeking inside the black-box: A survey on explainable artificial intelligence (XAI)\",\n        \"Strategy representation by decision trees with linear classifiers\",\n        \"dtcontrol: decision tree learning algorithms for controller representation\",\n        \"dtControl 2.0: Explainable strategy representation via decision tree learning steered by experts (TACAS 21 artifact)\",\n        \"SOS: safe, optimal and small strategies for hybrid Markov decision processes\",\n        \"Algebraic decision diagrams and their applications\",\n        \"D3 data-driven documents\",\n        \"Exploiting structure in policy construction\",\n        \"Counterexample explanation by learning small strategies in Markov decision processes\",\n        \"Strategy representation by decision trees in reactive synthesis\",\n        \"Classification and Regression Trees\",\n        \"Graph-based algorithms for boolean function manipulation\",\n        \"Automatic obdd-based generation of universal plans in non-deterministic domains\",\n        \"Uppaal stratego\",\n        \"A storm is coming: A modern probabilistic model checker\",\n        \"Fast and compact encoding of numerical controllers using obdds\",\n        \"Spaceex: Scalable verification of hybrid systems\",\n        \"Multi-terminal binary decision diagrams: An efficient data structure for matrix representation\",\n        \"Learning invariants using decision trees and implication counterexamples\",\n        \"Low-complexity quantized switching controllers using approximate bisimulation\",\n        \"Deep Learning\",\n        \"Array programming with numpy\",\n        \"The quantitative verification benchmark set\",\n        \"Induction of oblique decision trees\",\n        \"SPUDD: stochastic planning using decision diagrams\",\n        \"Constructing optimal binary decision trees is NP-complete\",\n        \"Non-linear decision trees - NDT\",\n        \"dtControl: Decision Tree Learning for Explainable Controller Representation\",\n        \"PESSOA: A tool for embedded controller synthesis\",\n        \"Private Communication\",\n        \"PRISM 4.0: Verification of probabilistic real-time systems\",\n        \"The PRISM benchmark suite\",\n        \"Safe and optimal adaptive cruise control\",\n        \"Practical synthesis of reactive systems from LTL specifications via parity games\",\n        \"Data Structures for Statistical Computing in Python\",\n        \"Sympy: symbolic computing in python\",\n        \"Machine learning\",\n        \"OC1: A randomized induction of oblique decision trees\",\n        \"Learning-based synthesis of safety controllers\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Decision tree function approximation in reinforcement learning\",\n        \"Induction of decision trees\",\n        \"C4.5: Programs for Machine Learning\",\n        \"SCOTS: A tool for the synthesis of symbolic controllers\",\n        \"A mathematical theory of communication\",\n        \"APRICODD: approximate policy construction using decision diagrams\",\n        \"Scipy 1.0-fundamental algorithms for scientific computing in python\",\n        \"Optimal symbolic controllers determinization for BDD storage\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in dtControl 2.0: Explainable Strategy Representation via Decision Tree Learning Steered by Experts This work has been partially supported by the German Research Foundation (DFG) project No. 383882557 SUV (KR 4890/2-1), No. 427755713 GOPro (KR 4890/3-1) and the TUM International Graduate School of Science and Engineering (IGSSE) grant 10.06 PARSEC. We thank Tim Quatman for implementing JSON-export of strategies in STORM and Pushpak Jagtap for his support with the SCOTS models., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}