{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Federated Neural Architecture Search\n\nPaper Abstract: Abstract. To preserve user privacy while enabling mobile intelligence, techniques have been proposed to train deep neural networks on decentralized data. However, decentralized training makes the design of neural architecture quite difficult as it already was. Such difficulty is further amplified when designing and deploying different neural architectures for heterogeneous mobile platforms. In this work, we propose an automatic neural architecture search into the decentralized training, as a new DNN training paradigm called Federated Neural Architecture Search, namely federated NAS. To deal with the primary challenge of limited on-client computational and communication resources, we present DecNAS, a highly optimized framework for efficient federated NAS. DecNAS fully exploits the key opportunity of insufficient model candidate re-training during the architecture search process, and incorporates three key optimizations: parallel candidates training on partial clients, early dropping candidates with inferior performance, and dynamic round numbers. Tested on large-scale datasets and typical CNN architectures, DecNAS achieves comparable model accuracy as state-of-the-art NAS algorithm that trains models with centralized data, and also reduces the client cost by up to 200Ã—\\times or more compared to a straightforward design of federated NAS.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Ai benchmark\",\n        \"Deep learning for java\",\n        \"General data protection regulation (gdpr)\",\n        \"Understanding and simplifying one-shot architecture search\",\n        \"Towards federated learning at scale: System design\",\n        \"Practical secure aggregation for privacy-preserving machine learning\",\n        \"Smash: one-shot model architecture search through hypernetworks\",\n        \"Towards ubiquitous learning: A first measurement of on-device training performance\",\n        \"Autofednlp: An efficient fednlp framework\",\n        \"Path-level network transformation for efficient architecture search\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n        \"Leaf: A benchmark for federated settings\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Google vizier: A service for black-box optimization\",\n        \"Morphnet: Fast & simple resource-constrained structure learning of deep networks\",\n        \"Federated learning for mobile keyboard prediction\",\n        \"Fednas: Federated deep learning via neural architecture search\",\n        \"Deep residual learning for image recognition\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Advances and open problems in federated learning\",\n        \"Federated learning: Strategies for improving communication efficiency\",\n        \"Federated learning for keyword spotting\",\n        \"Secure multiparty computation for privacy preserving data mining\",\n        \"Progressive neural architecture search\",\n        \"imashup: a mashup-based framework for service composition\",\n        \"Towards service composition based on mashup\",\n        \"Secure federated transfer learning\",\n        \"Deep learning face attributes in the wild\",\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Learning differentially private recurrent language models\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"ATM: A distributed, collaborative, scalable system for automated machine learning\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Not just privacy: Improving performance of private deep learning in mobile cloud\",\n        \"Melon: Breaking the memory wall for resource-efficient on-device machine learning\",\n        \"Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search\",\n        \"Mandheling: Mixed-precision on-device dnn training with dsp offloading\",\n        \"A first look at deep learning apps on smartphones\",\n        \"Deepcache: principled cache for mobile deep vision\",\n        \"Characterizing impacts of heterogeneity in federated learning upon large-scale smartphone data\",\n        \"Designing energy-efficient convolutional neural networks using energy-aware pruning\",\n        \"Netadapt: Platform-aware neural network adaptation for mobile applications\",\n        \"A comprehensive benchmark of deep learning libraries on mobile devices\",\n        \"Katib: A distributed general automl platform on kubernetes\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Learning transferable architectures for scalable image recognition\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Federated Neural Architecture Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}