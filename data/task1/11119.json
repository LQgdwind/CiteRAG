{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: IsoPredict: Dynamic Predictive Analysis for Detecting Unserializable Behaviors in Weakly Isolated Data Store Applications \\minibox[frame]This extended version of a PLDI 2024 paper adds an appendix with additional material\n\nPaper Abstract: Abstract. Distributed data stores typically provide weak isolation levels, which are efficient but can lead to unserializable behaviors, which are hard for programmers to understand and often result in errors. This paper presents the first dynamic predictive analysis for data store applications under weak isolation levels, called IsoPredict. Given an observed serializable execution of a data store application, IsoPredict generates and solves SMT constraints to find an unserializable execution that is a feasible execution of the application. IsoPredict introduces novel techniques that handle divergent application behavior; solve mutually recursive sets of constraints; and balance coverage, precision, and performance. An evaluation on four transactional data store benchmarks shows that IsoPredict often predicts unserializable behaviors, 99% of which are feasible.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optimal Stateless Model Checking for Causal Consistency\",\n        \"Generalized isolation level definitions\",\n        \"Causal Memory: Definitions, Implementation and Programming\",\n        \"Herding Cats: Modelling, Simulation, Testing, and Data Mining for Weak Memory\",\n        \"A Critique of ANSI SQL Isolation Levels\",\n        \"On the Complexity of Checking Transactional Consistency\",\n        \"MonkeyDB: Effectively Testing Correctness under Weak Isolation Levels\",\n        \"Personal communication\",\n        \"On verifying causal consistency\",\n        \"Dynamic Partial Order Reduction for Checking Correctness against Transaction Isolation Levels\",\n        \"Serializability for Eventual Consistency: Criterion, Analysis, and Applications\",\n        \"Static Serializability Analysis for Causal Consistency\",\n        \"Principles of Eventual Consistency\",\n        \"A Framework for Transactional Consistency Models with Atomic Visibility\",\n        \"Developer’s Responsibility or Database’s Responsibility? Rethinking Concurrency Control in Databases\",\n        \"Spanner: Google’s Globally-Distributed Database\",\n        \"Seeing is Believing: A Client-Centric Specification of Database Isolation\",\n        \"Z3: An Efficient SMT Solver\",\n        \"OLTP-Bench: An Extensible Testbed for Benchmarking Relational Databases\",\n        \"Amazon DynamoDB: A Scalable, Predictably Performant, and Fully Managed NoSQL Database Service\",\n        \"Oracle Database Replay\",\n        \"IsoDiff: Debugging Anomalies Caused by Weak Isolation\",\n        \"IsoPredict artifact\",\n        \"IsoPredict implementation\",\n        \"Effective Partial Order Reduction in Model Checking Database Applications\",\n        \"Brewer’s conjecture and the feasibility of consistent, available, partition-tolerant web services\",\n        \"Algorithmic Verification of Concurrent and Distributed Data Structures\",\n        \"Maximal sound predictive race detection with control flow abstraction\",\n        \"Safe replication through bounded concurrency verification\",\n        \"Elle: Inferring Isolation Anomalies from Experimental Observations\",\n        \"Dynamic race prediction in linear time\",\n        \"Trigger Selection Strategies to Stabilize Program Verifiers\",\n        \"R3: Record-Replay-Retroaction for Database-Backed Applications\",\n        \"Consistency, Availability, Convergence\",\n        \"MySQL Cluster\",\n        \"Automated Detection of Serializability Violations under Weak Consistency\",\n        \"What Are We Doing With Our Lives? Nobody Cares About Our Concurrency Control Research\",\n        \"Causal Consistency: Beyond Memory\",\n        \"CLOTHO: Directed Test Generation for Weakly Consistent Database Systems\",\n        \"SmartTrack: efficient predictive race detection\",\n        \"Generating Data Race Witnesses by an SMT-Based Analysis\",\n        \"Predicting Serializability Violations: SMT-Based Search vs. DPOR-Based Search\",\n        \"Snowflake transactions\",\n        \"COBRA: making transactional key-value stores verifiably serializable\",\n        \"Ad Hoc Transactions in Web Applications: The Good, the Bad, and the Ugly\",\n        \"Sound Dynamic Deadlock Prediction in Linear Time\",\n        \"ACIDRain: Concurrency-Related Attacks on Database-Backed Web Applications\",\n        \"Checking Causal Consistency of Distributed Databases\",\n        \"Viper: A Fast Snapshot Isolation Checker\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in IsoPredict: Dynamic Predictive Analysis for Detecting Unserializable Behaviors in Weakly Isolated Data Store Applications \\\\minibox[frame]This extended version of a PLDI 2024 paper adds an appendix with additional material, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}