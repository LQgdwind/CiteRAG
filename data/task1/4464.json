{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Fast Randomized Algorithm for Massive Text Normalization\n\nPaper Abstract: Abstract. Many popular machine learning techniques in natural language processing and data mining rely heavily on high-quality text sources. However real-world text datasets contain a significant amount of spelling errors and improperly punctuated variants where the performance of these models would quickly deteriorate. Moreover, real-world, web-scale datasets contain hundreds of millions or even billions of lines of text, where the existing text cleaning tools are prohibitively expensive to execute over and may require an overhead to learn the corrections. In this paper, we present FLAN, a scalable randomized algorithm to clean and canonicalize massive text data. Our algorithm relies on the Jaccard similarity between words to suggest correction results. We efficiently handle the pairwise word-to-word comparisons via Locality Sensitive Hashing (LSH). We also propose a novel stabilization process to address the issue of hash collisions between dissimilar words, which is a consequence of the randomized nature of LSH and is exacerbated by the massive scale of real-world datasets. Compared with existing approaches, our method is more efficient, both asymptotically and in empirical evaluations, and does not rely on additional features, such as lexical/phonetic similarity or word embedding features. In addition, FLAN does not require any annotated data or supervised learning. We further theoretically show the robustness of our algorithm with upper bounds on the false positive and false negative rates of corrections. Our experimental results on real-world datasets demonstrate the efficiency and efficacy of FLAN. Leveraging recent advances in efficiently computing minhash signatures, FLAN requires much less computational time compared to baselines text normalization techniques on large-scale Twitter and Reddit datasets. In a human evaluation of the quality of the normalization, FLAN achieves 5%percent55\\% and 14%percent1414\\% improvement against the baselines over the Reddit and Twitter dataset correspondingly. Our method also improves performance on the perturbed GLUE benchmark datasets, where we introduce errors into the text, and Twitter sentiment classification applications.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Fast Johnsonâ€“Lindenstrauss Transform and Approximate Nearest Neighbors\",\n        \"Experience: Insights into the Benchmarking Data of Hunspell and Aspell Spell Checkers\",\n        \"Morphology by itself: Stems and inflectional classes\",\n        \"A phrase-based statistical model for SMS text normalization\",\n        \"Shared Tasks of the 2015 Workshop on Noisy User-generated Text\",\n        \"Interactive and context-aware tag spell check and correction\",\n        \"Completeness and robustness properties of min-wise independent permutations\",\n        \"A Data Cleaning Solution by Perl Scripts for the KDD Cup 2003 Task 2\",\n        \"Lexical Normalization of Spanish Tweets\",\n        \"Unique entity estimation with application to the Syrian conflict\",\n        \"Investigation and modeling of the structure of texting language\",\n        \"Correction of typographical errors on touch displays\",\n        \"A Comparison of String Distance Metrics for Name-Matching Tasks.\",\n        \"Approximate String Matching: A Simpler Faster Algorithm\",\n        \"Unsupervised cleansing of noisy text\",\n        \"An improved data stream summary: the count-min sketch and its applications\",\n        \"Multiclass Text Classification on Unbalanced, Sparse and Noisy Data\",\n        \"A Fast Sampling Algorithm for Maximum Inner Product Search\",\n        \"Towards Robust Word Embeddings for Noisy Texts\",\n        \"Data quality considerations for big data and machine learning: Going beyond data cleaning and transformations\",\n        \"Lexical Normalisation of Short Text Messages: Makn Sens a #twitter\",\n        \"Lexical normalization for social media text\",\n        \"Real-word spelling correction using Google web 1Tn-gram data set\",\n        \"Billion-scale similarity search with GPUs\",\n        \"Accurate Word Segmentation and POS Tagging for Japanese Microblogs: Corpus Annotation and Joint Modeling with Lexical Normalization\",\n        \"Training and Prediction Data Discrepancies: Challenges of Text Classification with Noisy, Historical Data\",\n        \"Mining of Massive Datasets (3nd ed.)\",\n        \"One Permutation Hashing\",\n        \"Arrays of (locality-sensitive) Count Estimators (ACE): Anomaly Detection on the Edge\",\n        \"Using the Levenshtein Edit Distance for Automatic Lemmatization: A Case Study for Modern Greek and English\",\n        \"Robust Word Vectors: Context-Informed Embeddings for Noisy Texts\",\n        \"Advances in Pre-Training Distributed Word Representations\",\n        \"Enhancing BERT for lexical normalization\",\n        \"Semantic Product Search\",\n        \"Natural language corpus data\",\n        \"An Evaluation Method for Stemming Algorithms\",\n        \"GloVe: Global Vectors for Word Representation\",\n        \"Hitachi at SemEval-2020 Task 12: Offensive Language Identification with Noisy Labels Using Statistical Sampling and Post-Processing\",\n        \"Efficient Twitter sentiment classification using subjective distant supervision\",\n        \"DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter\",\n        \"Robust Embeddings Via Distributions\",\n        \"Get Another Label? Improving Data Quality and Data Mining Using Multiple, Noisy Labelers\",\n        \"Optimal Densification for Fast and Accurate Minwise Hashing\",\n        \"Densifying One Permutation Hashing via Rotation for Fast Near Neighbor Search\",\n        \"Improved Densification of One Permutation Hashing\",\n        \"Improved Asymmetric Locality Sensitive Hashing (ALSH) for Maximum Inner Product Search (MIPS)\",\n        \"Cutting through the noise: Defining ground truth in information credibility on twitter\",\n        \"IHS_RD: Lexical Normalization for English Tweets\",\n        \"MoNoise: A Multi-lingual and Easy-to-use Lexical Normalization Tool\",\n        \"Norm It! Lexical Normalization for Italian and Its Downstream Effects for Dependency Parsing\",\n        \"TL;DR: Mining Reddit to Learn Automatic Summarization\",\n        \"GLUE: A Multi-Task Benchmark and Analysis Platform for Natural Language Understanding\",\n        \"Locality Preserving Hashing\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in A Fast Randomized Algorithm for Massive Text Normalization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}