{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AliExpress Learning-To-Rank: Maximizing Online Model Performance without Going Online\n\nPaper Abstract: Abstract Learning-to-rank (LTR) has become a key technology in E-commerce applications. Most existing LTR approaches follow a supervised learning paradigm from offline labeled data collected from the online system. However, it has been noticed that previous LTR models can have a good validation performance over offline validation data but have a poor online performance, and vice versa, which implies a possible large inconsistency between the offline and online evaluation. We investigate and confirm in this paper that such inconsistency exists and can have a significant impact on AliExpress Search. Reasons for the inconsistency include the ignorance of item context during the learning, and the offline data set is insufficient for learning the context. Therefore, this paper proposes an evaluator-generator framework for LTR with item context. The framework consists of an evaluator that generalizes to evaluate recommendations involving the context, and a generator that maximizes the evaluator score by reinforcement learning, and a discriminator that ensures the generalization of the evaluator. Extensive experiments in simulation environments and AliExpress Search online system show that, firstly, the classic data-based metrics on the offline dataset can show significant inconsistency with online performance, and can even be misleading. Secondly, the proposed evaluator score is significantly more consistent with the online performance than common ranking metrics. Finally, as the consequence, our method achieves a significant improvement (>2%percent22\\%) in terms of Conversion Rate (CR) over the industrial-level fine-tuned model in online A/B tests.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A general framework for counterfactual learning-to-rank\",\n        \"Learning a deep listwise context model for ranking refinement\",\n        \"Learning groupwise multivariate scoring functions using deep neural networks\",\n        \"A comparative analysis of offline and online evaluations and discussion of research paper recommender system evaluation\",\n        \"Seq2slate: Re-ranking and slate optimization with rnns\",\n        \"Learning to rank with nonsmooth cost functions\",\n        \"Learning to rank using gradient descent\",\n        \"From ranknet to lambdarank to lambdamart: An overview\",\n        \"Learning to rank: from pairwise approach to listwise approach\",\n        \"Top-k off-policy correction for a REINFORCE recommender system\",\n        \"Statistical analysis of bayes optimal subset ranking\",\n        \"Are we really making much progress? a worrying analysis of recent neural recommendation approaches\",\n        \"One-shot imitation learning\",\n        \"Guided cost learning: Deep inverse optimal control via policy optimization\",\n        \"Exact-k recommendation via maximal clique optimization\",\n        \"Generative adversarial nets\",\n        \"Generative adversarial imitation learning\",\n        \"Recsim: A configurable simulation platform for recommender systems\",\n        \"Slateq: A tractable decomposition for reinforcement learning with recommendation sets\",\n        \"Beyond greedy ranking: Slate optimization via list-cvae\",\n        \"Optimizing search engines using clickthrough data\",\n        \"Unbiased learning-to-rank with biased feedback\",\n        \"Buy 4 reinforce samples, get a baseline for free!\",\n        \"Mcrank: Learning to rank using multiple classification and gradient boosting\",\n        \"Entire space multi-task model: An effective approach for estimating post-click conversion rate\",\n        \"Being accurate is not enough: how accuracy metrics have hurt recommender systems\",\n        \"Personalized re-ranking for recommendation\",\n        \"Recogym: A reinforcement learning environment for the problem of product recommendation in online advertising\",\n        \"Efficient reductions for imitation learning\",\n        \"A reduction of imitation learning and structured prediction to no-regret online learning\",\n        \"Contrasting offline and online results when evaluating recommendation algorithms\",\n        \"Trust region policy optimization\",\n        \"Proximal policy optimization algorithms\",\n        \"Virtual-taobao: Virtualizing real-world online retail environment for reinforcement learning\",\n        \"Introduction to reinforcement learning, volume 135\",\n        \"Softrank: optimizing non-smooth rank metrics\",\n        \"Pointer networks\",\n        \"Machine learning that matters\",\n        \"Sequential evaluation and generation framework for combinatorial recommender system\",\n        \"Turning clicks into purchases: Revenue optimization for product search in e-commerce\",\n        \"Listwise approach to learning to rank: theory and algorithm\",\n        \"Context-aware ranking by constructing a virtual environment for reinforcement learning\",\n        \"Deep reinforcement learning for page-wise recommendations\",\n        \"Deep interest network for click-through rate prediction\",\n        \"Globally optimized mutual influence aware ranking in e-commerce search\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in AliExpress Learning-To-Rank: Maximizing Online Model Performance without Going Online, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}