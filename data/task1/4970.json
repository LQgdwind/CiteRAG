{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accelerating Deep Learning Classification with Error-controlled Approximate-key Caching\n\nPaper Abstract: Abstract While Deep Learning (DL) technologies are a promising tool to solve networking problems that map to classification tasks, their computational complexity is still too high with respect to real-time traffic measurements requirements. To reduce the DL inference cost, we propose a novel caching paradigm, that we named approximate-key caching, which returns approximate results for lookups of selected input based on cached DL inference results. While approximate cache hits alleviate DL inference workload and increase the system throughput, they however introduce an approximation error. As such, we couple approximate-key caching with an error-correction principled algorithm, that we named auto-refresh. We analytically model our caching system performance for classic LRU and ideal caches, we perform a trace-driven evaluation of the expected performance, and we compare the benefits of our proposed approach with the state-of-the-art similarity caching â€“ this testifies the practical interest of our proposal.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Why (and how) networks should run themselves\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Binarized neural networks\",\n        \"Distilling the knowledge in a neural network\",\n        \"Cloud TPU\",\n        \"Benchmarking TPU, GPU, and CPU platforms for deep learning\",\n        \"Lcnn: Lookup-based convolutional neural network\",\n        \"SPINN: synergistic progressive inference of neural networks over device and cloud\",\n        \"A large scale analysis of hundreds of in-memory cache clusters at twitter\",\n        \"Better caching in search advertising systems with rapid refresh predictions\",\n        \"Clipper: A low-latency online prediction serving system\",\n        \"Laser: A scalable response prediction platform for online advertising\",\n        \"The missing piece in complex analytics: Low latency, scalable model management and serving with velox\",\n        \"Virage image search engine: an open framework for image management\",\n        \"Middle-tier database caching for e-business\",\n        \"A metric cache for similarity search\",\n        \"Similarity caching\",\n        \"isax 2.0: Indexing and mining one billion time series\",\n        \"An efficient similar image search framework for large-scale data on cloud\",\n        \"An approach to content-based image retrieval based on the lucene search engine library\",\n        \"Nearest-neighbor caching for content-match applications\",\n        \"Similarity caching: Theory and algorithms\",\n        \"Mobile encrypted traffic classification using deep learning\",\n        \"A unified approach to the performance analysis of caching systems\",\n        \"Searching in metric spaces\",\n        \"Foundations of Multidimensional and Metric Data Structures (The Morgan Kaufmann Series in Computer Graphics and Geometric Modeling)\",\n        \"Similarity Search: The Metric Space Approach, ser. Advances in Database Systems\",\n        \"Nearest-Neighbor Methods in Learning and Vision: Theory and Practice (Neural Information Processing)\",\n        \"A versatile and accurate approximation for lru cache performance\",\n        \"A survey of techniques for internet traffic classification using machine learning.\",\n        \"A comprehensive survey on machine learning for networking: evolution, applications and research opportunities\",\n        \"Do switches dream of machine learning? toward in-network classification\",\n        \"Deep learning and zero-day traffic classification: Lessons learned from a commercial-grade dataset\",\n        \"Model-switching: Dealing with fluctuating workloads in machine-learning-as-a-service systems\",\n        \"Scikit-learn balltree.\",\n        \"lshashpy3.\",\n        \"PyNNDescent.\",\n        \"Locality-sensitive hashing for finding nearest neighbors [lecture notes]\",\n        \"Cython.\",\n        \"numpy.\",\n        \"In defense of locality-sensitive hashing\",\n        \"Lsh was removed from scikit-learn.\",\n        \"Deepcache: Principled cache for mobile deep vision\",\n        \"Accelerating deep learning inference via freezing\",\n        \"Soft cache hits: Improving performance through recommendation and delivery of related content\",\n        \"Similarity search in sensor networks using semantic-based caching\",\n        \"Return of the lernaean hydra: Experimental evaluation of data series approximate similarity search\",\n        \"Cache locality is not enough: High-performance nearest neighbor search with product quantization fast scan\",\n        \"Billion-scale similarity search with gpus\",\n        \"Streaming similarity search over one billion tweets using parallel locality-sensitive hashing\",\n        \"Grades: Gradient descent for similarity caching\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Accelerating Deep Learning Classification with Error-controlled Approximate-key Caching, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}