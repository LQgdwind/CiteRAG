{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Prime+Retouch: When Cache is Locked and Leaked\n\nPaper Abstract: Abstract Caches on the modern commodity CPUs have become one of the major sources of side-channel leakages and been abused as a new attack vector. To thwart the cache-based side-channel attacks, two types of countermeasures have been proposed: detection-based ones that limit the amount of microarchitectural traces an attacker can leave, and cache prefetching-and-locking techniques that claim to prevent such leakage by disallowing evictions on sensitive data. In this paper, we present the Prime+Retouch attack that completely bypasses these defense schemes by accurately inferring the cache activities with the metadata of the cache replacement policy. Prime+Retouch has three noticeable properties: 1) it incurs no eviction on the victim’s data, allowing us to bypass the two known mitigation schemes, 2) it requires minimal synchronization of only one memory access to the attacker’s pre-primed cache lines, and 3) it leaks data via non-shared memory, yet because underlying eviction metadata is shared. We demonstrate Prime+Retouch in two architectures: predominant Intel x86 and emerging Apple M1. We elucidate how Prime+Retouch can break the T-table implementation of AES with robust cache side-channel mitigations such as Cloak, under both normal and SGX-protected environments. We also manifest feasibility of the Prime+Retouch attack on the M1 platform imposing more restrictions where the precise measurement tools such as core clock cycle timer and performance counters are inaccessible to the attacker. Furthermore, we first demystify undisclosed cache architecture and its eviction policy of L1 data cache on Apple M1 architecture. We also devise a user-space noise-free cache monitoring tool by repurposing Intel TSX.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Asahi linux\",\n        \"nanobench: A low-overhead tool for running microbenchmarks on x86 systems\",\n        \"A vulnerability in rsa implementations due to instruction cache analysis and its demonstration on openssl\",\n        \"Fine grain cross-vm attacks on xen and vmware are possible!\",\n        \"About the Rosetta Translation Environment\",\n        \"S-box implementation of aes is not side channel resistant\",\n        \"Cache-timing attacks on aes\",\n        \"Software grand exposure: SGX cache attacks are practical\",\n        \"Cacheshield: Detecting cache attacks through self-observation\",\n        \"Reload+ refresh: Abusing cache replacement policies to perform stealthy cache attacks\",\n        \"Modeling side-channel cache attacks on aes\",\n        \"Real time detection of cache-based side-channel attacks using hardware performance counters\",\n        \"Smokebomb: effective mitigation against cache side-channel attacks on the arm architecture\",\n        \"Prime+abort: A timer-free high-precision l3 cache attack using intel tsx\",\n        \"A survey of microarchitectural timing attacks and countermeasures on contemporary hardware\",\n        \"A Spectre proof-of-concept for a Spectre-proof web\",\n        \"Strong and efficient cache side-channel protection using hardware transactional memory\",\n        \"Flush+ flush: a fast and stealthy cache attack\",\n        \"Cache template attacks: Automating attacks on inclusive last-level caches\",\n        \"Intel advanced encryption standard (aes) instructions set\",\n        \"Transactional Memory Extension (TME) intrinsics\",\n        \"AArch64 Programmer’s Guides Generic Timer\",\n        \"Arm architecture reference manual, armv8, for armv8-a architecture profile\",\n        \"Arm architecture reference manual supplement armv9, for armv9-a architecture profile\",\n        \"Seriously, get off my cloud! cross-vm rsa key recovery in a public cloud\",\n        \"Intel® Transactional Synchronization Extensions Asynchronous Abort\",\n        \"List of processors affected by transient execution attack\",\n        \"S $ a: A shared cache attack that works across cores and defies vm sandboxing–and its application to aes\",\n        \"Wait a minute! a fast, cross-vm attack on aes\",\n        \"Power management of the third generation intel core micro architecture formerly codenamed ivy bridge\",\n        \"Faster and timing-attack resistant aes-gcm\",\n        \"STEALTHMEM: System-level protection against cache-based side channel attacks in the cloud\",\n        \"Dawg: A defense against cache timing attacks in speculative execution processors\",\n        \"Spectre attacks: Exploiting speculative execution\",\n        \"A fast and cache-timing resistant implementation of the aes\",\n        \"Spydetector: An approach for detecting side-channel attacks at runtime\",\n        \"Meltdown: Reading kernel memory from user space\",\n        \"Catalyst: Defeating last-level cache side channel attacks in cloud computing\",\n        \"Random fill cache architecture\",\n        \"Last-level cache side-channel attacks are practical\",\n        \"Cachezoom: How sgx amplifies the power of cache attacks\",\n        \"Advances on access-driven cache attacks on aes\",\n        \"Cache attacks and countermeasures: The case of aes\",\n        \"Bitslice implementation of aes\",\n        \"Hey, you, get off of my cloud: exploring information leakage in third-party compute clouds\",\n        \"Zombieload: Cross-privilege-boundary data sampling\",\n        \"Cache operations by mru change\",\n        \"Efficient cache attacks on aes, and countermeasures\",\n        \"Sgx-step: A practical attack framework for precise enclave execution control\",\n        \"Ridl: Rogue in-flight data load\",\n        \"Cachequery: learning replacement policies from hardware caches\",\n        \"New cache designs for thwarting software cache-based side channel attacks\",\n        \"Leaking information through cache lru states\",\n        \"Flush+ reload: a high resolution, low noise, l3 cache side-channel attack\",\n        \"Cloudradar: A real-time side-channel attack detection system in clouds\",\n        \"A software approach to defeating side channels in last-level caches\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Prime+Retouch: When Cache is Locked and Leaked, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}