{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Worst-Case Convergence Time of ML Algorithms via Extreme Value Theory\n\nPaper Abstract: Abstract. This paper leverages the statistics of extreme values to predict the worst-case convergence times of machine learning algorithms. Timing is a critical non-functional property of ML systems, and providing the worst-case converge times is essential to guarantee the availability of ML and its services. However, timing properties such as worst-case convergence times (WCCT) are difficult to verify since (1) they are not encoded in the syntax or semantics of underlying programming languages of AI, (2) their evaluations depend on both algorithmic implementations and underlying systems, and (3) their measurements involve uncertainty and noise. Therefore, prevalent formal methods and statistical models fail to provide rich information on the amounts and likelihood of WCCT. Our key observation is that the timing information we seek represents the extreme tail of execution times. Therefore, extreme value theory (EVT), a statistical discipline that focuses on understanding and predicting the distribution of extreme values in the tail of outcomes, provides an ideal framework to model and analyze WCCT in the training and inference phases of ML paradigm. Building upon the mathematical tools from EVT, we propose a practical framework to predict the worst-case timing properties of ML. Over a set of linear ML training algorithms, we show that EVT achieves a better accuracy for predicting WCCTs than relevant statistical methods such as the Bayesian factor. On the set of larger machine learning training algorithms and deep neural network inference, we show the feasibility and usefulness of EVT models to accurately predict WCCTs, their expected return periods, and their likelihood.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Extreme value theory in a nutshell with various applications\",\n        \"Ai and compute\",\n        \"Evt-based worst case delay estimation under process variation\",\n        \"Snapbuddy application\",\n        \"Upper-bounding program execution time with extreme value theory\",\n        \"Inputs of coma: Static detection of denial-of-service vulnerabilities\",\n        \"Deep neural networks segment neuronal membranes in electron microscopy images\",\n        \"An introduction to statistical modeling of extreme values, vol. 208\",\n        \"Extreme value analysis and the study of climate change\",\n        \"Bayesian spatial modeling of extreme precipitation return levels\",\n        \"Measurement-based probabilistic timing analysis for multi-path programs\",\n        \"Modelling Excesses over High Thresholds, with an Application\",\n        \"Extreme value theory: an introduction, vol. 21\",\n        \"UCI machine learning repository\",\n        \"Learning and verification of feedback control systems using feedforward neural networks\",\n        \"A software review for extreme value analysis\",\n        \"Statistical-based wcet estimation and validation\",\n        \"A bayesian approach to model checking biological systems\",\n        \"A look at the rule of three\",\n        \"Policy compression for aircraft collision avoidance systems\",\n        \"Challenges for static analysis of java reflection-literature review and empirical study\",\n        \"Extremes and related properties of random sequences and processes\",\n        \"Perffuzz: Automatically generating pathological inputs\",\n        \"Towards fully autonomous driving: Systems and algorithms\",\n        \"Valid application of evt in timing analysis by randomising execution time measurements\",\n        \"Extreme value theory for estimating task execution time bounds: A careful look\",\n        \"A new way about using statistical analysis of worst-case execution times\",\n        \"Qfuzz: Quantitative fuzzing for side channels\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Make multilabel classification in scikit-learn\",\n        \"Slowfuzz: Automated domain-independent detection of algorithmic complexity vulnerabilities\",\n        \"A benchmark problem for nonlinear control design\",\n        \"Static analysis for probabilistic programs: inferring whole program properties from finitely many paths\",\n        \"On the sustainability of the extreme value theory for wcet estimation\",\n        \"Green ai\",\n        \"Gametime: A toolkit for timing analysis of software\",\n        \"Statistical blockade: a novel method for very fast monte carlo simulation of rare circuit events, and its application\",\n        \"Discriminating traces with time\",\n        \"Differential performance debugging with discriminant regression trees\",\n        \"Efficient detection and quantification of timing leaks with neural networks\",\n        \"Detecting and understanding real-world differential performance bugs in machine learning libraries\",\n        \"Dpfuzz: Fuzzing and debugging for differential performance bugs in machine learning libraries\",\n        \"Droid-sec: deep learning in android malware detection\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in Worst-Case Convergence Time of ML Algorithms via Extreme Value Theory, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}