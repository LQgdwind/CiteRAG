{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Influence Functions for Sequence Tagging Models\n\nPaper Abstract: Abstract Many language tasks (e.g., Named Entity Recognition, Part-of-Speech tagging, and Semantic Role Labeling) are naturally framed as sequence tagging problems. However, there has been comparatively little work on interpretability methods for sequence tagging models. In this paper, we extend influence functions — which aim to trace predictions back to the training points that informed them — to sequence tagging tasks. We define the influence of a training instance segment as the effect that perturbing the labels within this segment has on a test segment level prediction. We provide an efficient approximation to compute this, and show that it tracks with the true segment influence, measured empirically. We show the practical utility of segment influence by using the method to identify systematic annotation errors in two named entity recognition corpora. Code to reproduce our results is available at https://github.com/successar/Segment_Influence_Functions.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Interpretability analysis for named entity recognition to understand system predictions and how they can improve\",\n        \"A causal framework for explaining the predictions of black-box sequence-to-sequence models\",\n        \"Understanding the origins of bias in word embeddings\",\n        \"Influential observations, high leverage points, and outliers in linear regression\",\n        \"Hydra: Hypergradient data relevance analysis for interpreting deep neural networks\",\n        \"What does BERT look at? an analysis of BERT’s attention\",\n        \"Criticism and influence analysis in regression\",\n        \"Interpreting robust optimization via adversarial influence functions\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Neckar: A named entity classifier for wikidata\",\n        \"Data shapley: Equitable valuation of data for machine learning\",\n        \"The trade-offs of domain adaptation for neural language models\",\n        \"Domain-specific language model pretraining for biomedical natural language processing\",\n        \"Fastif: Scalable influence functions for efficient model interpretation and debugging\",\n        \"Robust statistics: the approach based on influence functions, volume 196\",\n        \"Influence tuning: Demoting spurious correlations via instance attribution and instance-driven updates\",\n        \"Explaining black box predictions and unveiling data artifacts through influence functions\",\n        \"spaCy: Industrial-strength Natural Language Processing in Python\",\n        \"Datamodels: Predicting predictions from training data\",\n        \"Interpreting black box predictions using fisher kernels\",\n        \"Adam: A method for stochastic optimization\",\n        \"Understanding black-box predictions via influence functions\",\n        \"Resolving training biases via influence-based data relabeling\",\n        \"Conditional random fields: Probabilistic models for segmenting and labeling sequence data\",\n        \"Learning augmentation network via influence functions\",\n        \"A corpus with multi-level annotations of patients, interventions and outcomes to support language processing for medical literature\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Glove: Global vectors for word representation\",\n        \"Combining feature and instance attribution to detect artifacts\",\n        \"An empirical comparison of instance attribution methods for nlp\",\n        \"Estimating training data influence by tracing gradient descent\",\n        \"Text chunking using transformation-based learning\",\n        \"Identifying incorrect labels in the CoNLL-2003 corpus\",\n        \"Scaling up influence functions\",\n        \"Debugging sequence-to-sequence models with Seq2Seq-vis\",\n        \"Introduction to the CoNLL-2003 shared task: Language-independent named entity recognition\",\n        \"Support vector machine learning for interdependent and structured output spaces\",\n        \"Training conditional random fields using incomplete annotations\",\n        \"Rationales for sequential predictions\",\n        \"Bertology meets biology: Interpreting attention in protein language models\",\n        \"Gradient-guided loss masking for neural machine translation\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Understanding goal-oriented active learning via influence functions\",\n        \"Big bird: Transformers for longer sequences\",\n        \"On sample based explanation methods for NLP: Faithfulness, efficiency and semantic evaluation\",\n        \"HILDIF: Interactive debugging of NLI models using influence functions\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Influence Functions for Sequence Tagging Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}