{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 40 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: New Models for Understanding and Reasoning about Speculative Execution Attacks\n\nPaper Abstract: Abstract Spectre and Meltdown attacks and their variants exploit hardware performance optimization features to cause security breaches. Secret information is accessed and leaked through covert or side channels. New attack variants keep appearing and we do not have a systematic way to capture the critical characteristics of these attacks and evaluate why they succeed or fail. In this paper, we provide a new attack-graph model for reasoning about speculative execution attacks. We model attacks as ordered dependency graphs, and prove that a race condition between two nodes can occur if there is a missing dependency edge between them. We define a new concept, “security dependency”, between a resource access and its prior authorization operation. We show that a missing security dependency is equivalent to a race condition between authorization and access, which is a root cause of speculative execution attacks. We show detailed examples of how our attack graph models the Spectre and Meltdown attacks, and is generalizable to all the attack variants published so far. This attack model is also very useful for identifying new attacks and for generalizing defense strategies. We identify several defense strategies with different performance-security tradeoffs. We show that the defenses proposed so far all fit under one of our defense strategies. We also explain how attack graphs can be constructed and point to this as promising future work for tool designers.\n\n{retrieved_text}\n\nGenerate exactly 40 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 40\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Parallel depth-first search in general directed graphs\",\n        \"Specshield: Shielding speculative data from microarchitectural covert channels\",\n        \"Cache-collision timing attacks against aes\",\n        \"Fallout: Leaking data on meltdown-resistant cpus\",\n        \"A systematic evaluation of transient execution attacks and defenses\",\n        \"A formal approach to secure speculation\",\n        \"Side-channel vulnerability factor: a metric for measuring information leakage\",\n        \"The code that never ran: Modeling attacks on speculative evaluation\",\n        \"Spectreguard: An efficient data-centric defense mechanism against spectre attacks\",\n        \"Spectector: Principled detection of speculative information flows\",\n        \"Cache games–bringing access-based cache attacks on aes to practice\",\n        \"How secure is your cache against side-channel attacks?\",\n        \"Spoiler: Speculative load hazards boost rowhammer and cache attacks\",\n        \"Safespec: Banishing the spectre of a meltdown with leakage-free speculation\",\n        \"Dawg: A defense against cache timing attacks in speculative execution processors\",\n        \"Speculative buffer overflows: Attacks and defenses\",\n        \"Spectre attacks: Exploiting speculative execution\",\n        \"Spectre returns! speculation attacks using the return stack buffer\",\n        \"Security aware microarchitecture design\",\n        \"Conditional speculation: An effective approach to safeguard out-of-order execution against spectre attacks\",\n        \"Meltdown: Reading kernel memory from user space\",\n        \"Secure automatic bounds checking: prevention is simpler than cure\",\n        \"Cache attacks and countermeasures: the case of aes\",\n        \"Cleanupspec: An undo approach to safe speculation\",\n        \"Efficient invisible speculative execution through selective delay and value prediction\",\n        \"Context: A generic approach for mitigating spectre\",\n        \"Zombieload: Cross-privilege-boundary data sampling\",\n        \"Lazyfp: Leaking fpu register state using microarchitectural side-channels\",\n        \"Context-sensitive fencing: Securing speculative execution via microcode customization\",\n        \"Foreshadow: Extracting the keys to the intel sgx kingdom with transient out-of-order execution\",\n        \"Lvi: Hijacking transient execution through microarchitectural load value injection\",\n        \"Ridl: Rogue in-flight data load\",\n        \"Cacheout: Leaking data on intel cpus via cache evictions\",\n        \"Nda: Preventing speculative execution attacks at their source\",\n        \"Foreshadow-ng: Breaking the virtual memory abstraction with transient out-of-order execution\",\n        \"Invisispec: Making speculative execution invisible in the cache hierarchy\",\n        \"Flush+ reload: A high resolution, low noise, l3 cache side-channel attack.\",\n        \"Speculative taint tracking (stt) a comprehensive protection for speculatively accessed data\",\n        \"New models of cache architectures characterizing information leakage from cache side channels\",\n        \"Side channel vulnerability metrics: the promise and the pitfalls\"\n    ],\n    \"reasoning\": \"Selected these 40 references because they represent foundational work and recent advances in New Models for Understanding and Reasoning about Speculative Execution Attacks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}