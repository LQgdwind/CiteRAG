{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Generalizable Approach to Learning Optimizers\n\nPaper Abstract: Abstract A core issue with learning to optimize neural networks has been the lack of generalization to real world problems. To address this, we describe a system designed from a generalization-first perspective, learning to update optimizer hyperparameters instead of model parameters directly using novel features, actions, and a reward function. This system outperforms Adam at all neural network tasks including on modalities not seen during training. We achieve 2x speedups on ImageNet, and a 2.5x speedup on a language modeling task using over 5 orders of magnitude more compute than the training tasks.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gradnets: Dynamic interpolation between neural architectures\",\n        \"Deep speech 2: End-to-end speech recognition in english and mandarin\",\n        \"Learning to learn by gradient descent by gradient descent\",\n        \"Second order optimization made practical\",\n        \"Stop wasting my gradients: Practical svrg\",\n        \"Online learning rate adaptation with hypergradient descent\",\n        \"Practical recommendations for gradient-based training of deep architectures\",\n        \"Language models are few-shot learners\",\n        \"Learning phrase representations using rnn encoder-decoder for statistical machine translation\",\n        \"On empirical comparisons of optimizers for deep learning\",\n        \"Deep learning for classical japanese literature\",\n        \"Learning step size controllers for robust neural network training\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Learning to forget: Continual prediction with lstm\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"On the iteration complexity of hypergradient computation\",\n        \"Shampoo: Preconditioned stochastic tensor optimization\",\n        \"Deep residual learning for image recognition\",\n        \"Neural collaborative filtering\",\n        \"Population based training of neural networks\",\n        \"Scaling laws for neural language models\",\n        \"Adam: A method for stochastic optimization\",\n        \"The two regimes of deep network training\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Sgdr: Stochastic gradient descent with warm restarts\",\n        \"Fixing weight decay regularization in adam\",\n        \"Gradient-based hyperparameter optimization through reversible learning\",\n        \"Optimizing neural networks with kronecker-factored approximate curvature\",\n        \"Mlperf training benchmark\",\n        \"An empirical model of large-batch training\",\n        \"Single headed attention rnn: Stop thinking with your head\",\n        \"Pointer sentinel mixture models\",\n        \"Understanding and correcting pathologies in the training of learned optimizers\",\n        \"Tasks, stability, architecture, and compute: Training more effective learned optimizers, and using them to train themselves\",\n        \"First-order preconditioning via hypergradient descent\",\n        \"Policy invariance under reward transformations: Theory and application to reward shaping\",\n        \"Dota 2 with large scale deep reinforcement learning\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Asymmetric actor critic for image-based robot learning\",\n        \"Language models are unsupervised multitask learners\",\n        \"Proximal policy optimization algorithms\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Cyclical learning rates for training neural networks\",\n        \"Temporal difference learning and td-gammon\",\n        \"Attention is all you need\",\n        \"Learned optimizers that scale and generalize\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"Understanding short-horizon bias in stochastic meta-optimization\",\n        \"Fashion-mnist: a novel image dataset for benchmarking machine learning algorithms\",\n        \"Reinforcement learning for learning rate control\",\n        \"Learning an adaptive learning rate schedule\",\n        \"Large batch training of convolutional networks\",\n        \"Large batch optimization for deep learning: Training bert in 76 minutes\",\n        \"Which algorithmic choices matter at which batch sizes? insights from a noisy quadratic model\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in A Generalizable Approach to Learning Optimizers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}