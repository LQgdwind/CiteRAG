{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Training-free Neural Architecture Search for RNNs and Transformers\n\nPaper Abstract: Abstract Neural architecture search (NAS) has allowed for the automatic creation of new and effective neural network architectures, offering an alternative to the laborious process of manually designing complex architectures. However, traditional NAS algorithms are slow and require immense amounts of computing power. Recent research has investigated training-free NAS metrics for image classification architectures, drastically speeding up search algorithms. In this paper, we investigate training-free NAS metrics for recurrent neural network (RNN) and BERT-based transformer architectures, targeted towards language modeling tasks. First, we develop a new training-free metric, named hidden covariance, that predicts the trained performance of an RNN architecture and significantly outperforms existing training-free metrics. We experimentally evaluate the effectiveness of the hidden covariance metric on the NAS-Bench-NLP benchmark. Second, we find that the current search space paradigm for transformer architectures is not optimized for training-free neural architecture search. Instead, a simple qualitative analysis can effectively shrink the search space to the best performing architectures. This conclusion is based on our investigation of existing training-free metrics and new metrics developed from recent transformer pruning literature, evaluated on our own benchmark of trained BERT architectures. Ultimately, our analysis shows that the architecture search space and the training-free metric must be developed together in order to achieve effective results. Our source code is available at https://github.com/aaronserianni/training-free-nas.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Zero-Cost Proxies for Lightweight NAS\",\n        \"Losing Heads in the Lottery: Pruning Transformer Attention in Neural Machine Translation\",\n        \"Language Models are Few-Shot Learners\",\n        \"Improving Zero-Shot Neural Architecture Search with Parameters Scoring\",\n        \"Neural Architecture Search for Transformers: A Survey\",\n        \"ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators\",\n        \"Peephole: Predicting Network Performance Before Training\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"NAS-Bench-201: Extending the Scope of Reproducible Neural Architecture Search\",\n        \"An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale\",\n        \"AutoBERT-Zero: Evolving BERT Backbone from Scratch\",\n        \"OpenWebText Corpus\",\n        \"NAT: Neural Architecture Transformer for Accurate and Compact Architectures\",\n        \"TAPAS: Train-Less Accuracy Predictor for Architecture Search\",\n        \"NASABN: A Neural Architecture Search Framework for Attention-Based Networks\",\n        \"Scaling Laws for Neural Language Models\",\n        \"NAS-Bench-NLP: Neural Architecture Search Benchmark for Natural Language Processing\",\n        \"Building a Large Annotated Corpus of English: the Penn Treebank\",\n        \"NAS-Bench-ASR: Reproducible Neural Architecture Search for Speech Recognition\",\n        \"NAS-Bench-Suite: NAS Evaluation is (Now) Surprisingly Easy\",\n        \"Neural Architecture Search without Training\",\n        \"Are Sixteen Heads Really Better than One?\",\n        \"Deep Sentence Embedding Using Long Short-Term Memory Networks: Analysis and Application to Information Retrieval\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer\",\n        \"Regularized Evolution for Image Classifier Architecture Search\",\n        \"Efficient Gradient-Based Neural Architecture Search For End-to-End ASR\",\n        \"NAS-Bench-301 and the Case for Surrogate Benchmarks for Neural Architecture Search\",\n        \"The Evolved Transformer\",\n        \"Searching for Efficient Transformers for Language Modeling\",\n        \"Energy and Policy Considerations for Deep Learning in NLP\",\n        \"LSTM neural networks for language modeling\",\n        \"MnasNet: Platform-Aware Neural Architecture Search for Mobile\",\n        \"EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks\",\n        \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n        \"FlexiBERT: Are Current Transformer Architectures too Homogeneous and Rigid?\",\n        \"Well-Read Students Learn Better: On the Importance of Pre-training Compact Models\",\n        \"Attention is All you Need\",\n        \"Analyzing Multi-Head Self-Attention: Specialized Heads Do the Heavy Lifting, the Rest Can Be Pruned\",\n        \"GLUE: A Multi-Task Benchmark and Analysis Platform for Natural Language Understanding\",\n        \"HAT: Hardware-Aware Transformers for Efficient Natural Language Processing\",\n        \"NAS-BERT: Task-Agnostic and Adaptive-Size BERT Compression with Neural Architecture Search\",\n        \"AutoTinyBERT: Automatic Hyper-parameter Optimization for Efficient Pre-trained Language Models\",\n        \"NAS-Bench-101: Towards Reproducible Neural Architecture Search\",\n        \"A Review of Recurrent Neural Networks: LSTM Cells and Network Architectures\",\n        \"Memory-Efficient Differentiable Transformer Architecture Search\",\n        \"EcoNAS: Finding Proxies for Economical Neural Architecture Search\",\n        \"Training-free Transformer Architecture Search\",\n        \"Neural Architecture Search with Reinforcement Learning\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Training-free Neural Architecture Search for RNNs and Transformers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}