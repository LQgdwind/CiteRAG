{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Cleaning the NVD: Comprehensive Quality Assessment, Improvements, and Analyses\n\nPaper Abstract: Abstract. Vulnerability databases are vital sources of information on emergent software security concerns. Security professionals, from system administrators to developers to researchers, heavily depend on these databases to track vulnerabilities and analyze security trends. How reliable and accurate are these databases though? In this paper, we explore this question with the National Vulnerability Database (NVD), the U.S. government’s repository of vulnerability information that arguably serves as the industry standard. Through a systematic investigation, we uncover inconsistent or incomplete data in the NVD that can impact its practical uses, affecting information such as the vulnerability publication dates, names of vendors and products affected, vulnerability severity scores, and vulnerability type categorizations. We explore the extent of these discrepancies and identify methods for automated corrections. Finally, we demonstrate the impact that these data issues can pose by comparing analyses using the original and our rectified versions of the NVD. Ultimately, our investigation of the NVD not only produces an improved source of vulnerability information, but also provides important insights and guidance for the security community on the curation and use of such data sources.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Identifying relevant information cues for vulnerability assessment using CVSS\",\n        \"Understanding the hidden cost of software vulnerabilities: Measurements and predictions\",\n        \"The common vulnerability scoring system (cvss) generations–usefulness and deficiencies\",\n        \"H.323.Deskphone and IP Conference Phone DHCP security update (CVE-2011-0997 and CVE-2009-0692)\",\n        \"“WannaCry” ransomware attack losses could reach $4 billion,\",\n        \"Buying into the bias: Why vulnerability statistics suck.\",\n        \"Familiarity breeds contempt: the honeymoon effect and the role of legacy code in zero-day vulnerabilities.\",\n        \"CVE,\",\n        \"CWE - Frequently Asked Questions (FAQ),\",\n        \"CWE list version 3.4,\",\n        \"Bundler-Audit,\",\n        \"Hakiri: Ships secure ruby apps,\",\n        \"OWASP dependency check,\",\n        \"Security tracker,\",\n        \"Securityfocus,\",\n        \"Sonatype — oss index,\",\n        \"SourceClear: Software composition analysis for devsecops,\",\n        \"Synk: Develop Fast: Stay Secure,\",\n        \"Towards the detection of inconsistencies in public security vulnerability reports.\",\n        \"Common vulnerability scoring system v3.0: User guide,\",\n        \"Threat actors remember the vulnerabilities we forget,\",\n        \"Universal-sentence-encoder,\",\n        \"An expert-based investigation of the common vulnerability scoring system.\",\n        \"Seven years of software vulnerabilities: The ebb and flow.\",\n        \"Can the common vulnerability scoring system be trusted? a bayesian analysis.\",\n        \"You’ve got vulnerability: Exploring effective vulnerability notifications.\",\n        \"A large-scale empirical study of security patches.\",\n        \"Understanding the reproducibility of crowd-reported security vulnerabilities.\",\n        \"Cwe,\",\n        \"The (un)reliability of NVD vulnerable versions data: an empirical experiment on google chrome vulnerabilities.\",\n        \"Json data feed changelog,\",\n        \"News,\",\n        \"NVD,\",\n        \"Vulnerability metrics,\",\n        \"Common platform enumeration (cpe),\",\n        \"Milk or wine: Does software security improve with age?\",\n        \"Vulnerability disclosure in the age of social media: Exploiting twitter for predicting real-world exploits.\",\n        \"Extending logical attack graphs for efficient vulnerability analysis.\",\n        \"A large scale exploratory analysis of software vulnerability life cycles.\",\n        \"BINARM: scalable and efficient detection of vulnerabilities in firmware images of intelligent electronic devices.\",\n        \"Didn’t you hear me? - towards more successful web vulnerability notifications.\",\n        \"Equifax, apache struts, and cve-2017-5638 vulnerability,\",\n        \"Mixtures of probabilistic principal component analysers.\",\n        \"S3: A symbolic string solver for vulnerability detection in web applications.\",\n        \"Hackers vs. testers: A comparison of software vulnerability discovery processes.\",\n        \"Analyzing evolving trends of vulnerabilities in national vulnerability database.\",\n        \"From patching delays to infection symptoms: Using risk profiles for an early discovery of vulnerabilities exploited in the wild.\",\n        \"An empirical study on using the national vulnerability database to predict software vulnerabilities.\",\n        \"An empirical study of web vulnerability discovery ecosystems.\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Cleaning the NVD: Comprehensive Quality Assessment, Improvements, and Analyses, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}