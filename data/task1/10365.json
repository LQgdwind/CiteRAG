{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scalable Tree-based Register Automata Learning (Extended Version with Appendices)A version of this paper without appendices appears in the proceedings of TACAS 2024.\n\nPaper Abstract: Abstract Existing active automata learning (AAL) algorithms have demonstrated their potential in capturing the behavior of complex systems (e.g., in analyzing network protocol implementations). The most widely used AAL algorithms generate finite state machine models, such as Mealy machines. For many analysis tasks, however, it is crucial to generate richer classes of models that also show how relations between data parameters affect system behavior. Such models have shown potential to uncover critical bugs, but their learning algorithms do not scale beyond small and well curated experiments. In this paper, we present S‚ÄãLŒªùëÜsuperscriptùêøùúÜ{SL}^{\\lambda}, an effective and scalable register automata (RA) learning algorithm that significantly reduces the number of tests required for inferring models. It achieves this by combining a tree-based cost-efficient data structure with mechanisms for computing short and restricted tests. We have implemented S‚ÄãLŒªùëÜsuperscriptùêøùúÜ{SL}^{\\lambda} as a new algorithm in RALib. We evaluate its performance by comparing it against S‚ÄãL‚àóùëÜsuperscriptùêø{SL}^{*}, the current state-of-the-art RA learning algorithm, in a series of experiments, and show superior performance and substantial asymptotic improvements in bigger systems.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Generating models of infinite-state communication protocols using regular inference with abstraction\",\n        \"Learning register automata with fresh value generation\",\n        \"Automata learning through counterexample guided abstraction refinement\",\n        \"Learning and testing the bounded retransmission protocol\",\n        \"Mining specifications\",\n        \"Learning regular sets from queries and counterexamples\",\n        \"A fresh approach to learning register automata\",\n        \"RALib: a LearnLib extension for inferring EFSMs\",\n        \"Active learning for extended finite state machines\",\n        \"Random generation of DFAs\",\n        \"Learning symbolic automata\",\n        \"Learning workflow Petri nets\",\n        \"Prognosis: Closed-box analysis of network protocol implementations\",\n        \"Learning-based testing the sliding window behavior of TCP implementations\",\n        \"DTLS-Fuzzer: A DTLS protocol state fuzzer\",\n        \"Automata-based automated detection of state machine bugs in protocol implementations\",\n        \"Analysis of DTLS implementations using protocol state fuzzing\",\n        \"Combining model learning and model checking to analyze TCP implementations\",\n        \"Model learning and model checking of SSH implementations\",\n        \"Compositional learning of mutually recursive procedural systems\",\n        \"Never-stop context-free learning\",\n        \"Learning universally quantified invariants of linear data structures\",\n        \"Algorithmic improvements on regular inference of software models and perspectives for security testing\",\n        \"Model generation by moderated regular extrapolation\",\n        \"A bibliographical study of grammatical inference\",\n        \"Active automata learning in practice\",\n        \"Active automata learning as black-box search and lazy partition refinement\",\n        \"Inferring canonical register automata\",\n        \"Domain-specific optimization in automata learning\",\n        \"The TTT algorithm: A redundancy-free approach to active automata learning\",\n        \"An Introduction to Computational Learning Theory\",\n        \"Learning unions of k-testable languages\",\n        \"Learning regular languages over large alphabets\",\n        \"Efficient test-based model generation for legacy reactive systems\",\n        \"Demonstrating learning of register automata\",\n        \"Learning nominal automata\",\n        \"Benchmarks for automata learning and conformance testing\",\n        \"Inference of finite automata using homing sequences\",\n        \"Protocol state fuzzing of TLS implementations\",\n        \"Reproduction artifact for TACAS 2024 paper ‚ÄúScalable tree-based register automata learning‚Äù\",\n        \"Refactoring of legacy software using model learning and equivalence checking: An industrial experience report\",\n        \"Analysis and testing of black-box component-based systems by inferring partial models\",\n        \"Testing security properties of protocol implementations - a machine learning based approach\",\n        \"TLV: abstraction through testing, learning, and validation\",\n        \"Model-based testing IoT communication via active automata learning\",\n        \"Learning Mealy machines with one timer\",\n        \"A new approach for active automata learning based on apartness\",\n        \"Model learning\",\n        \"Active learning of nondeterministic systems from an ioco perspective\",\n        \"Increasing functional coverage by inductive testing: A case study\",\n        \"Functional specification of synchronized processes based on modal logic\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Scalable Tree-based Register Automata Learning (Extended Version with Appendices)A version of this paper without appendices appears in the proceedings of TACAS 2024., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}