{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 66 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast Subtrajectory Similarity Search in Road Networks under Weighted Edit Distance Constraints\n\nPaper Abstract: Abstract In this paper, we address a similarity search problem for spatial trajectories in road networks. In particular, we focus on the subtrajectory similarity search problem, which involves finding in a database the subtrajectories similar to a query trajectory. A key feature of our approach is that we do not focus on a specific similarity function; instead, we consider weighted edit distance (WED), a class of similarity functions which allows user-defined cost functions and hence includes several important similarity functions such as EDR and ERP. We model trajectories as strings, and propose a generic solution which is able to deal with any similarity function belonging to the class of WED. By employing the filter-and-verify strategy, we introduce subsequence filtering to efficiently prunes trajectories and find candidates. In order to choose a proper subsequence to optimize the candidate number, we model the choice as a discrete optimization problem (NP-hard) and compute it using a 2-approximation algorithm. To verify candidates, we design bidirectional tries, with which the verification starts from promising positions and leverage the shared segments of trajectories and the sparsity of road networks for speed-up. Experiments are conducted on large datasets to demonstrate the effectiveness of WED and the efficiency of our method for various similarity functions under WED.\n\n{retrieved_text}\n\nGenerate exactly 66 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 66\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hierarchical hub labelings for shortest paths\",\n        \"Fast exact shortest-path distance queries on large networks by pruned landmark labeling\",\n        \"The TS-tree: Efficient Time Series Search and Retrieval\",\n        \"A framework for generating network-based moving objects\",\n        \"Primal-dual schema for capacitated covering problems\",\n        \"On the marriage of lp-norms and edit distance\",\n        \"Robust and fast similarity search for moving object trajectories\",\n        \"Discovering popular routes from trajectories\",\n        \"Indexing the trajectories of moving objects in networks\",\n        \"A pivotal prefix based filtering algorithm for string similarity search\",\n        \"Fast and exact network trajectory similarity computation: a case-study on bicycle corridor planning\",\n        \"Trie-join: a trie-based method for efficient string similarity joins\",\n        \"Approximate string joins in a database (almost) for free\",\n        \"Searching for similar trajectories on road networks using spatio-temporal similarity\",\n        \"A practical index for genome searching\",\n        \"Travel-time prediction using gaussian process regression: A trajectory-based approach\",\n        \"Exact indexing of dynamic time warping\",\n        \"Neural edit operations for biological sequences\",\n        \"CiNCT: Compression and retrieval for massive vehicular trajectories via relative movement labeling\",\n        \"Enhanced indexing and querying of trajectories in road networks via string algorithms\",\n        \"Efficient in-memory indexing of network-constrained trajectories\",\n        \"Path-based queries on trajectory data\",\n        \"VGRAM: improving performance of approximate queries on string collections using variable-length grams\",\n        \"A partition-based method for string similarity joins with edit-distance constraints\",\n        \"Fast and accurate short read alignment with burrows–wheeler transform\",\n        \"Fast and accurate long-read alignment with Burrows-Wheeler transform\",\n        \"Deep representation learning for trajectory similarity computation\",\n        \"Finding time period-based most frequent path in big trajectory data\",\n        \"Introduction to Information Retrieval\",\n        \"Spatio-Temporal Access Methods\",\n        \"Predicting taxi-passenger demand using streaming data\",\n        \"An efficient and accurate method for evaluating time series similarity\",\n        \"A general method applicable to the search for similarities in the amino acid sequence of two proteins\",\n        \"Hidden Markov map matching through noise and sparseness\",\n        \"Spatio-Temporal Access Methods : Part 2 (2003 – 2010)\",\n        \"Asymmetric signature schemes for efficient exact edit similarity query processing\",\n        \"Indexing and matching trajectories under inconsistent sampling rates\",\n        \"Stream monitoring under the time warping distance\",\n        \"Trajectory Similarity Join in Spatial Networks\",\n        \"Personalized trajectory matching in spatial networks\",\n        \"DITA: Distributed In-Memory Trajectory Analytics\",\n        \"Similar sub-trajectory retrieval for moving objects in spatio-temporal databases\",\n        \"Identification of common molecular subsequences\",\n        \"PRESS: A novel framework of trajectory compression in road networks\",\n        \"A survey of trajectory distance measures and performance evaluation\",\n        \"Searching for similar trajectories in spatial networks\",\n        \"Discovering similar multidimensional trajectories\",\n        \"Torch: A search engine for trajectory data\",\n        \"Vchunkjoin: An efficient algorithm for edit similarity joins\",\n        \"Efficient approximate entity extraction with edit distance constraints\",\n        \"Travel time estimation of a path using sparse trajectories\",\n        \"Assessing the accuracy benefits of on-the-fly trajectory selection in fine-grained travel-time estimation\",\n        \"Indexing trajectories for travel-time histogram retrieval\",\n        \"String similarity search: A hash-based approach\",\n        \"Trajectory clustering in road network environment\",\n        \"Spatio-temporal Similarity Measure for Network Constrained Trajectory Data\",\n        \"Ed-Join : An Efficient Algorithm for Similarity Joins With Edit Distance Constraints\",\n        \"Distributed trajectory similarity search\",\n        \"Urban Form and Travel Patterns by Commuters: Comparative Case Study of Wuhan and Xi’an, China\",\n        \"ALAE: Accelerating Local Alignment with Affine Gap Exactly in Biosequence Databases\",\n        \"Cost-based variable-length-gram selection for string collections to support approximate queries efficiently\",\n        \"Computing trajectory similarity in linear time: A generic seed-guided neural metric learning approach\",\n        \"Efficient retrieval of similar time sequences under time warping\",\n        \"Distributed in-memory trajectory similarity search and join on road network\",\n        \"T-drive: driving directions based on taxi trajectories\",\n        \"Computing with Spatial Trajectories\"\n    ],\n    \"reasoning\": \"Selected these 66 references because they represent foundational work and recent advances in Fast Subtrajectory Similarity Search in Road Networks under Weighted Edit Distance Constraints, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}