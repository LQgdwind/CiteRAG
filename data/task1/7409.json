{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Deep Meta Programming\n\nPaper Abstract: Abstract Deep neural learning uses an increasing amount of computation and data to solve very specific problems. By stark contrast, human minds solve a wide range of problems using a fixed amount of computation and limited experience. One ability that seems crucial to this kind of general intelligence is meta-reasoning, i.e., our ability to reason about reasoning. To make deep learning do more from less, we propose the first neural meta-symbolic system (NEMESYS) for reasoning and learning: meta programming using differentiable forward-chaining reasoning in first-order logic. Differentiable meta programming naturally allows NEMESYS to reason and learn several tasks efficiently. This is different from performing object-level deep reasoning and learning, which refers in some way to entities external to the system. In contrast, NEMESYS enables self-introspection, lifting from object- to meta-level reasoning and vice versa. In our extensive experiments, we demonstrate that NEMESYS can solve different kinds of tasks by adapting the meta-level programs without modifying the internal reasoning system. Moreover, we show that NEMESYS can learn meta-level programs given examples. This is difficult, if not impossible, for standard differentiable logic programming.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hierarchical text-conditional image generation with clip latents\",\n        \"Learning to summarize with human feedback\",\n        \"Gpt-3: Its nature, scope, limits, and consequences\",\n        \"A generalist agent\",\n        \"Meta-reasoning: Monitoring and control of thinking and reasoning\",\n        \"Meta-reasoning: A survey\",\n        \"Doing more with less: Meta-reasoning and meta-learning in humans and machines\",\n        \"Principles of metareasoning\",\n        \"Evolutionary principles in self-referential learning, or on learning how to learn: the meta-meta-‚Ä¶ hook\",\n        \"Learning to Learn: Introduction and Overview\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"Meta-learning in neural networks: A survey\",\n        \"Not-so-clevr: learning same‚Äìdifferent relations strains feedforward neural networks\",\n        \"Right for the right concept: Revising neuro-symbolic concepts by interacting with their explanations\",\n        \"Neuro-symbolic forward reasoning\",\n        \"Learning explanatory rules from noisy data\",\n        \"Differentiable inductive logic programming for structured examples\",\n        \"Clevr: A diagnostic dataset for compositional language and elementary visual reasoning\",\n        \"Kandinsky patterns as iq-test for machine learning\",\n        \"Kandinsky patterns\",\n        \"Deepproblog: Neural probabilistic logic programming\",\n        \"End-to-end differentiable proving\",\n        \"Ffnsl: feed-forward neural-symbolic learner\",\n        \"Œ±ùõº\\\\alphailp: thinking visual scenes as differentiable logic programs\",\n        \"Scallop: From probabilistic deductive databases to scalable differentiable reasoning\",\n        \"Neurasp: Embracing neural networks into answer set programming\",\n        \"Causality\",\n        \"The do-calculus revisited\",\n        \"Artificial Intelligence: A Modern Approach\",\n        \"Neural logic reinforcement learning\",\n        \"Interpretable and explainable logical policies via neurally guided symbolic abstraction\",\n        \"Meta-Level Architectures and Reflection\",\n        \"Foundations of Logic Programming, 1st Edition\",\n        \"Meta-Programming in Logic Programming\",\n        \"Proceedings of the 3rd International Workshop of Meta-Programming in Logic, (META)\",\n        \"Meta-Logics and Logic Programming\",\n        \"The Art of Prolog: Advanced Programming Techniques\",\n        \"Meta-interpretive learning: application to grammatical inference\",\n        \"Metabayes: Bayesian meta-interpretative learning using higher-order stochastic refinement\",\n        \"Meta-interpretive learning of higher-order dyadic datalog: Predicate invention revisited\",\n        \"Soft-dtw: a differentiable loss function for time-series\",\n        \"You only look once: Unified, real-time object detection\",\n        \"Kandinsky patterns - an experimental exploration environment for pattern analysis and machine intelligence\",\n        \"Deep residual learning for image recognition\",\n        \"Object-centric learning with slot attention\",\n        \"Set transformer: A framework for attention-based permutation-invariant neural networks\",\n        \"Problog: A probabilistic prolog and its application in link discovery\",\n        \"Unmasking clever hans predictors and assessing what machines really learn\",\n        \"Most probable explanations in bayesian networks: Complexity and tractability\",\n        \"Learning with algorithmic supervision via continuous relaxations\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Deep Meta Programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}