{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Machine Learning for Cutting Planes in Integer Programming: A Survey\n\nPaper Abstract: Abstract We survey recent work on machine learning (ML) techniques for selecting cutting planes (or cuts) in mixed-integer linear programming (MILP). Despite the availability of various classes of cuts, the task of choosing a set of cuts to add to the linear programming (LP) relaxation at a given node of the branch-and-bound (B&B) tree has defied both formal and heuristic solutions to date. ML offers a promising approach for improving the cut selection process by using data to identify promising cuts that accelerate the solution of MILP instances. This paper presents an overview of the topic, highlighting recent advances in the literature, common approaches to data collection, evaluation, and ML model architectures. We analyze the empirical results in the literature in an attempt to quantify the progress that has been made and conclude by suggesting avenues for future research.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Constraint integer programming. phd thesis.\",\n        \"Two-stage stochastic integer programming: A brief introduction.\",\n        \"Coordinated cutting plane generation via multi-objective separation.\",\n        \"LAPACK users’ guide.\",\n        \"Mosek fusion api for python.\",\n        \"How much data is sufficient to learn high-performing algorithms? generalization guarantees for data-driven algorithm design.\",\n        \"Sample complexity of tree search configuration: Cutting planes and beyond.\",\n        \"Structural analysis of branch-and-cut and the learnability of gomory mixed integer cuts.\",\n        \"Scoring positive semidefinite cutting planes for quadratic optimization via trained neural networks.\",\n        \"Neural combinatorial optimization with reinforcement learning.\",\n        \"Machine learning for combinatorial optimization: a methodological tour d’horizon.\",\n        \"Learning to use local cuts.\",\n        \"The scip optimization suite 8.0.\",\n        \"Combinatorial optimization and reasoning with graph neural networks.\",\n        \"Learning to schedule heuristics in branch and bound.\",\n        \"On the generation of cutting planes which maximize the bound improvement.\",\n        \"Cutting planes from the branch-and-bound tree: Challenges and opportunities.\",\n        \"Theoretical challenges towards cutting-plane selection.\",\n        \"The scip optimization suite 7.0.\",\n        \"Exact combinatorial optimization with graph convolutional neural networks.\",\n        \"The scip optimization suite 6.0. technical report.\",\n        \"Miplib 2017: data-driven compilation of the 6th mixed-integer programming library.\",\n        \"Learning to select cuts for efficient mixed-integer programming.\",\n        \"Attention-based deep multiple instance learning.\",\n        \"Benders cut classification via support vector machines for solving two-stage stochastic programs.\",\n        \"Learning to branch in mixed integer programming.\",\n        \"Mip-gnn: A data-driven framework for guiding combinatorial solvers.\",\n        \"Miplib 2010: mixed integer programming library version 5.\",\n        \"Attention, learn to solve routing problems!\",\n        \"End-to-end constrained optimization learning: A survey.\",\n        \"An automatic method for solving discrete programming problems.\",\n        \"Smac3: A versatile bayesian optimization package for hyperparameter optimization.\",\n        \"Performance variability in mixed-integer programming.\",\n        \"Instance-specific algorithm configuration.\",\n        \"Reinforcement learning for combinatorial optimization: A survey.\",\n        \"Solving mixed integer programs using neural networks.\",\n        \"Revised note on learning quadratic assignment with graph neural networks.\",\n        \"Learning to cut by looking ahead: Cutting plane selection via imitation learning.\",\n        \"Sedumi: a package for conic optimization.\",\n        \"Reinforcement learning for integer programming: Learning to cut.\",\n        \"Cutting plane selection with analytic centers and multiregression.\",\n        \"Adaptive cut selection in mixed-integer linear programming.\",\n        \"Pointer networks.\",\n        \"Learning cut selection for mixed-integer linear programming via hierarchical sequence model.\",\n        \"Implementing cutting plane management and selection techniques.\",\n        \"Hydra-mip: Automated algorithm configuration and selection for mixed integer programming.\",\n        \"Parameterizing branch-and-bound search trees to learn branching policies.\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Machine Learning for Cutting Planes in Integer Programming: A Survey, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}