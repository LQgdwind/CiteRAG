{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AdaMix: Mixture-of-Adaptations for Parameter-efficient Model Tuning\n\nPaper Abstract: Abstract Standard fine-tuning of large pre-trained language models (PLMs) for downstream tasks requires updating hundreds of millions to billions of parameters, and storing a large copy of the PLM weights for every task resulting in increased cost for storing, sharing and serving the models. To address this, parameter-efficient fine-tuning (PEFT) techniques were introduced where small trainable components are injected in the PLM and updated during fine-tuning. We propose AdaMix as a general PEFT method that tunes a mixture of adaptation modules – given the underlying PEFT method of choice – introduced in each Transformer layer while keeping most of the PLM weights frozen. For instance, AdaMix can leverage a mixture of adapters like Houlsby Houlsby et al. (2019) or a mixture of low rank decomposition matrices like LoRA Hu et al. (2021) to improve downstream task performance over the corresponding PEFT methods for fully supervised and few-shot NLU and NLG tasks. Further, we design AdaMix such that it matches the same computational cost and the number of tunable parameters as the underlying PEFT method. By only tuning 0.1−0.2%0.1percent0.20.1-0.2\\% of PLM parameters, we show that AdaMix outperforms SOTA parameter-efficient fine-tuning and full model fine-tuning for both NLU and NLG tasks. Code and models are made available at https://aka.ms/AdaMix.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Intrinsic dimensionality explains the effectiveness of language model fine-tuning\",\n        \"The second PASCAL recognising textual entailment challenge\",\n        \"The fifth PASCAL recognizing textual entailment challenge\",\n        \"Language models are few-shot learners\",\n        \"The PASCAL recognising textual entailment challenge\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Switch transformers: Scaling to trillion parameter models with simple and efficient sparsity\",\n        \"Linear mode connectivity and the lottery ticket hypothesis\",\n        \"Dropout as a bayesian approximation: Representing model uncertainty in deep learning\",\n        \"Deep Bayesian active learning with image data\",\n        \"Making pre-trained language models better few-shot learners\",\n        \"The webnlg challenge: Generating text from rdf data\",\n        \"The third PASCAL recognizing textual entailment challenge\",\n        \"Parameter-efficient transfer learning for nlp\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Averaging weights leads to wider optima and better generalization\",\n        \"What would elsa do? freezing layers during transformer fine-tuning\",\n        \"Gshard: Scaling giant models with conditional computation and automatic sharding\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"Base layers: Simplifying training of large, sparse models\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Roberta: A robustly optimized BERT pretraining approach\",\n        \"Unipelt: A unified framework for parameter-efficient language model tuning\",\n        \"Merging models with fisher-weighted averaging\",\n        \"Dart: Open-domain structured data record to text generation\",\n        \"What is being transferred in transfer learning?\",\n        \"The e2e dataset: New challenges for end-to-end generation\",\n        \"A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts\",\n        \"True few-shot learning with language models\",\n        \"Adapterfusion: Non-destructive task composition for transfer learning\",\n        \"Adapterhub: A framework for adapting transformers\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Hash layers for large sparse models\",\n        \"The multiBERTs: BERT reproductions for robustness analysis\",\n        \"Outrageously large neural networks: The sparsely-gated mixture-of-experts layer\",\n        \"Using deepspeed and megatron to train megatron-turing nlg 530b, a large-scale generative language model\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Attention is all you need\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"List: Lite self-training makes efficient few-shot learners\",\n        \"Annotating expressions of opinions and emotions in language\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"Model soups: averaging weights of multiple fine-tuned models improves accuracy without increasing inference time\",\n        \"M6-t: Exploring sparse expert models and beyond\",\n        \"Bitfit: Simple parameter-efficient fine-tuning for transformer-based masked language-models\",\n        \"Revisiting few-sample BERT fine-tuning\",\n        \"Taming sparsely activated transformer with stochastic experts\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in AdaMix: Mixture-of-Adaptations for Parameter-efficient Model Tuning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}