{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: OneShotSTL: One-Shot Seasonal-Trend Decomposition For Online Time Series Anomaly Detection And Forecasting\n\nPaper Abstract: Abstract. Seasonal-trend decomposition is one of the most fundamental concepts in time series analysis that supports various downstream tasks, including time series anomaly detection and forecasting. However, existing decomposition methods rely on batch processing with a time complexity of O‚Äã(W)ùëÇùëäO(W), where WùëäW is the number of data points within a time window. Therefore, they cannot always efficiently support real-time analysis that demands low processing delay. To address this challenge, we propose OneShotSTL, an efficient and accurate algorithm that can decompose time series online with an update time complexity of O‚Äã(1)ùëÇ1O(1). OneShotSTL is more than 1,00010001,000 times faster than the batch methods, with accuracy comparable to the best counterparts. Extensive experiments on real-world benchmark datasets for downstream time series anomaly detection and forecasting tasks demonstrate that OneShotSTL is from 101010 to over 1,00010001,000 times faster than the state-of-the-art methods, while still providing comparable or even better accuracy.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Alibaba Cloudmonitor\",\n        \"AWS Cloudwatch\",\n        \"Find length function of TSB-UAD\",\n        \"How to Get Started With AIOps\",\n        \"Informer Datasets\",\n        \"Java implementaion of STL in stl-decomp-4j package\",\n        \"Python implementation of FastRobustSTL in SREWorks\",\n        \"Pytorch-forecasting package\",\n        \"Statsforecast package\",\n        \"Supplementary material\",\n        \"Stock Price Prediction Using the ARIMA Model\",\n        \"USAD: UnSupervised Anomaly Detection on Multivariate Time Series\",\n        \"On the convergence of alternating minimization for convex programming with applications to iteratively reweighted least squares and decomposition schemes\",\n        \"Unsupervised and scalable subsequence anomaly detection in large data series\",\n        \"SAND: Streaming Subsequence Anomaly Detection\",\n        \"STL: A Seasonal-Trend Decomposition Procedure Based on Loess (with Discussion)\",\n        \"The UCR Time Series Archive\",\n        \"Forecasting time series with complex seasonal patterns using exponential smoothing\",\n        \"STR: A seasonal-trend decomposition procedure based on regression\",\n        \"Python implementation of USAD\",\n        \"IoT Signals report: IoT‚Äôs promise will be unlocked by addressing skills shortage,complexity and security\",\n        \"Iteratively Reweighted Least Squares for Maximum Likelihood Estimation, and some Robust and Resistant Alternatives\",\n        \"Efficient and Scalable Multi-Task Regression on Massive Number of Tasks\",\n        \"Towards a Rigorous Evaluation of Time-Series Anomaly Detection\",\n        \"\\\\backslashell_1 trend filtering\",\n        \"STUMPY: A Powerful and Scalable Python Library for Time Series Data Mining\",\n        \"Matrix Profile XXIV: Scaling Time Series Anomaly Detection to Trillions of Datapoints and Ultra-fast Arriving Data Streams\",\n        \"OnlineSTL: Scaling Time Series Decomposition by 100x\",\n        \"N-BEATS: Neural basis expansion analysis for interpretable time series forecasting\",\n        \"Volume Under the Surface: A New Accuracy Evaluation Measure for Time-Series Anomaly Detection\",\n        \"TSB-UAD: An End-to-End Benchmark Suite for Univariate Time-Series Anomaly Detection\",\n        \"A Multimodal Anomaly Detector for Robot-Assisted Feeding Using an LSTM-Based Variational Autoencoder\",\n        \"A Fully Automated Periodicity Detection in Time Series\",\n        \"DeepAR: Probabilistic forecasting with autoregressive recurrent networks\",\n        \"Forecasting at Scale\",\n        \"SAZED: parameter-free domain-agnostic season length estimation in time series data\",\n        \"Python implementation of TranAD\",\n        \"TranAD: Deep Transformer Networks for Anomaly Detection in Multivariate Time Series Data\",\n        \"On Periodicity Detection and Structural Periodic Similarity\",\n        \"RobustSTL: A Robust Seasonal-Trend Decomposition Algorithm for Long Time Series\",\n        \"RobustPeriod: Robust Time-Frequency Mining for Multiple Periodicity Detection\",\n        \"Fast RobustSTL: Efficient and Robust Seasonal-Trend Decomposition for Time Series with Complex Patterns\",\n        \"Matlab implementaion of DAMP\",\n        \"Time series joins, motifs, discords and shapelets: a unifying view that exploits the matrix profile\",\n        \"Informer: Beyond efficient transformer for long sequence time-series forecasting\",\n        \"FiLM: Frequency improved Legendre Memory Model for Long-term Time Series Forecasting\",\n        \"FEDformer: Frequency Enhanced Decomposed Transformer for Long-term Series Forecasting\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in OneShotSTL: One-Shot Seasonal-Trend Decomposition For Online Time Series Anomaly Detection And Forecasting, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}