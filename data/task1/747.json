{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: PENNI: Pruned Kernel Sharing for Efficient CNN Inference\n\nPaper Abstract: Abstract Although state-of-the-art (SOTA) CNNs achieve outstanding performance on various tasks, their high computation demand and massive number of parameters make it difficult to deploy these SOTA CNNs onto resource-constrained devices. Previous works on CNN acceleration utilize low-rank approximation of the original convolution layers to reduce computation cost. However, these methods are very difficult to conduct upon sparse models, which limits execution speedup since redundancies within the CNN model are not fully exploited. We argue that kernel granularity decomposition can be conducted with low-rank assumption while exploiting the redundancy within the remaining compact coefficients. Based on this observation, we propose PENNI, a CNN model compression framework that is able to achieve model compactness and hardware efficiency simultaneously by (1) implementing kernel sharing in convolution layers via a small number of basis kernels and (2) alternately adjusting bases and coefficients with sparse constraints. Experiments show that we can prune 97% parameters and 92% FLOPs on ResNet18 CIFAR10 with no accuracy loss, and achieve 44% reduction in run-time memory consumption and a 53% reduction in inference latency.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"ProxylessNAS: Direct neural architecture search on target task and hardware\",\n        \"Dadiannao: A machine-learning supercomputer\",\n        \"Xception: Deep learning with depthwise separable convolutions\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Exploiting linear structure within convolutional networks for efficient evaluation\",\n        \"Centripetal sgd for pruning very deep convolutional networks with complicated structure\",\n        \"Approximated oracle filter pruning for destructive cnn width optimization\",\n        \"Dynamic network surgery for efficient dnns\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Second order derivatives for network pruning: Optimal brain surgeon\",\n        \"Deep residual learning for image recognition\",\n        \"Soft filter pruning for accelerating deep convolutional neural networks\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Filter pruning via geometric median for deep convolutional neural networks acceleration\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Squeezenet: Alexnet-level accuracy with 50x fewer parameters and¬° 0.5 mb model size\",\n        \"Compression of deep convolutional neural networks for fast and low power mobile applications\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Speeding-up convolutional neural networks using fine-tuned cp-decomposition\",\n        \"Optimal brain damage\",\n        \"Pruning filters for efficient convnets\",\n        \"Network in network\",\n        \"DARTS: Differentiable architecture search\",\n        \"Learning efficient convolutional networks through network slimming\",\n        \"Metapruning: Meta learning for automatic neural network channel pruning\",\n        \"Learning sparse neural networks through l‚Äã_‚Äã0ùëô_0l\\\\_0 regularization\",\n        \"Thinet: A filter level pruning method for deep neural network compression\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Torchvision models\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Going deeper with convolutions\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Convolutional neural networks with low-rank regularization\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Soft weight-sharing for neural network compression\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"Aggregated residual transformations for deep neural networks\",\n        \"Deephoyer: Learning sparser neural network with differentiable scale-invariant sparsity measures\",\n        \"Wide residual networks\",\n        \"Learning to Share: Simultaneous Parameter Tying and Sparsification in Deep Learning\",\n        \"Accelerating very deep convolutional networks for classification and detection\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in PENNI: Pruned Kernel Sharing for Efficient CNN Inference, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}