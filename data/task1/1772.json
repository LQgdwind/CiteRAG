{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Symbolic Parallel Adaptive Importance Sampling for Probabilistic Program Analysis\n\nPaper Abstract: Abstract. Probabilistic software analysis aims at quantifying the probability of a target event occurring during the execution of a program processing uncertain incoming data or written itself using probabilistic programming constructs. Recent techniques combine symbolic execution with model counting or solution space quantification methods to obtain accurate estimates of the occurrence probability of rare target events, such as failures in a mission-critical system. However, they face several scalability and applicability limitations when analyzing software processing with high-dimensional and correlated multivariate input distributions. In this paper, we present SYMbolic Parallel Adaptive Importance Sampling (SYMPAIS), a new inference method tailored to analyze path conditions generated from the symbolic execution of programs with high-dimensional, correlated input distributions. SYMPAIS combines results from importance sampling and constraint solving to produce accurate estimates of the satisfaction probability for a broad class of constraints that cannot be analyzed by current solution space quantification methods. We demonstrate SYMPAISâ€™s generality and performance compared with state-of-the-art alternatives on a set of problems from different application domains.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Reflection, Refraction, and Hamiltonian Monte Carlo\",\n        \"A Contractor Based on Convex Interval Taylor\",\n        \"Parameterized Model Counting for String and Numeric Constraints\",\n        \"A Conceptual Introduction to Hamiltonian Monte Carlo\",\n        \"Iterative Distribution-Aware Sampling for Probabilistic Symbolic Execution\",\n        \"Compositional Solution Space Quantification for Probabilistic Software Analysis\",\n        \"JAX: Composable Transformations of Python+NumPy Programs\",\n        \"Symbolic Path Cost Analysis for Side-Channel Detection\",\n        \"Exact Volume Computation for Polytopes: A Practical Study\",\n        \"KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs\",\n        \"Efficiently Sampling Probabilistic Programs via Program Analysis\",\n        \"Generating Performance Distributions via Probabilistic Symbolic Execution\",\n        \"Probabilistic Symbolic Analysis of Neural Networks\",\n        \"Z3: An Efficient SMT Solver\",\n        \"Probabilistic Program Analysis\",\n        \"Model Counting for Complex Data Structures\",\n        \"Reliability Analysis in Symbolic PathFinder\",\n        \"Statistical Symbolic Execution with Informed Sampling\",\n        \"PSI: Exact Symbolic Inference for Probabilistic Programs\",\n        \"Probabilistic Symbolic Execution\",\n        \"ibex-lib\",\n        \"Algorithm 852: RealPaver: An Interval Solver Using Constraint Satisfaction Techniques\",\n        \"Weighted Average Importance Sampling and Defensive Mixture Distributions\",\n        \"The No-U-Turn Sampler: Adaptively Setting Path Lengths in Hamiltonian Monte Carlo\",\n        \"Policy Compression for Aircraft Collision Avoidance Systems\",\n        \"Reluplex: An Efficient SMT Solver for Verifying Deep Neural Networks\",\n        \"A Study of Stratified Sampling in Variance Reduction Techniques for Parametric Yield Estimation\",\n        \"Symbolic Execution and Program Testing\",\n        \"Auto-Encoding Variational Bayes.\",\n        \"Exact and Approximate Probabilistic Symbolic Execution for Nondeterministic Programs\",\n        \"SYMPAIS Implementation\",\n        \"Symbolic Parallel Adaptive Importance Sampling for Probabilistic Program Analysis\",\n        \"Symbolic Side-Channel Analysis for Probabilistic Programs\",\n        \"Layered Adaptive Importance Sampling\",\n        \"Equation of State Calculations by Fast Computing Machines\",\n        \"MCMC Using Hamiltonian Dynamics\",\n        \"Discontinuous Hamiltonian Monte Carlo for Discrete Parameters and Discontinuous Likelihoods\",\n        \"R2: An Efficient MCMC Sampler for Probabilistic Programs\",\n        \"Monte Carlo Theory, Methods and Examples\",\n        \"Symbolic PathFinder: Symbolic Execution of Java Bytecode\",\n        \"Synthesis of Adaptive Side-Channel Attacks\",\n        \"Numerical Mathematics (second ed.)\",\n        \"Variational Inference with Normalizing Flows\",\n        \"Stochastic Backpropagation and Approximate Inference in Deep Generative Models\",\n        \"Static Analysis for Probabilistic Programs: Inferring Whole Program Properties from Finitely Many Paths\",\n        \"Chebyshev Inequality with Estimated Mean and Variance\",\n        \"Mathematical Statistics\",\n        \"Divide, Conquer, and Combine: A New Inference Strategy for Probabilistic Programs with Stochastic Support\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Symbolic Parallel Adaptive Importance Sampling for Probabilistic Program Analysis, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}