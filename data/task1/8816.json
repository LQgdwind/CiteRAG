{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FIT: Far-reaching Interleaved Transformers\n\nPaper Abstract: Abstract We present FIT: a transformer-based architecture with efficient self-attention and adaptive computation. Unlike original transformers, which operate on a single sequence of data tokens, we divide the data tokens into groups, with each group being a shorter sequence of tokens. We employ two types of transformer layers: local layers operate on data tokens within each group, while global layers operate on a smaller set of introduced latent tokens. These layers, comprising the same set of self-attention and feed-forward layers as standard transformers, are interleaved, and cross-attention is used to facilitate information exchange between data and latent tokens within the same group. The attention complexity is O‚Äã(n2)ùëÇsuperscriptùëõ2O(n^{2}) locally within each group of size nùëõn, but can reach O‚Äã(L43)ùëÇsuperscriptùêø43O(L^{\\frac{4}{3}}) globally for sequence length of LùêøL. The efficiency can be further enhanced by relying more on global layers that perform adaptive computation using a smaller set of latent tokens. FIT is a versatile architecture and can function as an encoder, diffusion decoder, or autoregressive decoder. We provide initial evidence demonstrating its effectiveness in high-resolution image understanding and generation tasks. Notably, FIT exhibits potential in performing end-to-end training on gigabit-scale data, such as 6400√ó\\times6400 images, or 160K tokens (after patch tokenization), within a memory capacity of 16GB, without requiring specific optimizations or model parallelism. 111Code at https://github.com/google-research/pix2seq\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Etc: Encoding long and structured inputs in transformers\",\n        \"Longformer: The long-document transformer\",\n        \"Language models are few-shot learners\",\n        \"Recurrent memory transformer\",\n        \"Hierarchical perceiver\",\n        \"Generative pretraining from pixels\",\n        \"On the importance of noise scheduling for diffusion models\",\n        \"Pix2seq: A language modeling framework for object detection\",\n        \"A unified sequence interface for vision tasks\",\n        \"Pixelsnail: An improved autoregressive generative model\",\n        \"Generating long sequences with sparse transformers\",\n        \"Rethinking attention with performers\",\n        \"Palm: Scaling language modeling with pathways\",\n        \"Transformer-xl: Attentive language models beyond a fixed-length context\",\n        \"Funnel-transformer: Filtering out sequential redundancy for efficient language processing\",\n        \"Flashattention: Fast and memory-efficient exact attention with io-awareness\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Sparseformer: Sparse visual recognition via limited latent tokens\",\n        \"Star-transformer\",\n        \"Gmat: Global memory augmentation for transformers\",\n        \"Transformer in transformer\",\n        \"General-purpose, long-context autoregressive modeling with perceiver ar\",\n        \"How to represent part-whole hierarchies in a neural network\",\n        \"Axial attention in multidimensional transformers\",\n        \"Denoising diffusion probabilistic models\",\n        \"Transformer quality in linear time\",\n        \"Block-recurrent transformers\",\n        \"Scalable adaptive computation for iterative generation\",\n        \"Perceiver io: A general architecture for structured inputs & outputs\",\n        \"Perceiver: General perception with iterative attention\",\n        \"Transformers are rnns: Fast autoregressive transformers with linear attention\",\n        \"Reformer: The efficient transformer\",\n        \"Set transformer: A framework for attention-based permutation-invariant neural networks\",\n        \"Exploring plain vision transformer backbones for object detection\",\n        \"Swin transformer: Hierarchical vision transformer using shifted windows\",\n        \"Generating high fidelity images with subscale pixel networks and multidimensional upscaling\",\n        \"Image transformer\",\n        \"Language models are unsupervised multitask learners\",\n        \"Compressive transformers for long-range sequence modelling\",\n        \"Combiner: Full attention transformer with sparse computation cost\",\n        \"Efficient content-based sparse attention with routing transformers\",\n        \"Tokenlearner: What can 8 learned tokens do for images and videos?\",\n        \"Objects365: A large-scale, high-quality dataset for object detection\",\n        \"Efficient transformers: A survey\",\n        \"Pixel recurrent neural networks\",\n        \"Attention is all you need\",\n        \"Scaling local self-attention for parameter efficient visual backbones\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Megabyte: Predicting million-byte sequences with multiscale transformers\",\n        \"Big bird: Transformers for longer sequences\",\n        \"Nested hierarchical transformer: Towards accurate, data-efficient and interpretable visual understanding\",\n        \"Improved transformer for high-resolution gans\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in FIT: Far-reaching Interleaved Transformers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}