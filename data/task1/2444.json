{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Designing Machine Learning Toolboxes: Concepts, Principles and Patterns\n\nPaper Abstract: Abstract Machine learning (ML) and AI toolboxes such as scikit-learn or Weka are workhorses of contemporary data scientific practice – their central role being enabled by usable yet powerful designs that allow to easily specify, train and validate complex modeling pipelines. However, despite their universal success, the key design principles in their construction have never been fully analyzed. In this paper, we attempt to provide an overview of key patterns in the design of AI modeling toolboxes, taking inspiration, in equal parts, from the field of software engineering, implementation patterns found in contemporary toolboxes, and our own experience from developing ML toolboxes. In particular, we develop a conceptual model for the AI/ML domain, with a new type system, called scientific types, at its core. Scientific types capture the scientific meaning of common elements in ML workflows based on the set of operations that we usually perform with them (i.e. their interface) and their statistical properties. From our conceptual analysis, we derive a set of design principles and patterns. We illustrate that our analysis can not only explain the design of existing toolboxes, but also guide the development of new ones. We intend our contribution to be a state-of-art reference for future toolbox engineers, a summary of best practices, a collection of ML design patterns which may become useful for future research, and, potentially, the first steps towards a higher-level programming paradigm for constructing AI.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TensorFlow: A system for large-scale machine learning\",\n        \"Software architecture in practice\",\n        \"Error limiting reductions between classification tasks\",\n        \"Weighted one-against-all\",\n        \"Machine learning techniques—reductions between prediction quality metrics\",\n        \"Learning reductions that really work\",\n        \"mlr: Machine Learning in R\",\n        \"MLJ: A Machine Learning Framework for Julia, apr 2020a\",\n        \"MLJ: A Julia package for composable machine learning\",\n        \"Machine Learning Strategies for Time Series Forecasting\",\n        \"Time series analysis: Forecasting and control: Fourth edition\",\n        \"AntiPatterns: Refactoring Software , Architectures, and Projects in Crisis\",\n        \"API design for machine learning software: experiences from the scikit-learn project\",\n        \"Pattern-Oriented Software Architecture: On Patterns And Pattern Language, Volume 5, volume 5\",\n        \"Object-oriented programming, functional programming and R\",\n        \"Domain-driven design: tackling complexity in the heart of software\",\n        \"Design Patterns – Elements of Reusable Object-Oriented Software\",\n        \"skpro: A domain-agnostic modelling framework for probabilistic supervised learning\",\n        \"pysf: Supervised forecasting of sequential data in Python, 2018\",\n        \"The WEKA data mining software\",\n        \"The Elements of Statistical Learning, volume 1\",\n        \"Machine Learning Automation Toolbox (MLaut)\",\n        \"Building Predictive Models in R: Using the caret Package\",\n        \"mlr3: A modern object-oriented machine learning framework in R\",\n        \"Applying UML and patterns: an introduction to object oriented analysis and design and interative development\",\n        \"Forecasting with sktime: Designing sktime’s New Forecasting API and Applying It to Replicate and Extend the M4 Study\",\n        \"sktime: A Unified Interface for Machine Learning with Time Series\",\n        \"Object-oriented software construction, volume 2\",\n        \"Solution patterns for machine learning\",\n        \"Software engineering for artificial intelligence and machine learning software: A systematic literature review\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Scikit-learn: Machine Learning in Python\",\n        \"Types and programming languages\",\n        \"Software engineering: a practitioner’s approach\",\n        \"R: A Language and Environment for Statistical Computing\",\n        \"Hidden technical debt in machine learning systems\",\n        \"mlr3proba: Machine Learning Survival Analysis in R\",\n        \"The need for open source software in machine learning\",\n        \"Machine learning strategies for multi-step-ahead time series forecasting\",\n        \"OpenML: networked science in machine learning\",\n        \"Scikit-learn: Machine Learning Without Learning the Machinery\",\n        \"Object design: roles, responsibilities, and collaborations\",\n        \"Object-oriented design: a responsibility-driven approach\",\n        \"Designing object-oriented software\",\n        \"The challenges of building machine learning tools for the masses\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Designing Machine Learning Toolboxes: Concepts, Principles and Patterns, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}