{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RLVF: Learning from Verbal Feedback without Overgeneralization\n\nPaper Abstract: Abstract The diversity of contexts in which large language models (LLMs) are deployed requires the ability to modify or customize default model behaviors to incorporate nuanced requirements and preferences. A convenient interface to specify such model adjustments is high-level verbal feedback, such as “Don’t use emojis when drafting emails to my boss.” However, while writing high-level feedback is far simpler than collecting annotations for reinforcement learning from human feedback (RLHF), we find that simply prompting a model with such feedback leads to overgeneralization of the feedback to contexts where it is not relevant. We study the problem of incorporating verbal feedback without such overgeneralization, inspiring a new method Contextualized Critiques with Constrained Preference Optimization (C3PO). C3PO uses a piece of high-level feedback to generate a small synthetic preference dataset specifying how the feedback should (and should not) be applied. It then fine-tunes the model in accordance with the synthetic preference data while minimizing the divergence from the original model for prompts where the feedback does not apply. Our experimental results indicate that our approach effectively applies verbal feedback to relevant scenarios while preserving existing behaviors for other contexts. For both human- and GPT-4-generated high-level feedback, C3PO effectively adheres to the given feedback comparably to in-context baselines while reducing overgeneralization by 30%.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DUnE: Dataset for unified editing\",\n        \"A general language assistant as a laboratory for alignment\",\n        \"Program synthesis with large language models\",\n        \"Constitutional ai: Harmlessness from ai feedback\",\n        \"Better rewards yield better summaries: Learning to summarise without references\",\n        \"Rank analysis of incomplete block designs: I. the method of paired comparisons\",\n        \"Preference-based reinforcement learning: evolutionary direct policy search using a preference-based racing algorithm\",\n        \"Dark experience for general continual learning: a strong, simple baseline\",\n        \"Editing factual knowledge in language models\",\n        \"Suppressing pink elephants with direct principle feedback\",\n        \"Improving code generation by training with natural language feedback\",\n        \"Transformers as soft reasoners over language\",\n        \"Improving alignment of dialogue agents via targeted human judgements\",\n        \"Learning from dialogue after deployment: Feed yourself, chatbot!\",\n        \"Model editing with canonical examples\",\n        \"Distilling the knowledge in a neural network\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Large language models can self-improve\",\n        \"Supervised fine-tuning and direct preference optimization on intel gaudi2\",\n        \"Mistral 7b\",\n        \"Adam: A method for stochastic optimization\",\n        \"The open instruction generalist dataset\",\n        \"Deep reinforcement learning for dialogue generation\",\n        \"Dialogue learning with human-in-the-loop\",\n        \"Self: Language-driven self-evolution for large language model\",\n        \"Self-refine: Iterative refinement with self-feedback\",\n        \"Editing personality for llms\",\n        \"Locating and editing factual knowledge in gpt\",\n        \"Fast model editing at scale\",\n        \"Memory-based model editing at scale\",\n        \"Fixing model bugs with natural language patches\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Automatically correcting large language models: Surveying the landscape of diverse self-correction strategies\",\n        \"Advantage-weighted regression: Simple and scalable off-policy reinforcement learning\",\n        \"Reinforcement learning by reward-weighted regression for operational space control\",\n        \"Direct preference optimization: Your language model is secretly a reward model\",\n        \"Dueling rl: Reinforcement learning with trajectory preferences\",\n        \"Training language models with language feedback at scale\",\n        \"Proximal policy optimization algorithms\",\n        \"When life gives you lemons, make cherryade: Converting feedback from bad responses into good labels\",\n        \"Editable neural networks\",\n        \"Learning by distilling context\",\n        \"Principle-driven self-alignment of language models from scratch with minimal human supervision\",\n        \"An application of reinforcement learning to dialogue strategy selection in a spoken dialogue system for email\",\n        \"RLCD: Reinforcement learning from contrastive distillation for LM alignment\",\n        \"Teaching language models to self-improve through interactive demonstrations\",\n        \"Self-rewarding language models\",\n        \"Fine-tuning language models from human preferences\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in RLVF: Learning from Verbal Feedback without Overgeneralization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}