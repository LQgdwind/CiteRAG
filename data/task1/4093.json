{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Few-Sample Named Entity Recognition for Security Vulnerability Reports by Fine-Tuning Pre-Trained Language Models\n\nPaper Abstract: Abstract Public security vulnerability reports (e.g., CVE reports) play an important role in the maintenance of computer and network systems. Security companies and administrators rely on information from these reports to prioritize tasks on developing and deploying patches to their customers. Since these reports are unstructured texts, automatic information extraction (IE) can help scale up the processing by converting the unstructured reports to structured forms, e.g., software names and versions [8] and vulnerability types [38]. Existing works on automated IE for security vulnerability reports often rely on a large number of labeled training samples [8, 18, 48]. However, creating massive labeled training set is both expensive and time consuming. In this work, for the first time, we propose to investigate this problem where only a small number of labeled training samples are available. In particular, we investigate the performance of fine-tuning several state-of-the-art pre-trained language models on our small training dataset. The results show that with pre-trained language models and carefully tuned hyperparameters, we have reached or slightly outperformed the state-of-the-art system [8] on this task. Consistent with previous two-step process of first fine-tuning on main category and then transfer learning to others as in [7], if otherwise following our proposed approach, the number of required labeled samples substantially decrease in both stages: 90% reduction in fine-tuning from 5758 to 576, and 88.8% reduction in transfer learning with 64 labeled samples per category. Our experiments thus demonstrate the effectiveness of few-sample learning on NER for security vulnerability report. This result opens up multiple research opportunities for few-sample learning for security vulnerability reports, which is discussed in the paper. Our implementation for few-sample vulnerability entity tagger in security reports could be found at https://github.com/guanqun-yang/FewVulnerability.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Few-shot text classification with distributional signatures\",\n        \"Automatic labeling for entity extraction in cyber security\",\n        \"Language models are few-shot learners\",\n        \"Bridging hmms and rnns through architectural transformations\",\n        \"Pyramid stereo matching network\",\n        \"Non-parametric few-shot learning for word sense disambiguation\",\n        \"Fine-tuning pretrained language models: Weight initializations, data orders, and early stopping\",\n        \"Towards the detection of inconsistencies in public security vulnerability reports\",\n        \"A C/C++ Code Vulnerability Dataset with Code Changes and CVE Summaries\",\n        \"An empirical study of android security bulletins in different vendors\",\n        \"Acquisitional rule-based engine for discovering internet-of-thing devices\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"Swellshark: A generative model for biomedical named entity recognition without labeled data\",\n        \"Few-shot classification in named entity recognition task\",\n        \"The equifax data breach: An opportunity to improve consumer protection and cybersecurity efforts in america\",\n        \"A system for automated open-source threat intelligence gathering and management\",\n        \"Making pre-trained language models better few-shot learners\",\n        \"Information extraction of cybersecurity concepts: An lstm approach\",\n        \"Message understanding conference- 6: A brief history\",\n        \"Few-shot slot tagging with collapsed dependency transfer and label-enhanced task-adaptive projection network\",\n        \"Few-shot named entity recognition: A comprehensive study\",\n        \"Survey on deep learning with class imbalance\",\n        \"Neural architectures for named entity recognition\",\n        \"Few-shot named entity recognition via meta-learning\",\n        \"MetaNER: Named entity recognition with meta-learning\",\n        \"Easy-to-deploy api extraction by multi-level feature embedding and transfer learning\",\n        \"On the stability of fine-tuning bert: Misconceptions, explanations, and strong baselines\",\n        \"Uncertainty-aware self-training for few-shot text classification\",\n        \"Extracting information about security vulnerabilities from web text\",\n        \"The boeing 737 max saga: Automating failure\",\n        \"Whyper: Towards automating risk assessment of mobile applications\",\n        \"CVExplorer: Multidimensional Visualization for Common Vulnerabilities and Exposures\",\n        \"Sentence encoders on stilts: Supplementary training on intermediate labeled-data tasks\",\n        \"A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software\",\n        \"Prototypical networks for few-shot learning\",\n        \"Generating informative cve description from exploitdb posts by extractive summarization\",\n        \"Introduction to the conll-2003 shared task: Language-independent named entity recognition\",\n        \"Matching networks for one shot learning\",\n        \"Generalizing from a few examples: A survey on few-shot learning\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"Text-Mining Approach for Estimating Vulnerability Score\",\n        \"Simple and effective few-shot named entity recognition with structured nearest neighbor learning\",\n        \"Software-specific named entity recognition in software engineering social content\",\n        \"Learning to extract api mentions from informal natural language discussions\",\n        \"Revisiting few-sample bert fine-tuning\",\n        \"Improving software bug-specific named entity recognition with deep neural network\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Few-Sample Named Entity Recognition for Security Vulnerability Reports by Fine-Tuning Pre-Trained Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}