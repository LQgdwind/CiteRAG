{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Large-Scale Differentially Private BERT\n\nPaper Abstract: Abstract In this work, we study the large-scale pretraining of BERT-Large [18] with differentially private SGD (DP-SGD). We show that combined with a careful implementation, scaling up the batch size to millions (i.e., mega-batches) improves the utility of the DP-SGD step for BERT; we also enhance its efficiency by using an increasing batch size schedule. Our implementation builds on the recent work of [46], who demonstrated that the overhead of a DP-SGD step is minimized with effective use of JAX [11, 23] primitives in conjunction with the XLA compiler [50]. Our implementation achieves a masked language model accuracy of 60.5% at a batch size of 2M, for ϵ=5.36italic-ϵ5.36\\epsilon=5.36. To put this number in perspective, non-private BERT models achieve an accuracy of ∼similar-to\\sim70%.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Step-size adaptation using exponentiated gradient updates\",\n        \"Stochastic optimization with laggard data pipelines\",\n        \"Locoprop: Enhancing backprop via local loss optimization\",\n        \"Deep learning with differential privacy\",\n        \"Scalable Second Order Optimization for Deep Learning\",\n        \"Memory efficient adaptive optimization\",\n        \"Large scale distributed neural network training through online distillation\",\n        \"Differentially private learning with adaptive clipping\",\n        \"Robust bi-tempered logistic loss based on Bregman divergences\",\n        \"When is memorization of irrelevant training data necessary for high-accuracy learning?\",\n        \"JAX: composable transformations of Python+NumPy programs,\",\n        \"Layer normalization\",\n        \"Riemannian approach to batch normalization\",\n        \"The secret sharer: Evaluating and testing unintended memorization in neural networks\",\n        \"Faster neural network training with data echoing\",\n        \"Extracting training data from large language models\",\n        \"Robust differentially private training of deep neural networks\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Our data, ourselves: Privacy via distributed noise generation\",\n        \"Calibrating noise to sensitivity in private data analysis\",\n        \"The Algorithmic Foundations of Differential Privacy\",\n        \"Does learning require memorization? A short tale about a long tail\",\n        \"Compiling machine learning programs via high-level tracing\",\n        \"Shampoo: Preconditioned stochastic tensor optimization\",\n        \"Norm matters: efficient and accurate normalization schemes in deep networks\",\n        \"Adamp: Slowing down the slowdown for momentum optimizers on scale-invariant weights\",\n        \"Learning and evaluating a differentially private pre-trained language model\",\n        \"Flax: A neural network library and ecosystem for JAX\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Adam: A method for stochastic optimization\",\n        \"Learning rate adaptation for differentially private learning\",\n        \"The Ethical Algorithm: The Science of Socially Aware Algorithm Design\",\n        \"Fixing weight decay regularization in Adam\",\n        \"Gshard: Scaling giant models with conditional computation and automatic sharding\",\n        \"Fnet: Mixing tokens with Fourier transforms\",\n        \"Rényi differential privacy\",\n        \"Learning differentially private language models without losing accuracy\",\n        \"A large batch optimizer reality check: Traditional, generic optimizers suffice across batch sizes\",\n        \"Adaclip: Adaptive clipping for private SGD\",\n        \"Neural machine translation of rare words with subword units\",\n        \"Weight normalization: A simple reparameterization to accelerate training of deep neural networks\",\n        \"Don’t decay the learning rate, increase the batch size\",\n        \"Measuring the effects of data parallelism on neural network training\",\n        \"Adafactor: Adaptive learning rates with sublinear memory cost\",\n        \"Enabling fast differentially private SGD via just-in-time compilation and vectorization\",\n        \"MLP-Mixer: An all-MLP architecture for vision\",\n        \"Attention is all you need\",\n        \"GLUE: A multi-task benchmark and analysis platform for natural language understanding\",\n        \"XLA: Optimizing compiler for machine learning\",\n        \"Gspmd: General and scalable parallelization for ML computation graphs\",\n        \"Large batch optimization for deep learning: Training BERT in 76 minutes\",\n        \"Aligning books and movies: Towards story-like visual explanations by watching movies and reading books\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Large-Scale Differentially Private BERT, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}