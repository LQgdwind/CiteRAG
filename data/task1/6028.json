{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: HyperTree Proof Search for Neural Theorem Proving\n\nPaper Abstract: Abstract We propose an online training procedure for a transformer-based automated theorem prover. Our approach leverages a new search algorithm, HyperTree Proof Search (HTPS), inspired by the recent success of AlphaZero. Our model learns from previous proof searches through online training, allowing it to generalize to domains far from the training distribution. We report detailed ablations of our pipeline’s main components by studying performance on three environments of increasing complexity. In particular, we show that with HTPS alone, a model trained on annotated proofs manages to prove 65.4%percent65.465.4\\% of a held-out set of Metamath theorems, significantly outperforming the previous state of the art of 56.5%percent56.556.5\\% by GPT-f. Online training on these unproved theorems increases accuracy to 82.6%percent82.682.6\\%. With a similar computational budget, we improve the state of the art on the Lean-based miniF2F-curriculum dataset from 31%percent3131\\% to 42%percent4242\\% proving accuracy.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On the geographical problem of the four colours\",\n        \"Univalent foundations of mathematics\",\n        \"A formal proof of the kepler conjecture\",\n        \"The lean theorem prover (system description)\",\n        \"An analysis of alpha-beta pruning\",\n        \"A model of two-player evaluation functions\",\n        \"A general reinforcement learning algorithm that masters chess, shogi, and go through self-play\",\n        \"Minif2f: a cross-system benchmark for formal olympiad-level mathematics\",\n        \"A proof method for quantification theory: Its justification and realization\",\n        \"A computing procedure for quantification theory\",\n        \"E—a brainiac theorem prover\",\n        \"Vampire 1.1 (system description)\",\n        \"Isabelle/HOL: A Proof Assistant for Higher-Order Logic, volume 2283 of LNCS\",\n        \"Interactive theorem proving and program development: Coq’Art: the calculus of inductive constructions\",\n        \"Language models are unsupervised multitask learners\",\n        \"Generative language modeling for automated theorem proving\",\n        \"Proof artifact co-training for theorem proving with language models\",\n        \"Formal mathematics statement curriculum learning\",\n        \"Holophrasm: a neural automated theorem prover for higher-order logic\",\n        \"Holist: An environment for machine learning of higher order logic theorem proving\",\n        \"Hol light: A tutorial introduction\",\n        \"Tactictoe: learning to prove with tactics\",\n        \"Learning theorem proving components\",\n        \"Sequence to sequence learning with neural networks\",\n        \"Unsupervised translation of programming languages\",\n        \"Analysing mathematical reasoning abilities of neural models\",\n        \"Deep learning for symbolic mathematics\",\n        \"Deep symbolic regression for recurrent sequences\",\n        \"Deep symbolic regression: Recovering mathematical expressions from data via risk-seeking policy gradients\",\n        \"Learning advanced mathematical computations from examples\",\n        \"Metamath: A Computer Language for Mathematical Proofs\",\n        \"The lean mathematical library\",\n        \"Mastering chess and shogi by self-play with a general reinforcement learning algorithm\",\n        \"Monte-carlo tree search as regularized policy optimization\",\n        \"Parallel monte-carlo tree search\",\n        \"Attention is all you need\",\n        \"Massively parallel methods for deep reinforcement learning\",\n        \"Neural machine translation of rare words with subword units\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Cross-lingual language model pretraining\",\n        \"Mass: Masked sequence to sequence pre-training for language generation\",\n        \"Deep encoder, shallow decoder: Reevaluating non-autoregressive machine translation\",\n        \"Adam: A method for stochastic optimization\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Reducing transformer depth on demand with structured dropout\",\n        \"Automatic differentiation in pytorch\",\n        \"Modifications of uct and sequence-like simulations for monte-carlo go\",\n        \"Monte-carlo tree search solver\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in HyperTree Proof Search for Neural Theorem Proving, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}