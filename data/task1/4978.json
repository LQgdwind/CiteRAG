{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient differentiable quadratic programming layers: an ADMM approach\n\nPaper Abstract: Abstract Recent advances in neural-network architecture allow for seamless integration of convex optimization problems as differentiable layers in an end-to-end trainable neural network. Integrating medium and large scale quadratic programs into a deep neural network architecture, however, is challenging as solving quadratic programs exactly by interior-point methods has worst-case cubic complexity in the number of variables. In this paper, we present an alternative network layer architecture based on the alternating direction method of multipliers (ADMM) that is capable of scaling to problems with a moderately large number of variables. Backward differentiation is performed by implicit differentiation of the residual map of a modified fixed-point iteration. Simulated results demonstrate the computational advantage of the ADMM layer, which for medium scaled problems is approximately an order of magnitude faster than the OptNet quadratic programming layer. Furthermore, our novel backward-pass routine is efficient, from both a memory and computation standpoint, in comparison to the standard approach based on unrolled differentiation or implicit differentiation of the KKT optimality conditions. We conclude with examples from portfolio optimization in the integrated prediction and optimization paradigm.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Differentiable convex optimization layers\",\n        \"Differentiating through a cone program\",\n        \"Optnet: Differentiable optimization as a layer in neural networks\",\n        \"Differentiable mpc for end-to-end planning and control\",\n        \"Iterative procedures for nonlinear integral equations\",\n        \"End-to-end learning for structured prediction energy networks\",\n        \"From predictive to prescriptive analytics\",\n        \"Asset allocation combining investor views with market equilibrium\",\n        \"Efficient and modular implicit differentiation\",\n        \"Convex Optimization\",\n        \"Distributed optimization and statistical learning via the alternating direction method of multipliers\",\n        \"Solution refinement at regular points of conic problems\",\n        \"Covariance estimation for risk-based portfolio optimization: an integrated approach\",\n        \"Integrating prediction in mean-variance portfolio optimization\",\n        \"Optimization Methods in Finance\",\n        \"Unrolled optimization with deep priors\",\n        \"Generic methods for optimization-based modeling\",\n        \"Implicit Functions and Solution Mappings: A View from Variational Analysis\",\n        \"Task-based End-to-end Model Learning\",\n        \"Smart predict, then optimize\",\n        \"Decision trees for decision-making under the predict-then-optimize framework\",\n        \"A five-factor asset pricing model\",\n        \"Gradient-based regularization parameter selection for problems with non-smooth penalty functions\",\n        \"A dual algorithm for the solution of nonlinear variational problems via finite element approximation\",\n        \"Cake: Convex adaptive kernel density estimation\",\n        \"Sur l’approximation, par éléments finis d’ordre un, et la résolution, par pénalisation-dualité d’une classe de problèmes de dirichlet non linéaires\",\n        \"An o(n3l) primal interior point algorithm for convex quadratic programming\",\n        \"Integrated conditional estimation-optimization\",\n        \"Weighted elastic net penalized mean-variance portfolio design and computation\",\n        \"An interior-point method for large-scale l1-regularized least squares\",\n        \"Stochastic hyperparameter optimization through hypernetworks\",\n        \"Interior point solving for lp-based prediction+optimisation\",\n        \"Smart predict-and-optimize for hard combinatorial optimization problems\",\n        \"Portfolio selection\",\n        \"Estimation error and portfolio optimization: A resampling solution\",\n        \"Conic optimization via operator splitting and homogeneous self-dual embedding\",\n        \"Learning representations by back-propagating errors\",\n        \"Gpu acceleration of admm for large-scale quadratic programming\",\n        \"Superscs: fast and accurate large-scale conic optimization\",\n        \"Osqp: an operator splitting solver for quadratic programs\",\n        \"Regression shrinkage and selection via the lasso\",\n        \"Solution of incorrectly formulated problems and the regularization method\",\n        \"End-to-end risk budgeting portfolio optimization with neural networks\",\n        \"Anderson acceleration for fixed-point iterations\",\n        \"Differentiable linearized admm\",\n        \"Admm-net: A deep learning approach for compressive sensing mri\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Efficient differentiable quadratic programming layers: an ADMM approach, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}