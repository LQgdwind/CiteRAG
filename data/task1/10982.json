{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 61 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Parendi: Thousand-Way Parallel RTL Simulation\n\nPaper Abstract: Abstract. Hardware development relies on simulations, particularly cycle-accurate RTL (Register Transfer Level) simulations, which consume significant time. As single-processor performance grows only slowly, conventional, single-threaded RTL simulation is becoming less practical for increasingly complex chips and systems. A solution is parallel RTL simulation, where ideally, simulators could run on thousands of parallel cores. However, existing simulators can only exploit tens of cores. This paper studies the challenges inherent in running parallel RTL simulation on a multi-thousand-core machine (the Graphcore IPU, a 1472-core machine). Simulation performance requires balancing three factors: synchronization, communication, and computation. We experimentally evaluate each metric and analyze how it affects parallel simulation speed, drawing on contrasts between the large-scale IPU and smaller but faster x86 systems. Using this analysis, we build Parendi, an RTL simulator for the IPU. It distributes RTL simulation across 5888 cores on 4 IPU sockets. Parendi runs large RTL designs up to 4Ã—\\times faster than a powerful, state-of-the-art x86 multicore system.\n\n{retrieved_text}\n\nGenerate exactly 61 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 61\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"4th gen AMD EPYC Processor Archiecture\",\n        \"AI IPU Cloud Infrastructure\",\n        \"Azure pricing calculator\",\n        \"Introducing the Colussus MK2 GC200 IPU\",\n        \"Long time to compile complicated processor\",\n        \"Simulation performance differs with different Verilog styles\",\n        \"Using essent with chipyard\",\n        \"Scalable parallel event-driven HDL simulation for multi-cores\",\n        \"Chipyard: Integrated Design, Simulation, and Implementation Framework for Custom SoCs\",\n        \"The Rocket Chip Generator\",\n        \"Logic emulation with virtual wires\",\n        \"Chisel: constructing hardware in a Scala embedded language\",\n        \"A Case for Accelerating Software RTL Simulation\",\n        \"Efficiently Exploiting Low Activity Factors to Accelerate RTL Simulation\",\n        \"Open source FPGA-based emulation with nexus\",\n        \"Event-driven gate-level simulation with GP-GPUs\",\n        \"GCS: High-performance gate-level simulation with GPGPUs\",\n        \"Gate-Level Simulation with GPU Computing\",\n        \"SlackSim: a platform for parallel simulations of CMPs on CMPs\",\n        \"Accelerating RTL Simulation with Hardware Software Co-Design\",\n        \"Manticore: Hardware-Accelerated RTL Simulation with Static Bulk-Synchronous Parallelism\",\n        \"Part 4: The 2020 Wilson Research Group Functional Verification Study, FPGA Verification Effort Trends\",\n        \"Part 8: The 2020 Wilson Research Group Functional Verification Study, IC/ASIC Resource Trends\",\n        \"PriME: A parallel and distributed simulator for thousand-core chips\",\n        \"Performance Guarantees for Scheduling Algorithms\",\n        \"Reusability is FIRRTL ground: Hardware construction languages, compiler frameworks, and transformations\",\n        \"A scalable architecture for ordered parallelism\",\n        \"Dissecting the Graphcore IPU Architecture via Microbenchmarking\",\n        \"FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud\",\n        \"A new distributed event-driven gate-level HDL simulation by accurate prediction\",\n        \"FPGA-based emulation: Industrial and custom prototyping solutions\",\n        \"Design and Implementation of a Parallel Verilog Simulator: PVSim\",\n        \"From RTL to CUDA: A GPU Acceleration Flow for RTL Simulation with Batch Stimulus\",\n        \"Fast Behavioural RTL Simulation of 10B Transistor SoC Designs with Metro-Mpi\",\n        \"Xorshift RNGs\",\n        \"Graphite: A distributed parallel simulator for multicores\",\n        \"A Hardware-Software Blueprint for Flexible Deep Learning Specialization\",\n        \"Open-Source FPGA Bitcoin Miner\",\n        \"SystemC\",\n        \"PicoRV32 - A Size-Optimized RISC-V CPU\",\n        \"Accelerating RTL simulation with GPUs\",\n        \"Microprocessor trend data\",\n        \"Algorithms for Scheduling Independent Tasks\",\n        \"Compile-time partitioning and scheduling of parallel programs\",\n        \"High-Quality Hypergraph Partitioning\",\n        \"Verilator, accelerated: Accelerating development, and case study of accelerating performance\",\n        \"Verilator 4.0: Open simulation goes multithreaded\",\n        \"Your Big 4th Simulator: 2019 intro and roadmap\",\n        \"Submodular Approximation: Sampling-based Algorithms and Lower Bounds\",\n        \"ZSim: fast and accurate microarchitectural simulation of thousand-core systems\",\n        \"DIABLO: A Warehouse-Scale Computer Network Simulator using FPGAs\",\n        \"Design and implementation of a high performance financial Monte-Carlo simulation engine on an FPGA supercomputer\",\n        \"NP-Complete Scheduling Problems\",\n        \"A Bridging Model for Parallel Computation\",\n        \"SAGA: SystemC acceleration on GPU architectures\",\n        \"RepCut: Superlinear Parallel RTL Simulation with Replication-Aided Partitioning\",\n        \"SSIM: A Software Levelized Compiled-Code Simulator\",\n        \"LECSIM: A Levelized Event Driven Compiled Logic Simulation\",\n        \"Predictive parallel event-driven HDL simulation with a new powerful prediction strategy\",\n        \"Constellation: An open-source SoC-capable NoC generator\",\n        \"par-gem5: Parallelizing gem5â€™s Atomic Mode\"\n    ],\n    \"reasoning\": \"Selected these 61 references because they represent foundational work and recent advances in Parendi: Thousand-Way Parallel RTL Simulation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}