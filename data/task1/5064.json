{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Speedup deep learning models on GPU by taking advantage of efficient unstructured pruning and bit-width reduction\n\nPaper Abstract: Abstract This work is focused on the pruning of some convolutional neural networks (CNNs) and improving theirs efficiency on graphic processing units (GPU) by using a direct sparse algorithm. The Nvidia deep neural network (cuDnn) library is the most effective implementations of deep learning (DL) algorithms for GPUs. GPUs are the most commonly used accelerators for deep learning computations. One of the most common techniques for improving the efficiency of CNN models is weight pruning and quantisation. There are two main types of pruning: structural and non-structural. The first enables much easier acceleration on many type of accelerators, but with this type it is difficult to achieve a sparsity level and accuracy as high as that obtained with the second type. Non-structural pruning with retraining can generate a weight tensors up to ∼90%similar-toabsentpercent90\\sim 90\\% or more of sparsity in some deep CNN models.In this article the pruning algorithm is presented which makes it possible to achieve high sparsity levels without accuracy drop. In the next stage the linear and non-linear quantisation is adapted for further time and footprint reduction. This paper is an extended of previously published [1] concerning effective pruning techniques and present real models pruned with high sparsities and reduced precision which can achieve better performance than the CuDnn library.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Accelerating deep convolutional neural on gpgpu\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Going deeper with contextual cnn for hyperspectral image classification\",\n        \"Faster r-cnn: Towards real-time object detection with region proposal networks\",\n        \"Convolutional neural networks for sentence classification\",\n        \"Compression of convolutional neural network for natural language processing\",\n        \"Comparative study of cnn and rnn for natural language processing\",\n        \"Gpu fast convolution via the overlap-and-save method in shared memory\",\n        \"Fast algorithms for convolutional neural networks\",\n        \"cudnn: Efficient primitives for deep learning\",\n        \"The design and performance of batched blas on modern high-performance computing systems\",\n        \"Escoin: Efficient sparse convolutional neural network inference on gpus\",\n        \"Performance evaluation of cudnn convolution algorithms on nvidia volta gpus\",\n        \"Sparse convolutional neural networks\",\n        \"Spwa: An efficient sparse winograd convolutional neural networks accelerator on fpgas\",\n        \"Going deeper with convolutions\",\n        \"Deep residual learning for image recognition\",\n        \"Retrain or not retrain? – efficient pruning methods of deep cnn networks\",\n        \"The lottery ticket hypothesis at scale\",\n        \"Movement pruning: Adaptive sparsity by fine-tuning\",\n        \"Methodologies of compressing a stable performance convolutional neural networks in image classification\",\n        \"Eie: Efficient inference engine on compressed deep neural network\",\n        \"Variational dropout sparsifies deep neural networks, in: International conference on machine learning\",\n        \"Shallowing deep networks: Layer-wise pruning based on feature representations\",\n        \"A novel channel pruning method for deep neural network compression\",\n        \"Pruning filters for efficient convnets\",\n        \"Channel pruning based on mean gradient for accelerating convolutional neural networks\",\n        \"Reliable identification of redundant kernels for convolutional neural network compression\",\n        \"Discrimination-aware channel pruning for deep neural networks\",\n        \"Gradual channel pruning while training using feature relevance scores for convolutional neural networks\",\n        \"Learning to prune filters in convolutional neural networks\",\n        \"Variational convolutional neural network pruning, in: Proc. of the ieee conference on computer vision and pattern recognition\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Fixed point quantization of deep convolutional networks\",\n        \"Ristretto: Hardware-oriented approximation of convolutional neural networks\",\n        \"Fast compression and optimization of deep learning models for natural language processing\",\n        \"Comparing fine-tuning and rewinding in neural network pruning\",\n        \"Faster cnns with direct sparse convolutions and guided pruning\",\n        \"Cuda-lite: Reducing gpu programming complexity\",\n        \"Structured bayesian pruning via log-normal multiplicative noise\",\n        \"Ensemble neuroevolution-based approach for multivariate time series anomaly detection\",\n        \"Detecting spacecraft anomalies using lstms and nonparametric dynamic thresholding\",\n        \"Nvidia documentation center\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in Speedup deep learning models on GPU by taking advantage of efficient unstructured pruning and bit-width reduction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}