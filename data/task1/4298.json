{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DeepMetis: Augmenting a Deep Learning Test Set to Increase its Mutation Score\n\nPaper Abstract: Abstract Deep Learning (DL) components are routinely integrated into software systems that need to perform complex tasks such as image or natural language processing. The adequacy of the test data used to test such systems can be assessed by their ability to expose artificially injected faults (mutations) that simulate real DL faults. In this paper, we describe an approach to automatically generate new test inputs that can be used to augment the existing test set so that its capability to detect DL mutations increases. Our tool DeepMetis implements a search based input generation strategy. To account for the non-determinism of the training and the mutation processes, our fitness function involves multiple instances of the DL model under test. Experimental results show that DeepMetis is effective at augmenting the given test set, increasing its capability to detect mutants by 63% on average. A leave-one-out experiment shows that the augmented test set is capable of exposing unseen mutants, which simulate the occurrence of yet undetected faults.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Introduction to Information Retrieval. New York\",\n        \"Introduction to Information Retrieval\",\n        \"Deepxplore: Automated whitebox testing of deep learning systems\",\n        \"Dlfuzz: differential fuzzing testing of deep learning systems\",\n        \"Deeptest: Automated testing of deep-neural-network-driven autonomous cars\",\n        \"Deephunter: A coverage-guided fuzz testing framework for deep neural networks\",\n        \"Guiding deep learning system testing using surprise adequacy\",\n        \"Is neuron coverage a meaningful measure for testing deep neural networks?\",\n        \"An analysis and survey of the development of mutation testing\",\n        \"Taxonomy of real faults in deep learning systems\",\n        \"Machine learning testing: Survey, landscapes and horizons\",\n        \"Testing machine learning based systems: a systematic mapping\",\n        \"An empirical evaluation of mutation operators for deep learning systems\",\n        \"Search based repair of deep neural networks\",\n        \"Adversarial sample detection for deep neural network through model mutation testing\",\n        \"A search-based testing framework for deep neural networks of source code embedding\",\n        \"Quality metrics and oracles for autonomous vehicles testing\",\n        \"Deepmutation: Mutation testing of deep learning systems\",\n        \"Munn: Mutation analysis of neural networks\",\n        \"Deepmutation++: A mutation testing framework for deep learning systems\",\n        \"Deepcrime: Mutation testing of deep learning systems based on real faults\",\n        \"A comprehensive study on deep learning bug characteristics\",\n        \"An empirical study on tensorflow program bugs\",\n        \"A fast and elitist multiobjective genetic algorithm: Nsga-ii\",\n        \"Automated test case generation as a many-objective optimisation problem with dynamic selection of the targets\",\n        \"Pareto efficient multi-objective test case selection\",\n        \"Using hybrid algorithm for pareto efficient multi-objective test suite minimisation\",\n        \"Sapienz: Multi-objective automated testing for android applications\",\n        \"A multi-objective approach to search-based test data generation\",\n        \"Model-based exploration of the frontier of behaviours for deep learning system testing\",\n        \"Abandoning objectives: Evolution through the search for novelty alone\",\n        \"Using exploration focused techniques to augment search-based software testing: An experimental evaluation\",\n        \"A taxonomy of model-based testing approaches\",\n        \"Deephyperion: exploring the feature space of deep learning-based systems through illumination search\",\n        \"Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Potrace: a polygon-based tracing algorithm\",\n        \"Appearance-based gaze estimation in the wild\",\n        \"Learning an appearance-based gaze estimator from one million synthesised images\",\n        \"Replication package for deepmetis\",\n        \"The incremental pareto-coevolution archive\",\n        \"Illuminating search spaces by mapping elites\",\n        \"An implementation of a multimodal cnn for appearance-based gaze estimation.\",\n        \"Input prioritization for testing neural networks\",\n        \"Distribution-aware testing of neural networks using generative models\",\n        \"Deeproad: Gan-based metamorphic testing and input validation framework for autonomous driving systems\",\n        \"Effective white-box testing of deep neural networks with adaptive neuron-selection strategy\",\n        \"Testing advanced driver assistance systems using multi-objective search and neural networks\",\n        \"Testing autonomous cars for feature interaction failures using many-objective search\",\n        \"Testing vision-based control systems using learnable evolutionary algorithms\",\n        \"Automatically testing self-driving cars with search-based procedural content generation\",\n        \"Automated directed fairness testing\",\n        \"Deepgauge: Multi-granularity testing criteria for deep learning systems\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in DeepMetis: Augmenting a Deep Learning Test Set to Increase its Mutation Score, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}