{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Network Augmentation for Tiny Deep Learning\n\nPaper Abstract: Abstract We introduce Network Augmentation (NetAug), a new training method for improving the performance of tiny neural networks. Existing regularization techniques (e.g., data augmentation, dropout) have shown much success on large neural networks by adding noise to overcome over-fitting. However, we found these techniques hurt the performance of tiny neural networks. We argue that training tiny models are different from large models: rather than augmenting the data, we should augment the model, since tiny models tend to suffer from under-fitting rather than over-fitting due to limited capacity. To alleviate this issue, NetAug augments the network (reverse dropout) instead of inserting noise into the dataset or the network. It puts the tiny model into larger models and encourages it to work as a sub-model of larger models to get extra supervision, in addition to functioning as an independent model. At test time, only the tiny model is used for inference, incurring zero inference overhead. We demonstrate the effectiveness of NetAug on image classification and object detection. NetAug consistently improves the performance of tiny models, achieving up to 2.2% accuracy improvement on ImageNet. On object detection, achieving the same level of performance, NetAug requires 41% fewer MACs on Pascal VOC and 38% fewer MACs on COCO than the baseline.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Internet of things (IoT) connected devices installed base worldwide from 2015 to 2025\",\n        \"Micronets: Neural network architectures for deploying tinyml applications on commodity microcontrollers\",\n        \"Knowledge distillation: A good teacher is patient and consistent\",\n        \"Food-101–mining discriminative components with random forests\",\n        \"Automl for architecting efficient and specialized neural networks\",\n        \"ProxylessNAS: Direct neural architecture search on target task and hardware\",\n        \"Once for all: Train one network and specialize it for efficient deployment\",\n        \"Tinytl: Reduce memory, not parameters for efficient on-device learning\",\n        \"Autoaugment: Learning augmentation policies from data\",\n        \"Randaugment: Practical automated data augmentation with a reduced search space\",\n        \"Large scale fine-grained categorization and domain-specific transfer learning\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Improved regularization of convolutional neural networks with cutout\",\n        \"The pascal visual object classes (voc) challenge\",\n        \"Born again neural networks\",\n        \"Dropblock: a regularization method for convolutional networks\",\n        \"Single path one-shot neural architecture search with uniform sampling\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Deep residual learning for image recognition\",\n        \"Channel pruning for accelerating very deep neural networks\",\n        \"Distilling the knowledge in a neural network\",\n        \"Searching for mobilenetv3\",\n        \"Deep networks with stochastic depth\",\n        \"Squeezenet: Alexnet-level accuracy with 50x fewer parameters and¡ 0.5 mb model size\",\n        \"Do better imagenet models transfer better?\",\n        \"3d object representations for fine-grained categorization\",\n        \"Compounding the performance improvements of assembled techniques in a convolutional neural network\",\n        \"Mcunet: Tiny deep learning on iot devices\",\n        \"Microsoft coco: Common objects in context\",\n        \"Learning efficient convolutional networks through network slimming\",\n        \"Automated flower classification over a large number of classes\",\n        \"Cats and dogs\",\n        \"Designing network design spaces\",\n        \"Xnor-net: Imagenet classification using binary convolutional neural networks\",\n        \"Yolov3: An incremental improvement\",\n        \"Imagenet-21k pretraining for the masses\",\n        \"Fitnets: Hints for thin deep nets\",\n        \"An overview of multi-task learning in deep neural networks\",\n        \"Rnnpool: Efficient non-linear pooling for ram constrained inference\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Is label smoothing truly incompatible with knowledge distillation: An empirical study\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Efficient object localization using convolutional networks\",\n        \"The caltech-ucsd birds-200-2011 dataset\",\n        \"Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search\",\n        \"Gradaug: A new regularization method for deep neural networks\",\n        \"Autoslim: Towards one-shot architecture search for channel numbers\",\n        \"Revisiting knowledge distillation via label smoothing regularization\",\n        \"Re-labeling imagenet: from single to multi-labels, from global to localized labels\",\n        \"Paying more attention to attention: Improving the performance of convolutional neural networks via attention transfer\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Be your own teacher: Improve the performance of convolutional neural networks via self distillation\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\",\n        \"Bag of freebies for training object detection neural networks\",\n        \"Go wide, then narrow: Efficient training of deep thin networks\",\n        \"Trained ternary quantization\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Network Augmentation for Tiny Deep Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}