{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 61 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: gECC: A GPU-based high-throughput framework for Elliptic Curve Cryptography\n\nPaper Abstract: Abstract Elliptic Curve Cryptography (ECC) is an encryption method that provides security comparable to traditional techniques like Rivest–Shamir–Adleman (RSA) but with lower computational complexity and smaller key sizes, making it a competitive option for applications such as blockchain, secure multi-party computation, and database security. However, the throughput of ECC is still hindered by the significant performance overhead associated with elliptic curve (EC) operations, which can affect their efficiency in real-world scenarios. This paper presents gECC, a versatile framework for ECC optimized for GPU architectures, specifically engineered to achieve high-throughput performance in EC operations. To maximize throughput, gECC incorporates batch-based execution of EC operations and microarchitecture-level optimization of modular arithmetic. It employs Montgomery’s trick [1] to enable batch EC computation and incorporates novel computation parallelization and memory management techniques to maximize the computation parallelism and minimize the access overhead of GPU global memory. Furthermore, we analyze the primary bottleneck in modular multiplication by investigating how the user codes of modular multiplication are compiled into hardware instructions and what these instructions’ issuance rates are. We identify that the efficiency of modular multiplication is highly dependent on the number of Integer Multiply-Add (IMAD) instructions. To eliminate this bottleneck, we propose novel techniques to minimize the number of IMAD instructions by leveraging predicate registers to pass the carry information and using addition and subtraction instructions (IADD3) to replace IMAD instructions. Our experimental results show that, for ECDSA and ECDH, the two commonly used ECC algorithms, gECC can achieve performance improvements of 5.56 ×\\times and 4.94 ×\\times, respectively, compared to the state-of-the-art GPU-based system. In a real-world blockchain application, we can achieve performance improvements of 1.56 ×\\times, compared to the state-of-the-art CPU-based system. gECC is completely and freely available at https://github.com/CGCL-codes/gECC.\n\n{retrieved_text}\n\nGenerate exactly 61 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 61\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Speeding the pollard and elliptic curve methods of factorization\",\n        \"Use of elliptic curves in cryptography\",\n        \"Elliptic curve cryptosystems\",\n        \"Glassdb: An efficient verifiable ledger database system through transparency\",\n        \"Hybrid blockchain database systems: design and performance\",\n        \"The anatomy of blockchain database systems\",\n        \"Ledgerdb: A centralized ledger database for universal audit and verification\",\n        \"Spitz: a verifiable database system\",\n        \"Elliptic curve cryptography (ecc) cipher suites for transport layer security (tls)\",\n        \"The elliptic curve digital signature algorithm (ecdsa)\",\n        \"Database security with aes encryption, elliptic curve encryption and signature\",\n        \"Secured data storage and retrieval using elliptic curve cryptography in cloud\",\n        \"Spot-light: lightweight private set intersection from sparse ot extension\",\n        \"Unbalanced private set intersection with linear communication complexity\",\n        \"Efficient secure computation from sm series cryptography\",\n        \"Practical private intersection-sum protocols with good scalability\",\n        \"Cryptographic primitives in blockchains\",\n        \"Integridb: Verifiable sql for outsourced databases\",\n        \"Scalable verification for outsourced dynamic databases\",\n        \"Amazon quantum ledger database, 2019\",\n        \"Sql ledger: Cryptographically verifiable data in azure sql database\",\n        \"Bitcoin: A peer-to-peer electronic cash system\",\n        \"Ethereum: A secure decentralised generalised transaction ledger\",\n        \"Zerocash: Decentralized anonymous payments from bitcoin\",\n        \"Hyperledger fabric: a distributed operating system for permissioned blockchains\",\n        \"Sec 2: Recommended elliptic curve domain parameters\",\n        \"Digital signature standard (dss)\",\n        \"Provably-secure (chinese government) sm2 and simplified sm2 key exchange protocols\",\n        \"Public key cryptographic algorithm sm2 based on elliptic curves\",\n        \"Baldur: A hybrid blockchain database with fpga or gpu acceleration\",\n        \"Dpf-ecc: Accelerating elliptic curve cryptography with floating-point computing power of gpus\",\n        \"Dpf-ecc: A framework for efficient ecc with double precision floating-point computing power\",\n        \"Accelerating elliptic curve digital signature algorithms on gpus\",\n        \"PowerGraph: Distributed Graph-Parallel computation on natural graphs\",\n        \"Cgbn: Cuda accelerated multiple precision arithmetic (big num) using cooperative groups, 2018\",\n        \"Faster modular exponentiation using double precision floating point arithmetic on the gpu\",\n        \"Tls/ssl and crypto library, 2024\",\n        \"An efficient elliptic curve cryptography signature server with gpu acceleration\",\n        \"Guide to elliptic curve cryptography\",\n        \"Accelerating sm2 digital signature algorithm using modern processor features\",\n        \"Parallel implementation of sm2 elliptic curve cryptography on intel processors with avx2\",\n        \"Modular multiplication without trial division\",\n        \"Analyzing and comparing montgomery multiplication algorithms\",\n        \"Fast constant-time gcd computation and modular inversion\",\n        \"High-assurance field inversion for curve-based cryptography\",\n        \"OpenSSLNTRU: Faster post-quantum TLS key exchange\",\n        \"sdpf-rsa: Utilizing floating-point computing power of gpus for massive digital signature computations\",\n        \"Exploiting the potential of gpus for modular multiplication in ecc\",\n        \"Towards high-performance x25519/448 key agreement in general purpose gpus\",\n        \"Zero-knowledge template library, 2024\",\n        \"Accelerating the future of zero-knowledge cryptography, 2023\",\n        \"Cuda c++ programming guide, 2024\",\n        \"Nvidia a100 tensor core gpu architecture, 2022\",\n        \"Timing attacks on implementations of diffie-hellman, rsa, dss, and other systems\",\n        \"Cuda kernel profiling using nvidia nsight compute, 2019\",\n        \"Nsight compute documentation, 2024\",\n        \"Communication optimization on gpu: A case study of sequence alignment algorithms\",\n        \"Dissecting the nvidia volta gpu architecture via microbenchmarking\",\n        \"Dissecting the ampere gpu architecture through microbenchmarking\",\n        \"A high-performance elliptic curve cryptographic processor of sm2 over gf (p)\",\n        \"FISCO BCOS: an enterprise-level financial blockchain platform developed and open-sourced by the Financial Services Blockchain Consortium (Shenzhen) FISCO led by WeBank., 2024\"\n    ],\n    \"reasoning\": \"Selected these 61 references because they represent foundational work and recent advances in gECC: A GPU-based high-throughput framework for Elliptic Curve Cryptography, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}