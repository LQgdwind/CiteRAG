{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Small-Group Learning, with Application to Neural Architecture Search\n\nPaper Abstract: Abstract In human learning, an effective learning methodology is small-group learning: a small group of students work together towards the same learning objective, where they express their understanding of a topic to their peers, compare their ideas, and help each other to trouble-shoot problems. In this paper, we aim to investigate whether this human learning method can be borrowed to train better machine learning models, by developing a novel ML framework â€“ small-group learning (SGL). In our framework, a group of learners (ML models) with different model architectures collaboratively help each other to learn by leveraging their complementary advantages. Specifically, each learner uses its intermediately trained model to generate a pseudo-labeled dataset and re-trains its model using pseudo-labeled datasets generated by other learners. SGL is formulated as a multi-level optimization framework consisting of three learning stages: each learner trains a model independently and uses this model to perform pseudo-labeling; each learner trains another model using datasets pseudo-labeled by other learners; learners improve their architectures by minimizing validation losses. An efficient algorithm is developed to solve the multi-level optimization problem. We apply SGL for neural architecture search. Results on CIFAR-100, CIFAR-10, and ImageNet demonstrate the effectiveness of our method.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Combining labeled and unlabeled data with co-training\",\n        \"Towards federated learning at scale: System design\",\n        \"Random forests\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n        \"Towards evaluating the robustness of neural networks\",\n        \"Probabilistic neural architecture search\",\n        \"Stabilizing differentiable architecture search via perturbation-based regularization\",\n        \"Drnas: Dirichlet neural architecture search\",\n        \"Progressive differentiable architecture search: Bridging the depth gap between search and evaluation\",\n        \"Fair DARTS: eliminating unfair advantages in differentiable architecture search\",\n        \"DARTS-: robustly stepping out of performance collapse without indicators\",\n        \"Noisy differentiable architecture search\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Searching for a robust neural architecture in four GPU hours\",\n        \"A decision-theoretic generalization of on-line learning and an application to boosting\",\n        \"Search for better students to learn distilled knowledge\",\n        \"Deep residual learning for image recognition\",\n        \"Distilling the knowledge in a neural network\",\n        \"Dropnas: Grouped operation dropout for differentiable architecture search\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"DSNAS: direct neural architecture search without parameter retraining\",\n        \"Densely connected convolutional networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Block-wisely supervised neural architecture search with knowledge distillation\",\n        \"DARTS+: improved differentiable architecture search with early stopping\",\n        \"Progressive neural architecture search\",\n        \"Hierarchical representations for efficient architecture search\",\n        \"DARTS: differentiable architecture search\",\n        \"Search to distill: Pearls are everywhere but not the eyes\",\n        \"Neural architecture optimization\",\n        \"Shufflenet V2: practical guidelines for efficient CNN architecture design\",\n        \"ASAP: architecture search, anneal and prune\",\n        \"Cooperative multi-agent learning: The state of the art\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Generative teaching networks: Accelerating neural architecture search by learning to generate synthetic training data\",\n        \"Going deeper with convolutions\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Multi-fidelity neural architecture search with knowledge distillation\",\n        \"Mergenas: Merge operations into one for differentiable architecture search\",\n        \"Self-training with noisy student improves imagenet classification\",\n        \"SNAS: stochastic neural architecture search\",\n        \"PC-DARTS: partial channel connections for memory-efficient architecture search\",\n        \"Understanding and robustifying differentiable architecture search\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\",\n        \"Deep mutual learning\",\n        \"Bayesnas: A bayesian approach for neural architecture search\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Learning transferable architectures for scalable image recognition\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Small-Group Learning, with Application to Neural Architecture Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}