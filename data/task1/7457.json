{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Sparse Hamming Graph: A Customizable Network-on-Chip Topology\n\nPaper Abstract: Abstract Chips with hundreds to thousands of cores require scalable networks-on-chip (NoCs). Customization of the NoC topology is necessary to reach the diverse design goals of different chips. We introduce sparse Hamming graph, a novel NoC topology with an adjustable cost-performance trade-off that is based on four NoC topology design principles we identified. To efficiently customize this topology, we develop a toolchain that leverages approximate floorplanning and link routing to deliver fast and accurate cost and performance predictions. We demonstrate how to use our methodology to achieve desired cost-performance trade-offs while outperforming established topologies in cost, performance, or both.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Data movement is all you need: A case study on optimizing transformers\",\n        \"Challenges in parallel graph processing\",\n        \"Communication-efficient jaccard similarity for high-performance distributed genome comparisons\",\n        \"To push or to pull: On reducing communication and synchronization in graph computations\",\n        \"The future is big graphs! a community view on graph processing systems\",\n        \"Slim graph: Practical lossy graph compression for approximate graph processing, storage, and analytics\",\n        \"Slimsell: A vectorizable graph representation for breadth-first search\",\n        \"High-performance parallel graph coloring with strong guarantees on work, depth, and quality\",\n        \"Communication-avoiding parallel minimum cuts and connected components\",\n        \"Red-blue pebbling revisited: near optimal parallel matrix-matrix multiplication\",\n        \"On the parallel i/o optimality of linear algebra kernels: near-optimal matrix factorizations\",\n        \"Pebbles, graphs, and a pinch of combinatorics: Towards tight i/o lower bounds for statically analyzable programs\",\n        \"Sisa: Set-centric instruction set architecture for graph mining on processing-in-memory systems\",\n        \"Graphminesuite: Enabling high-performance and programmable graph mining algorithms with set algebra\",\n        \"Probgraph: High-performance and high-accuracy graph mining with probabilistic set representations\",\n        \"Graph mining: laws, tools, and case studies\",\n        \"Graph mining: A survey of graph mining techniques\",\n        \"Frequent subgraph mining algorithms-a survey\",\n        \"Parallel algorithms for finding large cliques in sparse graphs\",\n        \"Motif prediction with graph neural networks\",\n        \"Parallel and distributed graph neural networks: An in-depth concurrency analysis\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Neural graph databases\",\n        \"Graph neural networks: A review of methods and applications\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Slim noc: A low-diameter on-chip network topology for high energy efficiency and scalability\",\n        \"Noc synthesis flow for customized domain specific multiprocessor systems-on-chip\",\n        \"Xpipes: A network-on-chip architecture for gigascale systems-on-chip\",\n        \"An open-source platform for high-performance non-coherent on-chip communication\",\n        \"Principles of CMOS VLSI design: a systems perspective\",\n        \"Principles and practices of interconnection networks\",\n        \"A 64-pe folded-torus intra-chip communication fabric for guaranteed throughput in network-on-chip based applications\",\n        \"Hypercube based clusters in cloud computing\",\n        \"Flattened butterfly topology for on-chip networks\",\n        \"A detailed and flexible cycle-accurate network-on-chip simulator\",\n        \"Wire routing in np-complete\",\n        \"Mempool: A shared-l1 memory many-core cluster with a low-latency interconnect\",\n        \"Amba axi and ace protocol specification\",\n        \"Knights Landing: Second-generation Intel Xeon Phi product\",\n        \"Marvell thunderx3: Next-generation arm-based server processor\",\n        \"Ruche networks: Wire-maximal, no-fuss nocs: Special session paper\",\n        \"Topaz: An open-source interconnection network simulator for chip multiprocessors and supercomputers\",\n        \"Garnet: A detailed on-chip network model inside a full-system simulator\",\n        \"Orion 2.0: A fast and accurate noc power and area model for early-stage design space exploration\",\n        \"Opensmart: Single-cycle multi-hop noc generator in bsv and chisel\",\n        \"Nocgen: A template based reuse methodology for networks on chip architecture\",\n        \"Connect: Re-examining conventional wisdom for designing nocs in the context of fpgas\",\n        \"Pyocn: A unified framework for modeling, testing, and evaluating on-chip networks\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Sparse Hamming Graph: A Customizable Network-on-Chip Topology, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}