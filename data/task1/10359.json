{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 67 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SpecLLM: Exploring Generation and Review of VLSI Design Specification with Large Language Model\n\nPaper Abstract: Abstract The development of architecture specifications is an initial and fundamental stage of the integrated circuit (IC) design process. Traditionally, architecture specifications are crafted by experienced chip architects, a process that is not only time-consuming but also error-prone. Mistakes in these specifications may significantly affect subsequent stages of chip design. Despite the presence of advanced electronic design automation (EDA) tools, effective solutions to these specification-related challenges remain scarce. Since writing architecture specifications is naturally a natural language processing (NLP) task, this paper pioneers the automation of architecture specification development with the advanced capabilities of large language models (LLMs). The absence of a clear and precise definition of architecture specifications poses the first challenge in our research. To address this, we propose a structured definition of architecture specifications, categorizing them into three distinct abstraction levels. Leveraging this definition, we create and release a specification dataset111The dataset will be available at https://github.com/hkust-zhiyao/SpecLLM by methodically gathering 46 architecture specification documents from various public sources. Our clear definitions of architecture specifications, coupled with the dataset we have formed, lay a solid foundation for prospective research in employing LLMs for architecture specifications. Leveraging our definition and dataset, we explore the application of LLMs in two key aspects of architecture specification development: (1) Generating architecture specifications, which includes both writing specifications from scratch and converting RTL code into detailed specifications. (2) Reviewing existing architecture specifications. We got promising results indicating that LLMs may revolutionize how these critical specification documents are developed in IC design nowadays. By reducing the effort required, LLMs open up new possibilities for efficiency and accuracy in this crucial aspect of chip design.\n\n{retrieved_text}\n\nGenerate exactly 67 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 67\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gpt-4 technical report\",\n        \"Rtlcoder: Outperforming gpt-3.5 in design rtl generation with our open-source dataset and lightweight solution\",\n        \"Chip-chat: Challenges and opportunities in conversational hardware design\",\n        \"Rtllm: An open-source benchmark for design rtl generation with large language model\",\n        \"Verilogeval: Evaluating large language models for verilog code generation\",\n        \"Benchmarking large language models for automated verilog rtl code generation\",\n        \"Autochip: Automating hdl generation using llm feedback\",\n        \"Generating secure hardware using chatgpt resistant to cwes\",\n        \"Chipnemo: Domain-adapted llms for chip design\",\n        \"Chateda: A large language model powered autonomous agent for eda\",\n        \"Gpt4aigchip: Towards next-generation ai accelerator design automation via large language models\",\n        \"On the viability of using llms for sw/hw co-design: An example in designing cim dnn accelerators\",\n        \"Llm-assisted generation of hardware assertions\",\n        \"Fixing hardware security bugs with large language models\",\n        \"RISC-V ISA Specifications Volume 1, Unprivileged Specification\",\n        \"RISC-V ISA Specifications Volume 2, Privileged Specification\",\n        \"ARMv8-M Architecture Reference Manual\",\n        \"Intel 64 and IA-32 Architectures Software Developer’s Manua\",\n        \"The SPARC architecture manual\",\n        \"OpenRISC 1000 Architecture Manua\",\n        \"The NEORV32 RISC-V Processor: Datasheet\",\n        \"OpenSPARC T1 Microarchitecture Specification\",\n        \"OpenSPARC T2 Microarchitecture Specification\",\n        \"E31 Core Complex Manual\",\n        \"E51 Core Complex Manual\",\n        \"Arm Cortex-A78 Core Technical Reference Manual\",\n        \"Arm Cortex-X2 Core Technical Reference Manual\",\n        \"Arm Neoverse N2 Core Technical Reference Manual\",\n        \"Intel 64 and IA-32 Architectures Optimization Reference\",\n        \"OpenRISC 1200 IP Core Specification\",\n        \"Amber ARM-compatible core\",\n        \"LXP32, a lightweight, open source and FPGA-friendly 32-bit CPU IP core\",\n        \"OpenMSP430, Texas Instruments\",\n        \"NEO430, based on the Texas Instruments MSP430(TM) ISA\",\n        \"Efficient Trace for RISC-V\",\n        \"RISC-V External Debug Support\",\n        \"RISC-V IOMMU Architecture Specification\",\n        \"RISC-V Advanced Interrupt Architecture\",\n        \"RISC-V Platform-Level Interrupt Controller Specification\",\n        \"Freedom E310-G000 Manual\",\n        \"Freedom U540-C000 Manual\",\n        \"OpenSPARC T2 System-On-Chip (SoC) Microarchitecture Specification\",\n        \"RISC-V ”V” Vector Extension\",\n        \"Intel Advanced Performance Extensions (Intel APX) Architecture Specification\",\n        \"Intel Advanced Vector Extensions 10 (Intel AVX10) Architecture Specification\",\n        \"NVIDIA Deep Learning Accelerator (NVDLA), Hardware Architectural Specification\",\n        \"TileLink Specification\",\n        \"AMBA5 CHI Architecture Specification\",\n        \"AMBA5 ACE Protocol Specification (superseded by CHI)\",\n        \"AMBA5 AXI Protocol Specification\",\n        \"AMBA4 AXI and ACE Protocol Specification\",\n        \"10GE MAC Core Specification\",\n        \"Ethernet IP Core Specification\",\n        \"I2C-Master Core Specification\",\n        \"UART to Bus Core Specifications\",\n        \"Elliptic Curve Group Core Specification\",\n        \"Tate Bilinear Pairing Core Specification\",\n        \"Tiny Tate Bilinear Pairing Core Specification\",\n        \"AES Core Specification\",\n        \"SHA3 Core Specification\",\n        \"RISC-V Specifications\",\n        \"The berkeley out-of-order machine (boom): An industry-competitive, synthesizable, parameterized risc-v processor\",\n        \"Towards developing high performance risc-v processors using agile methodology\",\n        \"A prompt pattern catalog to enhance prompt engineering with chatgpt\",\n        \"verified_calendar.v in RTLLM\",\n        \"Amber 2 Core Specification\",\n        \"A survey on evaluation of large language models\"\n    ],\n    \"reasoning\": \"Selected these 67 references because they represent foundational work and recent advances in SpecLLM: Exploring Generation and Review of VLSI Design Specification with Large Language Model, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}