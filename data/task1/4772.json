{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Triggerless Backdoor Attack for NLP Tasks with Clean Labels\n\nPaper Abstract: Abstract Backdoor attacks pose a new threat to NLP models. A standard strategy to construct poisoned data in backdoor attacks is to insert triggers (e.g., rare words) into selected sentences and alter the original label to a target label. This strategy comes with a severe flaw of being easily detected from both the trigger and the label perspectives: the trigger injected, which is usually a rare word, leads to an abnormal natural language expression, and thus can be easily detected by a defense model; the changed target label leads the example to be mistakenly labeled, and thus can be easily detected by manual inspections. To deal with this issue, in this paper, we propose a new strategy to perform textual backdoor attack which does not require an external trigger and the poisoned samples are correctly labeled. The core idea of the proposed strategy is to construct clean-labeled examples, whose labels are correct but can lead to test label changes when fused with the training set. To generate poisoned clean-labeled examples, we propose a sentence generation model based on the genetic algorithm to cater to the non-differentiable characteristic of text data. Extensive experiments demonstrate that the proposed attacking strategy is not only effective, but more importantly, hard to defend due to its triggerless and clean-labeled nature. Our work marks the first step towards developing triggerless attacking strategies in NLP111https://github.com/leileigan/clean_label_textual_backdoor_attack.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Generating natural language adversarial examples\",\n        \"Deepinspect: a black-box trojan detection and mitigation framework for deep neural networks\",\n        \"Badpre: Task-agnostic backdoor attacks to pre-trained nlp foundation models\",\n        \"Badnl: Backdoor attacks against nlp models\",\n        \"What does bert look at? an analysis of bert’s attention\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Hownet and its computation of meaning\",\n        \"Hotflip: White-box adversarial examples for text classification\",\n        \"Defending against backdoor attacks in natural language generation\",\n        \"Semglove: Semantic co-occurrences for glove from bert\",\n        \"Bae: Bert-based adversarial examples for text classification\",\n        \"Badnets: Identifying vulnerabilities in the machine learning model supply chain\",\n        \"Attention is not explanation\",\n        \"Particle swarm optimization\",\n        \"Convolutional neural networks for sentence classification\",\n        \"Weight poisoning attacks on pretrained models\",\n        \"Contextualized perturbation for textual adversarial attack\",\n        \"Visualizing and understanding neural models in nlp\",\n        \"Understanding neural networks through representation erasure\",\n        \"Bert-attack: Adversarial attack against bert using bert\",\n        \"Backdoor attacks on pre-trained models by layerwise weight poisoning\",\n        \"Fine-pruning: Defending against backdooring attacks on deep neural networks\",\n        \"Visualizing data using t-sne\",\n        \"Counter-fitting word vectors to linguistic constraints\",\n        \"A rule-based style and grammar checker\",\n        \"Combating adversarial misspellings with robust word recognition\",\n        \"Onion: A simple and effective defense against textual backdoor attacks\",\n        \"Hidden killer: Invisible textual backdoor attacks with syntactic trigger\",\n        \"Turn the combination lock: Learnable textual backdoor attacks via word substitution\",\n        \"Language models are unsupervised multitask learners\",\n        \"Generating natural language adversarial examples through probability weighted word saliency\",\n        \"Poison frogs! targeted clean-label poisoning attacks on neural networks\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Interpreting deep learning models in natural language processing: A review\",\n        \"Clean-label backdoor attacks\",\n        \"Neural cleanse: Identifying and mitigating backdoor attacks in neural networks\",\n        \"Putting words into the system’s mouth: A targeted attack on neural machine translation using monolingual data poisoning\",\n        \"Detecting ai trojans using meta neural analysis\",\n        \"Be careful about poisoned word embeddings: Exploring the vulnerability of the embedding layers in nlp models\",\n        \"Rethinking stealthiness of backdoor attack against nlp models\",\n        \"Hierarchical attention networks for document classification\",\n        \"Predicting the type and target of offensive posts in social media\",\n        \"Word-level textual adversarial attacking as combinatorial optimization\",\n        \"Bertscore: Evaluating text generation with bert\",\n        \"Character-level convolutional networks for text classification\",\n        \"Neural network surgery: Injecting data patterns into pre-trained models with minimal instance-wise side effects\",\n        \"Clean-label backdoor attacks on video recognition models\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Triggerless Backdoor Attack for NLP Tasks with Clean Labels, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}