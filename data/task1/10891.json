{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CLLMs: Consistency Large Language Models\n\nPaper Abstract: Abstract Parallel decoding methods such as Jacobi decoding show promise for more efficient LLM inference as it breaks the sequential nature of the LLM decoding process and transforms it into parallelizable computation. However, in practice, it achieves little speedup compared to traditional autoregressive (AR) decoding, primarily because Jacobi decoding seldom accurately predicts more than one token in a single fixed-point iteration step. To address this, we develop a new approach aimed at realizing fast convergence from any state to the fixed point on a Jacobi trajectory. This is accomplished by refining the target LLM to consistently predict the fixed point given any state as input. Extensive experiments demonstrate the effectiveness of our method, showing 2.4×\\times to 3.4×\\times improvements in generation speed while preserving generation quality across both domain-specific and open-domain benchmarks. Our code is available at https://github.com/hao-ai-lab/Consistency_LLM.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gpt-4 technical report\",\n        \"Gkd: Generalized knowledge distillation for auto-regressive sequence models\",\n        \"Gqa: Training generalized multi-query transformer models from multi-head checkpoints\",\n        \"Palm 2 technical report\",\n        \"Slicegpt: Compress large language models by deleting rows and columns\",\n        \"Deepseek llm: Scaling open-source language models with longtermism\",\n        \"Medusa: Simple llm inference acceleration framework with multiple decoding heads\",\n        \"Accelerating large language model decoding with speculative sampling\",\n        \"Generative ai for math: Abel\",\n        \"Training verifiers to solve math word problems\",\n        \"Flashattention-2: Faster attention with better parallelism and work partitioning\",\n        \"Flashattention: Fast and memory-efficient exact attention with io-awareness\",\n        \"Llm. int8 (): 8-bit matrix multiplication for transformers at scale\",\n        \"Sparsegpt: Massive language models can be accurately pruned in one-shot\",\n        \"Gptq: Accurate post-training quantization for generative pre-trained transformers\",\n        \"Break the sequential dependency of llm inference using lookahead decoding\",\n        \"Knowledge distillation of large language models\",\n        \"Denoising diffusion probabilistic models\",\n        \"The curious case of neural text degeneration\",\n        \"CodeSearchNet challenge: Evaluating the state of semantic code search\",\n        \"Sequence-level knowledge distillation\",\n        \"Efficient memory management for large language model serving with pagedattention\",\n        \"Fast inference from transformers via speculative decoding\",\n        \"Eagle: Speculative sampling requires rethinking feature uncertainty\",\n        \"Awq: Activation-aware weight quantization for llm compression and acceleration\",\n        \"Online speculative decoding\",\n        \"Llm-pruner: On the structural pruning of large language models\",\n        \"Pointer sentinel mixture models\",\n        \"Iterative solution of nonlinear equations in several variables\",\n        \"Meta-kd: A meta knowledge distillation framework for language model compression across domains\",\n        \"Sentence repetition: What does the task measure?\",\n        \"Efficiently scaling transformer inference\",\n        \"Accelerating transformer inference for translation via parallel decoding\",\n        \"Fast transformer decoding: One write-head is all you need\",\n        \"From n-grams to collocations: An evaluation of xtract\",\n        \"Improved techniques for training consistency models\",\n        \"Accelerating feedforward computation via parallel nonlinear equation solving\",\n        \"Score-based generative modeling through stochastic differential equations\",\n        \"Consistency models\",\n        \"A simple and effective pruning approach for large language models\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Next-gpt: Any-to-any multimodal llm\",\n        \"Structured pruning learns compact and accurate models\",\n        \"Sheared llama: Accelerating language model pre-training via structured pruning\",\n        \"Smoothquant: Accurate and efficient post-training quantization for large language models\",\n        \"Spider: A large-scale human-labeled dataset for complex and cross-domain semantic parsing and text-to-sql task\",\n        \"Judging llm-as-a-judge with mt-bench and chatbot arena\",\n        \"LIMA: Less is more for alignment\",\n        \"Distillspec: Improving speculative decoding via knowledge distillation\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in CLLMs: Consistency Large Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}