{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Logic Programs by Discovering Higher-Order Abstractions\n\nPaper Abstract: Abstract We introduce the higher-order refactoring problem, where the goal is to compress a logic program by discovering higher-order abstractions, such as map, filter, and fold. We implement our approach in Stevie, which formulates the refactoring problem as a constraint optimisation problem. Our experiments on multiple domains, including program synthesis and visual reasoning, show that refactoring can improve the learning performance of an inductive logic programming system, specifically improving predictive accuracies by 27% and reducing learning times by 47%. We also show that Stevie can discover abstractions that transfer to multiple domains.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"RUTH: an ILP theory revision system\",\n        \"Top-down induction of first-order logical decision trees\",\n        \"Top-down synthesis for library learning\",\n        \"Representational change is integral to reasoning\",\n        \"Babble: learning better abstractions with e-graphs and anti-unification\",\n        \"The limits of reason\",\n        \"Constraint-driven multi-task learning\",\n        \"Learning programs by learning from failures\",\n        \"Logical reduction of metarules\",\n        \"Learning higher-order logic programs\",\n        \"Inductive logic programming at 30\",\n        \"Abductive knowledge induction from raw data\",\n        \"Inducing probabilistic relational rules from probabilistic examples\",\n        \"Learning relational representations with auto-encoding logic programs\",\n        \"Knowledge refactoring for inductive program synthesis\",\n        \"Learning libraries of subroutines for neurally-guided bayesian program induction\",\n        \"Learning explanatory rules from noisy data\",\n        \"Making sense of sensory input\",\n        \"Towards inductive generalization in higher order logic\",\n        \"Learning CNF theories using MDL and predicate invention\",\n        \"Meta-interpretive learning using hex-programs\",\n        \"Statistical predicate invention\",\n        \"A brief history of learning symbolic higher-level representations from data (and a curious look forward)\",\n        \"Transfer learning via relational type matching\",\n        \"Inductive logic programming - techniques and applications\",\n        \"Bias reformulation for one-shot function induction\",\n        \"Foundations of logic programming\",\n        \"The next decade in AI: four steps towards robust artificial intelligence\",\n        \"Making robots conscious of their mental states\",\n        \"Abstraction and analogy-making in artificial intelligence\",\n        \"Machine invention of first order predicates by inverting resolution\",\n        \"ILP turns 20 - biography and future challenges\",\n        \"Meta-interpretive learning of higher-order dyadic datalog: predicate invention revisited\",\n        \"Foundations of Inductive Logic Programming\",\n        \"ILP through propositionalization and stochastic k-term DNF learning\",\n        \"On the use of stochastic local search techniques to revise first-order logic theories from examples\",\n        \"Or-tools\",\n        \"Automatic Methods of Inductive Inference\",\n        \"Learning higher-order logic programs from failures\",\n        \"Interactive concept-learning and constructive induction by analogy\",\n        \"Compressing probabilistic prolog programs\",\n        \"Automated refinement of first-order horn-clause domain theories\",\n        \"Handbook of Constraint Programming (Foundations of Artificial Intelligence)\",\n        \"Human compatible: Artificial intelligence and the problem of control\",\n        \"Abstraction in artificial intelligence and complex systems\",\n        \"Predicate invention for bilevel planning\",\n        \"The sciences of the artificial\",\n        \"FENDER: an approach to theory restructuring (extended abstract)\",\n        \"The ALEPH manual\",\n        \"Unfold/fold transformation of logic programs\",\n        \"Transfer learning\",\n        \"First-order theory refinement\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Learning Logic Programs by Discovering Higher-Order Abstractions, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}