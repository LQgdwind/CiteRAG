{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Uncertainty-Aware Performance Prediction for Highly Configurable Software Systems via Bayesian Neural Networks\n\nPaper Abstract: Abstract Configurable software systems are employed in many important application domains. Understanding the performance of the systems under all configurations is critical to prevent potential performance issues caused by misconfiguration. However, as the number of configurations can be prohibitively large, it is not possible to measure the system performance under all configurations. Thus, a common approach is to build a prediction model from a limited measurement data to predict the performance of all configurations as scalar values. However, it has been pointed out that there are different sources of uncertainty coming from the data collection or the modeling process, which can make the scalar predictions not certainly accurate. To address this problem, we propose a Bayesian deep learning based method, namely BDLPerf, that can incorporate uncertainty into the prediction model. BDLPerf can provide both scalar predictions for configurationsâ€™ performance and the corresponding confidence intervals of these scalar predictions. We also develop a novel uncertainty calibration technique to ensure the reliability of the confidence intervals generated by a Bayesian prediction model. Finally, we suggest an efficient hyperparameter tuning technique so as to train the prediction model within a reasonable amount of time whilst achieving high accuracy. Our experimental results on 10 real-world systems show that BDLPerf achieves higher accuracy than existing approaches, in both scalar performance prediction and confidence interval estimation.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"An empirical study on performance bugs for highly configurable software systems\",\n        \"On debugging the performance of configurable software systems: Developer needs and tailored tool support\",\n        \"Cp-detector: Using configuration-related performance properties to expose performance bugs\",\n        \"Automated energy optimization of HTTP requests for mobile applications\",\n        \"Performance diagnosis for inefficient loops\",\n        \"Energy consumption and efficiency in mobile applications: A user feedback study\",\n        \"Mastering uncertainty in performance estimations of configurable software systems\",\n        \"Performance-influence models for highly configurable systems\",\n        \"Performance prediction of configurable software systems by fourier learning (T)\",\n        \"Data-efficient performance learning for configurable systems\",\n        \"Deepperf: performance prediction for configurable software with deep sparse neural network\",\n        \"Performance-influence model for highly configurable software with fourier learning and lasso regression\",\n        \"Safety, security, and configurable software systems: a systematic mapping study\",\n        \"Uncertainty in deep learning\",\n        \"Dropout as a bayesian approximation: Representing model uncertainty in deep learning\",\n        \"A review of uncertainty quantification in deep learning: Techniques, applications and challenges\",\n        \"Simple and scalable predictive uncertainty estimation using deep ensembles\",\n        \"Aleatoric and epistemic uncertainty in machine learning: an introduction to concepts and methods\",\n        \"Deep Learning\",\n        \"Universal approximation bounds for superpositions of a sigmoidal function\",\n        \"Multilayer feedforward networks are universal approximators\",\n        \"Approximation capabilities of multilayer feedforward networks\",\n        \"On the approximate realization of continuous mappings by neural networks\",\n        \"An introduction to variational methods for graphical models\",\n        \"A practical bayesian framework for backpropagation networks\",\n        \"Bayesian learning for neural networks\",\n        \"Transfer learning for performance modeling of configurable systems: an exploratory analysis\",\n        \"Predicting performance via automated feature-interaction detection\",\n        \"Accurate uncertainties for deep learning using calibrated regression\",\n        \"Probabilistic outputs for support vector machines and comparisons to regularized likelihood methods\",\n        \"Practical bayesian optimization of machine learning algorithms\",\n        \"Pairing an arbitrary regressor with an artificial neural network estimating aleatoric uncertainty\",\n        \"What uncertainties do we need in bayesian deep learning for computer vision?\",\n        \"Hybrid monte carlo\",\n        \"Regression shrinkage and selection via the lasso\",\n        \"On calibration of modern neural networks\",\n        \"Efficient global optimization of expensive black-box functions\",\n        \"The application of bayesian methods for seeking the extremum\",\n        \"Taking the human out of the loop: A review of bayesian optimization\",\n        \"Bayesian optimization is superior to random search for machine learning hyperparameter tuning: Analysis of the black-box optimization challenge 2020\",\n        \"TensorFlow Probability\",\n        \"Adam: A method for stochastic optimization\",\n        \"On information and sufficiency\",\n        \"GPyOpt: A bayesian optimization framework in python\",\n        \"Distance-based sampling of software configuration spaces\",\n        \"P4 project page\",\n        \"The interaction between inputs and configurations fed to software systems: an empirical study\",\n        \"Variability-aware performance prediction: A statistical learning approach\",\n        \"Finding faster configurations using FLASH\",\n        \"Cost-efficient sampling for performance prediction of configurable systems (T)\",\n        \"White-box performance-influence models: A profiling and learning approach\",\n        \"White-box analysis over machine learning: Modeling performance of configurable systems\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Uncertainty-Aware Performance Prediction for Highly Configurable Software Systems via Bayesian Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}