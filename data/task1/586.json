{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A scalable and efficient convolutional neural network accelerator using HLS for a System on Chip design\n\nPaper Abstract: Abstract This paper presents a configurable Convolutional Neural Network Accelerator (CNNA) for a System on Chip design (SoC). The goal was to accelerate inference of different deep learning networks on an embedded SoC platform. The presented CNNA has a scalable architecture which uses High Level Synthesis (HLS) and SystemC for the hardware accelerator. It is able to accelerate any Convolutional Neural Network (CNN) exported from Python and supports a combination of convolutional, max-pooling, and fully connected layers. A training method with fixed-point quantized weights is proposed and presented in the paper. The CNNA is template-based, enabling it to scale for different targets of the Xilinx Zynq platform. This approach enables design space exploration, which makes it possible to explore several configurations of the CNNA during C- and RTL-simulation, fitting it to the desired platform and model. The CNN VGG16 was used to test the solution on a Xilinx Ultra96 board using PYNQ. The result gave a high level of accuracy in training with an auto-scaled fixed-point Q2.14 format compared to a similar floating-point model. It was able to perform inference in 2.02.02.0 seconds, while having an average power consumption of 2.632.632.63 W, which corresponds to a power efficiency of 6.06.06.0 GOPS/W.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"ImageNet classification with deep convolutional neural networks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"You only look once: Unified, real-time object detection\",\n        \"Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks\",\n        \"Mask R-CNN\",\n        \"FPGA-Based accelerators of deep learning networks for learning and classification: A review\",\n        \"A survey of methods for analyzing and improving gpu energy efficiency\",\n        \"A survey of FPGA-based accelerators for convolutional neural networks\",\n        \"Designing efficient accelerator of depthwise separable convolutional neural network on FPGA\",\n        \"Binarized neural networks\",\n        \"FinN-R: An end-to-end deep-learning framework for fast exploration of quantized neural networks\",\n        \"Accelerating binarized neural networks: Comparison of FPGA, CPU, GPU, and ASIC\",\n        \"Accelerating binarized convolutional neural networks with software-programmable fpgas\",\n        \"A Survey and Evaluation of FPGA High-Level Synthesis Tools\",\n        \"A high performance FPGA-based accelerator for large-scale convolutional neural networks\",\n        \"2012 AlexNet\",\n        \"Keras\",\n        \"On how to efficiently implement deep learning algorithms on PYNQ Platform\",\n        \"Ieee standard for standard systemc language reference manual\",\n        \"Accelerating Deep Convolutional Neural Networks Using Specialized Hardware\",\n        \"Zynqnet: An fpga-accelerated embedded convolutional neural network\",\n        \"FINN: A framework for fast, scalable binarized neural network inference\",\n        \"Toolflows for mapping convolutional neural networks on FPGAS: A survey and future directions\",\n        \"FpgaConvNet: A Framework for Mapping Convolutional Neural Networks on FPGAs\",\n        \"FpgaConvNet: Mapping Regular and Irregular Convolutional Neural Networks on FPGAs\",\n        \"From high-level deep neural models to FPGAS\",\n        \"Angel-Eye: A complete design flow for mapping CNN onto embedded FPGA\",\n        \"DeepBurning: Automatic generation of FPGA-based learning accelerators for the neural network family\",\n        \"Caffeine: Towards uniformed representation and acceleration for deep convolutional neural networks\",\n        \"Deep residual learning for weakly-supervised relation extraction\",\n        \"Densely connected convolutional networks\",\n        \"InceptionNet/GoogLeNet - Going Deeper with Convolutions\",\n        \"Pynq: Python productivity for zynq\",\n        \"UG 902 - Vivado Design Suite User Guide - High-Level Synthesis\",\n        \"SystemC Synthesizable Subsets\",\n        \"Exploring ZynqÂ® MPSoC With PYNQ and Machine Learning Applications\",\n        \"UG761 - AXI Reference Guide\",\n        \"Revise saturated activation functions\",\n        \"Fixed-Point Representation & Fractional Math Revison 1.2\",\n        \"Backpropagation neural networks: A tutorial\",\n        \"Training deep neural network in limited precision\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference\",\n        \"Ultra96-v2 developer board\",\n        \"Detect\",\n        \"CIFAR-10 and CIFAR-100 datasets\",\n        \"ImageNet Large Scale Visual Recognition Challenge\",\n        \"Dorefa-Net: Training Low Bitwidth Convolu- Tional Neural Networks With Low Bitwidth Gradients\",\n        \"Zynq ultrascale+ mpsoc zcu104 evaluation kit\",\n        \"SmartShuttle: Optimizing off-chip memory accesses for deep learning accelerators\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in A scalable and efficient convolutional neural network accelerator using HLS for a System on Chip design, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}