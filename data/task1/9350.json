{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Neural Networks based Log Anomaly Detection and Explanation\n\nPaper Abstract: Abstract Event logs are widely used to record the status of high-tech systems, making log anomaly detection important for monitoring those systems. Most existing log anomaly detection methods take a log event count matrix or log event sequences as input, exploiting quantitative and/or sequential relationships between log events to detect anomalies. However, only considering quantitative or sequential relationships may result in low detection accuracy. To alleviate this problem, we propose a graph-based method for unsupervised log anomaly detection, dubbed Logs2Graphs, which first converts event logs into attributed, directed, and weighted graphs, and then leverages graph neural networks to perform graph-level anomaly detection. Specifically, we introduce One-Class Digraph Inception Convolutional Networks, abbreviated as OCDiGCN, a novel graph neural network model for detecting graph-level anomalies in a collection of attributed, directed, and weighted graphs. By integrating graph representation and anomaly detection, OCDiGCN learns a specialized representation that leads to high detection accuracy. Crucially, we furnish a concise set of nodes pivotal in OCDiGCNâ€™s prediction as explanations for each detected anomaly, offering valuable insights for subsequent root cause analysis. Experiments on five benchmark datasets show that Logs2Graphs exhibits comparable or superior performance when compared to state-of-the-art log anomaly detection methods.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"An introduction to outlier analysis\",\n        \"On pixel-wise explanations for non-linear classifier decisions by layer-wise relevance propagation\",\n        \"Fast incremental and personalized pagerank\",\n        \"Recent advances in adversarial training for adversarial robustness\",\n        \"Explainability techniques for graph convolutional networks\",\n        \"Experience report: Deep learning-based system log analysis for anomaly detection\",\n        \"Deeplog: Anomaly detection and diagnosis from system logs through deep learning\",\n        \"Unsupervised log message anomaly detection\",\n        \"Fast graph representation learning with pytorch geometric\",\n        \"Neural message passing for quantum chemistry\",\n        \"Histogram-based outlier score (hbos): A fast unsupervised anomaly detection algorithm\",\n        \"Drain: An online log parsing approach with fixed depth tree\",\n        \"An approach for anomaly diagnosis based on hybrid graph model with logs for distributed services\",\n        \"Graph anomaly detection with graph neural networks: Current status and challenges\",\n        \"Adam: A method for stochastic optimization\",\n        \"Glad: Content-aware dynamic graphs for log anomaly detection\",\n        \"Feature selection for fault detection and prediction based on event log analysis\",\n        \"Explainable contextual anomaly detection using quantile regression forests\",\n        \"A survey on explainable anomaly detection\",\n        \"Log clustering based problem identification for online service systems\",\n        \"Isolation forest\",\n        \"Deep graph-level anomaly detection by glocal knowledge distillation\",\n        \"Loganomaly: Unsupervised detection of sequential and quantitative anomalies in unstructured logs\",\n        \"graph2vec: Learning distributed representations of graphs\",\n        \"Propagation kernels: efficient graph kernels from propagated information\",\n        \"Detecting anomalous graphs in labeled multi-graph databases\",\n        \"Deep learning for anomaly detection: A review\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Glove: Global vectors for word representation\",\n        \"Raising the bar in graph-level anomaly detection\",\n        \"Using tf-idf to determine word relevance in document queries\",\n        \"Deep one-class classification\",\n        \"Estimating the support of a high-dimensional distribution\",\n        \"Layerwise relevance visualization in convolutional text graph classifiers\",\n        \"Weisfeiler-lehman graph kernels\",\n        \"Support vector data description\",\n        \"Digraph inception convolutional networks\",\n        \"Glad-paw: Graph-based log anomaly detection by position aware weighted graph attention network\",\n        \"Loggd: Detecting anomalies from system logs with graph neural networks\",\n        \"How powerful are graph neural networks?\",\n        \"Detecting large-scale system problems by mining console logs\",\n        \"Plelog: Semi-supervised log-based anomaly detection via probabilistic label estimation\",\n        \"Semi-supervised log-based anomaly detection via probabilistic label estimation\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Explainability in graph neural networks: A taxonomic survey\",\n        \"Deeptralog: Trace-log combined microservice anomaly detection through graph-based deep learning\",\n        \"Dual-discriminative graph neural network for imbalanced graph-level anomaly detection\",\n        \"On using classification datasets to evaluate graph outlier detection: Peculiar observations and new insights\",\n        \"Graph anomaly detection with unsupervised gnns\",\n        \"Pyod: A python toolbox for scalable outlier detection\",\n        \"Tools and benchmarks for automated log parsing\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Graph Neural Networks based Log Anomaly Detection and Explanation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}