{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Calipers: A Criticality-aware Framework for Modeling Processor Performance\n\nPaper Abstract: Abstract. Computer architecture design space is vast and complex. Tools are needed to explore new ideas and gain insights quickly, with low efforts and at a desired accuracy. We propose Calipers, a criticality-based framework to model key abstractions of complex architectures and a program’s execution using dynamic event-dependence graphs. By applying graph algorithms, Calipers can track instruction and event dependencies, compute critical paths, and analyze architecture bottlenecks. By manipulating the graph, Calipers enables architects to investigate a wide range of Instruction Set Architecture (ISA) and microarchitecture design choices/“what-if” scenarios during both early- and late-stage design space exploration without recompiling and rerunning the program. Calipers can model in-order and out-of-order microarchitectures, structural hazards, and different types of ISAs, and can evaluate multiple ideas in a single run. Modeling algorithms are described in detail. We apply Calipers to explore and gain insights in complex microarchitectural and ISA ideas for RISC and EDGE processors, at lower effort than cycle-accurate simulators and with comparable accuracy. For example, among a variety of investigations presented in the paper, experiments show that targeting only a fraction of critical loads can help realize most benefits of value prediction.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"C++ set emplace_hint\",\n        \"Google Scholar, gem5\",\n        \"Intel Skylake Microarchitecture\",\n        \"Intel Sunny Cove Microarchitecture\",\n        \"Focused Value Prediction\",\n        \"The Gem5 Simulator\",\n        \"Mechanistic Analytical Modeling of Superscalar In-Order Processor Performance\",\n        \"Scaling to the end of silicon with EDGE architectures\",\n        \"An Evaluation of High-Level Mechanistic Core Models\",\n        \"Computer Architecture Performance Evaluation Methods\",\n        \"A Performance Counter Architecture for Computing Accurate CPI Components\",\n        \"A Mechanistic Performance Model for Superscalar Out-of-Order Processors\",\n        \"Multi-Stage CPI Stacks\",\n        \"Using interaction costs for microarchitectural bottleneck analysis\",\n        \"Slack: maximizing performance under technological constraints\",\n        \"Focusing Processor Policies via Critical-Path Prediction\",\n        \"Interval simulation: Raising the level of abstraction in architectural simulation\",\n        \"The Intel Pentium M processor: Microarchitecture and performance\",\n        \"Performance Modeling and Bottleneck Analysis of EDGE Processors Using Dependence Graphs\",\n        \"Sources of error in full-system simulation\",\n        \"SimPoint 3.0: Faster and More Flexible Program Phase Analysis\",\n        \"GDP: Using Dataflow Properties to Accurately Estimate Interference-Free Performance at Runtime\",\n        \"FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud\",\n        \"Composable Lightweight Processors\",\n        \"Value Locality and Load Value Prediction\",\n        \"The gem5 Simulator: Version 20.0+\",\n        \"Effective Compiler Support for Predicated Execution Using the Hyperblock\",\n        \"Critical path analysis of the TRIPS architecture\",\n        \"Criticality Aware Tiered Cache Hierarchy: A Fundamental Relook at Multi-Level Cache Hierarchies\",\n        \"Exploring the Potential of Heterogeneous von Neumann/Dataflow Execution Models\",\n        \"Studying Hybrid Von-Neumann/Dataﬂow Execution Models\",\n        \"Tuning the Pentium Pro Microarchitecture\",\n        \"Marss-x86: A qemu-based micro-architectural and systems simulator for x86 multicore processors\",\n        \"Compiler-Directed Frequency and Voltage Scaling for a Multiple Clock Domain Microarchitecture\",\n        \"Evaluation of Dynamic Voltage and Frequency Scaling for Stream Programs\",\n        \"Exploiting criticality to reduce bottlenecks in distributed uniprocessors\",\n        \"End-to-End Performance Forecasting: Finding Bottlenecks before They Happen\",\n        \"Accurate Critical Path Prediction via Random Trace Construction\",\n        \"A criticality analysis of clustering in superscalar processors\",\n        \"ZSim: Fast and Accurate Microarchitectural Simulation of Thousand-Core Systems\",\n        \"Efficient Load Value Prediction Using Multiple Predictors and Filters\",\n        \"Enhanced Dependence Graph Model for Critical Path Analysis on Modern Out-of-Order Processors\",\n        \"The RISC-V Instruction Set Manual, Volume I: User-Level ISA, Version 2.0\",\n        \"SimFlex: Fast, accurate and flexible simulation of computer systems\",\n        \"A Top-Down method for performance analysis and counters architecture\",\n        \"PTLsim: A Cycle Accurate Full System x86-64 Microarchitectural Simulator\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Calipers: A Criticality-aware Framework for Modeling Processor Performance, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}