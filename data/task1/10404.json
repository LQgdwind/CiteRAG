{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: YTCommentQA: Video Question Answerability in Instructional Videos\n\nPaper Abstract: Abstract Instructional videos provide detailed how-to guides for various tasks, with viewers often posing questions regarding the content. Addressing these questions is vital for comprehending the content, yet receiving immediate answers is difficult. While numerous computational models have been developed for Video Question Answering (Video QA) tasks, they are primarily trained on questions generated based on video content, aiming to produce answers from within the content. However, in real-world situations, users may pose questions that go beyond the video’s informational boundaries, highlighting the necessity to determine if a video can provide the answer. Discerning whether a question can be answered by video content is challenging due to the multi-modal nature of videos, where visual and verbal information are intertwined. To bridge this gap, we present the YTCommentQA dataset, which contains naturally-generated questions from YouTube, categorized by their answerability and required modality to answer – visual, script, or both. Experiments with answerability classification tasks demonstrate the complexity of YTCommentQA and emphasize the need to comprehend the combined role of visual and script information in video reasoning. The dataset is available at https://github.com/lgresearch/YTCommentQA.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"MS MARCO: A Human Generated MAchine Reading COmprehension Dataset\",\n        \"LifeQA: A Real-life Dataset for Video Question Answering\",\n        \"In-the-Wild Video Question Answering\",\n        \"DemoCut: Generating Concise Instructional Videos for Physical Demonstrations\",\n        \"QuAC: Question Answering in Context\",\n        \"TutorialVQA: Question Answering Dataset for Tutorial Videos\",\n        \"FlashAttention: Fast and Memory-Efficient Exact Attention with IO-Awareness\",\n        \"KnowIT VQA: Answering Knowledge-Based Questions about Videos\",\n        \"YouTube Data API\",\n        \"AGQA: A Benchmark for Compositional Spatio-Temporal Reasoning\",\n        \"VizWiz Grand Challenge: Answering Visual Questions from Blind People\",\n        \"Read + Verify: Machine Reading Comprehension with Unanswerable Questions\",\n        \"Finding ”It”: Weakly-Supervised Reference-Aware Visual Grounding in Instructional Videos\",\n        \"Video Question Answering with Spatio-Temporal Reasoning\",\n        \"question-vs-statement-classifier from huggingface\",\n        \"Vision And Text Transformer For Predicting Answerability On Visual Question Answering\",\n        \"TVQA: Localized, Compositional Video Question Answering\",\n        \"VideoChat: Chat-Centric Video Understanding\",\n        \"Hero: Hierarchical Encoder for Video+Language Omni-representation Pre-training\",\n        \"A classification scheme for content analyses of YouTube video comments\",\n        \"The Promise of Premise: Harnessing Question Premises in Visual Question Answering\",\n        \"HowTo100M: Learning a Text-Video Embedding by Watching Hundred Million Narrated Video Clips\",\n        \"RVT-Transformer: Residual Attention in Answerability Prediction on Visual Question Answering for Blind People\",\n        \"Towards Interpretable and Reliable Reading Comprehension: A Pipeline Model with Unanswerability Prediction\",\n        \"Bert-restore-punctuation model from huggingface\",\n        \"ChatGPT\",\n        \"GPT-4 Technical Report\",\n        \"Analyzing User Comments on YouTube Coding Tutorial Videos\",\n        \"Prolific\",\n        \"Know What You Don’t Know: Unanswerable Questions for SQuAD\",\n        \"Question Relevance in VQA: Identifying Non-Visual And False-Premise Questions\",\n        \"CoQA: A Conversational Question Answering Challenge\",\n        \"language-detection\",\n        \"vit-gpt2-image-captioning from huggingface\",\n        \"RoFormer: Enhanced Transformer with Rotary Position Embedding\",\n        \"MovieQA: Understanding Stories in Movies through Question-Answering\",\n        \"Tesseract OCR\",\n        \"Question Part Relevance and Editing for Cooperative and Context-Aware VQA (C2VQA)\",\n        \"Llama 2: Open Foundation and Fine-Tuned Chat Models\",\n        \"NewsQA: A Machine Comprehension Dataset\",\n        \"NExT-QA: Next Phase of Question-Answering to Explaining Temporal Actions\",\n        \"Just Ask: Learning to Answer Questions from Millions of Narrated Videos\",\n        \"Zero-Shot Video Question Answering via Frozen Bidirectional Language Models\",\n        \"BERT Representations for Video Question Answering\",\n        \"”Can You Believe [1:21]?!”: Content and Time-Based Reference Patterns in Video Comments\",\n        \"Video Question Answering via Attribute-Augmented Attention Network Learning\",\n        \"Self-Chained Image-Language Model for Video Localization and Question Answering\",\n        \"ActivityNet-QA: A Dataset for Understanding Complex Web Videos via Question Answering\",\n        \"MERLOT: Multimodal Neural Script Knowledge Models\",\n        \"Video Question Answering on Screencast Tutorials\",\n        \"Video Question Answering: Datasets, Algorithms and Challenges\",\n        \"Learning to Ask Unanswerable Questions for Machine Reading Comprehension\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in YTCommentQA: Video Question Answerability in Instructional Videos, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}