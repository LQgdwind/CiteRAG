{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: An Imitation Learning Approach for Cache Replacement\n\nPaper Abstract: Abstract Program execution speed critically depends on increasing cache hits, as cache hits are orders of magnitude faster than misses. To increase cache hits, we focus on the problem of cache replacement: choosing which cache line to evict upon inserting a new line. This is challenging because it requires planning far ahead and currently there is no known practical solution. As a result, current replacement policies typically resort to heuristics designed for specific common access patterns, which fail on more diverse and complex access patterns. In contrast, we propose an imitation learning approach to automatically learn cache access patterns by leveraging Belady’s, an oracle policy that computes the optimal eviction decision given the future cache accesses. While directly applying Belady’s is infeasible since the future is unknown, we train a policy conditioned only on past accesses that accurately approximates Belady’s even on diverse and complex access patterns, and call this approach Parrot. When evaluated on 13 of the most memory-intensive SPEC applications, Parrot increases cache miss rates by 20% over the current state of the art. In addition, on a large-scale web search benchmark, Parrot increases cache hit rates by 61% over a conventional LRU policy. We release a Gym environment to facilitate research in this area, as data is plentiful, and further advancements can have significant real-world impact.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Maximizing cache performance under uncertainty\",\n        \"A study of replacement algorithms for a virtual-storage computer\",\n        \"Scheduled sampling for sequence prediction with recurrent neural networks\",\n        \"An infrastructure for adaptive dynamic optimization\",\n        \"Adaptive information gathering via imitation learning\",\n        \"Cliffhanger: Scaling performance cliffs in web memory caches\",\n        \"Search-based structured prediction\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Application-controlled physical memory using external page-cache management\",\n        \"Learning memory access patterns\",\n        \"SPEC CPU2006 benchmark descriptions\",\n        \"Deep Q-learning from demonstrations\",\n        \"Distilling the knowledge in a neural network\",\n        \"Playing Atari games with deep reinforcement learning and human checkpoint replay\",\n        \"Reinforcement learning with unsupervised auxiliary tasks\",\n        \"Back to the future: Leveraging Belady’s algorithm for improved cache replacement\",\n        \"Memory characterization of workloads using instrumentation-driven simulation\",\n        \"High performance cache replacement using re-reference interval prediction (RRIP)\",\n        \"Pruning versus clipping in neural networks\",\n        \"Improving direct-mapped cache performance by the addition of a small fully-associative cache and prefetch buffers\",\n        \"Sampling dead block prediction for last-level caches\",\n        \"Adam: A method for stochastic optimization\",\n        \"On information and sufficiency\",\n        \"Playing FPS games with deep reinforcement learning\",\n        \"Addressing the rare word problem in neural machine translation\",\n        \"Effective approaches to attention-based neural machine translation\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"Learning to navigate in complex environments\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"Alvinn: An autonomous land vehicle in a neural network\",\n        \"A general approximation framework for direct optimization of information retrieval measures\",\n        \"A case for mlp-aware cache replacement\",\n        \"Adaptive insertion policies for high performance caching\",\n        \"Reinforcement and imitation learning via interactive no-regret learning\",\n        \"A reduction of imitation learning and structured prediction to no-regret online learning\",\n        \"Optimal completion distillation for sequence learning\",\n        \"Bidirectional attention flow for machine comprehension\",\n        \"Applying deep learning to the cache replacement problem\",\n        \"Learning execution through neural code fusion\",\n        \"Deeply aggrevated: Differentiable imitation learning for sequential prediction\",\n        \"Efficient processing of deep neural networks: A tutorial and survey\",\n        \"Attention is all you need\",\n        \"Leveraging demonstrations for deep reinforcement learning on robotics problems with sparse rewards\",\n        \"Learning caching policies with subsampling\",\n        \"Ship: Signature-based hit predictor for high performance caching\",\n        \"Characterizing Facebook’s memcached workload\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in An Imitation Learning Approach for Cache Replacement, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}