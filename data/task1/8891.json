{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning-Based Automatic Synthesis of Software Code and Configuration\n\nPaper Abstract: Abstract Increasing demands in software industry and scarcity of software engineers motivates researchers and practitioners to automate the process of software generation and configuration. Large scale automatic software generation and configuration is a very complex and challenging task. In this proposal, we set out to investigate this problem by breaking down automatic software generation and configuration into two different tasks. In first task, we propose to synthesize software automatically with input output specifications. This task is further broken down into two sub-tasks. The first sub-task is about synthesizing programs with a genetic algorithm which is driven by a neural network based fitness function trained with program traces and specifications. For the second sub-task, we formulate program synthesis as a continuous optimization problem and synthesize programs with covariance matrix adaption evolutionary strategy (a state-of-the-art continuous optimization method). Finally, for the second task, we propose to synthesize configurations of large scale software from different input files (e.g. software manuals, configurations files, online blogs, etc.) using a sequence-to-sequence deep learning mechanism.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DeepCoder: Learning to Write Programs\",\n        \"Learning fitness functions for machine programming\",\n        \"AI Programmer: Autonomously Creating Software Programs Using Genetic Algorithms\",\n        \"Stack-based genetic programming\",\n        \"Synthesizing programs with continuous optimization\",\n        \"LINQ to SQL: .NET Language-Integrated Query for Relational Data\",\n        \"Global Optimization Algorithms-Theory and Application\",\n        \"Genetic Algorithms in Search, Optimization and Machine Learning\",\n        \"Compiler Techniques for Code Compaction\",\n        \"Speech and language processing : an introduction to natural language processing, computational linguistics, and speech recognition\",\n        \"The CMA Evolution Strategy: A Tutorial\",\n        \"A restart cma evolution strategy with increasing population size\",\n        \"Benchmarking a bi-population cma-es on the bbob-2009 function testbed\",\n        \"Attention is all you need\",\n        \"Knowledge and Reasoning in Program Synthesis\",\n        \"Relational program synthesis\",\n        \"Spreadsheet Data Manipulation Using Examples\",\n        \"Syntax-Guided Synthesis\",\n        \"Program Synthesis Using Conflict-driven Learning\",\n        \"Stratified Synthesis: Automatically Learning the x86-64 Instruction Set\",\n        \"Algorithmic Program Synthesis: Introduction\",\n        \"Combinatorial Sketching for Finite Programs\",\n        \"Generalized Data Structure Synthesis\",\n        \"Using Program Synthesis for Social Recommendations\",\n        \"Machine Learning: A Probabilistic Perspective\",\n        \"Leveraging grammar and reinforcement learning for neural program synthesis\",\n        \"Neuro-symbolic program synthesis\",\n        \"Program synthesis using deduction-guided reinforcement learning\",\n        \"RobustFill: Neural Program Learning under Noisy I/O\",\n        \"Neural-guided deductive search for real-time program synthesis from examples\",\n        \"Improving neural program synthesis with inferred execution traces\",\n        \"Execution-guided neural program synthesis\",\n        \"Neural program search: Solving data processing tasks from description and examples\",\n        \"Learning to infer program sketches\",\n        \"Automatic Program Synthesis of Long Programs with a Learned Garbage Collector\",\n        \"Code Completion with Statistical Language Models\",\n        \"Optimal neural program synthesis from multimodal specifications\",\n        \"Neural Programmer-Interpreters\",\n        \"Making Neural Programming Architectures Generalize via Recursion\",\n        \"Towards synthesizing complex programs from input-output examples\",\n        \"On Linear Genetic Programming\",\n        \"Foundations of Genetic Programming\",\n        \"Regularized Evolution for Image Classifier Architecture Search\",\n        \"Learning Multiple Layers of Features from Tiny Images\",\n        \"ImageNet: A Large-Scale Hierarchical Image Database\",\n        \"Evolution Strategies as a Scalable Alternative to Reinforcement Learning\",\n        \"Deep Neuroevolution: Genetic Algorithms Are a Competitive Alternative for Training Deep Neural Networks for Reinforcement Learning\",\n        \"Hierarchical Representations for Efficient Architecture Search\",\n        \"Evolv Delivers Autonomous Optimization Across Web & Mobile\",\n        \"Automl-zero: Evolving machine learning algorithms from scratch\",\n        \"Application of machine learning algorithms to flow modeling and optimization\",\n        \"Drag reduction and shape optimization of airship bodies\",\n        \"Advanced high turning compressor airfoils for low reynolds number conditionâ€”part i: Design and optimization\",\n        \"Registration of bone surfaces, extracted from CT-datasets, with 3d ultrasound\",\n        \"CMA-ES Applications\",\n        \"Large language models based automatic synthesis of software specifications\",\n        \"Synthesizing configuration file specifications with association rule learning\",\n        \"Mining configuration constraints: Static analyses and empirical results\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Learning-Based Automatic Synthesis of Software Code and Configuration, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}