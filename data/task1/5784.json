{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AutoField: Automating Feature Selection in Deep Recommender Systems\n\nPaper Abstract: Abstract. Feature quality has an impactful effect on recommendation performance. Thereby, feature selection is a critical process in developing deep learning-based recommender systems. Most existing deep recommender systems, however, focus on designing sophisticated neural networks, while neglecting the feature selection process. Typically, they just feed all possible features into their proposed deep architectures, or select important features manually by human experts. The former leads to non-trivial embedding parameters and extra inference time, while the latter requires plenty of expert knowledge and human labor effort. In this work, we propose an AutoML framework that can adaptively select the essential feature fields in an automatic manner. Specifically, we first design a differentiable controller network, which is capable of automatically adjusting the probability of selecting a particular feature field; then, only selected feature fields are utilized to retrain the deep recommendation model. Extensive experiments on three benchmark datasets demonstrate the effectiveness of our framework. We conduct further experiments to investigate its properties, including the transferability, key components, and parameter sensitivity.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hierarchical optimization: An introduction\",\n        \"Representation learning: A review and new perspectives\",\n        \"Random search for hyper-parameter optimization\",\n        \"Arcing the edge\",\n        \"Wide & deep learning for recommender systems\",\n        \"AutoFS: Automated Feature selection via diversity-aware interactive reinforcement learning\",\n        \"Feature selection using lasso\",\n        \"The elements of statistical learning: Data mining, inference, and prediction\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"Statistical theory of extreme values and some practical applications: a series of lectures\",\n        \"DeepFM: a factorization-machine based neural network for CTR prediction\",\n        \"An introduction to variable and feature selection\",\n        \"Correlation-based feature selection for machine learning\",\n        \"Neural factorization machines for sparse predictive analytics\",\n        \"Neural collaborative filtering\",\n        \"A practical guide to training restricted Boltzmann machines\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"Improved differentiable architecture search for language modeling and named entity recognition\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree\",\n        \"Wrappers for feature subset selection\",\n        \"NEU: A Meta-Algorithm for Universal UAP-Invariant Feature Representation\",\n        \"xdeepfm: Combining explicit and implicit feature interactions for recommender systems\",\n        \"Autofis: Automatic feature interaction selection in factorization models for click-through rate prediction\",\n        \"Darts: Differentiable architecture search\",\n        \"Automated Embedding Size Search in Deep Recommender Systems\",\n        \"Automating feature subspace exploration via multi-agent reinforcement learning\",\n        \"Automated feature selection: A reinforcement learning perspective\",\n        \"An experimental evaluation of point-of-interest recommendation in location-based social networks\",\n        \"Autocross: Automatic feature crossing for tabular data in real-world applications\",\n        \"Machine learning\",\n        \"The prediction error in CLS and PLS: the importance of feature selection prior to multivariate calibration\",\n        \"Scikit-learn: Machine Learning in Python\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"Product-based neural networks for user response prediction\",\n        \"Factorization machines\",\n        \"Collaborative filtering recommender systems\",\n        \"Autoint: Automatic feature interaction learning via self-attentive neural networks\",\n        \"Regression shrinkage and selection via the lasso\",\n        \"Deep & cross network for ad click predictions\",\n        \"Principal component analysis\",\n        \"A Comparative Study on Feature Selection in Text Categorization\",\n        \"Taking human out of learning applications: A survey on automated machine learning\",\n        \"Feature selection for high-dimensional data: A fast correlation-based filter solution\",\n        \"Deep learning based recommender system: A survey and new perspectives\",\n        \"AutoLoss: Automated Loss Function Search in Recommendations\",\n        \"Autoemb: Automated embedding dimensionality search in streaming recommendations\",\n        \"AutoDim: Field-aware Embedding Dimension Searchin Recommender Systems\",\n        \"Simplifying reinforced feature selection via restructured choice strategy of single agent\",\n        \"User preference learning for online social recommendation\",\n        \"Social-aware movie recommendation via multimodal network learning\",\n        \"Neural Architecture Search with Reinforcement Learning\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in AutoField: Automating Feature Selection in Deep Recommender Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}