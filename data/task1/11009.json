{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Algorithmic progress in language models\n\nPaper Abstract: Abstract We investigate the rate at which algorithms for pre-training language models have improved since the advent of deep learning. Using a dataset of over 200 language model evaluations on Wikitext and Penn Treebank spanning 2012-2023, we find that the compute required to reach a set performance threshold has halved approximately every 8 months, with a 95% confidence interval of around 5 to 14 months, substantially faster than hardware gains per Mooreâ€™s Law. We estimate augmented scaling laws, which enable us to quantify algorithmic progress and determine the relative contributions of scaling models versus innovations in training algorithms. Despite the rapid pace of algorithmic progress and the development of new architectures such as the transformer, our analysis reveals that the increase in compute made an even larger contribution to overall performance improvements over this time period. Though limited by noisy benchmark data, our analysis quantifies the rapid progress in language modeling, shedding light on the relative contributions from compute and algorithms.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Neuro-symbolic language modeling with automaton-augmented retrieval\",\n        \"Adaptive Input Representations for Neural Language Modeling\",\n        \"A brief history of linear and mixed-integer programming computation\",\n        \"Language Models are Few-Shot Learners\",\n        \"Palm: Scaling language modeling with pathways\",\n        \"Training Verifiers to Solve Math Word Problems\",\n        \"FlashAttention: Fast and Memory-Efficient Exact Attention with IO-Awareness\",\n        \"What a compute-centric framework says about AI takeoff speeds\",\n        \"AI capabilities can be significantly improved without expensive retraining\",\n        \"Measuring progress in deep reinforcement learning sample efficiency\",\n        \"Scaling Laws for Acoustic Models\",\n        \"Algorithmic progress in computer vision\",\n        \"A time leap challenge for SAT-solving\",\n        \"The Pile: An 800GB dataset of diverse text for language modeling\",\n        \"A framework for few-shot language model evaluation\",\n        \"Gemini 1.5: Unlocking multimodal understanding across millions of tokens of context\",\n        \"Mamba: Linear-Time Sequence Modeling with Selective State Spaces\",\n        \"Textbooks Are All You Need\",\n        \"Measuring the algorithmic efficiency of neural networks\",\n        \"Training Compute-Optimal Large Language Models\",\n        \"Towards Reasoning in Large Language Models: A Survey\",\n        \"Perplexity of fixed-length models\",\n        \"A survey on neural network language models\",\n        \"Challenges and applications of large language models\",\n        \"Scaling laws for neural language models\",\n        \"Deep Neural Nets: 33 years ago and 33 years from now\",\n        \"Progress in mathematical programming solvers from 2001 to 2020\",\n        \"AlphaCode 2 Technical Report\",\n        \"Backpropagation applied to handwritten zip code recognition\",\n        \"Competition-level code generation with alphacode\",\n        \"World Model on Million-Length Video And Language With RingAttention\",\n        \"When less is more: Investigating data pruning for pretraining llms at scale\",\n        \"Pointer sentinel mixture models\",\n        \"Augmented language models: a survey\",\n        \"Scaling Data-Constrained Language Models\",\n        \"GPT-4 Technical Report\",\n        \"GPT-4 Architecture, Infrastructure, Training Dataset, Costs, Vision, MoE\",\n        \"Language Models are Unsupervised Multitask Learners\",\n        \"Scaling Language Models: Methods, Analysis & Insights from Training Gopher\",\n        \"Estimating training compute of Deep Learning models\",\n        \"Fast transformer decoding: One write-head is all you need\",\n        \"How fast do algorithms improve?[point of view]\",\n        \"Beyond neural scaling laws: beating power law scaling via data pruning\",\n        \"A survey of pretrained language models\",\n        \"Direct Output Connection for a High-Rank Language Model\",\n        \"Scaling Laws vs Model Architectures: How does Inductive Bias Influence Scaling?\",\n        \"The Penn treebank: an overview\",\n        \"Solving olympiad geometry without human demonstrations\",\n        \"Attention is All you Need\",\n        \"In the long (context) run\",\n        \"Language models with transformers\",\n        \"Effective Long-Context Scaling of Foundation Models\",\n        \"A survey of large language models\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Algorithmic progress in language models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}