{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SPEED: A Scalable RISC-V Vector Processor Enabling Efficient Multi-Precision DNN Inference\n\nPaper Abstract: Abstract Deploying deep neural networks (DNNs) on those resource-constrained edge platforms is hindered by their substantial computation and storage demands. Quantized multi-precision DNNs, denoted as MP-DNNs, offer a promising solution for these limitations but pose challenges for existing RISC-V processors due to complex instructions, suboptimal parallel processing, and inefficient dataflow mapping. To tackle the challenges mentioned above, SPEED, a scalable RISC-V vector (RVV) processor, is proposed to enable efficient MP-DNN inference, incorporating innovations in customized instructions, hardware architecture, and dataflow mapping. Firstly, some dedicated customized RISC-V instructions are introduced based on RVV extensions to reduce the instruction complexity, allowing SPEED to support processing precision ranging from 4-bit to 16-bit with minimized hardware overhead. Secondly, a parameterized multi-precision tensor unit is developed and integrated within the scalable module to enhance parallel processing capability by providing reconfigurable parallelism that matches the computation patterns of diverse MP-DNNs. Finally, a flexible mixed dataflow method is adopted to improve computational and energy efficiency according to the computing patterns of different DNN operators. The synthesis of SPEED is conducted on TSMC 28nm technology. Experimental results show that SPEED achieves a peak throughput of 737.9 GOPS and an energy efficiency of 1383.4 GOPS/W for 4-bit operators. Furthermore, SPEED exhibits superior area efficiency compared to prior RVV processors, with enhancements of 5.9∼similar-to\\sim26.9×\\times and 8.2∼similar-to\\sim18.5×\\times for 8-bit operator and best integer performance, respectively, which highlights SPEED’s significant potential for efficient MP-DNN inference.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Dynamic DETR: End-to-End Object Detection with Dynamic Attention\",\n        \"BoxeR: Box-Attention for 2D and 3D Transformers\",\n        \"Unsupervised Cross-Lingual Speech Emotion Recognition Using Domain Adversarial Neural Network\",\n        \"Language Adaptive Cross-Lingual Speech Representation Learning with Sparse Sharing Sub-Networks\",\n        \"Attention is All You Need\",\n        \"Language Models are Few-Shot Learners\",\n        \"BEBERT: Efficient and Robust Binary Ensemble BERT\",\n        \"An Efficient Hardware Accelerator for Sparse Transformer Neural Networks\",\n        \"HAQ: Hardware-Aware Automated Quantization With Mixed Precision\",\n        \"Multi-Precision Deep Neural Network Acceleration on FPGAs\",\n        \"A Precision-Scalable RISC-V DNN Processor with On-Device Learning Capability at the Extreme Edge\",\n        \"Explicit Loss-error-aware Quantization for Low-bit Deep Neural Networks\",\n        \"Accurate and Efficient Fixed Point Inference for Deep Neural Networks\",\n        \"Compensated-DNN: Energy Efficient Low-Precision Deep Neural Networks by Compensating Quantization Errors\",\n        \"An Energy-Efficient Reconfigurable Processor for Binary-and Ternary-Weight Neural Networks With Flexible Data Bit Width\",\n        \"FBNet: Hardware-Aware Efficient ConvNet Design via Differentiable Neural Architecture Search\",\n        \"A Precision-Scalable Energy-Efficient Bit-Split-and-Combination Vector Systolic Accelerator for NAS-Optimized DNNs on Edge\",\n        \"UNPU: An Energy-Efficient Deep Neural Network Accelerator With Fully Variable Weight Bit Precision\",\n        \"GANPU: An Energy-Efficient Multi-DNN Training Processor for GANs With Speculative Dual-Sparsity Exploitation\",\n        \"DianNao Family: Energy-Efficient Hardware Accelerators for Machine Learning\",\n        \"Cambricon: An Instruction Set Architecture for Neural Networks\",\n        \"A Flexible and Efficient FPGA Accelerator for Various Large-scale and Lightweight CNNs\",\n        \"XpulpNN: Enabling Energy Efficient and Flexible Inference of Quantized Neural Networks on RISC-V Based IoT End Nodes\",\n        \"Near-threshold RISC-V Core with DSP Extensions for Scalable IoT Endpoint Devices\",\n        \"GAP-8: A RISC-V SoC for AI at the Edge of the IoT\",\n        \"Towards Developing High Performance RISC-V Processors Using Agile Methodology\",\n        \"Vega: A Ten-Core SoC for IoT Endnodes With DNN Acceleration and Cognitive Wake-Up From MRAM-Based State-Retentive Sleep Mode\",\n        \"DARKSIDE: A Heterogeneous RISC-V Compute Cluster for Extreme-Edge On-Chip DNN Inference and Training\",\n        \"Dustin: A 16-Cores Parallel Ultra-Low-Power Cluster With 2b-to-32b Fully Flexible Bit-Precision and Vector Lockstep Execution Mode\",\n        \"RISC-V ‘V’ Vector Extension\",\n        \"Design of the RISC-V Instruction Set Architecture\",\n        \"A “New Ara” for Vector Computing: An Open Source Highly Efficient RISC-V V 1.0 Vector Processor Design\",\n        \"Yun: An Open-Source, 64-Bit RISC-V-Based Vector Processor With Multi-Precision Integer and Floating-Point Support in 65-nm CMOS\",\n        \"Quark: An Integer RISC-V Vector Processor for Sub-Byte Quantized DNN Inference\",\n        \"Sparq: A Custom RISC-V Vector Processor for Efficient Sub-Byte Quantized Inference\",\n        \"Ara: A 1-GHz+ Scalable and Energy-Efficient RISC-V Vector Processor With Multiprecision Floating-Point Support in 22-nm FD-SOI\",\n        \"HIPU: A Hybrid Intelligent Processing Unit With Fine-Grained ISA for Real-Time Deep Neural Network Inference Applications\",\n        \"PCONV: The Missing but Desirable Sparsity in DNN Weight Pruning for Real-Time Execution on Mobile Devices\",\n        \"Very deep convolutional neural network based image classification using small training sample size\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"MobileNetV2: Inverted Residuals and Linear Bottlenecks\",\n        \"An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale\",\n        \"XLNet: Generalized Autoregressive Pretraining for Language Understanding\",\n        \"DynamicViT: Efficient Vision Transformers with Dynamic Token Sparsification\",\n        \"An Algorithm–Hardware Co-optimized Framework for Accelerating N:M Sparse Transformers\",\n        \"GPT3.int8(): 8-bit Matrix Multiplication for Transformers at Scale\",\n        \"Amoeba: An Efficient and Flexible FPGA-Based Accelerator for Arbitrary-Kernel CNNs\",\n        \"RISC-V GNU Compiler Toolchain\",\n        \"RISC-V LLVM Compiler Toolchain\",\n        \"Going deeper with convolutions\",\n        \"Tokens-to-Token ViT: Training Vision Transformers from Scratch on ImageNet\",\n        \"Multi-Bank On-Chip Memory Management Techniques for CNN Accelerators\",\n        \"EIE: Efficient Inference Engine on Compressed Deep Neural Network\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in SPEED: A Scalable RISC-V Vector Processor Enabling Efficient Multi-Precision DNN Inference, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}