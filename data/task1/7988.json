{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Frameworks for SNNs: a Review of Data Science-oriented Software and an Expansion of SpykeTorch\n\nPaper Abstract: Abstract Developing effective learning systems for Machine Learning (ML) applications in the Neuromorphic (NM) field requires extensive experimentation and simulation. Software frameworks aid and ease this process by providing a set of ready-to-use tools that researchers can leverage. The recent interest in NM technology has seen the development of several new frameworks that do this, and that add up to the panorama of already existing libraries that belonged to neuroscience fields. This work reviews 9 frameworks for the development of Spiking Neural Networks (SNNs) that are specifically oriented towards data science applications. We emphasize the availability of spiking neuron models and learning rules to more easily direct decisions on the most suitable frameworks to carry out different types of research. Furthermore, we present an extension to the SpykeTorch framework that gives users access to a much broader choice of neuron models to embed in SNNs and make the code publicly available.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Caffe\",\n        \"Opportunities for neuromorphic computing algorithms and applications\",\n        \"A preliminary analysis on software frameworks for the development of spiking neural networks\",\n        \"Efficient neuromorphic signal processing with loihi 2\",\n        \"Efficient neuromorphic signal processing with resonator neurons\",\n        \"Simple and complex spiking neurons: perspectives and analysis in a simple stdp scenario\",\n        \"SpykeTorch: Efficient simulation of convolutional spiking neural networks with at most one spike per neuron\",\n        \"BindsNET: A machine learning-oriented spiking neural networks library in python\",\n        \"A review of basic software for brain-inspired computing\",\n        \"Nengo: a python tool for building large-scale functional brain models\",\n        \"A technical overview of the neural engineering framework\",\n        \"Recherches quantitatives sur l’excitation electrique des nerfs traitée comme une polarization\",\n        \"Simple model of spiking neurons\",\n        \"Simplified neuron model as a principal component analyzer\",\n        \"Theory for the development of neuron selectivity: orientation specificity and binocular interaction in visual cortex\",\n        \"Conversion of continuous-valued deep networks to efficient event-driven networks for image classification\",\n        \"Lasagne: First release.\",\n        \"PyNN: a common interface for neuronal network simulators\",\n        \"Brian 2, an intuitive and efficient neural simulator\",\n        \"Modular event-driven growing asynchronous simulator (megasim)\",\n        \"SpiNNaker: A Spiking Neural Network Architecture\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"Lava: A software framework for neuromorphic computing\",\n        \"SLAYER: Spike layer error reassignment in time\",\n        \"Resonate-and-fire neurons\",\n        \"Neuronal Dynamics\",\n        \"Sigma-delta modulation neural networks\",\n        \"Norse - A deep learning library for spiking neural networks, January 2021.\",\n        \"Long short-term memory and learning-to-learn in networks of spiking neurons\",\n        \"Long short-term memory\",\n        \"Unsupervised learning of visual features through spike timing dependent plasticity\",\n        \"Superspike: Supervised learning in multilayer spiking neural networks\",\n        \"Pysnn\",\n        \"Reinforcement learning through modulation of spike-timing-dependent synaptic plasticity\",\n        \"Training spiking neural networks using lessons from deep learning\",\n        \"Converting static image datasets to spiking neuromorphic datasets using saccades\",\n        \"A low power, fully event-based gesture recognition system\",\n        \"The heidelberg spiking data sets for the systematic evaluation of spiking neural networks\",\n        \"Spikingjelly\",\n        \"How spike generation mechanisms determine the neuronal response to fluctuating inputs\",\n        \"Cifar10-dvs: An event-stream dataset for object classification\",\n        \"A 240 × 180 130 db 3 µs latency global shutter spatiotemporal vision sensor\",\n        \"Parabolic bursting in an excitable system coupled with a slow oscillation\",\n        \"Adaptive exponential integrate-and-fire model as an effective description of neuronal activity\",\n        \"Keys to accurate feature extraction using residual spiking neural networks\",\n        \"First-spike-based visual categorization using reward-modulated STDP\",\n        \"Spiking deep networks with lif neurons\",\n        \"Human-inspired neurorobotic system for classifying surface textures by touch\",\n        \"Accelerated analog neuromorphic computing\",\n        \"The application perspective of izhikevich spiking neural model – the initial experimental study\",\n        \"Review of handwritten pattern recognition of digits and special characters using feed forward neural network and izhikevich neural model\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Frameworks for SNNs: a Review of Data Science-oriented Software and an Expansion of SpykeTorch, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}