{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Locally Regularized Neural Differential Equations: Some Black Boxes Were Meant to Remain Closed!\n\nPaper Abstract: Abstract Implicit layer deep learning techniques, like Neural Differential Equations, have become an important modeling framework due to their ability to adapt to new problems automatically. Training a neural differential equation is effectively a search over a space of plausible dynamical systems. However, controlling the computational cost for these models is difficult since it relies on the number of steps the adaptive solver takes. Most prior works have used higher-order methods to reduce prediction timings while greatly increasing training time or reducing both training and prediction timings by relying on specific training algorithms, which are harder to use as a drop-in replacement due to strict requirements on automatic differentiation. In this manuscript, we use internal cost heuristics of adaptive differential equation solvers at stochastic time-points to guide the training towards learning a dynamical system that is easier to integrate. We “close the blackbox” and allow the use of our method with any adjoint technique for gradient calculations of the differential equation solution. We perform experimental studies to compare our method to global regularization to show that we attain similar performance numbers without compromising on the flexibility of implementation on ordinary differential equations (ODEs) and stochastic differential equations (SDEs). We develop two sampling strategies to trade-off between performance and training time. Our method reduces the number of function evaluations to 0.556×−0.733×\\mathit{0.556\\times-0.733\\times} and accelerates predictions by 1.3×−2×\\mathit{1.3\\times-2\\times}.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Accelerating simulation of stiff nonlinear systems using continuous-time echo state networks\",\n        \"Computer methods for ordinary differential equations and differential-algebraic equations, volume 61\",\n        \"Deep equilibrium models\",\n        \"Multiscale Deep Equilibrium Models\",\n        \"Steer: simple temporal regularization for neural odes\",\n        \"Julia: A fresh approach to numerical computing\",\n        \"The laplacian pyramid as a compact image code\",\n        \"Attention to scale: Scale-aware semantic image segmentation\",\n        \"Deeplab: Semantic image segmentation with deep convolutional nets, atrous convolution, and fully connected crfs\",\n        \"Neural ordinary differential equations\",\n        \"Physionet 2012 challenge: Predicting mortality of icu patients using a cascaded svm-glm paradigm\",\n        \"The data-flow equations of checkpointing in reverse automatic differentiation\",\n        \"Taylor-lagrange neural ordinary differential equations: Toward fast training and evaluation of neural odes\",\n        \"A family of embedded runge-kutta formulae\",\n        \"Augmented neural odes\",\n        \"Learning hierarchical features for scene labeling\",\n        \"Classical fifth-, sixth-, seventh-, and eighth-order Runge-Kutta formulas with stepsize control\",\n        \"How to train your neural ode\",\n        \"Ffjord: Free-form continuous dynamics for scalable reversible generative models\",\n        \"Solving Ordinary Differential Equations I: Nonstiff Problems, volume 8\",\n        \"Sundials: Suite of nonlinear and differential/algebraic equation solvers\",\n        \"Learning differential equations that are easy to solve\",\n        \"Stiff neural ordinary differential equations\",\n        \"Adam: A method for stochastic optimization\",\n        \"Beitrag zur naherungsweisen integration totaler differentialgleichungen\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Neural sde: Stabilizing neural ode networks with stochastic noise\",\n        \"Beyond finite layer neural networks: Bridging deep architectures and numerical differential equations\",\n        \"Discretize-optimize vs. optimize-discretize for time-series regression and continuous normalizing flows\",\n        \"Lux: Explicit parameterization of deep neural networks in julia\",\n        \"Opening the blackbox: Accelerating neural differential equations by regularizing internal solver heuristics\",\n        \"Mixing implicit and explicit deep learning with skip deqs and infinite time neural odes (continuous deqs)\",\n        \"An l-stable rosenbrock method for step-by-step time integration in structural dynamics\",\n        \"Hypersolvers: Toward fast continuous-depth models\",\n        \"Engineering trade-offs in automatic differentiation: From tensorflow and pytorch to jax and julia\",\n        \"Adaptive methods for stochastic differential equations via natural embeddings and rejection sampling with memory\",\n        \"Stability-optimized high order methods and stiffness detection for pathwise stiff stochastic differential equations\",\n        \"Diffeqflux.jl - A julia library for neural differential equations\",\n        \"Universal differential equations for scientific machine learning\",\n        \"The solution of a set of reaction rate equations\",\n        \"Latent odes for irregularly-sampled time series\",\n        \"Über die numerische auflösung von differentialgleichungen\",\n        \"Runge–kutta pairs of order 5(4) satisfying only the first column simplifying assumption\",\n        \"Solving ordinary differential equations II\",\n        \"Heavy ball neural ordinary differential equations\",\n        \"Multi-scale context aggregation by dilated convolutions\",\n        \"Fatode: a library for forward, adjoint, and tangent linear integration of odes\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Locally Regularized Neural Differential Equations: Some Black Boxes Were Meant to Remain Closed!, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}