{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Deeploy: Enabling Energy-Efficient Deployment of Small Language Models On Heterogeneous Microcontrollers\n\nPaper Abstract: Abstract With the rise of Embodied Foundation Models (EFMs), most notably Small Language Models (SLMs), adapting Transformers for edge applications has become a very active field of research. However, achieving end-to-end deployment of SLMs on microcontroller (MCU)-class chips without high-bandwidth off-chip main memory access is still an open challenge. In this paper, we demonstrate high-efficiency end-to-end SLM deployment on a multicore RISC-V (RV32) MCU augmented with ML instruction extensions and a hardware neural processing unit (NPU). To automate the exploration of the constrained, multi-dimensional memory vs. computation tradeoffs involved in aggressive SLM deployment on heterogeneous (multicore+NPU) resources, we introduce Deeploy, a novel Deep Neural Network (DNN) compiler, which generates highly-optimized C code requiring minimal runtime support. We demonstrate that Deeploy generates end-to-end code for executing SLMs, fully exploiting the RV32 cores’ instruction extensions and the NPU: We achieve leading-edge energy and throughput of 490 µ​J/Tokentimes490µJToken490\\text{\\,}\\mathrm{\\SIUnitSymbolMicro}\\mathrm{J}\\mathrm{/}\\mathrm{T}\\mathrm{o}\\mathrm{k}\\mathrm{e}\\mathrm{n}, at 340 Token/stimes340Tokens340\\text{\\,}\\mathrm{T}\\mathrm{o}\\mathrm{k}\\mathrm{e}\\mathrm{n}\\mathrm{/}\\mathrm{s} for an SLM trained on the TinyStories dataset, running for the first time on an MCU-class device without external memory.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Llama 2: Open Foundation and Fine-Tuned Chat Models\",\n        \"Mixtral of Experts\",\n        \"Gemini: A Family of Highly Capable Multimodal Models\",\n        \"EEGFormer: Towards Transferable and Interpretable Large-Scale EEG Foundation Model\",\n        \"BrainBERT: Self-supervised representation learning for intracranial recordings\",\n        \"Do As I Can, Not As I Say: Grounding Language in Robotic Affordances\",\n        \"PaLM-E: An Embodied Multimodal Language Model\",\n        \"TinyStories: How Small Can Language Models Be and Still Speak Coherent English?\",\n        \"TinyLlama: An Open-Source Small Language Model\",\n        \"Deep Learning Hardware: Past, Present, and Future\",\n        \"NVIDIA Hopper H100 GPU: Scaling Performance\",\n        \"TPU v4: An Optically Reconfigurable Supercomputer for Machine Learning with Hardware Support for Embeddings\",\n        \"Siracusa: A 16 nm Heterogenous RISC-V SoC for Extended Reality with At-MRAM Neural Engine\",\n        \"DIANA: An End-to-End Energy-Efficient Digital and ANAlog Hybrid Neural Network SoC\",\n        \"MLIR: Scaling Compiler Infrastructure for Domain Specific Computation\",\n        \"TVM: An Automated End-to-End Optimizing Compiler for Deep Learning\",\n        \"Deep Compression: Compressing Deep Neural Network with Pruning, Trained Quantization and Huffman Coding\",\n        \"Foundation Models in Robotics: Applications, Challenges, and the Future\",\n        \"A Review of On-device Machine Learning for IoT: An Energy Perspective\",\n        \"A Survey of Quantization Methods for Efficient Neural Network Inference\",\n        \"I-BERT: Integer-only BERT Quantization\",\n        \"Trained Quantization Thresholds for Accurate and Efficient Fixed-Point Inference of Deep Neural Networks\",\n        \"BRECQ: Pushing the Limit of Post-Training Quantization by Block Reconstruction\",\n        \"SmoothQuant: Accurate and Efficient Post-Training Quantization for Large Language Models\",\n        \"Searching for MobileNetV3\",\n        \"Memory-efficient Patch-based Inference for Tiny Deep Learning\",\n        \"GAP-8: A RISC-V SoC for AI at the Edge of the IoT\",\n        \"DORY: Automatic End-to-End Deployment of Real-World DNNs on Low-Cost IoT MCUs\",\n        \"CoSA: Scheduling by Constrained Optimization forSpatial Accelerators\",\n        \"TelaMalloc: Efficient On-Chip Memory Allocation for Production Machine Learning Accelerators\",\n        \"MiniMalloc: A Lightweight Memory Allocator for Hardware-Accelerated Machine Learning\",\n        \"TensorFlow Lite Micro: Embedded Machine Learning for TinyML Systems\",\n        \"XpulpNN: Accelerating Quantized Neural Networks on RISC-V Processors Through ISA Extensions\",\n        \"CMSIS-NN: Efficient Neural Network Kernels for Arm Cortex-M CPUs\",\n        \"QuantLab: A Modular Framework for Training and Deploying Mixed-Precision NNs\",\n        \"An Efficient Profile-based Algorithm for Scratchpad Memory Partitioning\",\n        \"TetriSched: Global rescheduling with adaptive plan-ahead in dynamic heterogeneous clusters\",\n        \"Mako Templates for Python\",\n        \"Attention is All you Need\",\n        \"Root Mean Square Layer Normalization\",\n        \"MLPerf Tiny Benchmark\",\n        \"LLM Pipelines: Seamless Integration on Embedded Devices\",\n        \"MobileVLM : A Fast, Strong and Open Vision Language Assistant for Mobile Devices\",\n        \"MobileLLM: Optimizing Sub-billion Parameter Language Models for On-Device Use Cases\",\n        \"Llama2.c\",\n        \"@karpathy llama2.c running on galaxy watch 4 https://t.co/sMPCZM3WE4\",\n        \"Samsung Galaxy Watch4 and Watch4 Classic Teardown\",\n        \"The Snapdragon 888 vs The Exynos 2100: Cortex-X1 & 5nm - Who Does It Better?\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Deeploy: Enabling Energy-Efficient Deployment of Small Language Models On Heterogeneous Microcontrollers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}