{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Semantic Indexes for Machine Learning-based Queries over Unstructured Data\n\nPaper Abstract: Abstract. Unstructured data (e.g., video or text) is now commonly queried by using computationally expensive deep neural networks or human labelers to produce structured information, e.g., object types and positions in video. To accelerate queries, many recent systems (e.g., BlazeIt, NoScope, Tahoma, SUPG, etc.) train a query-specific proxy model to approximate a large target labelers (i.e., these expensive neural networks or human labelers). These models return proxy scores that are then used in query processing algorithms. Unfortunately, proxy models usually have to be trained per query and require large amounts of annotations from the target labelers. In this work, we develop an index (trainable semantic index, TASTI) that simultaneously removes the need for per-query proxies and is more efficient to construct than prior indexes. TASTI accomplishes this by leveraging semantic similarity across records in a given dataset. Specifically, it produces embeddings for each record such that records with close embeddings have similar target labeler outputs. TASTI then generates high-quality proxy scores via embeddings without needing to train a per-query proxy. These scores can be used in existing proxy-based query processing algorithms (e.g., for aggregation, selection, etc.). We theoretically analyze TASTI and show that a low embedding training error guarantees downstream query accuracy for a natural class of queries. We evaluate TASTI on five video, text, and speech datasets, and three query types. We show that TASTI’s indexes can be 10×\\times less expensive to construct than generating annotations for current proxy-based methods, and accelerate queries by up to 24×\\times.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Geometric approximation via coresets\",\n        \"Efficient similarity search in sequence databases\",\n        \"Predicate Optimization for a Visual Analytics Database\",\n        \"Common voice: A massively-multilingual speech corpus\",\n        \"Neural codes for image retrieval\",\n        \"MIRIS: Fast Object Track Queries in Video\",\n        \"Vaas: video analytics at scale\",\n        \"Organization and maintenance of large ordered indexes\",\n        \"Enriching Word Vectors with Subword Information\",\n        \"New frameworks for offline and streaming coreset constructions\",\n        \"Scaling Video Analytics on Constrained Edge Nodes\",\n        \"M-tree: An E cient Access Method for Similarity Search in Metric Spaces\",\n        \"Ubiquitous B-tree\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Fast subsequence matching in time-series databases\",\n        \"Query by image and video content: The QBIC system\",\n        \"Rekall: Specifying video events using compositions of spatiotemporal labels\",\n        \"Database systems: the complete book\",\n        \"Clustering to minimize the maximum intercluster distance\",\n        \"R-trees: A dynamic index structure for spatial searching\",\n        \"General principles of the Monte Carlo method\",\n        \"On coresets for k-means and k-median clustering\",\n        \"Mask r-cnn\",\n        \"Deep residual learning for image recognition\",\n        \"Generalized search trees for database systems\",\n        \"Focus: Querying Large Video Datasets with Low Latency and Low Cost\",\n        \"Database Cracking.\",\n        \"iDistance: An adaptive B+-tree based indexing method for nearest neighbor search\",\n        \"Chameleon: scalable adaptation of video analytics\",\n        \"Predicting the computational cost of deep learning models\",\n        \"BlazeIt: Optimizing Declarative Aggregation and Limit Queries for Neural Network-Based Video Analytics\",\n        \"NoScope: optimizing neural network queries over video at scale\",\n        \"Approximate Selection with Guarantees using Proxies\",\n        \"Accelerating Approximate Aggregation Queries with Expensive Predicates\",\n        \"Jointly Optimizing Preprocessing and Inference for DNN-based Visual Analytics\",\n        \"Panns: Large-scale pretrained audio neural networks for audio pattern recognition\",\n        \"Deep learning of binary hash codes for fast image retrieval\",\n        \"Accelerating Machine Learning Inference with Probabilistic Predicates\",\n        \"Active learning for convolutional neural networks: A core-set approach\",\n        \"VisualSEEk: a fully automated content-based image query system\",\n        \"Principles of database systems\",\n        \"Distance metric learning for large margin nearest neighbor classification\",\n        \"VStore: A Data Store for Analytics on Large Videos\",\n        \"Indexing the distance: An efficient method to knn processing\",\n        \"Panorama: a data system for unbounded vocabulary querying over video\",\n        \"Seq2SQL: Generating Structured Queries from Natural Language using Reinforcement Learning\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Semantic Indexes for Machine Learning-based Queries over Unstructured Data, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}