{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fairer Software Made Easier (using “Keys”)\n\nPaper Abstract: Abstract Can we simplify explanations for software analytics? Maybe. Recent results show that systems often exhibit a “keys effect”; i.e. a few key features control the rest. Just to say the obvious, for systems controlled by a few keys, explanation and control is just a matter of running a handful of “what-if” queries across the keys. By exploiting the keys effect, it should be possible to dramatically simplify even complex explanations, such as those required for ethical AI systems.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Defining and conceptualizing actionable insight: a conceptual framework for decision-centric analytics\",\n        \"Bi’s impact on analyses and decision making depends\",\n        \"Ethically-aligned design: A vision for prioritizing human well-begin with autonomous and intelligence systems.\",\n        \"Ethics guidelines for trustworthy artificial intelligence.\",\n        \"Microsoft AI principles\",\n        \"Expert and novice performance in solving physics problems\",\n        \"The magical number seven, plus or minus two: some limits on our capacity for processing information.\",\n        \"The magical number 4 in short-term memory: a reconsideration of mental storage capacity\",\n        \"Changing concepts of working memory\",\n        \"FFTrees: A toolbox to create, visualize, and evaluate fast-and-frugal decision trees\",\n        \"Why heuristics work\",\n        \"Heuristic decision making\",\n        \"How good are simple heuristics?\",\n        \"Characteristics of the mental representations of novice and expert programmers: an empirical study\",\n        \"“ why should i trust you?” explaining the predictions of any classifier\",\n        \"A unified approach to interpreting model predictions\",\n        \"Veer: Disagreement-free multi-objective configuration\",\n        \"Some properties of joint probability distributions\",\n        \"Bigfuzz: Efficient fuzz testing for data analytics using framework abstraction\",\n        \"Improving vulnerability inspection efficiency using active learning\",\n        \"Better data labelling with emblem (and how that impacts defect prediction)\",\n        \"A fast and elitist multiobjective genetic algorithm: Nsga-ii\",\n        \"Shockingly simple:”keys” for better ai for se\",\n        \"On the naturalness of software\",\n        \"Why power laws? an explanation from fine-grained code changes\",\n        \"Computer Organization and Architecture: Designing for Performance, 8th ed.\",\n        \"Learning better inspection optimization policies\",\n        \"Where the bugs are\",\n        \"Common trends in software fault and failure data\",\n        \"Defect reduction planning (using timelime)\",\n        \"Learning actionable analytics from multiple software projects\",\n        \"Data mining: Practical machine learning tools and techniques with java implementations\",\n        \"Preference discovery in large product lines\",\n        \"Making fair ml software using trustworthy explanation\",\n        \"Fairkit, fairkit, on the wall, who’s the fairest of them all? supporting data scientists in training fair models\",\n        \"Lace2: Better privacy-preserving data sharing for cross project defect prediction\",\n        \"Data carving: Identifying and removing irrelevancies in the data\",\n        \"Very simple classification rules perform well on most commonly used datasets\",\n        \"Anomaly detection: A survey\",\n        \"Pushing the envelope: Planning, propositional logic, and stochastic search\",\n        \"A comprehensive investigation of the impact of feature selection techniques on crashing fault residence prediction models\",\n        \"Benchmarking attribute selection techniques for discrete class data mining\",\n        \"“Sampling”’ as a Baseline Optimizer for Search-based Software Engineering\",\n        \"Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures\",\n        \"Clami: Defect prediction on unlabeled datasets (t)\",\n        \"Search-based software engineering\",\n        \"Understanding clusters of optimal solutions in multi-objective decision problems\",\n        \"Faster discovery of faster system configurations with spectral learning\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Fairer Software Made Easier (using “Keys”), providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}