{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: VersaGNN: a Versatile accelerator for Graph Neural Networks\n\nPaper Abstract: Abstract Graph Neural Network (GNN) is a promising approach for analyzing graph-structured data that tactfully captures their dependency information via node-level message passing. It has achieved state-of-the-art performances in many tasks, such as node classification, graph matching, clustering, and graph generation. As GNNs operate on non-Euclidean data, their irregular data access patterns cause considerable computational costs and overhead on conventional architectures, such as GPU and CPU. Our analysis show that GNN adopts a hybrid computing mode. The Aggregation (or Message Passing) phase performs vector additions where vectors are fetched with irregular strides. The Transformation (or Node Embedding) phase can be either dense or sparse-dense matrix multiplication. In this work, We propose VersaGNN, an ultra-efficient, systolic-array based versatile hardware accelerator that unifies dense and sparse matrix multiplication. By applying this single optimized systolic-arrays to both aggregation and transformation phases, we have significantly reduced chip sizes and energy consumption. We then divide the computing engine into blocked systolic arrays to support the Strassen’s algorithm for dense matrix multiplication, dramatically scaling down the number of multiplications and enabling high-throughput computation of GNNs. To balance the workload of sparse-dense matrix multiplication, we also introduced a greedy algorithm to combine sparse sub-matrices of compressed format into condensed ones to reduce computational cycles. Compared with current state-of-the-art GNN software frameworks, VersaGNN achieves on average 3712×\\times speedup with 1301.25×\\times energy reduction on CPU, and 35.4×\\times speedup with 17.66×\\times energy reduction on GPU.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Diffusion-convolutional neural networks\",\n        \"Hardware acceleration of graph neural networks\",\n        \"Chisel: constructing hardware in a scala embedded language\",\n        \"Gaas-x: Graph analytics accelerator supporting sparse data representation using crossbar architectures\",\n        \"Recursive array layouts and fast matrix multiplication\",\n        \"Eyeriss v2: A flexible accelerator for emerging deep neural networks on mobile devices\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Graphzoom: A multi-level spectral approach for accurate and scalable graph embedding\",\n        \"The pytorch scatter library\",\n        \"The pytorch sparse library\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Cache-oblivious algorithms\",\n        \"Gemmini: An agile systolic array generator enabling systematic evaluations of deep-learning architectures\",\n        \"Awb-gcn: A graph convolutional network accelerator with runtime workload rebalancing\",\n        \"Neural message passing for quantum chemistry\",\n        \"Sparten: A sparse tensor accelerator for convolutional neural networks\",\n        \"Graphicionado: A high-performance and energy-efficient accelerator for graph analytics\",\n        \"Inductive representation learning on large graphs\",\n        \"Eie: efficient inference engine on compressed deep neural network\",\n        \"Sparse-tpu: Adapting systolic arrays for sparse matrices\",\n        \"Extensor: An accelerator for sparse tensor algebra\",\n        \"Deep convolutional networks on graph-structured data\",\n        \"Implementing strassen’s algorithm with CUTLASS on NVIDIA volta gpus\",\n        \"FireSim: FPGA-accelerated cycle-exact scale-out system simulation in the public cloud\",\n        \"Variational graph auto-encoders\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Adaptive tiling: Applying fixed-size systolic arrays to sparse convolutional neural networks\",\n        \"Packing sparse convolutional neural networks for efficient systolic array implementations: Column combining under joint optimization\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Engn: A high-throughput and energy-efficient accelerator for large graph neural networks\",\n        \"Learning convolutional neural networks for graphs\",\n        \"Fine-grained dram: Energy-efficient dram for extreme bandwidth systems\",\n        \"Scnn: An accelerator for compressed-sparse convolutional neural networks\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Sigma: A sparse and irregular gemm accelerator with flexible interconnects for dnn training\",\n        \"A fully parameterizable low power design of vector fused multiply-add using active clock-gating techniques\",\n        \"The emerging field of signal processing on graphs: Extending high-dimensional data analysis to networks and other irregular domains\",\n        \"Graph Attention Networks\",\n        \"Mgae: marginalized graph autoencoder for graph clustering\",\n        \"Graphgan: Graph representation learning with generative adversarial nets\",\n        \"Sparse matrix — Wikipedia, the free encyclopedia\",\n        \"Strassen algorithm — Wikipedia, the free encyclopedia\",\n        \"A comprehensive survey on graph neural networks\",\n        \"How powerful are graph neural networks?\",\n        \"Hygcn: A gcn accelerator with hybrid architecture\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Graphact: Accelerating gcn training on cpu-fpga heterogeneous platforms\",\n        \"Link prediction based on graph neural networks\",\n        \"Graph neural networks: A review of methods and applications\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in VersaGNN: a Versatile accelerator for Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}