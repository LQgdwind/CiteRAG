{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 60 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AutoLossGen: Automatic Loss Function Generation for Recommender Systems\n\nPaper Abstract: Abstract. In recommendation systems, the choice of loss function is critical since a good loss may significantly improve the model performance. However, manually designing a good loss is a big challenge due to the complexity of the problem. A large fraction of previous work focuses on handcrafted loss functions, which needs significant expertise and human effort. In this paper, inspired by the recent development of automated machine learning, we propose an automatic loss function generation framework, AutoLossGen, which is able to generate loss functions directly constructed from basic mathematical operators without prior knowledge on loss structure. More specifically, we develop a controller model driven by reinforcement learning to generate loss functions, and develop iterative and alternating optimization schedule to update the parameters of both the controller model and the recommender model. One challenge for automatic loss generation in recommender systems is the extreme sparsity of recommendation datasets, which leads to the sparse reward problem for loss generation and search. To solve the problem, we further develop a reward filtering mechanism for efficient and effective loss generation. Experimental results show that our framework manages to create tailored loss functions for different recommendation models and datasets, and the generated loss gives better recommendation performance than commonly used baseline losses. Besides, most of the generated losses are transferable, i.e., the loss generated based on one model and dataset also works well for another model or dataset. Source code of the work is available at https://github.com/rutgerswiselab/AutoLossGen.\n\n{retrieved_text}\n\nGenerate exactly 60 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 60\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mean square error of prediction as a criterion for selecting variables\",\n        \"Hierarchical optimization: An introduction\",\n        \"Designing Neural Network Architectures using Reinforcement Learning\",\n        \"Neural combinatorial optimization with reinforcement learning\",\n        \"Neural optimizer search with reinforcement learning\",\n        \"Path-level network transformation for efficient architecture search\",\n        \"Efficient AUC optimization for classification\",\n        \"Vest: Automatic feature engineering for forecasting\",\n        \"Root mean square error (RMSE) or mean absolute error (MAE)?â€“Arguments against avoiding RMSE in the literature\",\n        \"Two deterministic half-quadratic regularization algorithms for computed imaging\",\n        \"Graph Collaborative Reasoning\",\n        \"Neural Collaborative Reasoning\",\n        \"Wide & deep learning for recommender systems\",\n        \"Efficient and Robust Automated Machine Learning\",\n        \"HOOPS: Human-in-the-Loop Graph Reasoning for Conversational Recommendation\",\n        \"Explainable Fairness in Recommendation\",\n        \"Learning Personalized Risk Preferences for Recommendation\",\n        \"Maximizing marginal utility per dollar for economic recommendation\",\n        \"Recommendation as Language Processing (RLP): A Unified Pretrain, Personalized Prompt & Predict Paradigm (P5)\",\n        \"Fast r-cnn\",\n        \"Large scale max-margin multi-label classification with priors\",\n        \"The movielens datasets: History and context\",\n        \"Ups and downs: Modeling the visual evolution of fashion trends with one-class collaborative filtering\",\n        \"Gnas: A greedy neural architecture search method for multi-attribute learning\",\n        \"Robust estimation of a location parameter\",\n        \"Deep feature synthesis: Towards automating data science endeavors\",\n        \"Explorekit: Automatic feature generation and selection\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"Auto-WEKA: Automatic model selection and hyperparameter optimization in WEKA\",\n        \"On information and sufficiency\",\n        \"A study on L2-loss (squared hinge-loss) multiclass SVM\",\n        \"Am-lfs: Automl for loss function search\",\n        \"AutoLoss-Zero: Searching Loss Functions from Scratch for Generic Tasks\",\n        \"Auto Seg-Loss: Searching Metric Surrogates for Semantic Segmentation\",\n        \"Focal loss for dense object detection\",\n        \"Progressive neural architecture search\",\n        \"DARTS: Differentiable Architecture Search\",\n        \"Loss Function Discovery for Object Detection via Convergence-Simulation Driven Search\",\n        \"Stochastic Loss Function\",\n        \"Sphereface: Deep hypersphere embedding for face recognition\",\n        \"Large-Margin Softmax Loss for Convolutional Neural Networks\",\n        \"On the design of robust classifiers for computer vision\",\n        \"On the design of loss functions for classification: theory, robustness to outliers, and SavageBoost\",\n        \"Machine learning\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"Regularized Evolution for Image Classifier Architecture Search\",\n        \"Large-scale evolution of image classifiers\",\n        \"Are loss functions all the same?\",\n        \"The cross-entropy method for combinatorial and continuous optimization\",\n        \"Neural Logic Reasoning\",\n        \"Simple and efficient architecture search for Convolutional Neural Networks\",\n        \"Loss function search for face recognition\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Advantages of the mean absolute error (MAE) over the root mean square error (RMSE) in assessing average model performance\",\n        \"AutoLoss: Learning Discrete Schedule for Alternate Optimization\",\n        \"Causal collaborative filtering\",\n        \"Taking human out of learning applications: A survey on automated machine learning\",\n        \"AutoLoss: Automated Loss Function Search in Recommendations\",\n        \"Neural Architecture Search with Reinforcement Learning\",\n        \"Learning transferable architectures for scalable image recognition\"\n    ],\n    \"reasoning\": \"Selected these 60 references because they represent foundational work and recent advances in AutoLossGen: Automatic Loss Function Generation for Recommender Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}