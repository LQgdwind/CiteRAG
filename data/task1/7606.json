{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Local Branching Relaxation Heuristics for Integer Linear Programs\n\nPaper Abstract: Abstract Large Neighborhood Search (LNS) is a popular heuristic algorithm for solving combinatorial optimization problems (COP). It starts with an initial solution to the problem and iteratively improves it by searching a large neighborhood around the current best solution. LNS relies on heuristics to select neighborhoods to search in. In this paper, we focus on designing effective and efficient heuristics in LNS for integer linear programs (ILP) since a wide range of COPs can be represented as ILPs. Local Branching (LB) is a heuristic that selects the neighborhood that leads to the largest improvement over the current solution in each iteration of LNS. LB is often slow since it needs to solve an ILP of the same size as input. Our proposed heuristics, LB-RELAX and its variants, use the linear programming relaxation of LB to select neighborhoods. Empirically, LB-RELAX and its variants compute as effective neighborhoods as LB but run faster. They achieve state-of-the-art anytime performance on several ILP benchmarks.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Rounding and propagation heuristics for mixed integer programming\",\n        \"Mixed integer programming: Analyzing 12 years of progress\",\n        \"Statistical mechanics of complex networks\",\n        \"An exact approach to the one-dimensional facility layout problem\",\n        \"An adaptive large neighborhood search for a vehicle routing problem with multiple routes\",\n        \"Primal heuristics for mixed integer programs\",\n        \"Rens\",\n        \"The SCIP Optimization Suite 8.0\",\n        \"Learning to perform local rewriting for combinatorial optimization\",\n        \"Exploring relaxation induced neighborhoods to improve mip solutions\",\n        \"Combinatorial auctions: A survey\",\n        \"Solving connected subgraph problems in wildlife conservation\",\n        \"Local branching\",\n        \"Exact combinatorial optimization with graph convolutional neural networks\",\n        \"Dins, a mip improvement heuristic\",\n        \"MIPLIB 2017: Data-Driven Compilation of the 6th Mixed-Integer Programming Library\",\n        \"Gurobi Optimizer Reference Manual\",\n        \"Adaptive large neighborhood search for mixed integer programming\",\n        \"Efficient models for the facility layout problem\",\n        \"Neural large neighborhood search for the capacitated vehicle routing problem\",\n        \"Enhancing seismic resilience of water pipe networks\",\n        \"Anytime multi-agent path finding via machine learning-guided large neighborhood search\",\n        \"Deadline-aware multi-agent tour planning\",\n        \"Learning to branch in mixed integer programming\",\n        \"Algorithm design\",\n        \"Adaptive large neighborhood search for service technician routing and scheduling problems\",\n        \"An automatic method for solving discrete programming problems\",\n        \"Towards a universal test suite for combinatorial auction algorithms\",\n        \"Anytime multi-agent path finding via large neighborhood search\",\n        \"MAPF-LNS2: Fast repairing for multi-agent path finding via large neighborhood search\",\n        \"Learning to delegate for large-scale vehicle routing\",\n        \"Revisiting local branching with a machine learning lens\",\n        \"A learning-based iterative method for solving vehicle routing problems\",\n        \"The scip optimization suite 4.0\",\n        \"On the job-shop scheduling problem\",\n        \"Heuristic search viewed as path finding in a graph\",\n        \"An adaptive large neighborhood search heuristic for the pickup and delivery problem with time windows\",\n        \"An evolutionary algorithm for polishing mixed integer programming solutions\",\n        \"Learning to branch with tree mdps\",\n        \"Glns: An effective large neighborhood search heuristic for the generalized traveling salesman problem\",\n        \"A general large neighborhood search framework for solving integer linear programs\",\n        \"Learning a large neighborhood search algorithm for mixed integer programs\",\n        \"The vehicle routing problem\",\n        \"Learning large neighborhood search policy for integer programming\",\n        \"A hybrid of adaptive large neighborhood search and tabu search for the order-batching problem\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Local Branching Relaxation Heuristics for Integer Linear Programs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}