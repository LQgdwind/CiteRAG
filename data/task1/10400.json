{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GraphViz2Vec: A Structure-aware Feature Generation Model to Improve Classification in GNNs\n\nPaper Abstract: Abstract. GNNs are widely used to solve various tasks including node classification and link prediction. Most of the GNN architectures assume the initial embedding to be random or generated from popular distributions. These initial embeddings require multiple layers of transformation to converge into a meaningful latent representation. While number of layers allow accumulation of larger neighbourhood of a node it also introduce the problem of over-smoothing. In addition, GNNs are inept at representing structural information. For example, the output embedding of a node does not capture its triangles participation. In this paper, we presented a novel feature extraction methodology GraphViz2Vec that can capture the structural information of a nodeâ€™s local neighbourhood to create meaningful initial embeddings for a GNN model. These initial embeddings helps existing models achieve state-of-the-art results in various classification tasks. Further, these initial embeddings help the model to produce desired results with only two layers which in turn reduce the problem of over-smoothing. The initial encoding of a node is obtained from an image classification model trained on multiple energy diagrams of its local neighbourhood. These energy diagrams are generated with the induced sub-graph of the nodes traversed by multiple random walks. The generated encodings increase the performance of existing models on classification tasks (with a mean increase of 4.65%percent4.654.65\\% and 2.58%percent2.582.58\\% for the node and link classification tasks, respectively), with some models achieving state-of-the-art results.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Residual Gated Graph ConvNets\",\n        \"GNN-FiLM: Graph Neural Networks with Feature-Wise Linear Modulation\",\n        \"How Attentive are Graph Attention Networks?\",\n        \"Graph Neural Networks for Link Prediction with Subgraph Sketching\",\n        \"A Multilevel Force-directed Graph Drawing Algorithm Using Multilevel Global Force Approximation\",\n        \"BrainGB: A Benchmark for Brain Network Analysis With Graph Neural Networks\",\n        \"GraphMR: Graph Neural Network for Mathematical Reasoning\",\n        \"Node2vec: Scalable Feature Learning for Networks\",\n        \"Inductive Representation Learning on Large Graphs\",\n        \"Three-dimensional graph drawing by Kamada-Kawai method with Barzilai-Borwein method\",\n        \"LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation\",\n        \"Improving the Quality of Clustered Graph Drawing through a Dummy Element Approach\",\n        \"Drawing Large Weighted Graphs Using Clustered Force-Directed Algorithm\",\n        \"Densely Connected Convolutional Networks\",\n        \"Optimization of Graph Neural Networks with Natural Gradient Descent\",\n        \"An algorithm for drawing general undirected graphs\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Drawing Clustered Graphs Using Stress Majorization and Force-Directed Placements\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"Pytorch-biggraph: A large scale graph embedding system\",\n        \"DeeperGCN: Training Deeper GCNs With Generalized Aggregation Functions\",\n        \"Provably Powerful Graph Networks\",\n        \"Efficient Estimation of Word Representations in Vector Space\",\n        \"Weisfeiler and Leman Go Neural: Higher-Order Graph Neural Networks\",\n        \"Graph Neural Networks Exponentially Lose Expressive Power for Node Classification\",\n        \"DeepWalk: Online Learning of Social Representations\",\n        \"Multi-Scale attributed node embedding\",\n        \"Pitfalls of Graph Neural Network Evaluation\",\n        \"Masked Label Prediction: Unified Message Passing Model for Semi-Supervised Classification\",\n        \"XGCN: An Extreme Graph Convolutional Network for Large-Scale Social Link Prediction\",\n        \"On the Equivalence between Positional Node Embeddings and Structural Graph Representations\",\n        \"Improved Semantic Representations From Tree-Structured Long Short-Term Memory Networks\",\n        \"LINE: Large-Scale Information Network Embedding\",\n        \"Graph Neural Networks for Graph Drawing\",\n        \"Graph Attention Networks\",\n        \"Automorphic Equivalence-aware Graph Neural Network\",\n        \"How Powerful are Graph Neural Networks?\",\n        \"Revisiting Semi-Supervised Learning with Graph Embeddings\",\n        \"Design Space for Graph Neural Networks\",\n        \"L2-GCN: Layer-Wise and Learned Efficient Training of Graph Convolutional Networks\",\n        \"Graph Transformer Networks\",\n        \"GraphSAINT: Graph Sampling Based Inductive Learning Method\",\n        \"Link Prediction Based on Graph Neural Networks\",\n        \"GraphVite: A High-Performance CPU-GPU Hybrid System for Node Embedding\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in GraphViz2Vec: A Structure-aware Feature Generation Model to Improve Classification in GNNs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}