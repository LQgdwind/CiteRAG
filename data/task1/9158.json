{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Time-aware Graph Structure Learning via Sequence Prediction on Temporal Graphs\n\nPaper Abstract: Abstract. Temporal Graph Learning, which aims to model the time-evolving nature of graphs, has gained increasing attention and achieved remarkable performance recently. However, in reality, graph structures are often incomplete and noisy, which hinders temporal graph networks (TGNs) from learning informative representations. Graph contrastive learning uses data augmentation to generate plausible variations of existing data and learn robust representations. However, rule-based augmentation approaches may be suboptimal as they lack learnability and fail to leverage rich information from downstream tasks. To address these issues, we propose a Time-aware Graph Structure Learning (TGSL) approach via sequence prediction on temporal graphs, which learns better graph structures for downstream tasks through adding potential temporal edges. In particular, it predicts time-aware context embedding based on previously observed interactions and uses the Gumble-Top-K to select the closest candidate edges to this context embedding. Additionally, several candidate sampling strategies are proposed to ensure both efficiency and diversity. Furthermore, we jointly learn the graph structure and TGNs in an end-to-end manner and perform inference on the refined graph. Extensive experiments on temporal link prediction benchmarks demonstrate that TGSL yields significant gains for the popular TGNs such as TGAT and GraphMixer, and it outperforms other contrastive learning methods on temporal graphs. We release the code at https://github.com/ViktorAxelsen/TGSL.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Iterative Deep Graph Learning for Graph Neural Networks: Better and Robust Node Embeddings\",\n        \"Do We Really Need Complicated Model Architectures For Temporal Networks?\",\n        \"SLAPS: Self-Supervision Improves Structure Learning for Graph Neural Networks\",\n        \"DynGEM: Deep Embedding Method for Dynamic Graphs\",\n        \"Inductive Representation Learning on Large Graphs\",\n        \"Contrastive Multi-View Representation Learning on Graphs\",\n        \"Momentum Contrast for Unsupervised Visual Representation Learning\",\n        \"Long Short-Term Memory\",\n        \"GraphMAE: Self-Supervised Masked Graph Autoencoders\",\n        \"Categorical Reparameterization with Gumbel-Softmax\",\n        \"Graph Structure Learning for Robust Graph Neural Networks\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Stochastic Beams and Where To Find Them: The Gumbel-Top-k Trick for Sampling Sequences Without Replacement\",\n        \"Predicting Dynamic Embedding Trajectory in Temporal Interaction Networks\",\n        \"The link prediction problem for social networks\",\n        \"Towards Unsupervised Deep Graph Structure Learning\",\n        \"EvolveGCN: Evolving Graph Convolutional Networks for Dynamic Graphs\",\n        \"Towards Better Evaluation for Dynamic Link Prediction\",\n        \"GCC: Graph Contrastive Coding for Graph Neural Network Pre-Training\",\n        \"Temporal Graph Networks for Deep Learning on Dynamic Graphs\",\n        \"The Network Data Repository with Interactive Graph Analytics and Visualization\",\n        \"DySAT: Deep Neural Representation Learning on Dynamic Graphs via Self-Attention Networks\",\n        \"Foundations and Modeling of Dynamic Networks Using Dynamic Graph Neural Networks: A Survey\",\n        \"Adversarial Graph Augmentation to Improve Graph Contrastive Learning\",\n        \"Self-supervised Representation Learning on Dynamic Graphs\",\n        \"MLP-Mixer: An all-MLP Architecture for Vision\",\n        \"DyRep: Learning Representations over Dynamic Graphs\",\n        \"Representation Learning with Contrastive Predictive Coding\",\n        \"Attention is All you Need\",\n        \"Graph Attention Networks\",\n        \"Deep Graph Infomax\",\n        \"Adaptive Data Augmentation on Temporal Graphs\",\n        \"Inductive Representation Learning in Temporal Networks via Causal Anonymous Walks\",\n        \"Contrastive Graph Structure Learning via Information Bottleneck for Recommendation\",\n        \"Graph Information Bottleneck\",\n        \"Self-attention with Functional Time Representation Learning\",\n        \"Inductive Representation Learning on Temporal Graphs\",\n        \"AutoGCL: Automated Graph Contrastive Learning via Learnable View Generators\",\n        \"ROLAND: Graph Learning Framework for Dynamic Graphs\",\n        \"Graph Contrastive Learning with Augmentations\",\n        \"Graph-Revised Convolutional Network\",\n        \"Towards Better Dynamic Graph Learning: New Architecture and Unified Library\",\n        \"Self-Supervised Graph Structure Refinement for Graph Neural Networks\",\n        \"Graph neural networks: A review of methods and applications\",\n        \"A Survey on Graph Structure Learning: Progress and Opportunities\",\n        \"Graph Contrastive Learning with Adaptive Augmentation\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Time-aware Graph Structure Learning via Sequence Prediction on Temporal Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}