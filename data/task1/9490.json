{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Landscape Surrogate: Learning Decision Losses for Mathematical Optimization Under Partial Information\n\nPaper Abstract: Abstract Recent works in learning-integrated optimization have shown promise in settings where the optimization problem is only partially observed or where general-purpose optimizers perform poorly without expert tuning. By learning an optimizer ùê†ùê†\\mathbf{g} to tackle these challenging problems with fùëìf as the objective, the optimization process can be substantially accelerated by leveraging past experience. The optimizer can be trained with supervision from known optimal solutions or implicitly by optimizing the compound function f‚àòùê†ùëìùê†f\\circ\\mathbf{g}. The implicit approach may not require optimal solutions as labels and is capable of handling problem uncertainty; however, it is slow to train and deploy due to frequent calls to optimizer ùê†ùê†\\mathbf{g} during both training and testing. The training is further challenged by sparse gradients of ùê†ùê†\\mathbf{g}, especially for combinatorial solvers. To address these challenges, we propose using a smooth and learnable Landscape Surrogate ‚Ñ≥‚Ñ≥\\mathcal{M} as a replacement for f‚àòùê†ùëìùê†f\\circ\\mathbf{g}. This surrogate, learnable by neural networks, can be computed faster than the solver ùê†ùê†\\mathbf{g}, provides dense and smooth gradients during training, can generalize to unseen optimization problems, and is efficiently learned via alternating optimization. We test our approach on both synthetic problems, including shortest path and multidimensional knapsack, and real-world problems such as portfolio optimization, achieving comparable or superior objective values compared to state-of-the-art baselines while reducing the number of calls to ùê†ùê†\\mathbf{g}. Notably, our approach outperforms existing methods for computationally expensive high-dimensional problems.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"SCIP: Solving constraint integer programs\",\n        \"Differentiable convex optimization layers\",\n        \"Optnet: Differentiable optimization as a layer in neural networks\",\n        \"Mixed-integer nonlinear optimization\",\n        \"Portfolio construction through mixed-integer programming at grantham, mayo, van otterloo and company\",\n        \"The offset tree for learning with partial labels\",\n        \"Non-convex mixed-integer nonlinear programming: A survey\",\n        \"Learning optimization proxies for large-scale security-constrained economic dispatch\",\n        \"Dynamic programming for Predict+Optimise\",\n        \"CVXPY: A Python-embedded modeling language for convex optimization\",\n        \"Generic methods for optimization-based modeling\",\n        \"Task-based end-to-end model learning in stochastic optimization\",\n        \"Smart ‚Äúpredict, then optimize‚Äù\",\n        \"Arriving on time\",\n        \"MIPaaL: Mixed integer program as a layer\",\n        \"Surco: Learning linear surrogates for combinatorial nonlinear optimization problems\",\n        \"On differentiating parameterized argmin and argmax problems with application to bi-level optimization\",\n        \"Deep declarative networks: A new hope\",\n        \"Gurobi optimizer reference manual\",\n        \"Portfolio selection with higher moments\",\n        \"Branch & learn for recursively and iteratively solvable problems in predict+optimize\",\n        \"Directed regression\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Actor-critic algorithms\",\n        \"Combinatorial Optimization: Theory and Algorithms\",\n        \"Practical route planning under delay uncertainty: Stochastic shortest path queries\",\n        \"Self-improving reactive agents based on reinforcement learning, planning and teaching\",\n        \"Smart predict-and-optimize for hard combinatorial optimization problems\",\n        \"Decision-focused learning: Through the lens of learning to rank\",\n        \"Portfolio selection\",\n        \"Implicit mle: backpropagating through discrete exponential family distributions\",\n        \"Numerical Optimization\",\n        \"Comboptnet: Fit the right np-hard problem by learning integer programming constraints\",\n        \"Differentiation of blackbox combinatorial solvers\",\n        \"Wiki various end-of-day data\",\n        \"BARON 21.1.13: Global Optimization of Mixed-Integer Nonlinear Programs, User‚Äôs Manual\",\n        \"Decision-focused learning without decision-making: Learning locally optimized decision losses\",\n        \"Pyepo: A pytorch-based end-to-end predict-then-optimize library for linear and integer programming\",\n        \"Satnet: Bridging deep learning and logical reasoning using a differentiable satisfiability solver\",\n        \"End to end learning and optimization on graphs\",\n        \"Melding the data-decisions pipeline: Decision-focused learning for combinatorial optimization\",\n        \"Bome! bilevel optimization made easy: A simple first-order approach\",\n        \"Reinforcement learning from optimization proxy for ride-hailing vehicle relocation\",\n        \"Learning interpretable, tree-based projection mappings for nonlinear embeddings\",\n        \"Semi-supervised learning with decision trees: Graph Laplacian tree alternating optimization\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Landscape Surrogate: Learning Decision Losses for Mathematical Optimization Under Partial Information, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}