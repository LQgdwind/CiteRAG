{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: It Takes Four to Tango: Multiagent Selfplay for Automatic Curriculum Generation\n\nPaper Abstract: Abstract We are interested in training general-purpose reinforcement learning agents that can solve a wide variety of goals. Training such agents efficiently requires automatic generation of a goal curriculum. This is challenging as it requires (a) exploring goals of increasing difficulty, while ensuring that the agent (b) is exposed to a diverse set of goals in a sample efficient manner and (c) does not catastrophically forget previously solved goals. We propose Curriculum Self Play (CuSP), an automated goal generation framework that seeks to satisfy these desiderata by virtue of a multi-player game with 4 agents. We extend the asymmetric curricula learning in PAIRED (Dennis et al., 2020) to a symmetrized game that carefully balances cooperation and competition between two off-policy student learners and two regret-maximizing teachers. CuSP additionally introduces entropic goal coverage and accounts for the non-stationary nature of the students, allowing us to automatically induce a curriculum that balances progressive exploration with anti-catastrophic exploitation. We demonstrate that our method succeeds at generating an effective curricula of goals for a range of control tasks, outperforming other methods at zero-shot test-time generalization to novel out-of-distribution goals.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hindsight experience replay\",\n        \"Emergent tool use from multi-agent autocurricula\",\n        \"Emergent complexity via multi-agent competition\",\n        \"Curriculum learning\",\n        \"Learning with {amig}o: Adversarially motivated intrinsic goals\",\n        \"Emergent complexity and zero-shot transfer via unsupervised environment design\",\n        \"Diversity is all you need: Learning skills without a reward function\",\n        \"Automatic goal generation for reinforcement learning agents\",\n        \"Catastrophic forgetting in connectionist networks\",\n        \"A further generalization of the kakutani fixed point theorem, with application to nash equilibrium points\",\n        \"Automated curriculum learning for neural networks\",\n        \"Learning policy representations in multiagent systems\",\n        \"Evaluating generalization in multiagent systems using agent-interaction graphs\",\n        \"Unsupervised meta-learning for reinforcement learning\",\n        \"Soft actor-critic: Off-policy maximum entropy deep reinforcement learning with a stochastic actor\",\n        \"Learning an embedding space for transferable robot skills\",\n        \"Illuminating generalization in deep reinforcement learning through procedural level generation\",\n        \"Adam: A method for stochastic optimization\",\n        \"Overcoming catastrophic forgetting in neural networks\",\n        \"Pytorch implementations of reinforcement learning algorithms\",\n        \"Autocurricula and the emergence of innovation from social interaction: A manifesto for multi-agent intelligence research\",\n        \"Generalized hindsight for reinforcement learning\",\n        \"Competitive experience replay\",\n        \"Learning latent plans from play\",\n        \"Teacher–student curriculum learning\",\n        \"Visual reinforcement learning with imagined goals\",\n        \"Non-cooperative games\",\n        \"Robogym\",\n        \"Solving rubik’s cube with a robot hand\",\n        \"Asymmetric self-play for automatic goal discovery in robotic manipulation\",\n        \"Multi-goal reinforcement learning: Challenging robotics environments and request for research\",\n        \"Automatic curriculum learning for deep rl: A short survey\",\n        \"Teacher algorithms for curriculum learning of deep rl in continuously parameterized environments\",\n        \"Machine theory of mind\",\n        \"Automated curriculum generation through setter-solver interactions\",\n        \"Mastering atari, go, chess and shogi by planning with a learned model\",\n        \"Proximal policy optimization algorithms\",\n        \"High-dimensional continuous control using generalized advantage estimation\",\n        \"Dynamics-aware unsupervised discovery of skills\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Memory augmented self-play\",\n        \"Learning goal embeddings via self-play for hierarchical reinforcement learning\",\n        \"Intrinsic motivation and automatic curricula via asymmetric self-play\",\n        \"dm_control: Software and tasks for continuous control\",\n        \"Domain randomization for transferring deep neural networks from simulation to the real world\",\n        \"Mujoco: A physics engine for model-based control\",\n        \"Über die topologische erweiterung von räumen\",\n        \"Paired open-ended trailblazer (poet): Endlessly generating increasingly complex and diverse learning environments and their solutions\",\n        \"Q-learning\",\n        \"General topology\",\n        \"Soft actor-critic (sac) implementation in pytorch\",\n        \"Automatic curriculum learning through value disagreement\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in It Takes Four to Tango: Multiagent Selfplay for Automatic Curriculum Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}