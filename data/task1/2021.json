{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Coded Computing for Low-Latency Federated Learning over Wireless Edge Networks\n\nPaper Abstract: Abstract Federated learning enables training a global model from data located at the client nodes, without data sharing and moving client data to a centralized server. Performance of federated learning in a multi-access edge computing (MEC) network suffers from slow convergence due to heterogeneity and stochastic fluctuations in compute power and communication link qualities across clients. We propose a novel coded computing framework, CodedFedL, that injects structured coding redundancy into federated learning for mitigating stragglers and speeding up the training procedure. CodedFedL enables coded computing for non-linear federated learning by efficiently exploiting distributed kernel embedding via random Fourier features that transforms the training task into computationally favourable distributed linear regression. Furthermore, clients generate local parity datasets by coding over their local datasets, while the server combines them to obtain the global parity dataset. Gradient from the global parity dataset compensates for straggling gradients during training, and thereby speeds up convergence. For minimizing the epoch deadline time at the MEC server, we provide a tractable approach for finding the amount of coding redundancy and the number of local data points that a client processes during training, by exploiting the statistical properties of compute as well as communication delays. We also characterize the leakage in data privacy when clients share their local parity datasets with the server. Additionally, we analyze the convergence rate and iteration complexity of CodedFedL under simplifying assumptions, by treating CodedFedL as a stochastic gradient descent algorithm. Finally, for demonstrating gains that CodedFedL can achieve in practice, we conduct numerical experiments using practical network parameters and benchmark datasets, in which CodedFedL speeds up the overall training time by up to 15Ã—15\\times in comparison to the benchmark schemes.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Coded federated learning\",\n        \"Coded computing for federated learning at the edge\",\n        \"Role of Big Data in Internet of Things Networks\",\n        \"Smart health monitoring and management system: Toward autonomous wearable sensing for internet of things using big data analytics\",\n        \"Multi-access edge computing: open issues, challenges and future perspectives\",\n        \"Priority control in communication networks for accuracy-freshness tradeoff in real-time road-traffic information delivery\",\n        \"Efficient computation offloading for multi-access edge computing in 5G HetNets\",\n        \"Edge computing technologies for Internet of Things: a primer\",\n        \"Joint communication, computation, caching, and control in big data multi-access edge computing\",\n        \"Communication-efficient learning of deep networks from decentralized data\",\n        \"Federated learning: Strategies for improving communication efficiency\",\n        \"Federated learning with non-iid data\",\n        \"Random features for large-scale kernel machines\",\n        \"Differential privacy as a mutual information constraint\",\n        \"Privacy-utility trade-off of linear regression under random projections and additive noise\",\n        \"Effective Straggler Mitigation: Attack of the Clones.\",\n        \"Efficient task replication for fast response times in parallel computation\",\n        \"A fundamental tradeoff between computation and communication in distributed computing\",\n        \"Speeding up distributed machine learning using codes\",\n        \"Coded computation over heterogeneous clusters\",\n        \"Gradient Coding: Avoiding Stragglers in Distributed Learning\",\n        \"Straggler Mitigation in Distributed Optimization Through Data Encoding\",\n        \"Coded computing\",\n        \"Improved latency-communication trade-off for map-shuffle-reduce systems with stragglers\",\n        \"A fundamental storage-communication tradeoff for distributed computing with straggling nodes\",\n        \"Redundancy techniques for straggler mitigation in distributed optimization and learning.\",\n        \"Communication-Computation Efficient Gradient Coding\",\n        \"Coded computing for distributed machine learning in wireless edge network\",\n        \"Polynomial Codes: an Optimal Design for High-Dimensional Coded Matrix Multiplication\",\n        \"Gradient coding from cyclic MDS codes and expander graphs\",\n        \"Approximate gradient coding via sparse random graphs\",\n        \"Federated optimization in heterogeneous networks\",\n        \"Federated learning over wireless networks: Convergence analysis and resource allocation\",\n        \"Resource management and fairness for federated learning over wireless edge networks\",\n        \"Hybrid-FL for wireless networks: Cooperative learning mechanism using non-iid data\",\n        \"A multivariate linear regression test for the arbitrage pricing theory\",\n        \"Linear regression in astronomy.\",\n        \"Methods and applications of linear models: regression and the analysis of variance\",\n        \"Uniform approximation of functions with random bases\",\n        \"On data-dependent random features for improved generalization in supervised learning\",\n        \"Random feature maps for dot product kernels\",\n        \"Random features for sparse signal classification\",\n        \"LTE; evolved universal terrestrial radio access (e-utra); physical channels and modulation\",\n        \"Optimal allocation of redundancy between packet-level erasure coding and physical-layer channel coding in fading channels\",\n        \"Optimizing joint erasure-and error-correction coding for wireless packet transmissions\",\n        \"A primer on kernel methods\",\n        \"On multi-access edge computing: A survey of the emerging 5G network edge cloud architecture and orchestration\",\n        \"Survey on multi-access edge computing for internet of things realization\",\n        \"Convex optimization\",\n        \"On the LambertW function\",\n        \"MNIST handwritten digit database\",\n        \"Fashion-MNIST: a novel image dataset for benchmarking machine learning algorithms\",\n        \"Practical secure aggregation for federated learning on user-held data\",\n        \"QSGD: Communication-Efficient SGD via Gradient Quantization and Encoding\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Coded Computing for Low-Latency Federated Learning over Wireless Edge Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}