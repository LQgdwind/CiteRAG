{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Dependency Parsing as MRC-based Span-Span Prediction\n\nPaper Abstract: Abstract Higher-order methods for dependency parsing can partially but not fully address the issue that edges in dependency trees should be constructed at the text span/subtree level rather than word level. In this paper, we propose a new method for dependency parsing to address this issue. The proposed method constructs dependency trees by directly modeling span-span (in other words, subtree-subtree) relations. It consists of two modules: the text span proposal module which proposes candidate text spans, each of which represents a subtree in the dependency tree denoted by (root, start, end); and the span linking module, which constructs links between proposed spans. We use the machine reading comprehension (MRC) framework as the backbone to formalize the span linking module, where one span is used as query to extract the text span/subtree it should be linked to. The proposed method has the following merits: (1) it addresses the fundamental problem that edges in a dependency tree should be constructed between subtrees; (2) the MRC framework allows the method to retrieve missing spans in the span proposal stage, which leads to higher recall for eligible spans. Extensive experiments on the PTB, CTB and Universal Dependencies (UD) benchmarks demonstrate the effectiveness of the proposed method. 111Accepted by ACL2022 222The code is available at https://github.com/ShannonAI/mrc-for-dependency-parsing\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A fast and accurate dependency parser using neural networks\",\n        \"Semi-supervised sequence modeling with cross-view training\",\n        \"Online passive-aggressive algorithms\",\n        \"Pre-training with whole word masking for chinese bert\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Deep biaffine attention for neural dependency parsing\",\n        \"Transition-based dependency parsing with stack long short-term memory\",\n        \"Bilexical grammars and their cubic-time parsing algorithms\",\n        \"Left-to-right dependency parsing with pointer networks\",\n        \"Multitask pointer network for multi-representational parsing\",\n        \"Dependency parsing with bottom-up hierarchical pointer networks\",\n        \"Enhancing unsupervised generative dependency parser with contextual information\",\n        \"Long short-term memory\",\n        \"Graph-based dependency parsing with graph neural networks\",\n        \"Semi-supervised semantic dependency parsing using CRF autoencoders\",\n        \"Adam: A method for stochastic optimization\",\n        \"Simple and accurate dependency parsing using bidirectional LSTM feature representations\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Stack-pointer networks for dependency parsing\",\n        \"The stanford corenlp natural language processing toolkit\",\n        \"Building a large annotated corpus of English: The Penn Treebank\",\n        \"Online large-margin training of dependency parsers\",\n        \"Non-projective dependency parsing using spanning tree algorithms\",\n        \"Graph-to-graph transformer for transition-based dependency parsing\",\n        \"Recursive non-autoregressive graph-to-graph transformer for dependency parsing with iterative refinement\",\n        \"Rethinking self-attention: Towards interpretability in neural parsing\",\n        \"An efficient algorithm for projective dependency parsing\",\n        \"Universal Dependencies v1: A multilingual treebank collection\",\n        \"An effective neural network model for graph-based dependency parsing\",\n        \"Cross-lingual universal dependency parsing only from one monolingual treebank\",\n        \"Attention is all you need\",\n        \"Graph-based dependency parsing with bidirectional LSTM\",\n        \"Improved dependency parsing using implicit word connections learned from unlabeled data\",\n        \"Second-order neural dependency parsing with message passing and end-to-end training\",\n        \"Building a large-scale annotated Chinese corpus\",\n        \"Qanet: Combining local convolution with global self-attention for reading comprehension\",\n        \"Bidirectional transition-based dependency parsing\",\n        \"Efficient second-order TreeCRF for neural dependency parsing\",\n        \"Transition-based dependency parsing with rich non-local features\",\n        \"An empirical investigation of structured output modeling for graph-based neural dependency parsing\",\n        \"High-order graph-based neural dependency parsing\",\n        \"Probabilistic graph-based dependency parsing with convolutional neural network\",\n        \"A neural probabilistic structured-prediction model for transition-based dependency parsing\",\n        \"Head-Driven Phrase Structure Grammar parsing on Penn Treebank\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Dependency Parsing as MRC-based Span-Span Prediction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}