{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Training-free Conversion of Pretrained ANNs to SNNs for Low-Power and High-Performance Applications\n\nPaper Abstract: Abstract Spiking Neural Networks (SNNs) have emerged as a promising substitute for Artificial Neural Networks (ANNs) due to their advantages of fast inference and low power consumption. However, the lack of efficient training algorithms has hindered their widespread adoption. Existing supervised learning algorithms for SNNs require significantly more memory and time than their ANN counterparts. Even commonly used ANN-SNN conversion methods necessitate re-training of ANNs to enhance conversion efficiency, incurring additional computational costs. To address these challenges, we propose a novel training-free ANN-SNN conversion pipeline. Our approach directly converts pre-trained ANN models into high-performance SNNs without additional training. The conversion pipeline includes a local-learning-based threshold balancing algorithm, which enables efficient calculation of the optimal thresholds and fine-grained adjustment of threshold value by channel-wise scaling. We demonstrate the scalability of our framework across three typical computer vision tasks: image classification, semantic segmentation, and object detection. This showcases its applicability to both classification and regression tasks. Moreover, we have evaluated the energy consumption of the converted SNNs, demonstrating their superior low-power advantage compared to conventional ANNs. Our training-free algorithm outperforms existing methods, highlighting its practical applicability and efficiency. This approach simplifies the deployment of SNNs by leveraging open-source pre-trained ANN models and neuromorphic hardware, enabling fast, low-power inference with negligible performance reduction.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spikeprop: backpropagation for networks of spiking neurons\",\n        \"Simulation of networks of spiking neurons: a review of tools and strategies\",\n        \"Optimized potential initialization for low-latency spiking neural networks\",\n        \"Optimal ANN-SNN conversion for high-accuracy and ultra-low-latency spiking neural networks\",\n        \"Spiking deep convolutional neural networks for energy-efficient object recognition\",\n        \"Spike timing–dependent plasticity: a hebbian learning rule\",\n        \"Rethinking atrous convolution for semantic image segmentation\",\n        \"State transition of dendritic spines improves learning of sparse spiking neural networks\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"TrueNorth: Accelerating from zero to 64 million neurons in 10 years\",\n        \"Optimal conversion of conventional artificial neural networks to spiking neural networks\",\n        \"Unsupervised learning of digit recognition using spike-timing-dependent plasticity\",\n        \"Fast-classifying, high-accuracy spiking deep networks through weight and threshold balancing\",\n        \"Temporal effective batch normalization in spiking neural networks\",\n        \"The pascal visual object classes challenge: A retrospective\",\n        \"Spike trains encoding optimization for spiking neural networks implementation in fpga\",\n        \"Incorporating learnable membrane time constant to enhance learning of spiking neural networks\",\n        \"Neuronal dynamics: From single neurons to networks and models of cognition\",\n        \"Deep spiking neural network: Energy efficiency through time based coding\",\n        \"RMP-SNN: Residual membrane potential neuron for enabling deeper high-accuracy and low-latency spiking neural network\",\n        \"Semantic contours from inverse detectors\",\n        \"The organization of behavior: A neuropsychological theory\",\n        \"Spiking deep networks with LIF neurons\",\n        \"Low-latency spiking neural networks using pre-charged membrane potential and delayed evaluation\",\n        \"Which model to use for cortical spiking neurons?\",\n        \"Stdp-based spiking deep convolutional neural networks for object recognition\",\n        \"Spiking-YOLO: Spiking neural network for energy-efficient object detection\",\n        \"A free lunch from ANN: Towards efficient, accurate spiking neural networks calibration\",\n        \"Microsoft coco: Common objects in context\",\n        \"Focal loss for dense object detection\",\n        \"Ssd: Single shot multibox detector\",\n        \"Fully convolutional networks for semantic segmentation\",\n        \"Networks of spiking neurons: the third generation of neural network models\",\n        \"Torchvision: Pytorch’s computer vision library\",\n        \"Unsupervised learning of visual features through spike timing dependent plasticity\",\n        \"Surrogate gradient learning in spiking neural networks: Bringing the power of gradient-based optimization to spiking neural networks\",\n        \"Sparse spiking gradient descent\",\n        \"Towards artificial general intelligence with hybrid tianjic chip architecture\",\n        \"A reconfigurable on-line learning spiking neuromorphic processor comprising 256 neurons and 128K synapses\",\n        \"DIET-SNN: A low-latency spiking neural network with direct input encoding and leakage and threshold optimization\",\n        \"Enabling deep spiking neural networks with hybrid conversion and spike timing dependent backpropagation\",\n        \"Conversion of continuous-valued deep networks to efficient event-driven networks for image classification\",\n        \"Going deeper in spiking neural networks: VGG and residual architectures\",\n        \"ESL-SNNs: An evolutionary structure learning strategy for spiking neural networks\",\n        \"Slayer: Spike layer error reassignment in time\",\n        \"Competitive hebbian learning through spike-timing-dependent synaptic plasticity\",\n        \"FCOS: fully convolutional one-stage object detection\",\n        \"Swat: A spiking neural network training algorithm for classification problems\",\n        \"Spatio-temporal backpropagation for training high-performance spiking neural networks\",\n        \"Direct training for spiking neural networks: Faster, larger, better\",\n        \"Brain-inspired learning on neuromorphic substrates\",\n        \"Spikegpt: Generative pre-trained language model with spiking neural networks\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Training-free Conversion of Pretrained ANNs to SNNs for Low-Power and High-Performance Applications, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}