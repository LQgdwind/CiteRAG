{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Data Structures for Model-free Data-Driven Computational Mechanics\n\nPaper Abstract: Abstract The data-driven computing paradigm initially introduced by Kirchdoerfer & Ortiz [1] enables finite element computations in solid mechanics to be performed directly from material data sets, without an explicit material model. From a computational effort point of view, the most challenging task is the projection of admissible states at material points onto their closest states in the material data set. In this study, we compare and develop several possible data structures for solving the nearest-neighbor problem. We show that approximate nearest-neighbor (ANN) algorithms can accelerate material data searches by several orders of magnitude relative to exact searching algorithms. The approximations are suggested by‚Äîand adapted to‚Äîthe structure of the data-driven iterative solver and result in no significant loss of solution accuracy. We assess the performance of the ANN algorithm with respect to material data set size with the aid of a 3D elasticity test case. We show that computations on a single processor with up to one billion material data points are feasible within a few seconds execution time with a speed up of more than 106superscript10610^{6} with respect to exact kùëòk-d trees.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Data-driven computational mechanics\",\n        \"Data driven computing with noisy material data sets\",\n        \"Data-driven computing in dynamics\",\n        \"Model-free data-driven inelasticity\",\n        \"A data-driven approach to nonlinear elasticity\",\n        \"Assessment of data-driven computational mechanics in finite strain elasticity\",\n        \"Data-driven finite elasticity\",\n        \"Data-driven fracture mechanics\",\n        \"Model-free data-driven compuational mechanics enhanced by tensor voting\",\n        \"Data-based derivation of material response\",\n        \"Measuring stress field without constitutive equation\",\n        \"Non-parametric material state field extraction from full field measurements\",\n        \"Model-free data-driven methods in mechanics: material data identification and solvers\",\n        \"An automatic method for solving discrete programming problems\",\n        \"An algorithm for finding best matches in logarithmic expected time\",\n        \"Multidimensional binary search trees used for associative searching\",\n        \"A branch and bound algorithm for computing k-nearest neighbors\",\n        \"Quad trees a data structure for retrieval on composite keys\",\n        \"R-trees: A dynamic index structure for spatial searching\",\n        \"Satisfying general proximity/similarity queries with metric trees\",\n        \"Data structures and algorithms for nearest neighbor search in general metric spaces\",\n        \"M-tree: An efficient access method for similarity search in metric spaces\",\n        \"Five balltree construction algorithms\",\n        \"Refinements to nearest-neighbor searching ink-dimensional trees\",\n        \"Approximative fast nearest-neighbour recognition\",\n        \"Approximate nearest neighbor queries in fixed dimensions.\",\n        \"An optimal algorithm for approximate nearest neighbor searching fixed dimensions\",\n        \"Near neighbor search in large metric spaces\",\n        \"Optimised kd-trees for fast image descriptor matching\",\n        \"Fast approximate nearest neighbors with automatic algorithm configuration.\",\n        \"Shape indexing using approximate nearest-neighbour search in high-dimensional spaces\",\n        \"Flann-fast library for approximate nearest neighbors user manual\",\n        \"Scalable nearest neighbor algorithms for high dimensional data\",\n        \"Monotonic search networks for computer vision databases\",\n        \"Fast approximate nearest-neighbor search with k-nearest neighbor graph\",\n        \"Efficient k-nearest neighbor graph construction for generic similarity measures\",\n        \"Approximate nearest neighbor algorithm based on navigable small world graphs\",\n        \"Efficient and robust approximate nearest neighbor search using hierarchical navigable small world graphs\",\n        \"Approximate nearest neighbor search on high dimensional data-experiments, analyses, and improvement\",\n        \"Fast approximate nearest neighbor search with the navigating spreading-out graph\",\n        \"Satellite system graph: Towards the efficiency up-boundary of graph-based approximate nearest neighbor search\",\n        \"Ggnn: Graph-based gpu nearest neighbor search\",\n        \"K-nearest neighbor search for moving query point\",\n        \"Efficient k-nearest neighbor search on moving object trajectories\",\n        \"Scalable distributed processing of k nearest neighbor queries over moving objects\",\n        \"Random forests and adaptive nearest neighbors\",\n        \"Random decision forests\",\n        \"Classification and regression trees\",\n        \"Dimensionality estimation, manifold learning and function approximation using tensor voting.\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Efficient Data Structures for Model-free Data-Driven Computational Mechanics, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}