{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Intelligent multicast routing method based on multi-agent deep reinforcement learning in SDWN\n\nPaper Abstract: Abstract Multicast communication technology is widely applied in wireless environments with a high device density. Traditional wireless network architectures have difficulty flexibly obtaining and maintaining global network state information and cannot quickly respond to network state changes, thus affecting the throughput, delay, and other QoS requirements of existing multicasting solutions. Therefore, this paper proposes a new multicast routing method based on multiagent deep reinforcement learning (MADRL-MR) in a software-defined wireless networking (SDWN) environment. First, SDWN technology is adopted to flexibly configure the network and obtain network state information in the form of traffic matrices representing global network links information, such as link bandwidth, delay, and packet loss rate. Second, the multicast routing problem is divided into multiple subproblems, which are solved through multiagent cooperation. To enable each agent to accurately understand the current network state and the status of multicast tree construction, the state space of each agent is designed based on the traffic and multicast tree status matrices, and the set of AP nodes in the network is used as the action space. A novel single-hop action strategy is designed, along with a reward function based on the four states that may occur during tree construction: progress, invalid, loop, and termination. Finally, a decentralized training approach is combined with transfer learning to enable each agent to quickly adapt to dynamic network changes and accelerate convergence. Simulation experiments show that MADRL-MR outperforms existing algorithms in terms of throughput, delay, packet loss rate, etc., and can establish more intelligent multicast routes.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Survey paper on multicast routing in mobile ad-hoc networks\",\n        \"Performance analysis of self‐organised multicast group in multi‐radio multi‐channel wireless mesh networks\",\n        \"Approximating optimal multicast trees in wireless multihop networks\",\n        \"Wireless mesh networks: a survey\",\n        \"Software defined wireless network (SDWN): An evolvable architecture for W-PANs\",\n        \"Software‐defined networking (SDN): a survey\",\n        \"A novel framework for resource discovery and self-configuration in software defined wireless mesh networks\",\n        \"A fast algorithm for Steiner trees\",\n        \"An approximate solution for steiner problem in graphs\",\n        \"The computation of nearly minimal steiner trees in graphs\",\n        \"RL-routing: An SDN routing algorithm based on deep reinforcement learning\",\n        \"Intelligent routing based on reinforcement learning for software-defined networking\",\n        \"DRSIR: A deep reinforcement learning approach for routing in software-defined networking\",\n        \"CFR-RL: Traffic engineering with reinforcement learning in SDN\",\n        \"An evolutionary transfer reinforcement learning framework for multiagent systems\",\n        \"An improved algorithm for Steiner trees\",\n        \"A Delay-Constrained Steiner Tree Algorithm Using MPH\",\n        \"Steiner tree heuristic algorithm based on weighted node\",\n        \"Online multicast tree construction with bandwidth and delay constraints in multi-channel multi-radio wireless mesh networks\",\n        \"The transformation of the k-shortest steiner trees search problem into binary dynamic problem for effective evolutionary methods application\",\n        \"Algorithms for calculation of candidate trees for efficient multicasting in elastic optical networks\",\n        \"Determining the minimum cost steiner tree for delay constrained problems\",\n        \"Delay-optimized multicast tree packing in software-defined networks\",\n        \"Software defined multicast for large-scale multi-layer leo satellite networks\",\n        \"Improving QoS performance of ATM and MPLS using Multicast Routing and ACO Optimization\",\n        \"A novel hybrid ant colony optimization for a multicast routing problem\",\n        \"X-architecture Steiner Tree Algorithm with Limited Routing Length inside Obstacle\",\n        \"Gpso hybrid algorithm for rectilinear steiner tree optimization\",\n        \"A new crossover mechanism for genetic algorithms for Steiner tree optimization\",\n        \"Multicast tree generation technique using reinforcement learning in sdn environments\",\n        \"Joint channel assignment and multicast routing in multi-channel multi-radio wireless mesh networks based on q-learning\",\n        \"A new deep Q-network design for QoS multicast routing in cognitive radio MANETs\",\n        \"Multicast Tree Generation using Meta Reinforcement Learning in SDN-based Smart Network Platforms\",\n        \"DRL-M4MR: An intelligent multicast routing approach based on DQN deep reinforcement learning in SDN\",\n        \"Urban traffic control in software defined internet of things via a multi-agent deep reinforcement learning approach\",\n        \"Cooperative Multi-Agent Deep Reinforcement Learning for Dynamic Virtual Network Allocation With Traffic Fluctuations\",\n        \"oint traffic control and multi-channel reassignment for core backbone network in SDN-IoT: a multi-agent deep reinforcement learning approach\",\n        \"Routing with Graph Convolutional Networks and Multi-Agent Deep Reinforcement Learning\",\n        \"Multi-agent reinforcement learning framework in sdn-iot for transient load detection and prevention\",\n        \"Teaching on a budget: Agents advising agents in reinforcement learning\",\n        \"Actor-mimic: Deep multitask and transfer reinforcement learning\",\n        \"A survey on transfer learning for multiagent reinforcement learning systems\",\n        \"LLMP: exploiting LLDP for latency measurement in software-defined data center networks\",\n        \"Normalization as a preprocessing engine for data mining and the approach of preference matrix\",\n        \"A survey of applying reinforcement learning techniques to multicast routing\",\n        \"Actor-critic algorithms\",\n        \"Single and multi-agent deep reinforcement learning for AI-enabled wireless networks: A tutorial\",\n        \"Dynamic task offloading in multi-agent mobile edge computing networks\",\n        \"Multi-agent reinforcement learning for resource allocation in IoT networks with edge computing\",\n        \"The application of multi-agent reinforcement learning in UAV networks\",\n        \"Transfer learning in deep reinforcement learning: A survey\",\n        \"Mininet-WIFI\",\n        \"Ryu\",\n        \"Iperf\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Intelligent multicast routing method based on multi-agent deep reinforcement learning in SDWN, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}