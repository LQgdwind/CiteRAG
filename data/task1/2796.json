{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fine-Grained Complexity and Algorithms for the Schulze Voting MethodA previous version of this work appears in EC 2021 [44]. In this version we strengthen Theorem 6.2 which now holds also for the problem of finding a Schulze winner.\n\nPaper Abstract: Abstract We study computational aspects of a well-known single-winner voting rule called the Schulze method [Schulze, 2003] which is used broadly in practice. In this method the voters give (weak) ordinal preference ballots which are used to define the weighted majority graph of direct comparisons between pairs of candidates. The choice of the winner comes from indirect comparisons in the graph, and more specifically from considering directed paths instead of direct comparisons between candidates. When the input is the weighted majority graph, to our knowledge, the fastest algorithm for computing all winners in the Schulze method uses a folklore reduction to the All-Pairs Bottleneck Paths (APBP) problem and runs in 𝒪​(m2.69)𝒪superscript𝑚2.69\\mathcal{O}(m^{2.69}) time, where m𝑚m is the number of candidates. It is an interesting open question whether this can be improved. Our first result is a combinatorial algorithm with a nearly quadratic running time for computing all winners. This running time is essentially optimal as it is nearly linear in the size of the weighted majority graph. If the input to the Schulze winners problem is not the weighted majority graph but the preference profile, then constructing the weighted majority graph is a bottleneck that increases the running time significantly; in the special case when there are m𝑚m candidates and n=𝒪​(m)𝑛𝒪𝑚n=\\mathcal{O}(m) voters, the running time is 𝒪​(m2.69)𝒪superscript𝑚2.69\\mathcal{O}(m^{2.69}), or 𝒪​(m2.5)𝒪superscript𝑚2.5\\mathcal{O}(m^{2.5}) if there is a nearly-linear time algorithm for multiplying dense square matrices. To address this bottleneck, we prove a formal equivalence between the well-studied Dominance Product problem and the problem of computing the weighted majority graph. As the Dominance Product problem is believed to require at least time r2.5−o​(1)superscript𝑟2.5𝑜1r^{2.5-o(1)} on r×r𝑟𝑟r\\times r matrices, our equivalence implies that constructing the weighted majority graph in 𝒪​(m2.499)𝒪superscript𝑚2.499\\mathcal{O}(m^{2.499}) time for m𝑚m candidates and n=𝒪​(m)𝑛𝒪𝑚n=\\mathcal{O}(m) voters would imply a breakthrough in the study of “intermediate” problems [Lincoln et al., 2020] in fine-grained complexity. We prove a similar connection between the so called Dominating Pairs problem and the problem of finding a winner in the Schulze method. Our paper is the first to bring fine-grained complexity into the field of computational social choice. Previous approaches say nothing about lower bounds for problems that already have polynomial time algorithms. By bringing fine-grained complexity into the picture we can identify voting protocols that are unlikely to be practical for large numbers of candidates and/or voters, as their complexity is likely, say at least cubic.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Computational Social Choice: The First Ten Years and Beyond\",\n        \"A Refined Laser Method and Faster Matrix Multiplication\",\n        \"Tournament Solutions\",\n        \"Handbook of Computational Social Choice\",\n        \"Parameterized Algorithmics for Computational Social Choice: Nine Research Challenges\",\n        \"Tight Approximation Guarantees for Concave Coverage Problems\",\n        \"Tight Approximation Bounds for Maximum Multi-Coverage\",\n        \"The Principles of LiquidFeedback\",\n        \"Decremental Strongly-Connected Components and Single-Source Reachability in Near-Linear Time\",\n        \"Interactive Democracy\",\n        \"On the Computation of Fully Proportional Representation\",\n        \"Parameterized Algorithms\",\n        \"Computing the Schulze Method for Large-Scale Preference Data Sets\",\n        \"Parameterized Complexity\",\n        \"Tight Approximation for Proportional Approval Voting\",\n        \"Fast Algorithms for (max, min)-Matrix Multiplication and Bottleneck Shortest Paths\",\n        \"Having a Hard Time? Explore Parameterized Complexity!\",\n        \"Clone Structures in Voters’ Preferences\",\n        \"Trends in Computational Social Choice\",\n        \"An On-Line Edge-Deletion Problem\",\n        \"A Survey on Approximation in Parameterized Complexity: Hardness and Algorithms\",\n        \"Approximation and Hardness of Shift-Bribery\",\n        \"Parameterization in Computational Social Choice\",\n        \"Coalitional Manipulation for Schulze’s Rule\",\n        \"Schulze and Ranked-Pairs Voting are Fixed-Parameter Tractable to Bribe, Manipulate, and Control\",\n        \"On the Power of Unique 2-Prover 1-Round Games\",\n        \"Powers of Tensors and Fast Matrix Multiplication\",\n        \"Monochromatic Triangles, Intermediate Matrix Products, and Convolutions\",\n        \"Improved Rectangular Matrix Multiplication using Powers of the Coppersmith-Winograd Tensor\",\n        \"Hamming Distance Completeness\",\n        \"Approximation Algorithms and Hardness Results for Fair Division with Indivisible Goods\",\n        \"Computing Dominances in E^n\",\n        \"A Theorem on the Construction of Voting Paradoxes\",\n        \"Control Complexity of Schulze Voting\",\n        \"A Complexity-of-Strategic-Behavior Comparison between Schulze’s Rule and Ranked Pairs\",\n        \"The Margin of Victory in Schulze, Cup, and Copeland Elections: Complexity of the Regular and Exact Variants\",\n        \"SETH vs Approximation\",\n        \"Geometry of Voting\",\n        \"A New Monotonic and Clone-Independent Single-Winner Election Method\",\n        \"A New Monotonic, Clone-Independent, Reversal Symmetric, and Condorcet-Consistent Single-Winner Election Method\",\n        \"The Schulze Method of Voting\",\n        \"Finding a Collective Set of Items: From Proportional Multirepresentation to Group Recommendation\",\n        \"Aggregation of Preferences with Variable Electorate\",\n        \"Fine-Grained Complexity and Algorithms for the Schulze Voting Method\",\n        \"All-Pairs Bottleneck Paths in Vertex Weighted Graphs\",\n        \"Decremental Dynamic Connectivity\",\n        \"Independence of Clones as a Criterion for Voting Rules\",\n        \"Multiplying Matrices Faster than Coppersmith-Winograd\",\n        \"On Some Fine-Grained Questions in Algorithms and Complexity\",\n        \"All Pairs Bottleneck Paths and Max-Min Matrix Products in Truly Subcubic Time\",\n        \"Widest path problem—Wikipedia, the free encyclopedia\",\n        \"Efficient Algorithms on Sets of Permutations, Dominance, and Real-Weighted APSP\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Fine-Grained Complexity and Algorithms for the Schulze Voting MethodA previous version of this work appears in EC 2021 [44]. In this version we strengthen Theorem 6.2 which now holds also for the problem of finding a Schulze winner., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}