{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Computing-in-Memory-based One-Class Hyperdimensional Computing Model for Outlier Detection\n\nPaper Abstract: Abstract In this work, we present ODHD, an algorithm for outlier detection based on hyperdimensional computing (HDC), a non-classical learning paradigm. Along with the HDC-based algorithm, we propose IM-ODHD, a computing-in-memory (CiM) implementation based on hardware/software (HW/SW) codesign for improved latency and energy efficiency. The training and testing phases of ODHD may be performed with conventional CPU/GPU hardware or our IM-ODHD, SRAM-based CiM architecture using the proposed HW/SW codesign techniques. We evaluate the performance of ODHD on six datasets from different application domains using three metrics, namely accuracy, F1 score, and ROC-AUC, and compare it with multiple baseline methods such as OCSVM, isolation forest, and autoencoder. The experimental results indicate that ODHD outperforms all the baseline methods in terms of these three metrics on every dataset for both CPU/GPU and CiM implementations. Furthermore, we perform an extensive design space exploration to demonstrate the tradeoff between delay, energy efficiency, and performance of ODHD. We demonstrate that the HW/SW codesign implementation of the outlier detection on IM-ODHD is able to outperform the GPU-based implementation of ODHD by at least 293√ó\\times/419√ó\\times in terms of training/testing latency (and on average 16.0√ó\\times/15.9√ó\\times in terms of training/testing energy consumption).\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Outlier detection in energy disaggregation using subspace learning and gaussian mixture model\",\n        \"Outlier detection with kernel density functions\",\n        \"Anomaly detection of user behavior for database security audit based on ocsvm\",\n        \"Isolation forest\",\n        \"Exploring inherent sensor redundancy for automotive anomaly detection\",\n        \"Hyperdimensional computing: An introduction to computing in distributed representation with high-dimensional random vectors\",\n        \"Classification using hyperdimensional computing: A review\",\n        \"Integrating event-based dynamic vision sensors with sparse hyperdimensional computing: a low-power accelerator with online learning capability\",\n        \"A robust and energy-efficient classifier using brain-inspired hyperdimensional computing\",\n        \"Learning classifiers from only positive and unlabeled data\",\n        \"Device and circuit architectures for in-memory computing\",\n        \"ODHD: one-class brain-inspired hyperdimensional computing for outlier detection\",\n        \"Outlier detection datasets (odds) library\",\n        \"An energy-efficient VLSI architecture for pattern recognition via deep embedding of computation in SRAM\",\n        \"An ultra-dense 2fefet tcam design based on a multi-domain fefet model\",\n        \"Achieving software-equivalent accuracy for hyperdimensional computing with ferroelectric-based in-memory computing\",\n        \"HDC-IM: Hyperdimensional computing in-memory architecture based on rram\",\n        \"Computing in memory with fefets\",\n        \"A fast and energy efficient computing-in-memory architecture for few-shot learning applications\",\n        \"Compute caches\",\n        \"Computing-in-memory for performance and energy-efficient homomorphic encryption\",\n        \"Efficient human activity recognition using hyperdimensional computing\",\n        \"Brief industry paper: HDAD: Hyperdimensional computing-based anomaly detection for automotive sensor attacks\",\n        \"Duality cache for data parallel acceleration\",\n        \"X-MANN: A crossbar based architecture for memory augmented neural networks\",\n        \"Subsampling for efficient and effective unsupervised outlier detection ensembles\",\n        \"LODES: Local density meets spectral outlier detection\",\n        \"Hyperparameter selection of one-class support vector machine by self-adaptive data shifting\",\n        \"HWiNFO - Free System Information Monitoring and Diagnostics\",\n        \"Haac: A hardware-software co-design to accelerate garbled circuits\",\n        \"Using side channel information and artificial intelligence for malware detection\",\n        \"Torchhd: An open-source python library to support hyperdimensional computing research\",\n        \"Further analysis of outlier detection with deep generative models\",\n        \"The pascal visual object classes (voc) challenge\",\n        \"Destiny: A tool for modeling emerging 3d nvm and edram caches\",\n        \"Predictive technology model for nano-cmos design exploration\",\n        \"Nangate 45nm open cell library\",\n        \"One-shot learning for ieeg seizure detection using end-to-end binary operations: Local binary patterns with hyperdimensional computing\",\n        \"Outlier detection with globally optimal exemplar-based gmm\",\n        \"A new algorithm for detecting outliers in linear regression\",\n        \"Ambit: In-memory accelerator for bulk bitwise operations using commodity dram technology\",\n        \"Drisa: A dram-based reconfigurable in-situ accelerator\",\n        \"Computedram: In-memory compute using off-the-shelf drams\",\n        \"SearcHD: A memory-centric hyperdimensional computing with stochastic training\",\n        \"A 5 Œºùúá\\\\muw standard cell memory-based configurable hyperdimensional computing accelerator for always-on smart sensing\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in A Computing-in-Memory-based One-Class Hyperdimensional Computing Model for Outlier Detection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}