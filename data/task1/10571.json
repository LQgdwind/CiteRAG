{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On the Efficacy of Eviction Policy for Key-Value Constrained Generative Language Model Inference\n\nPaper Abstract: Abstract Large language models (LLMs) are notably cost-prohibitive to deploy in resource-constrained environments due to their excessive memory and computational demands. In addition to model parameters, the key-value cache is also stored in GPU memory, growing linearly with batch size and sequence length. As a remedy, recent works have proposed various eviction policies for maintaining the overhead of key-value cache under a given budget. This paper embarks on the efficacy of existing eviction policies in terms of importance score calculation and eviction scope construction. We identify the deficiency of prior policies in these two aspects and introduce RoCo, a robust cache omission policy based on temporal attention scores and robustness measures. Extensive experimentation spanning prefilling and auto-regressive decoding stages validates the superiority of RoCo. Finally, we release EasyKV, a versatile software package dedicated to user-friendly key-value constrained generative inference. Code available at https://github.com/DRSY/EasyKV.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"GQA: Training generalized multi-query transformer models from multi-head checkpoints\",\n        \"Etc: Encoding long and structured inputs in transformers\",\n        \"L-eval: Instituting standardized evaluation for long context language models\",\n        \"Slicegpt: Compress large language models by deleting rows and columns\",\n        \"Longbench: A bilingual, multitask benchmark for long context understanding\",\n        \"METEOR: An automatic metric for MT evaluation with improved correlation with human judgments\",\n        \"Longformer: The long-document transformer\",\n        \"Generating long sequences with sparse transformers\",\n        \"Rethinking attention with performers\",\n        \"Flashattention-2: Faster attention with better parallelism and work partitioning\",\n        \"Monarch: Expressive structured matrices for efficient and accurate training\",\n        \"Flashattention: Fast and memory-efficient exact attention with io-awareness\",\n        \"Llm. int8 (): 8-bit matrix multiplication for transformers at scale\",\n        \"Massive language models can be accurately pruned in one-shot\",\n        \"Gptq: Accurate post-training quantization for generative pre-trained transformers\",\n        \"Lm-infinite: Simple on-the-fly length generalization for large language models\",\n        \"Mistral 7b\",\n        \"Alpacaeval: An automatic evaluator of instruction-following models\",\n        \"ROUGE: A package for automatic evaluation of summaries\",\n        \"Lost in the middle: How language models use long contexts\",\n        \"Scissorhands: Exploiting the persistence of importance hypothesis for llm kv cache compression at test time\",\n        \"Don’t give me the details, just the summary! topic-aware convolutional neural networks for extreme summarization\",\n        \"Transformers are multi-state rnns\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"The devil in linear transformer\",\n        \"Language models are unsupervised multitask learners\",\n        \"Get to the point: Summarization with pointer-generator networks\",\n        \"Fast transformer decoding: One write-head is all you need\",\n        \"Corex: Pushing the boundaries of complex reasoning through multi-model collaboration\",\n        \"Lamda: Language models for dialog applications\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Zephyr: Direct distillation of lm alignment\",\n        \"Attention is all you need\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Self-instruct: Aligning language models with self-generated instructions\",\n        \"Finetuned language models are zero-shot learners\",\n        \"Emergent abilities of large language models\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Os-copilot: Towards generalist computer agents with self-improvement\",\n        \"Sheared llama: Accelerating language model pre-training via structured pruning\",\n        \"Smoothquant: Accurate and efficient post-training quantization for large language models\",\n        \"Efficient streaming language models with attention sinks\",\n        \"Wizardlm: Empowering large language models to follow complex instructions\",\n        \"Big bird: Transformers for longer sequences\",\n        \"H _​2_2\\\\_2 o: Heavy-hitter oracle for efficient generative inference of large language models\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in On the Efficacy of Eviction Policy for Key-Value Constrained Generative Language Model Inference, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}