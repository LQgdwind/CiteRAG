{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Cooperative Self-training of Machine Reading Comprehension\n\nPaper Abstract: Abstract Pretrained language models have significantly improved the performance of downstream language understanding tasks, including extractive question answering, by providing high-quality contextualized word embeddings. However, training question answering models still requires large amounts of annotated data for specific domains. In this work, we propose a cooperative self-training framework, RGX, for automatically generating more non-trivial question-answer pairs to improve model performance. RGX is built upon a masked answer extraction task with an interactive learning environment containing an answer entity Recognizer, a question Generator, and an answer eXtractor. Given a passage with a masked entity, the generator generates a question around the entity, and the extractor is trained to extract the masked entity with the generated question and raw texts. The framework allows the training of question generation and answering models on any text corpora without annotation. We further leverage a self-training technique to improve the performance of both question generation and answer extraction models. Experiment results show that RGX outperforms the state-of-the-art (SOTA) pretrained language models and transfer learning approaches on standard question-answering benchmarks, and yields the new SOTA performance under given model size and transfer learning settings.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Beat the ai: Investigating adversarial human annotation for reading comprehension\",\n        \"Improving question answering model robustness with synthetic adversarial data generation\",\n        \"Maximum entropy models for named entity recognition\",\n        \"A neural probabilistic language model\",\n        \"Electra: Pre-training text encoders as discriminators rather than generators\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Question generation for question answering\",\n        \"Retrofitting structure-aware transformer language model for end tasks\",\n        \"Mrqa 2019 shared task: Evaluating generalization in reading comprehension\",\n        \"Span selection pre-training for question answering\",\n        \"Nips 2016 tutorial: Generative adversarial networks\",\n        \"Generative adversarial nets\",\n        \"Emergence of language with multi-agent games: Learning to communicate with sequences of symbols\",\n        \"Revisiting self-training for neural sequence generation\",\n        \"Convert: Efficient and accurate conversational representations from transformers\",\n        \"Poly-encoders: Transformer architectures and pre-training strategies for fast and accurate multi-sentence scoring\",\n        \"Question answering infused pre-training of general-purpose contextualized representations\",\n        \"Spanbert: Improving pre-training by representing and predicting spans\",\n        \"A natural policy gradient\",\n        \"Learning to answer by learning to ask: Getting the best of gpt-2 and bert worlds\",\n        \"Natural questions: a benchmark for question answering research\",\n        \"Multi-agent cooperation and the emergence of (natural) language\",\n        \"Generating diverse and consistent qa pairs from contexts with information-maximizing hierarchical conditional vaes\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Unsupervised question answering by cloze translation\",\n        \"Paq: 65 million probably-asked questions and what you can do with them\",\n        \"Mutual information and diverse decoding improve neural machine translation\",\n        \"Tell me how to ask again: Question data augmentation with controllable rewriting in continuous space\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Improving neural language models by segmenting, attending, and predicting the future\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"Emergence of grounded compositional language in multi-agent populations\",\n        \"Glove: Global vectors for word representation\",\n        \"Deep contextualized word representations\",\n        \"Training question answering models from synthetic data\",\n        \"Squad: 100,000+ questions for machine comprehension of text\",\n        \"Self-critical sequence training for image captioning\",\n        \"Self-training for jointly learning to ask and answer questions\",\n        \"End-to-end synthetic data generation for domain adaptation of question answering systems\",\n        \"Straight to the tree: Constituency parsing with neural syntactic distance\",\n        \"Structformer: Joint unsupervised induction of dependency and constituency structure from masked language modeling\",\n        \"Deterministic policy gradient algorithms\",\n        \"Question answering and question generation as dual tasks\",\n        \"Attention is all you need\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"Self-training with noisy student improves imagenet classification\",\n        \"Autoqa: From databases to qa semantic parsers with only synthetic training data\",\n        \"Seqgan: Sequence generative adversarial nets with policy gradient\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Cooperative Self-training of Machine Reading Comprehension, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}