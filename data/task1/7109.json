{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SA-MLP: Distilling Graph Knowledge from GNNs into Structure-Aware MLP\n\nPaper Abstract: Abstract. The message-passing mechanism helps Graph Neural Networks (GNNs) achieve remarkable results on various node classification tasks. Nevertheless, the recursive nodes fetching and aggregation in message-passing cause inference latency when deploying GNNs to large-scale graphs. One promising inference acceleration direction is to distill the GNNs into message-passing-free student multi-layer perceptrons (MLPs). However, the MLP student cannot fully learn the structure knowledge due to the lack of structure inputs, which causes inferior performance in the heterophily and inductive scenarios. To address this, we intend to inject structure information into MLP-like students in low-latency and interpretable ways. Specifically, we first design a Structure-Aware MLP (SA-MLP) student that encodes both features and structures without message-passing. Then, we introduce a novel structure-mixing knowledge distillation strategy to enhance the learning ability of MLPs for structure information. Furthermore, we design a latent structure embedding approximation technique with two-stage distillation for inductive scenarios. Extensive experiments on eight benchmark datasets under both transductive and inductive settings show that our SA-MLP can consistently outperform the teacher GNNs, while maintaining faster inference as MLPs. The source code of our work can be found in https://github.com/JC-202/SA-MLP.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Layer normalization\",\n        \"Binary graph neural networks\",\n        \"Item2vec: neural item embedding for collaborative filtering\",\n        \"Knowledge distillation: A good teacher is patient and consistent\",\n        \"Beyond low-frequency information in graph convolutional networks\",\n        \"FastGCN: Fast learning with graph convolutional networks via importance sampling\",\n        \"Simple and deep graph convolutional networks\",\n        \"Graph-Free Knowledge Distillation for Graph Neural Networks\",\n        \"Neural message passing for quantum chemistry\",\n        \"Inductive representation learning on large graphs\",\n        \"G-Mixup: Graph Data Augmentation for Graph Classification\",\n        \"Neural collaborative filtering\",\n        \"Distilling the knowledge in a neural network\",\n        \"Multilayer feedforward networks are universal approximators\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Graph-MLP: node classification without message passing in graph\",\n        \"On Representation Knowledge Distillation for Graph Neural Networks\",\n        \"FastText.zip: Compressing text classification models\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Finding frequent patterns in a large sparse graph\",\n        \"Large scale learning on non-Homophilous graphs: New benchmarks and strong simple methods\",\n        \"Pay Attention to MLPs\",\n        \"Are we ready for a new paradigm shift? a survey on visual deep mlp\",\n        \"Towards unsupervised deep graph structure learning\",\n        \"Do you even need attention? a stack of feed-forward layers does surprisingly well on imagenet\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Geom-GCN: Geometric graph convolutional networks\",\n        \"Graph Neural Networks for Friend Ranking in Large-Scale Social Platforms\",\n        \"Collective classification in network data\",\n        \"Intriguing properties of neural networks\",\n        \"Degree-Quant: Quantization-Aware Training for Graph Neural Networks\",\n        \"Graph Attention Networks\",\n        \"Knowledge-aware graph neural networks with label smoothness regularization for recommender systems\",\n        \"Traffic flow prediction via spatial temporal graph neural network\",\n        \"Mixup for Node and Graph Classification\",\n        \"Tinygnn: Learning efficient graph neural networks\",\n        \"Extract the knowledge of graph neural networks and go beyond it: An effective knowledge distillation framework\",\n        \"Distilling knowledge from graph convolutional networks\",\n        \"mixup: Beyond Empirical Risk Minimization\",\n        \"Graph-less Neural Networks: Teaching Old MLPs New Tricks Via Distillation\",\n        \"Learned low precision graph neural networks\",\n        \"Cold Brew: Distilling Graph Node Representations with Incomplete or Missing Neighborhoods\",\n        \"Accelerating large scale real-time GNN inference using channel pruning\",\n        \"Graph neural networks with heterophily\",\n        \"Beyond homophily in graph neural networks: Current limitations and effective designs\",\n        \"Deep graph structure learning for robust representations: A survey\",\n        \"Data-Free Adversarial Knowledge Distillation for Graph Neural Networks\",\n        \"Layer-dependent importance sampling for training deep and large graph convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in SA-MLP: Distilling Graph Knowledge from GNNs into Structure-Aware MLP, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}