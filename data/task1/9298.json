{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Retrospective: A Scalable Processing-in-Memory Accelerator for Parallel Graph Processing\n\nPaper Abstract: Abstract Our ISCA 2015 paper [1] provides a new programmable processing-in-memory (PIM) architecture and system design that can accelerate key data-intensive applications, with a focus on graph processing workloads. Our major idea was to completely rethink the system, including the programming model, data partitioning mechanisms, system support, instruction set architecture, along with near-memory execution units and their communication architecture, such that an important workload can be accelerated at a maximum level using a distributed system of well-connected near-memory accelerators. We built our accelerator system, Tesseract, using 3D-stacked memories with logic layers, where each logic layer contains general-purpose processing cores and cores communicate with each other using a message-passing programming model. Cores could be specialized for graph processing (or any other application to be accelerated). To our knowledge, our paper was the first to completely design a near-memory accelerator system from scratch such that it is both generally programmable and specifically customizable to accelerate important applications, with a case study on major graph processing workloads. Ensuing work in academia and industry showed that similar approaches to system design can greatly benefit both graph processing workloads and other applications, such as machine learning, for which ideas from Tesseract seem to have been influential. This short retrospective provides a brief analysis of our ISCA 2015 paper and its impact. We briefly describe the major ideas and contributions of the work, discuss later works that built on it or were influenced by it, and make some educated guesses on what the future may bring on PIM and accelerator systems.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Scalable Processing-in-Memory Accelerator for Parallel Graph Processing\",\n        \"HMC Specification 1.1\",\n        \"Hybrid Memory Cube: New DRAM Architecture Increases Density and Performance\",\n        \"High Bandwidth Memory (HBM) DRAM\",\n        \"TPU v4: An Optically Reconfigurable Supercomputer for Machine Learning with Hardware Support for Embedding\",\n        \"A Configurable Cloud-Scale DNN Processor for Real-Time AI\",\n        \"Cerebras Architecture Deep Dive: First Look Inside the Hardware/Software Co-Design for Deep Learning\",\n        \"The Microarchitecture of DOJO, Tesla’s Exa-Scale Computer\",\n        \"NVLink-Network Switch - NVIDIA’s Switch Chip for High Communication-Bandwidth SuperPODs\",\n        \"PIM-Enabled Instructions: A Low-Overhead, Locality-Aware Processing-in-Memory Architecture\",\n        \"Efficiently Scaling Transformer Inference\",\n        \"GShard: Scaling Giant Models with Conditional Computation and Automatic Sharding\",\n        \"Overlap Communication with Dependent Computation via Decomposition in Large Deep Learning Models\",\n        \"AIM: Energy-Efficient Aggregation Inside the Memory Hierarchy\",\n        \"A Modern Primer on Processing in Memory\",\n        \"GraphP: Reducing Communication for PIM-Based Graph Processing with Efficient Data Partition\",\n        \"GraphR: Accelerating Graph Processing Using ReRAM\",\n        \"GraphQ: Scalable PIM-Based Graph Processing\",\n        \"GraphH: A Processing-in-Memory Architecture for Large-Scale Graph Processing\",\n        \"GraphIA: An In-situ Accelerator for Large-scale Graph Processing\",\n        \"NEMESYS: Near-Memory Graph Copy Enhanced System-Software\",\n        \"GraphVine: Exploiting Multicast for Scalable Graph Analytics\",\n        \"GaaS-X: Graph Analytics Accelerator Supporting Sparse Data Representation using Crossbar Architectures\",\n        \"Ultra Efficient Acceleration for De Novo Genome Assembly via Near-Memory Computing\",\n        \"SpaceA: Sparse Matrix Vector Multiplication on Processing-in-Memory Accelerator\",\n        \"HyGraph: Accelerating Graph Processing with Hybrid Memory-Centric Computing\",\n        \"Gearbox: A Case for Supporting Accumulation Dispatching and Hybrid Partitioning in PIM-based Accelerators\",\n        \"Dalorex: A Data-Local Program Execution and Architecture for Memory-Bound Applications\",\n        \"Nvidia Hopper GPU: Scaling Performance\",\n        \"The True Processing In Memory Accelerator\",\n        \"Benchmarking a New Paradigm: Experimental Analysis and Characterization of a Real Processing-in-Memory System\",\n        \"Evaluating Machine Learning Workloads on Memory-Centric Computing Systems\",\n        \"Hardware Architecture and Software Stack for PIM Based on Commercial DRAM Technology: Industrial Product\",\n        \"25.4 A 20nm 6GB Function-In-Memory DRAM, Based on HBM2 with a 1.2 TFLOPS Programmable Computing Unit Using Bank-Level Parallelism, for Machine Learning Applications\",\n        \"Near-Memory Processing in Action: Accelerating Personalized Recommendation with AxDIMM\",\n        \"Improving In-Memory Database Operations with Acceleration DIMM (AxDIMM)\",\n        \"A 1ynm 1.25V 8Gb, 16Gb/s/pin GDDR6-based Accelerator-in-Memory supporting 1TFLOPS MAC Operation and Various Activation Functions for Deep-Learning Applications\",\n        \"184QPS/W 64Mb/mm2 3D Logic-to-DRAM Hybrid Bonding with Process-Near-Memory Engine for Recommendation System\",\n        \"System Architecture and Software Stack for GDDR6-AiM\",\n        \"FPGA-based Near-Memory Acceleration of Modern Data-Intensive Applications\",\n        \"Accelerating Weather Prediction using Near-Memory Reconfigurable Fabric\",\n        \"PGX.D: A Fast Distributed Graph Processing Engine\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"GraphPIM: Enabling Instruction-Level PIM Offloading in Graph Computing Frameworks\",\n        \"SISA: Set-Centric Instruction Set Architecture for Graph Mining on Processing-in-Memory Systems\",\n        \"Graphicionado: A High-Performance and Energy-Efficient Accelerator for Graph Analytics\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Retrospective: A Scalable Processing-in-Memory Accelerator for Parallel Graph Processing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}