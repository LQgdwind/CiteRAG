{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Heterogeneous Line Graph Transformer for Math Word Problems\n\nPaper Abstract: Abstract. This paper describes the design and implementation of a new machine learning model for online learning systems. We aim at improving the intelligent level of the systems by enabling an automated math word problem solver which can support a wide range of functions such as homework correction, difficulty estimation, and priority recommendation. We originally planned to employ existing models but realized that they processed a math word problem as a sequence or a homogeneous graph of tokens. Relationships between the multiple types of tokens such as entity, unit, rate, and number were ignored. We decided to design and implement a novel model to use such relational data to bridge the information gap between human-readable language and machine-understandable logical form. We propose a heterogeneous line graph transformer (HLGT) model that constructs a heterogeneous line graph via semantic role labeling on math word problems and then perform node representation learning aware of edge types. We add numerical comparison as an auxiliary task to improve model training for real-world use. Experimental results show that the proposed model achieves a better performance than existing models and suggest that it is still far below human performance. Information utilization and knowledge discovery is continuously needed to improve the online learning systems.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Engaging with massive online courses\",\n        \"Graph Transformer for Graph-to-Sequence Learning\",\n        \"N-LTP: A Open-source Neural Chinese Language Technology Platform with Pretrained Models\",\n        \"Measuring and Relieving the Over-Smoothing Problem for Graph Neural Networks from the Topological View\",\n        \"Question Directed Graph Attention Network for Numerical Reasoning over Text\",\n        \"Supervised Community Detection with Line Graph Neural Networks\",\n        \"Semantically-Aligned Equation Generation for Solving and Reasoning Math Word Problems\",\n        \"Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation\",\n        \"Deep Biaffine Attention for Neural Dependency Parsing\",\n        \"DROP: A Reading Comprehension Benchmark Requiring Discrete Reasoning Over Paragraphs\",\n        \"Learning from natural instructions\",\n        \"HanLP: Han Language Processing\",\n        \"Learning to Solve Arithmetic Word Problems with Verb Categorization\",\n        \"Heterogeneous Graph Transformer\",\n        \"Neural Math Word Problem Solver with Reinforcement Learning\",\n        \"Learning Fine-Grained Expressions to Solve Math Word Problems\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Parsing Algebraic Word Problems into Equations\",\n        \"MAWPS: A Math Word Problem Repository\",\n        \"Learning to Automatically Solve Algebra Word Problems\",\n        \"Scaling Semantic Parsers with On-the-Fly Ontology Matching\",\n        \"Modeling Intra-Relation in Math Word Problems with Different Functional Multi-Head Attentions\",\n        \"HMS: A Hierarchical Solver with Dependency-Enhanced Understanding for Math Word Problem\",\n        \"Finding Similar Exercises in Online Education Systems\",\n        \"A review of methods for automatic understanding of natural language mathematical problems\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Question Difficulty Prediction for Multiple Choice Problems in Medical Exams\",\n        \"Know What You Donâ€™t Know: Unanswerable Questions for SQuAD\",\n        \"Solving General Arithmetic Word Problems\",\n        \"Mapping to Declarative Knowledge for Word Problem Solving\",\n        \"Modeling Relational Data with Graph Convolutional Networks\",\n        \"Solving Math Word Problems with Multi-Encoders and Multi-Decoders\",\n        \"Automatically Solving Number Word Problems by Semantic Parsing and Reasoning\",\n        \"Experiments with a deductive question-answering program\",\n        \"Chinese Semantic Role Labeling with Shallow Parsing\",\n        \"Mining Heterogeneous Information Networks: Principles and Methodologies\",\n        \"RAT-SQL: Relation-Aware Schema Encoding and Linking for Text-to-SQL Parsers\",\n        \"Translating Math Word Problem to Expression Tree\",\n        \"Deep Neural Solver for Math Word Problems\",\n        \"Math Word Problem Solving with Explicit Numerical Values\",\n        \"A Goal-Driven Tree-Structured Neural Model for Math Word Problems\",\n        \"QANet: Combining Local Convolution with Global Self-Attention for Reading Comprehension\",\n        \"Heterogeneous Graph Neural Network\",\n        \"Graph-to-Tree Learning for Solving Math Word Problems\",\n        \"Ape210K: A Large-Scale and Template-Rich Dataset of Math Word Problems\",\n        \"Line Graph Enhanced AMR-to-Text Generation with Mix-Order Graph Attention Networks\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Heterogeneous Line Graph Transformer for Math Word Problems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}