{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Hierarchical Poisson Generator for Universal Graphs under Limited Resources 1 Yanlong Wen is the corresponding author.\n\nPaper Abstract: Abstract Graph generation is one of the most challenging tasks in recent years, and its core is to learn the ground truth distribution hiding in the training data. However, training data may not be available due to security concerns or unaffordable costs, which severely blows the learning models, especially the deep generative models. The dilemma leads us to rethink non-learned generation methods based on graph invariant features. Based on the observation of scale-free property, we propose a hierarchical Poisson graph generation algorithm. Specifically, we design a two-stage generation strategy. In the first stage, we sample multiple anchor nodes according to the Poisson distribution to further guide the formation of substructures, splitting the initial node set into multiple ones. Next, we progressively generate edges by sampling nodes through a degree mixing distribution, adjusting the tolerance towards exotic structures via two thresholds. We provide theoretical guarantees for hierarchical generation and verify the effectiveness of our method under 12 datasets of three categories. Experimental results show that our method fits the ground truth distribution better than various generation strategies and other distribution observations.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"FastSGG: Efficient Social Graph Generation Using a Degree Distribution Generation Model\",\n        \"Efficient Learning-based Community-Preserving Graph Generation\",\n        \"FairGen: Towards Fair Graph Generation\",\n        \"Conditional Diffusion Based on Discrete Graph Structures for Molecular Graph Generation\",\n        \"MolHF: A Hierarchical Normalizing Flow for Molecular Graph Generation\",\n        \"Navigating Chemical Space with Latent Flows\",\n        \"GraphGDP: Generative Diffusion Processes for Permutation Invariant Graph Generation\",\n        \"Protein Design with Guided Discrete Diffusion\",\n        \"Doobâ€™s Lagrangian: A Sample-Efficient Variational Approach to Transition Path Sampling\",\n        \"Deep Generative Models for Spatial Networks\",\n        \"TGG: Transferable Graph Generation for Zero-shot and Few-shot Learning\",\n        \"Deep Transfer Learning for City-scale Cellular Traffic Generation through Urban Knowledge Graph\",\n        \"Generalize to Fully Unseen Graphs: Learn Transferable Hyper-Relation Structures for Inductive Link Prediction\",\n        \"An embarrassingly simple approach to zero-shot learning\",\n        \"LinkBench: A database benchmark based on the Facebook social graph\",\n        \"LinkGen: Multipurpose linked data generator\",\n        \"gMark: Schema-driven generation of graphs and queries\",\n        \"Network Motifs: Simple Building Blocks of Complex Networks\",\n        \"NeVAE: A Deep Generative Model for Molecular Graphs\",\n        \"Deep Latent-Variable Models for Controllable Molecule Generation\",\n        \"Interpretable Molecular Graph Generation via Monotonic Constraints\",\n        \"FLOOD: A Flexible Invariant Learning Framework for Out-of-Distribution Generalization on Graphs\",\n        \"Building Graphs at Scale via Sequence of Edges: Model and Generation Algorithms (Extended Abstract)\",\n        \"Temporal Graph Generation Featuring Time-Bound Communities\",\n        \"Top-N: Equivariant Set and Graph Generation without Exchangeability\",\n        \"Coarse-to-Fine: a Hierarchical Diffusion Model for Molecule Generation in 3D\",\n        \"Graph Invariant Learning with Subgraph Co-mixup for Out-of-Distribution Generalization\",\n        \"Graphvae: Towards generation of small graphs using variational autoencoders\",\n        \"MolGAN: An implicit generative model for small molecular graphs\",\n        \"Graphdf: A discrete flow model for molecular graph generation\",\n        \"A survey on generative diffusion model\",\n        \"Variational Flow Matching for Graph Generation\",\n        \"Graph Generators: State of the Art and Open Challenges\",\n        \"A Systematic Survey on Deep Generative Models for Graph Generation\",\n        \"Generative Diffusion Models on Graphs: Methods and Applications\",\n        \"R-MAT: A recursive model for graph mining\",\n        \"A scalable generative graph model with community structure\",\n        \"Darwini: Generating realistic large-scale social graphs\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"A Random Graph Model for Power Law Graphs\",\n        \"Stanford CS224W: Machine Learning with Graphs\",\n        \"TUDataset: A collection of benchmark datasets for learning with graphs\",\n        \"Growing scale-free networks with tunable clustering\",\n        \"On Random Graphs I\",\n        \"Statistical mechanics of complex networks\",\n        \"Collective dynamics of small-world networks\",\n        \"Mixed Membership Stochastic Blockmodels\",\n        \"Kronecker Graphs: An Approach to Modeling Networks\",\n        \"GraphRNN: Generating Realistic Graphs with Deep Auto-regressive Models\",\n        \"Autoregressive Diffusion Model for Graph Generation\",\n        \"Efficient and Scalable Graph Generation through Iterative Local Expansion\",\n        \"A kernel two-sample test\",\n        \"Exploring network structure, dynamics, and function using NetworkX\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in A Hierarchical Poisson Generator for Universal Graphs under Limited Resources 1 Yanlong Wen is the corresponding author., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}