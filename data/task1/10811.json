{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Layer-wise Regularized Dropout for Neural Language Models\n\nPaper Abstract: Abstract Among the various pre-trained neural language models that are popular today, dropout is already an indispensable regularization technique. To solve the inconsistency between training and inference caused by the randomness of dropout, some studies use consistency training to regularize dropout at the output layer. In this paper, we propose a novel Layer-wise Regularized Dropout (LR-Drop), which is specially designed for Transformer-based Language models. Specifically, LR-Drop layer-wise regularizes each Transformer layer using the consistency training strategy. Each training sample passes through the two siamese sub-models sampled by dropout, and then LR-Drop forces the hidden states, multi-head attention matrices, and output distribution of the two siamese sub-models to be consistent. The proposed LR-Drop can be regarded as a “self-distillation” framework, in which each sub-model generated by dropout is the other’s “teacher” model and “student” model. Through extensive experiments on 8 natural language understanding datasets, 6 neural machine translation datasets, and 1 abstractive summarization dataset (a total of 15 datasets), we show that LR-Drop achieves superior performances, including state-of-the-art results. Keywords: regularization, dropout, self-distillation, transformer\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Better fine-tuning by reducing representational collapse\",\n        \"Proceedings of the Fourth International Workshop on Semantic Evaluations (SemEval-2007)\",\n        \"Adaptive dropout for training deep neural networks\",\n        \"Layer normalization\",\n        \"The second PASCAL recognising textual entailment challenge\",\n        \"What does bert look at? an analysis of bert’s attention\",\n        \"Electra: Pre-training text encoders as discriminators rather than generators\",\n        \"The PASCAL recognising textual entailment challenge\",\n        \"Automatically constructing a corpus of sentential paraphrases\",\n        \"Born again neural networks\",\n        \"The third PASCAL recognizing textual entailment challenge\",\n        \"Explaining and harnessing adversarial examples\",\n        \"Distilling the knowledge in a neural network\",\n        \"Simplifying neural nets by discovering flat minima\",\n        \"Do we need zero training loss after achieving zero training error?\",\n        \"First quora dataset release: Question pairs\",\n        \"Tinybert: Distilling bert for natural language understanding\",\n        \"Shakeout: A new regularized deep neural network training scheme\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"A simple weight decay can improve generalization\",\n        \"Albert: A lite bert for self-supervised learning of language representations\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Regularization via structural label smoothing\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Dropout with expectation-linear regularization\",\n        \"Self-distillation amplifies regularization in hilbert space\",\n        \"When does label smoothing help?\",\n        \"Masked siamese prompt tuning for few-shot natural language understanding\",\n        \"Dropattack: A masked weight adversarial training method to improve generalization of neural networks\",\n        \"Hat4rd: Hierarchical adversarial training for rumor detection in social media\",\n        \"R-at: Regularized adversarial training for natural language understanding\",\n        \"Analyzing noise in autoencoders and deep networks\",\n        \"Prophetnet: Predicting future n-gram for sequence-to-sequencepre-training\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"Weight normalization: A simple reparameterization to accelerate training of deep neural networks\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Attention is all you need\",\n        \"Regularization of neural networks using dropconnect\",\n        \"Neural network acceptability judgments\",\n        \"A broad-coverage challenge corpus for sentence understanding through inference\",\n        \"R-drop: Regularized dropout for neural networks\",\n        \"Group normalization\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Delving deep into label smoothing\",\n        \"Pegasus: Pre-training with extracted gap-sentences for abstractive summarization\",\n        \"Be your own teacher: Improve the performance of convolutional neural networks via self distillation\",\n        \"Self-distillation as instance-specific label smoothing\",\n        \"Freelb: Enhanced adversarial training for natural language understanding\",\n        \"Fraternal dropout\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Layer-wise Regularized Dropout for Neural Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}