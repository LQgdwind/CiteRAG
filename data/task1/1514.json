{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Semantics-preserving Reinforcement Learning Attack Against Graph Neural Networks for Malware Detection\n\nPaper Abstract: Abstract As an increasing number of deep-learning-based malware scanners have been proposed, the existing evasion techniques, including code obfuscation and polymorphic malware, are found to be less effective. In this work, we propose a reinforcement learning based semantics-preserving (i.e. functionality-preserving) attack against black-box GNNs (Graph Neural Networks) for malware detection. The key factor of adversarial malware generation via semantic Nops insertion is to select the appropriate semantic Nops and their corresponding basic blocks. The proposed attack uses reinforcement learning to automatically make these “how to select” decisions. To evaluate the attack, we have trained two kinds of GNNs with three types (e.g., Backdoor, Trojan, and Virus) of Windows malware samples and various benign Windows programs. The evaluation results have shown that the proposed attack can achieve a significantly higher evasion rate than four baseline attacks, namely the binary diversification attack, the semantics-preserving random instruction insertion attack, the semantics-preserving accumulative instruction insertion attack, and the semantics-preserving gradient-based instruction insertion attack.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A leakerlocker sample found on virustotal (first seen: 2016-11-23)\",\n        \"Towards large-scale hunting for android negative-day malware\",\n        \"Security tools taking too long to detect new malware, analysis warns\",\n        \"Efficient characterization and classification of malware using deep learning\",\n        \"Classifying malware represented as control flow graphs using deep graph convolutional neural network\",\n        \"Learning to evade static pe machine learning malware models via reinforcement learning\",\n        \"Optimization-guided binary diversification to mislead neural networks for malware detection\",\n        \"Generation & evaluation of adversarial examples for malware obfuscation\",\n        \"Deceiving end-to-end deep learning malware detectors using adversarial examples\",\n        \"An end-to-end deep learning architecture for graph classification\",\n        \"Malware obfuscation techniques: A brief survey\",\n        \"Explaining and harnessing adversarial examples\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Detection of malicious code variants based on deep learning\",\n        \"Hadm: Hybrid analysis for detection of malware\",\n        \"Malware detection with deep neural network using process behavior\",\n        \"Classification of android apps and malware using deep neural networks\",\n        \"malwash: Washing malware to evade dynamic analysis\",\n        \"Using loops for malware classification resilient to feature-unaware perturbations\",\n        \"Convolutional neural networks over control flow graphs for software defect prediction\",\n        \"Adversarial attack on graph structured data\",\n        \"Node injection attacks on graphs via reinforcement learning\",\n        \"Practical black-box attacks against machine learning\",\n        \"Artificial immune system: applications in computer security\",\n        \"Virusshare\",\n        \"Virustotal\",\n        \"Sok:(state of) the art of war: Offensive techniques in binary analysis\",\n        \"Smashing the gadgets: Hindering return-oriented programming using in-place code randomization\",\n        \"Juggling the gadgets: Binary-level code randomization using instruction displacement\",\n        \"Obfuscation code localization based on cfg generation of malware\",\n        \"Remix: On-demand live randomization\",\n        \"Readactor: Practical code randomization resilient to memory disclosure\",\n        \"Shuffler: Fast and deployable continuous code re-randomization\",\n        \"What you see is not what you get! thwarting just-in-time rop with chameleon\",\n        \"Towards evaluating the robustness of neural networks\",\n        \"Zoo: Zeroth order optimization based black-box attacks to deep neural networks without training substitute models\",\n        \"Generating adversarial examples with adversarial networks\",\n        \"Adversary resistant deep neural networks with an application to malware detection\",\n        \"Practical evasion of a learning-based classifier: A case study\",\n        \"Adversarial deep learning for robust detection of binary encoded malware\",\n        \"Coevolution of mobile malware and anti-malware\",\n        \"Adversarial attack and defense on graph data: A survey\",\n        \"Fast gradient attack on network embedding\",\n        \"Adversarial attacks on neural networks for graph data\",\n        \"Attack graph convolutional networks by adding fake nodes\",\n        \"Attacking graph-based classification via manipulating the graph structure\",\n        \"Adversarial learning attacks on graph-based iot malware detection systems\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Semantics-preserving Reinforcement Learning Attack Against Graph Neural Networks for Malware Detection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}