{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Biclustering and Boolean Matrix Factorization in Data Streams1footnote 11footnote 1This technical report is the slightly extended version of a paper [34] which appeared at VLDB‚Äô20.\n\nPaper Abstract: Abstract We study the clustering of bipartite graphs and Boolean matrix factorization in data streams. We consider a streaming setting in which the vertices from the left side of the graph arrive one by one together with all of their incident edges. We provide an algorithm that, after one pass over the stream, recovers the set of clusters on the right side of the graph using sublinear space; to the best of our knowledge, this is the first algorithm with this property. We also show that after a second pass over the stream, the left clusters of the bipartite graph can be recovered and we show how to extend our algorithm to solve the Boolean matrix factorization problem (by exploiting the correspondence of Boolean matrices and bipartite graphs). We evaluate an implementation of the algorithm on synthetic data and on real-world data. On real-world datasets the algorithm is orders of magnitudes faster than a static baseline algorithm while providing quality results within a factor 2 of the baseline algorithm. Our algorithm scales linearly in the number of edges in the graph. Finally, we analyze the algorithm theoretically and provide sufficient conditions under which the algorithm recovers a set of planted clusters under a standard random graph model.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Community detection and stochastic block models: Recent developments\",\n        \"Community detection in general stochastic block models: Fundamental limits and efficient algorithms for recovery\",\n        \"Recovering communities in the general stochastic block model without knowing the parameters\",\n        \"Mergeable summaries\",\n        \"Streaming min-max hypergraph partitioning\",\n        \"Local search heuristics for k-median and facility location problems\",\n        \"A PTAS for ‚Ñìpsubscript‚Ñìùëù\\\\ell_{p}-low rank approximation\",\n        \"Streaming PTAS for binary ‚Ñì0subscript‚Ñì0\\\\ell_{0}‚Äìlow rank approximation\",\n        \"Streaming k-means on well-clusterable data\",\n        \"Mining frequent itemsets in a stream\",\n        \"On the parameterized complexity of biclique cover and partition\",\n        \"An improved data stream summary: the count-min sketch and its applications\",\n        \"The university of florida sparse matrix collection\",\n        \"Co-clustering documents and words using bipartite spectral graph partitioning\",\n        \"A comparative analysis of biclustering algorithms for gene expression data\",\n        \"Approximation schemes for low-rank binary matrix approximation problems\",\n        \"Streaming for large scale NLP: language modeling\",\n        \"The movielens datasets: History and context\",\n        \"The trustworthy pal: Controlling the false discovery rate in boolean matrix factorization\",\n        \"Biclustering learning of trading rules\",\n        \"Parallelization of the grecond algorithm for boolean matrix factorization\",\n        \"Faster algorithms for binary matrix factorization\",\n        \"KONECT: the koblenz network collection\",\n        \"Noisy and incomplete boolean matrix factorization via expectation maximization\",\n        \"A convex optimization framework for bi-clustering\",\n        \"A unifying framework for mining approximate top-kùëòk binary patterns\",\n        \"Biclustering algorithms for biological data analysis: A survey\",\n        \"Dynamic boolean matrix factorizations\",\n        \"The discrete basis problem\",\n        \"Recent developments in boolean matrix factorization\",\n        \"MDL4BMF: minimum description length for boolean matrix factorization\",\n        \"Finding repeated elements\",\n        \"Bipartite stochastic block models with tiny clusters\",\n        \"Biclustering and boolean matrix factorization in data streams\",\n        \"Contentment in graph theory: covering graphs with cliques\",\n        \"Boolean matrix decomposition by formal concept sampling\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Boolean matrix factorization and noisy completion via message passing\",\n        \"Matched bipartite block model with covariates\",\n        \"Bayesian boolean matrix factorisation\",\n        \"Probabilistic boolean tensor decomposition\",\n        \"Fast and accurate k-means for large datasets\",\n        \"SGP: spotting groups polluting the online political discourse\",\n        \"Jointly clustering rows and columns of binary matrices: algorithms and trade-offs\",\n        \"Streaming, memory limited algorithms for community detection\",\n        \"Bipartite graph partitioning and data clustering\",\n        \"Optimal bipartite network clustering\",\n        \"Analysis of spectral clustering algorithms for community detection: the general bipartite setting\",\n        \"Improving recommendation lists through topic diversification\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Biclustering and Boolean Matrix Factorization in Data Streams1footnote 11footnote 1This technical report is the slightly extended version of a paper [34] which appeared at VLDB‚Äô20., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}