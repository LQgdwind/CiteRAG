{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SimCLF: A Simple Contrastive Learning Framework for Function-level Binary Embeddings\n\nPaper Abstract: Abstract Function-level binary code similarity detection is a crucial aspect of cybersecurity. It enables the detection of bugs and patent infringements in released software and plays a pivotal role in preventing supply chain attacks. A practical embedding learning framework relies on the robustness of the assembly code representation and the accuracy of function-pair annotation, which is traditionally accomplished using supervised learning-based frameworks. However, annotating different function pairs with accurate labels poses considerable challenges. These supervised learning methods can be easily overtrained and suffer from representation robustness problems. To address these challenges, we propose SimCLF: A Simple Contrastive Learning Framework for Function-level Binary Embeddings. We take an unsupervised learning approach and formulate binary code similarity detection as instance discrimination. SimCLF directly operates on disassembled binary functions and could be implemented with any encoder. It does not require manually annotated information but only augmented data. Augmented data is generated using compiler optimization options and code obfuscation techniques. The experimental results demonstrate that SimCLF surpasses the state-of-the-art in accuracy and has a significant advantage in few-shot settings.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Dos and don’ts of machine learning in computer security\",\n        \"On finding duplication and near-duplication in large software systems\",\n        \"Compressing differences of executable code\",\n        \"Adaptive duplicate detection using learnable string similarity measures\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Big self-supervised models are strong semi-supervised learners\",\n        \"Improved baselines with momentum contrastive learning\",\n        \"Supervised learning of universal sentence representations from natural language inference data\",\n        \"Statistical similarity of binaries\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Asm2vec: Boosting static representation robustness for binary clone search against code obfuscation and compiler optimization\",\n        \"How contextual are contextualized word representations? comparing the geometry of BERT, ELMo, and GPT-2 embeddings\",\n        \"Scalable graph-based bug search for firmware images\",\n        \"Binhunt: Automatically finding semantic differences in binary programs\",\n        \"REPRESENTATION DEGENERATION PROBLEM IN TRAINING NATURAL LANGUAGE GENERATION MOD-\",\n        \"SimCSE: Simple contrastive learning of sentence embeddings\",\n        \"Bootstrap your own latent: A new approach to self-supervised learning\",\n        \"A survey of binary code similarity\",\n        \"Momentum contrast for unsupervised visual representation learning\",\n        \"Distilling the knowledge in a neural network\",\n        \"Mutantx-s: Scalable malware clustering based on static features\",\n        \"Large-scale malware indexing using function-call graphs\",\n        \"Towards the generalization of contrastive self-supervised learning\",\n        \"Rendezvous: A search engine for binary code\",\n        \"Semantic-aware binary code representation with BERT\",\n        \"Distributed representations of sentences and documents\",\n        \"On the sentence embeddings from pre-trained language models\",\n        \"PalmTree: Learning an assembly language model for instruction embedding\",\n        \"Diff: Cross-version binary code similarity detection with dnn\",\n        \"Gplag: Detection of software plagiarism by program dependence graph analysis\",\n        \"Semantics-based obfuscation-resilient binary code similarity comparison with applications to software and algorithm plagiarism detection\",\n        \"SAFE: Self-attentive function embeddings for binary similarity\",\n        \"Investigating Graph Embedding Neural Networks with Unsupervised Features Extraction for Binary Analysis\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"TREX: Learning execution semantics from micro-traces for binary similarity\",\n        \"Cross-architecture bug search in binary executables\",\n        \"Leveraging semantic signatures for bug search in binary programs\",\n        \"Sentence-BERT: Sentence embeddings using siamese BERT-networks\",\n        \"Training region-based object detectors with online hard example mining\",\n        \"Attention is all you need\",\n        \"Understanding the behaviour of contrastive loss\",\n        \"jtrans: Jump-aware transformer for binary code similarity\",\n        \"Understanding contrastive representation learning through alignment and uniformity on the hypersphere\",\n        \"Unsupervised feature learning via non-parametric instance discrimination\",\n        \"Neural network-based graph embedding for cross-platform binary code similarity detection\",\n        \"Modeling and discovering vulnerabilities with code property graphs\",\n        \"ConSERT: A contrastive framework for self-supervised sentence representation transfer\",\n        \"Order matters: Semantic-aware neural networks for binary code similarity detection\",\n        \"Fast algorithms to evaluate collaborative filtering recommender systems\",\n        \"Hikari – an improvement over obfuscator-llvm\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in SimCLF: A Simple Contrastive Learning Framework for Function-level Binary Embeddings, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}