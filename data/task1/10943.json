{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Logic Programming with Multiplicative Structures\n\nPaper Abstract: Abstract In the logic programming paradigm, a program is defined by a set of methods, each of which can be executed when specific conditions are met during the current state of an execution. The semantics of these programs can be elegantly represented using sequent calculi, in which each method is linked to an inference rule. In this context, proof search mirrors the program’s execution. Previous works introduced a framework in which the process of constructing proof nets is employed to model executions, as opposed to the traditional approach of proof search in sequent calculus. This paper further extends this investigation by focussing on the pure multiplicative fragment of this framework. We demonstrate, providing practical examples, the capability to define logic programming methods with context-sensitive behaviors solely through specific resource-preserving and context-free operations, corresponding to certain generalized multiplicative connectives explored in existing literature. We show how some of these methods, although still multiplicative, escape the purely multiplicative fragment of Linear Logic (MLL, containing only \\parr\\parr\\parr and ⊗tensor-product\\otimes).\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Proof nets for multiplicative cyclic linear logic and Lambek calculus\",\n        \"Cyclic Multiplicative-Additive Proof Nets of Linear Logic with an Application to Language Parsing\",\n        \"Graphical Proof Theory I: Sequent Systems on Undirected Graphs\",\n        \"Infinitary cut-elimination via finite approximations (extended version)\",\n        \"Infinitary Cut-Elimination via Finite Approximations\",\n        \"A graphical proof theory of logical time\",\n        \"Logic beyond formulas: A proof system on graphs\",\n        \"An Analytic Propositional Proof System on Graphs\",\n        \"Generalized Connectives for Multiplicative Linear Logic\",\n        \"From Syntactic Proofs to Combinatorial Proofs\",\n        \"Combinatorial Proofs for Constructive Modal Logic\",\n        \"Logic programming with focusing proofs in linear logic\",\n        \"Focussing and proof construction\",\n        \"Focussing proof-net construction as a middleware paradigm\",\n        \"Concurrent Construction of Proof-Nets\",\n        \"Canonical Propositional Gentzen-Type Systems\",\n        \"Infinitary proof theory : the multiplicative additive case\",\n        \"Delayed choice: an operator for joining Message Sequence Charts\",\n        \"Rewriting modulo symmetric monoidal structure\",\n        \"Introduction to Algorithms, 2nd edition\",\n        \"The structure of multiplicatives\",\n        \"On the Logical Strength of Confluence and Normalisation for Cyclic Proofs\",\n        \"Non-Wellfounded Proof Theory For (Kleene+Action)(Algebras+Lattices)\",\n        \"Differential interaction nets\",\n        \"Stellar Resolution: Multiplicatives - for the linear logician, through examples\",\n        \"Stellar Resolution: Multiplicatives\",\n        \"A gentle introduction to Girard’s Transcendental Syntax\",\n        \"Multiplicative Linear Logic from Logic Programs and Tilings\",\n        \"Modules and Logic Programming\",\n        \"Linear logic\",\n        \"Multiplicatives\",\n        \"On the meaning of logical rules II: multiplicatives and additives\",\n        \"Transcendental syntax I: deterministic case\",\n        \"Correctness of multiplicative proof nets is linear\",\n        \"Closures and Modules Within Linear Logic Concurrent Constraint Programming\",\n        \"No Proof Nets for MLL with Units: Proof Equivalence in MLL is PSPACE-Complete\",\n        \"Intuitionistic proofs without syntax\",\n        \"Don’t Care Non-determinism in Logic Program Refinement\",\n        \"Semantics for Specialising Attack Trees based on Linear Logic\",\n        \"Conflict Nets: Efficient Locally Canonical MALL Proof Nets\",\n        \"Towards Hilbert’s 24th Problem: Combinatorial Proof Invariants: (Preliminary version)\",\n        \"Cut Elimination for Monomial MALL Proof Nets\",\n        \"Focusing Gentzen’s LK proof system\",\n        \"Construction of Retractile Proof Structures\",\n        \"Non decomposable connectives of linear logic\",\n        \"Probabilistic logic programming with multiplicative modules\",\n        \"A Proof of the Focusing Theorem via MALL Proof Nets\",\n        \"Modularity of proof-nets\",\n        \"Foundations of Attack Trees\",\n        \"A survey of linear logic programming\",\n        \"Overview of Linear Logic Programming\",\n        \"A formal framework for specifying sequent calculus proof systems\",\n        \"BFL: a Logic to Reason about Fault Trees\",\n        \"Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference\",\n        \"Réseaux et séquents ordonnés\",\n        \"A Linear Perspective on Cut-Elimination for Non-wellfounded Sequent Calculi with Least and Greatest Fixed-Points\",\n        \"Alexis Saurin (2023): A Linear Perspective on Cut-Elimination for Non-wellfounded Sequent Calculi with Least and Greatest Fixed-Points\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Logic Programming with Multiplicative Structures, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}