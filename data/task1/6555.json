{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Explain My Surprise: Learning Efficient Long-Term Memory by Predicting Uncertain Outcomes\n\nPaper Abstract: Abstract In many sequential tasks, a model needs to remember relevant events from the distant past to make correct predictions. Unfortunately, a straightforward application of gradient based training requires intermediate computations to be stored for every element of a sequence. This requires to store prohibitively large intermediate data if a sequence consists of thousands or even millions elements, and as a result, makes learning of very long-term dependencies infeasible. However, the majority of sequence elements can usually be predicted by taking into account only temporally local information. On the other hand, predictions affected by long-term dependencies are sparse and characterized by high uncertainty given only local information. We propose MemUP, a new training method that allows to learn long-term dependencies without backpropagating gradients through the whole sequence at a time. This method can potentially be applied to any recurrent architecture. LSTM network trained with MemUP performs better or comparable to baselines while requiring to store less intermediate data.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Backpropagation through time: what it does and how to do it\",\n        \"Long short-term memory\",\n        \"Neural turing machines\",\n        \"Memory networks\",\n        \"Asynchronous methods for deep reinforcement learning\",\n        \"Control of memory, active perception, and action in minecraft\",\n        \"Hybrid computing using a neural network with dynamic external memory\",\n        \"Relational recurrent neural networks\",\n        \"Recurrent experience replay in distributed reinforcement learning\",\n        \"Attention is all you need\",\n        \"Memory transformer\",\n        \"MART: Memory-augmented recurrent transformer for coherent video paragraph captioning\",\n        \"Gmat: Global memory augmentation for transformers\",\n        \"Memformer: The memory-augmented transformer\",\n        \"Addressing some limitations of transformers with feedback memory\",\n        \"AMRL: aggregated memory for reinforcement learning\",\n        \"Unsupervised predictive memory in a goal-directed agent\",\n        \"Stabilizing transformers for reinforcement learning\",\n        \"Language models are few-shot learners\",\n        \"Big bird: Transformers for longer sequences\",\n        \"Exploration by random network distillation\",\n        \"The im algorithm: a variational approach to information maximization\",\n        \"Dropout strikes back: Improved uncertainty estimation via diversity sampled implicit ensembles\",\n        \"Distributional reinforcement learning with quantile regression\",\n        \"A review of the gumbel-max trick and its extensions for discrete stochasticity in machine learning\",\n        \"Tutorial on training recurrent neural networks, covering BPPT, RTRL, EKF and the echo state network approach, volume 5\",\n        \"Gradient flow in recurrent nets: the difficulty of learning long-term dependencies\",\n        \"Reinforcement learning with long short-term memory\",\n        \"Shuffling recurrent neural networks\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Deep recurrent q-learning for partially observable mdps\",\n        \"Feudal networks for hierarchical reinforcement learning\",\n        \"Emergent tool use from multi-agent autocurricula\",\n        \"Neural map: Structured memory for deep reinforcement learning\",\n        \"Recurrent world models facilitate policy evolution\",\n        \"Optimizing agent behavior over long time scales by transporting value\",\n        \"A simple neural attentive meta-learner\",\n        \"Working memory graphs\",\n        \"Unitary evolution recurrent neural networks\",\n        \"A simple way to initialize recurrent networks of rectified linear units\",\n        \"Vizdoom: A doom-based ai research platform for visual reinforcement learning\",\n        \"Playing FPS games with deep reinforcement learning\",\n        \"Deep reinforcement learning on a budget: 3d control and reasoning without a supercomputer\",\n        \"Proximal policy optimization algorithms\",\n        \"rlpyt: A research code base for deep reinforcement learning in pytorch\",\n        \"IMPALA: scalable distributed deep-rl with importance weighted actor-learner architectures\",\n        \"Adaptive transformers in rl\",\n        \"Large-scale study of curiosity-driven learning\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Explain My Surprise: Learning Efficient Long-Term Memory by Predicting Uncertain Outcomes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}