{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Quantum Property Testing Algorithm for the Concatenation of Two Palindromes Language\n\nPaper Abstract: Abstract In this paper, we present a quantum property testing algorithm for recognizing a context-free language that is a concatenation of two palindromes LR‚ÄãE‚ÄãVsubscriptùêøùëÖùê∏ùëâL_{REV}. The query complexity of our algorithm is O‚Äã(1Œµ‚Äãn1/3‚Äãlog‚Å°n)ùëÇ1ùúÄsuperscriptùëõ13ùëõO(\\frac{1}{\\varepsilon}n^{1/3}\\log n), where nùëõn is the length of an input. It is better than the classical complexity that is Œò‚àó‚Äã(n)superscriptŒòùëõ\\Theta^{*}(\\sqrt{n}). At the same time, in the general setting, the picture is different a little. Classical query complexity is Œò‚Äã(n)Œòùëõ\\Theta(n), and quantum query complexity is Œò‚àó‚Äã(n)superscriptŒòùëõ\\Theta^{*}(\\sqrt{n}). So, we obtain polynomial speed-up for both cases (general and property testing). Keywords: palindromes, property testing, strings, quantum algorithms, query complexity, context-free languages\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A quantum query complexity trichotomy for regular languages\",\n        \"On quantum methods for machine learning problems part i: Quantum tools\",\n        \"Quantum algorithms for string processing\",\n        \"Near-optimal quantum algorithms for string problems\",\n        \"Regular languages are testable with a constant number of queries\",\n        \"Understanding quantum algorithms via query complexity\",\n        \"Quantum Lower and Upper Bounds for 2D-Grid and Dyck Language\",\n        \"Quantum bounds for 2d-grid and dyck language\",\n        \"Optimizing the number of gates in quantum search\",\n        \"The quantum query complexity of 0-1 knapsack and associated claw problems\",\n        \"Simulation methods for quantum walks on graphs applied to formal language recognition\",\n        \"Strengths and weaknesses of quantum computing\",\n        \"Dictionary of algorithms and data structures‚Äî nist\",\n        \"Tight bounds on quantum searching\",\n        \"Advanced data structures\",\n        \"Quantum algorithm for the collision problem\",\n        \"Quantum property testing\",\n        \"A Framework of Quantum Strong Exponential-Time Hypotheses\",\n        \"Quantum divide and conquer\",\n        \"Introduction to Algorithms\",\n        \"File searching using variable length keys\",\n        \"Special feature exhaustive cryptanalysis of the nbs data encryption standard\",\n        \"The art of uninformed decisions: A primer to property testing\",\n        \"Property testing and its connection to learning and approximation\",\n        \"A fast quantum mechanical algorithm for database search\",\n        \"Trade-offs in the quantum search algorithm\",\n        \"Quantum algorithms zoo\",\n        \"Fast classical and quantum algorithms for online k-server problem on trees\",\n        \"Quantum algorithms for the most frequently string search, intersection of two string sequences and sorting of strings problems\",\n        \"Lecture notes on quantum algorithms\",\n        \"Quantum algorithms for the shortest common superstring and text assembling problems\",\n        \"Quantum version of self-balanced binary search tree with strings as keys and applications\",\n        \"Quantum algorithms for some strings problems based on quantum string comparator\",\n        \"Quantum algorithm for dyck language with multiple types of brackets\",\n        \"Quantum algorithm for the shortest superstring problem\",\n        \"Classical and quantum algorithms for assembling a text from a dictionary\",\n        \"Classical and quantum algorithms for constructing text from dictionary problem\",\n        \"Noisy tree data structures and quantum applications\",\n        \"Searching and sorting, the art of computer programming\",\n        \"Fast pattern matching in strings\",\n        \"Quantum meets fine-grained complexity: Sublinear time quantum algorithms for string problems\",\n        \"Quantum pattern matching fast on average\",\n        \"A survey of quantum property testing\",\n        \"Testing of function that have small width branching programs\",\n        \"Quantum computation and quantum information\",\n        \"Testing membership in parenthesis languages\",\n        \"Handbook of randomized computing\",\n        \"String matching in O‚Äã(n+m)Oùëõùëö\\\\mbox{O}(\\\\sqrt{n}+\\\\sqrt{m}) quantum time\",\n        \"Robust characterizations of polynomials with applications to program testing\",\n        \"Quantum computing and communication complexity\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Quantum Property Testing Algorithm for the Concatenation of Two Palindromes Language, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}