{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: From syntactic structure to semantic relationship: hypernym extraction from definitions by recurrent neural networks using the part of speech information\n\nPaper Abstract: Abstract The hyponym-hypernym relation is an essential element in the semantic network. Identifying the hypernym from a definition is an important task in natural language processing and semantic analysis. While a public dictionary such as WordNet works for common words, its application in domain-specific scenarios is limited. Existing tools for hypernym extraction either rely on specific semantic patterns or focus on the word representation, which all demonstrate certain limitations. Here we propose a method by combining both the syntactic structure in definitions given by the word’s part of speech, and the bidirectional gated recurrent unit network as the learning kernel. The output can be further tuned by including other features such as a word’s centrality in the hypernym co-occurrence network. The method is tested in the corpus from Wikipedia featuring definition with high regularity, and the corpus from Stack-Overflow whose definition is usually irregular. It shows enhanced performance compared with other tools in both corpora. Taken together, our work not only provides a useful tool for hypernym extraction but also gives an example of utilizing syntactic structures to learn semantic relationships 111Source code and data available at https://github.com/Res-Tan/Hypernym-Extraction.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Webisalod: providing hypernymy relations extracted from the web as linked open data\",\n        \"A graph-based algorithm for inducing lexical taxonomies from scratch\",\n        \"Taxonomy induction using hypernym subsequences\",\n        \"Convolutional 2d knowledge graph embeddings\",\n        \"Knowledge graph completion via complex tensor factorization\",\n        \"Exploiting wikipedia as external knowledge for named entity recognition\",\n        \"Mining on-line sources for definition knowledge\",\n        \"Soft pattern matching models for definitional question answering\",\n        \"Unsupervised generation of data mining features from linked open data\",\n        \"Query refinement and user relevance feedback for contextualized image retrieval\",\n        \"Ernie: Enhanced language representation with informative entities\",\n        \"Automatic acquisition of hyponyms from large text corpora\",\n        \"Learning syntactic patterns for automatic hypernym discovery\",\n        \"Extracting definitions and hypernym relations relying on syntactic dependencies and support vector machines\",\n        \"Hypernym extraction: combining machine-learning and dependency grammar\",\n        \"Learning semantic hierarchies via word embeddings\",\n        \"Hypernyms under siege: Linguistically-motivated artillery for hypernymy detection\",\n        \"Improving hypernymy detection with an integrated path-based and distributional method\",\n        \"Definition extraction with lstm recurrent neural networks\",\n        \"Extracting definitions and hypernyms with a two-phase framework\",\n        \"Wordnet: An electronic lexical database and some of its applications\",\n        \"Learning word-class lattices for definition and hypernym extraction\",\n        \"Universal dependency parsing from scratch\",\n        \"Extraction of dutch definitory contexts for elearning purposes\",\n        \"A large database of hypernymy relations extracted from the web\",\n        \"Crim at semeval-2018 task 9: A hybrid approach to hypernym discovery\",\n        \"An annotated dataset for extracting definitions and hypernyms from the web\",\n        \"Mining scientific terms and their definitions: A study of the acl anthology\",\n        \"Directional distributional similarity for lexical inference\",\n        \"Identifying hypernyms in distributional semantic spaces\",\n        \"Distributional semantics in linguistic and cognitive research\",\n        \"Learning term embeddings for hypernymy identification\",\n        \"Inclusive yet selective: Supervised distributional hypernymy detection\",\n        \"Relations such as hypernymy: Identifying and exploiting hearst patterns in distributional vectors for lexical entailment\",\n        \"Distributional inclusion vector embedding for unsupervised hypernymy detection\",\n        \"Birre: Learning bidirectional residual relation embeddings for supervised hypernymy detection\",\n        \"Finding structure in time\",\n        \"Long short-term memory\",\n        \"Gradient flow in recurrent nets: the difficulty of learning long-term dependencies\",\n        \"Empirical evaluation of gated recurrent neural networks on sequence modeling\",\n        \"Measuring similarity in co-occurrence data using ego-networks\",\n        \"Quantifying patterns of research-interest evolution\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Lecture 6.5-rmsprop: Divide the gradient by a running average of its recent magnitude\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Attention is all you need\",\n        \"Roberta: A robustly optimized bert pretraining approach\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in From syntactic structure to semantic relationship: hypernym extraction from definitions by recurrent neural networks using the part of speech information, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}