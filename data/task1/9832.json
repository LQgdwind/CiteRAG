{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficacy of Neural Prediction-Based Zero-Shot NAS\n\nPaper Abstract: Abstract In prediction-based Neural Architecture Search (NAS), performance indicators derived from graph convolutional networks have shown remarkable success. These indicators, achieved by representing feed-forward structures as component graphs through one-hot encoding, face a limitation: their inability to evaluate architecture performance across varying search spaces. In contrast, handcrafted performance indicators (zero-shot NAS), which use the same architecture with random initialization, can generalize across multiple search spaces. Addressing this limitation, we propose a novel approach for zero-shot NAS using deep learning. Our method employs Fourier sum of sines encoding for convolutional kernels, enabling the construction of a computational feed-forward graph with a structure similar to the architecture under evaluation. These encodings are learnable and offer a comprehensive view of the architectureâ€™s topological information. An accompanying multi-layer perceptron (MLP) then ranks these architectures based on their encodings. Experimental results show that our approach surpasses previous methods using graph convolutional networks in terms of correlation on the NAS-Bench-201 dataset and exhibits a higher convergence rate. Moreover, our extracted feature representation trained on each NAS benchmark is transferable to other NAS benchmarks, showing promising generalizability across multiple search spaces. The code is available at: https://github.com/minh1409/DFT-NPZS-NAS\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning transferable architectures for scalable image recognition\",\n        \"Path-level network transformation for efficient architecture search\",\n        \"Efficient architecture search by network transformation\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n        \"Learning curve prediction with bayesian neural networks\",\n        \"Speeding up automatic hyperparameter optimization of deep neural networks by extrapolation of learning curves\",\n        \"Neural architecture search with bayesian optimisation and optimal transport\",\n        \"BRP-NAS: prediction-based NAS using gcns\",\n        \"TNASP: A transformer-based NAS predictor with a self-evolution framework\",\n        \"Neural architecture search without training\",\n        \"Neural architecture search on imagenet in four GPU hours: A theoretically inspired perspective\",\n        \"Zero-cost proxies for lightweight NAS\",\n        \"Zen-nas: A zero-shot NAS for high-performance image recognition\",\n        \"A generic graph-based neural architecture encoding scheme for predictor-based NAS\",\n        \"Nas-bench-201: Extending the scope of reproducible neural architecture search\",\n        \"Designing network design spaces\",\n        \"Nas-bench-101: Towards reproducible neural architecture search\",\n        \"Prioritized architecture sampling with monto-carlo tree search\",\n        \"Genetic CNN\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Searching for mobilenetv3\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Disentangling trainability and generalization in deep neural networks\",\n        \"On the number of linear regions of convolutional neural networks\",\n        \"DARTS: differentiable architecture search\",\n        \"Snip: single-shot network pruning based on connection sensitivity\",\n        \"Picking winning tickets before training by preserving gradient flow\",\n        \"Blockswap: Fisher-guided block substitution for network compression on a budget\",\n        \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n        \"A deeper look at zero-cost proxies for lightweight nas\",\n        \"Nas-bench-asr: Reproducible neural architecture search for speech recognition\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Feedback prediction for blogs\",\n        \"Ujiindoorloc: A new multi-building and multi-floor database for WLAN fingerprint-based indoor localization problems\",\n        \"2d image registration in CT images using radial image descriptors\",\n        \"Machine learning approaches for improving condition-based maintenance of naval propulsion plants\",\n        \"Physicochemical properties of protein tertiary structure data set\",\n        \"A proactive intelligent decision support system for predicting the popularity of online news\",\n        \"Progressive neural architecture search\",\n        \"Hierarchical representations for efficient architecture search\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Differential evolution - A simple and efficient heuristic for global optimization over continuous spaces\",\n        \"A fast elitist non-dominated sorting genetic algorithm for multi-objective optimisation: NSGA-II\",\n        \"Deep residual learning for image recognition\",\n        \"Deep sets\",\n        \"Mastering diverse domains through world models\",\n        \"Fast differentiable sorting and ranking\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Efficacy of Neural Prediction-Based Zero-Shot NAS, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}