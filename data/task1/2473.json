{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DeepPayload: Black-box Backdoor Attack on Deep Learning Models through Neural Payload Injection\n\nPaper Abstract: Abstract Deep learning models are increasingly used in mobile applications as critical components. Unlike the program bytecode whose vulnerabilities and threats have been widely-discussed, whether and how the deep learning models deployed in the applications can be compromised are not well-understood since neural networks are usually viewed as a black box. In this paper, we introduce a highly practical backdoor attack achieved with a set of reverse-engineering techniques over compiled deep learning models. The core of the attack is a neural conditional branch constructed with a trigger detector and several operators and injected into the victim model as a malicious payload. The attack is effective as the conditional logic can be flexibly customized by the attacker, and scalable as it does not require any prior knowledge from the original model. We evaluated the attack effectiveness using 5 state-of-the-art deep learning models and real-world samples collected from 30 users. The results demonstrated that the injected backdoor can be triggered with a success rate of 93.5%, while only brought less than 2ms latency overhead and no more than 1.4% accuracy decrease. We further conducted an empirical study on real-world mobile deep learning apps collected from Google Play. We found 54 apps that were vulnerable to our attack, including popular and security-critical ones. The results call for the awareness of deep learning application developers and auditors to enhance the protection of deployed models.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Enhanced object detection with deep convolutional neural networks for advanced driving assistance\",\n        \"Automated extraction of personal knowledge from smartphone push notifications\",\n        \"Sparsifying neural network connections for face recognition\",\n        \"A two stream siamese convolutional neural network for person re-identification\",\n        \"A first look at deep learning apps on smartphones\",\n        \"Deep learning in mobile and wireless networking: A survey\",\n        \"Embedded deep learning for vehicular edge computing\",\n        \"Real-time video analytics: The killer app for edge computing\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Deepx: A software accelerator for low-power deep learning inference on mobile devices\",\n        \"dabnn: A super fast inference framework for binary neural networks on arm devices\",\n        \"Privacystreams: Enabling transparency in personal data processing for mobile apps\",\n        \"Pmc: A privacy-preserving deep learning model customization framework for edge computing\",\n        \"Slalom: Fast, verifiable and private execution of neural networks in trusted hardware\",\n        \"Occlumency: Privacy-preserving remote deep-learning inference using sgx\",\n        \"Dynamic slicing for deep neural networks\",\n        \"Intriguing properties of neural networks\",\n        \"Trojaning attack on neural networks\",\n        \"Deepxplore: Automated whitebox testing of deep learning systems\",\n        \"Deeptest: Automated testing of deep-neural-network-driven autonomous cars\",\n        \"Deepgauge: Multi-granularity testing criteria for deep learning systems\",\n        \"Robustness of on-device models: Adversarial attack to deep learning models on android apps\",\n        \"Deepgini: prioritizing massive tests to enhance the robustness of deep neural networks\",\n        \"Reludiff: Differential verification of deep neural networks\",\n        \"Badnets: Identifying vulnerabilities in the machine learning model supply chain\",\n        \"Badnets: Evaluating backdooring attacks on deep neural networks\",\n        \"Tensorflow lite â€” ml for mobile and edge devices\",\n        \"Deep residual learning for image recognition\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Going deeper with convolutions\",\n        \"Adversarial classification\",\n        \"Adversarial learning\",\n        \"On attacking statistical spam filters.\",\n        \"Paragraph: Thwarting signature learning by training maliciously\",\n        \"Allergy attack against automatic signature generation\",\n        \"Auror: Defending against poisoning attacks in collaborative deep learning systems\",\n        \"Data poisoning attacks against autoregressive models\",\n        \"Targeted backdoor attacks on deep learning systems using data poisoning\",\n        \"Neural cleanse: Identifying and mitigating backdoor attacks in neural networks\",\n        \"Deepinspect: A black-box trojan detection and mitigation framework for deep neural networks\",\n        \"Neural trojans\",\n        \"Fine-pruning: Defending against backdooring attacks on deep neural networks\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Computing receptive fields of convolutional neural networks\",\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"ncnn is a high-performance neural network inference framework optimized for the mobile platform\",\n        \"Open neural network exchange - the open standard for machine learning interoperability\",\n        \"Mmdnn is a set of tools to help users inter-operate among different deep learning frameworks.\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Rethinking the inception architecture for computer vision\",\n        \"Learning transferable architectures for scalable image recognition\",\n        \"Deep learning with Keras\",\n        \"Androidâ€“apktool: A tool for reverse engineering android apk files\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in DeepPayload: Black-box Backdoor Attack on Deep Learning Models through Neural Payload Injection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}