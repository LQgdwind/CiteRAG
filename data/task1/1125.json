{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Prioritized Restreaming Algorithms for Balanced Graph Partitioning\n\nPaper Abstract: Abstract. Balanced graph partitioning is a critical step for many large-scale distributed computations with relational data. As graph datasets have grown in size and density, a range of highly-scalable balanced partitioning algorithms have appeared to meet varied demands across different domains. As the starting point for the present work, we observe that two recently introduced families of iterative partitioners—those based on restreaming and those based on balanced label propagation (including Facebook’s Social Hash Partitioner)—can be viewed through a common modular framework of design decisions. With the help of this modular perspective, we find that a key combination of design decisions leads to a novel family of algorithms with notably better empirical performance than any existing highly-scalable algorithm on a broad range of real-world graphs. The resulting prioritized restreaming algorithms employ a constraint management strategy based on multiplicative weights, borrowed from the restreaming literature, while adopting notions of priority from balanced label propagation to optimize the ordering of the streaming process. Our experimental results consider a range of stream orders, where a dynamic ordering based on what we call ambivalence is broadly the most performative in terms of the cut quality of the resulting balanced partitions, with a static ordering based on degree being nearly as good.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Balanced Graph Partitioning\",\n        \"A Comparative Study of Linear and Semidefinite Branch-and-Cut Methods for Solving the Minimum Graph Bisection Problem\",\n        \"Distributed balanced partitioning via linear embedding\",\n        \"Affinity clustering: Hierarchical clustering at scale\",\n        \"A branch-and-cut algorithm for the equicut problem\",\n        \"Recent Advances in Graph Partitioning\",\n        \"Hypergraph-partitioning-based decomposition for parallel sparse-matrix vector multiplication\",\n        \"Comparison of Coarsening Schemes for Multilevel Graph Partitioning\",\n        \"Sharding Social Networks\",\n        \"A Linear-Time Heuristic for Improving Network Partitions\",\n        \"Powergraph: Distributed graph-parallel computation on natural graphs\",\n        \"Social hash partitioner: a scalable distributed hypergraph partitioner\",\n        \"A fast and high quality multilevel scheme for partitioning irregular graphs\",\n        \"Multilevel k-way Partitioning Scheme for Irregular Graphs\",\n        \"An efficient heuristic procedure for partitioning graphs\",\n        \"Multi-threaded Graph Partitioning\",\n        \"Planetary-Scale Views on an Instant-Messaging Network\",\n        \"SNAP Datasets: Stanford Large Network Dataset Collection\",\n        \"Community structure in large networks: Natural cluster sizes and the absence of large well-defined clusters\",\n        \"Pregel: A System for Large-Scale Graph Processing\",\n        \"Spinner: Scalable Graph Partitioning in the Cloud\",\n        \"Accelerating shape optimizing load balancing for parallel FEM simulations by algebraic multigrid\",\n        \"Graph partitioning and disturbed diffusion\",\n        \"Restreaming Graph Partitioning: Simple Versatile Algorithms for Advanced Balancing\",\n        \"n-Level Graph Partitioning\",\n        \"Experimental Analysis of Streaming Algorithms for Graph Partitioning\",\n        \"A Parallelisable Multi-level Banded Diffusion Scheme for Computing Balanced Partitions with Smooth Boundaries\",\n        \"Near linear time algorithm to detect community structures in large-scale networks\",\n        \"Hierarchical Organization in Complex Networks\",\n        \"Engineering multilevel graph partitioning algorithms\",\n        \"Horton: Online Query Execution Engine for Large Distributed Graphs\",\n        \"Local Graph Sparsification for Scalable Clustering\",\n        \"Detecting network effects: Randomizing over randomized experiments\",\n        \"Social Hash: An Assignment Framework for Optimizing Distributed Systems Operations on Social Networks\",\n        \"Trinity: A Distributed Graph Engine on a Memory Cloud\",\n        \"Streaming balanced graph partitioning algorithms for random graphs\",\n        \"Streaming Graph Partitioning for Large Distributed Graphs\",\n        \"FENNEL: Streaming Graph Partitioning for Massive Scale Graphs\",\n        \"Balanced Label Propagation for Partitioning Massive Graphs\",\n        \"Graph cluster randomization: Network exposure to multiple universes\",\n        \"The Anatomy of the Facebook Social Graph\",\n        \"A weighted correlation index for rankings with ties\",\n        \"Evaluation by Highly Relevant Documents\",\n        \"Collective dynamics of ‘small-world’networks\",\n        \"Learning from Labeled and Unlabeled Data with Label Propagation\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Prioritized Restreaming Algorithms for Balanced Graph Partitioning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}