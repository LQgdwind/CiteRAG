{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scalable Learning of Latent Language Structure With Logical Offline Cycle Consistency\n\nPaper Abstract: Abstract We introduce Logical Offline Cycle Consistency Optimization (LOCCO), a scalable, semi-supervised method for training a neural semantic parser. Conceptually, LOCCO can be viewed as a form of self-learning where the semantic parser being trained is used to generate annotations for unlabeled text that are then used as new supervision. To increase the quality of annotations, our method utilizes a count-based prior over valid formal meaning representations and a cycle-consistency score produced by a neural text generation model as additional signals. Both the prior and semantic parser are updated in an alternate fashion from full passes over the training data, which can be seen as approximating the marginalization of latent structures through stochastic variational inference. The use of a count-based prior, frozen text generation model, and offline annotation process yields an approach with negligible complexity and latency increases as compared to conventional self-learning. As an added bonus, the annotations produced by LOCCO can be trivially repurposed to train a neural text generation model. We demonstrate the utility of LOCCO on the well-known WebNLG benchmark where we obtain an improvement of 222 points against a self-learning parser under equivalent conditions, an improvement of 1.31.31.3 points against the previous state-of-the-art parser, and competitive text generation performance in terms of BLEU score.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Knowledge graph based synthetic corpus generation for knowledge-enhanced language model pre-training\",\n        \"Machine translation aided bilingual data-to-text generation and semantic parsing\",\n        \"Good-enough compositional data augmentation\",\n        \"Graph pre-training for amr parsing and generation\",\n        \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n        \"One spring to rule them both: Symmetric amr semantic parsing and generation without a complex pipeline\",\n        \"Semantic parsing with dual learning\",\n        \"The 2020 bilingual, bi-directional WebNLG+ shared task: Overview and evaluation results (WebNLG+ 2020)\",\n        \"Semi-supervised learning for neural machine translation\",\n        \"Unsupervised learning and grammar induction\",\n        \"Differentiable perturb-and-parse: Semi-supervised parsing with a structured variational autoencoder\",\n        \"Laziness is a virtue when it comes to compositionality in neural semantic parsing\",\n        \"Regen: Reinforcement learning for text and knowledge base generation using pretrained language models\",\n        \"Language to logical form with neural attention\",\n        \"P2: A plan-and-pretrain approach for knowledge graph-to-text generation: A plan-and-pretrain approach for knowledge graph-to-text generation\",\n        \"Cyclegt: Unsupervised graph-to-text and text-to-graph generation via cycle training\",\n        \"A survey of unsupervised dependency parsing\",\n        \"Dual learning for machine translation\",\n        \"Iterative back-translation for neural machine translation\",\n        \"Stochastic variational inference\",\n        \"Cycle-consistency training for end-to-end speech recognition\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"Data recombination for neural semantic parsing\",\n        \"Train hard, finetune easy: Multilingual denoising for RDF-to-text generation\",\n        \"Semi-amortized variational autoencoders\",\n        \"Auto-encoding variational bayes\",\n        \"Neural amr: Sequence-to-sequence models for parsing and generation\",\n        \"Rdfjsrealb: a symbolic approach for generating text from rdf triples\",\n        \"Maximum bayes smatch ensemble distillation for amr parsing\",\n        \"Pushing the limits of amr parsing with self-learning\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Leveraging large pretrained models for webnlg 2020\",\n        \"Grapher: Multi-stage knowledge graph construction using pretrained language models\",\n        \"Language as a latent variable: Discrete generative models for sentence compression\",\n        \"Expectation-maximization as lower bound maximization\",\n        \"NUIG-DSI at the WebNLG+ challenge: Leveraging transfer learning for RDF-to-text generation\",\n        \"Glove: Global vectors for word representation\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Investigating pretrained language models for graph-to-text generation\",\n        \"Proximal policy optimization algorithms\",\n        \"Reinforcement learning: An introduction\",\n        \"End-to-end feedback loss in speech chain framework via straight-through estimator\",\n        \"Graphical models, exponential families, and variational inference\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Improving amr parsing with sequence-to-sequence pre-training\",\n        \"Improving text-to-text pre-trained models for the graph-to-text task\",\n        \"StructVAE: Tree-structured latent variable models for semi-supervised semantic parsing\",\n        \"Semi-supervised structured prediction with neural crf autoencoder\",\n        \"Structure-aware fine-tuning of sequence-to-sequence transformers for transition-based amr parsing\",\n        \"Unpaired image-to-image translation using cycle-consistent adversarial networks\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Scalable Learning of Latent Language Structure With Logical Offline Cycle Consistency, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}