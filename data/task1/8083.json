{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SGL-PT: A Strong Graph Learner with Graph Prompt Tuning\n\nPaper Abstract: Abstract Recently, much exertion has been paid to design graph self-supervised methods to obtain generalized pre-trained models, and adapt pre-trained models onto downstream tasks through standard fine-tuning. But the gap between pretext and downstream tasks can limit pre-trained models’ potential, leading to negative transfer. Meanwhile, prompt tuning has seen emerging success in natural language processing (NLP) by aligning pre-training and fine-tuning with consistent training objectives. In this paper, we identify the challenges for graph prompt tuning: The first is the lack of a strong and universal pre-training task across sundry pre-training methods in graph domain. Such a task should be easily emulated by downstream tasks, akin to the Masked Language Modeling (MLM) in the NLP domain. The second challenge lies in the difficulty of designing a consistent training objective for both pre-training and downstream tasks due to the inherent abstraction of graph data. To overcome above obstacles, we propose a novel framework named SGL-PT which follows the learning strategy “Pre-train, Prompt, and Predict”. Specifically, we raise a strong and universal pre-training task coined as SGL that acquires the complementary merits of generative and contrastive self-supervised graph learning. And motivated by prompt design in NLP, we reformulate the downstream task as maksed node prediction by designing a novel verbalizer-free prompting function, resulting in unifying the objectives of pre-text and downstream tasks. Empirical results show that our pre-training method surpasses other baselines under unsupervised setting, and our prompt tuning method can significantly facilitate models on biological datasets over standard fine-tuning and other graph prompt methods.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Sub2vec: Feature learning for subgraphs\",\n        \"Deep variational information bottleneck\",\n        \"LIBSVM: A Library for Support Vector Machines\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Prototypical Verbalizer for Prompt-based Few-shot Tuning\",\n        \"The relationship between Precision-Recall and ROC curves\",\n        \"Prompt tuning for graph neural networks\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Contrastive multi-view representation learning on graphs\",\n        \"Learning deep representations by mutual information estimation and maximization\",\n        \"Graphmae: Self-supervised masked graph autoencoders\",\n        \"Strategies For Pre-training Graph Neural Networks\",\n        \"Self-supervised learning on graphs: Deep insights and new direction\",\n        \"Variational Graph Auto-Encoders\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Prototypical Contrastive Learning of Unsupervised Representations\",\n        \"Pre-Train, Prompt, and Predict: A Systematic Survey of Prompting Methods in Natural Language Processing\",\n        \"Graphprompt: Unifying pre-training and downstream tasks for graph neural networks\",\n        \"TUDataset: A collection of benchmark datasets for learning with graphs\",\n        \"graph2vec: Learning distributed representations of graphs\",\n        \"Representation learning with contrastive predictive coding\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Collective classification in network data\",\n        \"Weisfeiler-lehman graph kernels\",\n        \"Efficient graphlet kernels for large graph comparison\",\n        \"Run away from your teacher: Understanding byol by a novel self-supervised approach\",\n        \"ZINC 15–ligand discovery for everyone\",\n        \"Infograph: Unsupervised and semi-supervised graph-level representation learning via mutual information maximization\",\n        \"GPPT: Graph Pre-Training and Prompt Tuning to Generalize Graph Neural Networks\",\n        \"All in One: Multi-Task Prompting for Graph Neural Networks\",\n        \"Deep Graph Library: A Graph-Centric, Highly-Performant Package for Graph Neural Networks\",\n        \"Self-supervised Learning on Graphs: Contrastive, Generative, or Predictive\",\n        \"MoleculeNet: a benchmark for molecular machine learning\",\n        \"Simgrace: A simple framework for graph contrastive learning without data augmentation\",\n        \"InfoGCL: Information-Aware Graph Contrastive Learning\",\n        \"How Powerful are Graph Neural Networks?\",\n        \"Self-supervised graph-level representation learning with local and global structure\",\n        \"Mining significant graph patterns by leap search\",\n        \"Deep graph kernels\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Graph contrastive learning automated\",\n        \"Graph contrastive learning with augmentations\",\n        \"A survey on negative transfer\",\n        \"Shift-robust gnns: Overcoming the limitations of localized graph training data\",\n        \"RoSA: A Robust Self-Aligned Framework for Node-Node Graph Contrastive Learning\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in SGL-PT: A Strong Graph Learner with Graph Prompt Tuning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}