{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Proxion: Uncovering Hidden Proxy Smart Contracts for Finding Collision Vulnerabilities in Ethereum\n\nPaper Abstract: Abstract. The proxy design pattern allows Ethereum smart contracts to be simultaneously immutable and upgradeable, in which an original contract is split into a proxy contract containing the data storage and a logic contract containing the implementation logic. This architecture is known to have security issues, namely function collisions and storage collisions between the proxy and logic contracts, and has been exploited in real-world incidents to steal usersâ€™ millions of dollars worth of digital assets. In response to this concern, several previous works have sought to identify proxy contracts in Ethereum and detect their collisions. However, they all fell short due to their limited coverage, often restricting analysis to only contracts with available source code or past transactions. To bridge this gap, we present Proxion, an automated cross-contract analyzer that identifies all proxy smart contracts and their collisions in Ethereum. What sets Proxion apart is its ability to analyze hidden smart contracts that lack both source code and past transactions. Equipped with various techniques to enhance efficiency and accuracy, Proxion outperforms the state-of-the-art tools, notably identifying millions more proxy contracts and thousands of unreported collisions. We apply Proxion to analyze over 36 million alive contracts from 2015 to 2023, revealing that 54.2% of them are proxy contracts, and about 1.5 million contracts exhibit at least one collision issue.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A survey of attacks on Ethereum smart contracts (sok)\",\n        \"How Attackers Stole Around $1.1M Worth of Tokens From Decentralized Music Project Audius\",\n        \"ERC-1822: Universal Upgradeable Proxy Standard (UUPS)\",\n        \"Ethereum Cryptocurrency\",\n        \"Proxy hunting: Understanding and characterizing proxy-based upgradeable smart contracts in blockchains\",\n        \"Viper\",\n        \"SODA: A Generic Online Detection Framework for Smart Contracts.\",\n        \"Compound\",\n        \"Mythril\",\n        \"Ethereum Archive Node\",\n        \"EtherScan\",\n        \"Proxy Contracts\",\n        \"Slither: a static analysis framework for smart contracts\",\n        \"The Solidity Contract-Oriented Programming Language\",\n        \"Not all code are create2 equal\",\n        \"Gigahorse: thorough, declarative decompilation of smart contracts\",\n        \"Madmax: Surviving out-of-gas conditions in Ethereum smart contracts\",\n        \"Elipmoc: Advanced decompilation of Ethereum smart contracts\",\n        \"Safemath\",\n        \"ERC-897: DelegateProxy\",\n        \"Contractfuzzer: Fuzzing smart contracts for vulnerability detection\",\n        \"Zeus: analyzing safety of smart contracts.\",\n        \"Upgradeability concept for collaborative blockchain-based business process execution framework\",\n        \"Panoramix - EVM decompiler\",\n        \"teEther: Gnawing at Ethereum to automatically exploit smart contracts\",\n        \"Ethereum smart contract analysis tools: A systematic review\",\n        \"Reguard: finding reentrancy bugs in smart contracts\",\n        \"Making smart contracts smarter\",\n        \"Manticore: A user-friendly symbolic execution framework for binaries and smart contracts\",\n        \"ERC-2535: Diamonds, Multi-Facet Proxy\",\n        \"EIP-1167: Minimal Proxy Contract\",\n        \"sfuzz: An efficient adaptive fuzzer for solidity smart contracts\",\n        \"Finding the greedy, prodigal, and suicidal contracts at scale\",\n        \"Contract upgrade anti-patterns\",\n        \"OpenSea\",\n        \"Proxy Upgrade Pattern\",\n        \"Smart Contract Sanctuary\",\n        \"ERC-1967: Proxy Storage Slots\",\n        \"Sereum: Protecting existing smart contracts against re-entrancy attacks\",\n        \"EVMPatch: Timely and automated patching of Ethereum smart contracts\",\n        \"Not your Type! Detecting Storage Collision Vulnerabilities in Ethereum Smart Contracts\",\n        \"Not so immutable: Upgradeability of smart contracts on Ethereum\",\n        \"Smarter Contracts: Detecting Vulnerabilities in Smart Contracts with Deep Transfer Learning.\",\n        \"Confuzzius: A data dependency-aware hybrid fuzzer for smart contracts\",\n        \"Osiris: Hunting for integer bugs in Ethereum smart contracts\",\n        \"The art of the scam: Demystifying honeypots in Ethereum smart contracts\",\n        \"Arbitrum announces 400 ETH bug bounty payout.\",\n        \"Securify: Practical security analysis of smart contracts\",\n        \"Octopus: Security Analysis tool for WebAssembly module and Blockchain Smart Contracts\",\n        \"Harvey: A greybox fuzzer for smart contracts\",\n        \"Wyvern Protocol\",\n        \"Bad Apples: Understanding the Centralized Security Risks in Decentralized Ecosystems\",\n        \"Upgradable contract\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Proxion: Uncovering Hidden Proxy Smart Contracts for Finding Collision Vulnerabilities in Ethereum, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}