{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: PiC: A Phrase-in-Context Dataset for Phrase Understanding and Semantic Search\n\nPaper Abstract: Abstract While contextualized word embeddings have been a de-facto standard, learning contextualized phrase embeddings is less explored and being hindered by the lack of a human-annotated benchmark that tests machine understanding of phrase semantics given a context sentence or paragraph (instead of phrases alone). To fill this gap, we propose PiC—a dataset of ∼similar-to\\sim28K of noun phrases accompanied by their contextual Wikipedia pages and a suite of three tasks for training and evaluating phrase embeddings. Training on PiC improves ranking-models’ accuracy and remarkably pushes span-selection (SS) models (i.e., predicting the start and end index of the target phrase) near human-accuracy, which is 95% Exact Match (EM) on semantic search given a query phrase and a passage. Interestingly, we find evidence that such impressive performance is because the SS models learn to better capture the common meaning of a phrase regardless of its actual context. SotA models perform poorly in distinguishing two senses of the same phrase in two contexts (∼similar-to\\sim60% EM) and in estimating the similarity between two different phrases in the same context (∼similar-to\\sim70% EM).\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Multi-span question answering using span-image network\",\n        \"Big BiRD: A large, fine-grained, bigram relatedness dataset for examining semantic composition\",\n        \"Longformer: The long-document transformer\",\n        \"Recent trends in word sense disambiguation: A survey\",\n        \"Natural Language Processing with Python: Analyzing Text with the Natural Language Toolkit\",\n        \"FEWS: Large-scale, low-shot word sense disambiguation with the dictionary\",\n        \"A large annotated corpus for learning natural language inference\",\n        \"How phrase sense disambiguation outperforms word sense disambiguation for statistical machine translation\",\n        \"Improving statistical machine translation using word sense disambiguation\",\n        \"Universal sentence encoder\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"SENSEVAL-2: Overview\",\n        \"Placing search in context: the concept revisited\",\n        \"Learning words from context and dictionaries: An experimental comparison\",\n        \"SimCSE: Simple contrastive learning of sentence embeddings\",\n        \"Datasheets for datasets\",\n        \"princeton-nlp/sup-simcse-roberta-large · hugging face\",\n        \"spaCy: Industrial-strength Natural Language Processing in Python\",\n        \"super_glue · datasets at hugging face\",\n        \"transformers/examples/pytorch/question-answering at main · huggingface/transformers\",\n        \"SpanBERT: Improving pre-training by representing and predicting spans\",\n        \"Natural questions: A benchmark for question answering research\",\n        \"Languagetool - online grammar, style & spell checker\",\n        \"Learning dense representations of phrases at scale\",\n        \"End-to-end neural coreference resolution\",\n        \"Learning words from context\",\n        \"PPDB 2.0: Better paraphrase ranking, fine-grained entailment relations, word embeddings, and style classification\",\n        \"upwork_annotation_guidelines.pdf\",\n        \"upwork_samples.pdf\",\n        \"WiC: the word-in-context dataset for evaluating context-sensitive meaning representations\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"Sentence-BERT: Sentence embeddings using Siamese BERT-networks\",\n        \"Api:categories - mediawiki\",\n        \"Wikimedia downloads\",\n        \"Universal sentence encoder | tensorflow hub\",\n        \"Domain and function: A dual-space model of semantic relations and compositions\",\n        \"Phrase-BERT: Improved phrase embeddings from BERT with an application to corpus exploration\",\n        \"From paraphrase database to compositional paraphrase model and back\",\n        \"Webscope | yahoo labs\",\n        \"arcface-pytorch/test.py at master · ronghuaiyang/arcface-pytorch\",\n        \"PAWS-X: A cross-lingual adversarial dataset for paraphrase identification\",\n        \"HotpotQA: A dataset for diverse, explainable multi-hop question answering\",\n        \"Assessing phrasal representation and composition in transformers\",\n        \"PAWS: Paraphrase adversaries from word scrambling\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in PiC: A Phrase-in-Context Dataset for Phrase Understanding and Semantic Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}