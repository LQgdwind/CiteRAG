{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Finding Diverse Strings and Longest Common Subsequences in a Graph\n\nPaper Abstract: Abstract In this paper, we study for the first time the Diverse Longest Common Subsequences (LCSs) problem under Hamming distance. Given a set of a constant number of input strings, the problem asks to decide if there exists some subset ùí≥ùí≥\\mathcal{X} of KùêæK longest common subsequences whose diversity is no less than a specified threshold ŒîŒî\\Delta, where we consider two types of diversities of a set ùí≥ùí≥\\mathcal{X} of strings of equal length: the Sum diversity and the Min diversity defined as the sum and the minimum of the pairwise Hamming distance between any two strings in ùí≥ùí≥\\mathcal{X}, respectively. We analyze the computational complexity of the respective problems with Sum- and Min-diversity measures, called the Max-Sum and Max-Min Diverse LCSs, respectively, considering both approximation algorithms and parameterized complexity. Our results are summarized as follows. When KùêæK is bounded, both problems are polynomial time solvable. In contrast, when KùêæK is unbounded, both problems become NP-hard, while Max-Sum Diverse LCSs problem admits a PTAS. Furthermore, we analyze the parameterized complexity of both problems with combinations of parameters KùêæK and rùëür, where rùëür is the length of the candidate strings to be selected. Importantly, all positive results above are proven in a more general setting, where an input is an edge-labeled directed acyclic graph (DAG) that succinctly represents a set of strings of the same length. Negative results are proven in the setting where an input is explicitly given as a set of strings. The latter results are equipped with an encoding such a set as the longest common subsequences of a specific input string set.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Color-coding\",\n        \"Synchronization and diversity of solutions\",\n        \"Complexity and Approximation: Combinatorial Optimization Problems and Their Approximability Properties\",\n        \"Structure preserving reductions among convex optimization problems\",\n        \"Diversity of solutions: An exploration through the lens of fixed-parameter tractability theory\",\n        \"FPT algorithms for diverse collections of hitting sets\",\n        \"An improved analysis for a greedy remote-clique algorithm using factor-revealing LPs\",\n        \"The parameterized complexity of sequence alignment and consensus\",\n        \"An FPT-algorithm for longest common subsequence parameterized by the maximum number of deletions\",\n        \"An improved analysis of local search for max-sum diversification\",\n        \"Approximation algorithms for dispersion problems\",\n        \"A compact DAG for storing and searching maximal common subsequences\",\n        \"Introduction to Algorithms, fourth edition\",\n        \"The string edit distance matching problem with moves\",\n        \"Parameterized Algorithms\",\n        \"Geometry of Cuts and Metrics, volume 15 of Algorithms and Combinatorics\",\n        \"Parameterized complexity\",\n        \"The discrete pùëùp-dispersion problem\",\n        \"Faster fixed-parameter tractable algorithms for matching and packing problems\",\n        \"The DIVERSE X Paradigm (Open problems)\",\n        \"The normalized edit distance with uniform operation costs is a metric\",\n        \"Parameterized Complexity Theory (Texts in Theoretical Computer Science. An EATCS Series)\",\n        \"Computers and intractability: A guide to the theory of NP-completeness\",\n        \"Similarity search in high dimensions via hashing\",\n        \"Efficient methods for multiple sequence alignment with guaranteed error bounds\",\n        \"The longest common subsequence problem for small alphabet size between many strings\",\n        \"A framework to design approximation algorithms for finding diverse solutions in combinatorial problems\",\n        \"Finding diverse trees, paths, and more\",\n        \"Dispersing facilities on a network\",\n        \"Efficient algorithms for enumerating maximal common subsequences of two strings\",\n        \"Recent results on the complexity of common-subsequence problems, in Time warps, String edits, and Macromolecules, pages 323‚Äì328\",\n        \"Introduction to Automata Theory, Languages, and Computation\",\n        \"Two algorithms for the longest common subsequence of three (or more) strings\",\n        \"Programming models for facility dispersion: The pùëùp-dispersion and maxisum dispersion problems\",\n        \"Binary codes capable of correcting deletions, insertions, and reversals\",\n        \"L1 pattern matching lower bound\",\n        \"Parallel algorithms for the longest common subsequence problem\",\n        \"The complexity of some problems on subsequences and supersequences\",\n        \"Maximization of minimum weighted Hamming distance between set pairs\",\n        \"Heuristic and special case algorithms for dispersion problems\",\n        \"Matching sequences under deletion/insertion constraints\",\n        \"A min-max theorem for pùëùp-center problems on a tree\",\n        \"Approximation Algorithms\",\n        \"The string-to-string correction problem\",\n        \"A study on two geometric location problems\",\n        \"Log-logarithmic worst-case range queries are possible in space Œ∏‚Äã(n)ùúÉùëõ\\\\theta(n)\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Finding Diverse Strings and Longest Common Subsequences in a Graph, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}