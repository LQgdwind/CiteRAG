{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Deterministic Distributed Expander Decomposition and Routing with Applications in Distributed Derandomization\n\nPaper Abstract: Abstract There is a recent exciting line of work in distributed graph algorithms in the 𝖢𝖮𝖭𝖦𝖤𝖲𝖳𝖢𝖮𝖭𝖦𝖤𝖲𝖳\\mathsf{CONGEST} model that exploit expanders. All these algorithms so far are based on two tools: expander decomposition and expander routing. An (ϵ,ϕ)italic-ϵitalic-ϕ(\\epsilon,\\phi)-expander decomposition removes ϵitalic-ϵ\\epsilon-fraction of the edges so that the remaining connected components have conductance at least ϕitalic-ϕ\\phi, i.e., they are ϕitalic-ϕ\\phi-expanders, and expander routing allows each vertex v𝑣v in a ϕitalic-ϕ\\phi-expander to very quickly exchange deg⁡(v)degree𝑣\\deg(v) messages with any other vertices, not just its local neighbors. In this paper, we give the first efficient deterministic distributed algorithms for both tools. We show that an (ϵ,ϕ)italic-ϵitalic-ϕ(\\epsilon,\\phi)-expander decomposition can be deterministically computed in poly⁡(ϵ−1)​no​(1)polysuperscriptitalic-ϵ1superscript𝑛𝑜1{\\operatorname{poly}}(\\epsilon^{-1})n^{o(1)} rounds for ϕ=poly⁡(ϵ)​n−o​(1)italic-ϕpolyitalic-ϵsuperscript𝑛𝑜1\\phi={\\operatorname{poly}}(\\epsilon)n^{-o(1)}, and that expander routing can be performed deterministically in poly⁡(ϕ−1)​no​(1)polysuperscriptitalic-ϕ1superscript𝑛𝑜1{\\operatorname{poly}}(\\phi^{-1})n^{o(1)} rounds. Both results match previous bounds of randomized algorithms by [Chang and Saranurak, PODC 2019] and [Ghaffari, Kuhn, and Su, PODC 2017] up to subpolynomial factors. Consequently, we derandomize existing distributed algorithms that exploit expanders. We show that a minimum spanning tree on no​(1)superscript𝑛𝑜1n^{o(1)}-expanders can be constructed deterministically in no​(1)superscript𝑛𝑜1n^{o(1)} rounds, and triangle detection and enumeration on general graphs can be solved deterministically in O​(n0.58)𝑂superscript𝑛0.58O(n^{0.58}) and n2/3+o​(1)superscript𝑛23𝑜1n^{2/3+o(1)} rounds, respectively. Using similar techniques, we also give the first polylogarithmic-round randomized algorithm for constructing an (ϵ,ϕ)italic-ϵitalic-ϕ(\\epsilon,\\phi)-expander decomposition in poly⁡(ϵ−1,log⁡n)polysuperscriptitalic-ϵ1𝑛{\\operatorname{poly}}(\\epsilon^{-1},\\log n) rounds for ϕ=1/poly⁡(ϵ−1,log⁡n)italic-ϕ1polysuperscriptitalic-ϵ1𝑛\\phi=1/{\\operatorname{poly}}(\\epsilon^{-1},\\log n). This algorithm is faster than the previous algorithm by [Chang and Saranurak, PODC 2019] in all regimes of parameters. The previous algorithm needs nΩ​(1)superscript𝑛Ω1n^{\\Omega(1)} rounds for any ϕ≥1/poly⁡log⁡nitalic-ϕ1poly𝑛\\phi\\geq 1/{\\operatorname{poly}}\\log n.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graph clustering using effective resistance\",\n        \"Subexponential algorithms for unique games and related problems\",\n        \"Local partitioning for directed graphs using PageRank\",\n        \"Sublogarithmic distributed MIS algorithm for sparse graphs using Nash-Williams decomposition\",\n        \"A deterministic algorithm for balanced cut with applications to dynamic connectivity, flows, and beyond\",\n        \"On distributed listing of cliques\",\n        \"Algebraic methods in the congested clique\",\n        \"Approximate max-flow on small depth networks\",\n        \"Distributed MST: a smoothed analysis\",\n        \"Distributed triangle detection via expander decomposition\",\n        \"Improved distributed expander decomposition and nearly optimal triangle enumeration\",\n        \"Distributed edge connectivity in sublinear time\",\n        \"“Tri, tri again”: Finding triangles and small subgraphs in a distributed setting\",\n        \"Sublinear-time distributed algorithms for detecting small cliques and even cycles\",\n        \"Possibilities and impossibilities for distributed subgraph detection\",\n        \"Improved deterministic distributed matching via rounding\",\n        \"Near-optimal scheduling of distributed algorithms\",\n        \"Distributed MST and routing in almost mixing time\",\n        \"New distributed algorithms in almost mixing time via transformations from parallel algorithms\",\n        \"Tight analyses of two local load balancing algorithms\",\n        \"Deterministic graph cuts in subquadratic time: Sparse, balanced, and k𝑘k-vertex\",\n        \"Sublinear-time parallel algorithms for matching and related problems\",\n        \"A sublinear bipartiteness tester for bounded degree graphs\",\n        \"Sorting, searching, and simulation in the mapreduce framework\",\n        \"Quantum distributed algorithm for triangle finding in the CONGEST model\",\n        \"Triangle finding and listing in CONGEST networks\",\n        \"Approximating the permanent\",\n        \"On a cut-matching game for the sparsest cut problem\",\n        \"Fast distributed construction of small k𝑘k-dominating sets and applications\",\n        \"Graph partitioning using single commodity flows\",\n        \"A model of computation for mapreduce\",\n        \"Deterministic edge connectivity in near-linear time\",\n        \"On clusterings: good, bad and spectral\",\n        \"Packet routing and job-shop scheduling in O​(congestion+dilation)𝑂congestiondilationO(congestion+dilation) steps\",\n        \"Improved distributed approximate matching\",\n        \"Low diameter graph decompositions\",\n        \"Parallel graph decompositions using random shifts\",\n        \"Dynamic minimum spanning forest with subpolynomial worst-case update time\",\n        \"A near-tight lower bound on the time complexity of distributed minimum-weight spanning tree construction\",\n        \"On the distributed complexity of large-scale graph computations\",\n        \"Polylogarithmic-time deterministic network decomposition and distributed derandomization\",\n        \"Graph expansion and the unique games conjecture\",\n        \"Computing cut-based hierarchical decompositions in almost linear time\",\n        \"Distributed verification and hardness of distributed approximation\",\n        \"Nearly-linear time algorithms for graph partitioning, graph sparsification, and solving linear systems\",\n        \"Distributed data summarization in well-connected networks\",\n        \"Expander decomposition and pruning: Faster, stronger, and simpler\",\n        \"Approximation algorithms for unique games\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Deterministic Distributed Expander Decomposition and Routing with Applications in Distributed Derandomization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}