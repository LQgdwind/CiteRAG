{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The nanoPU: Redesigning the CPU-Network Interface to Minimize RPC Tail Latency\n\nPaper Abstract: Abstract The nanoPU is a new networking-optimized CPU designed to minimize tail latency for RPCs. By bypassing the cache and memory hierarchy, the nanoPU directly places arriving messages into the CPU register file. The wire-to-wire latency through the application is just 65ns, about 13√ó\\times faster than the current state-of-the-art. The nanoPU moves key functions from software to hardware: reliable network transport, congestion control, core selection, and thread scheduling. It also supports a unique feature to bound the tail latency experienced by high-priority applications. Our prototype nanoPU is based on a modified RISC-V CPU; we evaluate its performance using cycle-accurate simulations of 324 cores on AWS FPGAs, including real applications (MICA and chain replication).\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Amazon ec2 f1 instances.\",\n        \"Sprocket: A Serverless Video Processing Framework.\",\n        \"Enabling programmable transport protocols in high-speed nics.\",\n        \"Above the clouds: A berkeley view of cloud computing.\",\n        \"The rocket chip generator.\",\n        \"Aws nitro system.\",\n        \"Chisel: constructing hardware in a scala embedded language.\",\n        \"The end of slow networks: It‚Äôs time for a redesign.\",\n        \"Forwarding metamorphosis: Fast programmable match-action processing in hardware for sdn.\",\n        \"Cirrus: A Serverless Framework for End-to-End ML Workflows.\",\n        \"Fast and general distributed transactions using rdma and htm.\",\n        \"Rpcvalet: Ni-driven tail-aware balancing of Œºùúá\\\\mus-scale rpcs.\",\n        \"The j-machine: A fine grain concurrent computer.\",\n        \"Context switch overheads for linux on arm platforms.\",\n        \"The celerity open-source 511-core risc-v tiered accelerator fabric: Fast architectures and design methodologies for fast chips.\",\n        \"Intel corporation. intel data direct i/o technology (intel ddio): A primer.\",\n        \"The tail at scale.\",\n        \"nanoPU GitHub.\",\n        \"Encoding, Fast and Slow: Low-latency Video Processing Using Thousands of Tiny Threads.\",\n        \"Re-architecting datacenter networks and stacks for low latency and high performance.\",\n        \"Direct cache access for high bandwidth network i/o.\",\n        \"Event-driven packet processing.\",\n        \"The case for a network fast path to the cpu.\",\n        \"Caribou: Intelligent distributed storage.\",\n        \"Consensus in a box: Inexpensive coordination in hardware.\",\n        \"Netchain: Scale-free sub-rtt coordination.\",\n        \"Shinjuku: Preemptive scheduling for Œºùúá\\\\musecond-scale tail latency.\",\n        \"Datacenter rpcs can be general and fast.\",\n        \"Using rdma efficiently for key-value services.\",\n        \"Fasst: Fast, scalable and simple distributed transactions with two-sided (RDMA) datagram rpcs.\",\n        \"Firesim: Fpga-accelerated cycle-exact scale-out system simulation in the public cloud.\",\n        \"In-band network telemetry via programmable dataplanes.\",\n        \"R2p2: Making rpcs first-class datacenter citizens.\",\n        \"MICA: A holistic approach to fast in-memory key-value storage.\",\n        \"Design and evaluation of an rdma-aware data shuffling operator for parallel database systems.\",\n        \"Mellanox bluefield-2.\",\n        \"Homa: A receiver-driven low-latency transport protocol using network priorities.\",\n        \"Naples dsc-100 distributed services card.\",\n        \"Scale-out numa.\",\n        \"Options for Code Generation Conventions.\",\n        \"Shenango: Achieving high CPU efficiency for latency-sensitive datacenter workloads.\",\n        \"The ramcloud storage system.\",\n        \"Zygos: Achieving low tail latency for microsecond-scale networked tasks.\",\n        \"Redis.\",\n        \"Risc-v specifications.\",\n        \"Rocket-chip github.\",\n        \"The nebula rpc-optimized architecture.\",\n        \"Resq: Enabling slos in network function virtualization.\",\n        \"Verilator.\",\n        \"Netlock: Fast, centralized lock management using programmable switches.\",\n        \"Congestion control for large-scale rdma deployments.\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in The nanoPU: Redesigning the CPU-Network Interface to Minimize RPC Tail Latency, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}