{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Decouple Graph Neural Networks: Train Multiple Simple GNNs Simultaneously Instead of One\n\nPaper Abstract: Abstract Graph neural networks (GNN) suffer from severe inefficiency due to the exponential growth of node dependency with the increase of layers. It extremely limits the application of stochastic optimization algorithms so that the training of GNN is usually time-consuming. To address this problem, we propose to decouple a multi-layer GNN as multiple simple modules for more efficient training, which is comprised of classical forward training (FT) and designed backward training (BT). Under the proposed framework, each module can be trained efficiently in FT by stochastic algorithms without distortion of graph information owing to its simplicity. To avoid the only unidirectional information delivery of FT and sufficiently train shallow modules with the deeper ones, we develop a backward training mechanism that makes the former modules perceive the latter modules, inspired by the classical backward propagation algorithm. The backward training introduces the reversed information delivery into the decoupled modules as well as the forward information delivery. To investigate how the decoupling and greedy training affect the representational capacity, we theoretically prove that the error produced by linear modules will not accumulate on unsupervised tasks in most cases. The theoretical and experimental results show that the proposed framework is highly efficient with reasonable performance, which may deserve more investigation.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Deep residual learning for image recognition\",\n        \"The graph neural network model\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Learning convolutional neural networks for graphs\",\n        \"Graph attention networks\",\n        \"Rethinking graph transformers with spectral attention\",\n        \"Traffic flow prediction via spatial temporal graph neural network\",\n        \"Variational graph auto-encoders\",\n        \"Symmetric graph convolutional autoencoder for unsupervised graph representation learning\",\n        \"Contrastive multi-view representation learning on graphs\",\n        \"Adaptive subgradient methods for online learning and stochastic optimization\",\n        \"Adam: A method for stochastic optimization\",\n        \"Inductive representation learning on large graphs\",\n        \"Fastgcn: Fast learning with graph convolutional networks via importance sampling\",\n        \"Stochastic training of graph convolutional networks with variance reduction\",\n        \"Graphsaint: Graph sampling based inductive learning method\",\n        \"Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks\",\n        \"Simplifying graph convolutional networks\",\n        \"Simple spectral graph convolution\",\n        \"How powerful are graph neural networks?\",\n        \"Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion\",\n        \"Spectral networks and locally connected networks on graphs\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Attention is all you need\",\n        \"Learning dynamic graph representation of brain connectome with spatio-temporal attention\",\n        \"Graph attention tracking\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Deepgcns: Can gcns go as deep as cnns?\",\n        \"Graph neural networks exponentially lose expressive power for node classification\",\n        \"On provable benefits of depth in training graph convolutional networks\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"The reduction of a graph to canonical form and the algebra which appears therein\",\n        \"L2-GCN: layer-wise and learned efficient training of graph convolutional networks\",\n        \"Decoupled greedy learning of graph neural networks\",\n        \"Reducing the dimensionality of data with neural networks\",\n        \"Mgae: Marginalized graph autoencoder for graph clustering\",\n        \"A decision-theoretic generalization of on-line learning and an application to boosting\",\n        \"Greedy function approximation: a gradient boosting machine\",\n        \"Xgboost: A scalable tree boosting system\",\n        \"Boosting neural networks\",\n        \"Ensembling neural networks: Many could be better than all\",\n        \"Boost then convolve: Gradient boosting meets graph neural networks\",\n        \"Adagcn: Adaboosting graph convolutional networks into deep models\",\n        \"Decoupled neural interfaces using synthetic gradients\",\n        \"Learning representations by back-propagating errors\",\n        \"Collective classification in network data\",\n        \"Adversarially regularized graph autoencoder for graph embedding\",\n        \"Attributed graph clustering via adaptive graph convolution\",\n        \"Deep graph infomax\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Simple and deep graph convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Decouple Graph Neural Networks: Train Multiple Simple GNNs Simultaneously Instead of One, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}