{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Modular Framework for Reinforcement Learning Optimal Execution\n\nPaper Abstract: Abstract In this article, we develop a modular framework for the application of Reinforcement Learning to the problem of Optimal Trade Execution. The framework is designed with flexibility in mind, in order to ease the implementation of different simulation setups. Rather than focusing on agents and optimization methods, we focus on the environment and break down the necessary requirements to simulate an Optimal Trade Execution under a Reinforcement Learning framework such as data pre-processing, construction of observations, action processing, child order execution, simulation of benchmarks, reward calculations etc. We give examples of each component, explore the difficulties their individual implementations & the interactions between them entail, and discuss the different phenomena that each component induces in the simulation, highlighting the divergences between the simulation and the behavior of a real market. We showcase our modular implementation through a setup that, following a Time-Weighted Average Price (TWAP) order submission schedule, allows the agent to exclusively place limit orders, simulates their execution via iterating over snapshots of the Limit Order Book (LOB), and calculates rewards as the $ improvement over the price achieved by a TWAP benchmark algorithm following the same schedule. We also develop evaluation procedures that incorporate iterative re-training and evaluation of a given agent over intervals of a training horizon, mimicking how an agent may behave when being continuously retrained as new market data becomes available and emulating the monitoring practices that algorithm providers are bound to perform under current regulatory frameworks.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Market making and the changing structure of the securities industry\",\n        \"Nasdaq nordic algorithm offering\",\n        \"Optimal execution strategies in limit order books with general shape functions\",\n        \"Optimal execution with nonlinear impact functions and trading-enhanced risk\",\n        \"Optimal trading in a dynamic market\",\n        \"Optimal execution of portfolio transactions\",\n        \"Optimized trade execution with reinforcement learning\",\n        \"Multi-Agent Deep Reinforcement Learning for Liquidation Strategy Analysis\",\n        \"Liquidation in Limit Order Books with Controlled Intensity\",\n        \"Optimal control of execution costs\",\n        \"OpenAI Gym\",\n        \"Incorporating order-flow into optimal execution\",\n        \"Effective Trade Execution\",\n        \"Towards Realistic Market Simulations: a Generative Adversarial Networks Approach\",\n        \"Deep execution - value and policy based reinforcement learning for trading and beating market benchmarks\",\n        \"Optimal execution with transient impact\",\n        \"Machine Learning in Finance: From Theory to Practice\",\n        \"Auctions as algorithms: Computerized trade execution and price discovery\",\n        \"Orderbook matching engine implementation\",\n        \"Universal Trading for Order Execution with Oracle Policy Distillation\",\n        \"Circular 2018/1\",\n        \"Rule 5310\",\n        \"Optimal trade execution: A mean quadratic variation approach\",\n        \"A hamilton–jacobi–bellman approach to optimal trade execution\",\n        \"Optimal portfolio liquidation with limit orders\",\n        \"A reinforcement learning extension to the almgren-chriss framework for optimal trade execution\",\n        \"Policy gradient stock gan for realistic discrete order data generation in financial markets\",\n        \"Optimal Liquidity Trading*\",\n        \"Competitive algorithms for vwap and limit order trading\",\n        \"Multi-Agent Reinforcement Learning in a Realistic Limit Order Book Market Simulation\",\n        \"High-frequency simulations of an order book: a two-scale approach\",\n        \"Generating Realistic Stock Market Order Streams\",\n        \"RLlib: Abstractions for Distributed Reinforcement Learning\",\n        \"Optimal liquidation with deep reinforcement learning\",\n        \"An end-to-end optimal trade execution framework based on proximal policy optimization\",\n        \"Market behavior in a clearing house\",\n        \"Playing Atari with Deep Reinforcement Learning\",\n        \"Ray: A Distributed Framework for Emerging AI Applications\",\n        \"Data augmentation of high frequency financial data using generative adversarial network\",\n        \"Reinforcement learning for optimized trade execution\",\n        \"Double Deep Q-Learning for Optimal Execution\",\n        \"Optimal trading strategy and supply/demand dynamics\",\n        \"Notice on execution of client orders\",\n        \"Optimal execution in a general one-sided limit-order book\",\n        \"Risk aversion and the dynamics of optimal liquidation strategies in illiquid\",\n        \"Deep reinforcement learning for the optimal placement of cryptocurrency limit orders\",\n        \"Proximal Policy Optimization Algorithms\",\n        \"Markets in financial instruments directive\",\n        \"Report on the thematic review of best execution\",\n        \"Reinforcement Learning: An Introduction\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in A Modular Framework for Reinforcement Learning Optimal Execution, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}