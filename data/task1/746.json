{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SQuARM-SGD: Communication-Efficient Momentum SGD for Decentralized Optimization\n\nPaper Abstract: Abstract In this paper, we propose and analyze SQuARM-SGD, a communication-efficient algorithm for decentralized training of large-scale machine learning models over a network. In SQuARM-SGD, each node performs a fixed number of local SGD steps using Nesterovâ€™s momentum and then sends sparsified and quantized updates to its neighbors regulated by a locally computable triggering criterion. We provide convergence guarantees of our algorithm for general (non-convex) and convex smooth objectives, which, to the best of our knowledge, is the first theoretical analysis for compressed decentralized SGD with momentum updates. We show that the convergence rate of SQuARM-SGD matches that of vanilla SGD. We empirically show that including momentum updates in SQuARM-SGD can lead to better test performance than the current state-of-the-art which does not consider momentum updates.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"QSGD: communication-efficient SGD via gradient quantization and encoding\",\n        \"Sparse communication for distributed gradient descent\",\n        \"The convergence of sparsified gradient methods\",\n        \"Stochastic gradient push for distributed deep learning\",\n        \"Qsparse-local-SGD: Distributed SGD with quantization, sparsification and local computations\",\n        \"signSGD: Compressed optimisation for non-convex problems\",\n        \"Lag: Lazily aggregated gradient for communication-efficient distributed learning\",\n        \"Iterative parameter mixing for distributed large-margin training of structured predictors for natural language processing\",\n        \"Event-triggered zero-gradient-sum distributed consensus optimization over directed networks\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Distributed event-triggered control for multi-agent systems\",\n        \"Distributed optimization with dynamic event-triggered mechanisms\",\n        \"Dynamic triggering mechanisms for event-triggered control\",\n        \"An introduction to event-triggered and self-triggered control\",\n        \"Deep residual learning for image recognition\",\n        \"Distributed convex optimization via continuous-time coordination algorithms with discrete-time communication\",\n        \"A unified theory of decentralized SGD with changing topology and local updates\",\n        \"Decentralized Deep Learning with Arbitrary Communication Compression\",\n        \"Federated learning: Strategies for improving communication efficiency\",\n        \"Cifar-10\",\n        \"Error feedback fixes signsgd and other gradient compression schemes\",\n        \"Decentralized Stochastic Optimization and Gossip Algorithms with Compressed Communication\",\n        \"Deep gradient compression: Reducing the communication bandwidth for distributed training\",\n        \"Asynchronous periodic event-triggered coordination of multi-agent systems\",\n        \"Can decentralized algorithms outperform centralized algorithms? a case study for decentralized parallel stochastic gradient descent\",\n        \"Asynchronous decentralized parallel stochastic gradient descent\",\n        \"Quantized decentralized consensus optimization\",\n        \"Sparsified SGD with Memory\",\n        \"SPARQ-SGD: Event-triggered and compressed communication in decentralized optimization\",\n        \"Event-based broadcasting for multi-agent average consensus\",\n        \"Local SGD Converges Fast and Communicates Little\",\n        \"Scalable distributed DNN training using commodity GPU cloud computing\",\n        \"Distributed mean estimation with limited communication\",\n        \"Communication compression for decentralized training\",\n        \"Non-convex distributed optimization\",\n        \"Doublesqueeze: Parallel stochastic gradient descent with double-pass error-compensated compression\",\n        \"Cooperative sgd: A unified framework for the design and analysis of communication-efficient sgd algorithms\",\n        \"The marginal value of adaptive gradient methods in machine learning\",\n        \"Matcha: Speeding up decentralized sgd via matching decomposition sampling\",\n        \"SlowMo: Improving communication-efficient distributed sgd with slow momentum\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"Terngrad: Ternary gradients to reduce communication in distributed deep learning\",\n        \"On the linear speedup analysis of communication efficient momentum SGD for distributed non-convex optimization\",\n        \"A unified analysis of stochastic momentum methods for deep learning\",\n        \"Parallel restarted SGD with faster convergence and less communication:demystifying why model averaging works for deep learning\",\n        \"Communication-efficient distributed blockwise momentum sgd with error-feedback\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in SQuARM-SGD: Communication-Efficient Momentum SGD for Decentralized Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}