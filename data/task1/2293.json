{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Classifying Sequences of Extreme Length with Constant Memory Applied to Malware Detection\n\nPaper Abstract: Abstract Recent works within machine learning have been tackling inputs of ever-increasing size, with cybersecurity presenting sequence classification problems of particularly extreme lengths. In the case of Windows executable malware detection, inputs may exceed 100100100 MB, which corresponds to a time series with T=100,000,000ùëá100000000T=100,000,000 steps. To date, the closest approach to handling such a task is MalConv, a convolutional neural network capable of processing up to T=2,000,000ùëá2000000T=2,000,000 steps. The ùí™‚Äã(T)ùí™ùëá\\mathcal{O}(T) memory of CNNs has prevented further application of CNNs to malware. In this work, we develop a new approach to temporal max pooling that makes the required memory invariant to the sequence length TùëáT. This makes MalConv 116√ó116\\times more memory efficient, and up to 25.8√ó25.8\\times faster to train on its original dataset, while removing the input length restrictions to MalConv. We re-invest these gains into improving the MalConv architecture by developing a new Global Channel Gating design, giving us an attention mechanism capable of learning feature interactions across 100 million time steps in an efficient manner, a capability lacked by the original MalConv CNN. Our implementation can be found at https://github.com/NeuromorphicComputationResearchProgram/MalConv2\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Detecting Malware with Information Complexity\",\n        \"EMBER: An Open Dataset for Training Static PE Malware Machine Learning Models\",\n        \"Automated Classification and Analysis of Internet Malware\",\n        \"Scalable , Behavior-Based Malware Clustering\",\n        \"Optimal memory-aware backpropagation of deep join networks\",\n        \"On normalized compression distance and large malware\",\n        \"Training Deep Nets with Sublinear Memory Cost\",\n        \"Activation Analysis of a Byte-Based Deep Neural Network for Malware Classification\",\n        \"Language Modeling with Gated Convolutional Networks\",\n        \"Explaining Vulnerabilities of Deep Learning to Adversarial Malware Binaries\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Neural Machine Translation By Jointly Learning To Align and Translate\",\n        \"Parameter Tuning and Confidence Limits of Malware Clustering\",\n        \"Non-Negative Networks Against Adversarial Attacks\",\n        \"Static Malware Detection & Subterfuge: Quantifying the Robustness of Machine Learning and Current Anti-Virus\",\n        \"What is the Shape of an Executable?\",\n        \"Algorithm 799: Revolve: An Implementation of Checkpointing for the Reverse or Adjoint Mode of Computational Differentiation\",\n        \"Memory-Efficient Backpropagation Through Time\",\n        \"One-dimensional convolutional neural networks for Android malware detection\",\n        \"Evaluation of malware phylogeny modelling systems using automated variant generation\",\n        \"Malware Detection on Byte Streams of PDF Files Using Convolutional Neural Networks\",\n        \"Approaches to Adversarial Drift\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Reformer: The Efficient Transformer\",\n        \"Adversarial Malware Binaries: Evading Deep Learning for Malware Detection in Executables\",\n        \"Deep Convolutional Malware Classifiers Can Learn from Raw Executables and Labels Only\",\n        \"Adversarial Examples on Discrete Sequences for Beating Whole-Binary Malware Detection\",\n        \"ImageNet Classification with Deep Convolutional Neural Networks\",\n        \"Efficient Rematerialization for Deep Networks\",\n        \"A Graph Theoretic Framework of Recomputation Algorithms for Memory-Efficient Backpropagation\",\n        \"The Similarity Metric\",\n        \"A Structured Self-attentive Sentence Embedding\",\n        \"Phenotype Prediction and Genome-Wide Association Study Using Deep Convolutional Neural Network of Soybean\",\n        \"Decoupled Weight Decay Regularization\",\n        \"Effective Approaches to Attention-based Neural Machine Translation\",\n        \"The arms race: Adversarial search defeats entropy used to detect malware\",\n        \"PyLZJD: An Easy to Use Tool for Machine Learning\",\n        \"Malware Detection by Eating a Whole EXE\",\n        \"An Alternative to NCD for Large Sequences, Lempel-Ziv Jaccard Distance\",\n        \"A New Burrows Wheeler Transform Markov Distance\",\n        \"Lempel-Ziv Jaccard Distance, an effective alternative to ssdeep and sdhash\",\n        \"Trends in CircumventingWeb-Malware Detection\",\n        \"Virus Share\",\n        \"A Survey on Using Kolmogorov Complexity in Cybersecurity\",\n        \"Is Anti-virus Really Dead?\",\n        \"Neural Classification of Malicious Scripts: A study with JavaScript and VBScript\",\n        \"WaveNet: A Generative Model for Raw Audio\",\n        \"Attention is All you Need\",\n        \"Legendre Memory Units: Continuous-Time Representation in Recurrent Neural Networks\",\n        \"An Observational Investigation of Reverse Engineers ‚Äô Processes\",\n        \"The Software Similarity Problem in Malware Analysis\",\n        \"Analyzing Worms and Network Traffic Using Compression\",\n        \"Powerful SNP-set analysis for case-control genome-wide association studies\",\n        \"Hierarchical Attention Networks for Document Classification\",\n        \"Rationale-Augmented Convolutional Neural Networks for Text Classification\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Classifying Sequences of Extreme Length with Constant Memory Applied to Malware Detection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}