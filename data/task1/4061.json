{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ”What makes my queries slow?”: Subgroup Discovery for SQL Workload Analysis\n\nPaper Abstract: Abstract Among daily tasks of database administrators (DBAs), the analysis of query workloads to identify schema issues and improving performances is crucial. Although DBAs can easily pinpoint queries repeatedly causing performance issues, it remains challenging to automatically identify subsets of queries that share some properties only (a pattern) and simultaneously foster some target measures, such as execution time. Patterns are defined on combinations of query clauses, environment variables, database alerts and metrics and help answer questions like what makes SQL queries slow? What makes I/O communications high? Automatically discovering these patterns in a huge search space and providing them as hypotheses for helping to localize issues and root-causes is important in the context of explainable AI. To tackle it, we introduce an original approach rooted on Subgroup Discovery. We show how to instantiate and develop this generic data-mining framework to identify potential causes of SQL workloads issues. We believe that such data-mining technique is not trivial to apply for DBAs. As such, we also provide a visualization tool for interactive knowledge discovery. We analyse a one week workload from hundreds of databases from our company, make both the dataset and source code available, and experimentally show that insightful hypotheses can be discovered.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Primitives for workload summarization and implications for SQL\",\n        \"Compressing SQL workloads\",\n        \"SQL QueRIE recommendations\",\n        \"Similarity measures for OLAP sessions\",\n        \"Cleaning antipatterns in an SQL query log\",\n        \"On query-based search of possible design flaws of SQL databases\",\n        \"Detecting performance anti-patterns for applications developed using object-relational mapping\",\n        \"Oracle workload intelligence\",\n        \"On workload characterization of relational database environments\",\n        \"Similarity metrics for SQL query clustering\",\n        \"Query2vec: An evaluation of NLP techniques for generalized workload analytics\",\n        \"On the usefulness of SQL-query-similarity measures to find user interests\",\n        \"Summarizing relational databases\",\n        \"Ettu: Analyzing query intents in corporate databases\",\n        \"Facilitating SQL query composition and analysis\",\n        \"Explora: A multipattern and multistrategy discovery assistant\",\n        \"Subgroup discovery\",\n        \"Uncovering structure-property relationships of materials by subgroup discovery\",\n        \"Identifying key factors of student academic performance by subgroup discovery\",\n        \"Chemical features mining provides new descriptive structure-odor relationships\",\n        \"Moz SQL parser.\",\n        \"Active session history.\",\n        \"pgsentinel – sampling active session history.\",\n        \"Clustering-based materialized view selection in data warehouses\",\n        \"Text mining applied to SQL queries: A case study for the sdss skyserver.\",\n        \"Comprehensive and efficient workload compression\",\n        \"Finding the most interesting patterns in a database quickly by using sequential sampling\",\n        \"Subgroup discovery with CN2-SD\",\n        \"Novel techniques for efficient and effective subgroup discovery\",\n        \"Subgroup discovery in ranked data, with an application to gene set enrichment\",\n        \"Fast exhaustive subgroup discovery with numerical target concepts\",\n        \"pysubgroup: Easy-to-use subgroup discovery in python\",\n        \"The CN2 induction algorithm\",\n        \"Using of jaccard coefficient for keywords similarity\",\n        \"Semi-automatic refinement and assessment of subgroup patterns\",\n        \"Extensibility in data mining systems\",\n        \"Spatial subgroup mining integrated in an object-relational spatial database\",\n        \"VIKAMINE - open-source subgroup discovery, pattern mining, and analytics\",\n        \"Database tuning advisor for microsoft SQL server 2005: demo\",\n        \"Query log compression for workload analytics\",\n        \"Explique: Interactive databases exploration with SQL\",\n        \"Addressing diverse user preferences in SQL-query-result navigation\",\n        \"Queryscope: visualizing queries for repeatable database tuning\",\n        \"Anytime discovery of a diverse set of patterns with monte carlo tree search\",\n        \"FSSD - A fast and efficient algorithm for subgroup set discovery\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in ”What makes my queries slow?”: Subgroup Discovery for SQL Workload Analysis, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}