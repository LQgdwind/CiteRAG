{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Sub-Goal Trees – a Framework for Goal-Based Reinforcement Learning\n\nPaper Abstract: Abstract Many AI problems, in robotics and other domains, are goal-based, essentially seeking trajectories leading to various goal states. Reinforcement learning (RL), building on Bellman’s optimality equation, naturally optimizes for a single goal, yet can be made multi-goal by augmenting the state with the goal. Instead, we propose a new RL framework, derived from a dynamic programming equation for the all pairs shortest path (APSP) problem, which naturally solves multi-goal queries. We show that this approach has computational benefits for both standard and approximate dynamic programming. Interestingly, our formulation prescribes a novel protocol for computing a trajectory: instead of predicting the next state given its predecessor, as in standard RL, a goal-conditioned trajectory is constructed by first predicting an intermediate state between start and goal, partitioning the trajectory into two. Then, recursively, predicting intermediate points on each sub-segment, until a complete trajectory is obtained. We call this trajectory structure a sub-goal tree. Building on it, we additionally extend the policy gradient methodology to recursively predict sub-goals, resulting in novel goal-based algorithms. Finally, we apply our method to neural motion planning, where we demonstrate significant improvements compared to standard RL on navigating a 7-DoF robot arm between obstacles.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hindsight experience replay\",\n        \"The arcade learning environment: An evaluation platform for general agents\",\n        \"Dynamic programming and optimal control: Volume II\",\n        \"Neuro-dynamic programming\",\n        \"Mixture density networks\",\n        \"More algorithms for all-pairs shortest paths in weighted graphs\",\n        \"A survey on policy search for robotics\",\n        \"Floyd-warshall reinforcement learning learning from past experiences to reach new goals\",\n        \"Benchmarking deep reinforcement learning for continuous control\",\n        \"Tree-based batch mode reinforcement learning\",\n        \"Algorithm 97: shortest path\",\n        \"Regret minimization in mdps with options without prior knowledge\",\n        \"Universal planning: An (almost) universally bad idea\",\n        \"Variance reduction techniques for gradient estimates in reinforcement learning\",\n        \"Deep reinforcement learning for robotic manipulation with asynchronous off-policy updates\",\n        \"Dynamical movement primitives: learning attractor models for motor behaviors\",\n        \"Time-agnostic prediction: Predicting predictable video frames\",\n        \"Harnessing reinforcement learning for neural motion planning\",\n        \"Goals as parallel program specifications\",\n        \"Learning to achieve goals\",\n        \"Qt-opt: Scalable deep reinforcement learning for vision-based robotic manipulation\",\n        \"Adam: A method for stochastic optimization\",\n        \"Reinforcement learning in robotics: A survey\",\n        \"Robot learning from demonstration by constructing skill trees\",\n        \"Planning algorithms\",\n        \"Scaling up approximate value iteration with options: Better policies with fewer iterations\",\n        \"Automatic discovery of subgoals in reinforcement learning using diverse density\",\n        \"Q-cut—dynamic discovery of sub-goals in reinforcement learning\",\n        \"Prediction and control with temporal segment models\",\n        \"Learning to select and generalize striking movements in robot table tennis\",\n        \"Finite-time bounds for fitted value iteration\",\n        \"Reinforcement learning of motor skills with policy gradients\",\n        \"ALVINN: An autonomous land vehicle in a neural network\",\n        \"Motion planning networks\",\n        \"Neural fitted q iteration–first experiences with a data efficient neural reinforcement learning method\",\n        \"A reduction of imitation learning and structured prediction to no-regret online learning\",\n        \"Artificial Intelligence - A Modern Approach (3. internat. ed.)\",\n        \"Universal value function approximators\",\n        \"Representation and automatic synthesis of reaction plans\",\n        \"Trust region policy optimization\",\n        \"Proximal policy optimization algorithms\",\n        \"Kinodynamic motion planning by interior-exterior cell exploration\",\n        \"The Open Motion Planning Library\",\n        \"Robobarista: Object part based transfer of manipulation trajectories from crowd-sourcing in 3d pointclouds\",\n        \"Between mdps and semi-mdps: A framework for temporal abstraction in reinforcement learning\",\n        \"Policy gradient methods for reinforcement learning with function approximation\",\n        \"Approximate distance oracles\",\n        \"Regression methods for pricing complex american-style options\",\n        \"Faster all-pairs shortest paths via circuit complexity\",\n        \"Auto-conditioned recurrent mixture density networks for complex trajectory generation\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Sub-Goal Trees – a Framework for Goal-Based Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}