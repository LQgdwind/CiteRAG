{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Leaf: Multiple-Choice Question Generation\n\nPaper Abstract: Abstract Testing with quiz questions has proven to be an effective way to assess and improve the educational process. However, manually creating quizzes is tedious and time-consuming. To address this challenge, we present Leaf, a system for generating multiple-choice questions from factual text. In addition to being very well suited for the classroom, Leaf could also be used in an industrial setting, e.g., to facilitate onboarding and knowledge sharing, or as a component of chatbots, question answering systems, or Massive Open Online Courses (MOOCs). The code and the demo are available on GitHub.111https://github.com/KristiyanVachev/Leaf-Question-Generation\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Evaluation methodologies in automatic question generation 2013-2018\",\n        \"UniLMv2: Pseudo-masked language models for unified language model pre-training\",\n        \"A BERT-based distractor generation scheme with multi-tasking and negative answer training strategies\",\n        \"TyDi QA: A benchmark for information-seeking question answering in typologically diverse languages\",\n        \"Think you have solved question answering? Try ARC, the AI2 Reasoning Challenge\",\n        \"From ‘F’ to ‘A’ on the N.Y. Regents Science Exams: An overview of the Aristo project\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Unified language model pre-training for natural language understanding and generation\",\n        \"Learning to ask: Neural question generation for reading comprehension\",\n        \"Question generation for question answering\",\n        \"Generating distractors for reading comprehension questions from real examinations\",\n        \"Beyond English-only reading comprehension: Experiments in zero-shot multilingual transfer for Bulgarian\",\n        \"EXAMS: A multi-subject high school examinations dataset for cross-lingual and multilingual question answering\",\n        \"WebExperimenter for multiple-choice question generation\",\n        \"XTREME: A massively multilingual multi-task benchmark for evaluating cross-lingual generalisation\",\n        \"BiPaR: A bilingual parallel dataset for multilingual and cross-lingual reading comprehension on novels\",\n        \"Generating question-answer hierarchies\",\n        \"A systematic review of automatic question generation for educational purposes\",\n        \"RACE: Large-scale ReAding comprehension dataset from examinations\",\n        \"ALBERT: A lite BERT for self-supervised learning of language representations\",\n        \"METEOR: An automatic metric for MT evaluation with high levels of correlation with human judgments\",\n        \"Restatement and question generation for counsellor chatbot\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"MLQA: Evaluating cross-lingual extractive question answering\",\n        \"ROUGE: A package for automatic evaluation of summaries\",\n        \"Few-shot learning with multilingual language models\",\n        \"RoBERTa: A robustly optimized BERT pretraining approach\",\n        \"Can a suit of armor conduct electricity? A new dataset for open book question answering\",\n        \"Computer-aided generation of multiple-choice tests\",\n        \"Enhancing lexical-based approach with external knowledge for Vietnamese multiple-choice machine reading comprehension\",\n        \"Better distractions: Transformer-based distractor generation and multiple choice question filtering\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"ProphetNet: Predicting future n-gram for sequence-to-sequence pre-training\",\n        \"Questgen: AI powered question generator\",\n        \"Quillionz - world’s first AI-powered question generator\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"Chapter one - ten benefits of testing and their applications to educational practice\",\n        \"AnswerQuest: A system for generating question-answer items from multi-paragraph documents\",\n        \"Leveraging context information for natural question generation\",\n        \"Evaluation of automatically generated english vocabulary questions\",\n        \"Quarel: A dataset and models for answering questions about qualitative relationships\",\n        \"sense2vec - a fast and accurate method for word sense disambiguation in neural word embeddings\",\n        \"NewsQA: A machine comprehension dataset\",\n        \"Generating answer candidates for quizzes and answer-aware question generators\",\n        \"ERNIE-GEN: an enhanced multi-flow pre-training and fine-tuning framework for natural language generation\",\n        \"Neural question generation from text: A preliminary study\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Leaf: Multiple-Choice Question Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}