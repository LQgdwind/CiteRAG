{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fair and Efficient Gossip in Hyperledger Fabric This paper was accepted for publication in the IEEE ICDCS 2020 conference (https://icdcs2020.sg); The copyright is with the IEEE.\n\nPaper Abstract: Abstract Permissioned blockchains are supported by identified but individually untrustworthy nodes, collectively maintaining a replicated ledger whose content is trusted. The Hyperledger Fabric permissioned blockchain system targets high-throughput transaction processing. Fabric uses a set of nodes tasked with the ordering of transactions using consensus. Additional peers endorse and validate transactions, and maintain a copy of the ledger. The ability to quickly disseminate new transaction blocks from ordering nodes to all peers is critical for both performance and consistency. Broadcast is handled by a gossip protocol, using randomized exchanges of blocks between peers. We show that the current implementation of gossip in Fabric leads to heavy tail distributions of block propagation latencies, impacting performance, consistency, and fairness. We contribute a novel design for gossip in Fabric that simultaneously optimizes propagation time, tail latency and bandwidth consumption. Using a 100-node cluster, we show that our enhanced gossip allows the dissemination of blocks to all peers more than 10 times faster than with the original implementation, while decreasing the overall network bandwidth consumption by more than 40%. With a high throughput and concurrent application, this results in 17% to 36% fewer invalidated transactions for different block sizes.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hyperledger Fabric modeling of high-throughput network.\",\n        \"Hyperledger Fabric: A distributed operating system for permissioned blockchains.\",\n        \"Performance characterization of Hyperledger Fabric.\",\n        \"Scalable communication middleware for permissioned distributed ledgers.\",\n        \"On the spread of viruses on the internet.\",\n        \"Eventual consistency: How soon is eventual? An evaluation of Amazon S3‚Äôs consistency behavior.\",\n        \"State machine replication for the masses with BFT-SMART.\",\n        \"Randomized gossip algorithms.\",\n        \"Blockchain and trusted computing: Problems, pitfalls, and a solution for Hyperledger Fabric.\",\n        \"Tendermint: Byzantine fault tolerance in the age of blockchains.\",\n        \"Practical byzantine fault tolerance and proactive recovery.\",\n        \"On the lambert WùëäW function.\",\n        \"Epidemic algorithms for replicated database maintenance.\",\n        \"Gossip algorithms for distributed signal processing.\",\n        \"Untangling blockchain: A data processing view of blockchain systems.\",\n        \"The Sybil attack.\",\n        \"Epidemic information dissemination in distributed systems.\",\n        \"Blockchain technology: Transforming libertarian cryptocurrency dreams to finance and banking realities.\",\n        \"Pulp: An adaptive gossip-based dissemination protocol for multi-source message streams.\",\n        \"The supply chain has no clothes: Technology adoption of blockchain for supply chain transparency.\",\n        \"Building LinkedIn‚Äôs real-time activity data pipeline.\",\n        \"Evaluating blockchains for IoT.\",\n        \"Corda: A distributed ledger.\",\n        \"KEVM: A complete formal semantics of the Ethereum virtual machine.\",\n        \"Zookeeper: Wait-free coordination for internet-scale systems.\",\n        \"Streamchain: Do blockchains need blocks?\",\n        \"Optimizing validation phase of hyperledger fabric.\",\n        \"Gossip-based peer sampling.\",\n        \"Randomized rumor spreading.\",\n        \"Simple gossiping with balls and bins.\",\n        \"Zyzzyva: Speculative byzantine fault tolerance.\",\n        \"Blockchain-enabled e-voting.\",\n        \"Blockchain distributed ledger technologies for biomedical and health care applications.\",\n        \"Performance improvement of ordering and endorsement phase in hyperledger fabric.\",\n        \"FairLedger: A fair blockchain protocol for financial institutions.\",\n        \"Endorsement in Hyperledger Fabric via service discovery.\",\n        \"EpTO: An epidemic total order algorithm for large-scale distributed systems.\",\n        \"Bitcoin: A Peer-to-peer Electronic Cash System.\",\n        \"Sawtooth: An introduction.\",\n        \"Performance analysis of private blockchain platforms in varying workloads.\",\n        \"Zerocash: Decentralized anonymous payments from bitcoin.\",\n        \"The Ripple protocol consensus algorithm.\",\n        \"Conflict-free replicated data types.\",\n        \"A byzantine fault-tolerant ordering service for the Hyperledger Fabric blockchain platform.\",\n        \"Performance modeling of Hyperledger Fabric (permissioned blockchain network).\",\n        \"Performance benchmarking and optimizing Hyperledger Fabric blockchain platform.\",\n        \"Ethereum: A secure decentralised generalised transaction ledger EIP-150 revision, 2017.\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Fair and Efficient Gossip in Hyperledger Fabric This paper was accepted for publication in the IEEE ICDCS 2020 conference (https://icdcs2020.sg); The copyright is with the IEEE., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}