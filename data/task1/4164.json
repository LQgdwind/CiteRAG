{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Satisfiability and Containment of Recursive SHACL\n\nPaper Abstract: Abstract The Shapes Constraint Language (SHACL) is the recent W3C recommendation language for validating RDF data, by verifying certain shapes on graphs. Previous work has largely focused on the validation problem, while the standard decision problems of satisfiability and containment, crucial for design and optimisation purposes, have only been investigated for simplified versions of SHACL. Moreover, the SHACL specification does not define the semantics of recursively-defined constraints, which led to several alternative recursive semantics being proposed in the literature. The interaction between these different semantics and important decision problems has not been investigated yet. In this article we provide a comprehensive study of the different features of SHACL, by providing a translation to a new first-order language, called SCL, that precisely captures the semantics of SHACL. We also present MSCL, a second-order extension of SCL, which allows us to define, in a single formal logic framework, the main recursive semantics of SHACL. Within this language we also provide an effective treatment of filter constraints which are often neglected in the related literature. Using this logic we provide a detailed map of (un)decidability and complexity results for the satisfiability and containment decision problems for different SHACL fragments. Notably, we prove that both problems are undecidable for the full language, but we present decidable combinations of interesting features, even in the face of recursion.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Foundations of Databases\",\n        \"Satisfiability in Strategy Logic Can Be Easier than Model Checking.\",\n        \"Query Answering with Transitive and Linear-Ordered Data.\",\n        \"Stable Model Semantics for Recursive SHACL.\",\n        \"The Description Logic Handbook: Theory, Implementation, and Applications\",\n        \"The Undecidability of the Domino Problem\",\n        \"Federating queries in sparql 1.1: Syntax, semantics and evaluation.\",\n        \"RDF 1.1 Turtle.\",\n        \"Unary Negation.\",\n        \"Semantics and Validation of Recursive SHACL.\",\n        \"RDF 1.1 Concepts and Abstract Syntax.\",\n        \"Finite Satisfiability of Unary Negation Fragment with Transitivity.\",\n        \"Semantic data caching and replacement\",\n        \"ExpTime Tableaux for ùíú‚ÑíùíûfragmentsALC\\\\mathcal{ALC}.\",\n        \"Finite Model Theory.\",\n        \"On the Computational Cost of Disjunctive Logic Programming: Propositional Case.\",\n        \"The Well-Founded Semantics for General Logic Programs.\",\n        \"The Stable Model Semantics For Logic Programming.\",\n        \"On The Restraining Power of Guards.\",\n        \"On the Decision Problem for Two-Variable First-Order Logic.\",\n        \"Two-Variable Logic with Counting is Decidable.\",\n        \"Constraint checking with partial information\",\n        \"Decidability of SHIQ with Complex Role Inclusion Axioms.\",\n        \"Querying the Unary Negation Fragment with Regular Path Expressions.\",\n        \"Shapes constraint language (SHACL).\",\n        \"Scalable query rewriting: a graph-based approach\",\n        \"A Description Logic Primer.\",\n        \"Deciding SHACL Shape Containment through Description Logics Reasoning\",\n        \"Type checking program code using shacl\",\n        \"Data integration: A theoretical perspective\",\n        \"Queries independent of updates\",\n        \"Elements of Finite Model Theory.\",\n        \"An Improved NExpTime-Hardness Result for Description Logic ùíú‚ÑíùíûfragmentsALC\\\\mathcal{ALC} Extended with Inverse Roles, Nominals, and Counting.\",\n        \"The Relationship Between Stable, Supported, Default and Autoepistemic Semantics for General Logic Programs.\",\n        \"Non-Monotonic Logic II: Nonmonotonic Modal Theories.\",\n        \"Foundations of Deductive Databases and Logic Programming.\",\n        \"On Languages with Two Variables.\",\n        \"A Review of SHACL: From Data Validation to Schema Reasoning for RDF Graphs\",\n        \"Shacl satisfiability and containment\",\n        \"Shacl constraints with inference rules\",\n        \"Complexity of the Two-Variable Fragment with Counting Quantifiers.\",\n        \"The Two-Variable Fragment with Counting Revisited.\",\n        \"On the Declarative and Procedural Semantics of Logic Programs.\",\n        \"Undecidability and Nonperiodicity for Tilings of the Plane.\",\n        \"Inferring Negative Information from Disjunctive Databases.\",\n        \"Cheap Boolean Role Constructors for Description Logics.\",\n        \"Possible Model Semantics for Disjunctive Databases.\",\n        \"Brave Induction: A Logical Framework for Learning from Incomplete Information.\",\n        \"From 3-valued Semantics to Supported Model Computation for Logic Programs in Vector Spaces.\",\n        \"The Hybrid Œºùúá\\\\mu-Calculus.\",\n        \"A Correspondence Theory for Terminological Logics: Preliminary Report.\",\n        \"Subsumption in KL-ONE is Undecidable.\",\n        \"The Complexity of Reasoning with Cardinality Restrictions and Nominals in Expressive Description Logics.\",\n        \"Impossibility of an Algorithm for the Decision Problem in Finite Classes.\",\n        \"OWL 2 Web Ontology Language Document Overview (Second Edition).\",\n        \"Proving Theorems by Pattern Recognition II.\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Satisfiability and Containment of Recursive SHACL, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}