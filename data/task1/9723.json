{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Unlocking Hardware Security Assurance: The Potential of LLMs\n\nPaper Abstract: Abstract System-on-Chips (SoCs) form the crux of modern computing systems. SoCs enable high-level integration through the utilization of multiple Intellectual Property (IP) cores. However, the integration of multiple IP cores also presents unique challenges owing to their inherent vulnerabilities, thereby compromising the security of the entire system. Hence, it is imperative to perform hardware security validation to address these concerns. The efficiency of this validation procedure is contingent on the quality of the SoC security properties provided. However, generating security properties with traditional approaches often requires expert intervention and is limited to a few IPs, thereby resulting in a time-consuming and non-robust process. To address this issue, we, for the first time, propose a novel and automated Natural Language Processing (NLP)-based Security Property Generator (NSPG). Specifically, our approach utilizes hardware documentation in order to propose the first hardware security-specific language model, HS-BERT, for extracting security properties dedicated to hardware design. To evaluate our proposed technique, we trained the HS-BERT model using sentences from RISC-V, OpenRISC, MIPS, OpenSPARC, and OpenTitan SoC documentation. When assessed on five untrained OpenTitan hardware IP documents, NSPG was able to extract 326 security properties from 1723 sentences. This, in turn, aided in identifying eight security bugs in the OpenTitan SoC design presented in the hardware hacking competition, Hack@DAC 2022.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Cwe - cwe-1194: Hardware design (4.0)\",\n        \"Github - shal/cppdoc: Powerful documentation generation tool for c++\",\n        \"Hack@dac22 – hack@event hw ctf\",\n        \"Introducing chatgpt\",\n        \"Javadoc tool home page\",\n        \"NVD - CVSS v3 calculator\",\n        \"Opentitan — opentitan documentation\",\n        \"Questa Secure Check - Exhaustive Verification of Secure Paths — Siemens Software\",\n        \"Risc-v instruction set specifications — riscv-isa-pages documentation\",\n        \"Tortuga Logic — Synopsys\",\n        \"Directed test generation using concolic testing on rtl models\",\n        \"Construction of the literature graph in semantic scholar\",\n        \"Register transfer level information flow tracking for provably secure hardware design\",\n        \"Verisketch: Synthesizing secure hardware designs with timing-sensitive information flow properties\",\n        \"Scibert: A pretrained language model for scientific text\",\n        \"Validating the intel pentium 4 microprocessor\",\n        \"Data secrecy protection through information flow tracking in proof-carrying hardware ip—part ii: Framework automation\",\n        \"Vericoq: A verilog-to-coq converter for proof-carrying hardware automation\",\n        \"Evaluating security requirements in a general-purpose processor by combining assertion checkers with code coverage\",\n        \"Jaspergold formal verification platform (apps)\",\n        \"{{{HardFails}}}: Insights into {{{Software-Exploitable}}} hardware bugs\",\n        \"Isadora: Automated information flow property generation for hardware designs\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Soc security verification using property checking\",\n        \"Systematic literature review of preprocessing techniques for imbalanced data\",\n        \"A survey of data augmentation approaches for nlp\",\n        \"Overview of the transformer-based models for nlp tasks\",\n        \"A set of measures designed to identify overlapped instances in software defect prediction\",\n        \"Generating formal hardware verification properties from natural language documentation\",\n        \"Specs: A lightweight runtime mechanism for protecting software from security-critical processor bugs\",\n        \"Property specific information flow analysis for hardware security verification\",\n        \"A novel machine learning data preprocessing method for enhancing classification algorithms performance\",\n        \"Data secrecy protection through information flow tracking in proof-carrying hardware ip—part i: Framework fundamentals\",\n        \"Cost-sensitive decision tree ensembles for effective imbalanced classification\",\n        \"Biobert: a pre-trained biomedical language representation model for biomedical text mining\",\n        \"Proof-carrying hardware intellectual property: A pathway to trusted module acquisition\",\n        \"Automated test generation for activation of assertions in rtl models\",\n        \"Towards formal specification of abstract security properties\",\n        \"Rtl-contest: Concolic testing on rtl for detecting security vulnerabilities\",\n        \"Wordnet: a lexical database for english\",\n        \"Intelligent selection of language model training data\",\n        \"Theoretical analysis of gate level information flow tracking\",\n        \"A formal model for proving hardware timing properties and identifying timing channels\",\n        \"Chatgpt: Optimizing language models for dialogue\",\n        \"Neural machine translation of rare words with subword units\",\n        \"Dealing with data difficulty factors while learning from imbalanced data\",\n        \"Secure program execution via dynamic information flow tracking\",\n        \"Complete information flow tracking from the gates up\",\n        \"Google’s neural machine translation system: Bridging the gap between human and machine translation\",\n        \"End-to-end automated exploit generation for validating the security of processor designs\",\n        \"Identifying security critical properties for the dynamic verification of a processor\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Unlocking Hardware Security Assurance: The Potential of LLMs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}