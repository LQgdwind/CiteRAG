{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 62 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fourier Analysis Meets Runtime Analysis: Precise Runtimes on Plateaus\n\nPaper Abstract: Abstract We propose a new method based on discrete Fourier analysis to analyze the time evolutionary algorithms spend on plateaus. This immediately gives a concise proof of the classic estimate of the expected runtime of the (1+1)11(1+1) evolutionary algorithm on the Needle problem due to Garnier, Kallel, and Schoenauer (1999). We also use this method to analyze the runtime of the (1+1)11(1+1) evolutionary algorithm on a benchmark consisting of n/‚Ñìùëõ‚Ñìn/\\ell plateaus of effective size 2‚Ñì‚àí1superscript2‚Ñì12^{\\ell}-1 which have to be optimized sequentially in a LeadingOnes fashion. Using our new method, we determine the precise expected runtime both for static and fitness-dependent mutation rates. We also determine the asymptotically optimal static and fitness-dependent mutation rates. For ‚Ñì=o‚Äã(n)‚Ñìùëúùëõ\\ell=o(n), the optimal static mutation rate is approximately 1.59/n1.59ùëõ1.59/n. The optimal fitness dependent mutation rate, when the first kùëòk fitness-relevant bits have been found, is asymptotically 1/(k+1)1ùëò11/(k+1). These results, so far only proven for the single-instance problem LeadingOnes, thus hold for a much broader class of problems. We expect similar extensions to be true for other important results on LeadingOnes. We are also optimistic that our Fourier analysis approach can be applied to other plateau problems as well.\n\n{retrieved_text}\n\nGenerate exactly 62 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 62\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Theory of Randomized Search Heuristics\",\n        \"Precise runtime analysis for plateau functions\",\n        \"Generalized jump functions\",\n        \"Optimal fixed and adaptive mutation rates for the LeadingOnes problem\",\n        \"Do additional objectives make a problem harder?\",\n        \"Fitness probability distribution of bit-flip mutation\",\n        \"Self-adjusting mutation rates with provably optimal success rules\",\n        \"Adaptive drift analysis\",\n        \"Crossover can provably be useful in evolutionary computation\",\n        \"On the analysis of the (1+1) evolutionary algorithm\",\n        \"Multiplicative drift analysis\",\n        \"Royal road functions and the (1 + ŒªùúÜ\\\\lambda) evolutionary algorithm: Almost no speed-up from larger offspring populations\",\n        \"Significance-based estimation-of-distribution algorithms\",\n        \"Lower bounds from fitness levels made easy\",\n        \"Multiplicative up-drift\",\n        \"Fast genetic algorithms\",\n        \"On the runtime analysis of selection hyper-heuristics with adaptive learning periods\",\n        \"Theory of Evolutionary Computation‚ÄîRecent Developments in Discrete Optimization\",\n        \"Probabilistic tools for the analysis of randomized optimization heuristics\",\n        \"Exponential upper bounds for the runtime of randomized search heuristics\",\n        \"The runtime of the compact genetic algorithm on Jump functions\",\n        \"Analysis of the (1+1) EA for a dynamically changing OneMax-variant\",\n        \"When do evolutionary algorithms optimize separable functions in parallel?\",\n        \"Simple on-the-fly parameter selection mechanisms for two classical discrete black-box optimization benchmark problems\",\n        \"Benchmarking discrete optimization heuristics with iohprofiler\",\n        \"Theoretical analyses of multi-objective evolutionary algorithms on multi-modal objectives\",\n        \"On non-elitist evolutionary algorithms optimizing fitness functions with a plateau\",\n        \"Modeling selex for regulatory regions using royal road and royal staircase fitness functions\",\n        \"Comparison of simple diversity mechanisms on plateau functions\",\n        \"Plateaus can be harder in multi-objective optimization\",\n        \"Fourier analysis on finite abelian groups\",\n        \"Rigorous hitting times for binary mutations\",\n        \"Evolutionary algorithms and the maximum matching problem\",\n        \"Drift analysis and average time complexity of evolutionary algorithms\",\n        \"Analyzing Evolutionary Algorithms ‚Äì The Computer Science Perspective\",\n        \"On the black-box complexity of example functions: the real jump function\",\n        \"Evolutionary algorithms - how to cope with plateaus of constant fitness and when to reject strings of the same fitness\",\n        \"On the limitations of the univariate marginal distribution algorithm to deception and where bivariate EDAs might help\",\n        \"On the runtime analysis of generalised selection hyper-heuristics for pseudo-Boolean optimisation\",\n        \"Simple hyper-heuristics control the neighbourhood size of randomised local search optimally for LeadingOnes\",\n        \"General upper bounds on the runtime of parallel evolutionary algorithms\",\n        \"Tail bounds on hitting times of randomized search heuristics using variable drift analysis\",\n        \"The royal road for genetic algorithms: fitness landscapes and GA performance\",\n        \"Equation of state calculations by fast computing machines\",\n        \"How genetic algorithms really work: mutation and hillclimbing\",\n        \"Expected runtimes of evolutionary algorithms for the Eulerian cycle problem\",\n        \"Randomized local search, evolutionary algorithms, and the minimum spanning tree problem\",\n        \"Bioinspired Computation in Combinatorial Optimization ‚Äì Algorithms and Their Computational Complexity\",\n        \"Simplified drift analysis for proving lower bounds in evolutionary computation\",\n        \"Convergence Properties of Evolutionary Algorithms\",\n        \"Structural search spaces and genetic operators\",\n        \"Fitness function distributions over generalized search neighborhoods in the q-ary hypercube\",\n        \"The analysis of evolutionary algorithms on sorting and shortest paths problems\",\n        \"A new method for lower bounds on the running time of evolutionary algorithms\",\n        \"Optimizing epochal evolutionary search: population-size dependent theory\",\n        \"The simple genetic algorithm and the walsh transform: Part i, theory\",\n        \"Theoretical aspects of evolutionary algorithms\",\n        \"Fitness levels with tail bounds for the analysis of randomized search heuristics\",\n        \"How majority-vote crossover and estimation-of-distribution algorithms cope with fitness valleys\",\n        \"On the optimization of monotone polynomials by simple randomized search heuristics\",\n        \"Choosing the right algorithm with hints from complexity theory\",\n        \"Formulas for hitting times and cover times for random walks on groups\"\n    ],\n    \"reasoning\": \"Selected these 62 references because they represent foundational work and recent advances in Fourier Analysis Meets Runtime Analysis: Precise Runtimes on Plateaus, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}