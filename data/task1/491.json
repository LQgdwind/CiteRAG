{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: BugDoc: Algorithms to Debug Computational Processes\n\nPaper Abstract: Abstract. Data analysis for scientific experiments and enterprises, large-scale simulations, and machine learning tasks all entail the use of complex computational pipelines to reach quantitative and qualitative conclusions. If some of the activities in a pipeline produce erroneous outputs, the pipeline may fail to execute or produce incorrect results. Inferring the root cause(s) of such failures is challenging, usually requiring time and much human thought, while still being error-prone. We propose a new approach that makes use of iteration and provenance to automatically infer the root causes and derive succinct explanations of failures. Through a detailed experimental evaluation, we assess the cost, precision, and recall of our approach compared to the state of the art. Our experimental data and processing software is available for use, reproducibility, and enhancement.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Lineage-driven Fault Injection\",\n        \"X-Ray: Automating Root-Cause Diagnosis of Performance Anomalies in Production Software\",\n        \"Automating Configuration Troubleshooting with ConfAid\",\n        \"MacroBase: Prioritizing Attention in Fast Data\",\n        \"Intelligent Failure Prediction Models for Scientific Workflows\",\n        \"Algorithms for Hyper-Parameter Optimization\",\n        \"Random Search for Hyper-parameter Optimization\",\n        \"Making a Science of Model Search: Hyperparameter Optimization in Hundreds of Dimensions for Vision Architectures\",\n        \"Efficient Denial Constraint Discovery with Hydra\",\n        \"Large Scale GAN Training for High Fidelity Natural Image Synthesis\",\n        \"Mode Regularized Generative Adversarial Networks\",\n        \"Data Provenance at Internet Scale: Architecture , Experiences, and the Road Ahead\",\n        \"Pinpoint: Problem Determination in Large, Dynamic Internet Services\",\n        \"Data Polygamy: The Many-Many Relationships Among Urban Spatio-Temporal Data Sets\",\n        \"Discovering Denial Constraints\",\n        \"BOAT: Building Auto-Tuners with Structured Bayesian Optimization\",\n        \"Bayesian Optimization with Resource Constraints and Production\",\n        \"Interpretable and Informative Explanations of Outcomes\",\n        \"Whole test suite generation\",\n        \"The Architecture of Open Source Applications - Chapter 23. VisTrails\",\n        \"Fairness Testing: Testing Software for Discrimination\",\n        \"Automated whitebox fuzz testing\",\n        \"Generative Adversarial Networks\",\n        \"A Demonstration of Interactive Analysis of Performance Measurements with Viska\",\n        \"BigSift: Automated Debugging of Big Data Analytics in Data-Intensive Scalable Computing\",\n        \"GANs Trained by a Two Time-Scale Update Rule Converge to a Local Nash Equilibrium\",\n        \"Fuzzing with code fragments\",\n        \"Programing implementation of the Quine-McCluskey method for minimization of Boolean expression\",\n        \"Sequential Model-Based Optimization for General Algorithm Configuration\",\n        \"Causal Testing: Finding Defectsâ€™ Root Causes\",\n        \"In-Datacenter Performance Analysis of a Tensor Processing Unit\",\n        \"Learning multiple layers of features from tiny images\",\n        \"SAFFRON: A Fast, Efficient, and Robust Framework for Group Testing based on Sparse-Graph Codes\",\n        \"Counterfactuals\",\n        \"Scalable Statistical Bug Isolation\",\n        \"Debugging Machine Learning Pipelines\",\n        \"Are GANs Created Equal? A Large-Scale Study\",\n        \"A Group Testing Method for Finding Patterns in Data\",\n        \"Causality and Explanations in Databases\",\n        \"Causality: Models, Reasoning and Inference (2nd ed.)\",\n        \"Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks\",\n        \"Practical Bayesian Optimization of Machine Learning Algorithms\",\n        \"Scalable Bayesian Optimization Using Deep Neural Networks\",\n        \"TPC-C benchmark\",\n        \"Automatic Database Management System Tuning Through Large-scale Machine Learning\",\n        \"Data X-Ray: A Diagnostic Tool for Data Errors\",\n        \"QFix: Diagnosing Errors Through Query Histories\",\n        \"DBSherlock: A Performance Diagnostic Tool for Transactional Databases\",\n        \"Self-Attention Generative Adversarial Networks\",\n        \"StackGAN: Text to Photo-Realistic Image Synthesis with Stacked Generative Adversarial Networks\",\n        \"Statistical Debugging: Simultaneous Identification of Multiple Bugs\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in BugDoc: Algorithms to Debug Computational Processes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}