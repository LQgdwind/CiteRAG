{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Lottery Ticket Finding: Less Data is More\n\nPaper Abstract: Abstract The lottery ticket hypothesis (LTH) (Frankle & Carbin, 2018) reveals the existence of winning tickets (sparse but critical subnetworks) for dense networks, that can be trained in isolation from random initialization to match the latter’s accuracies. However, finding winning tickets requires burdensome computations in the train-prune-retrain process, especially on large-scale datasets (e.g., ImageNet), restricting their practical benefits. This paper explores a new perspective on finding lottery tickets more efficiently, by doing so only with a specially selected subset of data, called Pruning-Aware Critical set (PrAC set), rather than using the full training set. The concept of PrAC set was inspired by the recent observation, that deep networks have samples that are either hard to memorize during training, or easy to forget during pruning. A PrAC set is thus hypothesized to capture those most challenging and informative examples for the dense model. We observe that a high-quality winning ticket can be found with training and pruning the dense network on the very compact PrAC set, which can substantially save training iterations for the ticket finding process. Extensive experiments validate our proposal across diverse datasets and network architectures. Specifically, on CIFAR-10, CIFAR-100, and Tiny ImageNet, we locate effective PrAC sets at 35.32%∼78.19%similar-topercent35.32percent78.1935.32\\%\\sim 78.19\\% of their training set sizes. On top of them, we can obtain the same competitive winning tickets for the corresponding dense networks, yet saving up to 82.85%∼92.77%similar-topercent82.85percent92.7782.85\\%\\sim 92.77\\%, 63.54%∼74.92%similar-topercent63.54percent74.9263.54\\%\\sim 74.92\\%, and 76.14%∼86.56%similar-topercent76.14percent86.5676.14\\%\\sim 86.56\\% training iterations, respectively. Crucially, we show that a PrAC set found is reusable across different network architectures, which can amortize the extra cost of finding PrAC sets, yielding a practical regime for efficient lottery ticket finding.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Practical coreset constructions for machine learning\",\n        \"The lottery tickets hypothesis for supervised and self-supervised pre-training in computer vision models\",\n        \"The lottery ticket hypothesis for pre-trained bert networks\",\n        \"Ultra-data-efficient gan training: Drawing a lottery ticket first, then training it toughly\",\n        \"A unified lottery ticket hypothesis for graph neural networks\",\n        \"Gans can play lottery tickets too\",\n        \"Selection via proxy: Efficient data selection for deep learning\",\n        \"Evaluating lottery tickets under distributional shifts\",\n        \"The difficulty of training sparse neural networks\",\n        \"Rigging the lottery: Making all tickets winners\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Linear mode connectivity and the lottery ticket hypothesis\",\n        \"Stabilizing the lottery ticket hypothesis\",\n        \"Pruning neural networks at initialization: Why are we missing the mark?\",\n        \"The state of sparsity in deep neural networks\",\n        \"Playing lottery tickets with vision and language\",\n        \"Sigua: Forgetting may make learning with noisy labels more robust\",\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Smaller coresets for k-median and k-means clustering\",\n        \"Deep residual learning for image recognition\",\n        \"What do compressed deep neural networks forget?\",\n        \"Characterising bias in compressed models\",\n        \"Winning lottery tickets in deep generative models\",\n        \"Not all samples are created equal: Deep learning with importance sampling\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Snip: Single-shot network pruning based on connection sensitivity\",\n        \"A sequential algorithm for training text classifiers\",\n        \"Good students play big lottery better\",\n        \"Sparse transfer learning via winning lottery tickets\",\n        \"Coresets for data-efficient training of machine learning models\",\n        \"Scalable training of artificial neural networks with adaptive sparse connectivity inspired by network science\",\n        \"One ticket to win them all: generalizing lottery ticket initializations across datasets and optimizers\",\n        \"Parameter efficient training of deep convolutional neural networks by dynamic sparse reparameterization\",\n        \"Comparing rewinding and fine-tuning in neural network pruning\",\n        \"Active learning for convolutional neural networks: A core-set approach\",\n        \"Active learning literature survey\",\n        \"Active learning\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Pruning neural networks without any data by iteratively conserving synaptic flow\",\n        \"Scop: Scientific control for reliable neural network pruning\",\n        \"An empirical study of example forgetting during deep neural network learning\",\n        \"Core vector machines: Fast svm training on very large data sets\",\n        \"Deep learning for computer vision: A brief review\",\n        \"Picking winning tickets before training by preserving gradient flow\",\n        \"Dataset distillation\",\n        \"Tiny imagenet challenge\",\n        \"Robust early-learning: Hindering the memorization of noisy labels\",\n        \"Searching to exploit memorization effect in learning with noisy labels\",\n        \"Drawing early-bird tickets: Toward more efficient training of deep networks\",\n        \"Playing the lottery with rewards and multiple languages: lottery tickets in rl and nlp\",\n        \"Stochastic optimization with importance sampling for regularized loss minimization\",\n        \"Deconstructing lottery tickets: Zeros, signs, and the supermask\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Efficient Lottery Ticket Finding: Less Data is More, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}