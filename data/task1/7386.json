{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Deep Reinforcement Learning Guided Improvement Heuristic for Job Shop Scheduling\n\nPaper Abstract: Abstract Recent studies in using deep reinforcement learning (DRL) to solve Job-shop scheduling problems (JSSP) focus on construction heuristics. However, their performance is still far from optimality, mainly because the underlying graph representation scheme is unsuitable for modelling partial solutions at each construction step. This paper proposes a novel DRL-guided improvement heuristic for solving JSSP, where graph representation is employed to encode complete solutions. We design a Graph-Neural-Network-based representation scheme, consisting of two modules to effectively capture the information of dynamic topology and different types of nodes in graphs encountered during the improvement process. To speed up solution evaluation during improvement, we present a novel message-passing mechanism that can evaluate multiple solutions simultaneously. We prove that the computational complexity of our method scales linearly with problem size. Experiments on classic benchmarks show that the improvement policy learned by our method outperforms state-of-the-art DRL-based methods by a large margin.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The shifting bottleneck procedure for job shop scheduling\",\n        \"A computational study of the job-shop scheduling problem\",\n        \"Machine sequencing via disjunctive graphs: an implicit enumeration algorithm\",\n        \"Machine learning for combinatorial optimization: a methodological tour dâ€™horizon\",\n        \"Learning to perform local rewriting for combinatorial optimization\",\n        \"Simulation-guided beam search for neural combinatorial optimization\",\n        \"A parallel memetic algorithm with explicit management of diversity for the job shop scheduling problem\",\n        \"Industrial size job shop scheduling tackled by present day cp solvers\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Probabilistic learning combinations of local job-shop scheduling rules\",\n        \"First vs. best improvement: An empirical study\",\n        \"Efficient active search for combinatorial optimization problems\",\n        \"Learning to generalize dispatching rules on the job shop scheduling\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Graphs, networks and algorithms\",\n        \"Attention, learn to solve routing problems!\",\n        \"Pomo: Policy optimization with multiple optima for reinforcement learning\",\n        \"Matrix encoding networks for neural combinatorial optimization\",\n        \"Resouce constrained project scheduling: An experimental investigation of heuristic scheduling techniques (supplement)\",\n        \"Iterated local search: Framework and applications\",\n        \"A learning-based iterative method for solving vehicle routing problems\",\n        \"Learning to search feasible and infeasible regions of routing problems with flexible neural k-opt\",\n        \"Overcoming exploration in reinforcement learning with demonstrations\",\n        \"A multi-graph attributed reinforcement learning based optimization algorithm for large-scale hybrid flow shop scheduling problem\",\n        \"A fast taboo search algorithm for the job shop problem\",\n        \"An advanced tabu search algorithm for the job shop problem\",\n        \"Schedulenet: Learn to solve multi-agent scheduling problems with reinforcement learning\",\n        \"Learning to schedule job-shop problems: representation and policy learning using graph neural network and reinforcement learning\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Or-tools\",\n        \"Learning by playing solving sparse reward tasks from scratch\",\n        \"A comparison of priority rules for the job shop scheduling problem under different flow time-and tardiness-related objective functions\",\n        \"New search spaces for sequencing problems with application to job shop scheduling\",\n        \"Benchmarks for basic scheduling problems\",\n        \"A reinforcement learning environment for job-shop scheduling\",\n        \"An end-to-end reinforcement learning approach for job-shop scheduling problems based on constraint programming\",\n        \"Semiconductor fab scheduling with self-supervised and reinforcement learning\",\n        \"Attention is all you need\",\n        \"Graph Attention Networks\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Learning improvement heuristics for solving routing problem\",\n        \"Multi-decoder attention model with embedding glimpse for solving vehicle routing problems\",\n        \"Neurolkh: Combining deep learning model with lin-kernighan-helsgaun heuristic for solving the traveling salesman problem\",\n        \"How powerful are graph neural networks?\",\n        \"A genetic algorithm applicable to large-scale job-shop problems\",\n        \"A tabu search algorithm with a new neighborhood structure for the job shop scheduling problem\",\n        \"Learning to dispatch for job shop scheduling via deep reinforcement learning\",\n        \"Towards omni-generalizable neural methods for vehicle routing problems\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Deep Reinforcement Learning Guided Improvement Heuristic for Job Shop Scheduling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}