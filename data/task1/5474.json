{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Dynamic Clustering: Capturing Patterns from Historical Cluster Evolution\n\nPaper Abstract: Abstract. Clustering aims to group unlabeled objects based on similarity inherent among them into clusters. It is important for many tasks such as anomaly detection, database sharding, record linkage, and others. Some clustering methods are taken as batch algorithms that incur a high overhead as they cluster all the objects in the database from scratch or assume an incremental workload. In practice, database objects are updated, added, and removed from databases continuously which makes previous results stale. Running batch algorithms is infeasible in such scenarios as it would incur a significant overhead if performed continuously. This is particularly the case for high-velocity scenarios such as ones in Internet of Things applications. In this paper, we tackle the problem of clustering in high-velocity dynamic scenarios, where the objects are continuously updated, inserted, and deleted. Specifically, we propose a generally dynamic approach to clustering that utilizes previous clustering results. Our system, DynamicC, uses a machine learning model that is augmented with an existing batch algorithm. The DynamicC model trains by observing the clustering decisions made by the batch algorithm. After training, the DynamicC model is used in cooperation with the batch algorithm to achieve both accurate and fast clustering decisions. The experimental results on four real-world and one synthetic datasets show that our approach has a better performance compared to the state-of-the-art method while achieving similarly accurate clustering results to the baseline batch algorithm.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Anylog: a grand unification of the internet of things\",\n        \"Evaluation of clusteringsâ€“metrics and visual support\",\n        \"Blockchain in IoT systems: End-to-end delay evaluation\",\n        \"A comparison of extrinsic clustering evaluation metrics based on formal constraints\",\n        \"OPTICS: Ordering points to identify the clustering structure\",\n        \"Rethinking blockchain integration with the industrial Internet of Things\",\n        \"Prioritized Restreaming Algorithms for Balanced Graph Partitioning\",\n        \"Macrobase: Prioritizing attention in fast data\",\n        \"Correlation clustering\",\n        \"A novel algorithm for dynamic clustering: properties and performance\",\n        \"A survey of clustering data mining techniques\",\n        \"Schism: a workload-driven approach to database replication and partitioning\",\n        \"A cluster separation measure\",\n        \"Incremental Clustering for Mining in a Data Warehousing Environment\",\n        \"A density-based algorithm for discovering clusters in large spatial databases with noise.\",\n        \"Dynamic density based clustering\",\n        \"Croesus: Multi-Stage Processing and Transactions for Video-Analytics in Edge-Cloud Systems\",\n        \"Collaborative edge-cloud and edge-edge video analytics\",\n        \"A collaborative filtering recommendation algorithm based on user clustering and item clustering\",\n        \"Incremental record linkage\",\n        \"Improving the Quality of Web-Based Data Imputation With Crowd Intervention\",\n        \"Record linkage with uniqueness constraints and erroneous values\",\n        \"Hierarchical clustering schemes\",\n        \"Predict and Write: Using K-Means Clustering to Extend the Lifetime of NVM Storage\",\n        \"Extending the lifetime of NVM: challenges and opportunities\",\n        \"Partitioning around medoids (program pam)\",\n        \"Least squares quantization in PCM\",\n        \"Some methods for classification and analysis of multivariate observations\",\n        \"CooLSM: Distributed and Cooperative Indexing Across Edge and Cloud Machines\",\n        \"Wedgechain: A trusted edge-cloud store with asynchronous (lazy) trust\",\n        \"Blockplane: A global-scale byzantizing middleware\",\n        \"Holistic entity clustering for linked data\",\n        \"Incremental clustering on linked data\",\n        \"Using of Jaccard coefficient for keywords similarity\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Accelerating exact k-means algorithms with geometric reasoning\",\n        \"A survey of clustering techniques\",\n        \"Clustering by fast search and find of density peaks\",\n        \"Artificial intelligence: a modern approach\",\n        \"Dynamic clustering of time series data\",\n        \"STING: A statistical information grid approach to spatial data mining\",\n        \"Incremental entity resolution on rules and data\",\n        \"A normalized Levenshtein distance metric\",\n        \"Criterion functions for document clustering: Experiments and analysis\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Efficient Dynamic Clustering: Capturing Patterns from Historical Cluster Evolution, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}