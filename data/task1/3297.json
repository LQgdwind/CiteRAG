{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 3U-EdgeAI: Ultra-Low Memory Training, Ultra-Low Bitwidth Quantization, and Ultra-Low Latency Acceleration\n\nPaper Abstract: Abstract. The deep neural network (DNN) based AI applications on the edge require both low-cost computing platforms and high-quality services. However, the limited memory, computing resources, and power budget of the edge devices constrain the effectiveness of the DNN algorithms. Developing edge-oriented AI algorithms and implementations (e.g., accelerators) is challenging. In this paper, we summarize our recent efforts for efficient on-device AI development from three aspects, including both training and inference. First, we present on-device training with ultra-low memory usage. We propose a novel rank-adaptive tensor-based tensorized neural network model, which offers orders-of-magnitude memory reduction during training. Second, we introduce an ultra-low bitwidth quantization method for DNN model compression, achieving the state-of-the-art accuracy under the same compression ratio. Third, we introduce an ultra-low latency DNN accelerator design, practicing the software/hardware co-design methodology. This paper emphasizes the importance and efficacy of training, quantization and accelerator design, and calls for more research breakthroughs in the area for AI on the edge.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Ternary neural networks for resource-efficient AI applications\",\n        \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n        \"Tucker tensor layer in fully connected neural networks\",\n        \"Cloud-DNN: An Open Framework for Mapping DNN Models to Cloud FPGAs\",\n        \"T-DLA: An Open-source Deep Learning Acceleratorfor Ternarized DNN Models on Embedded FPGA\",\n        \"Œºùúá\\\\mathrm{\\\\mu}L2Q: An Ultra-Low Loss Quantization Method for DNN Compression\",\n        \"Binarynet: training deep neural networks with weights and activations constrained to +1 or -1\",\n        \"Binaryconnect: Training deep neural networks with binary weights during propagations\",\n        \"Ultimate tensorization: compressing convolutional and fc layers alike\",\n        \"VecQ: Minimal loss dnn model compression with vectorized weight quantization\",\n        \"Hardware-oriented Approximation of Convolutional Neural Networks\",\n        \"Deep Compression: Compressing Deep Neural Network with Pruning, Trained Quantization and Huffman Coding\",\n        \"FPGA/DNN Co-Design: An Efficient Design Methodology for IoT Intelligence on the Edge\",\n        \"Enabling Design Methodologies and Future Trends for Edge AI: Specialization and Co-design\",\n        \"Towards Compact Neural Networks via End-to-End Training: A Bayesian Tensor Approach with Automatic Rank Determination\",\n        \"Bayesian Tensorized Neural Networks with Automatic Rank Selection\",\n        \"Most tensor problems are NP-hard\",\n        \"Stochastic variational inference\",\n        \"Tensorized embedding layers for efficient model compression\",\n        \"Tensor decompositions and applications\",\n        \"Speeding-up convolutional neural networks using fine-tuned cp-decomposition\",\n        \"Extremely Low Bit Neural Network: Squeeze the Last Bit Out With ADMM\",\n        \"Ternary Weight Networks\",\n        \"Stein variational Gradient descent: a general purpose Bayesian inference algorithm\",\n        \"Real-time object tracking system on FPGAs\",\n        \"A fully connected layer elimination for a binarizec convolutional neural network on an FPGA\",\n        \"Deep learning recommendation model for personalization and recommendation systems\",\n        \"Tensorizing neural networks\",\n        \"Tensor-train decomposition\",\n        \"FPGA Based Implementation of Deep Neural Networks Using On-chip Memory Only\",\n        \"Scalable high-performance architecture for convolutional ternary neural networks on FPGA\",\n        \"Going deeper with embedded fpga platform for convolutional neural network\",\n        \"Distributed Deep Neural Networks Over the Cloud, the Edge and End Devices\",\n        \"Compressing recurrent neural network with tensor train\",\n        \"FINN: A Framework for Fast, Scalable Binarized Neural Network Inference\",\n        \"Two-step quantization for low-bit neural networks\",\n        \"E2-Train: Training State-of-the-art CNNs with Over 80% Energy Savings\",\n        \"Compressing Recurrent Neural Networks Using Hierarchical Tucker Tensor Decomposition\",\n        \"On-FPGA Training with Ultra Memory Reduction: A Low-Precision Tensor Method\",\n        \"Machine learning on FPGAs to face the IoT revolution\",\n        \"DNNBuilder: an automated tool for building high-performance Dnn hardware accelerators for FPGAs\",\n        \"Accelerating Binarized Convolutional Neural Networks with Software-Programmable FPGAs\",\n        \"Tensor rank learning in CP decomposition via convolutional neural network\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in 3U-EdgeAI: Ultra-Low Memory Training, Ultra-Low Bitwidth Quantization, and Ultra-Low Latency Acceleration, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}