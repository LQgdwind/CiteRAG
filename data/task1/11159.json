{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Taming Server Memory TCO with Multiple Software-Defined Compressed Tiers\n\nPaper Abstract: Abstract Memory accounts for 33–50% of the total cost of ownership (TCO) in modern data centers. We propose TierScape to tame memory TCO through the novel creation and judicious management of multiple software-defined compressed memory tiers. As opposed to the state-of-the-art solutions that employ a 2-Tier solution, a single compressed tier along with DRAM, we define multiple compressed tiers implemented through a combination of different compression algorithms, memory allocators for compressed objects, and backing media to store compressed objects. These compressed memory tiers represent distinct points in the access latency, data compressibility, and unit memory usage cost spectrum, allowing rich and flexible trade-offs between memory TCO savings and application performance impact. A key advantage with TierScape is that it enables aggressive memory TCO saving opportunities by placing warm data in low latency compressed tiers with a reasonable performance impact while simultaneously placing cold data in the best memory TCO saving tiers. We believe TierScape represents an important server system configuration and optimization capability to achieve the best SLA-aware performance per dollar for applications hosted in production data center environments. TierScape presents a comprehensive and rigorous analytical cost model for performance and TCO trade-off based on continuous monitoring of the application’s data access profile. Guided by this model, TierScape takes informed actions to dynamically manage the placement and migration of application data across multiple software-defined compressed tiers. On real-world benchmarks, TierScape increases memory TCO savings by 22%–40% percentage points while maintaining performance parity or improves performance by 2%–10% percentage points while maintaining memory TCO parity compared to state-of-the-art 2-Tier solutions.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Buddy memory allocation - wikipedia\",\n        \"Decadal plan for semiconductors\",\n        \"Intel® optane™ dc persistent memory product brief\",\n        \"jshun/ligra: Ligra: A lightweight graph processing framework for shared memory\",\n        \"Lempel–ziv–oberhumer - wikipedia\",\n        \"lz4/lz4: Extremely fast compression algorithm\",\n        \"Lzo [lwn.net]\",\n        \"Memcached: Aws graviton2 benchmarking - infrastructure solutions blog - arm community blogs - arm community\",\n        \"New in memtier benchmark: Pseudo-random data, gaussian access pattern and range manipulation\",\n        \"Perfmon events\",\n        \"Silesia compression corpus\",\n        \"z3fold — the linux kernel documentation\",\n        \"Zram will see greater performance on linux 5.1 - it changed its default compressor - phoronix\",\n        \"zswap — the linux kernel documentation\",\n        \"memcached - a distributed memory object caching system\",\n        \"Redis\",\n        \"Thermostat: Application-transparent page management for two-tiered main memory\",\n        \"Enabling cxl memory expansion for in-memory database management systems\",\n        \"Performance evaluation of intel optane memory for managed workloads\",\n        \"Exploiting cxl-based memory for distributed deep learning\",\n        \"Experimental lossless data compressor\",\n        \"Language models are few-shot learners\",\n        \"The zsmalloc allocator [lwn.net]\",\n        \"Compute express link\",\n        \"Towards an adaptable systems architecture for memory tiering at warehouse-scale\",\n        \"Samsung electronics introduces industry’s first 512gb cxl memory module\",\n        \"Memory pooling with cxl\",\n        \"Heterovisor: Exploiting resource heterogeneity to enhance the elasticity of cloud platforms\",\n        \"Linux idle page tracking\",\n        \"A fast implementation of deflate\",\n        \"Pebs (processor event-based sampling) manual\",\n        \"The zswap compressed swap cache [lwn.net]\",\n        \"Exploring the design space of page management for Multi-Tiered memory systems\",\n        \"Radiant: Efficient page table management for tiered memory systems\",\n        \"Software-defined far memory in warehouse-scale computers\",\n        \"Memtis: Efficient memory tiering with dynamic page classification and page size determination\",\n        \"V2: idle page tracking / working set estimation\",\n        \"Pond: Cxl-based memory pooling systems for cloud platforms\",\n        \"Tpp: Transparent page placement for cxl-enabled tiered-memory\",\n        \"Micron launches memory expansion module portfolio to accelerate cxl 2.0 adoption\",\n        \"Profiling dynamic data access patterns with controlled overhead and quality\",\n        \"Flexhm: A practical system for heterogeneous memory with flexible and efficient performance optimizations\",\n        \"Or-tools\",\n        \"Scaling language models: Methods, analysis & insights from training gopher\",\n        \"Hemem: Scalable tiered memory management for big data applications and real nvm\",\n        \"Ligra: A lightweight graph processing framework for shared memory\",\n        \"Using deepspeed and megatron to train megatron-turing nlg 530b, a large-scale generative language model\",\n        \"Xsbench - the development and verification of a performance abstraction for monte carlo reactor analysis\",\n        \"Tmo: Transparent memory offloading in datacenters\",\n        \"Nimble page management for tiered memory systems\",\n        \"An empirical guide to the behavior and use of scalable persistent memory\",\n        \"Multigenerational lru framework\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Taming Server Memory TCO with Multiple Software-Defined Compressed Tiers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}