{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ùëìuncX: A Federated Function Serving Fabric for Science\n\nPaper Abstract: Abstract. Exploding data volumes and velocities, new computational methods and platforms, and ubiquitous connectivity demand new approaches to computation in the sciences. These new approaches must enable computation to be mobile, so that, for example, it can occur near data, be triggered by events (e.g., arrival of new data), be offloaded to specialized accelerators, or run remotely where resources are available. They also require new design approaches in which monolithic applications can be decomposed into smaller components, that may in turn be executed separately and on the most suitable resources. To address these needs we present fùëìfuncX‚Äîa distributed function as a service (FaaS) platform that enables flexible, scalable, and high performance remote function execution. fùëìfuncX‚Äôs endpoint software can transform existing clouds, clusters, and supercomputers into function serving systems, while fùëìfuncX‚Äôs cloud-hosted service provides transparent, secure, and reliable function execution across a federated ecosystem of endpoints. We motivate the need for fùëìfuncX with several scientific case studies, present our prototype design and implementation, show optimizations that deliver throughput in excess of 1 million functions per second, and demonstrate, via experiments on two supercomputers, that fùëìfuncX can scale to more than more than 130 000130000130\\,000 concurrent workers.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Amazon Lambda\",\n        \"Apache OpenWhisk\",\n        \"AWS Greengrass\",\n        \"Azure Functions\",\n        \"Dask\",\n        \"Fn project\",\n        \"Google Cloud Functions\",\n        \"IBM Cloud Functions\",\n        \"Kubeless\",\n        \"Linux containers\",\n        \"Microsoft Azure Functions Documentation\",\n        \"Apache Hadoop\",\n        \"Apache Spark\",\n        \"SAND: Towards high-performance serverless computing\",\n        \"Parsl: Pervasive Parallel Programming in Python\",\n        \"Serverless computing: Current trends and open problems\",\n        \"Cloud-native, event-based programming for mobile applications\",\n        \"Efficient and Secure Transfer, Synchronization, and Sharing of Big Data\",\n        \"DLHub: Model and data serving for science\",\n        \"COFFEA - Columnar Object Framework For Effective Analysis\",\n        \"Automo\",\n        \"Fast inference of deep neural networks in FPGAs for particle physics\",\n        \"The MAC system: The computer utility approach\",\n        \"Reproducible research environments with repo2docker\",\n        \"Cloud Computing for Science and Engineering\",\n        \"The anatomy of the grid: Enabling scalable virtual organizations\",\n        \"Status of serverless computing and function-as-a-service (FaaS) in industry and research\",\n        \"Conceptualizing a computing platform for science beyond 2020\",\n        \"Kubernetes: Up and running dive into the future of infrastructure (1st ed.)\",\n        \"Mesos: A platform for fine-grained resource sharing in the data center\",\n        \"Contain this, unleashing Docker for HPC\",\n        \"A serverless tool for platform agnostic computational experiment management\",\n        \"A taxonomy and survey of grid resource management systems for distributed computing\",\n        \"Singularity: Scientific containers for mobility of compute\",\n        \"Towards serverless execution of scientific workflows‚ÄìHyperFlow case Ssudy\",\n        \"Docker: Lightweight Linux containers for consistent development and deployment\",\n        \"Peer-to-Peer Computing\",\n        \"The Challenge of the Computer Utility\",\n        \"Toward scalable monitoring on large-scale storage for software defined cyberinfrastructure\",\n        \"Fast access to columnar, hierarchically nested data via code transformation\",\n        \"CharlieCloud: Unprivileged containers for user-defined software stacks in HPC\",\n        \"Container-based cluster orchestration systems: A taxonomy and future directions\",\n        \"Overview of GridRPC: A remote procedure call API for grid computing\",\n        \"Serverless workflows for indexing large scientific data\",\n        \"Faaster, better, cheaper: The prospect of serverless scientific computing and HPC\",\n        \"Containers-as-a-service via the Actor Model\",\n        \"Distributed computing in practice: the Condor experience\",\n        \"Globus Auth: A research identity and access management platform\",\n        \"A comprehensive perspective on pilot-job systems\",\n        \"Cloud futurology\",\n        \"Peeking behind the curtains of serverless platforms\",\n        \"The DIALS framework for integration software\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in ùëìuncX: A Federated Function Serving Fabric for Science, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}