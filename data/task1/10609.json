{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: LLaGA: Large Language and Graph Assistant\n\nPaper Abstract: Abstract Graph Neural Networks (GNNs) have empowered the advance in graph-structured data analysis. Recently, the rise of Large Language Models (LLMs) like GPT-4 has heralded a new era in deep learning. However, their application to graph data poses distinct challenges due to the inherent difficulty of translating graph structures to language. To this end, we introduce the Large Language and Graph Assistant (LLaGA), an innovative model that effectively integrates LLM capabilities to handle the complexities of graph-structured data. LLaGA retains the general-purpose nature of LLMs while adapting graph data into a format compatible with LLM input. LLaGA achieves this by reorganizing graph nodes to structure-aware sequences and then mapping these into the token embedding space through a versatile projector. LLaGA excels in versatility, generalizability and interpretability, allowing it to perform consistently well across different datasets and tasks, extend its ability to unseen datasets or tasks, and provide explanations for graphs. Our extensive experiments across popular graph benchmarks show that LLaGA delivers outstanding performance across four datasets and three tasks using one single model, surpassing state-of-the-art graph models in both supervised and zero-shot scenarios. Our code is available at https://github.com/VITA-Group/LLaGA\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gpt-4 technical report\",\n        \"Fastgcn: fast learning with graph convolutional networks via importance sampling\",\n        \"Nagphormer: A tokenized graph transformer for node classification in large graphs\",\n        \"Exploring the potential of large language models (llms) in learning on graphs\",\n        \"Label-free node classification on graphs with large language models (llms)\",\n        \"Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks\",\n        \"Vicuna: An open-source chatbot impressing gpt-4 with 90%* chatgpt quality, March 2023\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Simteg: A frustratingly simple approach improves textual graph learning\",\n        \"A generalization of transformer networks to graphs\",\n        \"Talk like a graph: Encoding graphs for large language models\",\n        \"Large-scale learnable graph convolutional networks\",\n        \"Gpt4graph: Can large language models understand graph structured data? an empirical evaluation and benchmarking\",\n        \"Inductive representation learning on large graphs\",\n        \"Contrastive multi-view representation learning on graphs\",\n        \"Harnessing explanations: Llm-to-lm interpreter for enhanced text-attributed graph representation learning\",\n        \"Graphmae: Self-supervised masked graph autoencoders\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Can llms effectively leverage graph structural information: when and why\",\n        \"Automated self-supervised learning for graphs\",\n        \"Multi-task self-supervised graph neural networks enable stronger task generalization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Crafting papers on machine learning\",\n        \"Visual instruction tuning\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Discovering language model behaviors with model-written evaluations\",\n        \"Sentence-bert: Sentence embeddings using siamese bert-networks\",\n        \"Scalable and adaptive graph neural networks with self-label-enhanced training\",\n        \"Graphgpt: Graph instruction tuning for large language models\",\n        \"Attention-based graph neural network for semi-supervised learning\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Graph attention networks\",\n        \"Deep graph infomax\",\n        \"Visionllm: Large language model is also an open-ended decoder for vision-centric tasks\",\n        \"Simplifying graph convolutional networks\",\n        \"Nodeformer: A scalable graph structure learning transformer for node classification\",\n        \"How powerful are graph neural networks?\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Natural language is all a graph needs\",\n        \"Do transformers really perform badly for graph representation?\",\n        \"L2-gcn: Layer-wise and learned efficient training of graph convolutional networks\",\n        \"Graph transformer networks\",\n        \"From canonical correlation analysis to self-supervised graph neural networks\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in LLaGA: Large Language and Graph Assistant, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}