{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 Introduction\n\nPaper Abstract: Abstract IoT devices are powered by microcontroller units (MCUs) which are extremely resource-scarce: a typical MCU may have an underpowered processor and around 64 KB of memory and persistent storage, which is orders of magnitude fewer computational resources than is typically required for deep learning. Designing neural networks for such a platform requires an intricate balance between keeping high predictive performance (accuracy) while achieving low memory and storage usage and inference latency. This is extremely challenging to achieve manually, so in this work, we build a neural architecture search (NAS) system, called µNAS, to automate the design of such small-yet-powerful MCU-level networks. µNAS explicitly targets the three primary aspects of resource scarcity of MCUs: the size of RAM, persistent storage and processor speed. µNAS represents a significant advance in resource-efficient models, especially for “mid-tier” MCUs with memory requirements ranging from 0.5 KB to 64 KB. We show that on a variety of image classification datasets µNAS is able to (a) improve top-1 classification accuracy by up to 4.8%, or (b) reduce memory footprint by 4–13×{\\times}, or (c) reduce the number of multiply-accumulate operations by at least 2×{\\times}, compared to existing MCU specialist literature and resource-efficient models. µNAS is freely available for download at https://github.com/eliberis/uNAS\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"TinyML—How TVM is Taming Tiny\",\n        \"Micronets: Neural network architectures for deploying tinyml applications on commodity microcontrollers\",\n        \"ProxylessNAS: Direct neural architecture search on target task and hardware\",\n        \"BRP-NAS: Prediction-based NAS using GCNs\",\n        \"SwiftNet: Using graph propagation as meta-knowledge to search highly representative neural architectures\",\n        \"A survey of model compression and acceleration for deep neural networks\",\n        \"Visual wake words dataset\",\n        \"Tensorflow lite micro: Embedded machine learning on tinyml systems\",\n        \"Character recognition in natural images\",\n        \"Efficient multi-objective neural architecture search via Lamarckian evolution\",\n        \"Neural architecture search: A survey\",\n        \"Bohb: Robust and efficient hyperparameter optimization at scale\",\n        \"SpArSe: Sparse architecture search for CNNs on resource-constrained microcontrollers\",\n        \"Searching for Winograd-aware quantized networks\",\n        \"Microcontroller Market Size, Share & Trends Analysis Report By Product (8-bit, 16-bit, 32-bit), By Application (Automotive, Consumer Electronics, Industrial, Medical Devices, Military & Defense), And Segment Forecasts, 2020–2027\",\n        \"Single path one-shot neural architecture search with uniform sampling\",\n        \"ProtoNN: Compressed and accurate knn for resource-scarce devices\",\n        \"Deep residual learning for image recognition\",\n        \"MONAS: Multi-objective neural architecture search using reinforcement learning\",\n        \"SqueezeNet: AlexNet-level accuracy with 50x fewer parameters and << 0.5 MB model size\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference\",\n        \"Auto-Keras: An efficient neural architecture search system\",\n        \"Parallelised Bayesian optimisation via Thompson sampling\",\n        \"Neural architecture search with bayesian optimisation and optimal transport\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Resource-efficient machine learning in 2 kb ram for the internet of things\",\n        \"MNIST handwritten digit database\",\n        \"Neural networks on microcontrollers: saving memory at inference via operator reordering\",\n        \"MCUNet: Tiny deep learning on iot devices\",\n        \"Dynamic model pruning with feedback\",\n        \"DARTS: Differentiable architecture search\",\n        \"AtomNas: Fine-grained end-to-end neural architecture search\",\n        \"CoopNet: Cooperative convolutional neural network for low-power MCUs\",\n        \"A flexible framework for multi-objective bayesian optimization using random scalarizations\",\n        \"Efficient neural architecture search via parameters sharing\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"MobileNet V2: Inverted residuals and linear bottlenecks\",\n        \"STM32 Nucleo-144 development board with STM32H743ZI MCU, supports Arduino, ST Zio and morpho connectivity\",\n        \"Going deeper with convolutions\",\n        \"MNasNet: Platform-aware neural architecture search for mobile\",\n        \"Speech commands: A dataset for limited-vocabulary speech recognition\",\n        \"Fashion-MNIST: a novel image dataset for benchmarking machine learning algorithms\",\n        \"SNAS: stochastic neural architecture search\",\n        \"zalandoresearch/fashion-mnist Github repository\",\n        \"Hello Edge: Keyword spotting on microcontrollers\",\n        \"Resource-efficient neural architect\",\n        \"Neural architecture search with reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in 1 Introduction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}