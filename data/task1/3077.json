{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficiently Teaching an Effective Dense Retriever with Balanced Topic Aware Sampling\n\nPaper Abstract: Abstract. A vital step towards the widespread adoption of neural retrieval models is their resource efficiency throughout the training, indexing and query workflows. The neural IR community made great advancements in training effective dual-encoder dense retrieval (DR) models recently. A dense text retrieval model uses a single vector representation per query and passage to score a match, which enables low-latency first-stage retrieval with a nearest neighbor search. Increasingly common, training approaches require enormous compute power, as they either conduct negative passage sampling out of a continuously updating refreshing index or require very large batch sizes. Instead of relying on more compute capability, we introduce an efficient topic-aware query and balanced margin sampling technique, called TAS-Balanced. We cluster queries once before training and sample queries out of a cluster per batch. We train our lightweight 6-layer DR model with a novel dual-teacher supervision that combines pairwise and in-batch negative teachers. Our method is trainable on a single consumer-grade GPU in under 48 hours. We show that our TAS-Balanced training method achieves state-of-the-art low-latency (64ms per query) results on two TREC Deep Learning Track query sets. Evaluated on NDCG@10, we outperform BM25 by 44%, a plainly trained DR by 19%, docT5query by 11%, and the previous best DR model by 5%. Additionally, TAS-Balanced produces the first dense retriever that outperforms every other method on recall at any cutoff on TREC-DL and allows more resource intensive re-ranking models to operate on fewer passages to improve results further.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Cross-Domain Modeling of Sentence-Level Evidence for Document Retrieval\",\n        \"MS MARCO : A Human Generated MAchine Reading COmprehension Dataset\",\n        \"Learning to Rank: From Pairwise Approach to Listwise Approach\",\n        \"Unsupervised Learning of Visual Features by Contrasting Cluster Assignments\",\n        \"Simplified TinyBERT: Knowledge Distillation for Document Retrieval\",\n        \"Learning a Better Negative Sampling Policy with Deep Neural Networks for Search\",\n        \"Overview of the TREC 2019 Deep Learning Track\",\n        \"Overview of the TREC 2020 Deep Learning Track\",\n        \"Context-Aware Sentence/Passage Term Importance Estimation for First Stage Retrieval\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"RocketQA: An Optimized Training Approach to Dense Passage Retrieval for Open-Domain Question Answering\",\n        \"Understanding BERT Rankers Under Distillation\",\n        \"Rethink Training of BERT Rerankers in Multi-Stage Retrieval Pipeline\",\n        \"Improving Efficient Neural Ranking Models with Cross-Architecture Knowledge Distillation\",\n        \"Letâ€™s Measure Run Time! Extending the IR Replicability Infrastructure to Include Performance Aspects\",\n        \"Distilling Knowledge from Reader to Retriever for Question Answering\",\n        \"The Use of Hierarchic Clustering in Information Retrieval\",\n        \"TinyBERT: Distilling BERT for Natural Language Understanding\",\n        \"Billion-Scale Similarity Search with GPUs\",\n        \"Hard Negative Mixing for Contrastive Learning\",\n        \"Dense Passage Retrieval for Open-Domain Question Answering\",\n        \"ColBERT: Efficient and Effective Passage Search via Contextualized Late Interaction over BERT\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Distilling Dense Representations for Ranking using Tightly-Coupled Teachers\",\n        \"TwinBERT: Distilling Knowledge to Twin-Structured BERT Models for Efficient Retrieval\",\n        \"Sparse, Dense, and Attentional Representations for Text Retrieval\",\n        \"Training Curricula for Open Domain Answer Re-Ranking\",\n        \"CEDR: Contextualized Embeddings for Document Ranking\",\n        \"Some Methods for Classification and Analysis of Multivariate observations\",\n        \"Passage Re-ranking with BERT\",\n        \"From doc2query to docTTTTTquery\",\n        \"Automatic Differentiation in PyTorch\",\n        \"The Expando-Mono-Duo Design Pattern for Text Ranking with Pretrained Sequence-to-Sequence Models\",\n        \"DistilBERT, A Distilled Version of BERT: Smaller, Faster, Cheaper and Lighter\",\n        \"Rethinking Image Mixture for Unsupervised Visual Representation Learning\",\n        \"Ranking Distillation: Learning Compact Ranking Models with High Performance for Recommender System\",\n        \"Distilling Knowledge for Fast Retrieval-based Chat-bots\",\n        \"Attention Is All You Need\",\n        \"The Cluster Hypothesis Revisited\",\n        \"The LambdaLoss Framework for Ranking Metric Optimization\",\n        \"Transformers: State-of-the-Art Natural Language Processing\",\n        \"Approximate Nearest Neighbor Negative Contrastive Learning for Dense Text Retrieval\",\n        \"Anserini: Enabling the Use of Lucene for Information Retrieval Research\",\n        \"Learning To Retrieve: How to Train a Dense Retrieval Model Effectively and Efficiently\",\n        \"How Reliable are the Results of Large-Scale Information Retrieval Experiments?\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Efficiently Teaching an Effective Dense Retriever with Balanced Topic Aware Sampling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}