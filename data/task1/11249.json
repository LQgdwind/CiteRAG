{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Simulating Petri nets with Boolean Matrix Logic Programming\n\nPaper Abstract: Abstract Recent attention to relational knowledge bases has sparked a demand for understanding how relations change between entities. Petri nets can represent knowledge structure and dynamically simulate interactions between entities, and thus they are well suited for achieving this goal. However, logic programs struggle to deal with extensive Petri nets due to the limitations of high-level symbol manipulations. To address this challenge, we introduce a novel approach called Boolean Matrix Logic Programming (BMLP), utilising boolean matrices as an alternative computation mechanism for Prolog to evaluate logic programs. Within this framework, we propose two novel BMLP algorithms for simulating a class of Petri nets known as elementary nets. This is done by transforming elementary nets into logically equivalent datalog programs. We demonstrate empirically that BMLP algorithms can evaluate these programs 40 times faster than tabled B-Prolog, SWI-Prolog, XSB-Prolog and Clingo. Our work enables the efficient simulation of elementary nets using Prolog, expanding the scope of analysis, learning and verification of complex systems with logic programming techniques.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Encoding Higher Level Extensions of Petri Nets in Answer Set Programming\",\n        \"Model checking multi-agent systems with logic based Petri nets\",\n        \"What you always wanted to know about Datalog (and never dared to ask)\",\n        \"Matrix Development of the Calculus of Relations\",\n        \"Matrix multiplication via arithmetic progressions\",\n        \"Probabilistic (logic) programming concepts\",\n        \"Encoding Reversing Petri Nets in Answer Set Programming\",\n        \"Petri nets in logic\",\n        \"Boolean matrix multiplication and transitive closure\",\n        \"Clingo = ASP + Control: Preliminary Report\",\n        \"The Stable Model Semantics for Logic Programming\",\n        \"System modelling with high-level Petri nets\",\n        \"Towards a Formal Distributional Semantics: Simulating Logical Calculi with Tensors\",\n        \"Knowledge Graphs\",\n        \"An algebraic approach to recursive inference\",\n        \"On the Computation of the Transitive Closure of Relational Operators\",\n        \"A high-level Petri net for goal-directed semantics of Horn clause logic\",\n        \"A survey on knowledge graphs: representation, acquisition, and applications\",\n        \"Representation learning for dynamic graphs: a survey\",\n        \"DBpedia - A large-scale, multilingual knowledge base extracted from Wikipedia\",\n        \"From SatisÔ¨Åability to Linear Algebra\",\n        \"Foundations of Logic Programming\",\n        \"iML1515, a knowledgebase that computes escherichia coli traits\",\n        \"Inductive logic programming\",\n        \"Hypothesizing an algorithm from one example: the role of specificity\",\n        \"A predicate-transition net model for parallel interpretation of logic programs\",\n        \"Petri nets: Properties, analysis and applications\",\n        \"A Review of Relational Machine Learning for Knowledge Graphs\",\n        \"Open flight route database\",\n        \"Collected Papers of Charles Sanders Peirce, Volumes II\",\n        \"YAGO: A Multilingual Knowledge Base from Wikipedia, Wordnet, and Geonames\",\n        \"Understanding Petri Nets: Modeling Techniques, Analysis Methods, Case Studies\",\n        \"Elementary net systems\",\n        \"Advances in flux balance analysis by integrating machine learning and mechanism-based models\",\n        \"Abducing Relations in Continuous Spaces\",\n        \"A linear algebraic approach to datalog evaluation\",\n        \"ConceptNet 5.5: An Open Multilingual Graph of General Knowledge\",\n        \"Knowledge-Guided Identification of Petri Net Models of Large Biological Systems\",\n        \"The ALEPH manual\",\n        \"XSB: Extending Prolog with Tabled Logic Programming\",\n        \"A lattice-theoretical fixpoint theorem and its applications\",\n        \"The Semantics of Predicate Logic as a Programming Language\",\n        \"Knowledge Graph Embedding: A Survey of Approaches and Applications\",\n        \"SWI-Prolog\",\n        \"The language features and architecture of B-Prolog\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Simulating Petri nets with Boolean Matrix Logic Programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}