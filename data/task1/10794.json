{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 61 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: IntSat: Integer Linear Programming by Conflict-Driven Constraint-Learning\n\nPaper Abstract: Abstract State-of-the-art SAT solvers are nowadays able to handle huge real-world instances. The key to this success is the so-called Conflict-Driven Clause-Learning (CDCL) scheme, which encompasses a number of techniques that exploit the conflicts that are encountered during the search for a solution. In this article we extend these techniques to Integer Linear Programming (ILP), where variables may take general integer values instead of purely binary ones, constraints are more expressive than just propositional clauses, and there may be an objective function to optimise. We explain how these methods can be implemented efficiently, and discuss possible improvements. Our work is backed with a basic implementation that shows that, even in this far less mature stage, our techniques are already a useful complement to the state of the art in ILP solving.\n\n{retrieved_text}\n\nGenerate exactly 61 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 61\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"To Encode or to Propagate? The Best Choice for Each Constraint in SAT\",\n        \"Curriculum-based course timetabling with SAT and maxsat\",\n        \"Conflict analysis in mixed integer programming\",\n        \"Search techniques for sat-based boolean optimization\",\n        \"Improving intsat by expressing disjunctions of bounds as linear constraints\",\n        \"A linear-time algorithm for testing the truth of certain quantified boolean formulas\",\n        \"Predicting learnt clauses quality in modern SAT solvers\",\n        \"Satisfiability modulo theories\",\n        \"Towards understanding and harnessing the potential of clause learning\",\n        \"Picosat essentials\",\n        \"Handbook of Satisfiability\",\n        \"Presentation: Progress in Linear and Mixed-Integer Programming\",\n        \"Optimization: Past, Present and Future with Dr. Robert Bixby\",\n        \"The Barcelogic SMT Solver\",\n        \"A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems\",\n        \"A complete and terminating approach to linear integer solving\",\n        \"Comparing Integer Linear Programming to SAT-Solving for Hard Problems in Computational and Systems Biology\",\n        \"Edmonds polytopes and a hierarchy of combinatorial problems\",\n        \"The MathSAT5 SMT Solver\",\n        \"The complexity of theorem-proving procedures\",\n        \"Natural Domain SMT: A Preliminary Assessment\",\n        \"A Machine Program for Theorem-Proving\",\n        \"A Computing Procedure for Quantification Theory\",\n        \"Z3: An Efficient SMT Solver\",\n        \"Enhancement schemes for constraint processing: Backjumping, learning, and cutset decomposition\",\n        \"The YICES SMT Solver\",\n        \"Effective Preprocessing in SAT Through Variable and Clause Elimination.\",\n        \"An Extensible SAT-solver.\",\n        \"Translating Pseudo-Boolean Constraints into SAT\",\n        \"Incremental Inprocessing in SAT Solving\",\n        \"MIPLIB 2017: Data-Driven Compilation of the 6th Mixed-Integer Programming Library\",\n        \"BerkMin: A Fast and Robust SAT-Solver\",\n        \"Heavy-tailed distributions in combinatorial search\",\n        \"Boosting combinatorial search through randomization\",\n        \"Outline of an algorithm for integer solutions to linear programs\",\n        \"The intractability of resolution\",\n        \"Clause elimination for SAT and QSAT\",\n        \"The effect of restarts on the efficiency of clause learning\",\n        \"Inprocessing Rules\",\n        \"Experiments in integer programming\",\n        \"Cutting to the chase - solving linear integer arithmetic\",\n        \"Reducibility among combinatorial problems\",\n        \"Solving Systems of Linear Inequalities by Bound Propagation\",\n        \"Optimal speedup of Las Vegas algorithms\",\n        \"GRASP: A Search Algorithm for Propositional Satisfiability\",\n        \"Generalizing DPLL to Richer Logics\",\n        \"Chaff: engineering an efficient SAT solver\",\n        \"SAT and SMT Are Still Resolution: Questions and Challenges (invited talk)\",\n        \"The IntSat Method for Integer Linear Programming\",\n        \"Intsat source code, makefile and benchmarks\",\n        \"Employee scheduling with sat-based pseudo-boolean constraint solving\",\n        \"Solving SAT and SAT Modulo Theories: From an abstract Davis–Putnam–Logemann–Loveland procedure to DPLL(T)\",\n        \"Propagation = Lazy Clause Generation\",\n        \"Rsat 2.0: Sat solver description\",\n        \"On the Power of Clause-Learning SAT Solvers with Restarts\",\n        \"On modern clause-learning satisfiability solvers\",\n        \"A Machine-Oriented Logic Based on the Resolution Principle\",\n        \"Theory of Linear and Integer Programming\",\n        \"View-based propagator derivation\",\n        \"Compiling finite linear CSP into SAT\",\n        \"Efficient Conflict Driven Learning in a Boolean Satisfiability Solver\"\n    ],\n    \"reasoning\": \"Selected these 61 references because they represent foundational work and recent advances in IntSat: Integer Linear Programming by Conflict-Driven Constraint-Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}