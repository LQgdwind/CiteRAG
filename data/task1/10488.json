{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: List-aware Reranking-Truncation Joint Model for Search and Retrieval-augmented Generation\n\nPaper Abstract: Abstract. The results of information retrieval (IR) are usually presented in the form of a ranked list of candidate documents, such as web search for humans and retrieval-augmented generation for large language models (LLMs). List-aware retrieval aims to capture the list-level contextual features to return a better list, mainly including reranking and truncation. Reranking finely re-scores the documents in the list. Truncation dynamically determines the cut-off point of the ranked list to achieve the trade-off between overall relevance and avoiding misinformation from irrelevant documents. Previous studies treat them as two separate tasks and model them separately. However, the separation is not optimal. First, it is hard to share the contextual information of the ranking list between the two tasks. Second, the separate pipeline usually meets the error accumulation problem, where the small error from the reranking stage can largely affect the truncation stage. To solve these problems, we propose a Reranking-Truncation joint model (GenRT) that can perform the two tasks concurrently. GenRT integrates reranking and truncation via generative paradigm based on encoder-decoder architecture. We also design the novel loss functions for joint optimization to make the model learn both tasks. Sharing parameters by the joint model is conducive to making full use of the common modeling information of the two tasks. Besides, the two tasks are performed concurrently and co-optimized to solve the error accumulation problem between separate stages. Experiments on public learning-to-rank benchmarks and open-domain Q&A tasks show that our method achieves SOTA performance on both reranking and truncation tasks for web search and retrieval-augmented LLMs.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning a Deep Listwise Context Model for Ranking Refinement\",\n        \"Learning Groupwise Multivariate Scoring Functions Using Deep Neural Networks\",\n        \"Layer Normalization\",\n        \"Choppy: Cut Transformer for Ranked List Truncation\",\n        \"Seq2Slate: Re-ranking and Slate Optimization with RNNs\",\n        \"Latent Cross: Making Use of Context in Recurrent Recommender Systems\",\n        \"Expected Reciprocal Rank for Graded Relevance\",\n        \"Cross-Lingual Passage Re-Ranking With Alignment Augmented Multilingual BERT\",\n        \"GERE: Generative Evidence Retrieval for Fact Verification\",\n        \"Dynamic Cutoff Prediction in Multi-Stage Retrieval Systems\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Revisit Recommender System in the Permutation Prospective\",\n        \"GRN: Generative Rerank Network for Context-wise Recommendation\",\n        \"A probability ranking principle for interactive information retrieval\",\n        \"AliExpress Learning-To-Rank: Maximizing Online Model Performance without Going Online\",\n        \"Unsupervised Dense Information Retrieval with Contrastive Learning\",\n        \"Cumulated gain-based evaluation of IR techniques\",\n        \"TriviaQA: A Large Scale Distantly Supervised Challenge Dataset for Reading Comprehension\",\n        \"Dense Passage Retrieval for Open-Domain Question Answering\",\n        \"Demonstrate-Search-Predict: Composing retrieval and language models for knowledge-intensive NLP\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Natural Questions: A Benchmark for Question Answering Research\",\n        \"An Assumption-Free Approach to the Dynamic Truncation of Ranked Lists\",\n        \"Lost in the Middle: How Language Models Use Long Contexts\",\n        \"Personalized Re-ranking with Item Relationships for E-commerce\",\n        \"Incorporating Retrieval Information into the Truncation of Ranking Lists for Better Legal Search\",\n        \"Reward Augmented Maximum Likelihood for Neural Structured Prediction\",\n        \"SetRank: Learning a Permutation-Invariant Ranking Model for Information Retrieval\",\n        \"Personalized re-ranking for recommendation\",\n        \"Scope-aware Re-ranking with Gated Attention in Feed\",\n        \"LETOR: A benchmark collection for research on learning to rank for information retrieval\",\n        \"Are Neural Rankers still Outperformed by Gradient Boosted Decision Trees?\",\n        \"Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer\",\n        \"SQuAD: 100,000+ Questions for Machine Comprehension of Text\",\n        \"Searching for Activation Functions\",\n        \"THE PROBABILITY RANKING PRINCIPLE IN IR\",\n        \"Large Test Collection Experiments on an Operational, Interactive System: Okapi at TREC\",\n        \"Quantifying Test Collection Quality Based on the Consistency of Relevance Judgements\",\n        \"Attention is All you Need\",\n        \"Learning to Truncate Ranked Lists for Information Retrieval\",\n        \"Context-aware Reranking with Utility Maximization for Recommendation\",\n        \"Multi-Level Interaction Reranking with User Behavior History\",\n        \"Match-Prompt: Improving Multi-task Generalization Ability for Neural Text Matching via Prompt Learning\",\n        \"BERM: Training the Balanced and Extractable Representation for Matching to Improve Generalization Ability of Dense Retrieval\",\n        \"Search-in-the-Chain: Towards Accurate, Credible and Traceable Large Language Models for Knowledge-intensive Tasks\",\n        \"Relevance Judgments: Preferences, Scores and Ties\",\n        \"Relevance and Effort: An Analysis of Document Utility\",\n        \"Globally Optimized Mutual Influence Aware Ranking in E-Commerce Search\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in List-aware Reranking-Truncation Joint Model for Search and Retrieval-augmented Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}