{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Rapid and Precise Topological Comparison with Merge Tree Neural Networks\n\nPaper Abstract: Abstract Merge trees are a valuable tool in the scientific visualization of scalar fields; however, current methods for merge tree comparisons are computationally expensive, primarily due to the exhaustive matching between tree nodes. To address this challenge, we introduce the Merge Tree Neural Networks (MTNN), a learned neural network model designed for merge tree comparison. The MTNN enables rapid and high-quality similarity computation. We first demonstrate how graph neural networks, which emerged as effective encoders for graphs, can be trained to produce embeddings of merge trees in vector spaces for efficient similarity comparison. Next, we formulate the novel MTNN model that further improves the similarity comparisons by integrating the tree and node embeddings with a new topological attention mechanism. We demonstrate the effectiveness of our model on real-world data in different domains and examine our model’s generalizability across various datasets. Our experimental analysis demonstrates our approach’s superiority in accuracy and efficiency. In particular, we speed up the prior state-of-the-art by more than 100×100\\times on the benchmark datasets while maintaining an error rate below 0.1%percent0.10.1\\%.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Computing the gromov-hausdorff distance for metric trees\",\n        \"Extracting knowledge from the geometric shape of social network data using topological data analysis\",\n        \"Vector field topology of time-dependent flows in a steady reference frame\",\n        \"Simgnn: A neural network approach to fast graph similarity computation\",\n        \"Learning-based efficient graph similarity computation via multi-scale convolutional set matching\",\n        \"Measuring distance between reeb graphs\",\n        \"The reeb graph edit distance is universal\",\n        \"Measuring the distance between merge trees\",\n        \"Topoms: Comprehensive topological exploration for molecular and condensed-matter systems\",\n        \"Computing a stable distance on merge trees\",\n        \"Interactive exploration and analysis of large-scale simulations using topology-based data segmentation\",\n        \"Numerical geometry of non-rigid shapes\",\n        \"Multidimensional scaling\",\n        \"Siamese neural networks: An overview\",\n        \"Decorated merge trees for persistent topology\",\n        \"The edit distance for reeb graphs of surfaces\",\n        \"Computational Topology: An Introduction\",\n        \"Fast graph representation learning with pytorch geometric\",\n        \"A survey of graph edit distance\",\n        \"Intrinsic interleaving distance for merge trees\",\n        \"Characterizing molecular interactions in chemical systems\",\n        \"Generic objective vortices for flow visualization\",\n        \"Stability of dissipation elements: A case study in combustion\",\n        \"Inductive representation learning on large graphs\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Persistent homology for the quantitative evaluation of architectural features in prostate cancer histology\",\n        \"Sketching merge trees for scientific visualization\",\n        \"Graph matching networks for learning the similarity of graph structured objects\",\n        \"Topology-inspired partition-based sensitivity analysis and visualization of nuclear simulations\",\n        \"Weighted persistent homology for biomolecular data analysis\",\n        \"Interleaving distance between merge trees\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Wasserstein auto-encoders of merge trees (and persistence diagrams)\",\n        \"Principal geodesic analysis of merge trees (and persistence diagrams)\",\n        \"Free computational fluid dynamics\",\n        \"Slow learning and fast inference: Efficient graph similarity computation via knowledge distillation\",\n        \"A domain-oblivious approach for learning concise representations of filtered topological spaces for clustering\",\n        \"Topological guided detection of extreme wind phenomena: Implications for wind energy\",\n        \"Extended branch decomposition graphs: Structural comparison of scalar data\",\n        \"Global feature tracking and similarity estimation in time-dependent scalar fields\",\n        \"Reasoning with neural tensor networks for knowledge base completion\",\n        \"The paraview guide, vol. 366\",\n        \"Edit distance between merge trees\",\n        \"Comparative analysis of merge trees using local tree edit distance\",\n        \"The topology toolkit\",\n        \"Taming horizontal instability in merge trees: On the computation of a comprehensive deformation-based edit distance\",\n        \"Branch decomposition-independent edit distances for merge trees\",\n        \"Persistent homology analysis of protein structure, flexibility, and folding\",\n        \"How powerful are graph neural networks?\",\n        \"Geometry aware merge tree comparisons for time-varying data with interleaving distances\",\n        \"A structural average of labeled merge trees for uncertainty visualization\",\n        \"Comparing stars: On approximating graph edit distance\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Rapid and Precise Topological Comparison with Merge Tree Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}