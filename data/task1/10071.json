{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Okapi: A Lightweight Architecture for Secure Speculation Exploiting Locality of Memory Accesses\n\nPaper Abstract: Abstract This paper introduces Okapi, an innovative hardware/software cross-layer architecture designed to mitigate Transient Execution Side Channel (TES) attacks, including Spectre variants, in modern computing systems. A key contribution of Okapi is a set of security features building upon each other to offer various trade-offs between performance and security. At its core, Okapi allows for speculative data accesses if the targeted memory region has already been accessed non-speculatively before in the same trust domain. It delays first-time accesses until the speculation is resolved. Okapi stands out for its flexibility in security implementation. For environments with less stringent security needs, Okapiâ€™s features can be deactivated to eliminate performance overhead. When activated, the hardware modifications alone provide robust protection against transient execution attacks at a thread-level granularity, including all universal read gadgets like Spectre-PHT and Spectre-BTB. This incurs an average performance overhead of only 3.6 % for the SPEC CPU2017 benchmark suite. On top, Okapi introduces the OkapiReset instruction for additional software-level security support. This instruction, which can be manually inserted by developers or automatically via a compiler extension, allows for fully secure speculation and for trust domain sizes smaller than a thread. While the manual insertion of OkapiReset incurs an additional 0.6 % performance overhead, the automated compiler extension approach results in a 23.1 % overhead for making a cryptographic library fully secure. With an approximate 0.4 % hardware overhead, Okapi provides a highly scalable and adaptable solution for secure speculation in state-of-the-art processor design.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"ReCon: Efficient detection, management, and use of non-speculative information leakage\",\n        \"AMD64 Technology: Speculative Store Bypass Disable\",\n        \"Jumpswitches: Restoring the performance of indirect branches in the era of spectre\",\n        \"On subnormal floating point and abnormal timing\",\n        \"Speculative interference attacks: breaking invisible speculation schemes\",\n        \"Architectural and Operating System Support for Virtual Memory\",\n        \"The gem5 simulator\",\n        \"MI6: secure enclaves in a speculative out-of-order processor\",\n        \"SPEC CPU2017: next-generation compute benchmark\",\n        \"A systematic evaluation of transient execution attacks and defenses\",\n        \"Speculative privacy tracking (SPT): leaking information from speculative execution without compromising privacy\",\n        \"Cloudflare worker documentation: Security model\",\n        \"Prospect: Provably secure speculation for the constant-time policy\",\n        \"A formal approach for detecting vulnerabilities to transient execution attacks in out-of-order processors\",\n        \"Spectreguard: An efficient data-centric defense mechanism against spectre attacks\",\n        \"SafeSide\",\n        \"Safebet: Secure, simple, and fast speculative execution\",\n        \"SimPoint 3.0: Faster and more flexible program phase analysis\",\n        \"Speculative execution, variant 4: speculative store bypass\",\n        \"Pin - A Dynamic Binary Instrumentation Tool\",\n        \"Secure-by-construction design methodology for CPUs: Implementing secure speculation on the RTL\",\n        \"Spectre attacks: Exploiting speculative execution\",\n        \"Spectre returns! speculation attacks using the return stack buffer\",\n        \"Doppelganger loads: A safe, complexity-effective optimization for secure speculation schemes\",\n        \"Fresh Linux 4.16 Kernel Benchmarks With KPTI & Retpolines\",\n        \"LLVM: A compilation framework for lifelong program analysis & transformation\",\n        \"Conditional speculation: An effective approach to safeguard out-of-order execution against spectre attacks\",\n        \"DOLMA: securing speculation with the principle of transient non-observability\",\n        \"ret2spec: Speculative execution using return stack buffers\",\n        \"Going beyond the limits of SFI: flexible and secure hardware-assisted in-process isolation with HFI\",\n        \"Efficient invisible speculative execution through selective delay and value prediction\",\n        \"Donky: Domain keys - efficient in-process isolation for RISC-V and x86\",\n        \"Store-to-leak forwarding: Leaking data on meltdown-resistant cpus (updated and extended version)\",\n        \"ConTExT: A generic approach for mitigating spectre\",\n        \"Modern Operating Systems\",\n        \"Context-sensitive fencing: Securing speculative execution via microcode customization\",\n        \"Retpoline: a software construct for preventing branch-target-injection\",\n        \"ERIM: secure, efficient in-process isolation with protection keys (MPK)\",\n        \"NDA: Preventing speculative execution attacks at their source\",\n        \"Hitting the memory wall: implications of the obvious\",\n        \"Invisispec: Making speculative execution invisible in the cache hierarchy\",\n        \"FLUSH+RELOAD: A high resolution, low noise, L3 cache side-channel attack\",\n        \"Speculative data-oblivious execution: Mobilizing safe prediction for safe and efficient speculative execution\",\n        \"Speculative taint tracking (STT): A comprehensive protection for speculatively accessed data\",\n        \"Sonicboom: The 3rd generation berkeley out-of-order machine\",\n        \"No-FAT: Architectural support for low overhead memory safety checks\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Okapi: A Lightweight Architecture for Secure Speculation Exploiting Locality of Memory Accesses, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}