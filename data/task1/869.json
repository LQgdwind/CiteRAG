{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ValueNet: A Natural Language-to-SQL System that Learns from Database Information\n\nPaper Abstract: Abstract Building natural language (NL) interfaces for databases has been a long-standing challenge for several decades. The major advantage of these so-called NL-to-SQL systems is that end-users can query complex databases without the need to know SQL or the underlying database schema. Due to significant advancements in machine learning, the recent focus of research has been on neural networks to tackle this challenge on complex datasets like Spider. Several recent NL-to-SQL systems achieve promising results on this dataset. However, none of the published systems, that provide either the source code or executable binaries, extract and incorporate values from the user questions for generating SQL statements. Thus, the practical use of these systems in a real-world scenario has not been sufficiently demonstrated yet. In this paper we propose ValueNet light and ValueNet – two end-to-end NL-to-SQL systems that incorporate values using the challenging Spider dataset. The main idea of our approach is to use not only metadata information from the underlying database but also information on the base data as input for our neural network architecture. In particular, we propose a novel architecture sketch to extract values from a user question and come up with possible value candidates which are not explicitly mentioned in the question. We then use a neural model based on an encoder-decoder architecture to synthesize the SQL query. Finally, we evaluate our model on the Spider challenge using the Execution Accuracy metric, a more difficult metric than used by most participants of the challenge. Our experimental evaluation demonstrates that ValueNet light and ValueNet reach state-of-the-art results of 67% and 62% accuracy, respectively, for translating from NL to SQL whilst incorporating values.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A comparative survey of recent natural language interfaces for databases\",\n        \"Natural language interfaces to databases - an introduction\",\n        \"More accurate question answering on freebase\",\n        \"Soda: Generating sql for business users\",\n        \"Representing schema structure with graph neural networks for text-to-sql parsing\",\n        \"Entity matching with transformer architectures-a step forward in data integration\",\n        \"Learning an executable neural semantic parser\",\n        \"Data Matching: Concepts and Techniques for Record Linkage, Entity Resolution, and Duplicate Detection\",\n        \"A technique for computer detection and correction of spelling errors\",\n        \"Natural language interfaces to ontologies: Combining syntactic analysis and ontology-based lookup through the user interaction\",\n        \"A methodology for creating question answering corpora using inverse data annotation\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Language to logical form with neural attention\",\n        \"Sparklis: an expressive query builder for sparql endpoints with guidance in natural language\",\n        \"Generative adversarial nets\",\n        \"Towards complex text-to-sql in cross-domain database with intermediate representation\",\n        \"Long short-term memory\",\n        \"spaCy 2: Natural language understanding with Bloom embeddings, convolutional neural networks and incremental parsing\",\n        \"A comprehensive exploration on wikisql with table-aware word contextualization\",\n        \"Natural language to sql: Where are we today?\",\n        \"Adam: A method for stochastic optimization\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Roberta: A robustly optimized BERT pretraining approach\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"Modern natural language interfaces to databases: Composing statistical parsing with semantic tractability\",\n        \"Towards a theory of natural language interfaces to databases\",\n        \"Improving language understanding by generative pre-training\",\n        \"Japanese and korean voice search\",\n        \"Athena++ natural language querying for complex nested sql queries\",\n        \"Précis: from unstructured keywords as queries to structured databases as answers\",\n        \"Tr discover: A natural language interface for querying and analyzing interlinked datasets\",\n        \"Attention is all you need\",\n        \"Pointer networks\",\n        \"The string-to-string correction problem\",\n        \"Rat-sql: Relation-aware schema encoding and linking for text-to-sql parsers\",\n        \"An efficient easily adaptable system for interpreting natural language queries\",\n        \"Huggingface’s transformers: State-of-the-art natural language processing\",\n        \"Sqlnet: Generating structured queries from natural language without reinforcement learning\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"What it takes to achieve 100% condition accuracy on WikiSQL\",\n        \"Spider: A large-scale human-labeled dataset for complex and cross-domain semantic parsing and text-to-sql task\",\n        \"Sparc: Cross-domain semantic parsing in context\",\n        \"An 11/6-approximation algorithm for the network steiner problem\",\n        \"Natural language question/answering: Let users talk with the knowledge graph\",\n        \"Seq2sql: Generating structured queries from natural language using reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in ValueNet: A Natural Language-to-SQL System that Learns from Database Information, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}