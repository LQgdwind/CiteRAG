{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient and Effective Community Search on Large-scale Bipartite Graphs\n\nPaper Abstract: Abstract Bipartite graphs are widely used to model relationships between two types of entities. Community search retrieves densely connected subgraphs containing a query vertex, which has been extensively studied on unipartite graphs. However, community search on bipartite graphs remains largely unexplored. Moreover, all existing cohesive subgraph models on bipartite graphs can only be applied to measure the structure cohesiveness between two sets of vertices while overlooking the edge weight in forming the community. In this paper, we study the significant (α𝛼\\alpha, β𝛽\\beta)-community search problem on weighted bipartite graphs. Given a query vertex q𝑞q, we aim to find the significant (α𝛼\\alpha, β𝛽\\beta)-community ℛℛ\\mathcal{R} of q𝑞q which adopts (α𝛼\\alpha, β𝛽\\beta)-core to characterize the engagement level of vertices, and maximizes the minimum edge weight (significance) within ℛℛ\\mathcal{R}. To support fast retrieval of ℛℛ\\mathcal{R}, we first retrieve the maximal connected subgraph of (α𝛼\\alpha, β𝛽\\beta)-core containing the query vertex (the (α𝛼\\alpha, β𝛽\\beta)-community), and the search space is limited to this subgraph with a much smaller size than the original graph. A novel index structure is presented which can be built in O​(δ⋅m)𝑂⋅𝛿𝑚O(\\delta\\cdot m) time and takes O​(δ⋅m)𝑂⋅𝛿𝑚O(\\delta\\cdot m) space where m𝑚m is the number of edges in G𝐺G, δ𝛿\\delta is bounded by m𝑚\\sqrt{m} and is much smaller in practice. Utilizing the index, the (α𝛼\\alpha, β𝛽\\beta)-community can be retrieved in optimal time. To further obtain ℛℛ\\mathcal{R}, we develop peeling and expansion algorithms to conduct searches by shrinking from the (α𝛼\\alpha, β𝛽\\beta)-community and expanding from the query vertex, respectively. The experimental results on real graphs not only demonstrate the effectiveness of the significant (α𝛼\\alpha, β𝛽\\beta)-community model but also validate the efficiency of our query processing and indexing techniques.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Unifying user-based and item-based collaborative filtering approaches by similarity fusion\",\n        \"Copycatch: stopping group attacks by spotting lockstep behavior in social networks\",\n        \"The DBLP computer science bibliography: Evolution, research issues, perspectives\",\n        \"Local serach of communities in large graphs\",\n        \"The community-search problem and how to plan a succesful cocktail party\",\n        \"Efficient and effective community search\",\n        \"Effective community search for large attributed graphs\",\n        \"Querying k-truss community in large and dynamic graphs\",\n        \"Approximate closest community search in networks\",\n        \"Attribute-driven community search\",\n        \"A survey of community search over big graphs\",\n        \"Fair clustering through fairlets\",\n        \"Fair correlation clustering\",\n        \"Fair hierarchical clustering\",\n        \"Efficient (α𝛼\\\\alpha, β𝛽\\\\beta)-core computation: An index-based approach\",\n        \"Efficient fault-tolerant group recommendation using alpha-beta-core\",\n        \"Efficient bitruss decomposition for large-scale bipartite graphs\",\n        \"Bitruss decomposition of bipartite graphs\",\n        \"Peeling bipartite networks for dense subgraph discovery\",\n        \"On finding bicliques in bipartite graphs: a novel algorithm and its application to the integration of diverse biological data types\",\n        \"K-core decomposition of large networks on a single pc\",\n        \"Introduction to algorithms\",\n        \"Fast random walk with restart and its applications\",\n        \"Structsim: Querying structural node similarity at billion scale\",\n        \"Simrank: a measure of structural-context similarity\",\n        \"Analyzing the structure of large graphs\",\n        \"Effective community search over large spatial graphs\",\n        \"Efficient computing of radius-bounded k-cores\",\n        \"Efficient graph hierarchical decomposition with user engagement and tie strength\",\n        \"Exploring finer granularity within the cores: Efficient (k, p)-core computation\",\n        \"Corecube: Core decomposition in multilayer graphs\",\n        \"Effective and efficient community search over large directed graphs\",\n        \"On spatial-aware community search\",\n        \"Finding critical users for social network engagement: The collapsed k-core problem\",\n        \"Olak: an efficient algorithm to prevent unraveling in social networks\",\n        \"Truss-based community search: a truss-equivalence based indexing approach\",\n        \"Finding weighted k-truss communities in large networks\",\n        \"Efficient community search with size constraint\",\n        \"Finding critical users in social communities: The collapsed core and truss problems\",\n        \"Index-based densest clique percolation community search in networks\",\n        \"Efficient algorithms for densest subgraph discovery\",\n        \"A k-shell decomposition method for weighted networks\",\n        \"S-core network decomposition: A generalization of k-core analysis to weighted networks\",\n        \"Scientific collaboration networks. i. network construction and fundamental results\",\n        \"Exploring cohesive subgraphs with vertex engagement and tie strength in bipartite graphs\",\n        \"Efficient (α𝛼\\\\alpha, β𝛽\\\\beta)-core computation in bipartite graphs\",\n        \"Vertex priority based butterfly counting for large-scale bipartite networks\",\n        \"Paper matching with local fairness constraints\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Efficient and Effective Community Search on Large-scale Bipartite Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}