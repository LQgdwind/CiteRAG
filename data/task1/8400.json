{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Spam-T5: Benchmarking Large Language Models for Few-Shot Email Spam Detection\n\nPaper Abstract: Abstract This paper investigates the effectiveness of large language models (LLMs) in email spam detection by comparing prominent models from three distinct families: BERT-like, Sentence Transformers, and Seq2Seq. Additionally, we examine well-established machine learning techniques for spam detection, such as Naïve Bayes and LightGBM, as baseline methods. We assess the performance of these models across four public datasets, utilizing different numbers of training samples (full training set and few-shot settings). Our findings reveal that, in the majority of cases, LLMs surpass the performance of the popular baseline techniques, particularly in few-shot scenarios. This adaptability renders LLMs uniquely suited to spam detection tasks, where labeled samples are limited in number and models require frequent updates. Additionally, we introduce Spam-T5, a Flan-T5 model that has been specifically adapted and fine-tuned for the purpose of detecting email spam. Our results demonstrate that Spam-T5 surpasses baseline models and other LLMs in the majority of scenarios, particularly when there are a limited number of training samples available. Our code is publicly available at https://github.com/jpmorganchase/llm-email-spam-detection.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spam Detection Using Machine Learning and Deep Learning\",\n        \"Contributions to the study of sms spam filtering: New collection and results\",\n        \"Svm-based filtering of e-mail spam with content-specic misclassication costs\",\n        \"Learning to filter unsolicited commercial e-mail\",\n        \"Collaborative email-spam filtering with the hashing trick\",\n        \"Boosting trees for anti-spam email filtering\",\n        \"Scaling instruction-finetuned language models\",\n        \"Support-vector networks\",\n        \"Spam!\",\n        \"Machine learning for email spam filtering: review, approaches and open research problems\",\n        \"Email spam detection using deep learning approach\",\n        \"An assessment of case-based reasoning for spam filtering\",\n        \"Llm.int8(): 8-bit matrix multiplication for transformers at scale\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Support vector machines for spam categorization\",\n        \"Distributional structure\",\n        \"Long short-term memory\",\n        \"Naive bayes spam filtering using word-position-based attributes\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"A review of spam email detection: analysis of spammer strategies and the dataset shift problem\",\n        \"Text classification algorithms: A survey\",\n        \"Sentencepiece: A simple and language independent subword tokenizer and detokenizer for neural text processing\",\n        \"A survey on text classification: From traditional to deep learning\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"A comparative performance study of feature selection methods for the anti-spam filtering domain\",\n        \"Spam filtering with naive bayes – which naive bayes?\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"Gpt-4 technical report\",\n        \"An algorithm for suffix stripping\",\n        \"Improving language understanding by generative pre-training\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Sentence-bert: Sentence embeddings using siamese bert-networks\",\n        \"A Bayesian approach to filtering junk e-mail\",\n        \"Spam detection using bert\",\n        \"A memory-based approach to anti-spam filtering for mailing lists\",\n        \"An ensemble classifier for drifting concepts\",\n        \"Collaborative spam filtering technique based on mime fingerprints\",\n        \"Mpnet: Masked and permuted pre-training for language understanding\",\n        \"Handling concept drifts in incremental learning with support vector machines\",\n        \"Universal spam detection using transfer learning of bert model\",\n        \"Efficient support vector machines for spam detection: A survey\",\n        \"The problem of concept drift: definitions and related work\",\n        \"Efficient few-shot learning without prompts\",\n        \"The nature of statistical learning theory\",\n        \"Attention is all you need\",\n        \"Generalizing from a few examples: A survey on few-shot learning\",\n        \"Finetuned language models are zero-shot learners\",\n        \"On Attacking Statistical Spam Filters\",\n        \"Google’s neural machine translation system: Bridging the gap between human and machine translation\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Spam-T5: Benchmarking Large Language Models for Few-Shot Email Spam Detection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}