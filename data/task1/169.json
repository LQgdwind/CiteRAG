{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Complexity Analysis of Generalized and Fractional Hypertree Decompositions\n\nPaper Abstract: Abstract. Hypertree decompositions (HDs), as well as the more powerful generalized hypertree decompositions (GHDs), and the yet more general fractional hypertree decompositions (FHDs) are hypergraph decomposition methods successfully used for answering conjunctive queries and for solving constraint satisfaction problems. Every hypergraph H𝐻H has a width relative to each of these methods: its hypertree width ℎ𝑤​(H)ℎ𝑤𝐻\\mathit{hw}(H), its generalized hypertree width 𝑔ℎ𝑤​(H)𝑔ℎ𝑤𝐻\\mathit{ghw}(H), and its fractional hypertree width 𝑓ℎ𝑤​(H)𝑓ℎ𝑤𝐻\\mathit{fhw}(H), respectively. It is known that ℎ𝑤​(H)≤kℎ𝑤𝐻𝑘\\mathit{hw}(H)\\leq k can be checked in polynomial time for fixed k𝑘k, while checking 𝑔ℎ𝑤​(H)≤k𝑔ℎ𝑤𝐻𝑘\\mathit{ghw}(H)\\leq k is NP-complete for k≥3𝑘3k\\geq 3. The complexity of checking 𝑓ℎ𝑤​(H)≤k𝑓ℎ𝑤𝐻𝑘\\mathit{fhw}(H)\\leq k for a fixed k𝑘k has been open for over a decade. We settle this open problem by showing that checking 𝑓ℎ𝑤​(H)≤k𝑓ℎ𝑤𝐻𝑘\\mathit{fhw}(H)\\leq k is NP-complete, even for k=2𝑘2k=2. The same construction allows us to prove also the NP-completeness of checking 𝑔ℎ𝑤​(H)≤k𝑔ℎ𝑤𝐻𝑘\\mathit{ghw}(H)\\leq k for k=2𝑘2k=2. After that, we identify meaningful restrictions which make checking for bounded 𝑔ℎ𝑤𝑔ℎ𝑤\\mathit{ghw} or 𝑓ℎ𝑤𝑓ℎ𝑤\\mathit{fhw} tractable or allow for an efficient approximation of the 𝑓ℎ𝑤𝑓ℎ𝑤\\mathit{fhw}.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"EmptyHeaded: A Relational Engine for Graph Processing\",\n        \"Old Techniques for New Join Algorithms: A Case Study in RDF Processing\",\n        \"Marshals, monotone marshals, and hypertree-width\",\n        \"Hypertree width and related hypergraph invariants\",\n        \"GYM: A Multiround Join Algorithm In MapReduce\",\n        \"Design and Implementation of the LogicBlox System\",\n        \"Densité et dimension\",\n        \"Size Bounds and Query Plans for Relational Joins\",\n        \"Complexity and approximation: combinatorial optimization problems and their approximability properties\",\n        \"Aggregation and Ordering in Factorised Databases\",\n        \"An Analytical Study of Large SPARQL Query Logs\",\n        \"Almost optimal set covers in finite VC-dimension\",\n        \"Optimal Implementation of Conjunctive Queries in Relational Data Bases\",\n        \"Conjunctive query containment revisited\",\n        \"Beyond Hypertree Width: Decomposition Methods Without Decompositions\",\n        \"On the fractional covering number of hypergraphs\",\n        \"A unified theory of structural tractability for constraint satisfaction problems\",\n        \"Constraint Satisfaction, Bounded Treewidth, and Finite-Variable Logics\",\n        \"Tree Clustering for Constraint Networks\",\n        \"Bounding the vertex cover number of a hypergraph\",\n        \"Hypergraphs\",\n        \"Degrees of acyclicity for hypergraphs and relational database schemes\",\n        \"HyperBench: A Benchmark and Tool for Hypergraphs and Empirical Findings\",\n        \"General and Fractional Hypertree Decompositions: Hard and Easy Cases\",\n        \"Complexity of K-Tree Structured Constraint Satisfaction Problems\",\n        \"Matchings and covers in hypergraphs\",\n        \"The Tree Projection Theorem and Relational Query Processing\",\n        \"Decomposing combinatorial auctions and set packing problems\",\n        \"Tree projections and constraint optimization problems: Fixed-parameter tractability and parallel algorithms\",\n        \"Hypertree Decompositions and Tractable Queries\",\n        \"Generalized hypertree decompositions: NP-hardness and tractable variants\",\n        \"The complexity of homomorphism and constraint satisfaction problems seen from the other side\",\n        \"Constraint solving via fractional edge covers\",\n        \"When is the evaluation of conjunctive queries tractable?\",\n        \"Decomposing Constraint Satisfaction Problems Using Database Techniques\",\n        \"A Decomposition Methodology for Cyclic Databases\",\n        \"SNRNeg: A social network enabled negotiation service\",\n        \"Joins via Geometric Resolutions: Worst-case and Beyond\",\n        \"FAQ: Questions Asked Frequently\",\n        \"Conjunctive-Query Containment and Constraint Satisfaction\",\n        \"Acyclic Hypergraph Projections\",\n        \"Approximating fractional hypertree width\",\n        \"Tractable Structures for Constraint Satisfaction with Truth Tables\",\n        \"Tractable Hypergraph Properties for Constraint Satisfaction and Conjunctive Queries\",\n        \"Computing hypergraph width measures exactly\",\n        \"Size Bounds for Factorised Representations of Query Results\",\n        \"On the density of families of sets\",\n        \"Duncecap: Query plans using generalized hypertree decompositions\",\n        \"Myhill-Nerode Methods for Hypergraphs\",\n        \"On the uniform convergence of relative frequencies of events to their probabilities\",\n        \"Approximation algorithms\",\n        \"Algorithms for Acyclic Database Schemes\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Complexity Analysis of Generalized and Fractional Hypertree Decompositions, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}