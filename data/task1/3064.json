{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ShapeMOD: Macro Operation Discovery for 3D Shape Programs\n\nPaper Abstract: Abstract. A popular way to create detailed yet easily controllable 3D shapes is via procedural modeling, i.e. generating geometry using programs. Such programs consist of a series of instructions along with their associated parameter values. To fully realize the benefits of this representation, a shape program should be compact and only expose degrees of freedom that allow for meaningful manipulation of output geometry. One way to achieve this goal is to design higher-level macro operators that, when executed, expand into a series of commands from the base shape modeling language. However, manually authoring such macros, much like shape programs themselves, is difficult and largely restricted to domain experts. In this paper, we present ShapeMOD, an algorithm for automatically discovering macros that are useful across large datasets of 3D shape programs. ShapeMOD operates on shape programs expressed in an imperative, statement-based language. It is designed to discover macros that make programs more compact by minimizing the number of function calls and free parameters required to represent an input shape collection. We run ShapeMOD on multiple collections of programs expressed in a domain-specific language for 3D shape structures. We show that it automatically discovers a concise set of macros that abstract out common structural and parametric patterns that generalize over large shape collections. We also demonstrate that the macros found by ShapeMOD improve performance on downstream tasks including shape generative modeling and inferring programs from point clouds. Finally, we conduct a user study that indicates that ShapeMOD’s discovered macros make interactive shape editing more efficient.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning Representations and Generative Models for 3D Point Clouds\",\n        \"ShapeNet: An Information-Rich 3D Model Repository\",\n        \"Learning Generative Models of 3D Structures\",\n        \"Learning Implicit Fields for Generative Shape Modeling\",\n        \"Bootstrap Learning via Modular Concept Discovery\",\n        \"CvxNet: Learnable Convex Decomposition\",\n        \"InverseCSG: Automatic Conversion of 3D Models to CSG Trees\",\n        \"Library Learning for Neurally-Guided Bayesian Program Induction\",\n        \"Write, Execute, Assess: Program Synthesis with a REPL\",\n        \"Learning to Infer Graphics Programs from Hand-Drawn Images\",\n        \"DreamCoder: Growing generalizable, interpretable knowledge with wake-sleep Bayesian program learning\",\n        \"SDM-NET: Deep Generative Network for Structured Deformable Mesh\",\n        \"Learning shape templates with structured implicit functions\",\n        \"AtlasNet: A Papier-Mâché Approach to Learning 3D Surface Generation\",\n        \"GANs Trained by a Two Time-Scale Update Rule Converge to a Local Nash Equilibrium\",\n        \"Inducing Probabilistic Programs by Bayesian Program Merging\",\n        \"ShapeAssembly: Learning to Generate Programs for 3D Shape Structure Synthesis\",\n        \"Tanks and Temples: Benchmarking Large-Scale Scene Reconstruction\",\n        \"Converting 3D Furniture Models to Fabricatable Parts and Connectors\",\n        \"GRASS: Generative recursive autoencoders for shape structures\",\n        \"Neurally-Guided Structure Inference\",\n        \"Bayesian Grammar Learning for Inverse Procedural Modeling\",\n        \"Abstraction of Man-Made Shapes\",\n        \"Structure-Aware Shape Processing\",\n        \"StructureNet: Hierarchical Graph Networks for 3D Shape Generation\",\n        \"PartNet: A Large-Scale Benchmark for Fine-Grained and Hierarchical Part-Level 3D Object Understanding\",\n        \"Procedural Modeling of Buildings\",\n        \"Synthesizing Structured CAD Models with Equality Saturation and Inverse Transformations\",\n        \"Procedural Modeling of Cities\",\n        \"The Algorithmic Beauty of Plants\",\n        \"Pointnet: Deep learning on point sets for 3D classification and segmentation\",\n        \"Example-based Authoring of Procedural Modeling Programs with Structural and Continuous Variability\",\n        \"CSGNet: Neural Shape Parser for Constructive Solid Geometry\",\n        \"Learning Adaptive Hierarchical Cuboid Abstractions of 3D Shape Collections\",\n        \"Learning design patterns with Bayesian grammar induction\",\n        \"Equality Saturation: A New Approach to Optimization\",\n        \"Learning to Infer and Execute 3D Shape Programs\",\n        \"Learning Shape Abstractions by Assembling Volumetric Primitives\",\n        \"Learning to Infer Shape Programs Using Latent Execution Self Training\",\n        \"Fusion 360 Gallery: A Dataset and Environment for Programmatic CAD Reconstruction\",\n        \"Carpentry Compiler\",\n        \"Learning a Probabilistic Latent Space of Object Shapes via 3D Generative-Adversarial Modeling\",\n        \"DSM-Net: Disentangled Structured Mesh Net for Controllable Generation of Fine Geometry\",\n        \"Co-Abstraction of Shape Collections\",\n        \"3D-PRNN: Generating Shape Primitives with Recurrent Neural Networks\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in ShapeMOD: Macro Operation Discovery for 3D Shape Programs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}