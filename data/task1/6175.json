{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Swan: A Neural Engine for Efficient DNN Training on Smartphone SoCs\n\nPaper Abstract: Abstract The need to train DNN models on end-user devices (e.g., smartphones) is increasing with the need to improve data privacy and reduce communication overheads. Unlike datacenter servers with powerful CPUs and GPUs, modern smartphones consist of a diverse collection of specialized cores following a system-on-a-chip (SoC) architecture that together perform a variety of tasks. We observe that training DNNs on a smartphone SoC without carefully considering its resource constraints can not only lead to suboptimal training performance but significantly affect user experience as well. In this paper, we present Swan, a neural engine to optimize DNN training on smartphone SoCs without hurting user experience. Extensive large-scale evaluations show that Swan can improve performance by 1.2−23.3×1.2-23.3\\times over the state-of-the-art.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Android cpusets for apps.\",\n        \"Android NNAPI.\",\n        \"Android sandbox.\",\n        \"Android WakeLock.\",\n        \"Apple Core ML.\",\n        \"Depthwise convolution in intel mkl-dnn.\",\n        \"Federated learning: Collaborative machine learning without centralized training Data.\",\n        \"FedScale Benchmark.\",\n        \"Geekbench android.\",\n        \"Google Open Images Dataset.\",\n        \"Huawei battery recommendations.\",\n        \"Linux CPU affinity.\",\n        \"Passmark android.\",\n        \"Pcmark for android.\",\n        \"PyTorch.\",\n        \"Termux.\",\n        \"Tensorflow: A system for large-scale machine learning.\",\n        \"Flower: A friendly federated learning research framework.\",\n        \"Towards federated learning at scale: System design.\",\n        \"The dangers of rooting: data leakage detection in android applications.\",\n        \"Flame: Federated learning across multi-device environments.\",\n        \"Openmp: an industry standard api for shared-memory programming.\",\n        \"Learning with privacy at scale.\",\n        \"User-specific skin temperature-aware dvfs for smartphones.\",\n        \"A study of mobile device utilization.\",\n        \"An efficient framework for clustered federated learning.\",\n        \"Mistify: Automating dnn model porting for on-device inference at the edge.\",\n        \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding.\",\n        \"Deep residual learning for image recognition.\",\n        \"Focus: Querying large video datasets with low latency and low cost.\",\n        \"Papaya: Practical, private, and scalable federated learning.\",\n        \"Advances and open problems in federated learning.\",\n        \"FedScale: Benchmarking model and system performance of federated learning at scale.\",\n        \"Oort: Efficient federated learning via guided participant selection.\",\n        \"Federated optimization in heterogeneous networks.\",\n        \"Temperature effect and thermal impact in lithium-ion batteries: A review.\",\n        \"Greenhub farmer: Real-world data for android energy mining.\",\n        \"Communication-efficient learning of deep networks from decentralized data.\",\n        \"Federated evaluation and tuning for on-device personalization: System design & applications.\",\n        \"Diagonalwise refactorization: An efficient training method for depthwise convolutions.\",\n        \"Adaptive federated optimization.\",\n        \"2 billion devices and counting: An industry perspective on the state of mobile computer architecture.\",\n        \"Fetchsgd: Communication-efficient federated learning with sketching.\",\n        \"A generic framework for privacy preserving deep learning.\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks.\",\n        \"Fed-ensemble: Improving generalization through model ensembling in federated learning.\",\n        \"Speech commands: A dataset for limited-vocabulary speech recognition.\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices.\",\n        \"Federated heavy hitters discovery with differential privacy.\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Swan: A Neural Engine for Efficient DNN Training on Smartphone SoCs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}