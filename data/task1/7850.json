{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: The YODO algorithm: An efficient computational framework for sensitivity analysis in Bayesian networks\n\nPaper Abstract: Abstract Sensitivity analysis measures the influence of a Bayesian network’s parameters on a quantity of interest defined by the network, such as the probability of a variable taking a specific value. Various sensitivity measures have been defined to quantify such influence, most commonly some function of the quantity of interest’s partial derivative with respect to the network’s conditional probabilities. However, computing these measures in large networks with thousands of parameters can become computationally very expensive. We propose an algorithm combining automatic differentiation and exact inference to efficiently calculate the sensitivity measures in a single pass. It first marginalizes the whole network once, using e.g. variable elimination, and then backpropagates this operation to obtain the gradient with respect to all input parameters. Our method can be used for one-way and multi-way sensitivity analysis and the derivation of admissible regions. Simulation studies highlight the efficiency of our algorithm by scaling it to massive networks with up to 100’000 parameters and investigate the feasibility of generic multi-way analyses. Our routines are also showcased over two medium-sized Bayesian networks: the first modeling the country-risks of a humanitarian crisis, the second studying the relationship between the use of technology and the psychological effects of forced social isolation during the COVID-19 pandemic. An implementation of the methods using the popular machine learning library PyTorch is freely available.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"pgmpy: Probabilistic graphical models using python\",\n        \"Computing Sobol indices in probabilistic graphical models\",\n        \"You only derive once (YODO): Automatic differentiation for efficient sensitivity analysis in Bayesian networks\",\n        \"Discrete Bayesian network classifiers: A survey\",\n        \"Local sensitivity of Bayesian networks to multiple simultaneous parameter shifts\",\n        \"Structure-based categorisation of Bayesian network parameters\",\n        \"Balanced sensitivity functions for tuning multi-dimensional Bayesian network classifiers\",\n        \"The R package stagedtrees for structural learning of stratified staged trees\",\n        \"Sensitivity analysis in discrete Bayesian networks\",\n        \"Sensitivity analysis in Bayesian networks: From single to multiple parameters\",\n        \"A distance measure for bounding probabilistic belief change\",\n        \"Properties of sensitivity analysis of Bayesian belief networks\",\n        \"Sensitivity analysis: An aid for belief-network quantification\",\n        \"A differential approach to inference in Bayesian networks\",\n        \"Modeling and reasoning with Bayesian networks\",\n        \"Certain trends in uncertainty and sensitivity analysis: An overview of software tools and techniques\",\n        \"Bayesian network classifiers\",\n        \"The mitigating role of digital communication technologies on negative affect during the covid-19 outbreak in italy, 2020\",\n        \"Together apart: The mitigating role of digital communication technologies on negative affect during the covid-19 outbreak in italy\",\n        \"A Bayesian Network risk model for estimating coastal maritime transportation delays following an earthquake in British Columbia\",\n        \"Exploring network structure, dynamics, and function using NetworkX\",\n        \"Cautions regarding the interpretation of regression coefficients and hypothesis tests in linear models with interactions\",\n        \"Index for risk management\",\n        \"Making sensitivity analysis computationally efficient\",\n        \"The computational complexity of sensitivity analysis and parameter tuning\",\n        \"Sensitivity analysis for probability assessments in Bayesian networks\",\n        \"Sensitivity analysis beyond linearity\",\n        \"A geometric characterisation of sensitivity analysis in monomial models\",\n        \"Sensitivity analysis in multilinear probabilistic models\",\n        \"Sensitivity and robustness analysis in Bayesian networks with the bnmonitor R package\",\n        \"Sensitivity analysis of a Bayesian network\",\n        \"Bayesian network-based framework for cost-implication assessment of road traffic collisions\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"Probabilistic reasoning in intelligent systems: Networks of plausible inference\",\n        \"Sum-product networks: A new deep architecture\",\n        \"Assessment of humanitarian crises and disaster risk exposure using data-driven Bayesian networks\",\n        \"Co-variation for sensitivity analysis in Bayesian networks: Properties, consequences and alternatives\",\n        \"Duality of graphical models and tensor networks\",\n        \"Uncertainties in conditional probability tables of discrete Bayesian belief networks: A comprehensive review\",\n        \"Sum-product networks: A survey\",\n        \"Who learns better Bayesian network structures: Accuracy and speed of structure learning algorithms\",\n        \"opt_einsum - a Python package for optimizing contraction order for einsum-like expressions\",\n        \"Conditional independence and chain event graphs\",\n        \"Analysing sensitivity data from probabilistic networks\",\n        \"Sensitivity analysis of probabilistic networks\",\n        \"A Bayesian belief network model for the risk assessment and management of premature screen-out during hydraulic fracturing\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in The YODO algorithm: An efficient computational framework for sensitivity analysis in Bayesian networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}