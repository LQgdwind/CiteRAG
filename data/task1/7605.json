{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Real-Time Neural Light Field on Mobile Devices\n\nPaper Abstract: Abstract Recent efforts in Neural Rendering Fields (NeRF) have shown impressive results on novel view synthesis by utilizing implicit neural representation to represent 3D scenes. Due to the process of volumetric rendering, the inference speed for NeRF is extremely slow, limiting the application scenarios of utilizing NeRF on resource-constrained hardware, such as mobile devices. Many works have been conducted to reduce the latency of running NeRF models. However, most of them still require high-end GPU for acceleration or extra storage memory, which is all unavailable on mobile devices. Another emerging direction utilizes the neural light field (NeLF) for speedup, as only one forward pass is performed on a ray to predict the pixel color. Nevertheless, to reach a similar rendering quality as NeRF, the network in NeLF is designed with intensive computation, which is not mobile-friendly. In this work, we propose an efficient network that runs in real-time on mobile devices for neural rendering. We follow the setting of NeLF to train our network. Unlike existing works, we introduce a novel network architecture that runs efficiently on mobile devices with low latency and small size, i.e., saving 15×∼24×15\\times\\sim 24\\times storage compared with MobileNeRF. Our model achieves high-resolution generation while maintaining real-time inference for both synthetic and real-world scenes on mobile devices, e.g., 18.0418.0418.04ms (iPhone 13) for rendering one 1008×75610087561008\\times 756 image of real 3D scenes. Additionally, we achieve similar image quality as NeRF and better quality than MobileNeRF (PSNR 26.1526.1526.15 vs. 25.9125.9125.91 on the real-world forward-facing dataset)111More demo examples in our Webpage..\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Lens studio.\",\n        \"Nerf-factory.\",\n        \"Snap ml.\",\n        \"Deep learning using rectified linear units (relu).\",\n        \"Learning neural light fields with ray-space embedding.\",\n        \"Mip-nerf: A multiscale representation for anti-aliasing neural radiance fields.\",\n        \"Mip-nerf 360: Unbounded anti-aliased neural radiance fields.\",\n        \"Model compression.\",\n        \"Efficient geometry-aware 3d generative adversarial networks.\",\n        \"Mobilenerf: Exploiting the polygon rasterization pipeline for efficient neural field rendering on mobile architectures.\",\n        \"Use coremltools to convert models from third-party libraries to core ml.\",\n        \"Plenoxels: Radiance fields without neural networks.\",\n        \"Fastnerf: High-fidelity neural rendering at 200fps.\",\n        \"The lumigraph.\",\n        \"Stylenerf: A style-based 3d-aware generator for high-resolution image synthesis.\",\n        \"Baking neural radiance fields for real-time view synthesis.\",\n        \"Gaussian error linear units (gelus).\",\n        \"Distilling the knowledge in a neural network.\",\n        \"Headnerf: A realtime nerf-based parametric head model.\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift.\",\n        \"Ray tracing volume densities.\",\n        \"Adam: A method for stochastic optimization.\",\n        \"Light field rendering.\",\n        \"Rethinking vision transformers for mobilenet size and speed.\",\n        \"Efficientformer: Vision transformers at mobilenet speed.\",\n        \"Autoint: Automatic integration for fast neural volume rendering.\",\n        \"Neulf: Efficient novel view synthesis with neural 4d light field.\",\n        \"Neural sparse voxel fields.\",\n        \"Efficient sparse-winograd convolutional neural networks.\",\n        \"Optical models for direct volume rendering.\",\n        \"Local light field fusion: Practical view synthesis with prescriptive sampling guidelines.\",\n        \"Nerf: Representing scenes as neural radiance fields for view synthesis.\",\n        \"Instant neural graphics primitives with a multiresolution hash encoding.\",\n        \"DONeRF: Towards Real-Time Rendering of Compact Neural Radiance Fields using Depth Oracle Networks.\",\n        \"Derf: Decomposed radiance fields.\",\n        \"Kilonerf: Speeding up neural radiance fields with thousands of tiny mlps.\",\n        \"Light field networks: Neural scene representations with single-evaluation rendering.\",\n        \"Attention is all you need.\",\n        \"Ref-nerf: Structured view-dependent appearance for neural radiance fields.\",\n        \"R2l: Distilling neural radiance field to neural light field for efficient novel view synthesis.\",\n        \"Image quality assessment: from error visibility to structural similarity.\",\n        \"Nex: Real-time view synthesis with neural basis expansion.\",\n        \"Nerf-pytorch.\",\n        \"Plenoctrees for real-time rendering of neural radiance fields.\",\n        \"The unreasonable effectiveness of deep features as a perceptual metric.\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Real-Time Neural Light Field on Mobile Devices, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}