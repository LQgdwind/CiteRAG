{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Optimizing Memory Performance of Xilinx FPGAs under Vitis\n\nPaper Abstract: Abstract. Plenty of research efforts have been devoted to FPGA-based acceleration, due to its low latency and high energy efficiency. However, using the original low-level hardware description languages like Verilog to program FPGAs requires generally good knowledge of hardware design details and hand-on experiences. Fortunately, the FPGA community intends to address this low programmability issues. For example, the FPGA vendor Xilinx has provided Vitis to reduce programming efforts needed by FPGA programmers who intends to leverage FPGA’s computing power, with the intention that programming FPGAs is just as easy as programming GPUs. Even though Vitis is proven to increase programmability, we cannot directly obtain high performance without careful design regarding hardware pipeline and memory subsystem. In this paper, we focus on the memory subsystem, comprehensively and systematically benchmarking the effect of optimization methods on memory performance. Upon benchmarking, we quantitatively analyze the typical memory access patterns for a broad range of applications, including AI, HPC, and database. Further, we also provide the corresponding optimization direction for each memory access pattern so as to improve overall performance.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optimizing remote accesses for offloaded kernels: Application to high-level synthesis for FPGA\",\n        \"Bit-vector pattern matching systems on the base of high bandwidth FPGA memory\",\n        \"An empirical evaluation of high-level synthesis languages and tools for database acceleration\",\n        \"AMBA AXI and ACE Protocol Specification\",\n        \"Accelerating equi-join on a CPU-FPGA heterogeneous platform\",\n        \"Understanding performance differences of FPGAs and GPUs\",\n        \"High-level synthesis for FPGAs: From prototyping to deployment\",\n        \"A survey of high level synthesis languages, tools, and compilers for reconfigurable high performance computing\",\n        \"Designing scalable FPGA architectures using high-level synthesis\",\n        \"High-Level Synthesis Design for Stencil Computations on FPGA with High Bandwidth Memory\",\n        \"Spector: An opencl fpga benchmark suite\",\n        \"Chstone: A benchmark program suite for practical c-based high-level synthesis\",\n        \"Hybrid memory cube new DRAM architecture increases density and performance\",\n        \"Hbm (high bandwidth memory) dram technology and architecture\",\n        \"Accelerating Graph Analytics by Co-Optimizing Storage and Access on an FPGA-HMC Platform\",\n        \"Heterogeneous computing meets near-memory acceleration and high-level synthesis in the post-moore era\",\n        \"LFSR-based hashing and authentication\",\n        \"Generic database cost models for hierarchical memory systems\",\n        \"Software-hardware cooperative DRAM bank partitioning for chip multiprocessors\",\n        \"DDR4 SDRAM for Automotive\",\n        \"FPGA: what’s in it for a database?\",\n        \"Efficient FPGA implementation of OpenCL high-performance computing applications via high-level synthesis\",\n        \"Building zynq® accelerators with Vivado® high level synthesis.\",\n        \"Centaur: A framework for hybrid CPU-FPGA databases\",\n        \"Fine-grained DRAM: energy-efficient DRAM for extreme bandwidth systems\",\n        \"FPGA implementation of 8, 16 and 32 bit LFSR with maximum length feedback polynomial using VHDL\",\n        \"Incorporating DRAM access modes into high-level synthesis\",\n        \"FPGA vendor agnostic true random number generator\",\n        \"Improving performance of graph processing on FPGA-DRAM platform by two-level vertex caching\",\n        \"High-bandwidth data memory systems for superscalar processors\",\n        \"Compact FPGA-based true and pseudo random number generators\",\n        \"FPGA based acceleration of the linpack benchmark: A high level code transformation approach\",\n        \"Shuhai: Benchmarking High Bandwidth Memory On FPGAS\",\n        \"Automated systolic array architecture synthesis for high throughput CNN inference on FPGAs\",\n        \"A study of pointer-chasing performance on shared-memory processor-FPGA systems\",\n        \"Vivado Design Suite AXI Reference Guide\",\n        \"SDAccel Environment User Guide\",\n        \"Virtex UltraScale+ HBM FPGA: A Revolutionary Increase in Memory Performance\",\n        \"Vivado Design Suite User Guide(High-Level Synthesis)\",\n        \"Xilinx® Runtime (XRT) Architecture\",\n        \"Alveo Data Center Accelerator Card Platforms\",\n        \"Alveo U280 Data Center Accelerator Card Product Brief\",\n        \"AXI High Bandwidth Memory Controller v1.0\",\n        \"UltraFast Vivado HLS Methodology Guide\",\n        \"Vitis Unified Software Platform Documentation\",\n        \"Frequency domain acceleration of convolutional neural networks on CPU-FPGA shared memory system\",\n        \"Improving the performance of OpenCL-based FPGA accelerator for convolutional neural network\",\n        \"Degree-aware Hybrid Graph Traversal on FPGA-HMC Platform\",\n        \"Rosetta: A realistic high-level synthesis benchmark suite for software programmable fpgas\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Optimizing Memory Performance of Xilinx FPGAs under Vitis, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}