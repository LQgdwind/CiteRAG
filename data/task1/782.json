{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Improving the Effectiveness of Traceability Link Recovery using Hierarchical Bayesian Networks\n\nPaper Abstract: Abstract. Traceability is a fundamental component of the modern software development process that helps to ensure properly functioning, secure programs. Due to the high cost of manually establishing trace links, researchers have developed automated approaches that draw relationships between pairs of textual software artifacts using similarity measures. However, the effectiveness of such techniques are often limited as they only utilize a single measure of artifact similarity and cannot simultaneously model (implicit and explicit) relationships across groups of diverse development artifacts. In this paper, we illustrate how these limitations can be overcome through the use of a tailored probabilistic model. To this end, we design and implement a HierarchiCal PrObabilistic Model for SoftwarE Traceability (Comet) that is able to infer candidate trace links. Comet is capable of modeling relationships between artifacts by combining the complementary observational prowess of multiple measures of textual similarity. Additionally, our model can holistically incorporate information from a diverse set of sources, including developer feedback and transitive (often implicit) relationships among groups of software artifacts, to improve inference accuracy. We conduct a comprehensive empirical evaluation of Comet that illustrates an improvement over a set of optimally configured baselines of ≈\\approx14% in the best case and ≈\\approx5% across all subjects in terms of average precision. The comparative effectiveness of Comet in practice, where optimal configuration is typically not possible, is likely to be higher. Finally, we illustrate Comet’s potential for practical applicability in a survey with developers from Cisco Systems who used a prototype Comet Jenkins plugin.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"CoEST Traceability Datasets\",\n        \"Comet Online Appendix\",\n        \"The Jenkins Automation Framework\",\n        \"Theano Library\",\n        \"Information retrieval models for recovering traceability links between code and documentation\",\n        \"Recovering Traceability Links between Code and Documentation\",\n        \"Software Traceability with Topic Modeling\",\n        \"Maximum a posteriori estimators as a limit of Bayes estimators\",\n        \"Program Understanding and the Concept Assignment Problem\",\n        \"Pattern Recognition and Machine Learning (Information Science and Statistics)\",\n        \"SUS: A quick and dirty usability scale\",\n        \"Event-Based Traceability for Managing Evolutionary Change\",\n        \"A Machine Learning Approach for Tracing Regulatory Codes to Product Specific Requirements\",\n        \"Software and Systems Traceability\",\n        \"Software Traceability: Trends and Future Directions\",\n        \"Achieving Lightweight Trustworthy Traceability\",\n        \"Enhancing software traceability by automatically expanding corpora with relevant documentation\",\n        \"Incremental approach and user feedbacks: a silver bullet for traceability recovery\",\n        \"IR-based traceability recovery processes: An empirical comparison of one-shot and incremental processes\",\n        \"Assessing IR-based traceability recovery tools through controlled experiments\",\n        \"Technique Integration for Requirements Assessment\",\n        \"Estimating the number of remaining links in traceability recovery\",\n        \"Bayesian Data Analysis in Empirical Software Engineering Research\",\n        \"Trace++: A traceability approach to support transitioning to agile software engineering\",\n        \"On integrating orthogonal information retrieval methods to improve traceability recovery\",\n        \"Semantically Enhanced Software Traceability Using Deep Learning Techniques\",\n        \"Cold-start Software Analytics\",\n        \"Advancing candidate link generation for requirements tracing: The study of methods\",\n        \"The No-U-Turn Sampler: Adaptively Setting Path Lengths in Hamiltonian Monte Carlo\",\n        \"Incremental latent semantic indexing for automatic traceability link evolution management\",\n        \"Traceclipse: an eclipse plug-in for traceability link recovery and management\",\n        \"Analyzing closeness of code dependencies for improving IR-based Traceability Recovery\",\n        \"API Change and Fault Proneness: A Threat to the Success of Android Apps\",\n        \"Improving Trace Accuracy Through Data-driven Configuration and Composition of Tracing Features\",\n        \"Enhancing an artefact management system with traceability recovery features\",\n        \"Strategic Traceability for Safety-Critical Projects\",\n        \"A semantic relatedness approach for traceability link recovery\",\n        \"Detecting, classifying, and tracing non-functional software requirements\",\n        \"Recovering Documentation-to-source-code Traceability Links Using Latent Semantic Indexing\",\n        \"Combining Textual and Structural Analysis of Software Artifacts for Traceability Link Recovery\",\n        \"Automatic Traceability Maintenance via Machine Learning Classification\",\n        \"User Experience Design\",\n        \"Machine Learning: A Probabilistic Perspective\",\n        \"A SysML-based Approach to Traceability Management and Design Slicing in Support of Safety Certification: Framework, Tool Support, and Case Studies\",\n        \"Outline of a Theory of Statistical Estimation Based on the Classical Theory of Probability\",\n        \"Managing Security Control Assumptions Using Causal Traceability\",\n        \"Recovering transitive traceability links among software artifacts\",\n        \"On the Equivalence of Information Retrieval Methods for Automated Traceability Link Recovery\",\n        \"Applied statistical decision theory\",\n        \"Traceability in the wild: automatically augmenting incomplete trace links\",\n        \"A large scale study of programming languages and code quality in github\",\n        \"Mind the Gap: Assessing the Conformance of Software Traceability to Relevant Guidelines\",\n        \"Revising Rules to Capture Requirements Traceability Relations: A Machine Learning Approach.\",\n        \"Artur S d’Avila Garcez\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Improving the Effectiveness of Traceability Link Recovery using Hierarchical Bayesian Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}