{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Memory-Based Model Editing at Scale\n\nPaper Abstract: Abstract Even the largest neural networks make errors, and once-correct predictions can become invalid as the world changes. Model editors make local updates to the behavior of base (pre-trained) models to inject updated knowledge or correct undesirable behaviors. Existing model editors have shown promise, but also suffer from insufficient expressiveness: they struggle to accurately model an edit’s intended scope (examples affected by the edit), leading to inaccurate predictions for test inputs loosely related to the edit, and they often fail altogether after many edits. As a higher-capacity alternative, we propose Semi-Parametric Editing with a Retrieval-Augmented Counterfactual Model (SERAC), which stores edits in an explicit memory and learns to reason over them to modulate the base model’s predictions as needed. To enable more rigorous evaluation of model editors, we introduce three challenging language model editing problems based on question answering, fact-checking, and dialogue generation. We find that only SERAC achieves high performance on all three problems, consistently outperforming existing approaches to model editing by a significant margin. Code, data, and additional project information will be made available at https://sites.google.com/view/serac-editing.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Language models are few-shot learners.\",\n        \"Dark experience for general continual learning: a strong, simple baseline.\",\n        \"Reading wikipedia to answer open-domain questions.\",\n        \"Are neural nets modular? Inspecting functional modularity through differentiable weight masks.\",\n        \"Knowledge neurons in pretrained transformers.\",\n        \"Editing factual knowledge in language models.\",\n        \"Transforming question answering datasets into natural language inference datasets.\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding.\",\n        \"A novel connectionist system for unconstrained handwriting recognition.\",\n        \"Neural turing machines, 2014.\",\n        \"Do language models have beliefs? Methods for detecting, updating, and visualizing model beliefs, 2021.\",\n        \"More than a feeling: Benchmarks for sentiment analysis accuracy.\",\n        \"Long short-term memory.\",\n        \"Dense passage retrieval for open-domain question answering.\",\n        \"BeliefBank: Adding memory to a pre-trained language model for a systematic notion of belief.\",\n        \"Generalization through memorization: Nearest neighbor language models.\",\n        \"Colbert: Efficient and effective passage search via contextualized late interaction over bert.\",\n        \"Siamese neural networks for one-shot image recognition.\",\n        \"Natural questions: a benchmark for question answering research.\",\n        \"Mind the gap: Assessing temporal generalization in neural language models.\",\n        \"Latent retrieval for weakly supervised open domain question answering.\",\n        \"Zero-shot relation extraction via reading comprehension.\",\n        \"Retrieval-augmented generation for knowledge-intensive nlp tasks.\",\n        \"Don’t say that! making inconsistent dialogue unlikely with unlikelihood training.\",\n        \"Roberta: A robustly optimized BERT pretraining approach.\",\n        \"Gradient episodic memory for continual learning.\",\n        \"Locating and editing factual associations in GPT, 2022.\",\n        \"Fast model editing at scale.\",\n        \"Control of memory, active perception, and action in minecraft.\",\n        \"Hindsight: Posterior-guided training of retrievers for improved open-ended generation.\",\n        \"Neural episodic control.\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer.\",\n        \"Sentence-bert: Sentence embeddings using siamese bert-networks.\",\n        \"Are red roses red? evaluating consistency of question-answering models.\",\n        \"How much knowledge can you pack into the parameters of a language model?, 2020.\",\n        \"Recipes for building an open-domain chatbot.\",\n        \"Experience replay for continual learning.\",\n        \"Distilbert, a distilled version of bert: smaller, faster, cheaper and lighter.\",\n        \"Colbertv2: Effective and efficient retrieval via lightweight late interaction.\",\n        \"Meta-learning with memory-augmented neural networks.\",\n        \"Get your vitamin C! robust fact verification with contrastive evidence.\",\n        \"Meta-neighborhoods.\",\n        \"Editable neural networks.\",\n        \"Prototypical networks for few-shot learning.\",\n        \"Correcting deep neural networks with small, generalizing patches.\",\n        \"FEVER: a large-scale dataset for fact extraction and VERification.\",\n        \"Matching networks for one shot learning.\",\n        \"Huggingface’s transformers: State-of-the-art natural language processing.\",\n        \"Modifying memories in transformer models, 2020.\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Memory-Based Model Editing at Scale, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}