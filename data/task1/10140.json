{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GEqO: ML-Accelerated Semantic Equivalence Detection\n\nPaper Abstract: Abstract. Large scale analytics engines have become a core dependency for modern data-driven enterprises to derive business insights and drive actions. These engines support a large number of analytic jobs processing huge volumes of data on a daily basis, and workloads are often inundated with overlapping computations across multiple jobs. Reusing common computation is crucial for efficient cluster resource utilization and reducing job execution time. Detecting common computation is the first and key step for reducing this computational redundancy. However, detecting equivalence on large-scale analytics engines requires efficient and scalable solutions that are fully automated. In addition, to maximize computation reuse, equivalence needs to be detected at the semantic level instead of just the syntactic level (i.e., the ability to detect semantic equivalence of seemingly different-looking queries). Unfortunately, existing solutions fall short of satisfying these requirements. In this paper, we take a major step towards filling this gap by proposing GEqO, a portable and lightweight machine-learning-based framework for efficiently identifying semantically equivalent computations at scale. GEqO introduces two machine-learning-based filters that quickly prune out nonequivalent subexpressions and employs a semi-supervised learning feedback loop to iteratively improve its model with an intelligent sampling mechanism. Further, with its novel database-agnostic featurization method, GEqO can transfer the learning from one workload and database to another. Our extensive empirical evaluation shows that, on TPC-DS-like queries, GEqO yields significant performance gains—up to 200×200\\times faster than automated verifiers—and finds up to 2×2\\times more equivalences than optimizer and signature-based equivalence approaches.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Foundations of Databases\",\n        \"Napa: Powering Scalable Data Warehousing with Robust Query Performance at Google\",\n        \"Automated selection of materialized views and indexes in SQL databases\",\n        \"Automated generation of materialized views in oracle\",\n        \"Amazon Redshift: Automated materialized views\",\n        \"Apache Calcite: The foundation for your next high-performance database\",\n        \"Apache Spark: Unified Engine for large-scale data analytics\",\n        \"Materialized views\",\n        \"Axiomatic foundations and algorithms for deciding semantic equivalences of SQL queries\",\n        \"HoTTSQL: Proving query rewrites with univalent SQL semantics\",\n        \"Equivalence of queries combining set and bag-set semantics\",\n        \"The Snowflake Elastic Data Warehouse\",\n        \"Z3: An efficient SMT solver\",\n        \"The Lean theorem prover (system description)\",\n        \"FOL Modeling of Integrity Constraints (Dependencies)\",\n        \"DeepJoin: Joinable Table Discovery with Pre-trained Language Models\",\n        \"A metaprogramming framework for formal verification\",\n        \"Optimizing queries using materialized views: a practical, scalable solution\",\n        \"Deep learning\",\n        \"BigQuery\",\n        \"The Cascades Framework for Query Optimization\",\n        \"The Volcano Optimizer Generator: Extensibility and Efficient Search\",\n        \"Amazon Redshift and the Case for Simpler Data Warehouses\",\n        \"Answering queries using views: A survey\",\n        \"Improved Cardinality Estimation by Learning Queries Containment Rates\",\n        \"Random decision forests\",\n        \"Query-aware locality-sensitive hashing for approximate nearest neighbor search\",\n        \"Containment of conjunctive queries: Beyond relations as sets\",\n        \"The containment problem for real conjunctive queries with inequalities\",\n        \"Selecting subexpressions to materialize at datacenter scale\",\n        \"Production Experiences from Computation Reuse at Microsoft\",\n        \"Computation reuse in analytics job service at Microsoft\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Automatic Detection of Performance Bugs in Database Systems using Equivalent Queries\",\n        \"Efficient and robust approximate nearest neighbor search using hierarchical navigable small world graphs\",\n        \"Bao: Making learned query optimization practical\",\n        \"Neo: A Learned Query Optimizer\",\n        \"Azure Synapse Analytics\",\n        \"Convolutional neural networks over tree structures for programming language processing\",\n        \"Steering Query Optimizers: A Practical Take on Big Data Workloads\",\n        \"Applied linear statistical models\",\n        \"An Empirical Analysis of Deep Learning for Cardinality Estimation\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Introduction to the Coq proof-assistant for practical software verification\",\n        \"High-Dimensional Similarity Query Processing for Data Science\",\n        \"Multiple-Query Optimization\",\n        \"Equality saturation: a new approach to optimization\",\n        \"Multi-Query Optimization Revisited: A Full-Query Algebraic Method\",\n        \"Attention is All you Need\",\n        \"WeTune: Automatic Discovery and Verification of Query Rewrite Rules\",\n        \"Automatic view generation with deep learning and reinforcement learning\",\n        \"SCOPE: Parallel Databases Meet MapReduce\",\n        \"Automated verification of query equivalence using satisfiability modulo theories\",\n        \"SPES: A Symbolic Approach to Proving Query Equivalence Under Bag Semantics\",\n        \"Introduction to semi-supervised learning\",\n        \"KEA: Tuning an Exabyte-Scale Data Infrastructure\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in GEqO: ML-Accelerated Semantic Equivalence Detection, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}