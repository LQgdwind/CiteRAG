{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Subgraph Counting in Subquadratic Time for Bounded Degeneracy Graphs\n\nPaper Abstract: Abstract We study the classic problem of subgraph counting, where we wish to determine the number of occurrences of a fixed pattern graph HùêªH in an input graph Gùê∫G of nùëõn vertices. Our focus is on bounded degeneracy inputs, a rich class of graphs that also characterizes real-world massive networks. Building on the seminal techniques introduced by Chiba-Nishizeki (SICOMP 1985), a recent line of work has built subgraph counting algorithms for bounded degeneracy graphs. Assuming fine-grained complexity conjectures, there is a complete characterization of patterns HùêªH for which linear time subgraph counting is possible. For every r‚â•6ùëü6r\\geq 6, there exists an HùêªH with rùëür vertices that cannot be counted in linear time. In this paper, we initiate a study of subquadratic algorithms for subgraph counting on bounded degeneracy graphs. We prove that when HùêªH has at most 777 vertices, then subgraph counting can be done in O‚Äã(n1.41)ùëÇsuperscriptùëõ1.41O(n^{1.41}) time. Moreover, if this running time can be beaten, it would imply faster algorithms for triangle counting on arbitrary graphs (a bound that has stood for two decades). We also prove that all cycles of length at most 101010 can be counted in O‚Äã(n1.63)ùëÇsuperscriptùëõ1.63O(n^{1.63}) time for bounded degeneracy graphs. Previously, no subquadratic (and superlinear) algorithms were known for subgraph counting on bounded degeneracy graphs. Moreover, if the input is an arbitrary (sparse) graph, the best known algorithms for the above problems run in at least cubic time. Our main conceptual contribution is a framework that reduces subgraph counting in bounded degeneracy graphs to counting smaller cycles in arbitrary graphs. We believe that our results will help build a general theory of subgraph counting for bounded degeneracy graphs.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Efficient graphlet counting for large networks\",\n        \"Finding and counting given length cycles\",\n        \"On non-serial dynamic programming\",\n        \"Graph coloring via degeneracy in streaming and other space-conscious models\",\n        \"Counting graph homomorphisms\",\n        \"Counting subgraphs in degenerate graphs\",\n        \"The complexity of pattern counting in directed graphs, parameterised by the outdegree\",\n        \"Linear time subgraph counting, graph degeneracy, and the chasm at size six\",\n        \"Near-linear time homomorphism counting in bounded degeneracy graphs: The barrier of long induced cycles\",\n        \"Exact and approximate pattern counting in degenerate graphs: New algorithms, hardness results, and complexity dichotomies\",\n        \"Faster subgraph counting in sparse graphs\",\n        \"Faster algorithms for counting subgraphs in sparse graphs\",\n        \"How the degeneracy helps for triangle counting in graph streams\",\n        \"Graph homomorphisms and phase transitions\",\n        \"Homomorphisms are a good basis for counting small subgraphs\",\n        \"Optimal implementation of conjunctive queries in relational data bases\",\n        \"Arboricity and subgraph listing algorithms\",\n        \"The complexity of counting graph homomorphisms\",\n        \"The complexity of counting homomorphisms seen from the other side\",\n        \"On the complexity of# csp\",\n        \"Counting answers to existential questions\",\n        \"Counting h-colorings of partial k-trees\",\n        \"Arboricity and bipartite subgraph listing algorithms\",\n        \"The parameterized complexity of counting problems\",\n        \"Bounded arboricity to determine the local structure of sparse graphs\",\n        \"S-functions for graphs\",\n        \"Which problems have strongly exponential complexity?\",\n        \"Finding a minimum circuit in a graph\",\n        \"A fast and provable method for estimating clique counts using Tur√°n‚Äôs theorem\",\n        \"Path sampling: A fast and provable method for estimating 4-vertex subgraph counts\",\n        \"Finding and Counting Patterns in Sparse Graphs\",\n        \"Operations with structures\",\n        \"Large networks and graph limits, volume 60\",\n        \"Smallest-last ordering and clustering and graph coloring algorithms\",\n        \"Efficient orbit-aware triad and quad census in directed and undirected graphs\",\n        \"Biological network comparison using graphlet degree distribution\",\n        \"Efficiently counting vertex orbits of all 5-vertex subgraphs, by evoke\",\n        \"Escape: Efficiently counting all 5-vertex subgraphs\",\n        \"Graph minors. i. excluding a forest\",\n        \"Graph minors. iii. planar tree-width\",\n        \"Graph minors. ii. algorithmic aspects of tree-width\",\n        \"Counting and finding homomorphisms is universal for parameterized complexity theory\",\n        \"Patterns and anomalies in kùëòk-cores of real-world graphs with applications\",\n        \"Some vignettes on subgraph counting using graph orientations\",\n        \"Scalable subgraph counting: The methods behind the madness: WWW 2019 tutorial\",\n        \"Gaussian elimination is not optimal\",\n        \"Efficient graphlet kernels for large graph comparison\",\n        \"An inequality for the chromatic number of a graph\",\n        \"Finding four-node subgraphs in triangle time\",\n        \"New bounds for matrix multiplication: from alpha to omega\",\n        \"Detecting short directed cycles using rectangular matrix multiplication and dynamic programming\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Subgraph Counting in Subquadratic Time for Bounded Degeneracy Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}