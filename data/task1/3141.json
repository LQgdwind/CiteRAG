{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scalable and Adaptive Graph Neural Networks with Self-Label-Enhanced Training\n\nPaper Abstract: Abstract Besides of the existing neighbor sampling techniques applied on common Graph Neural Networks (GNNs), scalable methods allowing normal minibatch training can more easily scale to large scaled graphs. They decouple graph convolutions and other learnable transformations into preprocessing and a scalable classifier. A complex and graph structure-aware classifier is important to achieve competitive performances. By replacing redundant concatenation operation in Scalable Inception Graph Neural Networks (SIGN) with a more graph structure-aware attention mechanism, we propose Scalable and Adaptive Graph Neural Networks (SAGN). SAGN can adaptively gather neighborhood information among different hops. To further improve scalable GNNs by introducing the existing techniques applied on common GNNs for semi-supervised learning tasks, we propose Self-Label-Enhanced (SLE) training approach combining the self-training approach and label propagation in depth. We add the base model with a scalable label model. Then we iteratively train models and enhance the training set in several stages. To generate input of the label model, we apply label propagation based on one-hot encoded label vectors without inner random masking. We find out that empirically the label leakage has been effectively alleviated with enough propagation depth. The hard pseudo labels in the enhanced training set participate in label propagation with true labels, which propagates model knowledge and label information into the whole graph. Experiments on both inductive and transductive datasets demonstrate that, compared with other sampling-based and sampling-free methods, SAGN achieves better or comparable results and SLE can further improve performance.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Link prediction based on graph neural networks\",\n        \"Learning human-object interactions by graph parsing neural networks\",\n        \"Geometric deep learning on graphs and manifolds using mixture model cnns\",\n        \"Graph neural networks for icecube signal classification\",\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"Neural message passing for quantum chemistry\",\n        \"Disease prediction using graph convolutional networks: application to autism spectrum disorder and alzheimerâ€™s disease\",\n        \"Modeling polypharmacy side effects with graph convolutional networks\",\n        \"ncrna classification with graph convolutional networks\",\n        \"Fake news detection on social media using geometric deep learning\",\n        \"Deciphering interaction fingerprints from protein molecular surfaces using geometric deep learning\",\n        \"Inductive representation learning on large graphs\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Adaptive sampling towards fast graph representation learning\",\n        \"Fastgcn: fast learning with graph convolutional networks via importance sampling\",\n        \"Stochastic training of graph convolutional networks with variance reduction\",\n        \"Layer-dependent importance sampling for training deep and large graph convolutional networks\",\n        \"Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks\",\n        \"Graphsaint: Graph sampling based inductive learning method\",\n        \"Simplifying graph convolutional networks\",\n        \"Sign: Scalable inception graph neural networks\",\n        \"Combining label propagation and simple models out-performs graph neural networks\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Multi-stage self-supervised learning for graph convolutional networks on graphs with few labels\",\n        \"Self-enhanced gnn: Improving graph neural networks using model outputs\",\n        \"Learning from labeled and unlabeled data with label propagation\",\n        \"Label propagation through linear neighborhoods\",\n        \"Efficient label propagation\",\n        \"Unifying graph convolutional neural networks and label propagation\",\n        \"Masked label prediction: Unified massage passing model for semi-supervised classification\",\n        \"Bag of tricks of semi-supervised classification with graph neural networks\",\n        \"Adaptive graph diffusion networks with hop-wise attention\",\n        \"Spectral networks and locally connected networks on graphs\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Transferability of spectral graph convolutional neural networks\",\n        \"Cayleynets: Graph convolutional neural networks with complex rational spectral filters\",\n        \"Graph attention networks\",\n        \"How powerful are graph neural networks?\",\n        \"Going deeper with convolutions\",\n        \"Deep clustering for unsupervised learning of visual features\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Diffusion improves graph learning\",\n        \"Distilling the knowledge in a neural network\",\n        \"Adam: A method for stochastic optimization\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Predicting multicellular function through multi-layer tissue networks\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"node2vec: Scalable feature learning for networks\",\n        \"metapath2vec: Scalable representation learning for heterogeneous networks\",\n        \"Scalable graph neural networks for heterogeneous graphs\",\n        \"Translating embeddings for modeling multi-relational data\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Deep graph library: A graph-centric, highly-performant package for graph neural networks\",\n        \"Algorithms for hyper-parameter optimization\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Scalable and Adaptive Graph Neural Networks with Self-Label-Enhanced Training, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}