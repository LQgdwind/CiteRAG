{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: New approach to MPI program execution time prediction This work is supported by Russian Ministry of Science and Higher Education, grant N 05.613.21.0088, unique ID RFMEFI61318X0088 and the National Key R&D Program of China (2017YFE0123600)\n\nPaper Abstract: Abstract The problem of MPI programs execution time prediction on a certain set of computer installations is considered. This problem emerge with orchestration and provisioning a virtual infrastructure in a cloud computing environment over a heterogeneous network of computer installations: supercomputers or clusters of servers (e.g. mini data centers). One of the key criteria for the effectiveness of the cloud computing environment is the time staying by the program inside the environment. This time consists of the waiting time in the queue and the execution time on the selected physical computer installation, to which the computational resource of the virtual infrastructure is dynamically mapped. One of the components of this problem is the estimation of the MPI programs execution time on a certain set of computer installations. This is necessary to determine a proper choice of order and place for program execution. The article proposes two new approaches to the program execution time prediction problem. The first one is based on computer installations grouping based on the Pearson correlation coefficient. The second one is based on vector representations of computer installations and MPI programs, so-called embeddings. The embedding technique is actively used in recommendation systems, such as for goods (Amazon), for articles (Arxiv.org), for videos (YouTube, Netflix). The article shows how the embeddings technique helps to predict the execution time of a MPI program on a certain set of computer installations.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"NSF GENI cloud enabled architecture for distributed scientific computing\",\n        \"FABRIC: A National-ScaleProgrammable ExperimentalNetwork Infrastructure\",\n        \"Towards SDI-bases Infrastructure for supporting science in Russia\",\n        \"The OPHELIA Project: Supporting Software Development in a Distributed Environment\",\n        \"Federation for FIRE, projects from FP7 programme\",\n        \"Federation for FIRE plus, projects from H2020 programme\",\n        \"Performance evaluation of the Orca shared-object system\",\n        \"GEANT: detector description and simulation tool\",\n        \"MC2E: META-CLOUD COMPUTING ENVIRONMENT FOR HPC\",\n        \"Ridge Regression\",\n        \"Random forest algorithm\",\n        \"Computers and Intractability: A Guide to the Theory of NP-Completeness\",\n        \"Performance prediction of application executed on GPUs using a simple analytical model and machine learning techniques\",\n        \"A Framework for Performance Modeling and Prediction\",\n        \"Modeling and predicting execution time of scientific workflows in the Grid using radial basis function neural network\",\n        \"Performance prediction for complex parallel applications\",\n        \"An investigation into the application of different performance prediction methods to distributed enterprise applications\",\n        \"Contention-sensitive static performance prediction for parallel distributed applications\",\n        \"A regression-based approach to scalability prediction\",\n        \"On performance modeling and prediction in support of scientific workflow optimization\",\n        \"A web-based prophesy automated performance modeling system\",\n        \"A historical application profiler for use by parallel schedulers\",\n        \"Predictive application performance modeling in a computational grid environment\",\n        \"Predicting job start times on clusters\",\n        \"Kojak—a tool set for automatic performance analysis of parallel programs\",\n        \"Statistical prediction of task execution times through analytic benchmarking for scheduling in a heterogeneous environment\",\n        \"Forecasting duration intervals of scientific workflow activities based on time-series patterns\",\n        \"An approach to performance prediction for parallel applications\",\n        \"Methods of inference and learning for performance modeling of parallel applications\",\n        \"Cross-platform performance prediction of parallel applications using partial execution\",\n        \"Pearson’s Correlation Coefficient\",\n        \"Matrix Decomposition\",\n        \"MPI2007 datasets\",\n        \"Accel OpenMP dataset\",\n        \"Update history for MPI2007\",\n        \"MPI program execution time prediction algorithms from the article.\",\n        \"Clique and Independent Set and Clique\",\n        \"Cliques of a graph-variations on the Bron-Kerbosch algorithm\",\n        \"Add link to embedding definition\",\n        \"Word Embedding for Understanding Natural Language: A Survey\",\n        \"Matrix Factorization and Topic Modeling\",\n        \"Recommender system.\",\n        \"Singular Value Decomposition\",\n        \"Tensor decompositions, alternating least squares and other tales\",\n        \"Alternating least squares for personalized ranking\",\n        \"Fifty Shades of Ratings: How to Benefit from a Negative Feedback in Top-N Recommendations Tasks\",\n        \"Machine Learning, Ensemble Methods in\",\n        \"MPI benchmarks\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in New approach to MPI program execution time prediction This work is supported by Russian Ministry of Science and Higher Education, grant N 05.613.21.0088, unique ID RFMEFI61318X0088 and the National Key R&D Program of China (2017YFE0123600), providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}