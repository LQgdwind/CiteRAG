{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Constructing Flow Graphs from Procedural Cybersecurity Texts\n\nPaper Abstract: Abstract Following procedural texts written in natural languages is challenging. We must read the whole text to identify the relevant information or identify the instruction-flow to complete a task, which is prone to failures. If such texts are structured, we can readily visualize instruction-flows, reason or infer a particular step, or even build automated systems to help novice agents achieve a goal. However, this structure recovery task is a challenge because of such textsâ€™ diverse nature. This paper proposes to identify relevant information from such texts and generate information flows between sentences. We built a large annotated procedural text dataset (CTFW) in the cybersecurity domain (3154 documents). This dataset contains valuable instructions regarding software vulnerability analysis experiences. We performed extensive experiments on CTFW with our LM-GNN model variants in multiple settings. To show the generalizability of both this task and our method, we also experimented with procedural texts from two other domains (Maintenance Manual and Cooking), which are substantially different from cybersecurity. Our experiments show that Graph Convolution Network with BERT sentence embeddings outperforms BERT in all three domains.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"copyright in the eu\",\n        \"copyright law of the united states\",\n        \"Graph generation by sequential edge prediction\",\n        \"CTFTime\",\n        \"Investigating the structure of procedural texts for answering how-to questions\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Automatic process model discovery from textual methodologies\",\n        \"Fast graph representation learning with pytorch geometric\",\n        \"Analyzing the explanation structure of procedural texts: Dealing with advice and warnings\",\n        \"Neural message passing for quantum chemistry\",\n        \"Inductive representation learning on large graphs\",\n        \"A graph-based approach to interpreting recurrent neural networks in process mining\",\n        \"Graph star net for generalized multi-task learning\",\n        \"Gaussian error linear units (gelus)\",\n        \"A concept for generating business process models from natural language description\",\n        \"A context-aware citation recommendation model with bert and graph convolutional networks\",\n        \"Predicting the structure of cooking recipes\",\n        \"Social structure construction from the forums using interaction coherence\",\n        \"Mise en place: Unsupervised interpretation of instructional recipes\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"A link prediction method for heterogeneous networks based on bp neural network\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Decoupled weight decay regularization\",\n        \"Vgcn-bert: Augmenting bert with graph embedding for text classification\",\n        \"A framework for procedural text understanding\",\n        \"Exploiting structural and semantic context for commonsense knowledge base completion\",\n        \"Cooking with semantics\",\n        \"Flow graph corpus from recipe texts\",\n        \"The materials science procedural text corpus: Annotating materials synthesis procedures with shallow semantic structures\",\n        \"Multi-modal cooking workflow construction for food recipes\",\n        \"Task sensitive feature exploration and learning for multitask graph classification\",\n        \"Joint structure feature exploration and regularization for multi-task graph classification\",\n        \"A comprehensive survey of edge prediction in social networks: Techniques, parameters and challenges\",\n        \"Learning procedures from text: Codifying how-to procedures in deep neural networks\",\n        \"An approach for process model extraction by multi-grained text classification\",\n        \"Requests: Http for humans\",\n        \"Beautiful soup documentation\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Pre-training of graph augmented transformers for medication recommendation\",\n        \"Procedural knowledge extraction on medline abstracts\",\n        \"spacy v2.0\",\n        \"Cybersecurity knowledge and skills taught in capture the flag challenges\",\n        \"Graph attention networks\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Dynamically fused graph network for multi-hop reasoning\",\n        \"A benchmark for structured procedural knowledge extraction from cooking videos\",\n        \"English recipe flow graph corpus\",\n        \"Creative procedural-knowledge extraction from web design tutorials\",\n        \"Document and word representations generated by graph convolutional network and bert for short text classification\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Graph-bert: Only attention is needed for learning graph representations\",\n        \"Link prediction based on graph neural networks\",\n        \"An end-to-end deep learning architecture for graph classification\",\n        \"Improving relation classification by entity pair graph\",\n        \"Document modeling with graph attention networks for multi-grained machine reading comprehension\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Constructing Flow Graphs from Procedural Cybersecurity Texts, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}