{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Korali: Efficient and Scalable Software Framework for Bayesian Uncertainty Quantification and Stochastic Optimization\n\nPaper Abstract: Abstract We present Korali, an open-source framework for large-scale Bayesian uncertainty quantification and stochastic optimization. The framework relies on non-intrusive sampling of complex multiphysics models and enables their exploitation for optimization and decision-making. In addition, its distributed sampling engine makes efficient use of massively-parallel architectures while introducing novel fault tolerance and load balancing mechanisms. We demonstrate these features by interfacing Korali with existing high-performance software such as Aphros, LAMMPS (CPU-based), and Mirheo (GPU-based) and show efficient scaling for up to 512 nodes of the CSCS Piz Daint supercomputer. Finally, we present benchmarks demonstrating that Korali outperforms related state-of-the-art software frameworks.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The opportunities and challenges of exascale computing\",\n        \"Reducing the Time Complexity of the Derandomized Evolution Strategy with Covariance Matrix Adaptation (CMA-ES) Nikolaus\",\n        \"Learning probability distributions in continuous evolutionary algorithms –a comparative review\",\n        \"Comparison-Based Natural Gradient Optimization in High Dimension\",\n        \"UQLab\",\n        \"EasyVVUQ\",\n        \"ABC-SysBio—approximate Bayesian computation in Python with GPU support\",\n        \"APT-MCMC, a C++/Python implementation of Markov Chain Monte Carlo for parameter identification\",\n        \"PSUADE\",\n        \"The Parallel C++ Statistical Library ‘QUESO’: Quantification of Uncertainty for Estimation, Simulation and Optimization\",\n        \"Stan\",\n        \"ΠΠ\\\\Pi4U: A high performance computing framework for Bayesian uncertainty quantification of complex models\",\n        \"Dakota A Multilevel Parallel Object-Oriented Framework for Design Optimization Parameter Estimation Uncertainty Quantification and Sensitivity Analysis: Version 6.12 Theory Manual.\",\n        \"The International Exascale Software Project Roadmap\",\n        \"Adam: A method for stochastic optimization\",\n        \"The no-u-turn sampler: Adaptively setting path lengths in hamiltonian monte carlo\",\n        \"MultiNest: an efficient and robust Bayesian inference tool for cosmology and particle physics\",\n        \"Bayesian Annealed Sequential Importance Sampling (BASIS): an unbiased version of Transitional Markov Chain Monte Carlo\",\n        \"Korali User Manual\",\n        \"CSCS Piz Daint\",\n        \"Aphros: Parallel solver for incompressible multiphase flows\",\n        \"Aphros: High performance software for multiphase flows with large scale bubble and drop clusters\",\n        \"A cartesian grid embedded boundary method for hyperbolic conservation laws\",\n        \"A hybrid particle volume-of-fluid method for curvature estimation in multiphase flows\",\n        \"Red cell extensional recovery and the determination of membrane viscosity\",\n        \"Load Balancing in Large Scale Bayesian Inference\",\n        \"How should the optical tweezers experiment be used to characterize the red blood cell membrane mechanics?\",\n        \"A Multiscale Red Blood Cell Model with Accurate Mechanics, Rheology, and Dynamics\",\n        \"A new determination of the shear modulus of the human erythrocyte membrane using optical tweezers\",\n        \"Fusing heterogeneous data for the calibration of molecular dynamics force fields using hierarchical Bayesian models\",\n        \"Mirheo: High-performance mesoscale simulations for microfluidics\",\n        \"Bayesian selection for coarse-grained models of liquid water\",\n        \"Fast Parallel Algorithms for Short – Range Molecular Dynamics\",\n        \"APT-MCMC\",\n        \"Bcm: toolkit for bayesian analysis of computational models using samplers\",\n        \"BCM\",\n        \"BioBayes: A software package for Bayesian inference in systems biology\",\n        \"Easyvvuq: A library for verification, validation and uncertainty quantification in high performance computing\",\n        \"MUQ - MIT Uncertainty Quantification Library\",\n        \"Comparison of statistical sampling methods with ScannerBit, the GAMBIT scanning module\",\n        \"Gambit: the global and modular beyond-the-standard-model inference tool\",\n        \"GAMBIT\",\n        \"chaospy\",\n        \"Uncertainpy: A Python Toolbox for Uncertainty Quantification and Sensitivity Analysis in Computational Neuroscience\",\n        \"Uncertainpy\",\n        \"Handbook of uncertainty quantification\",\n        \"UQpy\",\n        \"A runtime library for platform-independent task parallelism\",\n        \"Dakota Optimization and UQ: Explore and Predict with Confidence.\",\n        \"The CMA Evolution Strategy: A Tutorial\",\n        \"An introduction to the COLIN optimization interface.\",\n        \"Massively parallel methods for deep reinforcement learning\",\n        \"Impala: Scalable distributed deep-rl with importance weighted actor-learner architectures\",\n        \"Transitional Markov Chain Monte Carlo Method for Bayesian Model Updating, Model Class Selection, and Model Averaging\",\n        \"MPI Forum\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Korali: Efficient and Scalable Software Framework for Bayesian Uncertainty Quantification and Stochastic Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}