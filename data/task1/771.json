{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: TaBert: Pretraining for Joint Understanding of Textual and Tabular Data\n\nPaper Abstract: Abstract Recent years have witnessed the burgeoning of pretrained language models (LMs) for text-based natural language (NL) understanding tasks. Such models are typically trained on free-form NL text, hence may not be suitable for tasks like semantic parsing over structured data, which require reasoning over both free-form NL questions and structured tabular data (e.g., database tables). In this paper we present TaBert, a pretrained LM that jointly learns representations for NL sentences and (semi-)structured tables. TaBert is trained on a large corpus of 26 million tables and their English contexts. In experiments, neural semantic parsers using TaBert as feature representation layers achieve new best results on the challenging weakly-supervised semantic parsing benchmark WikiTableQuestions, while performing competitively on the text-to-SQL dataset Spider.111Code available at http://fburl.com/TaBERT\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning to generalize from sparse and underspecified rewards\",\n        \"Semantic parsing on freebase from question-answer pairs\",\n        \"Semantic parsing via paraphrasing\",\n        \"Global reasoning over database structures for text-to-sql parsing\",\n        \"Representing schema structure with graph neural networks for text-to-sql parsing\",\n        \"TabFact: A large-scale dataset for table-based fact verification\",\n        \"Ryansql: Recursively applying sketch-based slot fillings for complex text-to-sql in cross-domain databases\",\n        \"Iterative search for weakly supervised semantic parsing\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"coarse-to-fine decoding for neural semantic parsing\",\n        \"Assessing bertâ€™s syntactic abilities\",\n        \"Towards complex text-to-sql in cross-domain database with intermediate representation\",\n        \"X-sql: reinforce schema representation with context\",\n        \"Gaussian error linear units (gelus)\",\n        \"A comprehensive exploration on wikisql with table-aware word contextualization\",\n        \"Spanbert: Improving pre-training by representing and predicting spans\",\n        \"Neural semantic parsing with type constraints for semi-structured tables\",\n        \"A large public corpus of web tables containing time and context metadata\",\n        \"Memory augmented policy optimization for program synthesis and semantic parsing\",\n        \"Attention strategies for multi-source sequence-to-sequence learning\",\n        \"K-bert: Enabling language representation with knowledge graph\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Learned in translation: Contextualized word vectors\",\n        \"context2vec: Learning generic context embedding with bidirectional LSTM\",\n        \"Neural programmer: Inducing latent programs with gradient descent\",\n        \"Compositional semantic parsing on semi-structured tables\",\n        \"Deep contextualized word representations\",\n        \"Knowledge enhanced contextual word representations\",\n        \"Squad: 100, 000+ questions for machine comprehension of text\",\n        \"Incsql: Training incremental text-to-sql parsers with non-deterministic oracles\",\n        \"Table cell search for question answering\",\n        \"Semantic parsing with syntax- and table-aware SQL generation\",\n        \"Ernie: Enhanced representation through knowledge integration\",\n        \"Attention is all you need\",\n        \"Rat-sql: Relation-aware schema encoding and linking for text-to-sql parsers\",\n        \"Learning semantic parsers from denotations with latent structured alignments and abstract programs\",\n        \"Robust text-to-sql generation with execution-guided decoding\",\n        \"The Zephyr abstract syntax description language\",\n        \"Building a semantic parser overnight\",\n        \"SQLNet: Generating structured queries from natural language without reinforcement learning\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Semantic parsing via staged query graph generation: Question answering with knowledge base\",\n        \"TRANX: A transition-based neural abstract syntax parser for semantic parsing and code generation\",\n        \"TypeSQL: Knowledge-based type-aware neural text-to-sql generation\",\n        \"Syntaxsqlnet: Syntax tree networks for complex and cross-domain text-to-sql task\",\n        \"Spider: A large-scale human-labeled dataset for complex and cross-domain semantic parsing and text-to-sql task\",\n        \"Learning to parse database queries using inductive logic programming\",\n        \"Editing-based sql query generation for cross-domain context-dependent questions\",\n        \"Macro grammars and holistic triggering for efficient semantic parsing\",\n        \"Ernie: Enhanced language representation with informative entities\",\n        \"Semantics-aware bert for language understanding\",\n        \"Seq2SQL: Generating structured queries from natural language using reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in TaBert: Pretraining for Joint Understanding of Textual and Tabular Data, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}