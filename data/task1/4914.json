{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: UniLog: Deploy One Model and Specialize it for All Log Analysis Tasks\n\nPaper Abstract: Abstract Log analysis is vitally important for network reliability, and many log-based tasks are derived to analysis logs, such as anomaly detection, failure prediction, log compression, and log summarization. It is desired to have a unified log analysis framework to simultaneously run all these log analysis tasks on one model to achieve deployment convenience, superior task performance, and low maintenance cost. However, due to severe challenges about log data heterogeneity across devices, pioneer works design specialized algorithms for each task. In this work, we formulate the log analysis as a multi-task learning approach and propose to train a single model that can perform various log analysis tasks. We name this unified log analysis approach as UniLog. To effectively build an UniLog model, we propose a log data pretrained transformer to utilize the enormous unlabeled log data, and a corresponding multi-log-tasking finetune strategy for various log analysis tasks. Extensive experiments across seven datasets on four log analysis tasks demonstrate that UniLog achieves remarkable performance.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A survey on automated log analysis for reliability engineering\",\n        \"The cost of downtime at the worldâ€™s biggest online retailer\",\n        \"Loganomaly: Unsupervised detection of sequential and quantitative anomalies in unstructured logs\",\n        \"Prefix: Switch failure prediction in datacenter networks\",\n        \"Logzip: extracting hidden structures via iterative clustering for log compression\",\n        \"Summarizing unstructured logs in online services\",\n        \"Attention is all you need\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Do transformers really perform bad for graph representation?\",\n        \"Student customized knowledge distillation: Bridging the gap between student and teacher\",\n        \"Make a long image short: Adaptive token length for vision transformers\",\n        \"Fine-tune bert for extractive summarization\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Language models are unsupervised multitask learners\",\n        \"Language models are few-shot learners\",\n        \"Logbert: Log anomaly detection via bert\",\n        \"Deeplog: Anomaly detection and diagnosis from system logs through deep learning\",\n        \"bzip\",\n        \"7zip\",\n        \"zip\",\n        \"Logparse: Making log parsing adaptive through word classification\",\n        \"Deep residual learning for image recognition\",\n        \"To tune or not to tune? adapting pretrained representations to diverse tasks\",\n        \"Universal language model fine-tuning for text classification\",\n        \"Arithmetic coding for data compression\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Layer normalization\",\n        \"On layer normalization in the transformer architecture\",\n        \"Neural architecture search without training\",\n        \"Language modeling with gated convolutional networks\",\n        \"Searching for activation functions\",\n        \"Fixing weight decay regularization in adam\",\n        \"What supercomputers say: A study of five system logs\",\n        \"Largescale system problem detection by mining console logs\",\n        \"Experience report: System log analysis for anomaly detection\",\n        \"Loghub: a large collection of system log datasets towards automated log analytics\",\n        \"Tools and benchmarks for automated log parsing\",\n        \"Log clustering based problem identification for online service systems\",\n        \"Mining invariants from console logs for system problem detection\",\n        \"Textrank: Bringing order into text\",\n        \"Predicting computer system failures using support vector machines\",\n        \"Using hidden semi-markov models for effective online failure prediction\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Logtransfer: Cross-system log anomaly detection for software systems with transfer learning\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in UniLog: Deploy One Model and Specialize it for All Log Analysis Tasks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}