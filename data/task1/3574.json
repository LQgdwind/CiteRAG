{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Bridging Subword Gaps in Pretrain-Finetune Paradigm for Natural Language Generation\n\nPaper Abstract: Abstract A well-known limitation in pretrain-finetune paradigm lies in its inflexibility caused by the one-size-fits-all vocabulary. This potentially weakens the effect when applying pretrained models into natural language generation (NLG) tasks, especially for the subword distributions between upstream and downstream tasks with significant discrepancy. Towards approaching this problem, we extend the vanilla pretrain-finetune pipeline with an extra embedding transfer step. Specifically, a plug-and-play embedding generator is introduced to produce the representation of any input token, according to pre-trained embeddings of its morphologically similar ones. Thus, embeddings of mismatch tokens in downstream tasks can also be efficiently initialized. We conduct experiments on a variety of NLG tasks under the pretrain-finetune fashion. Experimental results and extensive analyses show that the proposed strategy offers us opportunities to feel free to transfer the vocabulary, leading to more efficient and better performed downstream NLG models. 111We release the code at https://github.com/ DeepLearnXMU/embedding-transfer\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"In neural machine translation, what does transfer learning transfer?\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"METEOR: An automatic metric for MT evaluation with improved correlation with human judgments\",\n        \"Scheduled sampling for sequence prediction with recurrent neural networks\",\n        \"Revisiting character-based neural machine translation with capacity and compression\",\n        \"An embarrassingly simple approach for transfer learning from pretrained language models\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Pre-trained language model representations for language generation\",\n        \"Robust Backed-off Estimation of Out-of-Vocabulary Embeddings\",\n        \"Distilling the knowledge in a neural network\",\n        \"Exploring dynamic selection of branch expansion orders for code generation\",\n        \"Regularized training objective for continued training for domain adaptation in neural machine translation\",\n        \"Adam: A method for stochastic optimization\",\n        \"Trivial transfer learning for low-resource neural machine translation\",\n        \"Subword regularization: Improving neural network translation models with multiple subword candidates\",\n        \"SentencePiece: A simple and language independent subword tokenizer and detokenizer for neural text processing\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Automatic evaluation of summaries using n-gram co-occurrence statistics\",\n        \"GLGE: A new general language generation evaluation benchmark\",\n        \"An iterative multi-source mutual knowledge transfer framework for machine reading comprehension\",\n        \"Multilingual denoising pre-training for neural machine translation\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Transfer learning across low-resource, related languages for neural machine translation\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Mimicking word embeddings using subword RNNs\",\n        \"BPE-dropout: Simple and effective subword regularization\",\n        \"Language models are unsupervised multitask learners\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"Leveraging pre-trained checkpoints for sequence generation tasks\",\n        \"Subword-based Compact Reconstruction of Word Embeddings\",\n        \"Vocabulary adaptation for domain adaptation in neural machine translation\",\n        \"Neural machine translation of rare words with subword units\",\n        \"Neural abstractive text summarization with sequence-to-sequence models\",\n        \"Exploring discriminative word-level domain contexts for multi-domain neural machine translation\",\n        \"UM-corpus: A large English-Chinese parallel corpus for statistical machine translation\",\n        \"Attention is all you need\",\n        \"Self-paced learning for neural machine translation\",\n        \"On the inference calibration of neural machine translation\",\n        \"Googleâ€™s neural machine translation system: Bridging the gap between human and machine translation\",\n        \"Improving tree-structured decoder training for code generation via mutual learning\",\n        \"BERT post-training for review reading comprehension and aspect-based sentiment analysis\",\n        \"Enhancing pre-trained language representations with rich knowledge for machine reading comprehension\",\n        \"Xlnet: Generalized autoregressive pretraining for language understanding\",\n        \"Domain transfer based data augmentation for neural query translation\",\n        \"Multi-domain neural machine translation with word-level domain context discrimination\",\n        \"Generalizing word embeddings using bag of subwords\",\n        \"Incorporating BERT into neural machine translation\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Bridging Subword Gaps in Pretrain-Finetune Paradigm for Natural Language Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}