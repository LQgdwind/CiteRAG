{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ReAGent: A Model-agnostic Feature Attribution Method for Generative Language Models\n\nPaper Abstract: Abstract Feature attribution methods (FAs), such as gradients and attention, are widely employed approaches to derive the importance of all input features to the model predictions. Existing work in natural language processing has mostly focused on developing and testing FAs for encoder-only language models (LMs) in classification tasks. However, it is unknown if it is faithful to use these FAs for decoder-only models on text generation, due to the inherent differences between model architectures and task settings respectively. Moreover, previous work has demonstrated that there is no ‘one-wins-all’ FA across models and tasks. This makes the selection of a FA computationally expensive for large LMs since input importance derivation often requires multiple forward and backward passes including gradient computations that might be prohibitive even with access to large compute. To address these issues, we present a model-agnostic FA for generative LMs called Recursive Attribution Generator (ReAGent). Our method updates the token importance distribution in a recursive manner. For each update, we compute the difference in the probability distribution over the vocabulary for predicting the next token between using the original input and using a modified version where a part of the input is replaced with RoBERTa predictions. Our intuition is that replacing an important token in the context should have resulted in a larger change in the model’s confidence in predicting the token than replacing an unimportant token. Our method can be universally applied to any generative LM without accessing internal model weights or additional training and fine-tuning, as most other FAs require. We extensively compare the faithfulness of ReAGent with seven popular FAs across six decoder-only LMs of various sizes. The results show that our method consistently provides more faithful token importance distributions.111Our code: https://github.com/casszhao/ReAGent\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Quantifying Attention Flow in Transformers\",\n        \"Towards better understanding of gradient-based attribution methods for Deep Neural Networks\",\n        \"A Diagnostic Study of Explainability Techniques for Text Classification\",\n        \"ferret: a Framework for Benchmarking Explainers on Transformers\",\n        \"On pixel-wise explanations for non-linear classifier decisions by layer-wise relevance propagation\",\n        \"RANCC: Rationalizing Neural Networks via Concept Clustering\",\n        \"Interpretable Neural Predictions with Differentiable Binary Variables\",\n        \"The elephant in the interpretability room: Why use attention as explanation when we have saliency methods?\",\n        \"Language models are few-shot learners\",\n        \"Flexible instance-specific rationalization of nlp models\",\n        \"Black-box language model explanation by context length probing\",\n        \"Extraction of salient sentences from labelled documents\",\n        \"ERASER: A Benchmark to Evaluate Rationalized NLP Models\",\n        \"Evaluating Saliency Methods for Neural Language Models\",\n        \"The gem benchmark: Natural language generation, its evaluation and metrics\",\n        \"A Markovian approach to distributional semantics with application to semantic compositionality\",\n        \"The out-of-distribution problem in explainability and search methods for feature importance explanations\",\n        \"Towards Faithfully Interpretable NLP Systems: How Should We Define and Evaluate Faithfulness?\",\n        \"Learning to Faithfully Rationalize by Construction\",\n        \"Attention vs non-attention for a Shapley-based explanation method\",\n        \"The (un) reliability of saliency methods\",\n        \"Investigating the influence of noise and distractors on the interpretation of neural networks\",\n        \"Investigating sanity checks for saliency maps with image and text classification\",\n        \"TellMeWhy: A Dataset for Answering Why-Questions in Narratives\",\n        \"Word Embeddings through Hellinger PCA\",\n        \"Rationalizing Neural Predictions\",\n        \"Visualizing and understanding neural models in NLP\",\n        \"A unified approach to interpreting model predictions\",\n        \"Selfcheckgpt: Zero-resource black-box hallucination detection for generative large language models\",\n        \"Efficient estimation of word representations in vector space\",\n        \"Comparing Automatic and Human Evaluation of Local Explanations for Text Classification\",\n        \"Robust Explainability: A tutorial on gradient-based attribution methods for deep neural networks\",\n        \"Semantic Classification with Distributional Kernels\",\n        \"Double Trouble: How to not Explain a Text Classifier’s Decisions Using Counterfactuals Synthesized by Masked Language Models?\",\n        \"Language models are unsupervised multitask learners\",\n        \"Why should i trust you? Explaining the predictions of any classifier\",\n        \"Inseq: An Interpretability Toolkit for Sequence Generation Models\",\n        \"Grad-cam: Visual explanations from deep networks via gradient-based localization\",\n        \"Is Attention Interpretable?\",\n        \"Axiomatic attribution for deep networks\",\n        \"Rationales for Sequential Predictions\",\n        \"Mesh-Transformer-JAX: Model-Parallel Implementation of Transformer Language Model with JAX\",\n        \"GPT-J-6B: A 6 Billion Parameter Autoregressive Language Model\",\n        \"Characterising Measures of Lexical Distributional Similarity\",\n        \"Transformers: State-of-the-Art Natural Language Processing\",\n        \"Using Annotator Rationales to Improve Machine Learning for Text Categorization\",\n        \"Visualizing and understanding convolutional networks\",\n        \"OPT: Open Pre-trained Transformer Language Models\",\n        \"Incorporating Attribution Importance for Improving Faithfulness Metrics\",\n        \"On the Impact of Temporal Concept Drift on Model Explanations\",\n        \"ExSum: From Local Explanations to Model Understanding\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in ReAGent: A Model-agnostic Feature Attribution Method for Generative Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}