{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Goal-Space Planning with Subgoal Models\n\nPaper Abstract: Abstract This paper investigates a new approach to model-based reinforcement learning using background planning: mixing (approximate) dynamic programming updates and model-free updates, similar to the Dyna architecture. Background planning with learned models is often worse than model-free alternatives, such as Double DQN, even though the former uses significantly more memory and computation. The fundamental problem is that learned models can be inaccurate and often generate invalid states, especially when iterated many steps. In this paper, we avoid this limitation by constraining background planning to a set of (abstract) subgoals and learning only local, subgoal-conditioned models. This goal-space planning (GSP) approach is more computationally efficient, naturally incorporates temporal abstraction for faster long-horizon planning and avoids learning the transition dynamics entirely. We show that our GSP algorithm can learn significantly faster than a Double DQN baseline in a variety of situations.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DisTop: Discovering a Topological representation to learn diverse and rewarding skills\",\n        \"Model-Based Reinforcement Learning with Value-Targeted Regression\",\n        \"The Option Keyboard: Combining Skills in Reinforcement Learning\",\n        \"Fast reinforcement learning with generalized policy updates\",\n        \"Openai gym\",\n        \"Forethought and hindsight in credit assignment\",\n        \"SNAP:Successor Entropy based Incremental Subgoal Discovery for Adaptive Navigation\",\n        \"Sparse graphical memory for robust planning\",\n        \"Iterative Value-Aware Model Learning\",\n        \"Value-Aware Loss Function for Model-based Reinforcement Learning\",\n        \"TreeQN and ATreeC: Differentiable Tree-Structured Models for Deep Reinforcement Learning\",\n        \"Planning-Augmented Hierarchical Reinforcement Learning\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n        \"Successor Feature Landmarks for Long-Horizon Goal-Conditioned Reinforcement Learning\",\n        \"Mapping state space using landmarks for universal goal reaching\",\n        \"Hallucinating Value: A Pitfall of Dyna-style Planning with Imperfect Environment Models\",\n        \"What can I do here? A Theory of Affordances in Reinforcement Learning\",\n        \"Landmark-Guided Subgoal Generation in Hierarchical Reinforcement Learning\",\n        \"Skill discovery in continuous reinforcement learning domains using skill chaining\",\n        \"Investigating Compounding Prediction Errors in Learned Dynamics Models\",\n        \"Approximate Value Iteration with Temporally Extended Actions\",\n        \"Automatic discovery of subgoals in reinforcement learning using diverse density\",\n        \"Prioritized sweeping: Reinforcement learning with less data and less time\",\n        \"Planning with Goal-Conditioned Policies\",\n        \"Value prediction network\",\n        \"Organizing Experience: A Deeper Look at Replay Mechanisms for Sample-Based Planning in Continuous State Domains\",\n        \"Hill climbing on value estimates for search-control in Dyna\",\n        \"What you should know about approximate dynamic programming\",\n        \"Universal Value Function Approximators\",\n        \"Mastering Atari, Go, chess and shogi by planning with a learned model\",\n        \"Sample-based learning and search with permanent and transient memories\",\n        \"The Predictron: End-To-End Learning and Planning\",\n        \"Intrinsically Motivated Reinforcement Learning\",\n        \"Learning Options in Reinforcement Learning\",\n        \"Reinforcement Learning: An Introduction\",\n        \"Between MDPs and semi-MDPs: A framework for temporal abstraction in reinforcement learning\",\n        \"Horde: A scalable real-time architecture for learning knowledge from unsupervised sensorimotor interaction\",\n        \"An emphatic approach to the problem of off-policy temporal-difference learning\",\n        \"Reward-Respecting Subtasks for Model-Based Reinforcement Learning\",\n        \"Integrated architectures for learning planning and reacting based on approximating dynamic programming\",\n        \"Model regularization for stable sample roll-outs\",\n        \"Self-Correcting Models for Model-Based Reinforcement Learning\",\n        \"Value Iteration Networks\",\n        \"Deep reinforcement learning with double q-learning\",\n        \"When to use parametric models in reinforcement learning?\",\n        \"Improving Multi-Step Prediction of Learned Time Series Models\",\n        \"Planning with Expectation Models\",\n        \"Average-Reward Learning and Planning with Options\",\n        \"Imagination-Augmented Agents for Deep Reinforcement Learning\",\n        \"Unifying task specification in reinforcement learning\",\n        \"Prioritization Methods for Accelerating MDP Solvers\",\n        \"World Model as a Graph: Learning Latent Landmarks for Planning\",\n        \"Generating adjacency-constrained subgoals in hierarchical reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Goal-Space Planning with Subgoal Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}