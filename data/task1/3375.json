{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GraphFM: Graph Factorization Machines for Feature Interaction Modeling\n\nPaper Abstract: Abstract Factorization machine (FM) is a prevalent approach to modeling pairwise (second-order) feature interactions when dealing with high-dimensional sparse data. However, on the one hand, FM fails to capture higher-order feature interactions suffering from combinatorial expansion. On the other hand, taking into account interactions between every pair of features may introduce noise and degrade prediction accuracy. To solve the problems, we propose a novel approach Graph Factorization Machine (GraphFM) by naturally representing features in the graph structure. In particular, we design a mechanism to select the beneficial feature interactions and formulate them as edges between features. Then the proposed model which integrates the interaction function of FM into the feature aggregation strategy of Graph Neural Network (GNN), can model arbitrary-order feature interactions on the graph-structured features by stacking layers. Experimental results on several real-world datasets have demonstrated the rationality and effectiveness of our proposed approach. The code and data is available at https://github.com/CRIPAC-DIG/GraphCTR\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Tensorflow: A system for large-scale machine learning\",\n        \"Graph-to-sequence learning using gated graph neural networks\",\n        \"Higher-order factorization machines\",\n        \"Spectral networks and locally connected networks on graphs\",\n        \"Revisiting graph based collaborative filtering: A linear residual graph convolutional network approach\",\n        \"Wide & deep learning for recommender systems\",\n        \"Learning phrase representations using rnn encoder-decoder for statistical machine translation\",\n        \"Latent patient network learning for automatic diagnosis\",\n        \"Dressing as a whole: Outfit compatibility learning based on node-wise graph neural networks\",\n        \"An introduction to roc analysis\",\n        \"Learning discrete structures for graph neural networks\",\n        \"A new model for learning in graph domains\",\n        \"Deepfm: a factorization-machine based neural network for ctr prediction\",\n        \"Inductive representation learning on large graphs\",\n        \"Neural factorization machines for sparse predictive analytics\",\n        \"Neural collaborative filtering\",\n        \"Semi-supervised learning with graph learning-convolutional networks\",\n        \"Field-aware factorization machines for ctr prediction\",\n        \"Differentiable graph module (dgm) graph convolutional networks\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Situation recognition with graph neural networks\",\n        \"Adaptive graph convolutional neural networks\",\n        \"Gated graph sequence neural networks\",\n        \"Interpretable click-through rate prediction through hierarchical attention\",\n        \"Fi-gnn: Modeling feature interactions via graph neural networks for ctr prediction\",\n        \"Constructing narrative event evolutionary graph for script event prediction\",\n        \"xdeepfm: Combining explicit and implicit feature interactions for recommender systems\",\n        \"Autofis: Automatic feature interaction selection in factorization models for click-through rate prediction\",\n        \"Encoding sentences with graph convolutional networks for semantic role labeling\",\n        \"The more you know: Using knowledge graphs for image classification\",\n        \"3d graph neural networks for rgbd semantic segmentation\",\n        \"Product-based neural networks for user response prediction\",\n        \"Factorization machines\",\n        \"Factorization machines with libfm\",\n        \"The graph neural network model\",\n        \"Deep crossing: Web-scale modeling without manually crafted combinatorial features\",\n        \"Autoint: Automatic feature interaction learning via self-attentive neural networks\",\n        \"Detecting beneficial feature interactions for recommender systems via graph neural networks\",\n        \"Hoafm: A high-order attentive factorization machine for ctr prediction\",\n        \"Attention is all you need\",\n        \"Graph attention networks\",\n        \"Deep & cross network for ad click predictions\",\n        \"Neural graph collaborative filtering\",\n        \"Am-gcn: Adaptive multi-channel graph convolutional networks\",\n        \"Session-based recommendation with graph neural networks\",\n        \"Graph information bottleneck\",\n        \"A quest for structure: jointly learning the graph structure and semi-supervised classification\",\n        \"Attentional factorization machines: Learning the weight of feature interactions via attention networks\",\n        \"How powerful are graph neural networks?\",\n        \"Graph convolutional networks for text classification\",\n        \"Graph-revised convolutional network\",\n        \"Understanding deep learning requires rethinking generalization\",\n        \"Deep learning over multi-field categorical data: A case study on user response prediction\",\n        \"Gnnguard: Defending graph neural networks against adversarial attacks\",\n        \"Data augmentation for graph neural networks\",\n        \"Robust graph representation learning via neural sparsification\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in GraphFM: Graph Factorization Machines for Feature Interaction Modeling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}