{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DBA bandits: Self-driving index tuning under ad-hoc, analytical workloads with safety guarantees\n\nPaper Abstract: Abstract Automating physical database design has remained a long-term interest in database research due to substantial performance gains afforded by optimised structures. Despite significant progress, a majority of today’s commercial solutions are highly manual, requiring offline invocation by database administrators (DBAs) who are expected to identify and supply representative training workloads. Even the latest advancements like query stores provide only limited support for dynamic environments. This status quo is untenable: identifying representative static workloads is no longer realistic; and physical design tools remain susceptible to the query optimiser’s cost misestimates (stemming from unrealistic assumptions such as attribute value independence and uniformity of data distribution). We propose a self-driving approach to online index selection that eschews the DBA and query optimiser, and instead learns the benefits of viable structures through strategic exploration and direct performance observation. We view the problem as one of sequential decision making under uncertainty, specifically within the bandit learning setting. Multi-armed bandits balance exploration and exploitation to provably guarantee average performance that converges to a fixed policy that is optimal with perfect hindsight. Our comprehensive empirical results demonstrate up to 75% speed-up on shifting and ad-hoc workloads and 28% speed-up on static workloads compared against a state-of-the-art commercial tuning tool.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Database tuning advisor for Microsoft SQL Server 2005\",\n        \"DB2 design advisor: Integrated automatic physical database design\",\n        \"Automatic SQL tuning in oracle 10g\",\n        \"Self-managing technology in IBM DB2 universal database\",\n        \"Self-driving database management systems\",\n        \"Relational cloud: a database service for the cloud\",\n        \"SQLVM: Performance isolation in multi-tenant relational database-as-a-service\",\n        \"Automatically indexing millions of databases in microsoft azure sql database\",\n        \"AI Meets AI: Leveraging Query Executions to Improve Index Recommendations\",\n        \"Self-tuning database systems: A decade of progress\",\n        \"On-Line Index Selection for Shifting Workloads\",\n        \"Autonomous query-driven index tuning\",\n        \"An Online Approach to Physical Design Tuning\",\n        \"To tune or not to tune?: A lightweight physical design alerter\",\n        \"Query-based workload forecasting for self-driving database management systems\",\n        \"The researcher’s guide to the data deluge: Querying a scientific database in just a few seconds\",\n        \"Big Data Exploration\",\n        \"NoDB: Efficient query execution on raw data files\",\n        \"AutoAdmin “what-if”; index analysis utility\",\n        \"Implications of certain assumptions in database performance evaluation\",\n        \"How good are query optimizers, really?\",\n        \"Automated physical designers: What you see is (not) what you get\",\n        \"Robustness in automatic physical database design\",\n        \"Smooth scan: Robust access path selection without cardinality estimation\",\n        \"The case for automatic database administration using deep reinforcement learning\",\n        \"Contextual combinatorial bandit and its application on diversified online recommendation\",\n        \"A contextual-bandit approach to personalized news article recommendation\",\n        \"A note on bounding regret of the C2UCB contextual combinatorial bandit\",\n        \"An analysis of approximations for maximizing submodular set functions–i\",\n        \"TPC-H benchmark\",\n        \"TPC-H skew benchmark\",\n        \"The making of tpc-ds\",\n        \"Star schema benchmark\",\n        \"Index merging\",\n        \"Regularized cost-model oblivious database tuning with reinforcement learning\",\n        \"Deep reinforcement learning with double q-learning\",\n        \"Database cracking\",\n        \"Self-Selecting, Self-Tuning, Incrementally Optimized Indexes\",\n        \"The case for learned index structures\",\n        \"Fiting-tree: A data-aware index structure\",\n        \"The data calculator: Data structure design and cost synthesis from first principles and learned cost models\",\n        \"Cuttlefish: A lightweight primitive for adaptive query processing\",\n        \"SkinnerDB: Regret-bounded query evaluation via reinforcement learning\",\n        \"Learned cardinalities: Estimating correlated joins with deep learning\",\n        \"Towards a hands-free query optimizer through deep learning\",\n        \"Towards learning a partitioning advisor with deep reinforcement learning\",\n        \"Warm-starting contextual bandits: Robustly combining supervised and bandit feedback\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in DBA bandits: Self-driving index tuning under ad-hoc, analytical workloads with safety guarantees, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}