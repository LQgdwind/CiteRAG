{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: YOLObile: Real-Time Object Detection on Mobile Devices via Compression-Compilation Co-Design\n\nPaper Abstract: Abstract The rapid development and wide utilization of object detection techniques have aroused attention on both accuracy and speed of object detectors. However, the current state-of-the-art object detection works are either accuracy-oriented using a large model but leading to high latency or speed-oriented using a lightweight model but sacrificing accuracy. In this work, we propose YOLObile framework, a real-time object detection on mobile devices via compression-compilation co-design. A novel block-punched pruning scheme is proposed for any kernel size. To improve computational efficiency on mobile devices, a GPU-CPU collaborative scheme is adopted along with advanced compiler-assisted optimizations. Experimental results indicate that our pruning scheme achieves 14×\\times compression rate of YOLOv4 with 49.0 mAP. Under our YOLObile framework, we achieve 17 FPS inference speed using GPU on Samsung Galaxy S20. By incorporating our proposed GPU-CPU collaborative scheme, the inference speed is increased to 19.1 FPS, and outperforms the original YOLOv4 by 5×\\times speedup. Source code is at: https://github.com/nightsnack/YOLObile.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"YOLOv4: Optimal Speed and Accuracy of Object Detection\",\n        \"Enhancing sparsity by reweighted ℓ1subscriptℓ1\\\\ell_{1} minimization\",\n        \"TVM: An automated end-to-end optimizing compiler for deep learning\",\n        \"Introduction to algorithms\",\n        \"NeST: A neural network synthesis tool based on a grow-and-prune paradigm\",\n        \"Centernet: Keypoint triplets for object detection\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Fast r-cnn\",\n        \"Rich feature hierarchies for accurate object detection and semantic segmentation\",\n        \"Dynamic network surgery for efficient dnns\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Mcdnn: An approximation-based execution framework for deep stream processing under resource constraints\",\n        \"Mask r-cnn\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Filter pruning via geometric median for deep convolutional neural networks acceleration\",\n        \"Channel pruning for accelerating very deep neural networks\",\n        \"YOLO-LITE: a real-time object detection algorithm optimized for non-GPU computers\",\n        \"Deepmon: Mobile gpu-based deep learning framework for continuous vision applications\",\n        \"Deepx: A software accelerator for low-power deep learning inference on mobile devices\",\n        \"DeepEar: robust smartphone audio sensing in unconstrained acoustic environments using deep learning\",\n        \"Cornernet-lite: Efficient keypoint based object detection\",\n        \"Compressing convolutional neural networks via factorized convolutional filters\",\n        \"Tiny-DSOD: Lightweight object detection for resource-restricted usages\",\n        \"Focal loss for dense object detection\",\n        \"Microsoft coco: Common objects in context\",\n        \"Deep learning for generic object detection: A survey\",\n        \"AutoCompress: An Automatic DNN Structured Pruning Framework for Ultra-High Compression Rates\",\n        \"SSD: Single Shot MultiBox Detector\",\n        \"Learning efficient convolutional networks through network slimming\",\n        \"Rethinking the Value of Network Pruning\",\n        \"Pconv: The missing but desirable sparsity in dnn weight pruning for real-time execution on mobile devices\",\n        \"Tiny but Accurate: A Pruned, Quantized and Optimized Memristor Crossbar Framework for Ultra Efficient DNN Implementation\",\n        \"2pfpce: Two-phase filter pruning based on conditional entropy\",\n        \"Patdnn: Achieving real-time DNN execution on mobile devices with pattern-based weight pruning\",\n        \"You only look once: Unified, real-time object detection\",\n        \"YOLO9000: better, faster, stronger\",\n        \"Yolov3: An incremental improvement\",\n        \"Admm-nn: An algorithm-hardware co-design framework of dnns using alternating direction methods of multipliers\",\n        \"Faster r-cnn: Towards real-time object detection with region proposal networks\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"DeepCache: Principled Cache for Mobile Deep Vision\",\n        \"Deepsense: A unified deep learning framework for time-series mobile sensing data processing\",\n        \"Nisp: Pruning networks using neuron importance score propagation\",\n        \"A systematic dnn weight pruning framework using alternating direction method of multipliers\",\n        \"Variational convolutional neural network pruning\",\n        \"Improving Deep Neural Network Sparsity through Decorrelation Regularization\",\n        \"Discrimination-aware channel pruning for deep neural networks\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in YOLObile: Real-Time Object Detection on Mobile Devices via Compression-Compilation Co-Design, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}