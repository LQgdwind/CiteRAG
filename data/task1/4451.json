{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Co-training an Unsupervised Constituency Parser with Weak Supervision\n\nPaper Abstract: Abstract We introduce a method for unsupervised parsing that relies on bootstrapping classifiers to identify if a node dominates a specific span in a sentence. There are two types of classifiers, an inside classifier that acts on a span, and an outside classifier that acts on everything outside of a given span. Through self-training and co-training with the two classifiers, we show that the interplay between them helps improve the accuracy of both, and as a result, effectively parse. A seed bootstrapping technique prepares the data to train these classifiers. Our analyses further validate that such an approach in conjunction with weak supervision using prior branching knowledge of a known language (left/right-branching) and minimal heuristics injects strong inductive bias into the parser, achieving 63.1 F1 on the English (PTB) test set. In addition, we show the effectiveness of our architecture by evaluating on treebanks for Chinese (CTB) and Japanese (KTB) and achieve new state-of-the-art results.111Our code and pre-trained models are available at https://github.com/Nickil21/weakly-supervised-parsing.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Self-training and co-training\",\n        \"Trainable grammars for speech recognition\",\n        \"Combining labeled and unlabeled data with co-training\",\n        \"An all-subtrees approach to unsupervised parsing\",\n        \"Keyaki treebank: phrase structure with functional information for japanese\",\n        \"Unsupervised parsing via constituency tests\",\n        \"A fast and accurate dependency parser using neural networks\",\n        \"Consistent unsupervised estimators for anchored PCFGs\",\n        \"Viterbi training for PCFGs: Hardness results and competitiveness of uniform initialization\",\n        \"A provably correct learning algorithm for latent-variable PCFGs\",\n        \"Experiments with spectral learning of latent-variable PCFGs\",\n        \"Spectral learning of latent-variable pcfgs: Algorithms and sample complexity\",\n        \"Unsupervised parsing with S-DIORA: Single tree encoding for deep inside-outside recursive autoencoders\",\n        \"Unsupervised labeled parsing with deep inside-outside recursive autoencoders\",\n        \"Recurrent neural network grammars\",\n        \"Assessing BERTâ€™s syntactic abilities\",\n        \"Parsing algorithms and metrics\",\n        \"A structural probe for finding syntax in word representations\",\n        \"Deep inside-outside recursive autoencoder with all-span objective\",\n        \"What does BERT learn about the structure of language?\",\n        \"Unsupervised learning of PCFGs with normalizing flow\",\n        \"Are pre-trained language models aware of phrases? simple but strong baselines for grammar induction\",\n        \"Compound probabilistic context-free grammars for grammar induction\",\n        \"Unsupervised recurrent neural network grammars\",\n        \"A generative constituent-context model for improved grammar induction\",\n        \"Natural language grammar induction with a generative constituent-context model\",\n        \"Heads-up! unsupervised constituency parsing via self-attention heads\",\n        \"An empirical comparison of unsupervised constituency parsing methods\",\n        \"Roberta: A robustly optimized BERT pretraining approach\",\n        \"Building a large annotated corpus of English: The Penn Treebank\",\n        \"Effective self-training for parsing\",\n        \"When is self-training effective for parsing?\",\n        \"Self-training for unsupervised parsing with PRPN\",\n        \"Spectral unsupervised parsing with additive tree metrics\",\n        \"PaLM: A hybrid parser and language model\",\n        \"Neural language modeling by jointly learning syntax and lexicon\",\n        \"Ordered neurons: Integrating tree structures into recurrent neural networks\",\n        \"On the role of supervision in unsupervised constituency parsing\",\n        \"Learning syntax from naturally-occurring bracketings\",\n        \"Breaking out of local optima with count transforms and model recombination: A study in grammar induction\",\n        \"Bootstrapping statistical parsers from small datasets\",\n        \"Tree transformer: Integrating tree structures into self-attention\",\n        \"The penn chinese treebank: Phrase structure annotation of a large corpus\",\n        \"Unsupervised word sense disambiguation rivaling supervised methods\",\n        \"The return of lexical dependencies: Neural lexicalized PCFGs\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Co-training an Unsupervised Constituency Parser with Weak Supervision, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}