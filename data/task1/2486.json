{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DynaComm: Accelerating Distributed CNN Training between Edges and Clouds through Dynamic Communication Scheduling\n\nPaper Abstract: Abstract To reduce uploading bandwidth and address privacy concerns, deep learning at the network edge has been an emerging topic. Typically, edge devices collaboratively train a shared model using real-time generated data through the Parameter Server framework. Although all the edge devices can share the computing workloads, the distributed training processes over edge networks are still time-consuming due to the parameters and gradients transmission procedures between parameter servers and edge devices. Focusing on accelerating distributed Convolutional Neural Networks (CNNs) training at the network edge, we present DynaComm, a novel scheduler that dynamically decomposes each transmission procedure into several segments to achieve optimal layer-wise communications and computations overlapping during run-time. Through experiments, we verify that DynaComm manages to achieve optimal layer-wise scheduling for all cases compared to competing strategies while the model accuracy remains untouched.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The design and implementation of a wireless video surveillance system\",\n        \"Videoedge: Processing camera streams using hierarchical clusters\",\n        \"An analysis of adversarial attacks and defenses on autonomous driving models\",\n        \"The architectural implications of autonomous driving: Constraints and acceleration\",\n        \"Joint deep learning for pedestrian detection\",\n        \"Soprotector: Safeguard privacy for native SO files in evolving mobile iot applications\",\n        \"Iot wearable sensor and deep learning: An integrated approach for personalized human activity recognition in a smart home environment\",\n        \"A survey on an emerging area: Deep learning for smart city data\",\n        \"Security and privacy for mobile edge caching: Challenges and solutions\",\n        \"Achieving democracy in edge intelligence: A fog-based collaborative learning scheme\",\n        \"A survey on mobile edge computing: The communication perspective\",\n        \"Edge computing: Vision and challenges\",\n        \"Scaling distributed machine learning with the parameter server\",\n        \"Mxnet: A flexible and efficient machine learning library for heterogeneous distributed systems\",\n        \"Poseidon: An efficient communication architecture for distributed deep learning on GPU clusters\",\n        \"Scalable distributed DL training: Batching communication and computation\",\n        \"Overlapping communication with computation in parameter server for scalable DL training\",\n        \"Application of combinatorial programming to a class of all-zero-one integer programming problems\",\n        \"Privacy-preserving deep learning\",\n        \"A framework for distributed deep neural network training with heterogeneous computing platforms\",\n        \"Neurosurgeon: Collaborative intelligence between the cloud and mobile edge\",\n        \"Learning iot in edge: Deep learning for the internet of things with edge computing\",\n        \"Jointdnn: An efficient training and inference engine for intelligent mobile cloud computing services\",\n        \"Modnn: Local distributed mobile computing system for deep neural network\",\n        \"Deepthings: Distributed adaptive deep learning inference on resource-constrained iot edge clusters\",\n        \"Hiertrain: Fast hierarchical edge AI learning with hybrid parallelism in mobile-edge-cloud computing\",\n        \"Tictac: Accelerating distributed deep learning with communication scheduling\",\n        \"Geryon: Accelerating distributed CNN training by network-level flow scheduling\",\n        \"Priority-based parameter propagation for distributed dnn training\",\n        \"A generic communication scheduler for distributed DNN training acceleration\",\n        \"Terngrad: Ternary gradients to reduce communication in distributed deep learning\",\n        \"QSGD: communication-efficient SGD via gradient quantization and encoding\",\n        \"Deep gradient compression: Reducing the communication bandwidth for distributed training\",\n        \"Adacomp : Adaptive residual gradient compression for data-parallel distributed training\",\n        \"Gradient sparsification for communication-efficient distributed optimization\",\n        \"Gaia: Geo-distributed machine learning approaching LAN speeds\",\n        \"Improving the performance of distributed tensorflow with RDMA\",\n        \"irdma: Efficient use of RDMA in distributed deep learning systems\",\n        \"Preemptive all-reduce scheduling for expediting distributed DNN training\",\n        \"TASO: optimizing deep learning computation with automatic generation of graph substitutions\",\n        \"Ansor: Generating high-performance tensor programs for deep learning\",\n        \"The theory of dynamic programming\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Going deeper with convolutions\",\n        \"Inception-v4, inception-resnet and the impact of residual connections on learning\",\n        \"Deep residual learning for image recognition\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Learning multiple layers of features from tiny images\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in DynaComm: Accelerating Distributed CNN Training between Edges and Clouds through Dynamic Communication Scheduling, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}