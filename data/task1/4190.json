{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: LightNER: A Lightweight Tuning Paradigm for Low-resource NER via Pluggable Prompting\n\nPaper Abstract: Abstract Most NER methods rely on extensive labeled data for model training, which struggles in the low-resource scenarios with limited training data. Existing dominant approaches usually suffer from the challenge that the target domain has different label sets compared with a resource-rich source domain, which can be concluded as class transfer and domain transfer. In this paper, we propose a lightweight tuning paradigm for low-resource NER via pluggable prompting (LightNER). Specifically, we construct the unified learnable verbalizer of entity categories to generate the entity span sequence and entity categories without any label-specific classifiers, thus addressing the class transfer issue. We further propose a pluggable guidance module by incorporating learnable parameters into the self-attention layer as guidance, which can re-modulate the attention and adapt pre-trained weights. Note that we only tune those inserted module with the whole parameter of the pre-trained language model fixed, thus, making our approach lightweight and flexible for low-resource scenarios and can better transfer knowledge across domains. Experimental results show that LightNER can obtain comparable performance in the standard supervised setting and outperform strong baselines in low-resource settings111Code is in https://github.com/zjunlp/DeepKE/tree/main/example/ner/few-shot..\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Interpretability analysis for named entity recognition to understand system predictions and how they can improve\",\n        \"PADA: Example-based Prompt Learning for on-the-fly Adaptation to Unseen Domains\",\n        \"Language models are few-shot learners\",\n        \"What does bert look at? an analysis of bertâ€™s attention\",\n        \"Template-based named entity recognition using BART\",\n        \"Hierarchically-refined label attention network for sequence labeling\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Few-nerd: A few-shot named entity recognition dataset\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Few-shot classification in named entity recognition task\",\n        \"Making pre-trained language models better few-shot learners\",\n        \"Uncertainty-aware label refinement for sequence labeling\",\n        \"Parameter-efficient transfer learning with diff pruning\",\n        \"Multi-domain joint semantic frame parsing using bi-directional RNN-LSTM\",\n        \"PTR: prompt tuning with rules for text classification\",\n        \"Convex: Data-efficient and few-shot slot labeling\",\n        \"Few-shot slot tagging with collapsed dependency transfer and label-enhanced task-adaptive projection network\",\n        \"Parameter-efficient transfer learning for NLP\",\n        \"Few-shot named entity recognition: A comprehensive study\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"BART: denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"A unified MRC framework for named entity recognition\",\n        \"Sequence-to-nuggets: Nested entity mention detection via anchor-region networks\",\n        \"Asgard: A portable architecture for multilingual dialogue systems\",\n        \"Noisy-labeled NER with confidence estimation\",\n        \"GPT understands, too\",\n        \"GCDT: A global context enhanced deep transition architecture for sequence labeling\",\n        \"Template-free prompt tuning for few-shot NER\",\n        \"End-to-end sequence labeling via bi-directional lstm-cnns-crf\",\n        \"What to pre-train on? efficient intermediate task selection\",\n        \"Introduction to the conll-2003 shared task: Language-independent named entity recognition\",\n        \"Movement pruning: Adaptive sparsity by fine-tuning\",\n        \"Automatically identifying words that can serve as labels for few-shot text classification\",\n        \"Exploiting cloze-questions for few-shot text classification and natural language inference\",\n        \"Get to the point: Summarization with pointer-generator networks\",\n        \"Autoprompt: Eliciting knowledge from language models with automatically generated prompts\",\n        \"Fast and accurate entity recognition with iterated dilated convolutions\",\n        \"Attention is all you need\",\n        \"Label-agnostic sequence labeling by copying nearest neighbors\",\n        \"LUKE: deep contextualized entity representations with entity-aware self-attention\",\n        \"A unified generative framework for various NER subtasks\",\n        \"Design challenges and misconceptions in neural sequence labeling\",\n        \"Simple and effective few-shot named entity recognition with structured nearest neighbor learning\",\n        \"Named entity recognition as dependency parsing\",\n        \"Side-tuning: A baseline for network adaptation via additive side networks\",\n        \"Openue: An open toolkit of universal extraction from text\",\n        \"Plug-tagger: A pluggable sequence labeling framework using language models\",\n        \"Example-based named entity recognition\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in LightNER: A Lightweight Tuning Paradigm for Low-resource NER via Pluggable Prompting, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}