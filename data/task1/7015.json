{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Asdot: Any-Shot Data-to-Text Generation with Pretrained Language Models\n\nPaper Abstract: Abstract Data-to-text generation is challenging due to the great variety of the input data in terms of domains (e.g., finance vs sports) or schemata (e.g., diverse predicates). Recent end-to-end neural methods thus require substantial training examples to learn to disambiguate and describe the data. Yet, real-world data-to-text problems often suffer from various data-scarce issues: one may have access to only a handful of or no training examples, and/or have to rely on examples in a different domain or schema. To fill this gap, we propose Any-Shot Data-to-Text (Asdot), a new approach flexibly applicable to diverse settings by making efficient use of any given (or no) examples. Asdot consists of two steps, data disambiguation and sentence fusion, both of which are amenable to be solved with off-the-shelf pretrained language models (LMs) with optional finetuning. In the data disambiguation stage, we employ the prompted GPT-3 model to understand possibly ambiguous triples from the input data and convert each into a short sentence with reduced ambiguity. The sentence fusion stage then uses an LM like T5 to fuse all the resulting sentences into a coherent paragraph as the final description. We evaluate extensively on various datasets in different scenarios, including the zero-/few-/full-shot settings, and generalization to unseen predicates and out-of-domain data. Experimental results show that Asdot consistently achieves significant improvement over baselines, e.g., a 30.81 BLEU gain on the DART dataset under the zero-shot setting.111Code available at https://github.com/szxiangjn/any-shot-data2text\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"METEOR: An automatic metric for MT evaluation with improved correlation with human judgments\",\n        \"Learning to split and rephrase from wikipedia edit history\",\n        \"Neural data-to-text generation: A comparison between pipeline and end-to-end architectures\",\n        \"KGPT: Knowledge-grounded pre-training for data-to-text generation\",\n        \"Few-shot NLG with pre-trained language model\",\n        \"Control prefixes for text generation\",\n        \"Handling divergent reference texts when evaluating table-to-text generation\",\n        \"Creating training corpora for NLG micro-planners\",\n        \"DiscoFuse: A large-scale dataset for discourse-based sentence fusion\",\n        \"Using natural-language processing to produce weather forecasts\",\n        \"TableGPT: Few-shot table-to-text generation with table structure reconstruction and content matching\",\n        \"Have your text and use it too! end-to-end neural data-to-text generation with semantic fidelity\",\n        \"Getting to production with few-shot natural language generation models\",\n        \"Template guided text generation for task-oriented dialogue\",\n        \"Text-to-text pre-training for data-to-text tasks\",\n        \"Neural pipeline for zero-shot data-to-text generation\",\n        \"Adam: A method for stochastic optimization\",\n        \"Statistical significance tests for machine translation evaluation\",\n        \"Text generation from knowledge graphs with graph transformers\",\n        \"Computing krippendorffâ€™s alpha-reliability\",\n        \"Design of a knowledge-based report generator\",\n        \"Neural text generation from structured data with application to the biography domain\",\n        \"Few-shot knowledge graph-to-text generation with pretrained language models\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Data-to-text generation with style imitation\",\n        \"Step-by-step: Separating planning from realization in neural data-to-text generation\",\n        \"Dart: Open-domain structured data record to text generation\",\n        \"The E2E dataset: New challenges for end-to-end generation\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Compositional semantic parsing on semi-structured tables\",\n        \"A call for clarity in reporting BLEU scores\",\n        \"Data-to-text generation with content selection and planning\",\n        \"Data-to-text generation with entity modeling\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Building applied natural language generation systems\",\n        \"Investigating pretrained language models for graph-to-text generation\",\n        \"Bleurt: Learning robust metrics for text generation\",\n        \"Sumtime-mousam: Configurable marine weather forecast generator\",\n        \"Few-shot table-to-text generation with prototype memory\",\n        \"Describing a knowledge base\",\n        \"Semantically conditioned lstm-based natural language generation for spoken dialogue systems\",\n        \"Challenges in data-to-document generation\",\n        \"Bertscore: Evaluating text generation with bert\",\n        \"Bridging the structural gap between encoding and decoding for data-to-text generation\",\n        \"Seq2sql: Generating structured queries from natural language using reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Asdot: Any-Shot Data-to-Text Generation with Pretrained Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}