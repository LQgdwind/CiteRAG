{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Supervising the Multi-Fidelity Race of Hyperparameter Configurations\n\nPaper Abstract: Abstract Multi-fidelity (gray-box) hyperparameter optimization techniques (HPO) have recently emerged as a promising direction for tuning Deep Learning methods. However, existing methods suffer from a sub-optimal allocation of the HPO budget to the hyperparameter configurations. In this work, we introduce DyHPO, a Bayesian Optimization method that learns to decide which hyperparameter configuration to train further in a dynamic race among all feasible configurations. We propose a new deep kernel for Gaussian Processes that embeds the learning curve dynamics, and an acquisition function that incorporates multi-budget information. We demonstrate the significant superiority of DyHPO against state-of-the-art hyperparameter optimization methods through large-scale experiments comprising 50 datasets (Tabular, Image, NLP) and diverse architectures (MLP, CNN/NAS, RNN).\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"DEHB: evolutionary hyberband for scalable, robust and efficient hyperparameter optimization\",\n        \"Accelerating neural architecture search using performance prediction\",\n        \"Algorithms for hyper-parameter optimization\",\n        \"Hyperparameter optimization of deep neural networks: Combining hyperband with bayesian model selection\",\n        \"Learning to learn without gradient descent by gradient descent\",\n        \"Statistical comparisons of classifiers over multiple data sets\",\n        \"BERT: pre-training of deep bidirectional transformers for language understanding\",\n        \"Speeding up automatic hyperparameter optimization of deep neural networks by extrapolation of learning curves\",\n        \"Nas-bench-201: Extending the scope of reproducible neural architecture search\",\n        \"BOHB: robust and efficient hyperparameter optimization at scale\",\n        \"Forward and reverse gradient-based hyperparameter optimization\",\n        \"Gpytorch: Blackbox matrix-matrix gaussian process inference with GPU acceleration\",\n        \"Probabilistic rollouts for learning curve extrapolation across hyperparameter settings\",\n        \"Non-stochastic best arm identification and hyperparameter optimization\",\n        \"Efficient global optimization of expensive black-box functions\",\n        \"Gaussian process bandit optimisation with multi-fidelity evaluations\",\n        \"Multi-fidelity bayesian optimisation with continuous approximations\",\n        \"Neural architecture search with bayesian optimisation and optimal transport\",\n        \"Tuning hyperparameters without grad students: Scalable and robust bayesian optimisation with dragonfly\",\n        \"Adam: A method for stochastic optimization\",\n        \"Fast bayesian optimization of machine learning hyperparameters on large datasets\",\n        \"Learning curve prediction with bayesian neural networks\",\n        \"A system for massively parallel hyperparameter tuning\",\n        \"Hyperband: A novel bandit-based approach to hyperparameter optimization\",\n        \"Multi-fidelity bayesian optimization via deep neural networks\",\n        \"Optimizing millions of hyperparameters by implicit differentiation\",\n        \"Gradient-based hyperparameter optimization through reversible learning\",\n        \"Trimtuner: Efficient optimization of machine learning jobs in the cloud via sub-sampling\",\n        \"Hyperjump: Accelerating hyperband via risk modelling\",\n        \"Using a thousand optimization tasks to learn hyperparameter search strategies\",\n        \"Provably efficient online hyperparameter optimization with population-based bandits\",\n        \"Scalable hyperparameter transfer learning\",\n        \"Multi-information source optimization\",\n        \"Bayesian optimization with a neural network kernel\",\n        \"Practical bayesian optimization of machine learning algorithms\",\n        \"Gaussian process optimization in the bandit setting: No regret and experimental design\",\n        \"Multi-task bayesian optimization\",\n        \"Freeze-thaw bayesian optimization\",\n        \"Multi-fidelity bayesian optimization with max-value entropy search and its parallelization\",\n        \"Combination of hyperband and bayesian optimization for hyperparameter optimization in deep learning\",\n        \"Deep kernel learning\",\n        \"Bayesian optimization combined with incremental evaluation for neural network architecture optimization\",\n        \"Few-shot bayesian optimization with deep kernel surrogates\",\n        \"Learning to rank learning curves\",\n        \"Auto-pytorch: Multi-fidelity metalearning for efficient and robust autodl\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Supervising the Multi-Fidelity Race of Hyperparameter Configurations, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}