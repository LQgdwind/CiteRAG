{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scaling Knowledge Graph Embedding Models\n\nPaper Abstract: Abstract. Developing scalable solutions for training Graph Neural Networks (GNNs) for link prediction tasks is challenging due to the high data dependencies which entail high computational cost and huge memory footprint. We propose a new method for scaling training of knowledge graph embedding models for link prediction to address these challenges. Towards this end, we propose the following algorithmic strategies: self-sufficient partitions, constraint-based negative sampling, and edge mini-batch training. Both, partitioning strategy and constraint-based negative sampling, avoid cross partition data transfer during training. In our experimental evaluation, we show that our scaling solution for GNN-based knowledge graph embedding models achieves a 16x speed up on benchmark datasets while maintaining a comparable model performance as non-distributed methods on standard metrics.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Distributed training framework for TensorFlow, Keras, PyTorch, and Apache MXNet.\",\n        \"A High Performance Message Passing Library.\",\n        \"RaySGD: Distributed Training Wrappers.\",\n        \"Large-scale Simple Question Answering with Memory Networks.\",\n        \"Translating Embeddings for Modeling Multi-Relational Data.\",\n        \"KBGAN: Adversarial Learning for Knowledge Graph Embeddings.\",\n        \"One Trillion Edges: Graph Processing at Facebook-Scale.\",\n        \"Gloo: Collective Communication Library.\",\n        \"Fast Graph Representation Learning with PyTorch Geometric.\",\n        \"Freebase Data Dumps.\",\n        \"OpenKE: An Open Toolkit for Knowledge Embedding.\",\n        \"Distributed Edge Partitioning for Trillion-Edge Graphs.\",\n        \"An End-to-End Model for Question Answering over Knowledge Base with Cross-Attention Combining Global Knowledge.\",\n        \"Open Graph Benchmark: Datasets for Machine Learning on Graphs.\",\n        \"A Fast and High Quality Multilevel Scheme for Partitioning Irregular Graphs.\",\n        \"Analysis of the Impact of Negative Sampling on Link Prediction in Knowledge Graphs.\",\n        \"Pytorch-BigGraph: A Large Scale Graph Embedding System.\",\n        \"PyTorch Distributed: Experiences on Accelerating Data Parallel Training.\",\n        \"Learning Entity and Relation Embeddings for Knowledge Graph Completion.\",\n        \"NeuGraph: Parallel Deep Neural Network Computation on Large Graphs.\",\n        \"DistGNN: Scalable Distributed Training for Large-Scale Graph Neural Networks.\",\n        \"Distributed Representations of Words and Phrases and their Compositionality.\",\n        \"Optimized primitives for inter-GPU communication.\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library.\",\n        \"Relation-aware Graph Attention Model with Adaptive Self-adversarial Training.\",\n        \"Think Locally, Act Globally: Highly Balanced Graph Partitioning.\",\n        \"Scalable Edge Partitioning.\",\n        \"Modeling Relational Data with Graph Convolutional Networks.\",\n        \"Knowledge Graph Embedding using Graph Convolutional Networks with Relation-Aware Attention.\",\n        \"A Benchmarking Study of Embedding-Based Entity Alignment for Knowledge Graphs.\",\n        \"Complex Embeddings for Simple Link Prediction.\",\n        \"Microsoft Academic Graph: when experts are not enough.\",\n        \"Deep Graph Library: A Graph-Centric, Highly-Performant Package for Graph Neural Networks.\",\n        \"Knowledge Graph Embedding: A Survey of Approaches and Applications.\",\n        \"Cross-lingual Knowledge Graph Alignment via Graph Convolutional Networks.\",\n        \"Graphgen: Exploring interesting graphs in relational data.\",\n        \"Embedding Entities and Relations for Learning and Inference in Knowledge Bases.\",\n        \"A Vectorized Relational Graph Convolutional Network for Multi-Relational Network Alignment.\",\n        \"Graph Edge Partitioning via Neighborhood Heuristic.\",\n        \"Long-tail Relation Extraction via Knowledge Graph Embeddings and Graph Convolution Networks.\",\n        \"DistDGL: Distributed Graph Neural Network Training for Billion-Scale Graphs.\",\n        \"DGL-KE: Training Knowledge Graph Embeddings at Scale.\",\n        \"AliGraph: A Comprehensive Graph Neural Network Platform.\",\n        \"GraphVite: A High-Performance CPU-GPU Hybrid System for Node Embedding.\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Scaling Knowledge Graph Embedding Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}