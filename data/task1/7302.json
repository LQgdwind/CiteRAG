{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: TimeKit: A Time-series Forecasting-based Upgrade Kit for Collaborative Filtering\n\nPaper Abstract: Abstract Recommender systems are a long-standing research problem in data mining and machine learning. They are incremental in nature, as new user-item interaction logs arrive. In real-world applications, we need to periodically train a collaborative filtering algorithm to extract user/item embedding vectors and therefore, a time-series of embedding vectors can be naturally defined. We present a time-series forecasting-based upgrade kit (TimeKit), which works in the following way: it i) first decides a base collaborative filtering algorithm, ii) extracts user/item embedding vectors with the base algorithm from user-item interaction logs incrementally, e.g., every month, iii) trains our time-series forecasting model with the extracted time-series of embedding vectors, and then iv) forecasts the future embedding vectors and recommend with their dot-product scores owing to a recent breakthrough in processing complicated time-series data, i.e., neural controlled differential equations (NCDEs). Our experiments with four real-world benchmark datasets show that the proposed time-series forecasting-based upgrade kit can significantly enhance existing popular collaborative filtering algorithms.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep neural networks for youtube recommendations\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"A Survey of Collaborative Filtering-Based Recommender Systems for Mobile Internet Applications\",\n        \"A survey of collaborative filtering-based recommender systems: From traditional methods to hybrid methods based on social networks\",\n        \"Collaborative Memory Network for Recommendation Systems\",\n        \"Neural Collaborative Filtering\",\n        \"Collaborative filtering for implicit feedback datasets\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"Bpr: Bayesian personalized ranking from implicit feedback\",\n        \"Collaborative Deep Learning for Recommender Systems\",\n        \"Neural controlled differential equations for irregular time series\",\n        \"Approximations of solutions of stochastic differential equations driven by semimartingales\",\n        \"Functional it√¥ calculus and stochastic integral representation of martingales\",\n        \"The pricing of options and corporate liabilities\",\n        \"Physics-informed autoencoders for Lyapunov-stable fluid flow prediction\",\n        \"Physics-informed neural networks: A deep learning framework for solving forward and inverse problems involving nonlinear partial differential equations\",\n        \"Quantifying total uncertainty in physics-informed neural networks for solving forward and inverse stochastic problems\",\n        \"Dpm: A novel training method for physics-informed neural networks in extrapolation\",\n        \"Auto-encoding variational bayes\",\n        \"Extracting and composing robust features with denoising autoencoders\",\n        \"Spectral networks and deep locally connected networks on graphs\",\n        \"Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Simplifying Graph Convolutional Networks\",\n        \"Inductive Representation Learning on Large Graphs\",\n        \"Graph Attention Networks\",\n        \"Large-Scale Learnable Graph Convolutional Networks\",\n        \"Neural graph collaborative filtering\",\n        \"Graph convolutional matrix completion\",\n        \"Revisiting graph based collaborative filtering: A linear residual graph convolutional network approach\",\n        \"Lightgcn: Simplifying and powering graph convolution network for recommendation\",\n        \"Measuring and relieving the over-smoothing problem for graph neural networks from the topological view\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Lt-ocf: Learnable-time ode-based collaborative filtering\",\n        \"Personalized top-n sequential recommendation via convolutional sequence embedding\",\n        \"Self-attentive sequential recommendation\",\n        \"Bert4rec: Sequential recommendation with bidirectional encoder representations from transformer\",\n        \"Dynwalks: Global topology and recent changes awareness dynamic network embedding\",\n        \"dyngraph2vec: Capturing network dynamics using dynamic graph representation learning\",\n        \"EvolveGCN: Evolving graph convolutional networks for dynamic graphs\",\n        \"Neural ordinary differential equations\",\n        \"A family of embedded runge-kutta formulae\",\n        \"Introduction to Partial Differential Equations: Second Edition\",\n        \"Understanding aerodynamics: Arguing from the real physics\",\n        \"Population biology of infectious diseases: Part i\",\n        \"Empirical evaluation of gated recurrent neural networks on sequence modeling\",\n        \"Heavy ball neural ordinary differential equations\",\n        \"Differential Equations Driven by Rough Paths\",\n        \"Attentive neural controlled differential equations for time-series classification and forecasting\",\n        \"Graph neural controlled differential equations for traffic forecasting\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in TimeKit: A Time-series Forecasting-based Upgrade Kit for Collaborative Filtering, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}