{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Syntax and semantics of multi-adjoint normal logic programming\n\nPaper Abstract: Abstract Multi-adjoint logic programming is a general framework with interesting features, which involves other positive logic programming frameworks such as monotonic and residuated logic programming, generalized annotated logic programs, fuzzy logic programming and possibilistic logic programming. One of the most interesting extensions of this framework is the possibility of considering a negation operator in the logic programs, which will improve its flexibility and the range of real applications. This paper introduces multi-adjoint normal logic programming, which is an extension of multi-adjoint logic programming including a negation operator in the underlying lattice. Beside the introduction of the syntax and semantics of this paradigm, we will provide sufficient conditions for the existence of stable models defined on a convex compact set of an euclidean space. Finally, we will consider a particular algebraic structure in which sufficient conditions can be given in order to ensure the unicity of stable models of multi-adjoint normal logic programs.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Paraconsistent logic programs\",\n        \"An encompassing framework for paraconsistent logic programs\",\n        \"Formalizing argumentative reasoning in a possibilistic logic programming setting with fuzzy unification\",\n        \"Sur les opérations dans les ensembles abstraits et leur application aux équations intégrales\",\n        \"Probabilistic reasoning with answer sets\",\n        \"Characterizing and extending answer set semantics using possibility theory\",\n        \"Stable models in normal residuated logic programs\",\n        \"Towards multi-adjoint logic programming with negations\",\n        \"A comparative study of adjoint triples\",\n        \"Multi-adjoint algebras versus non-commutative residuated structures\",\n        \"Termination of logic programs with imperfect information: applications and query procedure\",\n        \"Hybrid probabilistic logic programs as residuated logic programs\",\n        \"Monotonic and residuated logic programs\",\n        \"Automated reasoning using possibilistic logic: semantics, belief revision, and variable certainty weights\",\n        \"The family of stable models\",\n        \"The stable model semantics for logic programming\",\n        \"Logic programs with classical negation\",\n        \"Classical negation in logic programs and disjunctive databases\",\n        \"On fuzzy unfolding: A multi-adjoint approach\",\n        \"Theory of generalized annotated logic programming and its applications\",\n        \"Logic programs with exceptions\",\n        \"A comparison of fuzzy and annotated logic programming\",\n        \"Calcul différentiel et géométrie\",\n        \"Foundations of Logic Programming\",\n        \"Epistemic foundation of stable model semantics\",\n        \"Towards a fuzzy answer set semantics for residuated logic programs\",\n        \"On coherence and consistence in fuzzy answer set semantics for residuated logic programs\",\n        \"Measuring inconsistency in fuzzy answer set semantics\",\n        \"On the existence and unicity of stable models in normal residuated logic programs\",\n        \"Adjoint pairs on interval-valued fuzzy sets\",\n        \"A neural implementation of multi-adjoint logic programming\",\n        \"A multi-adjoint logic approach to abductive reasoning\",\n        \"Multi-adjoint logic programming with continuous semantics\",\n        \"A fixpoint semantics for disjunctive logic programs\",\n        \"An introduction to fuzzy answer set programming\",\n        \"Semantics for possibilistic disjunctive programs\",\n        \"On fuzzy logic I, II, III\",\n        \"Well founded semantics for logic programs with explicit negation\",\n        \"Well-founded semantics coincides with three-valued stable semantics\",\n        \"Query answering in normal logic programs under uncertainty\",\n        \"Query answering under the any-world assumption for normal logic programs\",\n        \"A top-down query answering procedure for normal logic programs under the any-world assumption\",\n        \"On fixed-points of multivalued functions on complete lattices and their application to generalized logic programs\",\n        \"A lattice-theoretical fixpoint theorem and its applications\",\n        \"Classical Analysis on Normed Spaces\",\n        \"The well-founded semantics for general logic programs\",\n        \"Fuzzy logic programming\",\n        \"A database needs two kinds of negation\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Syntax and semantics of multi-adjoint normal logic programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}