{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DropMessage: Unifying Random Dropping for Graph Neural Networks\n\nPaper Abstract: Abstract Graph Neural Networks (GNNs) are powerful tools for graph representation learning. Despite their rapid development, GNNs also face some challenges, such as over-fitting, over-smoothing, and non-robustness. Previous works indicate that these problems can be alleviated by random dropping methods, which integrate augmented data into models by randomly masking parts of the input. However, some open problems of random dropping on GNNs remain to be solved. First, it is challenging to find a universal method that are suitable for all cases considering the divergence of different datasets and models. Second, augmented data introduced to GNNs causes the incomplete coverage of parameters and unstable training process. Third, there is no theoretical analysis on the effectiveness of random dropping methods on GNNs. In this paper, we propose a novel random dropping method called DropMessage, which performs dropping operations directly on the propagated messages during the message-passing process. More importantly, we find that DropMessage provides a unified framework for most existing random dropping methods, based on which we give theoretical analysis of their effectiveness. Furthermore, we elaborate the superiority of DropMessage: it stabilizes the training process by reducing sample variance; it keeps information diversity from the perspective of information theory, enabling it become a theoretical upper bound of other methods. To evaluate our proposed method, we conduct experiments that aims for multiple tasks on five public datasets and two industrial datasets with various backbone models. The experimental results show that DropMessage has the advantages of both effectiveness and generalization, and can significantly alleviate the problems mentioned above. Our code is available at: https://github.com/zjunet/DropMessage.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning from hints in neural networks\",\n        \"Training with Noise is Equivalent to Tikhonov Regularization\",\n        \"Improving the Accuracy and Speed of Support Vector Machines\",\n        \"Albumentations: fast and flexible image augmentations\",\n        \"Graph coarsening with neural networks\",\n        \"Measuring and Relieving the Over-smoothing Problem for Graph Neural Networks from the Topological View\",\n        \"FastGCN: Fast Learning with Graph Convolutional Networks via Importance Sampling\",\n        \"Certified Adversarial Robustness via Randomized Smoothing\",\n        \"Nrgnn: Learning a label noise resistant graph neural network on sparsely and noisily labeled graphs\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Meta propagation networks for graph few-shot semi-supervised learning\",\n        \"Data Augmentation for Deep Graph Learning: A Survey\",\n        \"Semi-supervised learning on graphs with generative adversarial nets\",\n        \"Addressing Over-Smoothing in Graph Neural Networks via Deep Supervision\",\n        \"Graph Random Neural Networks for Semi-Supervised Learning on Graphs\",\n        \"GAN-based Synthetic Medical Image Augmentation for increased CNN Performance in Liver Lesion Classification\",\n        \"Neural message passing for quantum chemistry\",\n        \"Improving neural networks by preventing co-adaptation of feature detectors\",\n        \"Open Graph Benchmark: Datasets for Machine Learning on Graphs\",\n        \"Graph condensation for graph neural networks\",\n        \"Variational graph auto-encoders\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Predict then Propagate: Graph Neural Networks meet Personalized PageRank\",\n        \"Deeper Insights into Graph Convolutional Networks for Semi-Supervised Learning\",\n        \"Towards Deeper Graph Neural Networks\",\n        \"Learning to Drop: Robust Graph Neural Network via Topological Denoising\",\n        \"Learning with Marginalized Corrupted Features\",\n        \"Noise injection into inputs in back-propagation learning\",\n        \"Simple and Deep Graph Convolutional Networks\",\n        \"On Asymptotic Behaviors of Graph CNNs from Dynamical Systems Perspective\",\n        \"Graph Neural Networks Exponentially Lose Expressive Power for Node Classification\",\n        \"DropGNN: Random Dropouts Increase the Expressiveness of Graph Neural Networks\",\n        \"A distributed approach to node clustering in decentralized peer-to-peer networks\",\n        \"The Manifold Tangent Classifier\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"Collective classification in network data\",\n        \"A mathematical theory of communication\",\n        \"A survey on Image Data Augmentation for Deep Learning\",\n        \"Transformation invariance in pattern recognitionâ€”tangent distance and tangent propagation\",\n        \"Multi-stage self-supervised learning for graph convolutional networks on graphs with few labeled nodes\",\n        \"Graph Attention Networks\",\n        \"Deep Graph Infomax\",\n        \"Manifold mixup: Better representations by interpolating hidden states\",\n        \"Dropout Training as Adaptive Regularization\",\n        \"Regularization of Neural Networks using DropConnect\",\n        \"MoleculeNet: A Benchmark for Molecular Machine Learning\",\n        \"Topology Attack and Defense for Graph Neural Networks: An Optimization Perspective\",\n        \"Representation Learning on Graphs with Jumping Knowledge Networks\",\n        \"Mining Fraudsters and Fraudulent Strategies in Large-Scale Mobile Social Networks\",\n        \"Understanding Default Behavior in Online Lending\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"GraphSAINT: Graph Sampling Based Inductive Learning Method\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"PairNorm: Tackling Oversmoothing in GNNs\",\n        \"Data augmentation for graph neural networks\",\n        \"Robust graph convolutional networks against adversarial attacks\",\n        \"Adversarial Attacks on Neural Networks for Graph Data\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in DropMessage: Unifying Random Dropping for Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}