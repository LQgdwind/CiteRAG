{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ELIXIR: Learning from User Feedback on Explanations to Improve Recommender Models\n\nPaper Abstract: Abstract. System-provided explanations for recommendations are an important component towards transparent and trustworthy AI. In state-of-the-art research, this is a one-way signal, though, to improve user acceptance. In this paper, we turn the role of explanations around and investigate how they can contribute to enhancing the quality of the generated recommendations themselves. We devise a human-in-the-loop framework, called Elixir, where user feedback on explanations is leveraged for pairwise learning of user preferences. Elixir leverages feedback on pairs of recommendations and explanations to learn user-specific latent preference vectors, overcoming sparseness by label propagation with item-similarity-based neighborhoods. Our framework is instantiated using generalized graph recommendation via Random Walk with Restart. Insightful experiments with a real user study show significant improvements in movie and book recommendations over item-level feedback.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Learning heterogeneous knowledge base embeddings for explainable recommendation\",\n        \"Build your own music recommender by modeling internet radio streams\",\n        \"Measuring Recommendation Explanation Quality: The Conflicting Goals of Explanations\",\n        \"Transparent, scrutable and explainable user models for personalized recommendation\",\n        \"Using groups of items for preference elicitation in recommender systems\",\n        \"Neural attentional rating regression with review-level explanations\",\n        \"Hybrid critiquing-based recommender systems\",\n        \"Critiquing-based recommenders: Survey and emerging trends\",\n        \"Personalized fashion recommendation with visual explanations based on multimodal attention network: Towards visually explainable recommendation\",\n        \"Learning to rank features for recommendation over multiple categories\",\n        \"Incorporating interpretability into latent factor models via fast influence analysis\",\n        \"PRINCE: Provider-side Interpretability with Counterfactual Explanations in Recommender Systems\",\n        \"FAIRY: A Framework for Understanding Relationships between Usersâ€™ Actions and their Social Feeds\",\n        \"Topic-Sensitive PageRank: A Context-Sensitive Ranking Algorithm for Web Search\",\n        \"Neural collaborative filtering\",\n        \"Explaining collaborative filtering recommendations\",\n        \"Collaborative metric learning\",\n        \"MusicBot: Evaluating critiquing-based music recommenders with conversational interaction\",\n        \"FISM: Factored item similarity models for top-n recommender systems\",\n        \"Recommendation through mixtures of heterogeneous item relationships\",\n        \"Factorization meets the neighborhood: A multifaceted collaborative filtering model\",\n        \"Matrix factorization techniques for recommender systems\",\n        \"Explanation-Based Tuning of Opaque Machine Learners with Application to Paper Recommendation\",\n        \"Personalized travel package recommendation\",\n        \"Recommending user generated item lists\",\n        \"Latent Linear Critiquing for Conversational Recommender Systems\",\n        \"Deep Critiquing for VAE-Based Recommender Systems\",\n        \"Experience-based critiquing: Reusing critiquing experiences to improve conversational recommendation\",\n        \"Generating post hoc review-based natural language justifications for recommender systems\",\n        \"Linked open data-based explanations for transparent recommender systems\",\n        \"RecWalk: Nearly uncoupled random walks for top-n recommendation\",\n        \"EigenRec: Generalizing PureSVD for effective and efficient top-N recommendations\",\n        \"Explanation mining: Post hoc interpretability of latent factor models for recommendation systems\",\n        \"Incremental critiquing\",\n        \"Item-based collaborative filtering recommendation algorithms\",\n        \"Interpretable convolutional neural networks with dual local and global attention for review rating prediction\",\n        \"Learning from sets of items in recommender systems\",\n        \"Evaluating the effectiveness of explanations for recommender systems\",\n        \"Ripplenet: Propagating user preferences on the knowledge graph for recommender systems\",\n        \"A reinforcement learning framework for explainable recommendation\",\n        \"Learning and Reasoning on Graph for Recommendation\",\n        \"Explainable reasoning over knowledge graphs for recommendation\",\n        \"Individual comparisons by ranking methods\",\n        \"Deep language-based critiquing for recommender systems\",\n        \"Reinforcement knowledge graph reasoning for explainable recommendation\",\n        \"Learning from labeled and unlabeled data with label propagation\",\n        \"Relational collaborative filtering: Modeling multiple item relations for recommendation\",\n        \"Explainable Recommendation: A Survey and New Perspectives\",\n        \"EARS 2020: The 3rd International Workshop on ExplainAble Recommendation and Search\",\n        \"Explicit factor models for explainable recommendation based on phrase-level sentiment analysis\",\n        \"Personalized reason generation for explainable song recommendation\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in ELIXIR: Learning from User Feedback on Explanations to Improve Recommender Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}