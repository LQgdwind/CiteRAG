{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Deep Explainable Relational Reinforcement Learning: A Neuro-Symbolic Approach\n\nPaper Abstract: Abstract Despite numerous successes in Deep Reinforcement Learning (DRL), the learned policies are not interpretable. Moreover, since DRL does not exploit symbolic relational representations, it has difficulties in coping with structural changes in its environment (such as increasing the number of objects). Relational Reinforcement Learning, on the other hand, inherits the relational representations from symbolic planning to learn reusable policies. However, it has so far been unable to scale up and exploit the power of deep neural networks. We propose Deep Explainable Relational Reinforcement Learning (DERRL), a framework that exploits the best of both – neural and symbolic worlds. By resorting to a neuro-symbolic approach, DERRL combines relational representations and constraints from symbolic planning with deep learning to extract interpretable policies. These policies are in the form of logical rules that explain how each decision (or action) is arrived at. Through several experiments, in setups like the Countdown Game, Blocks World, Gridworld, and Traffic, we show that the policies learned by DERRL can be applied to different configurations and contexts, hence generalizing to environmental modifications††footnotetext: Accepted in ECML PKDD 2023.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Syntax-guided synthesis\",\n        \"Deep reinforcement learning: A brief survey\",\n        \"The inference of regular lisp programs from examples\",\n        \"Logical and relational learning\",\n        \"Statistical Relational Artificial Intelligence: Logic, Probability, and Computation, Synthesis Lectures on Artificial Intelligence and Machine Learning, vol. 32\",\n        \"Integrating guidance into relational reinforcement learning\",\n        \"Relational reinforcement learning\",\n        \"Tree-based batch mode reinforcement learning\",\n        \"Monoidal t-norm based logic:towards a logic for left-continuous t-norms\",\n        \"Learning explanatory rules from noisy data\",\n        \"Strips: A new approach to the application of theorem proving to problem solving\",\n        \"Distilling a neural network into a soft decision tree\",\n        \"Size independent neural transfer for rddl planning\",\n        \"Symbolic network: generalized neural policies for relational mdps\",\n        \"Action languages\",\n        \"PDDL—The Planning Domain Definition Language\",\n        \"Explaining explanations: An approach to evaluating interpretability of machine learning\",\n        \"Neural turing machines\",\n        \"Spreadsheet data manipulation using examples\",\n        \"Program synthesis\",\n        \"Networked multi-agent reinforcement learning with emergent communication\",\n        \"Transparency and explanation in deep reinforcement learning neural networks\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"Symbolic relational deep reinforcement learning based on graph neural networks\",\n        \"Neural logic reinforcement learning\",\n        \"Non-parametric policy gradients: A unified treatment of propositional and relational domains\",\n        \"Bellman goes relational\",\n        \"Object identity\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Reprel: Integrating relational planning and reinforcement learning for effective abstraction\",\n        \"Recent development and applications of sumo-simulation of urban mobility\",\n        \"Graph neural networks meet neural-symbolic computing: A survey and perspective\",\n        \"Trust in automation: Designing for appropriate reliance\",\n        \"Toward interpretable deep reinforcement learning with linear model u-trees\",\n        \"Foundations of Logic Programming\",\n        \"Sdrl: Interpretable and data-efficient deep reinforcement learning leveraging symbolic planning\",\n        \"T-norms driven loss functions for machine learning\",\n        \"Relational reinforcement learning with guided demonstrations\",\n        \"Inductive logic programming: Theory and methods\",\n        \"Automated Planning: Theory & Practice\",\n        \"Incorporating relational background knowledge into reinforcement learning via differentiable inductive logic programming\",\n        \"Learning logical definitions from relations\",\n        \"Stochastic superoptimization\",\n        \"Optimization methods for interpretable differentiable decision trees applied to reinforcement learning\",\n        \"Ap: Artificial programming\",\n        \"Program Synthesis by Sketching\",\n        \"Intelligent agent transparency\",\n        \"A methodology for lisp program construction from examples\",\n        \"Relational reinforcement learning: An overview\",\n        \"Transit: Specifying protocols with concolic snippets\",\n        \"A design methodology for trust cue calibration in cognitive agents\",\n        \"Simple statistical gradient following algorithms for connectionist reinforcement learning\",\n        \"A semantic loss function for deep learning with symbolic knowledge\",\n        \"Survey of clustering algorithms\",\n        \"Peorl: Integrating symbolic planning and hierarchical reinforcement learning for robust decision-making\",\n        \"Relational deep reinforcement learning\",\n        \"Fully decentralized multi-agent reinforcement learning with networked agents\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Deep Explainable Relational Reinforcement Learning: A Neuro-Symbolic Approach, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}