{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learn from Failure: Fine-Tuning LLMs with Trial-and-Error Data for Intuitionistic Propositional Logic Proving\n\nPaper Abstract: Abstract Recent advances in Automated Theorem Proving have shown the effectiveness of leveraging a (large) language model that generates tactics (i.e. proof steps) to search through proof states. The current model, while trained solely on successful proof paths, faces a discrepancy at the inference stage, as it must sample and try various tactics at each proof state until finding success, unlike its training which does not incorporate learning from failed attempts. Intuitively, a tactic that leads to a failed search path would indicate that similar tactics should receive less attention during the following trials. In this paper, we demonstrate the benefit of training models that additionally learn from failed search paths. Facing the lack of such trial-and-error data in existing open-source theorem-proving datasets, we curate a dataset on intuitionistic propositional logic theorems and formalize it in Lean, such that we can reliably check the correctness of proofs. We compare our model trained on relatively short trial-and-error information (TrialMaster) with models trained only on the correct paths and discover that the former solves more unseen theorems with lower trial searches.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Boosting of thoughts: Trial-and-error problem solving with large language models\",\n        \"Generating binary trees at random\",\n        \"Learning to reason in large theories without imitation\",\n        \"The Coq proof assistant reference manual: Version 6.1\",\n        \"Graph of thoughts: Solving elaborate problems with large language models\",\n        \"Symbolic logic and mechanical theorem proving\",\n        \"A survey of chain of thought reasoning: Advances, frontiers and future\",\n        \"Programming in PROLOG\",\n        \"AI: the tumultuous history of the search for artificial intelligence\",\n        \"Advancing mathematics by guiding human intuition with AI\",\n        \"The early history of automated deduction\",\n        \"The lean theorem prover (system description)\",\n        \"Baldur: Whole-proof generation and repair with large language models\",\n        \"Complexity-based prompting for multi-step reasoning\",\n        \"A proof method for quantification theory: Its justification and realization\",\n        \"Proof artifact co-training for theorem proving with language models\",\n        \"Heterogeneous heuristic optimisation and scheduling for first-order theorem proving\",\n        \"Deepmath-deep sequence models for premise selection\",\n        \"Draft, sketch, and prove: Guiding formal theorem provers with informal proofs\",\n        \"Automated theorem proving in intuitionistic propositional logic by deep reinforcement learning\",\n        \"Efficient memory management for large language model serving with pagedattention\",\n        \"Hypertree proof search for neural theorem proving\",\n        \"Focusing and polarization in linear, intuitionistic, and classical logics\",\n        \"Machines Who Think (2Nd Ed.)\",\n        \"Efficient intuitionistic theorem proving with the polarized inverse method\",\n        \"Metamath: a computer language for mathematical proofs\",\n        \"Magnushammer: A transformer-based approach to premise selection\",\n        \"A survey on theorem provers in formal methods\",\n        \"Isabelle/HOL: a proof assistant for higher-order logic\",\n        \"Lecture notes on focusing\",\n        \"Generative language modeling for automated theorem proving\",\n        \"Mathematical reasoning via self-supervised skip-tree training\",\n        \"A machine-oriented logic based on the resolution principle\",\n        \"Artificial intelligence a modern approach\",\n        \"Towards proof synthesis guided by neural machine translation for intuitionistic propositional logic. corr abs/1706.06462 (2017)\",\n        \"Automated proof synthesis for propositional logic with deep neural networks\",\n        \"Catalan numbers\",\n        \"A language-agent approach to formal theorem-proving\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Constructions in combinatorics via neural networks\",\n        \"Dt-solver: Automated theorem proving with dynamic-tree sampling guided by proof-level value function\",\n        \"Learning to prove theorems by learning to generate theorems\",\n        \"Premise selection for theorem proving by deep graph embedding\",\n        \"Self-consistency improves chain of thought reasoning in language models\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"Naturalproofs: Mathematical theorem proving in natural language\",\n        \"Huggingfaceâ€™s transformers: State-of-the-art natural language processing\",\n        \"Tacticzero: Learning to prove theorems from scratch with deep reinforcement learning\",\n        \"LeanDojo: Theorem Proving with Retrieval-Augmented Language Models\",\n        \"Tree of thoughts: Deliberate problem solving with large language models\",\n        \"Nature language reasoning, a survey\",\n        \"Least-to-most prompting enables complex reasoning in large language models\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Learn from Failure: Fine-Tuning LLMs with Trial-and-Error Data for Intuitionistic Propositional Logic Proving, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}