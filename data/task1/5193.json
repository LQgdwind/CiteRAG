{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Multi-agent Skills for Tabular Reinforcement Learning using Factor Graphs\n\nPaper Abstract: Abstract Covering skill (a.k.a., option) discovery has been developed to improve the exploration of reinforcement learning in single-agent scenarios, where only sparse reward signals are available. It aims to connect the most distant states identified through the Fiedler vector of the state transition graph. However, the approach cannot be directly extended to multi-agent scenarios, since the joint state space grows exponentially with the number of agents thus prohibiting efficient option computation. Existing research adopting options in multi-agent scenarios still relies on single-agent algorithms and fails to directly discover joint options that can improve the connectivity of the joint state space. In this paper, we propose a new algorithm to directly compute multi-agent options with collaborative exploratory behaviors while still enjoying the ease of decomposition. Our key idea is to approximate the joint state space as the Kronecker product of individual agents’ state spaces, based on which we can directly estimate the Fiedler vector of the joint state space using the Laplacian spectrum of individual agents’ transition graphs. This decomposition enables us to efficiently construct multi-agent joint options by encouraging agents to connect the sub-goal joint states which are corresponding to the minimum or maximum of the estimated joint Fiedler vector. Evaluation on multi-agent collaborative tasks shows that our algorithm can successfully identify multi-agent options, and significantly outperforms prior works using single-agent options or no options, in terms of both faster exploration and higher cumulative rewards.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Visual foresight: Model-based deep reinforcement learning for vision-based robotic control\",\n        \"Continuous control with deep reinforcement learning\",\n        \"Superhuman ai for multiplayer poker\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Playing atari games with deep reinforcement learning and human checkpoint replay\",\n        \"Between mdps and semi-mdps: A framework for temporal abstraction in reinforcement learning\",\n        \"Finding options that minimize planning time\",\n        \"Discovering options for exploration by minimizing cover time\",\n        \"Algebraic connectivity of graphs\",\n        \"Growing well-connected graphs\",\n        \"Planning with macro-actions in decentralized pomdps\",\n        \"Modeling and planning with macro-actions in decentralized pomdps\",\n        \"Multi-agent hierarchical reinforcement learning by integrating options into maxq\",\n        \"Option-critic in cooperative multi-agent systems\",\n        \"Learning to coordinate manipulation skills via skill behavior diversification\",\n        \"Markov Decision Processes: Discrete Stochastic Dynamic Programming\",\n        \"Exploration-exploitation in mdps with options\",\n        \"Feudal networks for hierarchical reinforcement learning\",\n        \"Hierarchical reinforcement learning: A comprehensive survey\",\n        \"Automatic discovery of subgoals in reinforcement learning using diverse density\",\n        \"Q-cut - dynamic discovery of sub-goals in reinforcement learning\",\n        \"Adaptive skills adaptive partitions (ASAP)\",\n        \"When waiting is not an option: Learning options with a deliberation cost\",\n        \"Learning options in reinforcement learning\",\n        \"Identifying useful subgoals in reinforcement learning by local graph partitioning\",\n        \"Skill characterization based on betweenness\",\n        \"A laplacian framework for option discovery in reinforcement learning\",\n        \"Eigenoption discovery through the deep successor representation\",\n        \"Hierarchical cooperative multi-agent reinforcement learning with skill discovery\",\n        \"Diversity is all you need: Learning skills without a reward function\",\n        \"The kronecker product of graphs\",\n        \"Another estimation of laplacian spectrum of the kronecker product of graphs\",\n        \"The laplacian in RL: learning representations with efficient approximations\",\n        \"Towards better laplacian representation in reinforcement learning with generalized graph drawing\",\n        \"Multi-agent reinforcement learning: Independent versus cooperative agents\",\n        \"Q-learning\",\n        \"An algorithm for distributed reinforcement learning in cooperative multi-agent systems\",\n        \"The problem of the random walk\",\n        \"Reinforcement learning - an introduction\",\n        \"Counterfactual multi-agent policy gradients\",\n        \"Weighted QMIX: expanding monotonic value function factorisation for deep multi-agent reinforcement learning\",\n        \"MAVEN: multi-agent variational exploration\",\n        \"Multi-agent option discovery based on kronecker product\",\n        \"Estimation of laplacian spectra of direct and strong product graphs\",\n        \"Introduction to graph theory\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Learning Multi-agent Skills for Tabular Reinforcement Learning using Factor Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}