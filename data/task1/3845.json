{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Joint Matrix Decomposition for Deep Convolutional Neural Networks Compression\n\nPaper Abstract: Abstract Deep convolutional neural networks (CNNs) with a large number of parameters require intensive computational resources, and thus are hard to be deployed in resource-constrained platforms. Decomposition-based methods, therefore, have been utilized to compress CNNs in recent years. However, since the compression factor and performance are negatively correlated, the state-of-the-art works either suffer from severe performance degradation or have relatively low compression factors. To overcome this problem, we propose to compress CNNs and alleviate performance degradation via joint matrix decomposition, which is different from existing works that compressed layers separately. The idea is inspired by the fact that there are lots of repeated modules in CNNs. By projecting weights with the same structures into the same subspace, networks can be jointly compressed with larger ranks. In particular, three joint matrix decomposition schemes are developed, and the corresponding optimization approaches based on Singular Value Decomposition are proposed. Extensive experiments are conducted across three challenging compact CNNs for different benchmark data sets to demonstrate the superior performance of our proposed algorithms. As a result, our methods can compress the size of ResNet-34 by 22Ã—22\\times with slighter accuracy degradation compared with several state-of-the-art methods.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fixed pattern noise reduction for infrared images based on cascade residual attention CNN\",\n        \"Matrix completion for graph-based deep semi-supervised learning\",\n        \"Rich feature hierarchies for accurate object detection and semantic segmentation\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Deep residual learning for image recognition\",\n        \"Going deeper with convolutions\",\n        \"Compression of deep convolutional neural networks for fast and low power mobile applications\",\n        \"Squeezenet: Alexnet-level accuracy with 50x fewer parameters and <<0.5mb model size\",\n        \"Predicting parameters in deep learning\",\n        \"Exploiting linear structure within convolutional networks for efficient evaluation\",\n        \"Speeding up convolutional neural networks with low rank expansions\",\n        \"Convolutional neural networks with low-rank regularization\",\n        \"Tensorizing neural networks\",\n        \"Speeding-up convolutional neural networks using fine-tuned cp-decomposition\",\n        \"Ultimate tensorization: compressing convolutional and FC layers alike\",\n        \"Wide compression: Tensor ring nets\",\n        \"On compressing deep models by low rank and sparse decomposition\",\n        \"Deep neural networks compression learning based on multiobjective evolutionary algorithms\",\n        \"Deep convolutional neural network compression via coupled tensor decomposition\",\n        \"Tensor-train decomposition\",\n        \"Optimal brain damage\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Joint sparse neural network compression via multi-application multi-objective optimization\",\n        \"Progressive principle component analysis for compressing deep convolutional neural networks\",\n        \"Filter pruning via geometric median for deep convolutional neural networks acceleration\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference\",\n        \"Xnor-net: Imagenet classification using binary convolutional neural networks\",\n        \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding\",\n        \"Towards accurate post-training network quantization via bit-split and stitching\",\n        \"Distilling the knowledge in a neural network\",\n        \"Fitnets: Hints for thin deep nets\",\n        \"Net2net: Accelerating learning via knowledge transfer\",\n        \"Few sample knowledge distillation for efficient network compression\",\n        \"Knowledge transfer with jacobian matching\",\n        \"ICA with reconstruction cost for efficient overcomplete feature learning\",\n        \"Compressed time delay neural network for small-footprint keyword spotting\",\n        \"Sparse low rank factorization for deep neural network compression\",\n        \"Network decoupling: From regular to depthwise separable convolutions\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Hybrid tensor decomposition in neural network compression\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Accurate, large minibatch SGD: training imagenet in 1 hour\",\n        \"Nas-bench-201: Extending the scope of reproducible neural architecture search\",\n        \"Human-level control through deep reinforcement learning\",\n        \"A fast and elitist multiobjective genetic algorithm: NSGA-II\",\n        \"Moea/d: A multiobjective evolutionary algorithm based on decomposition\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Joint Matrix Decomposition for Deep Convolutional Neural Networks Compression, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}