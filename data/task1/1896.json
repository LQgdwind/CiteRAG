{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Dispatch for Job Shop Scheduling via Deep Reinforcement Learning\n\nPaper Abstract: Abstract Priority dispatching rule (PDR) is widely used for solving real-world Job-shop scheduling problem (JSSP). However, the design of effective PDRs is a tedious task, requiring a myriad of specialized knowledge and often delivering limited performance. In this paper, we propose to automatically learn PDRs via an end-to-end deep reinforcement learning agent. We exploit the disjunctive graph representation of JSSP, and propose a Graph Neural Network based scheme to embed the states encountered during solving. The resulting policy network is size-agnostic, effectively enabling generalization on large-scale instances. Experiments show that the agent can learn high-quality PDRs from scratch with elementary raw features, and demonstrates strong performance against the best existing PDRs. The learned policies also perform well on much larger instances that are unseen in training.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Machine scheduling problems: classification, complexity and computations\",\n        \"A review on swarm intelligence and evolutionary algorithms for solving flexible job shop scheduling problems\",\n        \"An additive algorithm for solving linear programs with zero-one variables\",\n        \"A hybrid algorithm for the one machine sequencing problem to minimize total tardiness\",\n        \"Tabu search\",\n        \"A survey of priority rule-based scheduling\",\n        \"Approximation algorithms for flexible job shop problems\",\n        \"A sampling approach for proactive project scheduling under generalized time-dependent workability uncertainty\",\n        \"A comparison of priority rules for the job shop scheduling problem under different flow time-and tardiness-related objective functions\",\n        \"Production planning and control for semiconductor wafer fabrication facilities: modeling, analysis, and systems, volume 52\",\n        \"Machine learning for combinatorial optimization: a methodological tour d’horizon\",\n        \"Pointer networks\",\n        \"Reinforcement learning for solving the vehicle routing problem\",\n        \"Attention, learn to solve routing problems!\",\n        \"Learning improvement heuristics for solving the travelling salesman problem\",\n        \"A learning-based iterative method for solving vehicle routing problems\",\n        \"Deep reinforcement learning for traveling salesman problem with time windows and rejections\",\n        \"Learning combinatorial optimization algorithms over graphs\",\n        \"Combinatorial optimization with graph convolutional networks and guided tree search\",\n        \"Learning a sat solver from single-bit supervision\",\n        \"Learning to solve circuit-sat: An unsupervised differentiable approach\",\n        \"Learning local search heuristics for boolean satisfiability\",\n        \"Resource management with deep reinforcement learning\",\n        \"Learning to perform local rewriting for combinatorial optimization\",\n        \"Manufacturing dispatching using reinforcement and transfer learning\",\n        \"Learning scheduling algorithms for data processing clusters\",\n        \"Deepweave: Accelerating job completion time with deep reinforcement learning-based coflow scheduling\",\n        \"Learning scheduling policies for multi-robot coordination with graph attention networks\",\n        \"Discovering dispatching rules from data using imitation learning: A case study for the job-shop problem\",\n        \"Smart manufacturing scheduling with edge computing using multiclass deep q network\",\n        \"Human-level control through deep reinforcement learning\",\n        \"The disjunctive graph machine representation of the job shop scheduling problem\",\n        \"Machine sequencing via disjunctive graphs: An implicit enumeration algorithm\",\n        \"Relational inductive biases, deep learning, and graph networks\",\n        \"Graph neural networks: A review of methods and applications\",\n        \"Temporal multi-graph convolutional network for traffic flow prediction\",\n        \"How powerful are graph neural networks?\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"A comprehensive survey on graph neural networks\",\n        \"A gentle introduction to deep learning for graphs\",\n        \"Scheduling complex job shops using disjunctive graphs: a cycle elimination procedure\",\n        \"Nonpermutation flow line scheduling by ant colony optimization\",\n        \"Proximal policy optimization algorithms\",\n        \"Benchmarks for basic scheduling problems\",\n        \"Deterministic job-shop scheduling: Past, present and future\",\n        \"Benchmarks for shop scheduling problems\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Or-tools\",\n        \"Industry 4.0–a glimpse\",\n        \"Smart manufacturing systems for industry 4.0: Conceptual framework, scenarios, and future perspectives\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Learning to Dispatch for Job Shop Scheduling via Deep Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}