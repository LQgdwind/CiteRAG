{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SubeventWriter: Iterative Sub-event Sequence Generation with Coherence Controller\n\nPaper Abstract: Abstract In this paper, we propose a new task of sub-event generation for an unseen process to evaluate the understanding of the coherence of sub-event actions and objects. To solve the problem, we design SubeventWriter, a sub-event sequence generation framework with a coherence controller. Given an unseen process, the framework can iteratively construct the sub-event sequence by generating one sub-event at each iteration. We also design a very effective coherence controller to decode more coherent sub-events. As our extensive experiments and analysis indicate, SubeventWriter111Code is available at https://github.com/HKUST-KnowComp/SubeventWriter. can generate more reliable and meaningful sub-event sequences for unseen processes.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Integrating deep event-level and script-level information for script event prediction\",\n        \"Modeling biological processes for reading comprehension\",\n        \"Language models are few-shot learners\",\n        \"Behind the scenes of an evolving event cloze test\",\n        \"Unsupervised learning of narrative event chains\",\n        \"Event-centric natural language processing\",\n        \"What are you trying to do? semantic typing of event processes\",\n        \"Routledge encyclopedia of philosophy: Index, volume 8\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Event representation learning enhanced with external commonsense knowledge\",\n        \"Event extraction by answering (almost) natural questions\",\n        \"Measuring nominal scale agreement among many raters\",\n        \"What happens next? event prediction using a compositional neural network model\",\n        \"Probing script knowledge from pre-trained models\",\n        \"Rethinking self-supervision objectives for generalizable coherence modeling\",\n        \"From treebank to propbank\",\n        \"Wikihow: A large scale text summarization dataset\",\n        \"Multi-relational script learning for discourse relations\",\n        \"Bart: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Joint event extraction via structured prediction with global features\",\n        \"Constructing narrative event evolutionary graph for script event prediction\",\n        \"Rouge: A package for automatic evaluation of summaries\",\n        \"Conditional generation of temporally-ordered event sequences\",\n        \"A joint neural model for information extraction with global features\",\n        \"Roberta: A robustly optimized bert pretraining approach\",\n        \"Integrating external event knowledge for script learning\",\n        \"Zero-shot event extraction via transfer learning: Challenges and insights\",\n        \"Goal-oriented script construction\",\n        \"A neural local coherence model for text quality assessment\",\n        \"A unified neural coherence model\",\n        \"A corpus and cloze evaluation for deeper understanding of commonsense stories\",\n        \"Events, processes, and states\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Glove: Global vectors for word representation\",\n        \"Steps: Semantic typing of event processes with a sequence-to-sequence approach\",\n        \"Statistical script learning with multi-argument events\",\n        \"Learning statistical scripts with lstm recurrent neural networks\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Learning script knowledge with web experiments\",\n        \"Sentence-bert: Sentence embeddings using siamese bert-networks\",\n        \"ATOMIC: An atlas of machine commonsense for if-then reasoning\",\n        \"Scripts, plans, goals, and understanding: an inquiry into human knowledge structures\",\n        \"Event2Mind: Commonsense inference on events, intents, and reactions\",\n        \"The semantics and pragmatics of functional coherence in discourse\",\n        \"Attention is all you need\",\n        \"GPT-J-6B: A 6 Billion Parameter Autoregressive Language Model\",\n        \"Joint constrained learning for event-event relation extraction\",\n        \"Learning constraints and descriptive segmentation for subevent detection\",\n        \"A crowdsourced database of event sequence descriptions for the acquisition of high-quality script knowledge\",\n        \"Analogous process structure induction for sub-event sequence prediction\",\n        \"Aser: Towards large-scale commonsense knowledge acquisition via higher-order selectional preference over eventualities\",\n        \"Aser: A large-scale eventuality knowledge graph\",\n        \"Zero-shot label-aware event trigger and argument classification\",\n        \"Reasoning about goals, steps, and temporal ordering with wikihow\",\n        \"Bertscore: Evaluating text generation with bert\",\n        \"Claret: Pre-training a correlation-aware context-to-event transformer for event-centric generation and classification\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in SubeventWriter: Iterative Sub-event Sequence Generation with Coherence Controller, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}