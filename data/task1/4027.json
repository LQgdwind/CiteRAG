{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: HyperColor: A HyperNetwork Approach for Synthesizing Auto-colored 3D Models for Game Scenes Population\n\nPaper Abstract: Abstract Designing a 3D game scene is a tedious task that often requires a substantial amount of work. Typically, this task involves synthesis, coloring, and placement of 3D models within the game scene. To lessen this workload, we can apply machine learning to automate some aspects of the game scene development. Earlier research has already tackled automated generation of the game scene background with machine learning. However, model auto-coloring remains an underexplored problem. The automatic coloring of a 3D model is a challenging task, especially when dealing with the digital representation of a colorful, multipart object. In such a case, we have to “understand” the object’s composition and coloring scheme of each part. Existing single-stage methods have their own caveats such as the need for segmentation of the object or generating individual parts that have to be assembled together to yield the final model. We address these limitations by proposing a two-stage training approach to synthesize auto-colored 3D models. In the first stage, we obtain a 3D point cloud representing a 3D object, whilst in the second stage, we assign colors to points within such cloud. Next, by leveraging the so-called triangulation trick, we generate a 3D mesh in which the surfaces are colored based on interpolation of colored points representing vertices of a given mesh triangle. This approach allows us to generate a smooth coloring scheme. Experimental evaluation shows that our two-stage approach gives better results in terms of shape reconstruction and coloring when compared to traditional single-stage techniques.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Procedural natural systems for game level design\",\n        \"Procedural generation of dungeons\",\n        \"Level graph – incremental procedural generation of indoor levels using minimum spanning trees\",\n        \"Procedural content generation via machine learning (pcgml)\",\n        \"A progressive conditional generative adversarial network for generating dense and colored 3d point clouds\",\n        \"Algorithms and approaches for procedural terrain generation - a brief review of current techniques\",\n        \"Generating educational game levels with multistep deep convolutional generative adversarial networks\",\n        \"Geocontrol website. online\",\n        \"3d shapenets: A deep representation for volumetric shapes\",\n        \"Discriminative shape from shading in uncalibrated illumination\",\n        \"Octree generating networks: Efficient convolutional architectures for high-resolution 3d outputs\",\n        \"Octnet: Learning deep 3d representations at high resolutions\",\n        \"Learning a predictable and generative vector representation for objects\",\n        \"Learning a probabilistic latent space of object shapes via 3d generative-adversarial modeling\",\n        \"Category-specific object reconstruction from a single image\",\n        \"3D-R2N2: A Unified Approach for Single and Multi-view 3D Object Reconstruction\",\n        \"Matryoshka networks: Predicting 3d geometry via nested shape layers\",\n        \"Hyperflow: Representing 3d objects as surfaces\",\n        \"A case study of generative adversarial networks for procedural synthesis of original textures in video games\",\n        \"Real-world textured things: a repository of textured models generated with modern photo-reconstruction tools\",\n        \"PartNet: A large-scale benchmark for fine-grained and hierarchical part-level 3D object understanding\",\n        \"Hypernetwork approach to generating point clouds\",\n        \"Learning representations and generative models for 3d point clouds\",\n        \"Multiresolution tree networks for 3d point cloud processing\",\n        \"Adversarial autoencoders for compact representations of 3d point clouds\",\n        \"Pointgrow: Autoregressively learned point cloud generation with self-attention\",\n        \"Patch-based progressive 3d point set upsampling\",\n        \"Pointflow: 3d point cloud generation with continuous normalizing flows\",\n        \"Normalizing flows for probabilistic modeling and inference\",\n        \"Learning gradient fields for shape generation\",\n        \"Point cloud gan\",\n        \"An adaptive edge detection based colorization algorithm and its applications\",\n        \"Colorization by example.\",\n        \"Natural image colorization\",\n        \"Point cloud colorization based on densely annotated 3d shape dataset\",\n        \"Pccn: Point cloud colorization network\",\n        \"Image-to-image translation with conditional adversarial networks\",\n        \"Pointnet: Deep learning on point sets for 3d classification and segmentation\",\n        \"Point2color: 3d point cloud colorization using a conditional generative network and differentiable rendering for airborne lidar\",\n        \"Pointnet++: Deep hierarchical feature learning on point sets in a metric space\",\n        \"The earth mover’s distance as a metric for image retrieval\",\n        \"3d contour closing: A local operator based on chamfer distance transformation\",\n        \"Auto-encoding variational bayes\",\n        \"Wasserstein auto-encoders\",\n        \"Cramer-wold autoencoder\",\n        \"On information and sufficiency\",\n        \"Hypernetworks\",\n        \"Colornet: Investigating the importance of color spaces for image classification\",\n        \"Ml-knn: A lazy learning approach to multi-label learning\",\n        \"Blender vertex paint. [Online]\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in HyperColor: A HyperNetwork Approach for Synthesizing Auto-colored 3D Models for Game Scenes Population, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}