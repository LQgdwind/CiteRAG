{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Computationally Bounded Robust Compilation and Universally Composable Security\n\nPaper Abstract: Abstract Universal Composability (𝖴𝖢𝖴𝖢\\mathsf{UC}) is the gold standard for cryptographic security, but mechanizing proofs of 𝖴𝖢𝖴𝖢\\mathsf{UC} is notoriously difficult. A recently-discovered connection between 𝖴𝖢𝖴𝖢\\mathsf{UC} and Robust Compilation (𝑅𝐶𝑅𝐶\\mathit{RC})—a novel theory of secure compilation—provides a means to verify 𝖴𝖢𝖴𝖢\\mathsf{UC} proofs using tools that mechanize equality results. Unfortunately, the existing methods apply only to perfect 𝖴𝖢𝖴𝖢\\mathsf{UC} security, and real-world protocols relying on cryptography are only computationally secure. This paper addresses this gap by lifting the connection between 𝖴𝖢𝖴𝖢\\mathsf{UC} and 𝑅𝐶𝑅𝐶\\mathit{RC} to the computational setting, extending techniques from the 𝑅𝐶𝑅𝐶\\mathit{RC} setting to apply to computational 𝖴𝖢𝖴𝖢\\mathsf{UC} security. Moreover, it further generalizes the 𝖴𝖢𝖴𝖢\\mathsf{UC}–𝑅𝐶𝑅𝐶\\mathit{RC} connection beyond computational security to arbitrary equalities, providing a framework to subsume the existing perfect case, and to instantiate future theories with more complex notions of security. This connection allows the use of tools for proofs of computational indistinguishability to properly mechanize proofs of computational 𝖴𝖢𝖴𝖢\\mathsf{UC} security. We demonstrate this power by using CryptoVerif to mechanize a proof that parts of the Wireguard protocol are computationally 𝖴𝖢𝖴𝖢\\mathsf{UC} secure. Finally, all proofs of the framework itself are verified in Isabelle/HOL.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"When good components go bad: Formally secure compilation despite dynamic compromise\",\n        \"Journey beyond full abstraction: Exploring robust property preservation for secure compilation\",\n        \"An extended account of trace-relating compiler correctness and secure compilation\",\n        \"SSProve: A foundational framework for modular cryptographic proofs in Coq\",\n        \"Cryptographic divergences: New techniques and new applications\",\n        \"Viaduct: An extensible, optimizing compiler for secure distributed programs\",\n        \"The reactive simulatability (RSIM) framework for asynchronous systems\",\n        \"An interactive prover for protocol verification in the computational model\",\n        \"Improved security proofs in lattice-based cryptography: Using the Rényi divergence rather than the statistical distance\",\n        \"Computer-aided security proofs for the working cryptographer\",\n        \"Abstract modeling of system communication in constructive cryptography using CryptHOL\",\n        \"An efficient cryptographic protocol verifier based on prolog rules\",\n        \"CryptoVerif: Cryptographic protocol verifier in the computational model\",\n        \"Proved generation of implementations from computationally secure protocol specifications\",\n        \"iUC: Flexible universal composability made simple\",\n        \"Universally composable security: a new paradigm for cryptographic protocols\",\n        \"Universally composable commitments\",\n        \"EasyUC: Using EasyCrypt to mechanize proofs of universally composable security\",\n        \"Nonmalleable information flow control\",\n        \"DEEPSEC: Deciding equivalence properties in security protocols theory and practice\",\n        \"Hyperproperties\",\n        \"Differential privacy\",\n        \"EasyCrypt: Computer-aided cryptographic proofs\",\n        \"Key confirmation in key exchange: A formal treatment and implications for TLS 1.3\",\n        \"Cryptographically sound implementations for typed information-flow security\",\n        \"Information-flow types for homomorphic encryptions\",\n        \"Owl: Compositional verification of security protocols via an information-flow type system\",\n        \"Security policies and security models\",\n        \"Foundations of Cryptography: Volume 1.\",\n        \"GNUC: A new universal composability framework\",\n        \"Polynomial runtime and composability\",\n        \"Isabelle/HOL proof assistant\",\n        \"Robust constant-time cryptography\",\n        \"Secure composition of robust and optimising compilers\",\n        \"The IITM model: a simple and expressive model for universal composability\",\n        \"ILC: A calculus for composable, computational cryptography\",\n        \"A mechanised cryptographic proof of the WireGuard virtual private network protocol\",\n        \"Proving noninterference and functional correctness using traces\",\n        \"Gaussian sampling over the integers: Efficient, generic, constant-time\",\n        \"Why should anyone use colours? or, syntax highlighting beyond code snippets\",\n        \"Robustly safe compilation, an efficient form of secure compilation\",\n        \"Exorcising spectres with secure compilers\",\n        \"Universal composability is robust compilation\",\n        \"The foundational cryptography framework\",\n        \"Wysteria: A programming language for generic, mixed-mode multiparty computations\",\n        \"Wys∗: A DSL for verified secure multi-party computations\",\n        \"CSP and determinism in security modelling\",\n        \"Language-based information-flow security\",\n        \"A model for delimited information release\",\n        \"Symphony: Expressive secure multiparty computation with coordination\",\n        \"Proving differential privacy with shadow execution\",\n        \"DPGen: Automated program synthesis for differential privacy\",\n        \"Simplified universal composability framework\",\n        \"Robust declassification\",\n        \"Observational determinism for concurrent program security\",\n        \"Secure program partitioning\",\n        \"LightDP: Towards automating differential privacy proofs\",\n        \"Using replication and partitioning to build secure distributed systems\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Computationally Bounded Robust Compilation and Universally Composable Security, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}