{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: PF-GNN: Differentiable particle filtering based approximation of universal graph representations\n\nPaper Abstract: Abstract Message passing Graph Neural Networks (GNNs) are known to be limited in expressive power by the 1-WL color-refinement test for graph isomorphism. Other more expressive models either are computationally expensive or need preprocessing to extract structural features from the graph. In this work, we propose to make GNNs universal by guiding the learning process with exact isomorphism solver techniques which operate on the paradigm of Individualization and Refinement (IR), a method to artificially introduce asymmetry and further refine the coloring when 1-WL stops. Isomorphism solvers generate a search tree of colorings whose leaves uniquely identify the graph. However, the tree grows exponentially large and needs hand-crafted pruning techniques which are not desirable from a learning perspective. We take a probabilistic view and approximate the search tree of colorings (i.e. embeddings) by sampling multiple paths from root to leaves of the search tree. To learn more discriminative representations, we guide the sampling process with particle filter updates, a principled approach for sequential state estimation. Our algorithm is end-to-end differentiable, can be applied with any GNN as backbone and learns richer graph representations with only linear increase in runtime. Experimental evaluation shows that our approach consistently outperforms leading GNN models on both synthetic benchmarks for isomorphism detection as well as real-world datasets.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The surprising power of graph neural networks with random node initialization\",\n        \"On weisfeiler-leman invariance: Subgraph counts and related graph properties\",\n        \"Breaking the limits of message passing graph neural networks\",\n        \"Directional graph networks\",\n        \"Improving graph neural network expressivity via subgraph isomorphism counting\",\n        \"Gnn-film: Graph neural networks with feature-wise linear modulation\",\n        \"Alchemy: A quantum chemistry dataset for benchmarking ai models\",\n        \"On the equivalence between graph isomorphism testing and function approximation with gnns\",\n        \"Can graph neural networks count substructures?\",\n        \"Principal neighbourhood aggregation for graph nets\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Understanding the representation power of graph neural networks in learning graph topology\",\n        \"Benchmarking graph neural networks\",\n        \"Neural message passing for quantum chemistry\",\n        \"Probability inequalities for sums of bounded random variables\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Junction tree variational autoencoder for molecular graph generation\",\n        \"Conflict propagation and component recursion for canonical labeling\",\n        \"Particle filter networks with application to visual localization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Directional message passing for molecular graphs\",\n        \"Understanding attention and generalization in graph neural networks\",\n        \"A property testing framework for the theoretical expressivity of graph kernels\",\n        \"Distance encodingâ€“design provably more powerful gnns for structural representation learning\",\n        \"What graph neural networks cannot learn: depth vs width\",\n        \"Discriminative particle filter reinforcement learning for complex partial observations\",\n        \"Particle filter recurrent neural networks\",\n        \"Invariant and equivariant graph networks\",\n        \"Provably powerful graph networks\",\n        \"Nauty and Traces\",\n        \"Practical graph isomorphism, ii\",\n        \"Strongly regular graphs\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"Weisfeiler and leman go sparse: Towards scalable higher-order graph embeddings\",\n        \"Relational pooling for graph representations\",\n        \"Quantum chemistry structures and properties of 134 kilo molecules\",\n        \"Enumeration of 166 billion organic small molecules in the chemical universe database gdb-17\",\n        \"Random features strengthen graph neural networks\",\n        \"Understanding machine learning: From theory to algorithms\",\n        \"On the equivalence between positional node embeddings and structural graph representations\",\n        \"Graph attention networks\",\n        \"Building powerful and equivariant graph neural networks with structural message-passing\",\n        \"How powerful are graph neural networks?\",\n        \"Position-aware graph neural networks\",\n        \"Graph random neural features for distance-preserving graph representations\",\n        \"Factor graph neural networks\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in PF-GNN: Differentiable particle filtering based approximation of universal graph representations, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}