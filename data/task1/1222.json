{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Buffer Pool Aware Query Scheduling via Deep Reinforcement Learning (Extended Abstract)\n\nPaper Abstract: Abstract In this extended abstract, we propose a new technique for query scheduling with the explicit goal of reducing disk reads and thus implicitly increasing query performance. We introduce SmartQueue, a learned scheduler that leverages overlapping data reads among incoming queries and learns a scheduling strategy that improves cache hits. SmartQueue relies on deep reinforcement learning to produce workload-specific scheduling strategies that focus on long-term performance benefits while being adaptive to previously-unseen data access patterns. We present results from a proof-of-concept prototype, demonstrating that learned schedulers can offer significant performance improvements over hand-crafted scheduling heuristics. Ultimately, we make the case that this is a promising research direction in the intersection of machine learning and databases.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"PostgreSQL database\",\n        \"Cache Tables: Paving the Way for an Adaptive Database Cache\",\n        \"A Brief Survey of Deep Reinforcement Learning\",\n        \"Cloud scheduling with setup cost\",\n        \"Relational inductive biases, deep learning, and graph networks\",\n        \"iCBS: Incremental Cost-based Scheduling Under Piecewise Linear SLAs\",\n        \"SLA-tree: A Framework for Efficiently Supporting SLA-based Decisions in Cloud Computing\",\n        \"Termite: A System for Tunneling Through Heterogeneous Data\",\n        \"Cost-wait trade-offs in client-side resource provisioning with elastic clouds\",\n        \"Cache augmented database management systems\",\n        \"The three pillars of machine programming\",\n        \"Keras: The Python Deep Learning library\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Learned Cardinalities: Estimating Correlated Joins with Deep Learning\",\n        \"Towards Multi-Tenant Performance SLOs\",\n        \"Generalization and network design strategies\",\n        \"Deep learning\",\n        \"Cost-Efficient and Application SLA-Aware Client Side Request Scheduling in an Infrastructure-as-a-Service Cloud\",\n        \"PMAX: Tenant Placement in Multitenant Databases for Profit Maximization\",\n        \"Learning Scheduling Algorithms for Data Processing Clusters\",\n        \"Innateness, AlphaZero, and Artificial Intelligence\",\n        \"NashDB: An End-to-End Economic Method for Elastic Database Fragmentation, Replication, and Provisioning\",\n        \"Neo: A Learned Query Optimizer\",\n        \"Releasing Cloud Databases from the Chains of Performance Prediction Models\",\n        \"WiSeDB: A Learning-based Workload Management Advisor for Cloud Databases\",\n        \"The Need for Biases in Learning Generalizations\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Deep Learning for Entity Matching: A Design Space Exploration\",\n        \"The Making of TPC-DS\",\n        \"SQLVM: Performance Isolation in Multi-Tenant Relational Database-as-a-Service\",\n        \"Cost-Guided Cardinality Estimation: Focus Where it Matters\",\n        \"Learning State Representations for Query Optimization with Deep Reinforcement Learning\",\n        \"PerfEnforce Demonstration: Data Analytics with Performance Guarantees\",\n        \"SLAOrchestrator: Reducing the Cost of Performance SLAs for Cloud Data Analytics\",\n        \"Database-Agnostic Workload Management\",\n        \"Virtual Infrastructure Management in Private and Hybrid Clouds\",\n        \"An end-to-end learning-based cost estimator\",\n        \"Introduction to Reinforcement Learning\",\n        \"STeP: Scalable Tenant Placement for Managing Database-as-a-Service Deployments\",\n        \"Q-Cop: Avoiding bad query mixes to minimize client timeouts under heavy loads\",\n        \"SkinnerDB: Regret-bounded Query Evaluation via Reinforcement Learning\",\n        \"Automatic Database Management System Tuning Through Large-scale Machine Learning\",\n        \"ActiveSLA: A Profit-oriented Admission Control Framework for Database-as-a-Service Providers\",\n        \"Intelligent management of virtualized resources for database systems in cloud environment\",\n        \"Deep unsupervised cardinality estimation\",\n        \"Buffering databse operations for enhanced instruction cache performance\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Buffer Pool Aware Query Scheduling via Deep Reinforcement Learning (Extended Abstract), providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}