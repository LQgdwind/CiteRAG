{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Drop: Robust Graph Neural Network via Topological Denoising\n\nPaper Abstract: Abstract. Graph Neural Networks (GNNs) have shown to be powerful tools for graph analytics. The key idea is to recursively propagate and aggregate information along edges of the given graph. Despite their success, however, the existing GNNs are usually sensitive to the quality of the input graph. Real-world graphs are often noisy and contain task-irrelevant edges, which may lead to suboptimal generalization performance in the learned GNN models. In this paper, we propose PTDNet, a parameterized topological denoising network, to improve the robustness and generalization performance of GNNs by learning to drop task-irrelevant edges. PTDNet prunes task-irrelevant edges by penalizing the number of edges in the sparsified graph with parameterized networks. To take into consideration of the topology of the entire graph, the nuclear norm regularization is applied to impose the low-rank constraint on the resulting sparsified graph for better generalization. PTDNet can be used as a key component in GNN models to improve their performances on various tasks, such as node classification and link prediction. Experimental studies on both synthetic and benchmark datasets show that PTDNet can improve the performance of GNNs significantly and the performance gain becomes larger for more noisy datasets.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On Differentially Private Graph Sparsification and Applications\",\n        \"Approximating st Minimum Cuts in √ï (n2) Time.\",\n        \"Estimating or propagating gradients through stochastic neurons for conditional computation\",\n        \"Spectral networks and locally connected networks on graphs\",\n        \"Toward an architecture for never-ending language learning\",\n        \"Fastgcn: fast learning with graph convolutional networks via importance sampling\",\n        \"There are planar graphs almost as good as the complete graph\",\n        \"Algorithms for analysis and design of robust controllers\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Provable and practical approximations for the degree distribution using sublinear graph samples\",\n        \"All You Need is Low (Rank): Defending Against Adversarial Attacks on Graphs\",\n        \"Maximum properties and inequalities for the eigenvalues of completely continuous operators\",\n        \"Community detection in graphs\",\n        \"Nuclear norm of higher-order tensors\",\n        \"An Equivalence Between Sparse Approximation And Support Vector Machines\",\n        \"A new model for learning in graph domains\",\n        \"Inductive representation learning on large graphs\",\n        \"A Unifying Framework for Spectrum-Preserving Graph Sparsification and Coarsening\",\n        \"Measuring and Improving the Use of Graph Information in Graph Neural Networks\",\n        \"Adaptive sampling towards fast graph representation learning\",\n        \"Matrix backpropagation for deep networks with structured layers\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"Graph Structure Learning for Robust Graph Neural Networks\",\n        \"Low-rank Sparse Decomposition of Graph Adjacency Matrices for Extracting Clean Clusters\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Variational graph auto-encoders\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Adaptive graph convolutional neural networks\",\n        \"Learning Sparse Neural Networks through L‚Äã_‚Äã0ùêø_0L\\\\_0 Regularization\",\n        \"What graph neural networks cannot learn: depth vs width\",\n        \"Disentangled Graph Convolutional Networks\",\n        \"The concrete distribution: A continuous relaxation of discrete random variables\",\n        \"Neural variational inference and learning in belief networks\",\n        \"Stable and efficient spectral divide and conquer algorithms for the symmetric eigenvalue decomposition and the SVD\",\n        \"Co-regularized deep multi-network embedding\",\n        \"Numerical analysis: a second course\",\n        \"Guaranteed minimum-rank solutions of linear matrix equations via nuclear norm minimization\",\n        \"DropEdge: Towards Deep Graph Convolutional Networks on Node Classification\",\n        \"The graph neural network model\",\n        \"Collective classification in network data\",\n        \"Sweg: Lossless and lossy summarization of web-scale graphs\",\n        \"The WU-Minn human connectome project: an overview\",\n        \"Graph attention networks\",\n        \"Uncovering Hierarchical Structure in Social Networks using Isospectral Reductions\",\n        \"Learning Robust Representations with Graph Denoising Policy Network\",\n        \"Inductive and Unsupervised Representation Learning on Graph Structured Objects\",\n        \"Backpropagation-Friendly Eigendecomposition\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"How powerful are graph neural networks?\",\n        \"Learning Sparse Neural Networks via l0 and l1 by a Relaxed Variable Splitting Method with Application to Multi-scale Curve Classification\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"GraphSAINT: Graph Sampling Based Inductive Learning Method\",\n        \"Adaptive Structural Fingerprints For Graph Attention Networks\",\n        \"Deep learning on graphs: A survey\",\n        \"PairNorm: Tackling Oversmoothing in GNNs\",\n        \"Robust Graph Representation Learning via Neural Sparsification\",\n        \"Graph neural networks: A review of methods and applications\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Learning to Drop: Robust Graph Neural Network via Topological Denoising, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}