{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Exploiting Sparsity in Pruned Neural Networks to Optimize Large Model Training\n\nPaper Abstract: Abstract Parallel training of neural networks at scale is challenging due to significant overheads arising from communication. Recently, deep learning researchers have developed a variety of pruning algorithms that are capable of pruning (i.e. setting to zero) 80-90% of the parameters in a neural network to yield sparse subnetworks that equal the accuracy of the unpruned parent network. In this work, we propose a novel approach that exploits these sparse subnetworks to optimize the memory utilization and communication in two popular algorithms for parallel deep learning namely â€“ data and inter-layer parallelism. We integrate our approach into AxoNN, a highly scalable framework for parallel deep learning that relies on data and inter-layer parallelism, and demonstrate the reduction in communication time and memory utilization. On 512 NVIDIA V100 GPUs, our optimizations reduce the memory consumption of a 2.7 billion parameter model by 74%, and the total communication time by 40%, thus providing an overall speedup of 34% over AxoNN, 32% over DeepSpeed-3D and 46% over Sputnik, a sparse matrix computation baseline.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Reconciling modern machine-learning practice and the classical bias-variance trade-off\",\n        \"Language models are few-shot learners\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Drawing early-bird tickets: Toward more efficient training of deep networks\",\n        \"When BERT Plays the Lottery, All Tickets Are Winning\",\n        \"Rethinking the value of network pruning\",\n        \"Successfully applying the stabilized lottery ticket hypothesis to the transformer architecture\",\n        \"Linear mode connectivity and the lottery ticket hypothesis\",\n        \"Towards understanding iterative magnitude pruning: Why lottery tickets win\",\n        \"Adaptive sparse tiling for sparse matrix multiplication\",\n        \"Sparse GPU kernels for deep learning\",\n        \"Design principles for sparse matrix multiplication on the gpu\",\n        \"AxoNN: An asynchronous, message-driven parallel framework for extreme-scale deep learning\",\n        \"3d parallelism with megatronlm and zero redundancy optimizer\",\n        \"Toward a theory of optimization for over-parameterized systems of non-linear equations: the lessons of deep learning\",\n        \"Gradient descent provably optimizes over-parameterized neural networks\",\n        \"The implicit bias of gradient descent on separable data\",\n        \"Understanding deep learning requires rethinking generalization\",\n        \"Neural tangent kernel: Convergence and generalization in neural networks\",\n        \"The state of sparsity in deep neural networks\",\n        \"Gpu kernels for block-sparse weights\",\n        \"Efficient tensor core-based gpu kernels for structured sparsity under reduced precision\",\n        \"Kaleidoscope: An efficient, learnable representation for all structured linear maps\",\n        \"Learning fast algorithms for linear transforms using butterfly factorizations\",\n        \"Megatron-lm: Training multi-billion parameter language models using model parallelism\",\n        \"Pipedream: Generalized pipeline parallelism for dnn training\",\n        \"Pipemare: Asynchronous pipeline parallel dnn training\",\n        \"Efficient large-scale language model training on GPU clusters\",\n        \"Zero: Memory optimizations toward training trillion parameter models\",\n        \"Zero-infinity: Breaking the gpu memory wall for extreme scale deep learning\",\n        \"Demystifying parallel and distributed deep learning: An in-depth concurrency analysis\",\n        \"Mixed precision training\",\n        \"Training deep nets with sublinear memory cost\",\n        \"Bigscience large open-science open-access multilingual language model\",\n        \"Using deepspeed and megatron to train megatron-turing nlg 530b, a large-scale generative language model\",\n        \"Adam: A method for stochastic optimization\",\n        \"Pointer sentinel mixture models\",\n        \"Aligning books and movies: Towards story-like visual explanations by watching movies and reading books\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Wide residual networks\",\n        \"Attention is all you need\",\n        \"On the momentum term in gradient descent learning algorithms\",\n        \"Fixing weight decay regularization in adam\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"Creating sparse gpt-3 models with iterative pruning\",\n        \"The pile: An 800gb dataset of diverse text for language modeling\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Exploiting Sparsity in Pruned Neural Networks to Optimize Large Model Training, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}