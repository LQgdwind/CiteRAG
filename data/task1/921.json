{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Making Convolutions Resilient via Algorithm-Based Error Detection Techniques\n\nPaper Abstract: Abstract The ability of Convolutional Neural Networks (CNNs) to accurately process real-time telemetry has boosted their use in safety-critical and high-performance computing systems. As such systems require high levels of resilience to errors, CNNs must execute correctly in the presence of hardware faults. Full duplication provides the needed assurance but incurs a prohibitive 100% overhead. Algorithmic techniques are known to offer low-cost solutions, but the practical feasibility and performance of such techniques have never been studied for CNN deployment platforms (e.g., TensorFlow or TensorRT on GPUs). In this paper, we focus on algorithmically verifying Convolutions, which are the most resource-demanding operations in CNNs. We use checksums to verify convolutions, adding a small amount of redundancy, far less than full-duplication. We first identify the challenges that arise in employing Algorithm-Based Error Detection (ABED) for Convolutions in optimized inference platforms that fuse multiple network layers and use reduced-precision operations, and demonstrate how to overcome them. We propose and evaluate variations of ABED techniques that offer implementation complexity, runtime overhead, and coverage trade-offs. Results show that ABED can detect all transient hardware errors that might otherwise corrupt output and does so while incurring low runtime overheads (6-23%), offering at least 1.6×\\times throughput to workloads compared to full duplication.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Performance Evaluation of Checksum-Based ABFT\",\n        \"High-Integrity GPU Designs for Critical Real-Time Automotive Systems\",\n        \"Arm A64 Instruction Set Architecture: Armv8, for Armv8-A architecture profile\",\n        \"Apollo Open Platform\",\n        \"Commercial Fault Tolerance: A Tale of Two Systems\",\n        \"First Tests of a New Facility for Device-Level, Board-Level and System-Level Neutron Irradiation of Microelectronics\",\n        \"GPU-ABFT: Optimizing Algorithm-Based Fault Tolerance for Heterogeneous Systems with GPUs\",\n        \"Containment Domains: A Scalable, Efficient, and Flexible Resilience Scheme for Exascale Systems\",\n        \"Intermittent Faults and Effects on Reliability of Integrated Circuits\",\n        \"Analyzing and Increasing the Reliability of Convolutional Neural Networks on GPUs\",\n        \"ImageNet: A Large-Scale Hierarchical Image Database\",\n        \"Understanding Software Approaches for GPGPU Reliability\",\n        \"Matrix Multiplication on GPUs with On-Line Fault Tolerance\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Algorithm-Based Fault Tolerance for Matrix Operations\",\n        \"Learning to Prune Filters in Convolutional Neural Networks\",\n        \"Optimized Software-Based Hardening Strategies for Matrix Multiplication and Fast Fourier Transform\",\n        \"ISO 26262-9:2011 Preview Road Vehicles Functional Safety\",\n        \"A Triple Core Lock-Step (TCLS) ARM® Cortex®-R5 Processor for Safety-Critical and Ultra-Reliable Applications\",\n        \"ML-based Fault Injection for Autonomous Vehicles: A Case for Bayesian Fault Injection\",\n        \"In-Datacenter Performance Analysis of a Tensor Processing Unit\",\n        \"Exascale Deep Learning for Climate Analytics\",\n        \"Understanding Error Propagation in Deep Learning Neural Network (DNN) Accelerators and Applications\",\n        \"Enabling Sparse Winograd Convolution by Native Pruning\",\n        \"Correcting Soft Errors Online in Fast Fourier Transform\",\n        \"The Architectural Implications of Autonomous Driving: Constraints and Acceleration\",\n        \"Optimizing Software-Directed Instruction Replication for GPU Error Detection\",\n        \"Enabling Overclocking through Algorithm-Level Error Detection\",\n        \"Pruning Convolutional Neural Networks for Resource Efficient Transfer Learning\",\n        \"Functional Safety Methodologies for Automotive Applications\",\n        \"The Los Alamos Neutron Science Center Spallation Neutron Sources\",\n        \"NVIDIA Tesla V100 GPU Architecture, The World’s Most Advanced Datacenter GPU\",\n        \"NVIDIA AI INFERENCE PLATFORM Giant Leaps in Performance and Efficiency for AI Services, from the Data Center to the Network’s Edge\",\n        \"NVIDIA Jetson AGX Xavier Developer Kit — NVIDIA Developer\",\n        \"CUB: Main Page - NVlabs\",\n        \"CUDA Binary Utilities :: CUDA Toolkit Documentation\",\n        \"cuDNN Developer Guide :: Deep Learning SDK Documentation\",\n        \"NVIDIA DRIVE — NVIDIA Developer\",\n        \"Self-Driving Safety Report\",\n        \"Ares: A Framework for Quantifying the Resilience of Deep Neural Networks\",\n        \"Lower Numerical Precision Deep Learning Inference and Training\",\n        \"Deep Compression: Compressing Deep Neural Network with Pruning, Trained Quantization and Huffman Coding\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Addressing Failures in Exascale Computing\",\n        \"Efficient Processing of Deep Neural Networks: A Tutorial and Survey\",\n        \"Tesla Autonomy Investor Day — Tesla, Inc.\",\n        \"Real-World Design and Evaluation of Compiler-Managed GPU Redundant Multithreading\",\n        \"Towards Practical Algorithm Based Fault Tolerance in Dense Linear Algebra\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Making Convolutions Resilient via Algorithm-Based Error Detection Techniques, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}