{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RecXplainer: Amortized Attribute-based Personalized Explanations for Recommender Systems\n\nPaper Abstract: Abstract Recommender systems influence many of our interactions in the digital world—impacting how we shop for clothes, sorting what we see when browsing YouTube or TikTok, and determining which restaurants and hotels we are shown when using hospitality platforms. Modern recommender systems are large, opaque models trained on a mixture of proprietary and open-source datasets. Naturally, issues of trust arise on both the developer and user side: is the system working correctly, and why did a user receive (or not receive) a particular recommendation? Providing an explanation alongside a recommendation alleviates some of these concerns. The status quo for auxiliary recommender system feedback is either user-specific explanations (e.g., “users who bought item B also bought item A”) or item-specific explanations (e.g., “we are recommending item A because you watched/bought item B”). However, users bring personalized context into their search experience, valuing an item as a function of that item’s attributes and their own personal preferences. In this work, we propose RecXplainer, a novel method for generating fine-grained explanations based on a user’s preferences over the attributes of recommended items. We evaluate RecXplainer on five real-world and large-scale recommendation datasets using five different kinds of recommender systems to demonstrate the efficacy of RecXplainer in capturing users’ preferences over item attributes and using them to explain recommendations. We also compare RecXplainer to five baselines and show RecXplainer’s exceptional performance on ten metrics.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Using Explainability for Constrained Matrix Factorization\",\n        \"Toward the Next Generation of Recommender Systems: A Survey of the State-of-the-Art and Possible Extensions\",\n        \"Content-based recommender systems\",\n        \"Aspect Based Recommendations: Recommending Items with the Most Valuable Aspects Based on User Reviews\",\n        \"Explaining Recommendations: Satisfaction vs. Promotion\",\n        \"Recommender systems survey\",\n        \"Hybrid Recommender Systems: Survey and Experiments\",\n        \"State-of-the-art recommender systems\",\n        \"Attention-Driven Factor Model for Explainable Personalized Recommendation\",\n        \"Learning to Rank Features for Recommendation over Multiple Categories\",\n        \"Incorporating Interpretability into Latent Factor Models via Fast Influence Analysis\",\n        \"Explaining by Removing: A Unified Framework for Model Explanation\",\n        \"The Yahoo! Music Dataset and KDD-Cup’11\",\n        \"Explaining Content-Based Recommendations\",\n        \"Collaborative Filtering\",\n        \"HetRec 2011 — grouplens.org\",\n        \"The MovieLens Datasets: History and Context\",\n        \"MovieLens 20M Dataset — grouplens.org\",\n        \"TriRank: Review-Aware Explainable Recommendation by Modeling Aspects\",\n        \"Explainable Recommendation with Fusion of Aspect Information\",\n        \"Anime Recommendations Database — kaggle.com\",\n        \"How Pandora built a better recommendation engine\",\n        \"In2Rec: Influence-Based Interpretable Recommendation\",\n        \"A Unified Approach to Interpreting Model Predictions\",\n        \"Hidden Factors and Hidden Topics: Understanding Rating Dimensions with Review Text\",\n        \"Learning Attitudes and Attributes from Multi-aspect Reviews\",\n        \"Interpretable Machine Learning\",\n        \"Towards Explaining Recommendations through Local Surrogate Models\",\n        \"Explainable Recommendation via Interpretable Feature Mapping and Evaluation of Explainability\",\n        \"Explanation Mining: Post Hoc Interpretability of Latent Factor Models for Recommendation Systems\",\n        \"”Why Should I Trust You?”: Explaining the Predictions of Any Classifier\",\n        \"Introduction To Recommender Systems- 1: Content-Based Filtering And Collaborative Filtering\",\n        \"A Value for n-Person Games\",\n        \"The Role of Transparency in Recommender Systems\",\n        \"A survey of collaborative filtering techniques\",\n        \"The FacT: Taming Latent Factor Models for Explainability with Factorization Trees\",\n        \"Explanations of Recommendations\",\n        \"A Survey of Explanations in Recommender Systems\",\n        \"Designing and Evaluating Explanations for Recommender Systems, 479–510\",\n        \"Trustworthy Machine Learning\",\n        \"Amortized Generation of Sequential Counterfactual Explanations for Black-box Models\",\n        \"Tagsplanations: Explaining Recommendations Using Tags\",\n        \"A Reinforcement Learning Framework for Explainable Recommendation\",\n        \"Reinforced Path Reasoning for Counterfactual Explainable Recommendation\",\n        \"A Similarity Measure for Indefinite Rankings\",\n        \"Rank correlation — Wikipedia, The Free Encyclopedia\",\n        \"Why Netflix Won’t Let You Write Reviews Any More\",\n        \"EX3: Explainable Attribute-Aware Item-Set Recommendations\",\n        \"Explainable Recommendation: A Survey and New Perspectives\",\n        \"Explicit Factor Models for Explainable Recommendation Based on Phrase-Level Sentiment Analysis\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in RecXplainer: Amortized Attribute-based Personalized Explanations for Recommender Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}