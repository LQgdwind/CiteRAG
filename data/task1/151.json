{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Distributed Path Query Engine for Temporal Property Graphs *\n\nPaper Abstract: Abstract Property graphs are a common form of linked data, with path queries used to traverse and explore them for enterprise transactions and mining. Temporal property graphs are a recent variant where time is a first-class entity to be queried over, and their properties and structure vary over time. These are seen in social, telecom, transit and epidemic networks. However, current graph databases and query engines have limited support for temporal relations among graph entities, no support for time-varying entities and/or do not scale on distributed resources. We address this gap by extending a linear path query model over property graphs to include intuitive temporal predicates and aggregation operators over temporal graphs. We design a distributed execution model for these temporal path queries using the interval-centric computing model, and develop a novel cost model to select an efficient execution plan from several. We perform detailed experiments of our ùí¢‚Äãr‚Äãa‚Äãn‚Äãi‚Äãt‚Äãeùí¢ùëüùëéùëõùëñùë°ùëí\\mathcal{G}ranite distributed query engine using both static and dynamic temporal property graphs as large as 52‚ÄãM52ùëÄ52M vertices, 218‚ÄãM218ùëÄ218M edges and 325‚ÄãM325ùëÄ325M properties, and a 160016001600-query workload, derived from the LDBC benchmark. We often offer sub-second query latencies on a commodity cluster, which is 149√ó149\\times‚Äì1140√ó1140\\times faster compared to industry-leading Neo4J shared-memory graph database and the JanusGraph/Spark distributed graph query engine. ùí¢‚Äãr‚Äãa‚Äãn‚Äãi‚Äãt‚Äãeùí¢ùëüùëéùëõùëñùë°ùëí\\mathcal{G}ranite also completes 100%percent100100\\% of the queries for all graphs, compared to only 323232‚Äì92%percent9292\\% workload completion by the baseline systems. Further, our cost model selects a query plan that is within 10%percent1010\\% of the optimal execution time in 90%percent9090\\% of the cases. Despite the irregular nature of graph processing, we exhibit a weak-scaling efficiency of ‚â•60%absentpercent60\\geq 60\\% on 888 nodes and ‚â•40%absentpercent40\\geq 40\\% on 161616 nodes, for most query workloads.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Never-ending learning\",\n        \"Measuring user influence in twitter: The million follower fallacy\",\n        \"epidms: data management and analytics for decision-making from epidemic spread simulation ensembles\",\n        \"O bitcoin where art thou? insight into large-scale transaction graphs.\",\n        \"Fake news detection on social media: A data mining perspective\",\n        \"Graph pattern matching revised for social network analysis\",\n        \"A graph model for e-commerce recommender systems\",\n        \"JanusGraph\",\n        \"In-memory graph databases for web-scale data\",\n        \"Efficient indices using graph partitioning in rdf triple stores\",\n        \"Index structures for path expressions\",\n        \"Declarative and distributed graph analytics with gradoop\",\n        \"Trinity: A distributed graph engine on a memory cloud\",\n        \"Tracking the evolution of communities in dynamic social networks\",\n        \"Time-aggregated graphs for modeling spatio-temporal networks\",\n        \"Stock market as temporal network\",\n        \"Streaming knowledge bases\",\n        \"Tracking structure of streaming social networks\",\n        \"Automatic algorithm transformation for efficient multi-snapshot analytics on temporal graphs\",\n        \"Pregel: a system for large-scale graph processing\",\n        \"An interval-centric model for distributed computing over temporal graphs\",\n        \"A distributed graph engine for web scale rdf data\",\n        \"A distributed path query engine for temporal property graphs\",\n        \"How well do graph-processing platforms perform? an empirical performance evaluation and analysis\",\n        \"GoFFish: A sub-graph centric framework for large-scale graph analytics\",\n        \"Graphx: Graph processing in a distributed dataflow framework\",\n        \"G-miner: An efficient task-oriented graph mining system\",\n        \"The parallel bgl: A generic library for distributed graph computations\",\n        \"A lightweight communication runtime for distributed graph analytics\",\n        \"Fast and concurrent {{RDF}} queries with rdma-based distributed graph exploration\",\n        \"Distributed programming over time-series graphs\",\n        \"Chronos: a graph engine for temporal graph analysis\",\n        \"Incrementalization of vertex-centric programs\",\n        \"Kineograph: taking the pulse of a fast-changing and connected world\",\n        \"Graql: A query language for high-performance attributed graph databases\",\n        \"Distributed query processing in an ad-hoc semantic web data sharing system\",\n        \"SPARQL Query Language for RDF\",\n        \"Scalable sparql querying of large rdf graphs\",\n        \"GoDB: From batch processing to distributed querying over property graphs\",\n        \"Horton+: A distributed system for processing declarative reachability queries over partitioned graphs\",\n        \"Top-kùëòk durable graph pattern queries on temporal graphs\",\n        \"Timereach: Historical reachability queries on evolving graphs\",\n        \"Reachability and time-based path queries in temporal graphs\",\n        \"Arrow: Approximating reachability using random walks over web-scale graphs\",\n        \"ASAP: Fast, approximate graph pattern mining at scale\",\n        \"Chronograph: Enabling temporal graph traversals for efficient information diffusion analysis over time\",\n        \"Neo4j graph platform\",\n        \"Orientdb graph database\",\n        \"Maintaining knowledge about temporal intervals\",\n        \"Temporal graph algebra\",\n        \"A fast and high quality multilevel scheme for partitioning irregular graphs\",\n        \"On rectangular partitionings in two dimensions: Algorithms, complexity and applications\",\n        \"The LDBC social network benchmark (version 0.3.2)\",\n        \"S3g2: A scalable structure-correlated social graph generator\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in A Distributed Path Query Engine for Temporal Property Graphs *, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}