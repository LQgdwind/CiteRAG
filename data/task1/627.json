{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Preventing Posterior Collapse with Levenshtein Variational Autoencoder\n\nPaper Abstract: Abstract Variational autoencoders (VAEs) are a standard framework for inducing latent variable models that have been shown effective in learning text representations as well as in text generation. The key challenge with using VAEs is the posterior collapse problem: learning tends to converge to trivial solutions where the generators ignore latent variables. In our Levenstein VAE, we propose to replace the evidence lower bound (ELBO) with a new objective which is simple to optimize and prevents posterior collapse. Intuitively, it corresponds to generating a sequence from the autoencoder and encouraging the model to predict an optimal continuation according to the Levenshtein distance (LD) with the reference sentence at each time step in the generated sequence. We motivate the method from the probabilistic perspective by showing that it is closely related to optimizing a bound on the intractable Kullback-Leibler divergence of an LD-based kernel density estimator from the model distribution. With this objective, any generator disregarding latent variables will incur large penalties and hence posterior collapse does not happen. We relate our approach to policy distillation Ross et al. (2011) and dynamic oracles Goldberg and Nivre (2012). By considering Yelp and SNLI benchmarks, we show that Levenstein VAE produces more informative latent representations than alternative approaches to preventing posterior collapse.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Apprenticeship learning via inverse reinforcement learning\",\n        \"Multivariate binary discrimination by the kernel method\",\n        \"Layer normalization\",\n        \"Scheduled sampling for sequence prediction with recurrent neural networks\",\n        \"Random search for hyper-parameter optimization\",\n        \"Latent dirichlet allocation\",\n        \"Large-scale machine learning with stochastic gradient descent\",\n        \"A large annotated corpus for learning natural language inference\",\n        \"Generating sentences from a continuous space\",\n        \"The mathematics of statistical machine translation: Parameter estimation\",\n        \"Distilling policy distillation\",\n        \"Avoiding latent variable collapse with generative skip models\",\n        \"Cyclical annealing schedule: A simple approach to mitigating KL vanishing\",\n        \"A dynamic oracle for arc-eager dependency parsing\",\n        \"Automatic chemical design using a data-driven continuous representation of molecules\",\n        \"Lagging inference networks and posterior collapse in variational autoencoders\",\n        \"beta-vae: Learning basic visual concepts with a constrained variational framework\",\n        \"Long short-term memory\",\n        \"The curious case of neural text degeneration\",\n        \"Toward controlled generation of text\",\n        \"How (not) to train your generative model: Scheduled sampling, likelihood, adversary?\",\n        \"Tying word vectors and word classifiers: A loss framework for language modeling\",\n        \"Semi-amortized variational autoencoders\",\n        \"Auto-encoding variational bayes\",\n        \"N-gram similarity and distance\",\n        \"Binary codes capable of correcting deletions, insertions, and reversals\",\n        \"Donâ€™t blame the elbo! A linear VAE perspective on posterior collapse\",\n        \"Adversarial autoencoders\",\n        \"Building a large annotated corpus of english: The penn treebank\",\n        \"Training language gans from scratch\",\n        \"Learning in implicit generative models\",\n        \"On the difficulty of training recurrent neural networks\",\n        \"Effective estimation of deep generative language models\",\n        \"Sequence level training with recurrent neural networks\",\n        \"Stochastic backpropagation and approximate inference in deep generative models\",\n        \"A reduction of imitation learning and structured prediction to no-regret online learning\",\n        \"Policy distillation\",\n        \"Optimal completion distillation for sequence learning\",\n        \"Evolution strategies as a scalable alternative to reinforcement learning\",\n        \"Gradient estimation using stochastic computation graphs\",\n        \"Recurrent dropout without memory loss\",\n        \"Style transfer from non-parallel text by cross-alignment\",\n        \"Wasserstein auto-encoders\",\n        \"VAE with a vampprior\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Sphericanl latent spaces for stable variational autoencoders\",\n        \"Improved variational autoencoders for text modeling using dilated convolutions\",\n        \"Infovae: Information maximizing variational autoencoders\",\n        \"Learning discourse-level diversity for neural dialog models using conditional variational autoencoders\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Preventing Posterior Collapse with Levenshtein Variational Autoencoder, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}