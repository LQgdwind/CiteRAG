{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Dynamic Sparse Training for Deep Reinforcement Learning\n\nPaper Abstract: Abstract Deep reinforcement learning (DRL) agents are trained through trial-and-error interactions with the environment. This leads to a long training time for dense neural networks to achieve good performance. Hence, prohibitive computation and memory resources are consumed. Recently, learning efficient DRL agents has received increasing attention. Yet, current methods focus on accelerating inference time. In this paper, we introduce for the first time a dynamic sparse training approach for deep reinforcement learning to accelerate the training process. The proposed approach trains a sparse neural network from scratch and dynamically adapts its topology to the changing data distribution during training. Experiments on continuous control tasks show that our dynamic sparse agents achieve higher performance than the equivalent dense methods, reduce the parameter count and floating-point operations (FLOPs) by 50%, and have a faster learning speed that enables reaching the performance of dense agents with 40âˆ’50405040-50% reduction in the training steps111Code is available at: https://github.com/GhadaSokar/Dynamic-Sparse-Training-for-Deep-Reinforcement-Learning. Proceedings of the 31st International Joint Conference on Artificial Intelligence (IJCAI-22)..\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Quick and robust feature selection: the strength of energy-efficient sparse training for autoencoders\",\n        \"Deep rewiring: Training very sparse deep networks\",\n        \"Efficient lifelong learning with a-gem\",\n        \"The lottery tickets hypothesis for supervised and self-supervised pre-training in computer vision models\",\n        \"Predicting parameters in deep learning\",\n        \"Sparse networks from scratch: Faster training without losing performance\",\n        \"On the evolution of random graphs\",\n        \"Rigging the lottery: Making all tickets winners\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Addressing function approximation error in actor-critic methods\",\n        \"Soft actor-critic: Off-policy maximum entropy deep reinforcement learning with a stochastic actor\",\n        \"Soft actor-critic algorithms and applications\",\n        \"Neuroevolution strategies for episodic reinforcement learning\",\n        \"Sparsity in deep learning: Pruning and growth for efficient inference and training in neural networks\",\n        \"The hardware lottery\",\n        \"The control method of twin delayed deep deterministic policy gradient with rebirth mechanism to multi-dof manipulator\",\n        \"Top-kast: Top-k always sparse training\",\n        \"Application of twin delayed deep deterministic policy gradient learning for the control of transesterification process\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Gst: Group-sparse training for accelerating deep reinforcement learning\",\n        \"Sparse evolutionary deep learning with over one million artificial neurons on commodity hardware\",\n        \"Deep ensembling with no overhead for either training or testing: The all-round blessings of dynamic sparsity\",\n        \"Selfish sparse rnn training\",\n        \"Efficient and effective training of sparse recurrent neural networks\",\n        \"Pops: Policy pruning and shrinking for deep reinforcement learning\",\n        \"Scalable training of artificial neural networks with adaptive sparse connectivity inspired by network science\",\n        \"Sparse training theory for scalable and efficient agents\",\n        \"Pruning convolutional neural networks for resource efficient inference\",\n        \"Importance estimation for neural network pruning\",\n        \"Parameter efficient training of deep convolutional neural networks by dynamic sparse reparameterization\",\n        \"Training adversarially robust sparse networks via bayesian connectivity sampling\",\n        \"Sparse weight activation training\",\n        \"Comparing rewinding and fine-tuning in neural network pruning\",\n        \"Adaptive neuro-fuzzy pid controller based on twin delayed deep deterministic policy gradient algorithm\",\n        \"Spacenet: Make free space for continual learning\",\n        \"Evolving neural networks through augmenting topologies\",\n        \"Evolving adaptive neural networks with and without adaptive synapses\",\n        \"Pytorch implementation of soft actor critic, 2018.\",\n        \"Grandmaster level in starcraft ii using multi-agent reinforcement learning\",\n        \"On lottery tickets and minimal task representations in deep reinforcement learning\",\n        \"Deep reinforcement learning: a survey\",\n        \"Evolutionary function approximation for reinforcement learning\",\n        \"Real-time optimal power flow using twin delayed deep deterministic policy gradient algorithm\",\n        \"Real-time autonomous residential demand response management based on twin delayed deep deterministic policy gradient learning\",\n        \"Playing the lottery with rewards and multiple languages: lottery tickets in rl and nlp\",\n        \"Mest: Accurate and fast memory-economic sparse training framework on the edge\",\n        \"Accelerating the deep reinforcement learning with neural network compression\",\n        \"Learning n: M fine-grained structured sparse neural networks from scratch\",\n        \"Multi-objective evolutionary federated learning\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Dynamic Sparse Training for Deep Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}