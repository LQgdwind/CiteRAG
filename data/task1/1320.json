{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient and Optimal Algorithms for Tree Summarization with Weighted Terminologies\n\nPaper Abstract: Abstract Data summarization that presents a small subset of a dataset to users has been widely applied in numerous applications and systems. Many datasets are coded with hierarchical terminologies, e.g., gene ontology, disease ontology, to name a few. In this paper, we study the weighted tree summarization. We motivate and formulate our 𝗄𝖶𝖳𝖲𝗄𝖶𝖳𝖲\\mathsf{kWTS}-𝗉𝗋𝗈𝖻𝗅𝖾𝗆𝗉𝗋𝗈𝖻𝗅𝖾𝗆\\mathsf{problem} as selecting a diverse set of k𝑘k nodes to summarize a hierarchical tree T𝑇T with weighted terminologies. We first propose an efficient greedy tree summarization algorithm 𝖦𝖳𝖲𝖦𝖳𝖲\\mathsf{GTS}. It solves the problem with (1−1/e)11𝑒(1-1/e)-approximation guarantee. Although 𝖦𝖳𝖲𝖦𝖳𝖲\\mathsf{GTS} achieves quality-guaranteed answers approximately, but it is still not optimal. To tackle the problem optimally, we further develop a dynamic programming algorithm 𝖮𝖳𝖲𝖮𝖳𝖲\\mathsf{OTS} to obtain optimal answers for 𝗄𝖶𝖳𝖲𝗄𝖶𝖳𝖲\\mathsf{kWTS}-𝗉𝗋𝗈𝖻𝗅𝖾𝗆𝗉𝗋𝗈𝖻𝗅𝖾𝗆\\mathsf{problem} in O​(n​h​k3)𝑂𝑛ℎsuperscript𝑘3O(nhk^{3}) time, where n,h𝑛ℎn,h are the node size and height in tree T𝑇T. The algorithm complexity and correctness of 𝖮𝖳𝖲𝖮𝖳𝖲\\mathsf{OTS} are theoretically analyzed. In addition, we propose a useful optimization technique of tree reduction to remove useless nodes with zero weights and shrink the tree into a smaller one, which ensures the efficiency acceleration of both 𝖦𝖳𝖲𝖦𝖳𝖲\\mathsf{GTS} and 𝖮𝖳𝖲𝖮𝖳𝖲\\mathsf{OTS} in real-world datasets. Moreover, we illustrate one useful application of graph visualization based on the answer of k𝑘k-sized tree summarization and show it in a novel case study. Extensive experimental results on real-world datasets show the effectiveness and efficiency of our proposed approximate and optimal algorithms for tree summarization. Furthermore, we conduct a usability evaluation of attractive topic recommendation on ACM Computing Classification System dataset to validate the usefulness of our model and algorithms.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graphical methods for reducing, visualizing and analyzing large data sets using hierarchical terminologies\",\n        \"A complementary graphical method for reducing and analyzing large data sets\",\n        \"Finding diverse, high-value representatives on a surface of answers\",\n        \"Top-k graph summarization on hierarchical dags\",\n        \"Opavion: Mining and visualization in large graphs\",\n        \"HDAG-explorer: a system for hierarchical dag summarization and exploration\",\n        \"Diverse and proportional size-l object summaries for keyword search\",\n        \"Ontology-based graph visualization for summarized view\",\n        \"Efficient aggregation for graph summarization\",\n        \"Managing attack graph complexity through visual hierarchical aggregation\",\n        \"Query-oriented summarization of rdf graphs\",\n        \"Fast and accurate graph stream summarization\",\n        \"Utility-driven graph summarization\",\n        \"Distributed graph summarization\",\n        \"Summary graphs for relational database schemas\",\n        \"Efficient and effective explanation of change in hierarchical summaries\",\n        \"A tree-based framework for difference summarization\",\n        \"On parsimonious explanations for 2-d tree-and linearly-ordered data\",\n        \"The cascading analysts algorithm\",\n        \"Summarizing hierarchical multidimensional data\",\n        \"Perseus: an interactive large-scale graph mining and visualization tool\",\n        \"IVLG: interactive visualization of large graphs\",\n        \"Efficient evaluation of object-centric exploration queries for visualization\",\n        \"Tableview: A visual interface for generating preview tables of entity graphs\",\n        \"Vizcs: Online searching and visualizing communities in dynamic graphs\",\n        \"Graph querying meets hci: State of the art and future directions\",\n        \"Autog: a visual query autocompletion framework for graph databases\",\n        \"Human-assisted graph search: It’s okay to ask questions\",\n        \"Interactive graph search\",\n        \"Budget constrained interactive search for multiple targets\",\n        \"Diversifying top-k results\",\n        \"Answering top-k representative queries on graph databases\",\n        \"Diversified top-k subgraph querying in a large graph\",\n        \"Diversified top-k clique search\",\n        \"Top-k diversity queries over bounded regions\",\n        \"Solving the apparent diversity-accuracy dilemma of recommender systems\",\n        \"Diversified top-k graph pattern matching\",\n        \"Measuring robustness of complex networks under mvc attack\",\n        \"A survey of top-k query processing techniques in relational database systems\",\n        \"An analysis of approximations for maximizing submodular set functions-i\",\n        \"Algorithms for knapsack problems\",\n        \"The lca problem revisited\",\n        \"Yago3: A knowledge base from multilingual wikipedias\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in Efficient and Optimal Algorithms for Tree Summarization with Weighted Terminologies, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}