{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DFX: A Low-latency Multi-FPGA Appliance for Accelerating Transformer-based Text Generation\n\nPaper Abstract: Abstract Transformer is a deep learning language model widely used for natural language processing (NLP) services in datacenters. Among transformer models, Generative Pre-trained Transformer (GPT) has achieved remarkable performance in text generation, or natural language generation (NLG), which needs the processing of a large input context in the summarization stage, followed by the generation stage that produces a single word at a time. The conventional platforms such as GPU are specialized for the parallel processing of large inputs in the summarization stage, but their performance significantly degrades in the generation stage due to its sequential characteristic. Therefore, an efficient hardware platform is required to address the high latency caused by the sequential characteristic of text generation. In this paper, we present DFX, a multi-FPGA acceleration appliance that executes GPT-2 model inference end-to-end with low latency and high throughput in both summarization and generation stages. DFX uses model parallelism and optimized dataflow that is model-and-hardware-aware for fast simultaneous workload execution among devices. Its compute cores operate on custom instructions and provide GPT-2 operations end-to-end. We implement the proposed hardware architecture on four Xilinx Alveo U280 FPGAs and utilize all of the channels of the high bandwidth memory (HBM) and the maximum number of compute resources for high hardware efficiency. DFX achieves 5.58×\\times speedup and 3.99×\\times energy efficiency over four NVIDIA V100 GPUs on the modern GPT-2 model. DFX is also 8.21×\\times more cost-effective than the GPU appliance, suggesting that it is a promising solution for text generation workloads in cloud datacenters.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Attention is all you need\",\n        \"Learning phrase representations using rnn encoder-decoder for statistical machine translation\",\n        \"Long short-term memory\",\n        \"Pointer: Constrained progressive text generation via insertion-based generative pre-training\",\n        \"A plug-and-play method for controlled text generation\",\n        \"Comparing bert against traditional machine learning text classification\",\n        \"Bae: Bert-based adversarial examples for text classification\",\n        \"Google’s neural machine translation system: Bridging the gap between human and machine translation\",\n        \"Learning deep transformer models for machine translation\",\n        \"Caire: An end-to-end empathetic chatbot\",\n        \"Hello, it’s gpt-2–how can i help you? towards the use of pretrained language models for task-oriented dialogue systems\",\n        \"Transfertransfo: A transfer learning approach for neural network based conversational agents\",\n        \"Topic-to-essay generation with neural networks.\",\n        \"Enhancing topic-to-essay generation with external commonsense knowledge\",\n        \"A sentiment-controllable topic-to-essay generator with topic knowledge graph\",\n        \"Natural language generation market\",\n        \"Nvidia dgx appliance.\",\n        \"A^ 3: Accelerating attention mechanisms in neural networks with approximation\",\n        \"Elsa: Hardware-software co-design for efficient, lightweight self-attention mechanism in neural networks\",\n        \"Spatten: Efficient sparse attention architecture with cascade token and head pruning\",\n        \"Sanger: A co-design framework for enabling sparse attention using reconfigurable architecture\",\n        \"25.2 a 1.2 v 8gb 8-channel 128gb/s high-bandwidth memory (hbm) stacked dram with effective microbump i/o test methods using 29nm process and tsv\",\n        \"Openai api.\",\n        \"Language models are unsupervised multitask learners\",\n        \"Gaussian error linear units (gelus)\",\n        \"Layer normalization\",\n        \"Deep residual learning for image recognition\",\n        \"Input:output token ratio.\",\n        \"Mesh-tensorflow: Deep learning for supercomputers\",\n        \"Gpipe: Efficient training of giant neural networks using pipeline parallelism\",\n        \"A bridging model for parallel computation, communication, and i/o\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Efficient algorithms for device placement of dnn graph operators\",\n        \"Megatron-lm: Training multi-billion parameter language models using model parallelism\",\n        \"A configurable cloud-scale dnn processor for real-time ai\",\n        \"Gobo: Quantizing attention-based nlp models for low latency and energy efficient inference\",\n        \"Language models are few-shot learners\",\n        \"Xilinx aurora 64b/66b ip.\",\n        \"Xilinx alveo u280 data center accelerator card.\",\n        \"Xilinx vivado.\",\n        \"Xilinx vitis unified software platform.\",\n        \"Nvidia v100 gpu.\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Google cloud tpu.\",\n        \"The winograd schema challenge\",\n        \"Embracing data abundance: Booktest dataset for reading comprehension\",\n        \"Evaluating modern gpu interconnect: Pcie, nvlink, nv-sli, nvswitch and gpudirect\",\n        \"Nvidia tesla v100 cost.\",\n        \"Nvidia tesla v100 cost - amazon.\",\n        \"Xilinx alveo u280 cost.\",\n        \"Nvidia dgx-1 cost.\",\n        \"Edgebert: Sentence-level energy optimizations for latency-aware multi-task nlp inference\",\n        \"A domain-specific supercomputer for training deep neural networks\",\n        \"Ten lessons from three generations shaped google’s tpuv4i: Industrial product\",\n        \"First-generation inference accelerator deployment at facebook\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in DFX: A Low-latency Multi-FPGA Appliance for Accelerating Transformer-based Text Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}