{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accuracy Prediction with Non-neural Model for Neural Architecture Search\n\nPaper Abstract: Abstract Neural architecture search (NAS) with an accuracy predictor that predicts the accuracy of candidate architectures has drawn increasing attention due to its simplicity and effectiveness. Previous works usually employ neural network-based predictors which require more delicate design and are easy to overfit. Considering that most architectures are represented as sequences of discrete symbols which are more like tabular data and preferred by non-neural predictors, in this paper, we study an alternative approach which uses non-neural model for accuracy prediction. Specifically, as decision tree based models can better handle tabular data, we leverage gradient boosting decision tree (GBDT) as the predictor for NAS. We demonstrate that the GBDT predictor can achieve comparable (if not better) prediction accuracy than neural network based predictors. Moreover, considering that a compact search space can ease the search process, we propose to prune the search space gradually according to important features derived from GBDT. In this way, NAS can be performed by first pruning the search space and then searching a neural architecture, which is more efficient and effective. Experiments on NASBench-101 and ImageNet demonstrate the effectiveness of using GBDT as predictor for NAS: (1) On NASBench-101, it is 22x, 8x, and 6x more sample efficient than random search, regularized evolution, and Monte Carlo Tree Search (MCTS) in finding the global optimum; (2) It achieves 24.2%percent24.224.2\\% top-1 error rate on ImageNet, and further achieves 23.4%percent23.423.4\\% top-1 error rate on ImageNet when enhanced with search space pruning. Code is available at https://github.com/renqianluo/GBDT-NAS.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Accelerating neural architecture search using performance prediction\",\n        \"Understanding and simplifying one-shot architecture search\",\n        \"Once-for-all: Train one network and specialize it for efficient deployment\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n        \"Progressive differentiable architecture search: Bridging the depth gap between search and evaluation\",\n        \"Detnas: Backbone search for object detection\",\n        \"Fbnetv3: Joint architecture-recipe search using neural acquisition function\",\n        \"Algorithmic transparency via quantitative input influence: Theory and experiments with learning systems\",\n        \"Densely connected search space for more flexible neural architecture search\",\n        \"Nas-fpn: Learning scalable feature pyramid architecture for object detection\",\n        \"Dynabert: Dynamic bert with adaptive width and depth\",\n        \"Searching for mobilenetv3\",\n        \"Lightgbm: A highly efficient gradient boosting decision tree\",\n        \"Random search and reproducibility for neural architecture search\",\n        \"Neural speech synthesis with transformer network\",\n        \"Improving one-shot nas by suppressing the posterior fading\",\n        \"Analysis of regression in game theory approach\",\n        \"Progressive neural architecture search\",\n        \"Darts: Differentiable architecture search\",\n        \"A unified approach to interpreting model predictions\",\n        \"Semi-supervised neural architecture search\",\n        \"Neural architecture optimization\",\n        \"Evolving deep neural networks\",\n        \"Deeparchitect: Automatically designing and training deep architectures\",\n        \"Efficient neural architecture search via parameter sharing\",\n        \"Designing network design spaces\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Large-scale evolution of image classifiers\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"A value for n-person games\",\n        \"The evolved transformer\",\n        \"Explaining prediction models and individual predictions with feature contributions\",\n        \"Going deeper with convolutions\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Attention is all you need\",\n        \"Fbnetv2: Differentiable neural architecture search for spatial and channel dimensions\",\n        \"Sample-efficient neural architecture search by learning action space\",\n        \"Neural architecture search using deep neural networks and monte carlo tree search\",\n        \"Npenas: Neural predictor guided evolution for neural architecture search\",\n        \"Neural predictor for neural architecture search\",\n        \"Genetic cnn\",\n        \"Pc-darts: Partial channel connections for memory-efficient differentiable architecture search\",\n        \"Nas evaluation is frustratingly hard\",\n        \"Cars: Continuous evolution for efficient neural architecture search\",\n        \"NAS-bench-101: Towards reproducible neural architecture search\",\n        \"Network slimming by slimmable networks: Towards one-shot architecture search for channel numbers\",\n        \"Bignas: Scaling up neural architecture search with big single-stage models\",\n        \"Understanding and robustifying differentiable architecture search\",\n        \"Shufflenet: An extremely efficient convolutional neural network for mobile devices\",\n        \"Bayesnas: A bayesian approach for neural architecture search\",\n        \"Neural architecture search with reinforcement learning\",\n        \"Learning transferable architectures for scalable image recognition\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Accuracy Prediction with Non-neural Model for Neural Architecture Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}