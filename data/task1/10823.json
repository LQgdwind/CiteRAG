{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: LangGPT: Rethinking Structured Reusable Prompt Design Framework for LLMs from the Programming Language\n\nPaper Abstract: Abstract LLMs have demonstrated commendable performance across diverse domains. Nevertheless, formulating high-quality prompts to effectively instruct LLMs poses a challenge for non-AI experts. Existing research in prompt engineering suggests somewhat fragmented optimization principles and designs empirically dependent prompt optimizers. Unfortunately, these endeavors lack a structured design template, incurring high learning costs and resulting in low reusability. Inspired by structured reusable programming languages, we propose LangGPT, a dual-layer prompt design framework as the programming language for LLMs. LangGPT has an easy-to-learn normative structure and provides an extended structure for migration and reuse. Experiments illustrate that LangGPT significantly enhances the capacity of LLMs to produce responses of superior quality compared to baselines. Moreover, LangGPT has proven effective in guiding LLMs to generate high-quality prompts. We have built a community on LangGPT to facilitate the tuition and sharing of prompt design. We also analyzed the ease of use and reusability of LangGPT through a community user survey.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Building the Next Generation of Open-Source and Bilingual LLMs\",\n        \"GPT-4 Technical Report\",\n        \"Compilers: principles, techniques and tools\",\n        \"Prompt Engineering Could Be the Hottest Programming Language of 2024 — Here’s Why\",\n        \"Gemini: A Family of Highly Capable Multimodal Models\",\n        \"Qwen Technical Report\",\n        \"Principled Instructions Are All You Need for Questioning LLaMA-1/2, GPT-3.5/4\",\n        \"A study on Prompt Design, Advantages and Limitations of ChatGPT for Deep Learning Program Repair\",\n        \"Programming Languages: Types and Features\",\n        \"LangChain: Building applications with LLMs through composability\",\n        \"Unleashing the potential of prompt engineering in Large Language Models: a comprehensive review\",\n        \"Black-Box Prompt Optimization: Aligning Large Language Models without Model Training\",\n        \"GLM: General Language Model Pretraining with Autoregressive Blank Infilling\",\n        \"A complete introduction to prompt engineering for large language models\",\n        \"Towards an Automatic Prompt Optimization Framework for AI Image Generation\",\n        \"An Introduction to Language\",\n        \"A Guide to Prompt Engineering in Large Language Models\",\n        \"Natural Language Processing(NLP) VS Programming Language\",\n        \"Markdown: Syntax\",\n        \"Modern compiler design\",\n        \"Connecting Large Language Models with Evolutionary Algorithms Yields Powerful Prompt Optimizers\",\n        \"Optimizing Prompts for Text-to-Image Generation\",\n        \"MetaGPT: Meta Programming for A Multi-Agent Collaborative Framework\",\n        \"Dialogue for Prompting: a Policy-Gradient-Based Discrete Prompt Optimization for Few-shot Learning\",\n        \"Chatdoctor: A medical chat model fine-tuned on a large language model meta-ai (llama) using medical domain knowledge\",\n        \"Design Guidelines for Prompt Engineering Text-to-Image Generative Models\",\n        \"Calibrating LLM-Based Evaluator\",\n        \"Programming Python: Powerful Object-Oriented Programming\",\n        \"Prompt Engineering as an Important Emerging Skill for Medical Professionals: Tutorial\",\n        \"The AI War: Mastering the Art of Prompt Engineering in the Era of Large Language Models\",\n        \"ChatGPT3-Free-Prompt-List: A free guide for learning to create ChatGPT3 Prompts\",\n        \"Generative Agents: Interactive Simulacra of Human Behavior\",\n        \"Foundations of JSON Schema\",\n        \"Programming languages: design and implementation\",\n        \"Automatic Prompt Optimization with Gradient Descent and Beam Search\",\n        \"Techgpt 2.0: Technology-oriented generative pretrained transformer 2.0\",\n        \"Object oriented programming\",\n        \"Introducing ChatGPT\",\n        \"Concepts of programming languages\",\n        \"Introduction to the Theory of Computation\",\n        \"ERNIE 3.0: Large-scale Knowledge Enhanced Pre-training for Language Understanding and Generation\",\n        \"AutoHint: Automatic Prompt Optimization with Hint Generation\",\n        \"A Survey of Reasoning with Foundation Models\",\n        \"Evaluating Large Language Models on Controlled Generation Tasks\",\n        \"An Introduction to Large Language Models: Prompt Engineering and P-Tuning\",\n        \"HuaTuo: Tuning LLaMA Model with Chinese Medical Knowledge\",\n        \"PromptAgent: Strategic Planning with Language Models Enables Expert-level Prompt Optimization\",\n        \"How to use prompt engineering with large language models\",\n        \"Chain-of-Thought Prompting Elicits Reasoning in Large Language Models\",\n        \"AutoGen: Enabling Next-Gen LLM Applications via Multi-Agent Conversation\",\n        \"The Rise and Potential of Large Language Model Based Agents: A Survey\",\n        \"Exploring Large Language Models for Communication Games: An Empirical Study on Werewolf\",\n        \"Baichuan 2: Open Large-scale Language Models\",\n        \"Decorate the Examples: A Simple Method of Prompt Design for Biomedical Relation Extraction\",\n        \"Large Language Model as Attributed Training Data Generator: A Tale of Diversity and Bias\",\n        \"Why Johnny Can’t Prompt: How Non-AI Experts Try (and Fail) to Design LLM Prompts\",\n        \"GLM-130B: An Open Bilingual Pre-trained Model\",\n        \"PICA: Unleashing The Emotional Power of Large Language Model\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in LangGPT: Rethinking Structured Reusable Prompt Design Framework for LLMs from the Programming Language, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}