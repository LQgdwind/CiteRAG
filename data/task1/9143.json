{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficiently Learning the Graph for Semi-supervised Learning\n\nPaper Abstract: Abstract Computational efficiency is a major bottleneck in using classic graph-based approaches for semi-supervised learning on datasets with a large number of unlabeled examples. Known techniques to improve efficiency typically involve an approximation of the graph regularization objective, but suffer two major drawbacks ‚Äì first the graph is assumed to be known or constructed with heuristic hyperparameter values, second they do not provide a principled approximation guarantee for learning over the full unlabeled dataset. Building on recent work on learning graphs for semi-supervised learning from multiple datasets for problems from the same domain, and leveraging techniques for fast approximations for solving linear systems in the graph Laplacian matrix, we propose algorithms that overcome both the above limitations. We show a formal separation in the learning-theoretic complexity of sparse and dense graph families. We further show how to approximately learn the best graphs from the sparse families efficiently using the conjugate gradient method. Our approach can also be used to learn the graph efficiently online with sub-linear regret, under mild smoothness assumptions. Our online learning results are stated generally, and may be useful for approximate and efficient parameter tuning in other problems. We implement our approach and demonstrate significant (‚àºsimilar-to\\sim10-100x) speedups over prior work on semi-supervised learning with learned graphs on benchmark datasets.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Nonstochastic multi-armed bandits with graph-structured feedback\",\n        \"Neural network learning: theoretical foundations, volume 9\",\n        \"A class of iterative methods for finite element equations\",\n        \"Book chapter Data-Driven Algorithm Design\",\n        \"Learning revenue maximizing menus of lotteries and two-part tariffs\",\n        \"A discriminative model for semi-supervised learning\",\n        \"Data driven semi-supervised learning\",\n        \"Learning-theoretic foundations of algorithm configuration for combinatorial partitioning problems\",\n        \"Dispersion for data-driven algorithm design, online learning, and private optimization\",\n        \"Semi-bandit optimization in the dispersed setting\",\n        \"Learning piecewise Lipschitz functions in changing environments\",\n        \"Refined bounds for algorithm configuration: The knife-edge of dual class approximability\",\n        \"Provably tuning the elasticnet across instances\",\n        \"Faster algorithms for learning to link, align sequences, and price two-part tariffs\",\n        \"An analysis of robustness of non-lipschitz networks\",\n        \"Generalization bounds for data-driven numerical linear algebra\",\n        \"Learning from labeled and unlabeled data using graph mincuts\",\n        \"Smooth optimization with approximate gradient\",\n        \"Efficient non-parametric function induction in semi-supervised learning\",\n        \"A PAC approach to application-specific algorithm selection\",\n        \"A survey of nonlinear conjugate gradient methods\",\n        \"Methods of conjugate gradients for solving\",\n        \"A database for handwritten text recognition research\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Kdd workshop on machine learning in finance\",\n        \"Industrial applications of machine learning\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Large graph construction for scalable semi-supervised learning\",\n        \"Graph properties for splitting with grounded laplacian matrices\",\n        \"A method for solving the convex programming problem with convergence rate o‚Äã(1k2)ùëú1superscriptùëò2o(\\\\frac{1}{k^{2}})\",\n        \"Using the mutual k-nearest neighbor graphs for semi-supervised classification on natural language data\",\n        \"Convergence of stochastic processes\",\n        \"Towards generalization and simplicity in continuous control\",\n        \"Trust region policy optimization\",\n        \"Forecasting exchange rate using deep belief networks and conjugate gradient method\",\n        \"Semi-supervised learning using sparse eigenfunction bases\",\n        \"Applications of machine learning in drug discovery and development\",\n        \"Matrix iterative analysis\",\n        \"SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python\",\n        \"Laplacian solvers and their algorithmic applications\",\n        \"A class of gradient unconstrained minimization algorithms with adaptive stepsize\",\n        \"Scalable semi-supervised learning by efficient anchor graph regularization\",\n        \"Fashion-mnist: a novel image dataset for benchmarking machine learning algorithms\",\n        \"Semi-supervised learning with graphs\",\n        \"Learning from labeled and unlabeled data with label propagation\",\n        \"Introduction to semi-supervised learning\",\n        \"Semi-supervised learning using Gaussian fields and harmonic functions\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Efficiently Learning the Graph for Semi-supervised Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}