{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Quiver: Supporting GPUs for Low-Latency, High-Throughput GNN Serving with Workload Awareness\n\nPaper Abstract: Abstract. Systems for serving inference requests on graph neural networks (GNN) must combine low latency with high throughout, but they face irregular computation due to skew in the number of sampled graph nodes and aggregated GNN features. This makes it challenging to exploit GPUs effectively: using GPUs to sample only a few graph nodes yields lower performance than CPU-based sampling; and aggregating many features exhibits high data movement costs between GPUs and CPUs. Therefore, current GNN serving systems use CPUs for graph sampling and feature aggregation, limiting throughput. We describe Quiver, a distributed GPU-based GNN serving system with low-latency and high-throughput. Quiver’s key idea is to exploit workload metrics for predicting the irregular computation of GNN requests, and governing the use of GPUs for graph sampling and feature aggregation: (1) for graph sampling, Quiver calculates the probabilistic sampled graph size, a metric that predicts the degree of parallelism in graph sampling. Quiver uses this metric to assign sampling tasks to GPUs only when the performance gains surpass CPU-based sampling; and (2) for feature aggregation, Quiver relies on the feature access probability to decide which features to partition and replicate across a distributed GPU NUMA topology. We show that Quiver achieves up to 35×\\times lower latency with a 8×\\times higher throughput compared to state-of-the-art GNN approaches (DGL and PyG). ††footnotetext: * Co-first authors.††footnotetext: Xiulong Yuan (Tsinghua University) and Xiaoze Liu (Zhejiang University) worked on Quiver while they were visiting the University of Edinburgh.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"GraphLearn-for-PyTorch(GLT)\",\n        \"TensorPipe\",\n        \"Large-scale graph representation learning with very deep gnns and self-supervision\",\n        \"DSP: Efficient GNN training with multiple GPUs\",\n        \"Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks\",\n        \"Clipper: A {{\\\\{Low-Latency}}} Online Prediction Serving System\",\n        \"Graph neural networks for social recommendation\",\n        \"Fast Graph Representation Learning with PyTorch Geometric\",\n        \"P3: Distributed Deep Graph Learning at Scale\",\n        \"Low latency RNN inference with cellular batching\",\n        \"Serving {{\\\\{DNNs}}} like Clockwork: Performance Predictability from the Bottom Up\",\n        \"Attention Based Spatial-Temporal Graph Convolutional Networks for Traffic Flow Forecasting\",\n        \"Inductive representation learning on large graphs\",\n        \"Dyna-PTM: OD-enhanced GCN for Metro Passenger Flow Prediction\",\n        \"SCGraph: Accelerating Sample-based GNN Training by Staged Caching of Features on GPUs\",\n        \"Ogb-lsc: A large-scale challenge for machine learning on graphs\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Accelerating Graph Sampling for Graph Machine Learning Using GPUs\",\n        \"METIS: A software package for partitioning unstructured graphs, partitioning meshes, and computing fill-reducing orderings of sparse matrices\",\n        \"Crossbow: Scaling deep learning with small batch sizes on multi-gpu servers\",\n        \"The skew spectrum of graphs\",\n        \"A deep learning approach for multimodal deception detection\",\n        \"Pond: CXL-based memory pooling systems for cloud platforms\",\n        \"Pagraph: Scaling gnn training on large graphs via computation-aware caching\",\n        \"Bgl: Gpu-efficient gnn training by optimizing graph data i/o and preprocessing\",\n        \"BRIGHT - Graph Neural Networks in Real-Time Fraud Detection\",\n        \"KungFu: Making Training in Distributed Machine Learning Adaptive\",\n        \"Chi: A scalable and programmable control plane for distributed stream processing systems\",\n        \"Pytorch-direct: Enabling gpu centric data access for very large graph neural network training with irregular accesses\",\n        \"Learning to simulate complex physics with graph networks\",\n        \"Ekko: A Large-Scale Deep Learning Recommender System with Low-Latency Model Update\",\n        \"Graph attention networks\",\n        \"Deep Graph Library: A Graph-Centric, Highly-Performant Package for Graph Neural Networks\",\n        \"Dynamic Graph CNN for Learning on Point Clouds\",\n        \"Graph Neural Networks in Recommender Systems: A Survey\",\n        \"Graph neural network approach for anomaly detection\",\n        \"Towards consumer loan fraud detection: Graph neural networks with role-constrained conditional random field\",\n        \"Move Fast and Meet Deadlines: Fine-grained Real-time Stream Processing with Cameo\",\n        \"Defining and evaluating network communities based on ground-truth\",\n        \"GNNLab: a factored system for sample-based GNN training over GPUs\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Graphsaint: Graph sampling based inductive learning method\",\n        \"GNNGuard: Defending Graph Neural Networks against Adversarial Attacks\",\n        \"Deep Learning on Graphs: A Survey\",\n        \"DistDGL: Distributed Graph Neural Network Training for Billion-Scale Graphs\",\n        \"Deep interest network for click-through rate prediction\",\n        \"AliGraph: A Comprehensive Graph Neural Network Platform\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Quiver: Supporting GPUs for Low-Latency, High-Throughput GNN Serving with Workload Awareness, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}