{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Reactive PLS for Distributed Decision\n\nPaper Abstract: Abstract We generalize the definition of Proof Labeling Schemes to reactive systems, that is, systems where the configuration is supposed to keep changing forever. As an example, we address the main classical test case of reactive tasks, namely, the task of token passing. Different RPLSs are given for the cases that the network is assumed to be a tree or an anonymous ring, or a general graph, and the sizes of RPLSs‚Äô labels are analyzed. We also address the question whether an RPLS exists. First, on the positive side, we show that there exists an RPLS for any distributed task for a family of graphs with unique identities. For the case of anonymous networks (even for the special case of rings), interestingly, it is known that no token passing algorithm is possible even if the number nùëõn of nodes is known. Nevertheless, we show that an RPLS is possible. On the negative side, we show that if one drops the assumption that nùëõn is known, then the construction becomes impossible.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Local stabilizer\",\n        \"Memory-efficient self stabilizing protocols for general networks\",\n        \"The local detection paradigm and its applications to self-stabilization\",\n        \"A trade-off between information and communication in broadcast protocols\",\n        \"Time optimal self-stabilizing synchronization\",\n        \"Self-stabilization by local checking and correction\",\n        \"Self-stabilization by local checking and global reset\",\n        \"Distributed program checking: a paradigm for building self-stabilizing distributed protocols\",\n        \"How much does randomness help with locally checkable problems?\",\n        \"Transient fault detectors\",\n        \"Observing locally self-stabilization\",\n        \"Observing locally self-stabilization in a probabilistic way\",\n        \"Uniform self-stabilizing rings\",\n        \"Distributed snapshots: Determining global states of distributed systems\",\n        \"Communication efficient self-stabilizing leader election\",\n        \"The arrow distributed directory protocol\",\n        \"Self-stabilization in spite of distributed control\",\n        \"Self stabilization of dynamic systems\",\n        \"Self stabilization of dynamic systems assuming only read write atomicity\",\n        \"Self-stabilization\",\n        \"Memory requirements for silent stabilization\",\n        \"Superstabilizing protocols for dynamic distributed systems\",\n        \"Self-stabilization of dynamic systems assuming only read/write atomicity\",\n        \"Randomization adaptive self-stabilization\",\n        \"Online computation with advice\",\n        \"Three notes on distributed property testing\",\n        \"A hierarchy of local decision\",\n        \"Sense of direction in distributed computing\",\n        \"Local checkability in dynamic networks\",\n        \"Towards a complexity theory for local distributed computing\",\n        \"Fault-containing self-stabilizing algorithms\",\n        \"A tight amortized bound for path reversal\",\n        \"Locally checkable proofs in distributed computing\",\n        \"Self-stabilizing extensions for meassage-passing systems\",\n        \"Interactive distributed proofs\",\n        \"Tight bounds for distributed mst verification\",\n        \"Proof labeling schemes\",\n        \"Time-adaptive self stabilization\",\n        \"The mutual exclusion problem: Partii‚Äîstatement and solutions\",\n        \"Observing self-stabilization\",\n        \"Locality in distributed graph algorithms\",\n        \"The power of distributed verifiers in interactive proofs\",\n        \"What can be computed locally?\",\n        \"Linearization: Locally self-stabilizing sorting in graphs\",\n        \"Distributed verification and hardness of distributed approximation\",\n        \"Link reversal algorithms\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Reactive PLS for Distributed Decision, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}