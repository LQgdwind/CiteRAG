{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Saliency-Aware Regularized Graph Neural Network\n\nPaper Abstract: Abstract The crux of graph classification lies in the effective representation learning for the entire graph. Typical graph neural networks focus on modeling the local dependencies when aggregating features of neighboring nodes, and obtain the representation for the entire graph by aggregating node features. Such methods have two potential limitations: 1) the global node saliency w.r.t. graph classification is not explicitly modeled, which is crucial since different nodes may have different semantic relevance to graph classification; 2) the graph representation directly aggregated from node features may have limited effectiveness to reflect graph-level information. In this work, we propose the Saliency-Aware Regularized Graph Neural Network (SAR-GNN) for graph classification, which consists of two core modules: 1) a traditional graph neural network serving as the backbone for learning node features and 2) the Graph Neural Memory designed to distill a compact graph representation from node features of the backbone. We first estimate the global node saliency by measuring the semantic similarity between the compact graph representation and node features. Then the learned saliency distribution is leveraged to regularize the neighborhood aggregation of the backbone, which facilitates the message passing of features for salient nodes and suppresses the less relevant nodes. Thus, our model can learn more effective graph representation. We demonstrate the merits of SAR-GNN by extensive experiments on seven datasets across various types of graph data. Code will be released.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The graph neural network model\",\n        \"Neural network for graphs: A contextual constructive approach\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Inductive representation learning on large graphs\",\n        \"How powerful are graph neural networks?\",\n        \"Graph attention networks\",\n        \"Self-attention graph pooling\",\n        \"Understanding attention and generalization in graph neural networks\",\n        \"Do transformers really perform badly for graph representation?\",\n        \"Deep graph mapper: Seeing graphs through the neural lens\",\n        \"An end-to-end deep learning architecture for graph classification\",\n        \"A reduction of a graph to a canonical form and an algebra arising during this reduction\",\n        \"Dynamic edge-conditioned filters in convolutional neural networks on graphs\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Graph convolutional networks with EigenPooling\",\n        \"Graph U-Nets\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Weisfeiler-Lehman graph kernels.\",\n        \"Deep Wasserstein graph discriminant learning for graph classification\",\n        \"Are powerful graph neural nets necessary? A dissection on graph classification\",\n        \"A fair comparison of graph neural networks for graph classification\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Spectral networks and locally connected networks on graphs\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"Learning convolutional neural networks for graphs\",\n        \"Attention is all you need\",\n        \"Equivariant subgraph aggregation networks\",\n        \"Gnnexplainer: Generating explanations for graph neural networks\",\n        \"Parameterized explainer for graph neural network\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Tokens-to-token vit: Training vision transformers from scratch on imagenet\",\n        \"End-to-end object detection with transformers\",\n        \"Perceiver: General perception with iterative attention\",\n        \"Structure-activity relationship of mutagenic aromatic and heteroaromatic Nitro compounds. Correlation with molecular orbital energies and hydrophobicity\",\n        \"BRENDA, the enzyme database: updates and major new developments\",\n        \"Protein function prediction via graph kernels\",\n        \"Deep graph kernels\",\n        \"IAM graph database repository for graph based pattern recognition and machine learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Improving graph neural network expressivity via subgraph isomorphism counting\",\n        \"Universal graph transformer self-attention networks\",\n        \"Structural landmarking and interaction modelling: A âslimâ network for graph classification\",\n        \"Adaptive structural fingerprints for graph attention networks\",\n        \"Visualizing data using t-SNE\",\n        \"Time and space complexity of graph convolutional networks\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Saliency-Aware Regularized Graph Neural Network, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}