{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scheduling Parallel-Task Jobs Subject to Packing and Placement Constraints\n\nPaper Abstract: Abstract. Motivated by modern parallel computing applications, we consider the problem of scheduling parallel-task jobs with heterogeneous resource requirements in a cluster of machines. Each job consists of a set of tasks that can be processed in parallel, however, the job is considered completed only when all its tasks finish their processing, which we refer to as ‚Äúsynchronization‚Äù constraint. Further, assignment of tasks to machines is subject to ‚Äúplacement‚Äù constraints, i.e., each task can be processed only on a subset of machines, and processing times can also be machine dependent. Once a task is scheduled on a machine, it requires a certain amount of resource from that machine for the duration of its processing. A machine can process (‚Äúpack‚Äù) multiple tasks at the same time, however the cumulative resource requirement of the tasks should not exceed the machine‚Äôs capacity. Our objective is to minimize the weighted average of the jobs‚Äô completion times. The problem, subject to synchronization, packing and placement constraints, is NP-hard, and prior theoretical results only concern much simpler models. For the case that migration of tasks among the placement-feasible machines is allowed, we propose a preemptive algorithm with an approximation ratio of (6+œµ)6italic-œµ(6+\\epsilon). In the special case that only one machine can process each task, we design an algorithm with improved approximation ratio of 444. Finally, in the case that migrations (and preemptions) are not allowed, we design an algorithm with an approximation ratio of 242424. Our algorithms use a combination of linear program relaxation and greedy packing techniques. We present extensive simulation results, using a real traffic trace, that demonstrate that our algorithms yield significant gains over the prior approaches.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Coordinated scheduling of customer orders for quick response\",\n        \"Disk-locality in datacenter computing considered irrelevant.\",\n        \"Reining in the Outliers in Map-Reduce Clusters using Mantri.\",\n        \"Inapproximability of hypergraph vertex cover and applications to scheduling problems\",\n        \"Scheduling subject to resource constraints: classification and complexity\",\n        \"Bulk synchronous parallel computing‚Äìa paradigm for transportable software\",\n        \"Supply chain scheduling: Conflict and cooperation in assembly systems\",\n        \"Performance bounds for level-oriented two-dimensional packing algorithms\",\n        \"MapReduce: simplified data processing on large clusters\",\n        \"Apache Hadoop\",\n        \"Apache Hadoop Yarn\",\n        \"Apache Spark\",\n        \"Hadoop Capacity Scheduler\",\n        \"Hadoop MapReduce-FairScheduler\",\n        \"Improved bounds for scheduling conflicting jobs with minsum criteria\",\n        \"Bounds for multiprocessor scheduling with resource constraints\",\n        \"Order scheduling models: hardness and algorithms\",\n        \"Multi-resource packing for cluster schedulers\",\n        \"{{{GRAPHENE}}}: Packing and dependency-aware scheduling for data-parallel clusters\",\n        \"On representatives of subsets\",\n        \"Bar: An efficient data locality driven task scheduling algorithm for cloud computing\",\n        \"Asynchronous algorithms in MapReduce\",\n        \"Approximation algorithms for scheduling unrelated parallel machines\",\n        \"Scheduling orders for multiple product types to minimize total weighted completion time\",\n        \"Dependency-aware and resource-efficient scheduling for heterogeneous jobs in clouds\",\n        \"Gurobi Optimizer\",\n        \"Minimizing the sum of weighted completion times in a concurrent open shop\",\n        \"Working Set Size Estimation Techniques in Virtualized Environments: One Size Does not Fit All\",\n        \"Minimizing the total weighted completion time of coflows in datacenter networks\",\n        \"A (2+ ŒµùúÄ\\\\varepsilon)-approximation algorithm for the generalized preemptive open shop problem with minsum objective\",\n        \"Efficient queue management for cluster scheduling\",\n        \"Resource constrained scheduling on multiple machines\",\n        \"Optimal inapproximability for scheduling problems via structural hardness for hypergraph vertex cover\",\n        \"Fractional graph theory: a rational approach to the theory of graphs\",\n        \"Random-based scheduling new approximations and LP lower bounds\",\n        \"Omega: flexible, scalable schedulers for large compute clusters\",\n        \"Preemptive weighted completion time scheduling of parallel jobs\",\n        \"An improved bound for minimizing the total weighted completion time of coflows in datacenters\",\n        \"Large-scale cluster management at Google with Borg\",\n        \"Maptask scheduling in mapreduce with data locality: Throughput and heavy-traffic optimality\",\n        \"More Google cluster data\",\n        \"GB-PANDAS:: Throughput and heavy-traffic optimality analysis for affinity scheduling\",\n        \"Delay scheduling: a simple technique for achieving locality and fairness in cluster scheduling\",\n        \"Improving MapReduce performance in heterogeneous environments\",\n        \"Apache spark: a unified engine for big data processing\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Scheduling Parallel-Task Jobs Subject to Packing and Placement Constraints, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}