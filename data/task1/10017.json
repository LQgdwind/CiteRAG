{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fast and Low-Cost Approximate Multiplier for FPGAs using Dynamic Reconfiguration\n\nPaper Abstract: Abstract Multipliers are widely-used arithmetic operators in digital signal processing and machine learning circuits. Due to their relatively high complexity, they can have high latency and be a significant source of power consumption. One strategy to alleviate these limitations is to use approximate computing. This paper thus introduces an original FPGA-based approximate multiplier specifically optimized for machine learning computations. It utilizes dynamically reconfigurable lookup table (LUT) primitives in AMD-Xilinx technology to realize the core part of the computations. The paper provides an in-depth analysis of the hardware architecture, implementation outcomes, and accuracy evaluations of the multiplier proposed in INT8 precision. Implementation results on an AMD-Xilinx Kintex Ultrascale+ FPGA demonstrate remarkable savings of 64% and 67% in LUT utilization for signed multiplication and multiply-and-accumulation configurations, respectively, when compared to the standard Xilinx multiplier core. Accuracy measurements on four popular deep learning (DL) benchmarks indicate a minimal average accuracy decrease of less than 0.29% during post-training deployment, with the maximum reduction staying less than 0.33%. The source code of this work is available on GitHub111https://github.com/INRS-ECCoLe/DyRecMul.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Approximate arithmetic circuits: A survey, characterization, and recent applications\",\n        \"Analysis and characterization of inherent application resilience for approximate computing\",\n        \"A survey on approximate multiplier designs for energy efficiency: From algorithms to circuits\",\n        \"Computer multiplication and division using binary logarithms\",\n        \"Design and evaluation of approximate logarithmic multipliers for low power error-tolerant applications\",\n        \"An improved logarithmic multiplier for energy-efficient neural computing\",\n        \"A hardware-efficient logarithmic multiplier with improved accuracy\",\n        \"Minimally biased multipliers for approximate integer and floating-point multiplication\",\n        \"Approxlp: Approximate multiplication with linearization and iterative error control\",\n        \"Optimally approximated and unbiased floating-point multiplier with runtime configurability\",\n        \"Cfpu: Configurable floating point multiplier for energy-efficient computing\",\n        \"Rmac: Runtime configurable floating point multiplier for approximate computing\",\n        \"Energy-efficient approximate multiplication for digital signal processing and classification applications\",\n        \"Tosam: An energy-efficient truncation-and rounding-based scalable approximate multiplier\",\n        \"Drum: A dynamic range unbiased multiplier for approximate applications\",\n        \"Letam: A low energy truncation-based approximate multiplier\",\n        \"Trading accuracy for power with an underdesigned multiplier architecture\",\n        \"Design of power and area efficient approximate multipliers\",\n        \"A low-power high-speed accuracy-controllable approximate multiplier design\",\n        \"Low-power and high-speed approximate multiplier design with a tree compressor\",\n        \"A suggestion for a fast multiplier\",\n        \"Some schemes for parallel multipliers\",\n        \"Approximate multipliers based on new approximate compressors\",\n        \"Multipliers with approximate 4â€“2 compressors and error recovery modules\",\n        \"Low-power high-accuracy approximate multiplier using approximate high-order compressors\",\n        \"Approximate compressors for error-resilient multiplier design\",\n        \"Design and analysis of approximate compressors for multiplication\",\n        \"Bio-inspired imprecise computational blocks for efficient vlsi implementation of soft-computing applications\",\n        \"High accuracy approximate multiplier with error correction\",\n        \"Dual-quality 4: 2 compressors for utilizing in dynamic accuracy configurable multipliers\",\n        \"Energy and area efficient imprecise compressors for approximate multiplication at nanoscale\",\n        \"Comparison and extension of approximate 4-2 compressors for low-power approximate multipliers\",\n        \"Design and analysis of multiplier using approximate 15-4 compressor\",\n        \"Minac: Minimal-area approximate compressor design based on exact synthesis for approximate multipliers\",\n        \"Area-optimized low-latency approximate multipliers for fpga-based hardware accelerators\",\n        \"Smapproxlib: Library of fpga-based approximate multipliers\",\n        \"Fpga-based multi-level approximate multipliers for high-performance error-resilient applications\",\n        \"Dynamically reconfigurable fir filter architectures with fast reconfiguration\",\n        \"Towards fully 8-bit integer inference for the transformer model\",\n        \"Performance evaluation of int8 quantized inference on mobile gpus\",\n        \"Formal methods for exact analysis of approximate circuits\",\n        \"A low-power, high-performance approximate multiplier with configurable partial error recovery\",\n        \"Adapt: Fast emulation of approximate dnn accelerators in pytorch\",\n        \"Design of approximate radix-4 booth multipliers for error-tolerant computing\",\n        \"Low-power approximate multipliers using encoded partial products and approximate compressors\",\n        \"Low-power approximate unsigned multipliers with configurable error recovery\",\n        \"Cnn inference using a preprocessing precision controller and approximate multipliers with various precisions\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Fast and Low-Cost Approximate Multiplier for FPGAs using Dynamic Reconfiguration, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}