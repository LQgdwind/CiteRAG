{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Reactive Answer Set Programming\n\nPaper Abstract: Abstract Logic Production System (LPS) is a logic-based framework for modelling reactive behaviour. Based on abductive logic programming, it combines reactive rules with logic programs, a database and a causal theory that specifies transitions between the states of the database. This paper proposes a systematic mapping of the Kernel of this framework (called KELPS) into an answer set program (ASP). For this purpose a new variant of KELPS with finite models, called nùëõn-distance KELPS, is introduced. A formal definition of the mapping from this nùëõn-distance KELPS to ASP is given and proven sound and complete. The Answer Set Programming paradigm allows to capture additional behaviours to the basic reactivity of KELPS, in particular proactive, preemptive and prospective behaviours. These are all discussed and illustrated with examples. Then a hybrid framework is proposed that integrates KELPS and ASP, allowing to combine the strengths of both paradigms.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Temporal equilibrium logic: a survey\",\n        \"An event-condition-action logic programming language\",\n        \"Intention-based decision making with evolution prospection\",\n        \"Relating theories of actions and reactive control\",\n        \"LARS: A logic-based framework for analytic reasoning over streams\",\n        \"Formalizing both refraction-based and sequential executions of production rule programs\",\n        \"Towards reactive multi-context systems\",\n        \"Answer set programming at a glance\",\n        \"Temporal answer set programming on finite traces\",\n        \"Asp-core-2 input language format\",\n        \"Rule control of teleo-reactive, multi-tasking, communicating robotic agents\",\n        \"Robotic agent programming in teleoR\",\n        \"Answer set modules for logical agents\",\n        \"Exploration of unknown territory via dali agents and asp modules\",\n        \"The DALI logic programming agent-oriented language\",\n        \"Preferential description logics: Reasoning in the presence of inconsistencies\",\n        \"Answer set programming and agents\",\n        \"Declarative Update Policies for Nonmonotonic Knowledge Bases\",\n        \"Applications of answer set programming\",\n        \"A logic-based integration of active and deductive databases\",\n        \"Theory and practice of Constraint Handling Rules\",\n        \"Reactive answer set programming\",\n        \"Potassco user guide, version 2.2.0\",\n        \"Multi-shot asp solving with clingo\",\n        \"Answer set solving in practice\",\n        \"Chapter 7 answer sets\",\n        \"The stable model semantics for logic programming\",\n        \"Sequential abstract-state machines capture sequential algorithms\",\n        \"From logic programming towards multi-agent systems\",\n        \"Abductive logic programming agents with destructive databases\",\n        \"Reactive computing as model generation\",\n        \"Programming in logic without logic programming\",\n        \"A logic-based calculus of events\",\n        \"On active deductive databases: The statelog approach\",\n        \"Simplified reduct for choice rules in ASP, technical report DTR2015-2, imperial college london\",\n        \"Iterative learning of answer set programs from context dependent examples\",\n        \"Splitting a logic program\",\n        \"The CIFF proof procedure for abductive logic programming with constraints: Theory, implementation and experiments\",\n        \"Elaboration tolerance\",\n        \"Reasoning about non-immediate triggers in biological networks\",\n        \"Teleo-reactive programs for agent control\",\n        \"Reaction ruleML 1.0: Standardized semantic seaction sules\",\n        \"Prospective logic agents\",\n        \"Modelling morality with prospective logic\",\n        \"Agentspeak (l): BDI agents speak out in a logical computable language\",\n        \"BDI agents: From theory to practice\",\n        \"Combining answer set programs for adaptive and reactive reasoning\",\n        \"Artificial intelligence - a modern approach, 2nd Edition\",\n        \"From teleo-reactive specifications to architectural components: A model-driven approach\",\n        \"Out of sight but not out of mind: An answer set programming based online abduction framework for visual sensemaking in autonomous driving\",\n        \"Reasoning about triggered actions in ansprolog and its application to molecular interactions in cells\",\n        \"An application of answer set programming for situational analysis in a maritime traffic domain\",\n        \"Using swish to realize interactive web-based tutorials for logic-based languages\",\n        \"On the unification of active databases and deductive databases\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Reactive Answer Set Programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}