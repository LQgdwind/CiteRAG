{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Evolving test instances of the Hamiltonian completion problem\n\nPaper Abstract: Abstract Predicting and comparing algorithm performance on graph instances is challenging for multiple reasons. First, there is not always a standard set of instances to benchmark performance. Second, using existing graph generators results in a restricted spectrum of difficulty and the resulting graphs are not always diverse enough to draw sound conclusions. That is why recent work proposes a new methodology to generate a diverse set of instances by using evolutionary algorithms. We can then analyze the resulting graphs and get key insights into which attributes are most related to algorithm performance. We can also fill observed gaps in the instance space in order to generate graphs with previously unseen combinations of features. We apply this methodology to the instance space of the Hamiltonian completion problem using two different solvers, namely the Concorde TSP Solver and a multi-start local search algorithm.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Statistical mechanics of complex networks\",\n        \"Concorde TSP Solver\",\n        \"The Traveling Salesman Problem: A Computational Study\",\n        \"The energy of a graph\",\n        \"Evolving diverse TSP instances by means of novel and creative mutation operators\",\n        \"Evolutionary diversity optimization and the minimum spanning tree problem\",\n        \"Evolving instances for maximizing performance differences of state-of-the-art inexact TSP solvers\",\n        \"Understanding characteristics of evolved instances for state-of-the-art inexact TSP solvers with maximum performance difference\",\n        \"Generating instances with performance differences for more than just two algorithms\",\n        \"Local search algorithms for finding the Hamiltonian completion number of line graphs\",\n        \"On random graphs I\",\n        \"Deap: Evolutionary algorithms made easy\",\n        \"Optimal hamiltonian completions and path covers for trees, and a reduction to maximum flow\",\n        \"Feature-based diversity optimization for problem instance classification\",\n        \"An empirical study of dynamic variable ordering heuristics for the constraint satisfaction problem\",\n        \"On the Hamiltonian completion problem\",\n        \"Satisfiability problem: Theory and applications, chapter algorithms for the satisfiability sat problem: A survey\",\n        \"An Effective Implementation of the Lin-Kernighan Traveling Salesman Heuristic\",\n        \"Evolving combinatorial problem instances that are difficult to solve\",\n        \"The Traveling Salesman Problem\",\n        \"Testing heuristics: We have it all wrong\",\n        \"Evolving hard and easy traveling salesman problem instances: A multi-objective approach\",\n        \"A multi-start local search algorithm for the Hamiltonian completion problem on undirected graphs\",\n        \"A new class of hard problem instances for the 0â€“1 knapsack problem\",\n        \"Evolving heuristically difficult instances of combinatorial problems\",\n        \"Leveraging TSP solver complementarity through machine learning\",\n        \"Snap: A general-purpose network analysis and graph-mining library\",\n        \"Local search and the traveling salesman problem: A feature-based characterization of problem hardness\",\n        \"A novel feature-based approach to characterize algorithm performance for the traveling salesman problem\",\n        \"Genetic algorithms, tournament selection, and the effects of noise\",\n        \"Generating new space-filling test instances for continuous black-box optimization\",\n        \"Instance spaces for machine learning classification\",\n        \"Diversifying greedy sampling and evolutionary diversity optimisation for constrained monotone submodular functions\",\n        \"Discrepancy-based evolutionary diversity optimization\",\n        \"Evolutionary diversity optimization using multi-objective indicators\",\n        \"Where are the hard knapsack problems?\",\n        \"Evolutionary-based tailoring of synthetic instances for the knapsack problem\",\n        \"MATILDA: Melbourne algorithm test instance library with data analytics\",\n        \"Towards objective measures of algorithm performance across instance space\",\n        \"Generating new test instances by evolving in instance space\",\n        \"Revisiting where are the hard knapsack problems? via instance space analysis\",\n        \"Discovering the suitability of optimisation algorithms by learning from evolved instances\",\n        \"Understanding TSP Difficulty by Learning from Evolved Instances\",\n        \"Review: Measuring instance difficulty for combinatorial optimization problems\",\n        \"Maximizing population diversity in single-objective optimization\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Evolving test instances of the Hamiltonian completion problem, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}