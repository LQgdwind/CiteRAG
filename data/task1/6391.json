{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Betty: An Automatic Differentiation Library for Multilevel Optimization\n\nPaper Abstract: Abstract Gradient-based multilevel optimization (MLO) has gained attention as a framework for studying numerous problems, ranging from hyperparameter optimization and meta-learning to neural architecture search and reinforcement learning. However, gradients in MLO, which are obtained by composing best-response Jacobians via the chain rule, are notoriously difficult to implement and memory/compute intensive. We take an initial step towards closing this gap by introducing Betty, a software library for large-scale MLO. At its core, we devise a novel dataflow graph for MLO, which allows us to (1) develop efficient automatic differentiation for MLO that reduces the computational complexity from ùí™‚Äã(d3)ùí™superscriptùëë3\\mathcal{O}(d^{3}) to ùí™‚Äã(d2)ùí™superscriptùëë2\\mathcal{O}(d^{2}), (2) incorporate systems support such as mixed-precision and data-parallel training for scalability, and (3) facilitate implementation of MLO programs of arbitrary complexity while allowing a modular interface for diverse algorithmic and systems design choices. We empirically demonstrate that Betty can be used to implement an array of MLO programs, while also observing up to 11% increase in test accuracy, 14% decrease in GPU memory usage, and 20% decrease in training wall time over existing implementations on multiple benchmarks. We also showcase that Betty enables scaling MLO to models with hundreds of millions of parameters. We open-source the code at https://github.com/leopard-ai/betty.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"learn2learn: A library for meta-learning research\",\n        \"How important is the train-validation split in meta-learning?\",\n        \"Efficient and modular implicit differentiation\",\n        \"On the convergence of stochastic bi-level gradient methods\",\n        \"A new hyperparameters optimization method for convolutional neural networks\",\n        \"Torchmeta: A Meta-Learning library for PyTorch, 2019\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"Forward and reverse gradient-based hyperparameter optimization\",\n        \"Learning from mistakes‚Äìa framework for neural architecture search\",\n        \"On the iteration complexity of hypergradient computation\",\n        \"Generalized inner loop meta-learning\",\n        \"Deep residual learning for image recognition\",\n        \"Momentum contrast for unsupervised visual representation learning\",\n        \"Towards visual question answering on pathology images\",\n        \"A two-timescale framework for bilevel optimization: Complexity analysis and application to actor-critic\",\n        \"Bilevel optimization: Convergence analysis and enhanced design\",\n        \"Adam: A method for stochastic optimization\",\n        \"Actor-critic algorithms\",\n        \"DARTS: differentiable architecture search\",\n        \"Towards gradient-based bilevel optimization with non-convex followers and beyond\",\n        \"Optimizing millions of hyperparameters by implicit differentiation\",\n        \"Gradient-based hyperparameter optimization through reversible learning\",\n        \"Multilevel optimization: algorithms and applications, volume 20\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Reverse-mode ad in a functional framework: Lambda the ultimate backpropagator\",\n        \"Meta-learning to improve pre-training\",\n        \"Zero: Memory optimizations toward training trillion parameter models\",\n        \"Meta-learning with implicit gradients\",\n        \"A game theoretic framework for model based reinforcement learning\",\n        \"Data programming: Creating large training sets, quickly\",\n        \"Not all unlabeled data are equal: Learning to weight data in semi-supervised learning\",\n        \"A gradient method for multilevel optimization\",\n        \"Meta-weight-net: Learning an explicit mapping for sample weighting\",\n        \"A multi-level optimization framework for end-to-end text augmentation\",\n        \"Generative teaching networks: Accelerating neural architecture search by learning to generate synthetic training data\",\n        \"Long-tailed classification by keeping the good and removing the bad momentum causal effect\",\n        \"Deep hashing network for unsupervised domain adaptation\",\n        \"Bilevel and multilevel programming: A bibliography review\",\n        \"Meta-semi: A meta-learning approach for semi-supervised learning\",\n        \"Learning from massive noisy labeled data for image classification\",\n        \"Performance-aware mutual knowledge distillation for improving neural architecture search\",\n        \"Wrench: A comprehensive benchmark for weak supervision\",\n        \"idarts: Differentiable architecture search with stochastic implicit gradients\",\n        \"Meta label correction for learning with weak supervision\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Betty: An Automatic Differentiation Library for Multilevel Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}