{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Do sequence-to-sequence VAEs learn global features of sentences?\n\nPaper Abstract: Abstract Autoregressive language models are powerful and relatively easy to train. However, these models are usually trained without explicit conditioning labels and do not offer easy ways to control global aspects such as sentiment or topic during generation. Bowman et al. (2016) adapted the Variational Autoencoder (VAE) for natural language with the sequence-to-sequence architecture and claimed that the latent vector was able to capture such global features in an unsupervised manner. We question this claim. We measure which words benefit most from the latent information by decomposing the reconstruction loss per position in the sentence. Using this method, we find that VAEs are prone to memorizing the first words and the sentence length, producing local features of limited usefulness. To alleviate this, we investigate alternative architectures based on bag-of-words assumptions and language model pretraining. These variants learn latent variables that are more global, i.e., more predictive of topic or sentiment labels. Moreover, using reconstructions, we observe that they decrease memorization: the first word and the sentence length are not recovered as accurately than with the baselines, consequently yielding more diverse reconstructions.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fixing a Broken ELBO\",\n        \"A neural probabilistic language model\",\n        \"A large annotated corpus for learning natural language inference\",\n        \"Generating Sentences from a Continuous Space\",\n        \"Importance weighted autoencoders\",\n        \"On over-fitting in model selection and subsequent selection bias in performance evaluation\",\n        \"Variational lossy autoencoder\",\n        \"Hierarchical autoregressive image models with auxiliary decoders\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Controlling Linguistic Style Aspects in Neural Language Generation\",\n        \"Cyclical Annealing Schedule: A Simple Approach to Mitigating KL Vanishing\",\n        \"Non-autoregressive neural machine translation\",\n        \"Insertion-based decoding with automatically inferred generation order\",\n        \"Lagging Inference Networks and Posterior Collapse in Variational Autoencoders\",\n        \"Long Short-Term Memory\",\n        \"Denoising criterion for variational auto-encoding framework\",\n        \"Bag of Tricks for Efficient Text Classification\",\n        \"Semi-Amortized Variational Autoencoders\",\n        \"Semi-Supervised Learning with Deep Generative Models\",\n        \"Auto-encoding variational bayes\",\n        \"Improved variational inference with inverse autoregressive flow\",\n        \"A Surprisingly Effective Fix for Deep Latent Variable Modeling of Text\",\n        \"Preventing Posterior Collapse in Sequence VAEs with Pooling\",\n        \"RNNs implicitly implement tensor-product representations\",\n        \"Neural Variational Inference for Text Processing\",\n        \"Recurrent neural network based language model\",\n        \"Using JK fold Cross Validation to Reduce Variance When Tuning NLP Models\",\n        \"Rectified linear units improve restricted boltzmann machines\",\n        \"A first course in design and analysis of experiments\",\n        \"Conditional variational autoencoder for neural machine translation\",\n        \"Thumbs up?: sentiment classification using machine learning techniques\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Effective Estimation of Deep Generative Language Models\",\n        \"Deep contextualized word representations\",\n        \"On the Importance of the Kullback-Leibler Divergence Term in Variational Autoencoders for Text Generation\",\n        \"Language models are unsupervised multitask learners\",\n        \"Preventing Posterior Collapse with delta-VAEs\",\n        \"Stochastic Backpropagation and Approximate Inference in Deep Generative Models\",\n        \"Unsupervised paraphrasing without translation\",\n        \"Unsupervised abstractive sentence summarization using length controlled variational autoencoder\",\n        \"A hierarchical latent variable encoder-decoder model for generating dialogues\",\n        \"Why Neural Translations are the Right Length\",\n        \"Tensor product variable binding and the representation of symbolic structures in connectionist systems\",\n        \"Lstm neural networks for language modeling\",\n        \"Sequence to sequence learning with neural networks\",\n        \"LSTM Networks Can Perform Dynamic Counting\",\n        \"Attention is All you Need\",\n        \"Backpropagation through time: what it does and how to do it\",\n        \"Unsupervised controllable text generation with global variation discovery and disentanglement\",\n        \"Improved variational autoencoders for text modeling using dilated convolutions\",\n        \"Character-level Convolutional Networks for Text Classification\",\n        \"Learning Discourse-level Diversity for Neural Dialog Models using Conditional Variational Autoencoders\",\n        \"Latent Normalizing Flows for Discrete Sequences\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Do sequence-to-sequence VAEs learn global features of sentences?, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}