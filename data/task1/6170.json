{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Value Memory Graph: A Graph-Structured World Model for Offline Reinforcement Learning\n\nPaper Abstract: Abstract Reinforcement Learning (RL) methods are typically applied directly in environments to learn policies. In some complex environments with continuous state-action spaces, sparse rewards, and/or long temporal horizons, learning a good policy in the original environments can be difficult. Focusing on the offline RL setting, we aim to build a simple and discrete world model that abstracts the original environment. RL methods are applied to our world model instead of the environment data for simplified policy learning. Our world model, dubbed Value Memory Graph (VMG), is designed as a directed-graph-based Markov decision process (MDP) of which vertices and directed edges represent graph states and graph actions, separately. As state-action spaces of VMG are finite and relatively small compared to the original environment, we can directly apply the value iteration algorithm on VMG to estimate graph state values and figure out the best graph actions. VMG is trained from and built on the offline RL dataset. Together with an action translator that converts the abstract graph actions in VMG to real actions in the original environment, VMG controls agents to maximize episode returns. Our experiments on the D4RL benchmark show that VMG can outperform state-of-the-art offline RL methods in several goal-oriented tasks, especially when environments have sparse rewards and long temporal horizons. Code is available at https://github.com/TsuTikgiau/ValueMemoryGraph\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Neuro-dynamic programming: an overview\",\n        \"Bats: Best action trajectory stitching\",\n        \"Decision transformer: Reinforcement learning via sequence modeling\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"A note on two problems in connexion with graphs\",\n        \"Sparse graphical memory for robust planning\",\n        \"Rvs: What is essential for offline rl via supervised learning?\",\n        \"Search on the replay buffer: Bridging planning and reinforcement learning\",\n        \"Bisimulation metrics for continuous markov decision processes\",\n        \"Bisimulation metrics are optimal value functions\",\n        \"D4rl: Datasets for deep data-driven reinforcement learning\",\n        \"Off-policy deep reinforcement learning without exploration\",\n        \"World models\",\n        \"Dream to control: Learning behaviors by latent imagination\",\n        \"Topological experience replay\",\n        \"Mapping state space using landmarks for universal goal reaching\",\n        \"When to trust your model: Model-based policy optimization\",\n        \"Graph backup: Data efficient backup exploiting markovian transitions\",\n        \"Billion-scale similarity search with GPUs\",\n        \"Morel: Model-based offline reinforcement learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Offline reinforcement learning with fisher divergence critic regularization\",\n        \"Offline reinforcement learning with implicit q-learning\",\n        \"Stabilizing off-policy q-learning via bootstrapping error reduction\",\n        \"Conservative q-learning for offline reinforcement learning\",\n        \"Offline reinforcement learning: Tutorial, review, and perspectives on open problems\",\n        \"Hallucinative topological memory for zero-shot visual planning\",\n        \"Least squares quantization in pcm\",\n        \"Learning to generalize across long-horizon tasks from human demonstrations\",\n        \"Exact (then approximate) dynamic programming for deep reinforcement learning\",\n        \"Umap: Uniform manifold approximation and projection for dimension reduction\",\n        \"Data-efficient hierarchical reinforcement learning\",\n        \"Awac: Accelerating online reinforcement learning with offline datasets\",\n        \"Representation learning with contrastive predictive coding\",\n        \"Advantage-weighted regression: Simple and scalable off-policy reinforcement learning\",\n        \"Markov decision processes: discrete stochastic dynamic programming\",\n        \"Learning transferable visual models from natural language supervision\",\n        \"Semi-parametric topological memory for navigation\",\n        \"Mastering atari, go, chess and shogi by planning with a learned model\",\n        \"Deepaveragers: Offline reinforcement learning by solving derived non-parametric mdps\",\n        \"d3rlpy: An offline deep reinforcement library\",\n        \"Critic regularized regression\",\n        \"Behavior regularized offline reinforcement learning\",\n        \"Plan2vec: Unsupervised representation learning by latent plans\",\n        \"Mastering atari games with limited data\",\n        \"Mopo: Model-based offline policy optimization\",\n        \"Combo: Conservative offline model-based policy optimization\",\n        \"Learning invariant representations for reinforcement learning without reconstruction\",\n        \"World model as a graph: Learning latent landmarks for planning\",\n        \"Birch: an efficient data clustering method for very large databases\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Value Memory Graph: A Graph-Structured World Model for Offline Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}