{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: E3NE: An End-to-End Framework for Accelerating Spiking Neural Networks with Emerging Neural Encoding on FPGAs\n\nPaper Abstract: Abstract Compiler frameworks are crucial for the widespread use of FPGA-based deep learning accelerators. They allow researchers and developers, who are not familiar with hardware engineering, to harness the performance attained by domain-specific logic. There exists a variety of frameworks for conventional artificial neural networks. However, not much research effort has been put into the creation of frameworks optimized for spiking neural networks (SNNs). This new generation of neural networks becomes increasingly interesting for the deployment of AI on edge devices, which have tight power and resource constraints. Our end-to-end framework E3NE automates the generation of efficient SNN inference logic for FPGAs. Based on a PyTorch model and user parameters, it applies various optimizations and assesses trade-offs inherent to spike-based accelerators. Multiple levels of parallelism and the use of an emerging neural encoding scheme result in an efficiency superior to previous SNN hardware implementations. For a similar model, E3NE uses less than 50% of hardware resources and 20% less power, while reducing the latency by an order of magnitude. Furthermore, scalability and generality allowed the deployment of the large-scale SNN models AlexNet and VGG.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The brain explained\",\n        \"Spatiotemporal firing patterns in the frontal cortex of behaving monkeys\",\n        \"Reliable temporal modulation in cortical spike trains in the awake monkey\",\n        \"Spiking neuron models: Single neurons, populations, plasticity\",\n        \"Information theory and neural coding\",\n        \"A quantitative description of membrane current and its application to conduction and excitation in nerve\",\n        \"Simple model of spiking neurons\",\n        \"Methods in neuronal modeling: From ions to networks\",\n        \"The other side of the engram: experience-driven changes in neuronal intrinsic excitability\",\n        \"Temporal encoding in nervous systems: a rigorous definition\",\n        \"Networks of spiking neurons: the third generation of neural network models\",\n        \"A million spiking-neuron integrated circuit with a scalable communication network and interface\",\n        \"Scalable energy-efficient, low-latency implementations of trained spiking deep belief networks on spinnaker\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"Taking neuromorphic computing to the next level with loihi 2\",\n        \"Bluehive-a field-programable custom computing machine for extreme-scale real-time neural network simulation\",\n        \"An fpga-based hardware emulator for neuromorphic chip with rram\",\n        \"The tempotron: a neuron that learns spike timingâ€“based decisions\",\n        \"Deep spiking convolutional neural network trained with unsupervised spike-timing-dependent plasticity\",\n        \"Going deeper in spiking neural networks: Vgg and residual architectures\",\n        \"A safari through fpga-based neural network compilation and design automation flows\",\n        \"Angel-eye: A complete design flow for mapping cnn onto embedded fpga\",\n        \"Dnnvm: End-to-end compiler leveraging heterogeneous optimizations on fpga-based cnn accelerators\",\n        \"Dla: Compiler and fpga overlay for neural network inference acceleration\",\n        \"{{TVM}}: An automated end-to-end optimizing compiler for deep learning\",\n        \"An automatic rtl compiler for high-throughput fpga implementation of diverse deep convolutional neural networks\",\n        \"Encoding, model, and architecture: Systematic optimization for spiking neural network in fpgas\",\n        \"Mapping spiking neural networks onto a manycore neuromorphic architecture\",\n        \"A software framework for mapping neural networks to a wafer-scale neuromorphic hardware system.\",\n        \"A hierachical configuration system for a massively parallel neural hardware platform\",\n        \"Minitaur, an event-driven fpga-based spiking network accelerator\",\n        \"Hardware implementation of spiking neural networks on fpga\",\n        \"An fpga implementation of deep spiking neural networks for low-power and fast classification\",\n        \"S2n2: A fpga accelerator for streaming spiking neural networks\",\n        \"Finn: A framework for fast, scalable binarized neural network inference\",\n        \"To spike, or when to spike?\",\n        \"Solving a classification task by spiking neural network with stdp based on rate and temporal input encoding\",\n        \"Spike-time encoding as a data compression technique for pattern recognition of temporal data\",\n        \"Selection and optimization of temporal spike encoding methods for spiking neural networks\",\n        \"Unsupervised learning of digit recognition using spike-timing-dependent plasticity\",\n        \"Recurrent spiking neural network learning based on a competitive maximization of neuronal activity\",\n        \"Enabling deep spiking neural networks with hybrid conversion and spike timing dependent backpropagation\",\n        \"Efficient spiking neural networks with radix encoding\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Quantization and training of neural networks for efficient integer-arithmetic-only inference\",\n        \"Optimizing fpga-based accelerator design for deep convolutional neural networks\",\n        \"Smartshuttle: Optimizing off-chip memory accesses for deep learning accelerators\",\n        \"The mnist database of handwritten digits\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Roofline: an insightful visual performance model for multicore architectures\",\n        \"In-hardware learning of multilayer spiking neural networks on a neuromorphic processor\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in E3NE: An End-to-End Framework for Accelerating Spiking Neural Networks with Emerging Neural Encoding on FPGAs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}