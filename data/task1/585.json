{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FlexSA: Flexible Systolic Array Architecture for Efficient Pruned DNN Model Training\n\nPaper Abstract: Abstract Modern deep learning models have high memory and computation cost. To make them fast and memory-cost efficient, structured model pruning is commonly used. We find that pruning a model using a common training accelerator with large systolic arrays is extremely performance-inefficient. To make a systolic array efficient for pruning and training, we propose FlexSA, a flexible systolic array architecture. FlexSA dynamically reconfigures the systolic array structure and offers multiple sub-systolic operating modes, which are designed for energy- and memory bandwidth-efficient processing of tensors with different sizes and shapes. We also present a compilation heuristic for tiling matrix-multiplication-and-accumulation operations in a training workload to best utilize the resources of FlexSA. Based on our evaluation, FlexSA with the proposed compilation heuristic improves compute resource utilization of pruning and training modern CNN models by 37% compared to a conventional training accelerator with a large systolic array. FlexSA also improves on-chip data reuse by 1.7X saving 28% energy compared to naive systolic array splitting.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Pruning filters for efficient convnets\",\n        \"Pruning convolutional neural networks for resource efficient transfer learning\",\n        \"Channel pruning for accelerating very deep neural networks\",\n        \"Network trimming: A data-driven neuron pruning approach towards efficient deep architectures\",\n        \"Amc: Automl for model compression and acceleration on mobile devices\",\n        \"Prunetrain: fast neural network training by dynamic sparse model reconfiguration\",\n        \"Compression-aware training of deep networks\",\n        \"Campfire: Compressible, regularization-free, structured sparse training for hardware accelerators\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Intel ngraph: An intermediate representation, compiler, and executor for deep learning\",\n        \"tesla says its new self-driving chip will help make its cars autonomous\",\n        \"Gpu kernels for block-sparse weights\",\n        \"Deep residual learning for image recognition\",\n        \"Inception-v4, inception-resnet and the impact of residual connections on learning\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Attention is all you need\",\n        \"Delta: Gpu performance model for deep learning applications with in-depth memory system traffic analysis\",\n        \"Mini-batch serialization: Cnn training with inter-layer data reuse\",\n        \"Deep learning SDK documentation\",\n        \"On large-batch training for deep learning: Generalization gap and sharp minima\",\n        \"Exploring generalization in deep learning\",\n        \"Ese: Efficient speech recognition engine with sparse lstm on fpga\",\n        \"Scalpel: Customizing dnn pruning to the underlying hardware parallelism\",\n        \"Structured pruning of deep convolutional neural networks\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Discrimination-aware channel pruning for deep neural networks\",\n        \"Dynamic channel pruning: Feature boosting and suppression\",\n        \"Why systolic architectures?\",\n        \"Scale-sim: Systolic cnn accelerator simulator\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Mask r-cnn\",\n        \"You only look once: Unified, real-time object detection\",\n        \"Google tpu system architecture\",\n        \"Nvidia tesla: A unified graphics and computing architecture\",\n        \"Tetris: Scalable and efficient neural network acceleration with 3d memory\",\n        \"Cacti-3dd: Architecture-level modeling for 3d die-stacked dram main memory\",\n        \"Efficient fixed/floating-point merged mixed-precision multiply-accumulate unit for deep learning processors\",\n        \"Dadiannao: A machine-learning supercomputer\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"Mixed precision training\",\n        \"High Bandwidth Memory (HBM) DRAM, JESD235A\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Group normalization\",\n        \"Rectified linear units improve restricted boltzmann machines\",\n        \"{{TVM}}: An automated end-to-end optimizing compiler for deep learning\",\n        \"Fused-layer cnn accelerators\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in FlexSA: Flexible Systolic Array Architecture for Efficient Pruned DNN Model Training, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}