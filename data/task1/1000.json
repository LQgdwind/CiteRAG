{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: An Integer Linear Programming Framework for Mining Constraints from Data\n\nPaper Abstract: Abstract Structured output prediction problems (e.g., sequential tagging, hierarchical multi-class classification) often involve constraints over the output label space. These constraints interact with the learned models to filter infeasible solutions and facilitate in building an accountable system. However, although constraints are useful, they are often based on hand-crafted rules. This raises a question â€“ can we mine constraints and rules from data based on a learning algorithm? In this paper, we present a general framework for mining constraints from data. In particular, we consider the inference in structured output prediction as an integer linear programming (ILP) problem. Then, given the coefficients of the objective function and the corresponding solution, we mine the underlying constraints by estimating the outer and inner polytopes of the feasible set. We verify the proposed constraint mining algorithm in various synthetic and real-world applications and demonstrate that the proposed approach successfully identifies the feasible set at scale. In particular, we show that our approach can learn to solve 9x9 Sudoku puzzles and minimal spanning tree problems from examples without providing the underlying rules. Our algorithm can also integrate with a neural network model to learn the hierarchical label structure of a multi-label classification task. Besides, we provide a theoretical analysis about the tightness of the polytopes and the reliability of the mined constraints.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hinge-loss markov random fields and probabilistic soft logic\",\n        \"Constraint acquisition via partial queries\",\n        \"New approaches to constraint acquisition\",\n        \"The inductive constraint programming loop\",\n        \"Applications of inductive logic programming\",\n        \"Matrix tree theorems\",\n        \"Tractable semi-supervised learning of complex structured prediction models\",\n        \"Structural learning with amortized inference\",\n        \"Constraints as prior knowledge\",\n        \"Global inference for sentence compression: An integer linear programming approach\",\n        \"Mathematical applications of inductive logic programming\",\n        \"Hierarchical annotation of medical images\",\n        \"Scalable structure learning for probabilistic soft logic\",\n        \"Enumerating possible sudoku grids\",\n        \"Training structural svms when exact inference is intractable\",\n        \"An LP view of the M-best MAP problem\",\n        \"Posterior regularization for structured latent variable models\",\n        \"Predicting structures in NLP: constrained conditional models and integer linear programming in NLP\",\n        \"Gurobi optimizer reference manual, 2019.\",\n        \"Generalized resolution and cutting planes\",\n        \"A short introduction to probabilistic soft logic\",\n        \"Adam: A method for stochastic optimization\",\n        \"Structured learning with approximate inference\",\n        \"Margin-based decomposed amortized inference\",\n        \"Augmenting neural networks with first-order logic\",\n        \"A logic-driven framework for consistency of neural models\",\n        \"Concise integer linear programming formulations for dependency parsing\",\n        \"Turbo parsers: Dependency parsing by approximate variational inference\",\n        \"AD33{}^{\\\\mbox{3}}: alternating directions dual decomposition for MAP inference in graphical models\",\n        \"Non-projective dependency parsing using spanning tree algorithms\",\n        \"Target language-aware constrained inference for cross-lingual dependency parsing\",\n        \"Inductive logic programming: Theory and methods\",\n        \"Loopy belief propagation for approximate inference: An empirical study\",\n        \"Structured learning and prediction in computer vision\",\n        \"Learning constraints for structured prediction using rectifier networks\",\n        \"Can convolutional neural networks crack sudoku puzzles?\",\n        \"Semantic role labeling via integer linear programming inference\",\n        \"Learning and inference over constrained output\",\n        \"Learning constraints from examples\",\n        \"Markov logic networks\",\n        \"Incremental integer linear programming for non-projective dependency parsing\",\n        \"Acquiring both constraint and solution preferences in interactive constraint systems\",\n        \"A linear programming formulation for global inference in natural language tasks\",\n        \"Integer linear programming inference for conditional random fields\",\n        \"Efficient decomposed learning for structured prediction\",\n        \"On amortizing inference cost for structured prediction\",\n        \"Learning linear programs from optimal decisions\",\n        \"A theory of the learnable\",\n        \"Low-rank semidefinite programming for the MAX2SAT problem\",\n        \"SATNet: Bridging deep learning and logical reasoning using a differentiable satisfiability solver\",\n        \"Integrating relation constraints with neural relation extractors\",\n        \"Men also like shopping: Reducing gender bias amplification using corpus-level constraints\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in An Integer Linear Programming Framework for Mining Constraints from Data, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}