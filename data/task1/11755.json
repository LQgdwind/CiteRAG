{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Twin Network Augmentation: A Novel Training Strategy for Improved Spiking Neural Networks and Efficient Weight Quantization\n\nPaper Abstract: Abstract The proliferation of Artificial Neural Networks (ANNs) has led to increased energy consumption, raising concerns about their sustainability. Spiking Neural Networks (SNNs), which are inspired by biological neural systems and operate using sparse, event-driven spikes to communicate information between neurons, offer a potential solution due to their lower energy requirements. An alternative technique for reducing a neural networkâ€™s footprint is quantization, which compresses weight representations to decrease memory usage and energy consumption. In this study, we present Twin Network Augmentation (TNA), a novel training framework aimed at improving the performance of SNNs while also facilitating an enhanced compression through low-precision quantization of weights. TNA involves co-training an SNN with a twin network, optimizing both networks to minimize their cross-entropy losses and the mean squared error between their output logits. We demonstrate that TNA significantly enhances classification performance across various vision datasets and in addition is particularly effective when applied when reducing SNNs to ternary weight precision. Notably, during inference , only the ternary SNN is retained, significantly reducing the network in number of neurons, connectivity and weight size representation. Our results show that TNA outperforms traditional knowledge distillation methods and achieves state-of-the-art performance for the evaluated network architecture on benchmark datasets, including CIFAR-10, CIFAR-100, and CIFAR-10-DVS. This paper underscores the effectiveness of TNA in bridging the performance gap between SNNs and ANNs and suggests further exploration into the application of TNA in different network architectures and datasets.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Spiking neural networks hardware implementations and challenges: A survey\",\n        \"Network augmentation for tiny deep learning\",\n        \"Siamese neural networks: An overview\",\n        \"Binaryconnect: Training deep neural networks with binary weights during propagations\",\n        \"Co-learning synaptic delays, weights and adaptation in spiking neural networks\",\n        \"Comprehensive snn compression using admm optimization and activity regularization\",\n        \"Temporal efficient training of spiking neural network via gradient re-weighting\",\n        \"Sparsity-control ternary weight networks\",\n        \"Nuts-bsnn: A non-uniform time-step binarized spiking neural network with energy-efficient in-memory computing macro\",\n        \"Incorporating learnable membrane time constant to enhance learning of spiking neural networks\",\n        \"Dropblock: A regularization method for convolutional networks\",\n        \"Knowledge distillation: A survey\",\n        \"Im-loss: information maximization loss for spiking neural networks\",\n        \"Recdis-snn: Rectifying membrane potential distribution for directly training spiking neural networks\",\n        \"Delving deep into rectifiers: Surpassing human-level performance on imagenet classification\",\n        \"Distilling the knowledge in a neural network\",\n        \"Advancing spiking neural networks toward deep residual learning\",\n        \"Electricity 2024\",\n        \"Bisnn: training spiking neural networks with binary weights via bayesian learning\",\n        \"Bs4nn: Binarized spiking neural networks with temporal coding and learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Training binary neural networks with knowledge transfer\",\n        \"Ternary weight networks\",\n        \"Cifar10-dvs: an event-stream dataset for object classification\",\n        \"Seenn: Towards temporal spiking early exit neural networks\",\n        \"A scalable and reconfigurable in-memory architecture for ternary deep spiking neural network with reram based neurons\",\n        \"Exploring the connection between binary and spiking neural networks\",\n        \"Networks of spiking neurons: the third generation of neural network models\",\n        \"Surrogate gradient learning in spiking neural networks: Bringing the power of gradient-based optimization to spiking neural networks\",\n        \"A low-power, high-accuracy with fully on-chip ternary weight hardware architecture for deep spiking neural networks\",\n        \"Efficient neuromorphic signal processing with loihi 2\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Albsnn: ultra-low latency adaptive local binary spiking neural network with accuracy loss estimator\",\n        \"Self-architectural knowledge distillation for spiking neural networks\",\n        \"How much does initialization affect generalization?\",\n        \"Adaptive binary-ternary quantization\",\n        \"Fitnets: Hints for thin deep nets\",\n        \"Efficient video and audio processing with loihi 2\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Regularization of neural networks using dropconnect\",\n        \"Hardware-aware model architecture for ternary spiking neural networks\",\n        \"Direct training for spiking neural networks: Faster, larger, better\",\n        \"Fashion-mnist: a novel image dataset for benchmarking machine learning algorithms\",\n        \"Constructing deep spiking neural networks from artificial neural networks with knowledge distillation\",\n        \"Knowledge distillation via softmax regression representation learning\",\n        \"Seneca: Scalable energy-efficient neuromorphic computer architecture\",\n        \"Cutmix: Regularization strategy to train strong classifiers with localizable features\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Random erasing data augmentation\",\n        \"Mixture-of-experts with expert choice routing\",\n        \"Spikformer: When spiking neural network meets transformer\",\n        \"Spikegpt: Generative pre-trained language model with spiking neural networks\",\n        \"Tcja-snn: Temporal-channel joint attention for spiking neural networks\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Twin Network Augmentation: A Novel Training Strategy for Improved Spiking Neural Networks and Efficient Weight Quantization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}