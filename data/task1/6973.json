{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Alternating Differentiation for Optimization Layers\n\nPaper Abstract: Abstract The idea of embedding optimization problems into deep neural networks as optimization layers to encode constraints and inductive priors has taken hold in recent years. Most existing methods focus on implicitly differentiating Karush–Kuhn–Tucker (KKT) conditions in a way that requires expensive computations on the Jacobian matrix, which can be slow and memory-intensive. In this paper, we developed a new framework, named Alternating Differentiation (Alt-Diff), that differentiates optimization problems (here, specifically in the form of convex optimization problems with polyhedral constraints) in a fast and recursive way. Alt-Diff decouples the differentiation procedure into a primal update and a dual update in an alternating way. Accordingly, Alt-Diff substantially decreases the dimensions of the Jacobian matrix especially for optimization with large-scale constraints and thus increases the computational speed of implicit differentiation. We show that the gradients obtained by Alt-Diff are consistent with those obtained by differentiating KKT conditions. In addition, we propose to truncate Alt-Diff to further accelerate the computational speed. Under some standard assumptions, we show that the truncation error of gradients is upper bounded by the same order of variables’ estimation error. Therefore, Alt-Diff can be truncated to further increase computational speed without sacrificing much accuracy. A series of comprehensive experiments validate the superiority of Alt-Diff.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Eletrical load.\",\n        \"Differentiable convex optimization layers.\",\n        \"Differentiating through a cone program.\",\n        \"Optnet: Differentiable optimization as a layer in neural networks.\",\n        \"Input convex neural networks.\",\n        \"Deep equilibrium models.\",\n        \"Multiscale deep equilibrium models.\",\n        \"Structured prediction energy networks.\",\n        \"End-to-end learning for structured prediction energy networks.\",\n        \"Efficient and modular implicit differentiation.\",\n        \"Nonsmooth implicit differentiation for machine-learning and optimization.\",\n        \"Perturbation analysis of optimization problems.\",\n        \"Distributed optimization and statistical learning via the alternating direction method of multipliers.\",\n        \"A survey of anticipatory mobile networking: Context-based classification, prediction methodologies, and optimization techniques.\",\n        \"Efficient differentiable quadratic programming layers: an ADMM approach.\",\n        \"Neural ordinary differential equations.\",\n        \"Unrolled optimization with deep priors.\",\n        \"Generic methods for optimization-based modeling.\",\n        \"Task-based end-to-end model learning in stochastic optimization.\",\n        \"Augmented neural ODEs.\",\n        \"Smart “predict, then optimize”.\",\n        \"Efficient multiple hyperparameter learning for log-linear models.\",\n        \"JFB: Jacobian-free backpropagation for implicit networks.\",\n        \"Is attention better than matrix decomposition?\",\n        \"On training implicit models.\",\n        \"Approximation methods for bilevel programming.\",\n        \"Augmented Lagrangian and operator-splitting methods in nonlinear mechanics.\",\n        \"On differentiating parameterized argmin and argmax problems with application to bi-level optimization.\",\n        \"Deep declarative networks.\",\n        \"Implicit graph neural networks.\",\n        \"Stochastic distribution control system design: a convex optimization approach.\",\n        \"Joint inference and input optimization in equilibrium networks.\",\n        \"Adam: A method for stochastic optimization.\",\n        \"Deep implicit layers - neural ODEs, deep equilibirum models, and beyond.\",\n        \"The implicit function theorem: history, theory, and applications.\",\n        \"A bilevel optimization approach for parameter learning in variational models.\",\n        \"Resource management in cloud networking using economic analysis and pricing models: A survey.\",\n        \"Sparse and constrained attention for neural machine translation.\",\n        \"Interior point solving for LP-based prediction+ optimisation.\",\n        \"Smart predict-and-optimize for hard combinatorial optimization problems.\",\n        \"From softmax to sparsemax: A sparse model of attention and multi-label classification.\",\n        \"Real-time convex optimization in signal processing.\",\n        \"Understanding and correcting pathologies in the training of learned optimizers.\",\n        \"Implicit surface representations as layers in neural networks.\",\n        \"Algorithm unrolling: Interpretable, efficient deep learning for signal and image processing.\",\n        \"LSQR: An algorithm for sparse linear equations and sparse least squares.\",\n        \"Deepsdf: Learning continuous signed distance functions for shape representation.\",\n        \"OSQP: An operator splitting solver for quadratic programs.\",\n        \"SATNet: Bridging deep learning and logical reasoning using a differentiable satisfiability solver.\",\n        \"IKOL: Inverse kinematics optimization layer for 3D human pose and shape estimation via Gauss-Newton differentiation.\",\n        \"Implicitly defined layers in neural networks.\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Alternating Differentiation for Optimization Layers, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}