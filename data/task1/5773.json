{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AutoMLBench: A Comprehensive Experimental Evaluation of Automated Machine Learning Frameworks\n\nPaper Abstract: Abstract With the booming demand for machine learning applications, it has been recognized that the number of knowledgeable data scientists can not scale with the growing data volumes and application needs in our digital world. In response to this demand, several automated machine learning (AutoML) frameworks have been developed to fill the gap of human expertise by automating the process of building machine learning pipelines. Each framework comes with different heuristics-based design decisions. In this study, we present a comprehensive evaluation and comparison of the performance characteristics of six popular AutoML frameworks, namely, AutoWeka, AutoSKlearn, TPOT, Recipe, ATM and SmartML across 100 data sets from established AutoML benchmark suites. Our experimental evaluation considers different aspects for its comparison, including the performance impact of several design decisions, including time budget, size of search space, meta-learning, and ensemble construction. The results of our study reveal various interesting insights that can significantly guide and impact the design of AutoML frameworks.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Hyperopt: A python library for optimizing the hyperparameters of machine learning algorithms\",\n        \"Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures.\",\n        \"API design for machine learning software: experiences from the scikit-learn project\",\n        \"Ensemble selection from libraries of models\",\n        \"Meta-data: Characterization of input features for meta-learning\",\n        \"RECIPE: A grammar-based framework for automatically evolving classification pipelines\",\n        \"Ensemble methods in machine learning\",\n        \"The impact of auto-sklearnâ€™s learning settings: Meta-learning, ensembling, time budget, and search space size\",\n        \"Autogluon-tabular: Robust and accurate automl for structured data.\",\n        \"Bohb: Robust and efficient hyperparameter optimization at scale.\",\n        \"Auto-sklearn 2.0: The next generation\",\n        \"Efficient and robust automated machine learning\",\n        \"Software crisis 2.0\",\n        \"A generalized wilcoxon test for comparing arbitrarily singly-censored samples\",\n        \"Amlb: an automl benchmark.\",\n        \"An open source automl benchmark.\",\n        \"Gama: A general automated machine learning assistant\",\n        \"Automl: A survey of the state-of-the-art.\",\n        \"Sequential model-based optimization for general algorithm configuration\",\n        \"Worldwide semiannual cognitive/artificial intelligence systems spending guide.\",\n        \"Auto-keras: An efficient neural architecture search system\",\n        \"Algorithm selection via meta-learning\",\n        \"Robo: A flexible and robust bayesian optimization framework in python\",\n        \"Hyperopt-sklearn: automatic hyperparameter configuration for scikit-learn\",\n        \"Algorithm selection for combinatorial search problems: A survey\",\n        \"Auto-weka 2.0: Automatic model selection and hyperparameter optimization in weka\",\n        \"Application of majority voting to pattern recognition: an analysis of its behavior and performance\",\n        \"H2O AutoML: Scalable automatic machine learning.\",\n        \"Smartml: A meta learning-based framework for automated selection and hyperparameter tuning for machine learning algorithms\",\n        \"Machine learning, neural and statistical classification.\",\n        \"Machine learning\",\n        \"Ml-plan: Automated machine learning via hierarchical planning\",\n        \"Evaluation of a tree-based pipeline optimization tool for automating data science\",\n        \"Tpot: A tree-based pipeline optimization tool for automating machine learning\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Mljar: State-of-the-art automated machine learning framework for tabular data. version 0.10.3.\",\n        \"Automated machine learning: State-of-the-art and open challenges\",\n        \"The machine learning bazaar: Harnessing the ml ecosystem for effective system development\",\n        \"ATM: A distributed, collaborative, scalable system for automated machine learning\",\n        \"Auto-weka: Combined selection and hyperparameter optimization of classification algorithms\",\n        \"Towards automated machine learning: Evaluation and comparison of automl approaches and tools\",\n        \"Lightautoml: Automl solution for a large financial services ecosystem.\",\n        \"Meta-learning: A survey.\",\n        \"Openml: Networked science in machine learning\",\n        \"Flaml: A fast and lightweight automl library\",\n        \"Benchmark and survey of automated machine learning frameworks\",\n        \"Handbook of big data technologies.\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in AutoMLBench: A Comprehensive Experimental Evaluation of Automated Machine Learning Frameworks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}