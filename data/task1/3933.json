{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CREW: Computation Reuse and Efficient Weight Storage for Hardware-accelerated MLPs and RNNs\n\nPaper Abstract: Abstract Deep Neural Networks (DNNs) have achieved tremendous success for cognitive applications. The core operation in a DNN is the dot product between quantized inputs and weights. Prior works exploit the weight/input repetition that arises due to quantization to avoid redundant computations in Convolutional Neural Networks (CNNs). However, in this paper we show that their effectiveness is severely limited when applied to Fully-Connected (FC) layers, which are commonly used in state-of-the-art DNNs, as it is the case of modern Recurrent Neural Networks (RNNs) and Transformer models. To improve energy-efficiency of FC computation we present CREW, a hardware accelerator that implements Computation Reuse and an Efficient Weight Storage mechanism to exploit the large number of repeated weights in FC layers. CREW first performs the multiplications of the unique weights by their respective inputs and stores the results in an on-chip buffer. The storage requirements are modest due to the small number of unique weights and the relatively small size of the input compared to convolutional layers. Next, CREW computes each output by fetching and adding its required products. To this end, each weight is replaced offline by an index in the buffer of unique products. Indices are typically smaller than the quantized weights, since the number of unique weights for each input tends to be much lower than the range of quantized weights, which reduces storage and memory bandwidth requirements. Overall, CREW greatly reduces the number of multiplications and provides significant savings in model memory footprint and memory bandwidth usage. We evaluate CREW on a diverse set of modern DNNs. On average, CREW provides 2.61‚Äãx2.61ùë•2.61x speedup and 2.42‚Äãx2.42ùë•2.42x energy savings over a TPU-like accelerator. Compared to UCNN, a state-of-art computation reuse technique, CREW achieves 2.10‚Äãx2.10ùë•2.10x speedup and 2.08‚Äãx2.08ùë•2.08x energy savings on average.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Google‚Äôs neural machine translation system: Bridging the gap between human and machine translation\",\n        \"Deep speech 2: End-to-end speech recognition in english and mandarin\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Eyeriss: A spatial architecture for energy-efficient dataflow for convolutional neural networks\",\n        \"Scnn: An accelerator for compressed-sparse convolutional neural networks\",\n        \"Flexflow: A flexible dataflow accelerator architecture for convolutional neural networks\",\n        \"Why systolic architectures?\",\n        \"A unified systolic architecture for artificial neural networks\",\n        \"Morph: Flexible acceleration for 3d cnn-based video understanding\",\n        \"Ucnn: Exploiting computational reuse in deep neural networks via weight repetition\",\n        \"Snapea: Predictive early activation for reducing computation in deep convolutional neural networks\",\n        \"Attention is all you need\",\n        \"The kaldi speech recognition toolkit\",\n        \"Recurrent neural network regularization\",\n        \"Minerva: Enabling low-power, highly-accurate deep neural network accelerators\",\n        \"Eie: Efficient inference engine on compressed deep neural network\",\n        \"Cambricon-x: An accelerator for sparse neural networks\",\n        \"Learning both weights and connections for efficient neural networks\",\n        \"Scalpel: Customizing dnn pruning to the underlying hardware parallelism\",\n        \"Improving deep neural network acoustic models using generalized maxout networks\",\n        \"Deep neural networks in machine translation: An overview\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Deep residual learning for image recognition\",\n        \"Densely connected convolutional networks\",\n        \"Learning spatiotemporal features with 3d convolutional networks\",\n        \"Long short-term memory\",\n        \"Learning phrase representations using RNN encoder-decoder for statistical machine translation\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Effective approaches to attention-based neural machine translation\",\n        \"Dorefa-net: Training low bitwidth convolutional neural networks with low bitwidth gradients\",\n        \"Lq-nets: Learned quantization for highly accurate and compact deep neural networks\",\n        \"Statistical theory of quantization\",\n        \"Scale-sim: Systolic cnn accelerator simulator\",\n        \"Synopsys\",\n        \"Cacti-p: Architecture-level modeling for sram-based structures with advanced leakage reduction techniques\",\n        \"Micron lpddr4 system power calculator\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Librispeech: an asr corpus based on public domain audio books\",\n        \"Findings of the 2016 conference on machine translation\",\n        \"Openseq2seq: extensible toolkit for distributed and mixed precision training of sequence-to-sequence models\",\n        \"Compressing deep convolutional networks using vector quantization\",\n        \"Trained ternary quantization\",\n        \"Low complexity multiply-accumulate units for convolutional neural networks with weight-sharing\",\n        \"Power-efficient accelerator design for neural networks using computation reuse\",\n        \"Deep learning acceleration with neuron-to-memory transformation\",\n        \"Deep reuse: Streamline cnn inference on the fly via coarse-grained computation reuse\",\n        \"Energy-efficient neural networks using approximate computation reuse\",\n        \"Computation reuse in dnns by exploiting input similarity\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in CREW: Computation Reuse and Efficient Weight Storage for Hardware-accelerated MLPs and RNNs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}