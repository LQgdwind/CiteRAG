{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Project CLAI: Instrumenting the Command Line as a New Environment for AI Agents\n\nPaper Abstract: Abstract This paper reports on Project CLAI (Command Line AI) which aims to bring the power of AI to the command line interface (CLI). The CLAI platform sets up the CLI as a new environment for AI researchers to conquer by surfacing the command line as a generic environment that researchers can interface to using a simple sense-act API, much like the traditional AI agent architecture. In this paper, we discuss the design and implementation of the platform in detail, through illustrative use cases of new end user interaction patterns enabled by this design, and through quantitative evaluation of the system footprint of a CLAI-enabled terminal. We also report on some early user feedback on CLAI’s features from an internal survey.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Pillow Library\",\n        \"What Is Behind The CLI Making A Comeback?\",\n        \"Unanswered questions – what to do?\",\n        \"Artificial intelligence: Does another huge language model prove anything?\",\n        \"Statistical Goal Parameter Recognition\",\n        \"Reinforcement Learning for Mapping Instructions to Actions\",\n        \"Kubernetes and the Path to Cloud Native\",\n        \"UbuntuWorld 1.0 LTS – A Platform for Automated Problem Solving & Troubleshooting in the Ubuntu OS\",\n        \"The Inmates are Running the Asylum: Why High-tech Products Drive Us Crazy and How to Restore the Sanity\",\n        \"The Growth of Command Line Options, 1979-Present\",\n        \"DevSpace Cloud – The Dev Platform for Cloud-Native Teams\",\n        \"Planning with Incomplete Information in the UNIX Domain\",\n        \"A Softbot-Based Interface to the Internet\",\n        \"The Return of the Command Line Interface\",\n        \"PIL Library\",\n        \"GitHub Developer REST API v3\",\n        \"Elasticsearch: The Definitive Guide: A Distributed Real-Time Search and Analytics Engine\",\n        \"AInix: An Open Platform for Natural Language Interfaces to Shell Commands\",\n        \"The Fast Downward Planning System\",\n        \"Matplotlib: A 2D Graphics Environment\",\n        \"Betty\",\n        \"Deepx: A Software Accelerator for Low-Power Deep Learning Inference on Mobile Devices\",\n        \"SmartShell: Automated Shell Scripts Synthesis from Natural Language\",\n        \"Program Synthesis from Natural Language using Recurrent Neural Networks\",\n        \"Nl2bash: A Corpus and Semantic Parser for Natural Language Interface to the Linux Operating System\",\n        \"Docker: Lightweight Linux Containers for Consistent Development and Deployment\",\n        \"The Linux Plan Corpus\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"Probabilistic Plan Recognition Using Off-the-shelf Classical Planners\",\n        \"Using TF-IDF to Determine Word Relevance in Document Queries\",\n        \"Language Understanding for Chatbots and AI assistants\",\n        \"odo: OpenShift CLI for Developers\",\n        \"A Unified Conversational Assistant Framework for Business Process Automation\",\n        \"Artificial Intelligence: A Modern Approach\",\n        \"Good news for developers: The CLI is back\",\n        \"Unix & Linux\",\n        \"Energy and Policy Considerations for Deep Learning in NLP\",\n        \"Sequence to Sequence Learning with Neural Networks\",\n        \"Introduction to Reinforcement Learning\",\n        \"Yet Another Python Profiler\",\n        \"Branchynet: Fast inference via early exiting from deep neural networks\",\n        \"Apple replaces bash with zsh as the default shell in macOS Catalina\",\n        \"A Bandit Approach to Posterior Dialog Orchestration Under a Budget\",\n        \"Pandas Describe Function\",\n        \"Pandas Library\",\n        \"Fast, Compact, and High Quality LSTM-RNN Based Statistical Parametric Speech Synthesizers for Mobile Devices\",\n        \"DeepCPU: Serving RNN-Based Deep Learning Models 10x Faster\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Project CLAI: Instrumenting the Command Line as a New Environment for AI Agents, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}