{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Large-Scale Language Model Training on GPU Clusters Using Megatron-LM\n\nPaper Abstract: Abstract. Large language models have led to state-of-the-art accuracies across several tasks. However, training these models efficiently is challenging because: a) GPU memory capacity is limited, making it impossible to fit large models on even a multi-GPU server, and b) the number of compute operations required can result in unrealistically long training times. Consequently, new methods of model parallelism such as tensor and pipeline parallelism have been proposed. Unfortunately, naive usage of these methods leads to scaling issues at thousands of GPUs. In this paper, we show how tensor, pipeline, and data parallelism can be composed to scale to thousands of GPUs. We propose a novel interleaved pipelining schedule that can improve throughput by 10+% with memory footprint comparable to existing approaches. Our approach allows us to perform training iterations on a model with 1 trillion parameters at 502 petaFLOP/s on 3072 GPUs (per-GPU throughput of 52% of theoretical peak).\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Applications of GPT-3\",\n        \"DeepSpeed: Extreme-Scale Model Training for Everyone\",\n        \"DeepSpeed Repository\",\n        \"GitHub Copilot\",\n        \"Microsoft Translates Spoken Text to Code\",\n        \"NVIDIA A100 Tensor Core GPU\",\n        \"NVIDIA Collective Communication Library (NCCL)\",\n        \"NVIDIA Selene Supercomputer\",\n        \"NVLink and NVSwitch\",\n        \"PyTorch JIT\",\n        \"Language Models are Few-Shot Learners\",\n        \"Training Deep Nets with Sublinear Memory Cost\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"DAPPLE: A Pipelined Data Parallel Approach for Training Large Models\",\n        \"Switch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity\",\n        \"Integrated Model, Batch, and Domain Parallelism in Training Neural Networks\",\n        \"Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour\",\n        \"Revolve: An Implementation of Checkpointing for the Reverse or Adjoint Mode of Computational Differentiation\",\n        \"PipeTransformer: Automated Elastic Pipelining for Distributed Training of Transformers\",\n        \"GPipe: Efficient Training of Giant Neural Networks using Pipeline Parallelism\",\n        \"Breaking the Memory Wall with Optimal Tensor Rematerialization\",\n        \"Beyond Data and Model Parallelism for Deep Neural Networks\",\n        \"Pipelined Backpropagation at Scale: Training Large Models without Batches\",\n        \"Scale MLPerf-0.6 Models on Google TPU-v3 Pods\",\n        \"PyTorch Distributed: Experiences on Accelerating Data Parallel Training\",\n        \"TeraPipe: Token-Level Pipeline Parallelism for Training Large-Scale Language Models\",\n        \"RoBERTa: A Robustly Optimized BERT Pretraining Approach\",\n        \"MLPerf Training Benchmark\",\n        \"PipeDream: Generalized Pipeline Parallelism for DNN Training\",\n        \"Memory-Efficient Pipeline-Parallel DNN Training\",\n        \"HetPipe: Enabling Large DNN Training on (Whimpy) Heterogeneous GPU Clusters through Integration of Pipelined Model Parallelism and Data Parallelism\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Improving Language Understanding by Generative Pre-Training\",\n        \"Language Models are Unsupervised Multitask Learners\",\n        \"Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer\",\n        \"ZeRO: Memory Optimization Towards Training A Trillion Parameter Models\",\n        \"ZeRO-Infinity: Breaking the GPU Memory Wall for Extreme Scale Deep Learning\",\n        \"ZeRO-Offload: Democratizing Billion-Scale Model Training\",\n        \"Mesh-TensorFlow: Deep Learning for Supercomputers\",\n        \"Megatron-LM: Training Multi-Billion Parameter Language Models using GPU Model Parallelism\",\n        \"Efficient Algorithms for Device Placement of DNN Graph Operators\",\n        \"Attention is All You Need\",\n        \"Petuum: A New Platform for Distributed Machine Learning on Big Data\",\n        \"Automatic Cross-Replica Sharding of Weight Updates in Data-Parallel Training\",\n        \"PipeMare: Asynchronous Pipeline Parallel DNN Training\",\n        \"XLNet: Generalized Autoregressive Pretraining for Language Understanding\",\n        \"ImageNet Training in Minutes\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Efficient Large-Scale Language Model Training on GPU Clusters Using Megatron-LM, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}