{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Soft Self-Consistency Improves Language Model Agents\n\nPaper Abstract: Abstract Generations from large language models (LLMs) can be improved by sampling and scoring multiple solutions to select a final answer. Current “sample and select” methods such as self-consistency (SC; Wang et al., 2023) rely on majority voting to score answers. However, when tasks have many distinct and valid answers, selection by voting requires a large number of samples. This makes SC prohibitively expensive for interactive tasks that involve generating multiple actions (answers) sequentially. After establishing that majority voting fails to provide consistent gains on such tasks, we demonstrate how to increase success rates by softening the scoring criterion. We introduce Soft Self-Consistency (Soft-SC), which replaces SC’s discontinuous scoring with a continuous score computed from model likelihoods, allowing for selection even when actions are sparsely distributed. Soft-SC improves both performance and efficiency on long-horizon interactive tasks, requiring half as many samples as SC for comparable or better performance. For a fixed number of samples, Soft-SC leads to a 1.3%percent1.31.3\\% increase over SC in absolute success rate on writing bash programs, a 6.6%percent6.66.6\\% increase on online shopping (WebShop), and a 4.7%percent4.74.7\\% increase for an interactive household game (ALFWorld). Finally, we show that Soft-SC can be applied to both open-source and black-box models.111Our code is publicly available at: https://github.com/HanNight/soft_self_consistency.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A learning algorithm for boltzmann machines\",\n        \"Let’s sample step by step: Adaptive-consistency for efficient reasoning and coding with LLMs\",\n        \"Do as i can, not as i say: Grounding language in robotic affordances\",\n        \"Language models as agent models\",\n        \"Introducing claude\",\n        \"On the opportunities and risks of foundation models\",\n        \"Bagging predictors\",\n        \"Codet: Code generation with generated tests\",\n        \"Reconcile: Round-table conference improves reasoning via consensus among diverse llms\",\n        \"Universal self-consistency for large language model generation\",\n        \"Textworld: A learning environment for text-based games\",\n        \"Revisiting the evaluation of uncertainty estimation and its application to explore model complexity-uncertainty trade-off\",\n        \"Improving factuality and reasoning in language models through multiagent debate\",\n        \"Controlling linguistic style aspects in neural language generation\",\n        \"A decision-theoretic generalization of on-line learning and an application to boosting\",\n        \"ROSCOE: A suite of metrics for scoring step-by-step reasoning\",\n        \"Mistral 7b\",\n        \"Semantic uncertainty: Linguistic invariances for uncertainty estimation in natural language generation\",\n        \"Using llm to select the right sql query from candidates\",\n        \"NL2Bash: A corpus and semantic parser for natural language interface to the linux operating system\",\n        \"Obtaining well calibrated probabilities using bayesian binning\",\n        \"Gpt-4 technical report\",\n        \"An important next step on our ai journey: Google; 2023 [updated 6 feb 2023]\",\n        \"Adapt: As-needed decomposition and planning with language models\",\n        \"ReCEval: Evaluating reasoning chains via correctness and informativeness\",\n        \"Toolllm: Facilitating large language models to master 16000+ real-world apis\",\n        \"Code llama: Open foundation models for code\",\n        \"Identifying the risks of lm agents with an lm-emulated sandbox\",\n        \"Are emergent abilities of large language models a mirage?\",\n        \"Toolformer: Language models can teach themselves to use tools\",\n        \"Reflexion: Language agents with verbal reinforcement learning\",\n        \"Alfred: A benchmark for interpreting grounded instructions for everyday tasks\",\n        \"ALFWorld: Aligning Text and Embodied Environments for Interactive Learning\",\n        \"Progprompt: Generating situated robot task plans using large language models\",\n        \"Calibrated interpretation: Confidence estimation in semantic parsing\",\n        \"Did you mean…? confidence-based trade-offs in semantic parsing\",\n        \"Self-consistency improves chain of thought reasoning in language models\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"Ethical and social risks of harm from language models\",\n        \"Huggingface’s transformers: State-of-the-art natural language processing\",\n        \"Intercode: Standardizing and benchmarking interactive coding with execution feedback\",\n        \"Webshop: Towards scalable real-world web interaction with grounded language agents\",\n        \"Tree of thoughts: Deliberate problem solving with large language models\",\n        \"React: Synergizing reasoning and acting in language models\",\n        \"Language agent tree search unifies reasoning acting and planning in language models\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Soft Self-Consistency Improves Language Model Agents, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}