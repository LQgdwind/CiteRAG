{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Sampling from exponential distributions in the time domain with superparamagnetic tunnel junctions\n\nPaper Abstract: Abstract Though exponential distributions are ubiquitous in statistical physics and related computational models, directly sampling them from device behavior is rarely done. The superparamagnetic tunnel junction (SMTJ), a key device in probabilistic computing, is known to naturally exhibit exponentially distributed temporal switching dynamics. To sample an exponential distribution with an SMTJ, we need to measure it in the time domain, which is challenging with traditional techniques that focus on sampling the instantaneous state of the device. In this work, we leverage a temporal encoding scheme, where information is encoded in the time at which the device switches between its resistance states. We then develop a circuit element known as a probabilistic delay cell that applies an electrical current step to an SMTJ and a temporal measurement circuit that measures the timing of the first switching event. Repeated experiments confirm that these times are exponentially distributed. Temporal processing methods then allow us to digitally compute with these exponentially distributed probabilistic delay cells. We describe how to use these circuits in a Metropolis-Hastings stepper and in a weighted random sampler, both of which are computationally intensive applications that benefit from the efficient generation of exponentially distributed random numbers.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A full-stack view of probabilistic computing with p-bits: devices, architectures, and algorithms\",\n        \"Probabilistic neural computing with stochastic devices\",\n        \"Probabilistic computing with p-bits: Optimization, machine learning and quantum simulation\",\n        \"Optimization by simulated annealing\",\n        \"An introduction to the Ising model\",\n        \"Integer factorization using stochastic magnetic tunnel junctions\",\n        \"Stochastic p-bits for invertible logic\",\n        \"Massively parallel probabilistic computing with sparse Ising machines\",\n        \"CMOS plus stochastic nanomagnets enabling heterogeneous computers for probabilistic inference and learning\",\n        \"Training deep Boltzmann networks with sparse Ising machines\",\n        \"Energy-efficient superparamagnetic Ising machine and its application to traveling salesman problems\",\n        \"Markov chain Monte Carlo for koopman-based optimal control\",\n        \"Ising formulations of many np problems\",\n        \"Analysis of intel’s ivy bridge digital random number generator\",\n        \"NVIDIA Hardware TRNG trusted application api\",\n        \"A compute-in-memory chip based on resistive random-access memory\",\n        \"Low-energy truly random number generation with superparamagnetic tunnel junctions for unconventional computing\",\n        \"Computing with invertible logic: Combinatorial optimization with probabilistic bits\",\n        \"Anatomy of spin-transfer torque\",\n        \"1gbit high density embedded STT-MRAM in 28nm fdsoi technology\",\n        \"Spin-transfer-torque MRAM: the next revolution in memory\",\n        \"Programmable electrical coupling between stochastic magnetic tunnel junctions\",\n        \"Nanosecond true random number generation with superparamagnetic tunnel junctions–identification of joule heating and spin-transfer-torque effects\",\n        \"Nanosecond random telegraph noise in in-plane magnetic tunnel junctions\",\n        \"Mutual control of stochastic switching for two electrically coupled superparamagnetic tunnel junctions\",\n        \"Thermal physics\",\n        \"Parallel weighted random sampling\",\n        \"A comparison of cpus, gpus, fpgas, and massively parallel processor arrays for random number generation\",\n        \"The Intel random number generator\",\n        \"An efficient method for generating discrete random variables with general distributions\",\n        \"Skywalker: Efficient alias-method-based graph sampling and random walk on gpus\",\n        \"Sampling from the exponential distribution using independent bernoulli variates\",\n        \"Race logic: a hardware acceleration for dynamic programming algorithms\",\n        \"Boosted race trees for low energy classification\",\n        \"A time-domain computing accelerated image recognition processor with efficient time encoding and non-linear logic operation\",\n        \"A 12.08-tops/w all-digital time-domain cnn engine using bi-directional memory delay lines for energy efficient edge computing\",\n        \"A 4-mm 2 180-nm-CMOS 15-giga-cell-updates-per-second dna sequence alignment engine based on asynchronous race conditions\",\n        \"A 9 bit, 1.12 ps resolution 2.5 b/stage pipelined time-to-digital converter in 65 nm CMOS using time-register\",\n        \"What is the effect of importance weighting in deep learning?\",\n        \"Walking on a graph with a magnifying glass: stratified sampling via weighted random walks\",\n        \"Weighted sampling for large-scale boosting.\",\n        \"Temporal state machines: Using temporal memory to stitch time-based graph computations\",\n        \"Energy efficient convolutions with temporal arithmetic\",\n        \"A microarchitecture implementation framework for online learning with temporal neural networks\",\n        \"Hardware-aware in situ learning based on stochastic magnetic tunnel junctions\",\n        \"Cmos-compatible ising and potts annealing using single-photon avalanche diodes\",\n        \"Efficient random number generation techniques for cmos single-photon avalanche diode array exploiting fast time tagging units\",\n        \"Random telegraph noise and resistance switching analysis of oxide based resistive memory\",\n        \"Random telegraph noise in metal-oxide memristors for true random number generators: A materials study\",\n        \"Static timing analysis for self resetting circuits\",\n        \"CMOS schmitt trigger design\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Sampling from exponential distributions in the time domain with superparamagnetic tunnel junctions, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}