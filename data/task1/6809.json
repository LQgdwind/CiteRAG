{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Patching Weak Convolutional Neural Network Models through Modularization and Composition\n\nPaper Abstract: Abstract. Despite great success in many applications, deep neural networks are not always robust in practice. For instance, a convolutional neuron network (CNN) model for classification tasks often performs unsatisfactorily in classifying some particular classes of objects. In this work, we are concerned with patching the weak part of a CNN model instead of improving it through the costly retraining of the entire model. Inspired by the fundamental concepts of modularization and composition in software engineering, we propose a compressed modularization approach, CNNSplitter, which decomposes a strong CNN model for NùëÅN-class classification into NùëÅN smaller CNN modules. Each module is a sub-model containing a part of the convolution kernels of the strong model. To patch a weak CNN model that performs unsatisfactorily on a target class (TC), we compose the weak CNN model with the corresponding module obtained from a strong CNN model. The ability of the weak CNN model to recognize the TC can thus be improved through patching. Moreover, the ability to recognize non-TCs is also improved, as the samples misclassified as TC could be classified as non-TCs correctly. Experimental results with two representative CNNs on three widely-used datasets show that the averaged improvement on the TC in terms of precision and recall are 12.54% and 2.14%, respectively. Moreover, patching improves the accuracy of non-TCs by 1.18%. The results demonstrate that CNNSplitter can patch a weak CNN model through modularization and composition, thus providing a new solution for developing robust CNN models.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Infogan: Interpretable representation learning by information maximizing generative adversarial nets\",\n        \"On the inverse relationship of recall and precision\",\n        \"Complementarity, F-score, and NLP Evaluation\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"Neural architecture search: A survey\",\n        \"fvcore\",\n        \"Deepgini: prioritizing massive tests to enhance the robustness of deep neural networks\",\n        \"Fuzz Testing Based Data Augmentation to Improve Robustness of Deep Neural Networks\",\n        \"Rich feature hierarchies for accurate object detection and semantic segmentation\",\n        \"Deep learning\",\n        \"Search-based software engineering\",\n        \"Deep residual learning for image recognition\",\n        \"A genetic algorithm for function optimization: a Matlab implementation\",\n        \"Neural Network Module Decomposition and Recomposition\",\n        \"Modular networks: Learning to decompose neural computation\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"A simple weight decay can improve generalization\",\n        \"Gradient-based learning applied to document recognition\",\n        \"Pruning Filters for Efficient ConvNets\",\n        \"The value of exact analysis in requirements selection\",\n        \"Hierarchical Representations for Efficient Architecture Search\",\n        \"Fully convolutional networks for semantic segmentation\",\n        \"MODE: automated neural network model debugging via state differential analysis and input selection\",\n        \"Reading digits in natural images with unsupervised feature learning\",\n        \"On decomposing a deep neural network into modules\",\n        \"Decomposing Convolutional Neural Networks into Reusable and Replaceable Modules\",\n        \"A survey on transfer learning\",\n        \"Deepxplore: Automated whitebox testing of deep learning systems\",\n        \"CNNSplitter\",\n        \"What‚Äôs Hidden in a Randomly Weighted Neural Network?\",\n        \"Decompose a DNN model into Modules\",\n        \"Decompose a CNN model into Modules\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Large-scale evolution of image classifiers\",\n        \"A genetic algorithm for flowshop sequencing\",\n        \"Mobilenetv2: Inverted residuals and linear bottlenecks\",\n        \"A survey on image data augmentation for deep learning\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"Dropout: a simple way to prevent neural networks from overfitting\",\n        \"Improving Test Case Generation for REST APIs Through Hierarchical Clustering\",\n        \"Exploiting the potential of standard convolutional autoencoders for image restoration by evolutionary search\",\n        \"On the importance of initialization and momentum in deep learning\",\n        \"Deeptest: Automated testing of deep-neural-network-driven autonomous cars\",\n        \"keras-flops\",\n        \"Prioritizing Test Inputs for Deep Neural Networks via Mutation Analysis\",\n        \"Genetic cnn\",\n        \"Deephunter: a coverage-guided fuzz testing framework for deep neural networks\",\n        \"Convolutional neural networks: an overview and application in radiology\",\n        \"Condconv: Conditionally parameterized convolutions for efficient inference\",\n        \"An overview of overfitting and its solutions\",\n        \"Wide Residual Networks\",\n        \"DeepRoad: GAN-based metamorphic testing and input validation framework for autonomous driving systems\",\n        \"Practical Block-Wise Neural Network Architecture Generation\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Patching Weak Convolutional Neural Network Models through Modularization and Composition, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}