{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Graph Attention Multi-Layer Perceptron\n\nPaper Abstract: Abstract. Graph neural networks (GNNs) have achieved great success in many graph-based applications. However, the enormous size and high sparsity level of graphs hinder their applications under industrial scenarios. Although some scalable GNNs are proposed for large-scale graphs, they adopt a fixed KùêæK-hop neighborhood for each node, thus facing the over-smoothing issue when adopting large propagation depths for nodes within sparse regions. To tackle the above issue, we propose a new GNN architecture ‚Äî Graph Attention Multi-Layer Perceptron (GAMLP), which can capture the underlying correlations between different scales of graph knowledge. We have deployed GAMLP in Tencent with the Angel platform 111https://github.com/Angel-ML/PyTorch-On-Angel, and we further evaluate GAMLP on both real-world datasets and large-scale industrial datasets. Extensive experiments on these 14 graph datasets demonstrate that GAMLP achieves state-of-the-art performance while enjoying high scalability and efficiency. Specifically, it outperforms GAT by 1.3% regarding predictive accuracy on our large-scale Tencent Video dataset while achieving up to 50√ó50\\times training speedup. Besides, it ranks top-1 on both the leaderboards of the largest homogeneous and heterogeneous graph (i.e., ogbn-papers100M and ogbn-mag) of Open Graph Benchmark 222{https://ogb.stanford.edu/docs/leader_nodeprop}.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"FastGCN: Fast Learning with Graph Convolutional Networks via Importance Sampling\",\n        \"Stochastic Training of Graph Convolutional Networks with Variance Reduction\",\n        \"Scalable Graph Neural Networks via Bidirectional Propagation\",\n        \"Cluster-gcn: An efficient algorithm for training deep and large graph convolutional networks\",\n        \"Adaptive Graph Encoder for Attributed Graph Embedding\",\n        \"Fast Graph Representation Learning with PyTorch Geometric\",\n        \"Sign: Scalable inception graph neural networks\",\n        \"Inductive representation learning on large graphs\",\n        \"OGB-LSC: A Large-Scale Challenge for Machine Learning on Graphs\",\n        \"Heterogeneous graph transformer\",\n        \"Combining label propagation and simple models out-performs graph neural networks\",\n        \"Adaptive Sampling Towards Fast Graph Representation Learning\",\n        \"PSGraph: How Tencent trains extremely large-scale graphs with Spark?\",\n        \"ZOOMER: Boosting Retrieval on Web-scale Graphs by Regions of Interest\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Predict then Propagate: Graph Neural Networks meet Personalized PageRank\",\n        \"Deepgcns: Can gcns go as deep as cnns?\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Openbox: A generalized black-box optimization service\",\n        \"Degnn: Improving graph neural networks with graph decomposition\",\n        \"Lasagne: A multi-layer graph convolutional network framework via node-aware deep architecture\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Collective Classification in Network Data\",\n        \"Pitfalls of graph neural network evaluation\",\n        \"Masked label prediction: Unified message passing model for semi-supervised classification\",\n        \"Adaptive propagation graph convolutional network\",\n        \"Scalable and Adaptive Graph Neural Networks with Self-Label-Enhanced training\",\n        \"Knowledge graph completion via complex tensor factorization\",\n        \"Graph attention networks\",\n        \"FlexGraph: a flexible and efficient distributed framework for GNN training\",\n        \"Bag of Tricks for Node Classification with Graph Neural Networks\",\n        \"Simplifying graph convolutional networks\",\n        \"R-GSN: The Relation-based Graph Similar Network for Heterogeneous Graph\",\n        \"Representation learning on graphs with jumping knowledge networks\",\n        \"Scalable graph neural networks for heterogeneous graphs\",\n        \"Hybrid Micro/Macro Level Convolution for Heterogeneous Graph Learning\",\n        \"Heterogeneous Graph Representation Learning with Relation Awareness\",\n        \"Spark: Cluster computing with working sets\",\n        \"GraphSAINT: Graph Sampling Based Inductive Learning Method\",\n        \"ROD: reception-aware online distillation for sparse graphs\",\n        \"Reliable data distillation on graph convolutional network\",\n        \"Pasca: A graph neural architecture search system under the scalable paradigm\",\n        \"Node Dependent Local Smoothing for Scalable Graph Learning\",\n        \"DistDGL: Distributed Graph Neural Network Training for Billion-Scale Graphs\",\n        \"Simple spectral graph convolution\",\n        \"AliGraph: A Comprehensive Graph Neural Network Platform\",\n        \"Learning from labeled and unlabeled data with label propagation\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Graph Attention Multi-Layer Perceptron, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}