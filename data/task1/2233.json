{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Neural-Swarm2: Planning and Control of Heterogeneous Multirotor Swarms using Learned Interactions\n\nPaper Abstract: Abstract We present Neural-Swarm2, a learning-based method for motion planning and control that allows heterogeneous multirotors in a swarm to safely fly in close proximity. Such operation for drones is challenging due to complex aerodynamic interaction forces, such as downwash generated by nearby drones and ground effect. Conventional planning and control methods neglect capturing these interaction forces, resulting in sparse swarm configuration during flight. Our approach combines a physics-based nominal dynamics model with learned Deep Neural Networks (DNNs) with strong Lipschitz properties. We make use of two techniques to accurately predict the aerodynamic interactions between heterogeneous multirotors: i) spectral normalization for stability and generalization guarantees of unseen data and ii) heterogeneous deep sets for supporting any number of heterogeneous neighbors in a permutation-invariant manner without reducing expressiveness. The learned residual dynamics benefit both the proposed interaction-aware multi-robot motion planning and the nonlinear tracking control design because the learned interaction forces reduce the modelling errors. Experimental results demonstrate that Neural-Swarm2 is able to generalize to larger swarms beyond training cases and significantly outperforms a baseline nonlinear tracking controller with up to three times reduction in worst-case tracking errors.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Survey on Aerial Swarm Robotics\",\n        \"Swarm assignment and trajectory optimization using variable-swarm, distributed auction assignment and sequential convex programming\",\n        \"Modeling of aerodynamic disturbances for proximity flight of multirotors\",\n        \"Trajectory Planning for Quadrotor Swarms\",\n        \"Fast and In Sync: Periodic Swarm Patterns for Quadrotors\",\n        \"Trajectory Planning for Heterogeneous Robot Teams\",\n        \"Reciprocal n-Body Collision Avoidance\",\n        \"Deep Sets\",\n        \"Spectrally-normalized margin bounds for neural networks\",\n        \"Neural Lander: Stable Drone Landing Control Using Learned Dynamics\",\n        \"Neural-Swarm: Decentralized Close-Proximity Multirotor Control Using Learned Interactions\",\n        \"The effect of ground on a helicopter rotor in forward flight\",\n        \"An Empirical Model of Rotorcrafy UAV Downwash for Disturbance Localization and Avoidance\",\n        \"Analysis of Ground Effect for Small-Scale UAVs in Forward Flight\",\n        \"Multirotor Drone Aerodynamic Interaction Investigation\",\n        \"Meta-learning-based robust adaptive flight control under uncertain wind conditions\",\n        \"Smooth Imitation Learning for Online Sequence Prediction\",\n        \"Episodic Learning with Control Lyapunov Functions for Uncertain Robotic Systems\",\n        \"Control Regularization for Reduced Variance Reinforcement Learning\",\n        \"Learn Fast, Forget Slow: Safe Predictive Learning Control for Systems With Unknown and Changing Dynamics Performing Repetitive Tasks\",\n        \"Data-efficient control policy search using residual dynamics learning\",\n        \"Residual Reinforcement Learning for Robot Control\",\n        \"The graph neural network model\",\n        \"Learning decentralized controllers for robot swarms with graph neural networks\",\n        \"Heterogeneous graph neural network\",\n        \"GLAS: Global-to-Local Safe Autonomy Synthesis for Multi-Robot Motion Planning With End-to-End Learning\",\n        \"Model predictive control of swarms of spacecraft using sequential convex programming\",\n        \"Mixed-integer quadratic program trajectory generation for heterogeneous quadrotor teams\",\n        \"Approximation with artificial neural networks\",\n        \"Robust regression for safe exploration in control\",\n        \"Trajectory Generation for Multiagent Point-To-Point Transitions via Distributed Model Predictive Control\",\n        \"Prioritized Planning Algorithms for Trajectory Coordination of Multiple Mobile Robots\",\n        \"Optimal Guidance and Control with Nonlinear Dynamics Using Sequential Convex Programming\",\n        \"Local Convergence of Sequential Convex Programming for Nonconvex Optimization\",\n        \"Asymptotically Optimal Planning by Feasible Kinodynamic Planning in a State-Cost Space\",\n        \"Multidimensional Binary Search Trees Used for Associative Searching\",\n        \"Kinodynamic RRTs with Fixed Time Step and Best-Input Extension Are Not Probabilistically Complete\",\n        \"Sampling-Based Algorithms for Optimal Motion Planning\",\n        \"PyTorch: An Imperative Style, High-Performance Deep Learning Library\",\n        \"Chance-constrained trajectory optimization for safe exploration and learning of nonlinear systems\",\n        \"Nonlinear attitude control of spacecraft with a large captured object\",\n        \"Nonlinear control of autonomous flying cars with wings and distributed electric propulsion\",\n        \"Numerical Predictive Control for Delay Compensation\",\n        \"Crazyswarm: A large nano-quadcopter swarm\",\n        \"Crazyflie 2.0 Thrust Investigation\",\n        \"System Identification of the Crazyflie 2.0 Nano Quadrocopter\",\n        \"Thrust Mixing, Saturation, and Body-Rate Control for Accurate Aggressive Quadrotor Flight\",\n        \"Real-time obstacle avoidance for manipulators and mobile robots\",\n        \"CVXPY: A Python-embedded modeling language for convex optimization\",\n        \"Gurobi Optimizer Reference Manual\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Neural-Swarm2: Planning and Control of Heterogeneous Multirotor Swarms using Learned Interactions, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}