{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Hyper Strategy Logic\n\nPaper Abstract: Abstract. Strategy logic (SL) is a powerful temporal logic that enables strategic reasoning in multi-agent systems. SL supports explicit (first-order) quantification over strategies and provides a logical framework to express many important properties such as Nash equilibria, dominant strategies, etc. While in SL the same strategy can be used in multiple strategy profiles, each such profile is evaluated w.r.t. a path-property, i.e., a property that considers the single path resulting from a particular strategic interaction. In this paper, we present Hyper Strategy Logic (HyperSL), a strategy logic where the outcome of multiple strategy profiles can be compared w.r.t. a hyperproperty, i.e., a property that relates multiple paths. We show that HyperSL can capture important properties that cannot be expressed in SL, including non-interference, quantitative Nash equilibria, optimal adversarial planning, and reasoning under imperfect information. On the algorithmic side, we identify an expressive fragment of HyperSL with decidable model checking and present a model-checking algorithm. We contribute a prototype implementation of our algorithm and report on encouraging experimental results.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Good-Enough Synthesis\",\n        \"Alternating-time temporal logic\",\n        \"Best-Effort Synthesis: Doing Your Best Is Not Harder Than Giving Up\",\n        \"Probabilistic Strategy Logic\",\n        \"An Abstraction-Refinement Framework for Multi-Agent Systems\",\n        \"Scalable Verification of Strategy Logic through Three-Valued Abstraction\",\n        \"Reasoning About Agents That May Know Other Agents’ Strategies\",\n        \"Agent-based Abstractions for Verifying Alternating-time Temporal Logic with Imperfect Information\",\n        \"An Abstraction-Based Method for Verifying Strategic Properties in Multi-Agent Systems with Imperfect Information\",\n        \"Verification of Multi-agent Systems with Imperfect Information and Public Actions\",\n        \"Decidability Results for ATL* with Imperfect Information and Perfect Recall\",\n        \"Strategy logic with imperfect information\",\n        \"A Temporal Logic for Strategic Hyperproperties\",\n        \"Software Verification of Hyperproperties Beyond k-Safety\",\n        \"AutoHyper: Explicit-State Model Checking for HyperLTL\",\n        \"HyperATL*: A Logic for Hyperproperties in Multi-Agent Systems\",\n        \"On Alternating-Time Temporal Logic, Hyperproperties, and Strategy Sharing\",\n        \"Second-Order Hyperproperties\",\n        \"Reasoning about Quality and Fuzziness of Strategic Behaviours\",\n        \"Unifying Hyper and Epistemic Temporal Logics\",\n        \"Comparing variants of strategic ability: how uncertainty and memory influence general properties of games\",\n        \"Verifying and Synthesising Multi-Agent Systems against One-Goal Strategy Logic Specifications\",\n        \"Strategy logic\",\n        \"Continuity and robustness of programs\",\n        \"Temporal Logics for Hyperproperties\",\n        \"Hyperproperties\",\n        \"The Hierarchy of Hyperlogics\",\n        \"Model-checking ATL under Imperfect Information and Perfect Recall Semantics is Undecidable\",\n        \"From Spot 2.0 to Spot 2.10: What’s New?\",\n        \"”Sometimes” and ”Not Never” revisited: on branching versus linear time temporal logic\",\n        \"Synthesizing Reactive Systems from Hyperproperties\",\n        \"Algorithms for Model Checking HyperLTL and HyperCTL*\",\n        \"The First-Order Logic of Hyperproperties\",\n        \"Propositional Dynamic Logic for Hyperproperties\",\n        \"Dealing with imperfect information in Strategy Logic\",\n        \"Augmenting ATL with strategy contexts\",\n        \"ATLsc with partial observation\",\n        \"MCMAS: A Model Checker for the Verification of Multi-Agent Systems\",\n        \"Concurrent Multi-Player Parity Games\",\n        \"Reasoning about Knowledge and Strategies under Hierarchical Information\",\n        \"Noninterference and the composability of security properties\",\n        \"A general theory of composition for trace sets closed under selective interleaving functions\",\n        \"Alternating Finite Automata on omega-Words\",\n        \"Reasoning About Strategies: On the Model-Checking Problem\",\n        \"On the Boundary of Behavioral Strategies\",\n        \"A Behavioral Hierarchy of Strategy Logic\",\n        \"Equilibrium points in n-person games\",\n        \"Game Logic - An Overview\",\n        \"From Nondeterministic Büchi and Streett Automata to Deterministic Parity Automata\",\n        \"Confidentiality for Multithreaded Programs via Bisimulation\",\n        \"Verification of initial-state opacity in security applications of discrete event systems\",\n        \"Alternating Automata and Program Verification\",\n        \"Information Flow in Nondeterministic Systems\",\n        \"Opacity of Nondeterministic Transition Systems: A (Bi)Simulation Relation Approach\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Hyper Strategy Logic, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}