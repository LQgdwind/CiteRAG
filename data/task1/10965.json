{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Personalized Negative Reservoir for Incremental Learning in Recommender Systems\n\nPaper Abstract: Abstract. Recommender systems have become an integral part of online platforms. Every day the volume of training data is expanding and the number of user interactions is constantly increasing. The exploration of larger and more expressive models has become a necessary pursuit to improve user experience. However, this progression carries with it an increased computational burden. In commercial settings, once a recommendation system model has been trained and deployed it typically needs to be updated frequently as new client data arrive. Cumulatively, the mounting volume of data is guaranteed to eventually make full batch retraining of the model from scratch computationally infeasible. Naively fine-tuning solely on the new data runs into the well-documented problem of catastrophic forgetting. Despite the fact that negative sampling is a crucial part of training with implicit feedback, no specialized technique exists that is tailored to the incremental learning framework. In this work, we take the first step to propose, a personalized negative reservoir strategy which is used to obtain negative samples for the standard triplet loss. This technique balances alleviation of forgetting with plasticity by encouraging the model to remember stable user preferences and selectively forget when user interests change. We derive the mathematical formulation of a negative sampler to populate and update the reservoir. We integrate our design in three SOTA and commonly used incremental recommendation models. We show that these concrete realizations of our negative reservoir framework achieve state-of-the-art results in standard benchmarks, on multiple standard top-k evaluation metrics.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Structure Aware Experience Replay for Incremental Learning in Graph-based Recommender Systems\",\n        \"Structural Deep Clustering Network\",\n        \"KBGAN: Adversarial Learning for Knowledge Graph Embeddings\",\n        \"Word2vec applied to recommendation: Hyperparameters matter\",\n        \"End-to-End Incremental Learning\",\n        \"Wide & Deep Learning for Recommender Systems\",\n        \"Deep neural networks for youtube recommendations\",\n        \"Continuous-time sequential recommendation with temporal graph collaborative transformer\",\n        \"Deepfm: a factorization-machine based neural network for ctr prediction\",\n        \"LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation\",\n        \"A Survey on User Behavior Modeling in Recommender Systems\",\n        \"Recurrent neural networks with top-k gains for session-based recommendations\",\n        \"Distilling the Knowledge in a Neural Network\",\n        \"Algorithm 65: Find\",\n        \"Self-attentive sequential recommendation\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Semi-Supervised Classification with Graph Convolutional Networks\",\n        \"Overcoming catastrophic forgetting in neural networks\",\n        \"On Information and Sufficiency\",\n        \"GDumb: A simple approach that questions our progress in continual learning\",\n        \"iCarl: Incremental classifier and representation learning\",\n        \"Improving pairwise learning for item recommendation from implicit feedback\",\n        \"BPR: Bayesian Personalized Ranking from Implicit Feedback\",\n        \"Incremental Learning of Object Detectors Without Catastrophic Forgetting\",\n        \"Multi-Graph Convolution Collaborative Filtering\",\n        \"Graph Convolutional Matrix Completion\",\n        \"Attributed Graph Clustering: A Deep Attentional Embedding Approach\",\n        \"Streaming Graph Neural Networks via Continual Learning\",\n        \"Irgan: A minimax game for unifying generative and discriminative information retrieval models\",\n        \"Incorporating gan for negative sampling in knowledge representation learning\",\n        \"Graph learning based recommender systems: A review\",\n        \"Neural Graph Collaborative Filtering\",\n        \"Graph Structure Aware Contrastive Knowledge Distillation for Incremental Learning in Recommender Systems\",\n        \"Structure Aware Incremental Learning with Personalized Imitation Weights for Recommender Systems\",\n        \"Large scale image annotation: learning to rank with joint word-image embeddings\",\n        \"GraphSAIL: Graph Structure Aware Incremental Learning for Recommender Systems\",\n        \"Distilling Knowledge from Graph Convolutional Networks\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Hierarchical Graph Representation Learning with Differentiable Pooling\",\n        \"A Biased Sampling Method for Imbalanced Personalized Ranking\",\n        \"Optimizing top-n collaborative filtering via dynamic negative item sampling\",\n        \"NSCaching: simple and efficient negative sampling for knowledge graph embedding\",\n        \"Improving latent factor models via personalized feature projection for one class recommendation\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in Personalized Negative Reservoir for Incremental Learning in Recommender Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}