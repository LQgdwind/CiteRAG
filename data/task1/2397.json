{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Fine-Grained Complexity of Regular Path Queries\n\nPaper Abstract: Abstract. A regular path query (RPQ) is a regular expression qùëûq that returns all node pairs (u,v)ùë¢ùë£(u,v) from a graph database that are connected by an arbitrary path labelled with a word from L‚Äã(q)ùêøùëûL(q). The obvious algorithmic approach to RPQ-evaluation (called PG-approach), i. e., constructing the product graph between an NFA for qùëûq and the graph database, is appealing due to its simplicity and also leads to efficient algorithms. However, it is unclear whether the PG-approach is optimal. We address this question by thoroughly investigating which upper complexity bounds can be achieved by the PG-approach, and we complement these with conditional lower bounds (in the sense of the fine-grained complexity framework). A special focus is put on enumeration and delay bounds, as well as the data complexity perspective. A main insight is that we can achieve optimal (or near optimal) algorithms with the PG-approach, but the delay for enumeration is rather high (linear in the database). We explore three successful approaches towards enumeration with sub-linear delay: super-linear preprocessing, approximations of the solution sets, and restricted classes of RPQs.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Foundations of modern query languages for graph databases\",\n        \"If the current clique algorithms are optimal, so is valiant‚Äôs parser\",\n        \"Faster join-projects and sparse matrix multiplications\",\n        \"Popular conjectures imply strong lower bounds for dynamic problems\",\n        \"Matching triangles and basing hardness on an extremely popular conjecture\",\n        \"Querying graph databases\",\n        \"A trichotomy for regular simple path queries on graphs\",\n        \"Answering conjunctive regular path queries over guarded existential rules\",\n        \"On acyclic conjunctive queries and constant delay enumeration\",\n        \"Boundedness of conjunctive regular path queries\",\n        \"Constant delay enumeration for conjunctive queries: a tutorial\",\n        \"Which regular expression patterns are hard to match?\",\n        \"Answering conjunctive queries under updates\",\n        \"Expressive languages for path queries over graph-structured data\",\n        \"An analytical study of large SPARQL query logs\",\n        \"Navigating the maze of wikidata query logs\",\n        \"Regular path queries in lightweight description logics: Complexity and algorithms\",\n        \"De la pertinence de l‚Äô√©num√©ration : complexit√© en logiques propositionnelle et du premier ordre. (The relevance of the list: propositional logic and complexity of the first order)\",\n        \"Why walking the dog takes time: Frechet distance has no strongly subquadratic algorithms unless SETH fails\",\n        \"Fine-grained complexity theory (tutorial)\",\n        \"On the complexity of evaluating regular path queries over linear existential rules\",\n        \"Reasoning on regular path queries\",\n        \"Shortest distances as enumeration problem\",\n        \"A graphical query language supporting recursion\",\n        \"Fine-grained complexity of regular path queries\",\n        \"On the complexity of string matching for graphs\",\n        \"Graphs cannot be indexed in polynomial time for sub-quadratic time string matching, unless SETH fails\",\n        \"Containment of simple conjunctive regular path queries\",\n        \"Containment of UC2RPQ: the hard and easy cases\",\n        \"Expressiveness and static analysis of extended conjunctive regular path queries\",\n        \"Powers of tensors and fast matrix multiplication\",\n        \"The first order truth behind undecidability of regular path queries determinacy\",\n        \"Unifying and strengthening hardness for dynamic problems via the online matrix-vector multiplication conjecture\",\n        \"Conditional hardness for sensitivity problems\",\n        \"The complexity of regular expressions and property paths in SPARQL\",\n        \"Querying graphs with data\",\n        \"A trichotomy for regular trail queries\",\n        \"Algorithms from P to NP (Vol. 1): Design and Efficiency\",\n        \"Evaluation and enumeration problems for regular path queries\",\n        \"Bridging theory and practice with query log analysis\",\n        \"Dichotomies for evaluating simple regular path queries\",\n        \"Efficient determination of the transitive closure of a directed graph\",\n        \"Finding regular simple paths in graph databases\",\n        \"The homomorphism problem for regular graph patterns\",\n        \"Regular queries on graph databases\",\n        \"Constant delay enumeration for conjunctive queries\",\n        \"Depth-first search and linear graph algorithms\",\n        \"A new algorithm for optimal constraint satisfaction and its implications\",\n        \"A new algorithm for optimal 2-constraint satisfaction and its implications\",\n        \"Algorithms column: An overview of the recent progress on matrix multiplication\",\n        \"Multiplying matrices faster than coppersmith-winograd\",\n        \"Hardness of easy problems: Basing hardness on popular conjectures such as the strong exponential time hypothesis (invited talk)\",\n        \"Some open problems in fine-grained complexity\",\n        \"Query languages for graph databases\",\n        \"Subcubic equivalences between path, matrix, and triangle problems\",\n        \"Fast sparse matrix multiplication\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Fine-Grained Complexity of Regular Path Queries, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}