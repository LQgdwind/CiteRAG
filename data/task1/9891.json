{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DiffusionEngine: Diffusion Model is Scalable Data Engine for Object Detection Project Page: mettyz.github.io/DiffusionEngine\n\nPaper Abstract: Abstract Data is the cornerstone of deep learning. This paper reveals that the recently-developed Diffusion Model is a scalable data engine for object detection. Existing methods for scaling up detection-oriented data often require manual collection or generative models to obtain target images, followed by data augmentation and labeling to produce training pairs, which are costly, complex, or lacking diversity. To address these issues, we present DiffusionEngine (DE), a data scaling-up engine that provides high-quality detection-oriented training pairs in a single stage. DE consists of a pre-trained diffusion model and an effective Detection-Adapter, contributing to generating scalable, diverse and generalizable detection data in a plug-and-play manner. Detection-Adapter is learned to align the implicit semantic and location knowledge in off-the-shelf diffusion models with detection-aware signals to make better bounding-box predictions. Additionally, we contribute two datasets, i.e., COCO-DE and VOC-DE, to scale up existing detection benchmarks for facilitating follow-up research. Extensive experiments demonstrate that data scaling-up via DE can achieve significant improvements in diverse scenarios, such as various detection algorithms, self-supervised pre-training, data-sparse, label-scarce, cross-domain, and semi-supervised learning. For example, when using DE with a DINO-based adapter to scaling-up data, mAP is improved by 3.1% on COCO, 7.6% on VOC and 11.5% on Clipart.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Cascade R-CNN: high quality object detection and instance segmentation\",\n        \"End-to-end object detection with transformers\",\n        \"MMDetection: Open MMLab Detection Toolbox and Benchmark\",\n        \"Scale-aware automatic augmentation for object detection\",\n        \"Generative adversarial networks: An overview\",\n        \"Dall-e for detection: Language-driven context image synthesis for object detection\",\n        \"Simple copy-paste is a strong data augmentation method for instance segmentation\",\n        \"Fast r-cnn\",\n        \"Bootstrap Your Own Latent - A New Approach to Self-Supervised Learning\",\n        \"Mask r-cnn\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Denoising diffusion probabilistic models\",\n        \"Cascaded Diffusion Models for High Fidelity Image Generation\",\n        \"Cross-domain weakly-supervised object detection through progressive domain adaptation\",\n        \"Glow: Generative flow with invertible 1x1 convolutions\",\n        \"Auto-encoding variational bayes\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Gligen: Open-set grounded text-to-image generation\",\n        \"Cross-Domain Adaptive Teacher for Object Detection\",\n        \"Focal Loss for Dense Object Detection\",\n        \"Microsoft coco: Common objects in context\",\n        \"Ssd: Single shot multibox detector\",\n        \"Swin Transformer V2: Scaling Up Capacity and Resolution\",\n        \"Decoupled Weight Decay Regularization\",\n        \"DPM-Solver++: Fast Solver for Guided Sampling of Diffusion Probabilistic Models\",\n        \"Improved denoising diffusion probabilistic models\",\n        \"A threshold selection method from gray-level histograms\",\n        \"Hierarchical text-conditional image generation with clip latents\",\n        \"You only look once: Unified, real-time object detection\",\n        \"Faster r-cnn: Towards real-time object detection with region proposal networks\",\n        \"High-resolution image synthesis with latent diffusion models\",\n        \"Palette: Image-to-image diffusion models\",\n        \"Photorealistic text-to-image diffusion models with deep language understanding\",\n        \"Deep Unsupervised Learning using Nonequilibrium Thermodynamics\",\n        \"Fcos: Fully convolutional one-stage object detection\",\n        \"Attention is all you need\",\n        \"Data augmentation for object detection via progressive and selective instance-switching\",\n        \"Detectron2\",\n        \"Reco: Region-controlled text-to-image generation\",\n        \"Dino: Detr with improved denoising anchor boxes for end-to-end object detection\",\n        \"X-Paste: Revisit Copy-Paste at Scale with CLIP and StableDiffusion\",\n        \"Probabilistic two-stage detection\",\n        \"Deformable DETR: Deformable Transformers for End-to-End Object Detection\",\n        \"Learning data augmentation strategies for object detection\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in DiffusionEngine: Diffusion Model is Scalable Data Engine for Object Detection Project Page: mettyz.github.io/DiffusionEngine, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}