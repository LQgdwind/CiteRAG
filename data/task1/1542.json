{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accelerating Graph Sampling for Graph Machine Learning using GPUs\n\nPaper Abstract: Abstract. Representation learning algorithms automatically learn the features of data. Several representation learning algorithms for graph data, such as DeepWalk, node2vec, and GraphSAGE, sample the graph to produce mini-batches that are suitable for training a DNN. However, sampling time can be a significant fraction of training time, and existing systems do not efficiently parallelize sampling. Sampling is an “embarrassingly parallel” problem and may appear to lend itself to GPU acceleration, but the irregularity of graphs makes it hard to use GPU resources effectively. This paper presents NextDoor, a system designed to effectively perform graph sampling on GPUs. NextDoor employs a new approach to graph sampling that we call transit-parallelism, which allows load balancing and caching of edges. NextDoor provides end-users with a high-level abstraction for writing a variety of graph sampling algorithms. We implement several graph sampling applications, and show that NextDoor runs them orders of magnitude faster than existing systems.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"NVIDIA CUB\",\n        \"Large Scale Graph Mining with G-Miner\",\n        \"FastGCN: Fast Learning with Graph Convolutional Networks via Importance Sampling\",\n        \"PowerLyra: Differentiated Graph Computation and Partitioning on Skewed Graphs\",\n        \"Pangolin: An Efficient and Flexible Graph Mining System on CPU and GPU\",\n        \"Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks\",\n        \"Minimal Variance Sampling with Provable Guarantees for Fast Training of Graph Neural Networks\",\n        \"Fractal: A General-Purpose Graph Pattern Mining System\",\n        \"MapGraph: A High Level API for Fast Development of High Performance Graph Analytics on GPUs\",\n        \"Large-Scale Learnable Graph Convolutional Networks\",\n        \"PowerGraph: Distributed Graph-Parallel Computation on Natural Graphs\",\n        \"Node2vec: Scalable Feature Learning for Networks\",\n        \"Inductive Representation Learning on Large Graphs\",\n        \"Topic-Sensitive PageRank\",\n        \"ASAP: Fast, Approximate Graph Pattern Mining at Scale\",\n        \"Improving the accuracy, scalability, and performance of graph neural networks with roc\",\n        \"CuSha: Vertex-Centric Graph Processing on GPUs\",\n        \"SNAP Datasets: Stanford Large Network Dataset Collection\",\n        \"SIMD-X: Programming and Processing of Graph Algorithms on GPUs\",\n        \"GraphLab: A New Framework for Parallel Machine Learning\",\n        \"Neugraph: parallel deep neural network computation on large graphs\",\n        \"Pregel: A System for Large-Scale Graph Processing\",\n        \"AutoMine: Harmonizing High-Level Abstraction and High Performance for Graph Mining\",\n        \"Efficient estimation of word representations in vector space\",\n        \"A Lightweight Infrastructure for Graph Analytics\",\n        \"Tigr: Transforming Irregular Graphs for GPU-Friendly Graph Processing\",\n        \"The PageRank Citation Ranking: Bringing Order to the Web\",\n        \"DeepWalk: Online Learning of Social Representations\",\n        \"NScale: neighborhood-centric large-scale graph analytics in the cloud\",\n        \"Estimating and Sampling Graphs with Multidimensional Random Walks\",\n        \"Subway: Minimizing Data Transfer during out-of-GPU-Memory Graph Processing\",\n        \"Graph processing on GPUs: A survey\",\n        \"Ligra: A Lightweight Graph Processing Framework for Shared Memory\",\n        \"A Memory Bandwidth-Efficient Hybrid Radix Sort on GPUs\",\n        \"Arabesque: A System for Distributed Graph Mining\",\n        \"RStream: Marrying Relational Algebra with Streaming for Efficient Graph Mining on a Single Machine\",\n        \"Gunrock: A High-Performance Graph Processing Library on the GPU\",\n        \"KnightKing: A Fast Distributed Graph Random Walk Engine\",\n        \"Graph Convolutional Neural Networks for Web-Scale Recommender Systems\",\n        \"GraphSAINT: Graph Sampling Based Inductive Learning Method\",\n        \"Medusa: Simplified Graph Processing on GPUs\",\n        \"Gemini: A computation-centric distributed graph processing system\",\n        \"SympleGraph: Distributed Graph Processing with Precise Loop-Carried Dependency Guarantee\",\n        \"Layer-Dependent Importance Sampling for Training Deep and Large Graph Convolutional Networks\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in Accelerating Graph Sampling for Graph Machine Learning using GPUs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}