{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning through structure: towards deep neuromorphic knowledge graph embeddings ∗These authors contributed equally to this work.\n\nPaper Abstract: Abstract Computing latent representations for graph-structured data is an ubiquitous learning task in many industrial and academic applications ranging from molecule synthetization to social network analysis and recommender systems. Knowledge graphs are among the most popular and widely used data representations related to the Semantic Web. Next to structuring factual knowledge in a machine-readable format, knowledge graphs serve as the backbone of many artificial intelligence applications and allow the ingestion of context information into various learning algorithms. Graph neural networks attempt to encode graph structures in low-dimensional vector spaces via a message passing heuristic between neighboring nodes. Over the recent years, a multitude of different graph neural network architectures demonstrated ground-breaking performances in many learning tasks. In this work, we propose a strategy to map deep graph learning architectures for knowledge graph reasoning to neuromorphic architectures. Based on the insight that randomly initialized and untrained (i.e., frozen) graph neural networks are able to preserve local graph structures, we compose a frozen neural network with shallow knowledge graph embedding models. We experimentally show that already on conventional computing hardware, this leads to a significant speedup and memory reduction while maintaining a competitive performance level. Moreover, we extend the frozen architecture to spiking neural networks, introducing a novel, event-based and highly sparse knowledge graph embedding algorithm that is suitable for implementation in neuromorphic hardware.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep learning\",\n        \"Learning representations by back-propagating errors\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Mastering the game of go without human knowledge\",\n        \"Language models are few-shot learners\",\n        \"The “echo state” approach to analysing and training recurrent neural networks\",\n        \"The” liquid computer”: A novel strategy for real-time computing on time series\",\n        \"On random weights and unsupervised feature learning\",\n        \"Dendritic cortical microcircuits approximate the backpropagation algorithm\",\n        \"Towards deep learning with segregated dendrites\",\n        \"Frozen algorithms: how the brain’s wiring facilitates learning\",\n        \"How transferable are features in deep neural networks?\",\n        \"SemifreddoNets: Partially Frozen Neural Networks for Efficient Computer Vision Systems\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Large-scale neuromorphic spiking array processors: A quest to mimic the brain\",\n        \"Translating embeddings for modeling multi-relational data\",\n        \"A three-way model for collective learning on multi-relational data.\",\n        \"Embedding entities and relations for learning and inference in knowledge bases\",\n        \"Complex embeddings for simple link prediction\",\n        \"Composition-based multi-relational graph convolutional networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Gnnexplainer: Generating explanations for graph neural networks\",\n        \"CF-GNNExplainer: Counterfactual Explanations for Graph Neural Networks\",\n        \"Truenorth: Design and tool flow of a 65 mw 1 million neuron programmable neurosynaptic chip\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"Demonstrating advantages of neuromorphic computation: a pilot study\",\n        \"Versatile emulation of spiking neural networks on an accelerated neuromorphic substrate\",\n        \"Ultra-low power silicon neuron circuit for extreme-edge neuromorphic intelligence\",\n        \"SpiNNaker 2: A 10 Million Core Processor System for Brain Simulation and Machine Learning\",\n        \"Fast and deep: energy-efficient neuromorphic learning with first-spike times\",\n        \"Semantic-guided feature selection for industrial automation systems\",\n        \"Event-enhanced learning for KG completion\",\n        \"Use Cases of the Industrial Knowledge Graph at Siemens.\",\n        \"Configuration of industrial automation solutions using multi-relational recommender systems\",\n        \"Machine learning on knowledge graphs for context-aware security monitoring\",\n        \"SpikE: spike-based embeddings for multi-relational graph data\",\n        \"A review of relational machine learning for knowledge graphs\",\n        \"The graph neural network model\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Person re-identification with deep similarity-guided graph neural network\",\n        \"Graph convolutional networks for text classification\",\n        \"GRAPH CONVOLUTIONAL NETWORKS\",\n        \"Learning structured embeddings of knowledge bases\",\n        \"Spyketorch: Efficient simulation of convolutional spiking neural networks with at most one spike per neuron\",\n        \"Event-based backpropagation can compute exact gradients for spiking neural networks\",\n        \"Sparse Spiking Gradient Descent\",\n        \"How Can We Be So Slow? Realizing the Performance Benefits of Sparse Networks\",\n        \"Structural semantic relatedness: a knowledge-based method to named entity disambiguation\",\n        \"Improving visual relationship detection using semantic modeling of scene descriptions\",\n        \"Scene Graph Reasoning for Visual Question Answering\",\n        \"Neural Multi-Hop Reasoning With Logical Rules on Biomedical Knowledge Graphs\",\n        \"A recommender system for complex real-world applications with nonlinear dependencies and knowledge graph context\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"Adam: A method for stochastic optimization\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Learning through structure: towards deep neuromorphic knowledge graph embeddings ∗These authors contributed equally to this work., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}