{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Dynamic Neighborhood Construction for Structured Large Discrete Action Spaces\n\nPaper Abstract: Abstract Large discrete action spaces (LDAS) remain a central challenge in reinforcement learning. Existing solution approaches can handle unstructured LDAS with up to a few million actions. However, many real-world applications in logistics, production, and transportation systems have combinatorial action spaces, whose size grows well beyond millions of actions, even on small instances. Fortunately, such action spaces exhibit structure, e.g., equally spaced discrete resource units. With this work, we focus on handling structured LDAS (SLDAS) with sizes that cannot be handled by current benchmarks: we propose Dynamic Neighborhood Construction (DNC), a novel exploitation paradigm for SLDAS. We present a scalable neighborhood exploration heuristic that utilizes this paradigm and efficiently explores the discrete neighborhood around the continuous proxy action in structured action spaces with up to 1073superscript107310^{73} actions. We demonstrate the performance of our method by benchmarking it against three state-of-the-art approaches designed for large discrete action spaces across three distinct environments. Our results show that DNC matches or outperforms state-of-the-art approaches while being computationally more efficient. Furthermore, our method scales to action spaces that so far remained computationally intractable for existing methodologies.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Simulated annealing\",\n        \"Deep reinforcement learning for inventory control: A roadmap\",\n        \"A unified view of piecewise linear neural network verification\",\n        \"Learning action representations for reinforcement learning\",\n        \"Lifelong learning with a changing action set\",\n        \"Online symbolic gradient-based optimization for factored action mdps\",\n        \"Lifted stochastic planning, belief propagation and marginal map\",\n        \"Fast reinforcement learning with large action sets using error-correcting output codes for MDP factorization\",\n        \"Deep reinforcement learning in large discrete action spaces\",\n        \"Challenges of real-world reinforcement learning: definitions, benchmarks and analysis\",\n        \"Hybrid multi-agent deep reinforcement learning for autonomous mobility on demand systems\",\n        \"Local branching\",\n        \"Learning to navigate the synthetically accessible chemical space using reinforcement learning\",\n        \"Learning pseudometric-based action representations for offline reinforcement learning\",\n        \"Deep reinforcement learning with a natural language action space\",\n        \"Generalization to new actions in reinforcement learning\",\n        \"Know your action set: Learning action relations for reinforcement learning\",\n        \"Learning collaborative policies to solve np-hard routing problems\",\n        \"Algorithms for Optimization\",\n        \"Value function approximation in reinforcement learning using the fourier basis\",\n        \"A deep reinforcement learning approach for traffic signal control optimization\",\n        \"Reinforcement learning in factored action spaces using tensor decompositions\",\n        \"Playing atari with deep reinforcement learning\",\n        \"Scalable nearest neighbor algorithms for high dimensional data\",\n        \"Continuous-discrete reinforcement learning for hybrid control in robotics\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Generalized value functions for large action sets\",\n        \"Facmac: Factored multi-agent centralised policy gradients\",\n        \"Jointly-learned state-action embedding for efficient reinforcement learning\",\n        \"Reinforcement learning with factored states and actions\",\n        \"Proximal policy optimization algorithms\",\n        \"Learning to factor policies and action-value functions: Factored action space representations for deep reinforcement learning\",\n        \"Deterministic policy gradient algorithms\",\n        \"Reinforcement Learning: An Introduction\",\n        \"Leveraging factored action spaces for efficient offline reinforcement learning in healthcare\",\n        \"Action branching architectures for deep reinforcement learning\",\n        \"The natural language of actions\",\n        \"Motor primitive discovery\",\n        \"Reinforcement learning in continuous action spaces\",\n        \"Deep reinforcement learning in linear discrete action spaces\",\n        \"The use of continuous action representations to scale deep reinforcement learning for inventory control\",\n        \"Bic-ddpg: Bidirectionally-coordinated nets for deep multi-agent reinforcement learning\",\n        \"Network slice reconfiguration by exploiting deep reinforcement learning with large action space\",\n        \"Dynamics-aware embeddings\",\n        \"A spatial pyramid pooling-based deep reinforcement learning model for dynamic job-shop scheduling problem\",\n        \"Two-sided deep reinforcement learning for dynamic mobility-on-demand management with mixed autonomy\",\n        \"Learn what not to learn: Action elimination with deep reinforcement learning\",\n        \"Learning to dispatch for job shop scheduling via deep reinforcement learning\",\n        \"Generating adjacency-constrained subgoals in hierarchical reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Dynamic Neighborhood Construction for Structured Large Discrete Action Spaces, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}