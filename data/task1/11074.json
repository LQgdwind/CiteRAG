{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accelerating ViT Inference on FPGA through Static and Dynamic Pruning\n\nPaper Abstract: Abstract Vision Transformers (ViTs) have achieved state-of-the-art accuracy on various computer vision tasks. However, their high computational complexity prevents them from being applied to many real-world applications. Weight and token pruning are two well-known methods for reducing complexity–weight pruning reduces the model size and associated computational demands, while token pruning further dynamically reduces the computation based on the input. Combining these two techniques should significantly reduce computation complexity and model size; however, naively integrating them results in irregular computation patterns, leading to significant accuracy drops and difficulties in hardware acceleration. Addressing the above challenges, we propose a comprehensive algorithm-hardware codesign for accelerating ViT on FPGA through simultaneous pruning–combining static weight pruning and dynamic token pruning. For algorithm design, we systematically combine a hardware-aware structured block-pruning method for pruning model parameters and a dynamic token pruning method for removing unimportant token vectors. Moreover, we design a novel training algorithm to recover the model’s accuracy. For hardware design, we develop a novel hardware accelerator for executing the pruned model. The proposed hardware design employs multi-level parallelism with load balancing strategy to efficiently deal with the irregular computation pattern led by the two pruning approaches. Moreover, we develop an efficient hardware mechanism for efficiently executing the on-the-fly token pruning. We apply our codesign approach to the widely used DeiT-Small model. We implement the proposed accelerator on a state-of-the-art FPGA board. The evaluation results show that the proposed algorithm can reduce computation complexity by up to 3.4×3.4\\times with ≈3%absentpercent3\\approx 3\\% accuracy drop and a model compression ratio of up to 1.6×1.6\\times. Compared with state-of-the-art implementation on CPU, GPU, and FPGA, our codesign on FPGA achieves average latency reduction of 12.8×12.8\\times, 3.2×3.2\\times, 0.7−2.1×0.7-2.1\\times respectively.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Transformer in transformer\",\n        \"Generative pretraining from pixels\",\n        \"An empirical study of training self-supervised vision transformers\",\n        \"End-to-end object detection with transformers\",\n        \"Max-deeplab: End-to-end panoptic segmentation with mask transformers\",\n        \"Transgan: Two pure transformers can make one strong gan, and that can scale up\",\n        \"Zero-shot text-to-image generation\",\n        \"Transformers in vision: A survey\",\n        \"How do vision transformers work?\",\n        \"Token propagation controller for efficient vision transformer\",\n        \"Attention is all you need\",\n        \"Sanity checks for lottery tickets: Does your winning ticket really win the jackpot?\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Lottery ticket preserves weight correlation: Is it desirable or not?\",\n        \"A unified dnn weight compression framework using reweighted optimization methods\",\n        \"Movement pruning: Adaptive sparsity by fine-tuning\",\n        \"Efficient transformer-based large scale language representations using hardware-friendly block structured pruning\",\n        \"Spatten: Efficient sparse attention architecture with cascade token and head pruning\",\n        \"Structured pruning of deep convolutional neural networks\",\n        \"Pruning convolutional neural networks for resource efficient inference\",\n        \"Structured pruning for deep convolutional neural networks: A survey\",\n        \"Block pruning for faster transformers\",\n        \"Learning both weights and connections for efficient neural networks\",\n        \"Width & depth pruning for vision transformers\",\n        \"Savit: Structure-aware vision transformer pruning via collaborative optimization\",\n        \"Chasing sparsity in vision transformers: An end-to-end exploration\",\n        \"Not all patches are what you need: Expediting vision transformers via token reorganizations\",\n        \"Adaptive token sampling for efficient vision transformers\",\n        \"Patch slimming for efficient vision transformers\",\n        \"Ia-red2: Interpretability-aware redundancy reduction for vision transformers\",\n        \"Evo-vit: Slow-fast token evolution for dynamic vision transformer\",\n        \"Unified visual transformer compression\",\n        \"Learned token pruning for transformers\",\n        \"Spvit: Enabling faster vision transformers via soft token pruning\",\n        \"Dynamicvit: Efficient vision transformers with dynamic token sparsification\",\n        \"Heatvit: Hardware-efficient adaptive token pruning for vision transformers\",\n        \"Layer normalization\",\n        \"Estimating or propagating gradients through stochastic neurons\",\n        \"What’s hidden in a randomly weighted neural network?\",\n        \"Piggyback: Adapting a single network to multiple tasks by learning to mask weights\",\n        \"A survey of techniques for optimizing transformer inference\",\n        \"Accelerating transformer-based deep learning models on fpgas using column balanced block pruning\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Decoupled weight decay regularization\",\n        \"HuggingFace Model Hub DeiT-Small Model\",\n        \"Via: A novel vision-transformer accelerator based on fpga\",\n        \"Auto-vit-acc: An fpga-aware automatic acceleration framework for vision transformer with mixed-scheme quantization\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Accelerating ViT Inference on FPGA through Static and Dynamic Pruning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}