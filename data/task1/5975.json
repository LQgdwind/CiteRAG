{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Planning to Practice: Efficient Online Fine-Tuning by Composing Goals in Latent Space\n\nPaper Abstract: Abstract General-purpose robots require diverse repertoires of behaviors to complete challenging tasks in real-world unstructured environments. To address this issue, goal-conditioned reinforcement learning aims to acquire policies that can reach configurable goals for a wide range of tasks on command. However, such goal-conditioned policies are notoriously difficult and time-consuming to train from scratch. In this paper, we propose Planning to Practice (PTP), a method that makes it practical to train goal-conditioned policies for long-horizon tasks that require multiple distinct types of interactions to solve. Our approach is based on two key ideas. First, we decompose the goal-reaching problem hierarchically, with a high-level planner that sets intermediate subgoals using conditional subgoal generators in the latent space for a low-level model-free policy. Second, we propose a hybrid approach which first pre-trains both the conditional subgoal generator and the policy on previously collected data through offline reinforcement learning, and then fine-tunes the policy via online exploration. This fine-tuning process is itself facilitated by the planned subgoals, which breaks down the original target task into short-horizon goal-reaching tasks that are significantly easier to learn. We conduct experiments in both the simulation and real world, in which the policy is pre-trained on demonstrations of short primitive behaviors and fine-tuned for temporally extended tasks that are unseen in the offline data. Our experimental results show that PTP can generate feasible sequences of subgoals that enable the policy to efficiently solve the target tasks. 111Supplementary video: sites.google.com/view/planning-to-practice\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"â€œImagenet classification with deep convolutional neural networks\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Learning Hand-Eye Coordination for Robotic Grasping with Deep Learning and Large-Scale Data Collection\",\n        \"Conservative data sharing for multi-task offline reinforcement learning\",\n        \"What can i do here? learning new skills by imagining visual affordances\",\n        \"Actionable models: Unsupervised offline reinforcement learning of robotic skills\",\n        \"Mt-opt: Continuous multi-task robotic reinforcement learning at scale\",\n        \"Learning Structured Output Representation using Deep Conditional Generative Models\",\n        \"Batch reinforcement learning\",\n        \"Off-policy deep reinforcement learning without exploration\",\n        \"Stabilizing off-policy q-learning via bootstrapping error reduction\",\n        \"BRAC+: Going deeper with behavior regularized offline reinforcement learning\",\n        \"Conservative q-learning for offline reinforcement learning\",\n        \"A minimalist approach to offline reinforcement learning\",\n        \"COG: Connecting new skills to past experience with offline reinforcement learning\",\n        \"AWAC: Accelerating online reinforcement learning with offline datasets\",\n        \"Fine-tuning offline reinforcement learning with model-based policy optimization\",\n        \"Aw-opt: Learning robotic skills with imitation and reinforcement at scale\",\n        \"Offline-to-online reinforcement learning via balanced replay and pessimistic q-ensemble\",\n        \"Offline pre-trained multi-agent decision transformer: One big sequence model tackles all smac tasks\",\n        \"Scalable deep reinforcement learning for vision-based robotic manipulation\",\n        \"Scaling data-driven robotics with reward sketching and batch reinforcement learning\",\n        \"Learning to achieve goals\",\n        \"Universal value function approximators\",\n        \"C-learning: Learning to achieve goals via recursive classification\",\n        \"Hindsight experience replay\",\n        \"Skew-fit: State-covering self-supervised reinforcement learning\",\n        \"Curriculum-guided hindsight experience replay\",\n        \"Goal-conditioned imitation learning\",\n        \"Relay policy learning: Solving long-horizon tasks via imitation and reinforcement learning\",\n        \"Policy continuation with hindsight inverse dynamics\",\n        \"Rewriting history with inverse rl: Hindsight inference for policy improvement\",\n        \"Learning to reach goals via iterated supervised learning\",\n        \"Visual Reinforcement Learning with Imagined Goals\",\n        \"Contextual imagined goals for self-supervised robotic learning\",\n        \"Goal-conditioned reinforcement learning with imagined subgoals\",\n        \"Strips: A new approach to the application of theorem proving to problem solving\",\n        \"Probabilistic roadmaps for path planning in high-dimensional configuration spaces\",\n        \"D* lite\",\n        \"Sampling-based algorithms for optimal motion planning:\",\n        \"Chomp: Covariant hamiltonian optimization for motion planning\",\n        \"Stomp: Stochastic trajectory optimization for motion planning\",\n        \"Combined Task and Motion Planning Through an Extensible Planner-Independent Interface Layer\",\n        \"Planning with goal-conditioned policies\",\n        \"Search on the replay buffer: Bridging planning and reinforcement learning\",\n        \"Dynamics learning with cascaded variational inference for multi-step manipulation\",\n        \"Plangan: Model-based planning with sparse rewards and multiple goals\",\n        \"Long-horizon visual planning with goal-conditioned hierarchical predictors\",\n        \"Autonomous reinforcement learning via subgoal curricula\",\n        \"C-planning: An automatic curriculum for learning goal-reaching tasks\",\n        \"Learning sampling distributions for robot motion planning\",\n        \"Hierarchical foresight: Self-supervised learning of long-horizon tasks via visual subgoal generation\",\n        \"Auto-Encoding Variational Bayes\",\n        \"Robust model predictive path integral control: Analysis and performance guarantees\",\n        \"Pybullet, a python module for physics simulation for games, robotics and machine learning\",\n        \"Neural discrete representation learning\",\n        \"U-net: Convolutional networks for biomedical image segmentation\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in Planning to Practice: Efficient Online Fine-Tuning by Composing Goals in Latent Space, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}