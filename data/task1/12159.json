{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SpikeFI: A Fault Injection Framework for Spiking Neural Networks\n\nPaper Abstract: Abstract Neuromorphic computing and spiking neural networks (SNNs) are gaining traction across various artificial intelligence (AI) tasks thanks to their potential for efficient energy usage and faster computation speed. This comparative advantage comes from mimicking the structure, function, and efficiency of the biological brain, which arguably is the most brilliant and green computing machine. As SNNs are eventually deployed on a hardware processor, the reliability of the application in light of hardware-level faults becomes a concern, especially for safety- and mission-critical applications. In this work, we propose SpikeFI, a fault injection framework for SNNs that can be used for automating the reliability analysis and test generation. SpikeFI is built upon the SLAYER PyTorch framework with fault injection experiments accelerated on a single or multiple GPUs. It has a comprehensive integrated neuron and synapse fault model library, in accordance to the literature in the domain, which is extendable by the user if needed. It supports: single and multiple faults; permanent and transient faults; specified, random layer-wise, and random network-wise fault locations; and pre-, during, and post-training fault injection. It also offers several optimization speedups and built-in functions for results visualization. SpikeFI is open-source and available for download via GitHub at https://github.com/SpikeFI.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Towards spike-based machine intelligence with neuromorphic computing\",\n        \"Opportunities for neuromorphic computing algorithms and applications\",\n        \"The SpiNNaker Project\",\n        \"A million spiking-neuron integrated circuit with a scalable communication network and interface\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"A wafer-scale neuromorphic hardware system for large-scale neural modeling\",\n        \"Neurogrid: A mixed-analog-digital multichip system for large-scale neural simulations\",\n        \"Machine learning-based test pattern generation for neuromorphic chips\",\n        \"Automatic test configuration and pattern generation (atcpg) for neuromorphic chips\",\n        \"Compact functional testing for neuromorphic computing circuits\",\n        \"On-line testing of neuromorphic hardware\",\n        \"Resilience and robustness of spiking neural networks for neuromorphic systems\",\n        \"Automatic abstraction and fault tolerance in cortical microachitectures\",\n        \"Assessing self-repair on FPGAs with biologically realistic astrocyte-neuron networks\",\n        \"Homeostatic fault tolerance in spiking neural networks: A dynamic hardware perspective\",\n        \"SPANNER: A self-repairing spiking neural network hardware architecture\",\n        \"Self-testing analog spiking neuron circuit\",\n        \"Neuron fault tolerance in spiking neural networks\",\n        \"SoftSNN: Low-cost fault tolerance for spiking neural network accelerators under soft errors\",\n        \"A resilience framework for synapse weight errors and firing threshold perturbations in RRAM spiking neural networks\",\n        \"Reliability analysis of a spiking neural network hardware accelerator\",\n        \"Special session: Reliability of hardware-implemented spiking neural networks (SNN)\",\n        \"SpikingJET: Enhancing fault injection for fully and convolutional spiking neural networks\",\n        \"Training spiking neural networks using lessons from deep learning\",\n        \"SLAYER: Spike layer error reassignment in time\",\n        \"Understanding error propagation in deep learning neural network (DNN) accelerators and applications\",\n        \"Ares: A framework for quantifying the resilience of deep neural networks\",\n        \"PyTorchFI: A runtime perturbation tool for DNNs\",\n        \"TensorFI: A flexible fault injection framework for tensorflow applications\",\n        \"Fault injection for TensorFlow applications\",\n        \"FIdelity: Efficient resilience analysis framework for deep learning accelerators\",\n        \"Fast and accurate error simulation for CNNs against soft errors\",\n        \"Emulating the effects of radiation-induced soft-errors for the reliability assessment of neural networks\",\n        \"BinFI: An efficient fault injector for safety-critical machine learning systems\",\n        \"Functional criticality analysis of structural faults in AI accelerators\",\n        \"SCI-FI: a smart, accurate and unintrusive fault-injector for deep neural networks\",\n        \"Assessing convolutional neural networks reliability through statistical fault injections\",\n        \"SASSIFI: An architecture-level fault injection tool for GPU application resilience evaluation\",\n        \"NVBitFI: Dynamic fault injection for GPUs\",\n        \"Testability and dependability of AI hardware: Survey, trends, challenges, and perspectives\",\n        \"A survey on deep learning resilience assessment methodologies\",\n        \"Testing and reliability of spiking neural networks: A review of the state-of-the-art\",\n        \"A systematic literature review on hardware reliability assessment methods for deep neural networks\",\n        \"Artificial neural networks for space and safety-critical applications: Reliability issues and potential solutions\",\n        \"Networks of spiking neurons: The third generation of neural network models\",\n        \"Neuronal dynamics: From single neurons to networks and models of cognition\",\n        \"Deep learning in spiking neural networks\",\n        \"Spiking neuron hardware-level fault modeling\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"Converting static image datasets to spiking neuromorphic datasets using saccades\",\n        \"A low power, fully event-based gesture recognition system\",\n        \"Gradient-based learning applied to document recognition\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in SpikeFI: A Fault Injection Framework for Spiking Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}