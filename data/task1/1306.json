{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 62 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning to Play Two-Player Perfect-Information Games without Knowledge\n\nPaper Abstract: Abstract In this paper, several techniques for learning game state evaluation functions by reinforcement are proposed. The first is a generalization of tree bootstrapping (tree learning): it is adapted to the context of reinforcement learning without knowledge based on non-linear functions. With this technique, no information is lost during the reinforcement learning process. The second is a modification of minimax with unbounded depth extending the best sequences of actions to the terminal states. This modified search is intended to be used during the learning process. The third is to replace the classic gain of a game (+11+1 / −11-1) with a reinforcement heuristic. We study particular reinforcement heuristics such as: quick wins and slow defeats ; scoring ; mobility or presence. The fourth is another variant of unbounded minimax, which plays the safest action instead of playing the best action. This modified search is intended to be used after the learning process. The fifth is a new action selection distribution. The conducted experiments suggest that these techniques improve the level of play. We apply these different techniques to design program-players to the game of Hex (size 111111 and 131313) surpassing the level of Mohex 3HNN with reinforcement learning from self-play without knowledge.\n\n{retrieved_text}\n\nGenerate exactly 62 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 62\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Algorithms for sequential decision making\",\n        \"Mastering the game of go without human knowledge\",\n        \"Games with perfect information\",\n        \"Polygames: Improved zero learning\",\n        \"General game playing: Overview of the aaai competition\",\n        \"On pruning techniques for multi-player games\",\n        \"Game-playing and game-learning automata\",\n        \"Deep blue\",\n        \"Knowledge-free and learning-based methods in intelligent game playing\",\n        \"Temporal difference learning and td-gammon\",\n        \"Mcts-minimax hybrids with state evaluations\",\n        \"Efficient selectivity and backup operators in monte-carlo tree search\",\n        \"A survey of monte carlo tree search methods\",\n        \"Training deep convolutional neural networks to play go\",\n        \"Move prediction using deep convolutional neural networks in hex\",\n        \"Three-head neural network architecture for monte carlo tree search.\",\n        \"Residual networks for computer go\",\n        \"Better computer go player with neural network and long-term prediction\",\n        \"Mastering the game of go with deep neural networks and tree search\",\n        \"Thinking fast and slow with deep learning and tree search\",\n        \"A general reinforcement learning algorithm that masters chess, shogi, and go through self-play\",\n        \"Mastering chess and shogi by self-play with a general reinforcement learning algorithm\",\n        \"Apprendre à jouer aux jeux à deux joueurs à information parfaite sans connaissance\",\n        \"Hex 2018: Mohex3hnn over deepezo.\",\n        \"Artificial Intelligence and Games\",\n        \"An analysis of alpha-beta pruning\",\n        \"Artificial intelligence for games\",\n        \"Chess 4.5ï¿œthe northwestern university chess program\",\n        \"Depth-first iterative-deepening: An optimal admissible tree search\",\n        \"An enhancement to the iterative, alpha-beta, minimax search procedure\",\n        \"Proof-number search and its variants\",\n        \"Conspiracy numbers\",\n        \"The b* tree search algorithm: A best-first proof procedure\",\n        \"Best-first minimax search\",\n        \"The greenblatt chess program\",\n        \"Neurohex: A deep q-learning hex agent\",\n        \"Bootstrapping from game tree search\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Learning to play chess using temporal differences\",\n        \"Learning extension parameters in game-tree search\",\n        \"Decision Making Using Thompson Sampling\",\n        \"Learning to evaluate go positions via temporal difference methods\",\n        \"Optimization by simulated annealing\",\n        \"Hex Strategy: Making the right connections\",\n        \"Games solved: Now and in the future\",\n        \"Winning Ways for Your Mathematical Plays, Volume 3\",\n        \"Scalable parallel dfpn search\",\n        \"Hex ist pspace-vollständig\",\n        \"On the complexity of connection games\",\n        \"Mohex 2.0: a pattern-based mcts hex player\",\n        \"Machine learning: An artificial intelligence approach\",\n        \"Deep learning\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Deep residual learning for image recognition\",\n        \"Reinforcement learning for creating evaluation function using convolutional neural network in hex\",\n        \"Reinforcement learning to create value and policy functions using minimax tree search in hex\",\n        \"Ludii – the ludemic general game system\",\n        \"Adam: A method for stochastic optimization\",\n        \"Feature selection, l 1 vs. l 2 regularization, and rotational invariance\",\n        \"Deep sparse rectifier neural networks\",\n        \"Nested monte carlo search for two-player games\",\n        \"Monte carlo inverse folding\"\n    ],\n    \"reasoning\": \"Selected these 62 references because they represent foundational work and recent advances in Learning to Play Two-Player Perfect-Information Games without Knowledge, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}