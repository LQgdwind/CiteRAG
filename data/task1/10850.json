{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Is Crowdsourcing Breaking Your Bank? Cost-Effective Fine-Tuning of Pre-trained Language Models with Proximal Policy Optimization\n\nPaper Abstract: Abstract Wide usage of ChatGPT has highlighted the potential of reinforcement learning from human feedback. However, its training pipeline relies on manual ranking, a resource-intensive process. To reduce labor costs, we propose a self-supervised text ranking approach for applying Proximal-Policy-Optimization to fine-tune language models while eliminating the need for human annotators. Our method begins with probabilistic sampling to encourage a language model to generate diverse responses for each input. We then employ TextRank and ISODATA algorithms to rank and cluster these responses based on their semantics. Subsequently, we construct a reward model to learn the rank and optimize our generative policy. Our experimental results, conducted using two language models on three tasks, demonstrate that the models trained by our method considerably outperform baselines regarding BLEU, GLEU, and METEOR scores. Furthermore, our manual evaluation shows that our ranking results exhibit a remarkably high consistency with that of humans. This research significantly reduces training costs of proximal policy-guided models and demonstrates the potential for self-correction of language models.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A learning algorithm for boltzmann machines\",\n        \"Artificial hallucinations in chatgpt: implications in scientific writing\",\n        \"Large language models and the perils of their hallucinations\",\n        \"METEOR: An automatic metric for MT evaluation with improved correlation with human judgments\",\n        \"BitFit: Simple parameter-efficient fine-tuning for transformer-based masked language-models\",\n        \"Natural language processing with Python: analyzing text with the natural language toolkit\",\n        \"GPT-Neo: Large Scale Autoregressive Language Modeling with Mesh-Tensorflow\",\n        \"User intent recognition and satisfaction with large language models: A user study with chatgpt\",\n        \"Teaching large language models to self-debug\",\n        \"A coefficient of agreement for nominal scales\",\n        \"Chameleons in imagined conversations: A new approach to understanding coordination of linguistic style in dialogs\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Pre-trained language model representations for language generation\",\n        \"Shortcut learning in deep neural networks\",\n        \"Calculating the singular values and pseudo-inverse of a matrix\",\n        \"Generative adversarial networks\",\n        \"The curious case of neural text degeneration\",\n        \"LoRA: Low-rank adaptation of large language models\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"DailyDialog: A manually labelled multi-turn dialogue dataset\",\n        \"Making language models better reasoners with step-aware verifier\",\n        \"ROUGE: A package for automatic evaluation of summaries\",\n        \"A review on interactive reinforcement learning from human social feedback\",\n        \"Exploring versatile generative language model via parameter-efficient transfer learning\",\n        \"Decoupled weight decay regularization\",\n        \"TextRank: Bringing order into text\",\n        \"Steps toward artificial intelligence\",\n        \"GLEU: Automatic evaluation of sentence-level fluency\",\n        \"Sentence-t5: Scalable sentence encoders from pre-trained text-to-text models\",\n        \"Training language models to follow instructions with human feedback\",\n        \"The pagerank citation ranking: Bring order to the web\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Liii. on lines and planes of closest fit to systems of points in space\",\n        \"AdapterHub: A framework for adapting transformers\",\n        \"Enhancing cross-lingual natural language inference by prompt-learning from cross-lingual templates\",\n        \"Language models are unsupervised multitask learners\",\n        \"SQuAD: 100,000+ questions for machine comprehension of text\",\n        \"Sentence-BERT: Sentence embeddings using Siamese BERT-networks\",\n        \"Proximal policy optimization algorithms\",\n        \"A survey of pretrained language models\",\n        \"Policy gradient methods for reinforcement learning with function approximation\",\n        \"Stanford alpaca: An instruction-following llama model\",\n        \"Attention is all you need\",\n        \"Self-instruct: Aligning language model with self generated instructions\",\n        \"Ethical and social risks of harm from language models\",\n        \"Seqgan: Sequence generative adversarial nets with policy gradient\",\n        \"GLM-130b: An open bilingual pre-trained model\",\n        \"An unsupervised semantic sentence ranking scheme for text documents\",\n        \"How language model hallucinations can snowball\",\n        \"Bertscore: Evaluating text generation with bert\",\n        \"ERNIE: Enhanced language representation with informative entities\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Is Crowdsourcing Breaking Your Bank? Cost-Effective Fine-Tuning of Pre-trained Language Models with Proximal Policy Optimization, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}