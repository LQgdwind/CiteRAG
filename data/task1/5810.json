{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SoftEdge: Regularizing Graph Classification with Random Soft Edges\n\nPaper Abstract: Abstract Augmented graphs play a vital role in regularizing Graph Neural Networks (GNNs), which leverage information exchange along edges in graphs, in the form of message passing, for learning. Due to their effectiveness, simple edge and node manipulations (e.g., addition and deletion) have been widely used in graph augmentation. Nevertheless, such common augmentation techniques can dramatically change the semantics of the original graph, causing overaggressive augmentation and thus under-fitting in the GNN learning. To address this problem arising from dropping or adding graph edges and nodes, we propose SoftEdge, which assigns random weights to a portion of the edges of a given graph for augmentation. The synthetic graph generated by SoftEdge maintains the same nodes and their connectivities as the original graph, thus mitigating the semantic changes of the original graph. We empirically show that this simple method obtains superior accuracy to popular node and edge manipulation approaches and notable resilience to the accuracy degradation with the GNN depth.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On the bottleneck of graph neural networks and its practical implications\",\n        \"Spectral clustering with graph neural networks for graph pooling\",\n        \"GRAND: Graph neural diffusion\",\n        \"Measuring and relieving the over-smoothing problem for graph neural networks from the topological view\",\n        \"Fastgcn: Fast learning with graph convolutional networks via importance sampling\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Exposing the limitations of molecular machine learning with activity cliffs\",\n        \"Data augmentation for deep graph learning: A survey\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Ts-extractor: large graph exploration via subgraph extraction based on topological and semantic information\",\n        \"Neural message passing for quantum chemistry\",\n        \"Very deep graph neural networks via noise regularisation\",\n        \"Nonlinear mixup: Out-of-manifold data augmentation for text classification\",\n        \"Intrusion-free graph mixup\",\n        \"Mixup as locally linear out-of-manifold regularization\",\n        \"Inductive representation learning on large graphs\",\n        \"Contrastive multi-view representation learning on graphs\",\n        \"Deep residual learning for image recognition\",\n        \"Momentum contrast for unsupervised visual representation learning\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Strategies for pre-training graph neural networks\",\n        \"Adaptive sampling towards fast graph representation learning\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Diffusion improves graph learning\",\n        \"Deepgcns: Can gcns go as deep as cnns?\",\n        \"Deepergcn: All you need to train deeper gcns\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"On outliers and activity cliffs - why qsar often dissapoints\",\n        \"Tudataset: A collection of benchmark datasets for learning with graphs\",\n        \"DropGNN: Random dropouts increase the expressiveness of graph neural networks\",\n        \"Graph transplant: Node saliency-guided graph mixup with local structure preservation\",\n        \"GCC: Graph Contrastive Coding for Graph Neural Network Pre-Training\",\n        \"Dropedge: Towards deep graph convolutional networks on node classification\",\n        \"Topological regularization for graph neural networks augmentation\",\n        \"A deep learning approach to antibiotic discovery\",\n        \"Mocl: Data-driven molecular fingerprint via knowledge-aware contrastive learning from molecular graph\",\n        \"Adversarial graph augmentation to improve graph contrastive learning\",\n        \"Visualizing data using t-sne\",\n        \"Graph Attention Networks\",\n        \"Nodeaug: Semi-supervised node classification with data augmentation\",\n        \"Graphcrop: Subgraph cropping for graph classification\",\n        \"Mixup for node and graph classification\",\n        \"A comprehensive survey on graph neural networks\",\n        \"How powerful are graph neural networks?\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Graph contrastive learning with augmentations\",\n        \"Graph contrastive learning automated\",\n        \"Understanding deep learning (still) requires rethinking generalization\",\n        \"Circuit-gnn: Graph neural networks for distributed circuit design\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Bayesian graph convolutional neural networks for semi-supervised classification\",\n        \"Adaptive diffusion in graph neural networks\",\n        \"Data augmentation for graph neural networks\",\n        \"Graph data augmentation for graph machine learning: A survey\",\n        \"Data augmentation for graph classification\",\n        \"Graph Contrastive Learning with Adaptive Augmentation\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in SoftEdge: Regularizing Graph Classification with Random Soft Edges, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}