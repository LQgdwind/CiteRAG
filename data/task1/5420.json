{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Online Learning for Orchestration of Inference in Multi-User End-Edge-Cloud Networks\n\nPaper Abstract: Abstract. Deep-learning-based intelligent services have become prevalent in cyber-physical applications including smart cities and health-care. Deploying deep-learning-based intelligence near the end-user enhances privacy protection, responsiveness, and reliability. Resource-constrained end-devices must be carefully managed in order to meet the latency and energy requirements of computationally-intensive deep learning services. Collaborative end-edge-cloud computing for deep learning provides a range of performance and efficiency that can address application requirements through computation offloading. The decision to offload computation is a communication-computation co-optimization problem that varies with both system parameters (e.g., network condition) and workload characteristics (e.g., inputs). On the other hand, deep learning model optimization provides another source of tradeoff between latency and model accuracy. An end-to-end decision-making solution that considers such computation-communication problem is required to synergistically find the optimal offloading policy and model for deep learning services. To this end, we propose a reinforcement-learning-based computation offloading solution that learns optimal offloading policy considering deep learning model selection techniques to minimize response time while providing sufficient accuracy. We demonstrate the effectiveness of our solution for edge devices in an end-edge-cloud system and evaluate with a real-setup implementation using multiple AWS and ARM core configurations. Our solution provides 35%percent3535\\% speedup in the average response time compared to the state-of-the-art with less than 0.9%percent0.90.9\\% accuracy reduction, demonstrating the promise of our online learning framework for orchestrating DL inference in end-edge-cloud systems.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Autonomic computation offloading in mobile edge for IoT applications\",\n        \"Risk-aware data offloading in multi-server multi-access edge computing environment\",\n        \"To offload or not to offload? the bandwidth and energy costs of mobile cloud computing\",\n        \"Energy-Optimized Partial Computation Offloading in Mobile-Edge Computing With Genetic Simulated-Annealing-Based Particle Swarm Optimization\",\n        \"Recent advances in collaborative scheduling of computing tasks in an edge computing paradigm\",\n        \"Optimized computation offloading performance in virtual edge computing systems via deep reinforcement learning\",\n        \"Decentralized computation offloading for multi-user mobile edge computing: A deep reinforcement learning approach\",\n        \"Dynamic Computation Offloading Based on Deep Reinforcement Learning\",\n        \"A survey of model compression and acceleration for deep neural networks\",\n        \"Binaryconnect: Training deep neural networks with binary weights during propagations\",\n        \"JointDNN: an efficient training and inference engine for intelligent mobile cloud computing services\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Mobilenets: Efficient convolutional neural networks for mobile vision applications\",\n        \"Machine learning and intelligent communications\",\n        \"IONN: Incremental offloading of neural network computations from mobile devices to edge servers\",\n        \"Neurosurgeon: Collaborative intelligence between the cloud and mobile edge\",\n        \"Joint Optimization of Data Offloading and Resource Allocation With Renewable Energy Aware for IoT Devices: A Deep Reinforcement Learning Approach\",\n        \"Bringing deep learning at the edge of information-centric internet of things\",\n        \"Autoscale: Energy efficiency optimization for stochastic edge inference using reinforcement learning\",\n        \"Deep reinforcement learning based computation offloading and resource allocation for MEC\",\n        \"Self-improving reactive agents based on reinforcement learning, planning and teaching\",\n        \"AdaDeep: A Usage-Driven, Automated Deep Model Compression Framework for Enabling Ubiquitous Intelligent Mobiles\",\n        \"IP Products: Arm NN\",\n        \"Optimization of lightweight task offloading strategy for mobile edge computing based on deep reinforcement learning\",\n        \"Mobile edge computing: A survey on architecture and computation offloading\",\n        \"Embedded binarized neural networks\",\n        \"Learning-based computation offloading for IoT devices with energy harvesting\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Deep reinforcement learning: an overview\",\n        \"Edge-cloud collaborative processing for intelligent internet of things: A case study on smart surveillance\",\n        \"Analysis of Performance and Energy Consumption of Wearable Devices and Mobile Gateways in IoT Applications\",\n        \"Wireless network intelligence at the edge\",\n        \"Online learning and optimization for computation offloading in D2D edge computing and networks\",\n        \"Deepdecision: A mobile deep learning framework for edge video analytics\",\n        \"Deep learning in neural networks: An overview\",\n        \"Machine Learning based Timeliness-Guaranteed and Energy-Efficient Task Assignment in Edge Computing Systems\",\n        \"Exploring computation offloading in IoT systems\",\n        \"Dynamic Computation Migration at the Edge: Is There an Optimal Choice?\",\n        \"Reinforcement learning: An introduction\",\n        \"Efficient processing of deep neural networks: A tutorial and survey\",\n        \"Adaptive deep learning model selection on embedded systems\",\n        \"Distributed deep neural networks over the cloud, the edge and end devices\",\n        \"Dynamic edge computation offloading for Internet of Things with energy harvesting: A learning method\",\n        \"Reinforcement Learning\",\n        \"Online learning for offloading and autoscaling in renewable-powered mobile edge computing\",\n        \"Deepwear: Adaptive local offloading for on-wearable deep learning\",\n        \"All one needs to know about fog computing and related edge computing paradigms\",\n        \"Profit-maximized collaborative computation offloading and resource allocation in distributed cloud and edge computing systems\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Online Learning for Orchestration of Inference in Multi-User End-Edge-Cloud Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}