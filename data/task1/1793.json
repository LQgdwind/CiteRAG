{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Counting Subgraphs in Degenerate Graphs\n\nPaper Abstract: Abstract We consider the problem of counting the number of copies of a fixed graph HùêªH within an input graph Gùê∫G. This is one of the most well-studied algorithmic graph problems, with many theoretical and practical applications. We focus on solving this problem when the input Gùê∫G has bounded degeneracy. This is a rich family of graphs, containing all graphs without a fixed minor (e.g. planar graphs), as well as graphs generated by various random processes (e.g. preferential attachment graphs). We say that HùêªH is easy if there is a linear-time algorithm for counting the number of copies of HùêªH in an input Gùê∫G of bounded degeneracy. A seminal result of Chiba and Nishizeki from ‚Äô85 states that every HùêªH on at most 4 vertices is easy. Bera, Pashanasangi, and Seshadhri recently extended this to all HùêªH on 5 vertices, and further proved that for every k>5ùëò5k>5 there is a kùëòk-vertex HùêªH which is not easy. They left open the natural problem of characterizing all easy graphs HùêªH. Bressan has recently introduced a framework for counting subgraphs in degenerate graphs, from which one can extract a sufficient condition for a graph HùêªH to be easy. Here we show that this sufficient condition is also necessary, thus fully answering the Bera‚ÄìPashanasangi‚ÄìSeshadhri problem. We further resolve two closely related problems; namely characterizing the graphs that are easy with respect to counting induced copies, and with respect to counting homomorphisms.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Popular conjectures imply strong lower bounds for dynamic problems\",\n        \"Color-coding\",\n        \"Finding and counting given length cycles\",\n        \"Emergence of scaling in random networks\",\n        \"Properties of acyclic database schemes\",\n        \"On the desirability of acyclic database schemes\",\n        \"Higher-order organization of complex networks\",\n        \"Counting paths and packings in halves\",\n        \"Counting thin subgraphs via packings faster than meet-in-the-middle time\",\n        \"Linear Time Subgraph Counting, Graph Degeneracy, and the Chasm at Size Six\",\n        \"Near-linear time homomorphism counting in bounded degeneracy graphs: the barrier of long induced cycles\",\n        \"Hypergraph acyclicity revisited\",\n        \"Faster algorithms for counting subgraphs in sparse graphs\",\n        \"Counting homomorphisms, subgraphs, and induced subgraphs in degenerate graphs: new hardness results and complete complexity classifications\",\n        \"Structural holes and good ideas\",\n        \"Counting answers to existential positive queries: A complexity classification\",\n        \"Arboricity and subgraph listing algorithms\",\n        \"Quasi-random graphs\",\n        \"Homomorphisms are a good basis for counting small subgraphs\",\n        \"Complexity of counting subgraphs: Only the boundedness of the vertex-cover number counts\",\n        \"Graph pattern detection: Hardness for all induced patterns and faster non-induced cycles\",\n        \"The complexity of counting homomorphisms seen from the other side\",\n        \"On the complexity of fixed parameter clique and dominating set\",\n        \"Strong independence of graphcopy functions\",\n        \"The parameterized complexity of counting problems\",\n        \"Storing a sparse table with O‚Äã(1)ùëÇ1O(1) worst-case access time\",\n        \"A method for detecting structure in sociometric data\",\n        \"Not all scale-free networks are born equal: The role of the seed graph in PPI network evolution\",\n        \"Finding a minimum circuit in a graph\",\n        \"Neighborhood based fast graph search in large networks\",\n        \"Finding and counting small induced subgraphs efficiently\",\n        \"Counting and detecting small subgraphs via equations\",\n        \"Large networks and graph limits\",\n        \"Generalized quasirandom graphs\",\n        \"Smallest-last ordering and clustering and graph coloring algorithms\",\n        \"Better algorithms for counting triangles in data streams\",\n        \"The challenges of unbounded treewidth in parameterised subgraph counting problems\",\n        \"Network motifs: simple building blocks of complex networks\",\n        \"Sparsity: graphs, structures, and algorithms (Vol. 28)\",\n        \"On the complexity of the subgraph problem\",\n        \"Biological network comparison using graphlet degree distribution\",\n        \"Modeling interactome: scale-free or geometric?\",\n        \"Computational complexity theory (Vol. 10)\",\n        \"Finding the hierarchy of dense subgraphs using nucleus decompositions\",\n        \"The kùëòk-clique densest subgraph problem\",\n        \"Subgraph frequencies: mapping the empirical and extremal geography of large graph collections\",\n        \"A course in combinatorics\",\n        \"Efficient algorithms for clique problems\",\n        \"Multiplying matrices faster than Coppersmith-Winograd\",\n        \"Finding, minimizing, and counting weighted subgraphs\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Counting Subgraphs in Degenerate Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}