{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: CASU: Compromise Avoidance via Secure Update for Low-end Embedded Systems\n\nPaper Abstract: Abstract Guaranteeing runtime integrity of embedded system software is an open problem. Trade-offs between security and other priorities (e.g., cost or performance) are inherent, and resolving them is both challenging and important. The proliferation of runtime attacks that introduce malicious code (e.g., by injection) into embedded devices has prompted a range of mitigation techniques. One popular approach is Remote Attestation (‚Ñõ‚Äãùñ†‚Ñõùñ†\\sf{\\mathcal{R}A}), whereby a trusted entity (verifier) checks the current software state of an untrusted remote device (prover). RA yields a timely authenticated snapshot of prover state that verifier uses to decide whether an attack occurred. Current RA schemes require verifier to explicitly initiate ‚Ñõ‚Äãùñ†‚Ñõùñ†\\sf{\\mathcal{R}A}, based on some unclear criteria. Thus, in case of prover‚Äôs compromise, verifier only learns about it late, upon the next ‚Ñõ‚Äãùñ†‚Ñõùñ†\\sf{\\mathcal{R}A} instance. While sufficient for compromise detection, some applications would benefit from a more proactive, prevention-based approach. To this end, we construct CASU: Compromise Avoidance via Secure Updates. CASU is an inexpensive hardware/software co-design enforcing: (i) runtime software immutability, thus precluding any illegal software modification, and (ii) authenticated updates as the sole means of modifying software. In CASU, a successful ‚Ñõ‚Äãùñ†‚Ñõùñ†\\sf{\\mathcal{R}A} instance serves as a proof of successful update, and continuous subsequent software integrity is implicit, due to the runtime immutability guarantee. This obviates the need for ‚Ñõ‚Äãùñ†‚Ñõùñ†\\sf{\\mathcal{R}A} in between software updates and leads to unobtrusive integrity assurance with guarantees akin to those of prior ‚Ñõ‚Äãùñ†‚Ñõùñ†\\sf{\\mathcal{R}A} techniques, with better overall performance.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"‚ÄúCode injection attacks on harvard-architecture devices\",\n        \"Code injection attacks on harvard-architecture devices\",\n        \"Sok: Eternal war in memory\",\n        \"Buffer overflows: Attacks and defenses for the vulnerability of the decade\",\n        \"Owasp top ten.\",\n        \"SMART: Secure and minimal architecture for (establishing dynamic) root of trust\",\n        \"Sancus 2.0: A low-cost security architecture for iot devices\",\n        \"VRASED: A verified hardware/software co-design for remote attestation\",\n        \"Simple: A remote attestation approach for resource-constrained iot devices\",\n        \"Tytan: tiny trust anchor for tiny devices\",\n        \"TrustLite: A security architecture for tiny embedded devices\",\n        \"Pure: Using verified remote attestation to obtain proofs of update, reset and erasure in low-end embedded systems\",\n        \"Verify&revive: Secure detection and recovery of compromised low-end embedded devices\",\n        \"ASSURED: Architecture for secure software update of realistic embedded devices\",\n        \"On the toctou problem in remote attestation\",\n        \"Avr atmega 1284p 8-bit microcontroller.\",\n        \"Msp430 ultra-low-power sensing & measurement mcus.\",\n        \"Arm TrustZone.\",\n        \"Intel Software Guard Extensions (Intel SGX).\",\n        \"openMSP430\",\n        \"Hacl*: A verified modern cryptographic library\",\n        \"On the security of public key protocols\",\n        \"Tamper resistance mechanisms for secure embedded systems\",\n        \"Verilog2SMV: A tool for word-level verification\",\n        \"Nusmv 2: An opensource tool for symbolic model checking\",\n        \"CASU source code.\",\n        \"APEX: A verified architecture for proofs of execution on remote devices under full software compromise\",\n        \"Ultrasonic ranger code.\",\n        \"Temperature sensor code.\",\n        \"Trusted platform module (tpm)\",\n        \"Establishing the genuinity of remote computer systems\",\n        \"SWATT: Software-based attestation for embedded devices\",\n        \"Pioneer: Verifying code integrity and enforcing untampered code execution on legacy systems\",\n        \"SAKE: Software attestation for key establishment in sensor networks\",\n        \"Detecting code alteration by creating a temporary memory bottleneck\",\n        \"Flicker: An execution infrastructure for tcb minimization\",\n        \"Remote attestation on legacy operating systems with trusted platform modules\",\n        \"Litehax: lightweight hardware-assisted attestation of program execution\",\n        \"C-FLAT: control-flow attestation for embedded systems software\",\n        \"Lo-fat: Low-overhead control flow attestation in hardware\",\n        \"Atrium: Runtime attestation resilient under memory attacks\",\n        \"Oat: Attesting operation integrity of embedded devices\",\n        \"Tiny-CFA: Minimalistic control-flow attestation using verified proofs of execution\",\n        \"Dialed: Data integrity attestation for low-end embedded devices\",\n        \"Hardware-assisted remote runtime attestation for critical embedded systems\",\n        \"Dominance as a new trusted computing primitive for the internet of things\",\n        \"The lazarus effect: Healing compromised devices in the internet of small things\",\n        \"GAROTA: generalized active root-of-trust architecture\",\n        \"Privacy-from-birth: Protecting sensed data from malicious sensors with VERSA\",\n        \"Survivable key compromise in software update systems\",\n        \"Uptane: Securing software updates for automobiles\",\n        \"Scuba: Secure code update by attestation in sensor networks\",\n        \"Secure code update for embedded devices via proofs of secure erasure.\",\n        \"Secure erasure and code update in legacy sensors\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in CASU: Compromise Avoidance via Secure Update for Low-end Embedded Systems, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}