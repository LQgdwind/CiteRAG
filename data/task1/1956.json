{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RANC: Reconfigurable Architecture for Neuromorphic Computing\n\nPaper Abstract: Abstract Neuromorphic architectures have been introduced as platforms for energy efficient spiking neural network execution. The massive parallelism offered by these architectures has also triggered interest from non-machine learning application domains. In order to lift the barriers to entry for hardware designers and application developers we present RANC: a Reconfigurable Architecture for Neuromorphic Computing, an open-source highly flexible ecosystem that enables rapid experimentation with neuromorphic architectures in both software via C++ simulation and hardware via FPGA emulation. We present the utility of the RANC ecosystem by showing its ability to recreate behavior of the IBM’s TrueNorth and validate with direct comparison to IBM’s Compass simulation environment and published literature. RANC allows optimizing architectures based on application insights as well as prototyping future neuromorphic architectures that can support new classes of applications entirely. We demonstrate the highly parameterized and configurable nature of RANC by studying the impact of architectural changes on improving application mapping efficiency with quantitative analysis based on Alveo U250 FPGA. We present post routing resource usage and throughput analysis across implementations of Synthetic Aperture Radar classification and Vector Matrix Multiplication applications, and demonstrate a neuromorphic architecture that scales to emulating 259K distinct neurons and 73.3M distinct synapses.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A Survey of Neuromorphic Computing and Neural Networks in Hardware\",\n        \"Neuromorphic hardware in the loop: Training a deep spiking network on the BrainScaleS wafer-scale system\",\n        \"Convolutional networks for fast, energy-efficient neuromorphic computing\",\n        \"Decoding EEG and LFP signals using deep learning: Heading TrueNorth\",\n        \"Unsupervised learning of digit recognition using spike-timing-dependent plasticity\",\n        \"TrueHappiness: Neuromorphic emotion recognition on TrueNorth\",\n        \"Binary image classification using a neurosynaptic processor: A trade-off analysis\",\n        \"The TENNLab Suite of LIDAR-Based Control Applications for Recurrent, Spiking, Neuromorphic Systems\",\n        \"Dynamic programming with spiking neural computing\",\n        \"Sparse Coding by Spiking Neural Networks: Convergence Theory and Computational Results\",\n        \"Low-Power Neuromorphic Hardware for Signal Processing Applications: A Review of Architectural and System-Level Design Approaches\",\n        \"IEEE 754 floating-point addition for neuromorphic architecture\",\n        \"TrueNorth: Design and Tool Flow of a 65 mW 1 Million Neuron Programmable Neurosynaptic Chip\",\n        \"Loihi: A Neuromorphic Manycore Processor with On-Chip Learning\",\n        \"The VTR Project: Architecture and CAD for FPGAs from Verilog to Routing\",\n        \"Nest 2.20.0\",\n        \"Brian 2, an intuitive and efficient neural simulator\",\n        \"The NEURON Book\",\n        \"CARLsim 4: An Open Source Library for Large Scale, Biologically Detailed Spiking Neural Network Simulation using Heterogeneous Clusters\",\n        \"Compiling Spiking Neural Networks to Neuromorphic Hardware\",\n        \"FPGA Based Emulation Environment for Neuromorphic Architectures\",\n        \"TensorFlow: Large-scale machine learning on heterogeneous systems\",\n        \"Backpropagation for energy-efficient neuromorphic computing\",\n        \"A digital neurosynaptic core using embedded crossbar memory with 45pJ per spike in 45nm\",\n        \"Improving classification accuracy of feedforward neural networks for spiking neuromorphic chips\",\n        \"Adam: A method for stochastic optimization\",\n        \"Sparse coding using the locally competitive algorithm on the TrueNorth neurosynaptic system\",\n        \"Crowdsourcing the creation of image segmentation algorithms for connectomics\",\n        \"Bridge the gap between neural networks and neuromorphic hardware with a neural network compiler\",\n        \"MSTAR/IU Mixed Targets\",\n        \"An energy-efficient embedded implementation for target recognition in SAR imageries\",\n        \"BinaryConnect: Training Deep Neural Networks with binary weights during propagations\",\n        \"TrueNorth ecosystem for brain-inspired computing: Scalable systems, software, and applications\",\n        \"Understanding the design of IBM neurosynaptic system and its tradeoffs: A user perspective\",\n        \"PyNN: a common interface for neuronal network simulators\",\n        \"PyCARL: A PyNN Interface for Hardware-Software Co-Simulation of Spiking Neural Network\",\n        \"SpykeTorch: Efficient Simulation of Convolutional Spiking Neural Networks With at Most One Spike per Neuron\",\n        \"Akida Neuromorphic System-On-Chip\",\n        \"Introducing Qualcomm Zeroth Processors: Brain-Inspired Computing\",\n        \"SpiNNaker: A multi-core System-on-Chip for massively-parallel neural net simulation\",\n        \"A Scalable Multicore Architecture With Heterogeneous Memory Structures for Dynamic Neuromorphic Asynchronous Processors (DYNAPs)\",\n        \"NeuronFlow: A Hybrid Neuromorphic – Dataflow Processor Architecture for AI Workloads\",\n        \"SpinalFlow: An Architecture and Dataflow Tailored for Spiking Neural Networks\",\n        \"A 0.086-mm$^2$ 12.7-pJ/SOP 64k-Synapse 256-Neuron Online-Learning Digital Spiking Neuromorphic Processor in 28-nm CMOS\",\n        \"Minitaur, an Event-Driven FPGA-Based Spiking Network Accelerator\",\n        \"DANNA 2: Dynamic Adaptive Neural Network Arrays\",\n        \"DANNA: A neuromorphic software ecosystem\",\n        \"Nengo: a python tool for building large-scale functional brain models\",\n        \"Design Space Exploration of Hardware Spiking Neurons for Embedded Artificial Intelligence\",\n        \"ECG Classification Algorithm Based on STDP and R-STDP Neural Networks for Real-Time Monitoring on Ultra Low-Power Personal Wearable Devices\",\n        \"End to End Learning of a Multi-Layered Snn Based on R-Stdp for a Target Tracking Snake-Like Robot\",\n        \"STDP-Based Pruning of Connections and Weight Quantization in Spiking Neural Networks for Energy-Efficient Recognition\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in RANC: Reconfigurable Architecture for Neuromorphic Computing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}