{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: MARCA: Mamba Accelerator with ReConfigurable Architecture\n\nPaper Abstract: Abstract. State space model (SSM) especially Mamba has demonstrated remarkable capabilities in various domains. Compared to Transformers, Mamba reduces the quadratic computational complexity and achieves a higher algorithm accuracy (e.g., the accuracy of Mamba-2.8b is higher than OPT-6.7b). However, challenges still exist in accelerating Mamba computations. (1) Incompatibility between element-wise operations and Tensor Core. Linear operations (matrix multiplications) and element-wise operations are the two dominating operations in Mamba. The time proportion of element-wise operations escalates significantly (e.g., >>60% with 2048 input length). These operations do not need reduction, which is not compatible with the existing Tensor Core-based architectures (e.g., 1/16 normalized speed). (2) Large area overhead for nonlinear function unit. The optimized nonlinear function unit like exponential unit still occupies >>30% of the processing element (PE) area. (3) Large memory access but limited data sharing for element-wise operations. Linear and element-wise operations in Mamba exhibit large compute intensity variance (e.g., ∼similar-to\\sim3 orders of magnitude) and large read/write ratio variance (e.g., >>3 orders). Due to the limited data sharing in element-wise operations, it is useless to apply the existed methods like tiling to element-wise operations. In response to these challenges, we propose a Mamba accelerator with reconfigurable architecture, MARCA. Then, we propose three novel approaches in this paper. (1) Reduction alternative PE array architecture for both linear and element-wise operations. For linear operations, the reduction tree connected to PE arrays is enabled and executes the reduction operation. For element-wise operations, the reduction tree is disabled and the output bypasses. (2) Reusable nonlinear function unit based on the reconfigurable PE. We decompose the exponential function into element-wise operations and a shift operation by a fast biased exponential algorithm, and the activation function (SiLU) into a range detection and element-wise operations by a piecewise approximation algorithm. Thus, the reconfigurable PEs are reused to execute nonlinear functions with negligible accuracy loss. (3) Intra-operation and inter-operation buffer management strategy. We propose intra-operation buffer management strategy to maximize input data sharing for linear operations within operations, and inter-operation strategy for element-wise operations between operations. We conduct extensive experiments on Mamba model families with different sizes. MARCA achieves up to 463.22×\\times/11.66×\\times speedup and up to 9761.42×\\times/242.52×\\times energy efficiency compared to Intel Xeon 8358P CPU and NVIDIA Tesla A100 GPU implementations, respectively.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Einstein summation notation\",\n        \"Graph Mamba: Towards Learning on Graphs with State Space Models\",\n        \"Piqa: Reasoning about physical commonsense in natural language\",\n        \"On the opportunities and risks of foundation models\",\n        \"Nvidia a100 tensor core gpu: Performance and innovation\",\n        \"Think you have solved question answering? try arc, the ai2 reasoning challenge\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Sigmoid-weighted linear units for neural network function approximation in reinforcement learning\",\n        \"Position-location solutions by Taylor-series estimation\",\n        \"Mamba: Linear-time sequence modeling with selective state spaces\",\n        \"On the parameterization and initialization of diagonal state space models\",\n        \"Efficiently modeling long sequences with structured state spaces\",\n        \"Combining recurrent, convolutional, and continuous-time models with linear state space layers\",\n        \"Deep residual learning for image recognition\",\n        \"Intel Xeon Platinum 8358P Processor\",\n        \"STG-Mamba: Spatial-Temporal Graph Learning via Selective State Space Model\",\n        \"A coordinated tiling and batching framework for efficient GEMM on GPUs\",\n        \"PointMamba: A Simple State Space Model for Point Cloud Analysis\",\n        \"TSTC: Two-level Sparsity Tensor Core Enabling both Algorithm Flexibility and Hardware Efficiency\",\n        \"Point mamba: A novel point cloud backbone based on state space model with octree-based ordering strategy\",\n        \"Hardware accelerator for multi-head attention and position-wise feed-forward in the transformer\",\n        \"Ramulator 2.0: A Modern, Modular, and Extensible DRAM Simulator\",\n        \"Automatic speech recognition: a survey\",\n        \"Nvidia tensor core programmability, performance & precision\",\n        \"Pointer sentinel mixture models\",\n        \"Introducing LLaMA: A foundational, 65-billion-parameter large language model\",\n        \"Transformer for graphs: An overview from architecture perspective\",\n        \"CACTI 6.0: A tool to model large caches\",\n        \"Hardware implementation of the exponential function using Taylor series\",\n        \"NVIDIA A100 Tensor Core GPU Architecture\",\n        \"Highlights of the high-bandwidth memory (hbm) standard\",\n        \"The LAMBADA dataset: Word prediction requiring a broad discourse context\",\n        \"A fixed point exponential function accelerator for a neuromorphic many-core system\",\n        \"SiMBA: Simplified Mamba-Based Architecture for Vision and Multivariate Time series\",\n        \"Scalable diffusion models with transformers\",\n        \"Flex-sfu: Accelerating dnn activation functions by non-uniform piecewise approximation\",\n        \"Winogrande: An adversarial winograd schema challenge at scale\",\n        \"A fast, compact approximation of the exponential function\",\n        \"Scaling equations for the accurate prediction of CMOS device performance from 180 nm to 7 nm\",\n        \"Attention is all you need\",\n        \"Graph-mamba: Towards long-range graph sequence modeling with selective state spaces\",\n        \"Via: A novel vision-transformer accelerator based on fpga\",\n        \"From time series to linear system—Part I. Finite dimensional linear time invariant systems\",\n        \"Medmamba: Vision mamba for medical image classification\",\n        \"Hellaswag: Can a machine really finish your sentence?\",\n        \"Opt: Open pre-trained transformer language models\",\n        \"Point Could Mamba: Point Cloud Learning via State Space Model\",\n        \"Vision mamba: Efficient visual representation learning with bidirectional state space model\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in MARCA: Mamba Accelerator with ReConfigurable Architecture, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}