{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 62 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On the Effectiveness of Hybrid Pooling in Mixup-Based Graph Learning for Language Processing\n\nPaper Abstract: Abstract Graph neural network (GNN)-based graph learning has been popular in natural language and programming language processing, particularly in text and source code classification. Typically, GNNs are constructed by incorporating alternating layers which learn transformations of graph node features, along with graph pooling layers that use graph pooling operators (e.g., Max-pooling) to effectively reduce the number of nodes while preserving the semantic information of the graph. Recently, to enhance GNNs in graph learning tasks, Manifold-Mixup, a data augmentation technique that produces synthetic graph data by linearly mixing a pair of graph data and their labels, has been widely adopted. However, the performance of Manifold-Mixup can be highly affected by graph pooling operators, and there have not been many studies that are dedicated to uncovering such affection. To bridge this gap, we take an early step to explore how graph pooling operators affect the performance of Mixup-based graph learning. To that end, we conduct a comprehensive empirical study by applying Manifold-Mixup to a formal characterization of graph pooling based on 11 graph pooling operations (9 hybrid pooling operators, 2 non-hybrid pooling operators). The experimental results on both natural language datasets (Gossipcop, Politifact) and programming language datasets (JAVA250, Python800) demonstrate that hybrid pooling operators are more effective for Manifold-Mixup than the standard Max-pooling and the state-of-the-art graph multiset transformer (GMT) pooling, in terms of producing more accurate and robust models.\n\n{retrieved_text}\n\nGenerate exactly 62 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 62\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Text level graph neural network for text classification\",\n        \"A survey of machine learning for big code and naturalness\",\n        \"A comprehensive survey on graph neural networks\",\n        \"Hoppity: Learning graph transformations to detect and fix bugs in programs\",\n        \"Detecting code clones with graph neural network and flow-augmented abstract syntax tree\",\n        \"Learning to represent programs with graphs\",\n        \"Devign: Effective Vulnerability Identification by Learning Comprehensive Program Semantics via Graph Neural Networks\",\n        \"mixup: Beyond empirical risk minimization\",\n        \"Mixup for node and graph classification\",\n        \"Mixcode: Enhancing code classification by mixup-based data augmentation\",\n        \"Manifold mixup: Better representations by interpolating hidden states\",\n        \"When and how mixup improves calibration\",\n        \"How does mixup help with robustness and generalization?\",\n        \"Understanding Attention and Generalization in Graph Neural Networks\",\n        \"Rethinking pooling in graph neural networks\",\n        \"Understanding pooling in graph neural networks\",\n        \"Accurate learning of graph representations with graph multiset pooling\",\n        \"Regvd: Revisiting graph neural networks for vulnerability detection\",\n        \"Graph convolutional networks for text classification\",\n        \"Every document owns its structure: Inductive text classification via graph neural networks\",\n        \"Boosting source code learning with data augmentation: An empirical study\",\n        \"Self-supervised bug detection and repair\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Diffusion-convolutional neural networks\",\n        \"Dynamic edge-conditioned filters in convolutional neural networks on graphs\",\n        \"How powerful are graph neural networks?\",\n        \"An end-to-end deep learning architecture for graph classification\",\n        \"Graph u-nets\",\n        \"Self-attention graph pooling\",\n        \"Towards sparse hierarchical graph classifiers\",\n        \"Graph convolutional networks with eigenpooling\",\n        \"Haarpooling: Graph pooling with compressive haar basis\",\n        \"Spectral clustering with graph neural networks for graph pooling\",\n        \"Structpool: Structured graph pooling via conditional random fields\",\n        \"Asap: Adaptive structure aware pooling for learning hierarchical graph representations\",\n        \"Gated graph sequence neural networks\",\n        \"Semi-supervised graph classification: A hierarchical graph perspective\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"A survey on image data augmentation for deep learning\",\n        \"Augmenting data with mixup for sentence classification: An empirical study\",\n        \"Mixup-transformer: Dynamic data augmentation for NLP tasks\",\n        \"MixText: Linguistically-informed interpolation of hidden space for semi-supervised text classification\",\n        \"SeqMix: Augmenting active sequence labeling via sequence mixup\",\n        \"SSMix: Saliency-based span mixup for text classification\",\n        \"An empirical study of contextual data augmentation for Japanese zero anaphora resolution\",\n        \"An empirical survey of data augmentation for limited data learning in nlp\",\n        \"Data augmentation by program transformation\",\n        \"Neural message passing for quantum chemistry\",\n        \"Robustness and generalization\",\n        \"How robust is the internet?\",\n        \"Exploring generalization in deep learning\",\n        \"Dropgnn: Random dropouts increase the expressiveness of graph neural networks\",\n        \"Topological analysis of cloud service connectivity\",\n        \"Graph metrics for network robustness—a survey\",\n        \"User preference-aware fake news detection\",\n        \"Codenet: A large-scale ai for code dataset for learning a diversity of coding tasks\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Graph attention networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Adam: A method for stochastic optimization\",\n        \"Cutmix: Regularization strategy to train strong classifiers with localizable features\"\n    ],\n    \"reasoning\": \"Selected these 62 references because they represent foundational work and recent advances in On the Effectiveness of Hybrid Pooling in Mixup-Based Graph Learning for Language Processing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}