{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Models That Prove Their Own Correctness\n\nPaper Abstract: Abstract How can we trust the correctness of a learned model on a particular input of interest? Model accuracy is typically measured on average over a distribution of inputs, giving no guarantee for any fixed input. This paper proposes a theoretically-founded solution to this problem: to train Self-Proving models that prove the correctness of their output to a verification algorithm VùëâV via an Interactive Proof. Self-Proving models satisfy that, with high probability over a random input, the model generates a correct output and successfully proves its correctness to VùëâV\\!. The soundness property of VùëâV guarantees that, for every input, no model can convince VùëâV of the correctness of an incorrect output. Thus, a Self-Proving model proves correctness of most of its outputs, while all incorrect outputs (of any model) are detected by VùëâV. We devise a generic method for learning Self-Proving models, and we prove convergence bounds under certain assumptions. The theoretical framework and results are complemented by experiments on an arithmetic capability: computing the greatest common divisor (GCD) of two integers. Our learning method is used to train a Self-Proving transformer that computes the GCD and proves the correctness of its answer.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On the theory of policy gradient methods: Optimality, approximation, and distribution shift\",\n        \"Learning to give checkable answers with prover-verifier games\",\n        \"Theorie Generale Des Equations Algebriques\",\n        \"Scalable AI safety via doubly-efficient debate\",\n        \"Linear algebra with transformers\",\n        \"Can transformers learn the greatest common divisor?\",\n        \"Deep reinforcement learning from human preferences\",\n        \"Probabilistically checkable debate systems and nonapproximability of pspace-hard functions\",\n        \"The lean theorem prover (system description)\",\n        \"Finding structure in time\",\n        \"Mathematical capabilities of chatgpt\",\n        \"Computational complexity - a conceptual perspective\",\n        \"On the complexity of interactive proofs with bounded communication\",\n        \"Simple doubly-efficient interactive proof systems for locally-characterizable sets\",\n        \"On interactive proofs with a laconic prover\",\n        \"The knowledge complexity of interactive proof-systems (extended abstract)\",\n        \"Delegating computation: Interactive proofs for muggles\",\n        \"Interactive proofs for verifying machine learning\",\n        \"SEPIA: search for proofs using inferred automata\",\n        \"Measuring mathematical problem solving with the MATH dataset\",\n        \"AI safety via debate\",\n        \"Reducibility among combinatorial problems\",\n        \"The Art of Computer Programming, Volume II: Seminumerical Algorithms\",\n        \"Exploration in deep reinforcement learning: A survey\",\n        \"Teaching arithmetic to small transformers\",\n        \"Let‚Äôs verify step by step\",\n        \"Auto-regressive next-token predictors are universal learners\",\n        \"Pseudointelligence: A unifying lens on language model evaluation\",\n        \"Overcoming exploration in reinforcement learning with demonstrations\",\n        \"Investigating the limitations of the transformers with simple arithmetic tasks\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Smooth and strong pcps\",\n        \"Generative language modeling for automated theorem proving\",\n        \"Constant-round interactive proofs for delegating computation\",\n        \"Mathematical discoveries from program search with large language models\",\n        \"Understanding Machine Learning - From Theory to Algorithms\",\n        \"IP = PSPACE\",\n        \"Optimal depth neural networks for multiplication and related problems\",\n        \"Policy gradient methods for reinforcement learning with function approximation\",\n        \"Solving olympiad geometry without human demonstrations\",\n        \"Language models don‚Äôt always say what they think: Unfaithful explanations in chain-of-thought prompting\",\n        \"Solving math word problems with process- and outcome-based feedback\",\n        \"A theory of the learnable\",\n        \"Attention is all you need\",\n        \"Interpretability guarantees with Merlin-Arthur classifiers\",\n        \"Can chatgpt defend its belief in truth? evaluating LLM reasoning via debate\",\n        \"Chain-of-thought prompting elicits reasoning in large language models\",\n        \"Naturalprover: Grounded mathematical proof generation with language models\",\n        \"Leandojo: Theorem proving with retrieval-augmented language models\",\n        \"Chain of thought imitation with procedure cloning\",\n        \"Doubly efficient interactive proofs for general arithmetic circuits with linear prover time\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Models That Prove Their Own Correctness, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}