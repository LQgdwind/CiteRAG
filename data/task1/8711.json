{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: GPU-initiated Fine-grained Overlap of Collective Communication with Computation\n\nPaper Abstract: Abstract In order to satisfy their ever increasing capacity and compute requirements, many machine learning models are distributed across multiple nodes using space-efficient parallelism strategies. As a result, collective communications are often on the critical path, and hiding their latency by overlapping kernel-granular communication and computation is difficult due to the absence of independent computation. In this work, we propose fusing computation with communication using GPU-initiated networking, and leverage GPUs’ massive parallelism to enable fine-grained overlap of the fused operations. We have developed a single, self-contained GPU kernel where workgroups (WGs) immediately communicate their results to remote GPUs when they complete their computation. Meanwhile, other WGs within the same kernel perform overlapping computation, maintaining high ALU utilization. Such fine-grain overlapping provides the additional benefit that peak network bandwidth demand is reduced and communication is spread across the entire lifetime of application rather than only at kernel boundaries. Furthermore, we propose zero-copy optimizations for peer-to-peer GPU communication where the data computed by one GPU is directly written to the destination buffers within the peer GPUs, eliminating intermediate stores and extra buffering. Our approach leverages the emerging multi-node GPU system trend where GPUs are physically close to network with direct GPU-NIC interconnects. We demonstrate our approach by creating an embedding + All-to-All fused kernel which overlaps embedding operations and the dependent all-to-all collective in DLRM models. We evaluate our approach both using simulation and real hardware. Our evaluations show that our approach can effectively overlap All-to-All communication with embedding computations, subsequently reducing their combined execution time by 31% on average (up to 58%) for inter-node and by 25% (up to 35%) for intra-node configurations. Scale-out simulations indicate that our approach reduces DLRM execution time by ∼similar-to\\sim10% for 128 node system.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"AMD CDNA™ 2 ARCHITECTURE\",\n        \"AMD GCN Assembly: Cross-Lane Operations\",\n        \"AMD Infinity Architecture\",\n        \"AMD Instinct MI200 Instruction Set Architecture\",\n        \"An Introduction to CUDA-Aware MPI\",\n        \"CUDAPLUGGABLEALLOCATOR\",\n        \"Deep Learning Recommendation Model for Personalization and Recommendation Systems\",\n        \"Fully Sharded Data Parallel: faster AI training with fewer GPUs\",\n        \"GPUDirect RDMA\",\n        \"HIP: Heterogenous-computing Interface for Portability\",\n        \"IBTA Releases New InfiniBand Architecture Specification\",\n        \"ML Parallelism\",\n        \"MPI Documents\",\n        \"NCCL: Optimized primitives for inter-gpu communication\",\n        \"NVIDIA Grace Hopper Superchip Architecture In-Depth\",\n        \"NVIDIA Hopper Architecture In-Depth\",\n        \"NVLink and NVSwitch\",\n        \"NVSHMEM\",\n        \"OccupancyHIP API\",\n        \"OpenSHMEM Application Programming Interface\",\n        \"ROC-profiler\",\n        \"RoCE Introduction\",\n        \"ROCm Communication Collectives Library\",\n        \"ROC_SHMEM\",\n        \"The EPYC™ CPU and INSTINCT™ MI250X GPUs in Frontier\",\n        \"TORCHSCRIPT\",\n        \"XLA: Optimizing Compiler for Machine Learning\",\n        \"Accelerating recommendation system training by leveraging popular choices\",\n        \"On optimizing operator fusion plans for large-scale machine learning in systemml\",\n        \"Synthesizing optimal collective algorithms\",\n        \"High-performance key-value store on openshmem\",\n        \"Mixed dimension embeddings with application to memory-efficient recommendation systems\",\n        \"A study of persistent threads style gpu programming for gpgpu workloads\",\n        \"The architectural implications of facebook’s dnn-based personalized recommendation\",\n        \"Cuda m3: Designing efficient cuda managed memory-aware mpi by exploiting gdr and ipc\",\n        \"GPU Initiated OpenSHMEM: Correct and Efficient Intra-Kernel Networking for DGPUs\",\n        \"Communication algorithm-architecture co-design for distributed deep learning\",\n        \"Tutel: Adaptive mixture-of-experts at scale\",\n        \"Performance evaluation of mpi libraries on gpu-enabled openpower architectures: Early experiences\",\n        \"Minimizing gpu kernel launch overhead in deep learning inference on mobile gpus\",\n        \"Locality-aware cta clustering for modern gpus\",\n        \"A performance study to guide rdma programming decisions\",\n        \"Software-hardware co-design for fast and scalable training of deep learning recommendation models\",\n        \"Dnnfusion: Accelerating deep neural networks execution with advanced operator fusion\",\n        \"Deepspeed-moe: Advancing mixture-of-experts inference and training to power next-generation ai scale\",\n        \"Zero: Memory optimizations toward training trillion parameter models\",\n        \"ASTRA-SIM: Enabling SW/HW Co-Design Exploration for Distributed DL Training Platforms\",\n        \"Themis: A network bandwidth-aware collective scheduling policy for distributed training of dl models\",\n        \"Compositional embeddings using complementary partitions for memory-efficient recommendation systems\",\n        \"Mg-wfbp: Efficient data communication for distributed synchronous sgd algorithms\",\n        \"Machine learning model sizes and the parameter gap\",\n        \"Overlap communication with dependent computation via decomposition in large deep learning models\",\n        \"Empowering gnns with fine-grained communication-computation pipelining on multi-gpu platforms\",\n        \"Fleche: An efficient gpu embedding cache for personalized recommendations\",\n        \"Poseidon: An efficient communication architecture for distributed deep learning on gpu clusters\",\n        \"Understanding data storage and ingestion for large-scale deep recommendation model training: Industrial product\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in GPU-initiated Fine-grained Overlap of Collective Communication with Computation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}