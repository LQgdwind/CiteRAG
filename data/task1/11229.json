{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Efficient Synthesis of Symbolic Distributed Protocols by Sketching This material is partly supported by the National Science Foundation under Graduate Research Fellowship Grant #1938052, and Award #2319500. Any opinion, findings, and conclusions or recommendations expressed in this material are those of the authors(s) and do not necessarily reflect the views of the National Science Foundation.\n\nPaper Abstract: Abstract We present a novel and efficient method for synthesis of parameterized distributed protocols by sketching. Our method is both syntax-guided and counterexample-guided, and utilizes a fast equivalence reduction technique that enables efficient completion of protocol sketches, often significantly reducing the search space of candidate completions by several orders of magnitude. To our knowledge, our tool, Scythe, is the first synthesis tool for the widely used specification language TLA+. We evaluate Scythe on a diverse benchmark of distributed protocols, demonstrating the ability to synthesize a large scale distributed Raft-based dynamic reconfiguration protocol beyond the scale of what existing synthesis techniques can handle.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Syntax-guided synthesis\",\n        \"Synthesizing Finite-state Protocols from Scenarios and Requirements\",\n        \"Scaling enumerative program synthesis via divide and conquer\",\n        \"Automatic completion of distributed protocols with symmetry\",\n        \"Automatic synthesis of distributed protocols\",\n        \"Synthesis of self-stabilising and byzantine-resilient distributed systems\",\n        \"Tendermint: Byzantine fault tolerance in the age of blockchains\",\n        \"Ethereum white paper: A next generation smart contract & decentralized application platform\",\n        \"Spanner: Google’s globally distributed database\",\n        \"TLA+ Proofs\",\n        \"Dynamo: Amazon’s highly available key-value store\",\n        \"scythe-fmcad2024\",\n        \"Synthesis of distributed protocols by enumeration modulo isomorphisms\",\n        \"Tree automata and tree grammars\",\n        \"Bounded synthesis\",\n        \"IvyBench\",\n        \"On Symmetry and Quantification: A New Approach to Verify Distributed Protocols\",\n        \"Towards an automatic proof of lamport’s paxos\",\n        \"Program synthesis\",\n        \"Finding Invariants of Distributed Systems: It’s a Small (Enough) World After All\",\n        \"Learning distributed protocols with zero knowledge\",\n        \"Synthesis of distributed agreement-based systems with efficiently-decidable verification\",\n        \"Parameterized synthesis\",\n        \"Synthesizing solutions to the leader election problem using model checking and genetic programming\",\n        \"Specifying Systems: The TLA+ Language and Tools for Hardware and Software Engineers\",\n        \"Synthesis of distributed algorithms with parameterized threshold guards\",\n        \"Parameterized synthesis of self-stabilizing protocols in symmetric networks\",\n        \"How Amazon Web Services Uses Formal Methods\",\n        \"In search of an understandable consensus algorithm\",\n        \"Paxos Made EPR: Decidable Reasoning about Distributed Protocols\",\n        \"Ivy: Safety Verification by Interactive Generalization\",\n        \"Distributed reactive systems are hard to synthesize\",\n        \"CVC4SY: Smart and fast term enumeration for syntax-guided synthesis\",\n        \"Scalable, Interpretable Distributed Protocol Verification by Inductive Proof Slicing\",\n        \"Formal verification of a distributed dynamic reconfiguration protocol\",\n        \"Plain and Simple Inductive Invariant Inference for Distributed Protocols in TLA++{}^{\\\\mbox{+}}\",\n        \"The sketching approach to program synthesis\",\n        \"Program sketching\",\n        \"Undecidability in decentralized supervision\",\n        \"Undecidable Problems of Decentralized Observation and Control on Regular Languages\",\n        \"TRANSIT: specifying protocols with concolic snippets\",\n        \"DuoAI: Fast, Automated Inference of Inductive Invariants for Verifying Distributed Protocols\",\n        \"Mostly automated verification of liveness properties for distributed protocols with ranking functions\",\n        \"DistAI: Data-Driven Automated Invariant Learning for Distributed Protocols\",\n        \"Model Checking TLA+ Specifications\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Efficient Synthesis of Symbolic Distributed Protocols by Sketching This material is partly supported by the National Science Foundation under Graduate Research Fellowship Grant #1938052, and Award #2319500. Any opinion, findings, and conclusions or recommendations expressed in this material are those of the authors(s) and do not necessarily reflect the views of the National Science Foundation., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}