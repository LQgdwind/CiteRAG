{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Structural Information Preserving for Graph-to-Text Generation\n\nPaper Abstract: Abstract The task of graph-to-text generation aims at producing sentences that preserve the meaning of input graphs. As a crucial defect, the current state-of-the-art models may mess up or even drop the core structural information of input graphs when generating outputs. We propose to tackle this problem by leveraging richer training signals that can guide our model for preserving input information. In particular, we introduce two types of autoencoding losses, each individually focusing on different aspects (a.k.a. views) of input graphs. The losses are then back-propagated to better calibrate our model via multi-task training. Experiments on two benchmarks for graph-to-text generation show the effectiveness of our approach over a state-of-the-art baseline. Our code is available at http://github.com/Soistesimmer/AMR-multiview.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Towards string-to-tree neural machine translation\",\n        \"Constrained decoding for neural NLG from compositional representations in task-oriented dialogue\",\n        \"Abstract meaning representation for sembanking\",\n        \"Graph-to-sequence learning using gated graph neural networks\",\n        \"Graph transformer for graph-to-sequence learning\",\n        \"Factorising amr generation through syntax\",\n        \"Learning phrase representations using rnn encoderâ€“decoder for statistical machine translation\",\n        \"Structural neural encoders for amr-to-text generation\",\n        \"Meteor universal: Language specific translation evaluation for any target language\",\n        \"Deep biaffine attention for neural dependency parsing\",\n        \"Semantic noise matters for neural natural language generation\",\n        \"Findings of the e2e nlg challenge\",\n        \"Cmu at semeval-2016 task 8: Graph-based amr parsing with infinite ramp loss\",\n        \"The webnlg challenge: Generating text from rdf data\",\n        \"Densely connected graph convolutional networks for graph-to-sequence learning\",\n        \"Neural text generation from rich semantic representations\",\n        \"Long short-term memory\",\n        \"Improving language generation from feature-rich tree-structured data with relational graph convolutional encoders\",\n        \"Learning a neural semantic parser from user feedback\",\n        \"Cross-domain ner using cross-domain language modeling\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Text generation from knowledge graphs with graph transformers\",\n        \"Neural amr: Sequence-to-sequence models for parsing and generation\",\n        \"Handwritten digit recognition with a back-propagation network\",\n        \"Gated graph sequence neural networks\",\n        \"Empower sequence labeling with task-aware neural language model\",\n        \"Neural multitask learning for simile recognition\",\n        \"An amr aligner tuned by transition-based parser\",\n        \"GPT-too: A language-model-first approach for AMR-to-text generation\",\n        \"Deep graph convolutional encoders for structured data to text generation\",\n        \"An efficient algorithm for projective dependency parsing\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"Aligning english strings with abstract meaning representation graphs\",\n        \"Language models are unsupervised multitask learners\",\n        \"Semi-supervised multitask learning for sequence labeling\",\n        \"Jointly learning to label sentences and tokens\",\n        \"Enhancing amr-to-text generation with dual graph representations\",\n        \"Neural machine translation of rare words with subword units\",\n        \"Semantic neural machine translation using amr\",\n        \"A graph-to-sequence model for amr-to-text generation\",\n        \"Lattice-based recurrent neural network encoders for neural machine translation\",\n        \"A structured syntax-semantics interface for english-amr alignment\",\n        \"Gtr-lstm: A triple encoder for sentence generation from rdf data\",\n        \"Neural machine translation with reconstruction\",\n        \"Attention is all you need\",\n        \"Graph attention networks\",\n        \"Getting the most out of amr parsing\",\n        \"Amr-to-text generation with graph transformer\",\n        \"A tree-based decoder for neural machine translation\",\n        \"Challenges in data-to-document generation\",\n        \"Sequence-to-dependency neural machine translation\",\n        \"Sql-to-text generation with graph-to-sequence model\",\n        \"Modeling graph structure in transformer for better amr-to-text generation\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Structural Information Preserving for Graph-to-Text Generation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}