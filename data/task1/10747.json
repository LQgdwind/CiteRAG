{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Democratizing Uncertainty Quantification\n\nPaper Abstract: Abstract Uncertainty Quantification (UQ) is vital to safety-critical model-based analyses, but the widespread adoption of sophisticated UQ methods is limited by technical complexity. In this paper, we introduce UM-Bridge (the UQ and Modeling Bridge), a high-level abstraction and software protocol that facilitates universal interoperability of UQ software with simulation codes. It breaks down the technical complexity of advanced UQ applications and enables separation of concerns between experts. UM-Bridge democratizes UQ by allowing effective interdisciplinary collaboration, accelerating the development of advanced UQ methods, and making it easy to perform UQ analyses from prototype to High Performance Computing (HPC) scale. In addition, we present a library of ready-to-run UQ benchmark problems, all easily accessible through UM-Bridge. These benchmarks support UQ methodology research, enabling reproducible performance comparisons. We demonstrate UM-Bridge with several scientific applications, harnessing HPC resources even using UQ codes not designed with HPC support.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Inverse problems: A Bayesian perspective\",\n        \"Automatic differentiation variational inference\",\n        \"Hybrid Monte Carlo\",\n        \"The No-U-Turn sampler: adaptively setting path lengths in Hamiltonian Monte Carlo.\",\n        \"SciPy 1.0: Fundamental Algorithms for Scientific Computing in Python\",\n        \"Stan: A Probabilistic Programming Language\",\n        \"Probabilistic programming in Python using PyMC3\",\n        \"Pyro: Deep Universal Probabilistic Programming\",\n        \"CUQIpy – Part II: computational uncertainty quantification for PDE-based inverse problems in Python\",\n        \"CUQIpy – Part I: computational uncertainty quantification for inverse problems in Python\",\n        \"emcee: The MCMC Hammer\",\n        \"MUQ: The MIT Uncertainty Quantification Library\",\n        \"PyApprox: A software package for sensitivity analysis, Bayesian inference, optimal experimental design, and multi-fidelity uncertainty quantification and surrogate modeling\",\n        \"QMCPy: A quasi-Monte Carlo Python Library\",\n        \"Algorithm X: The Sparse Grids Matlab Kit - a Matlab Implementation of Sparse Grids for High-Dimensional Function Approximation and Uncertainty Quantification Just Accepted\",\n        \"tinyDA\",\n        \"TT-Toolbox\",\n        \"UQpy v4.1: Uncertainty quantification with Python\",\n        \"The deal.II finite element library: design, features, and insights\",\n        \"A Derivative-Free Line-Search Algorithm for Simulation-Driven Design Optimization Using Multi-Fidelity Computations\",\n        \"A Benchmark for the Bayesian Inversion of Coefficients in Partial Differential Equations\",\n        \"hIPPYlib-MUQ: A Bayesian Inference Software Framework for Integration of Data with Complex Predictive Models under Uncertainty\",\n        \"Dakota, a multilevel parallel object-oriented framework for design optimization, parameter estimation, uncertainty quantification and sensitivity analysis: Version 6.12 user’s Manual\",\n        \"lagun\",\n        \"UQLab: A Framework for Uncertainty Quantification in Matlab\",\n        \"UM-Bridge: Uncertainty quantification and modeling bridge\",\n        \"The Functional Mockup Interface for Tool independent Exchange of Simulation Models\",\n        \"preCICE v2: A sustainable and user-friendly coupling library [version 2; peer review: 2 approved]\",\n        \"The LINPACK Benchmark: An explanation\",\n        \"The SCEC/USGS Dynamic Earthquake Rupture Code Verification Exercise\",\n        \"A Suite of Exercises for Verifying Dynamic Earthquake Rupture Codes\",\n        \"A3mark: A publicly available online web service for seismic attribute benchmarking\",\n        \"Scalability of high-performance PDE solvers\",\n        \"MORwiki - Model Order Reduction Wiki\",\n        \"Stochastic Collocation Methods: A Survey\",\n        \"Equation of State Calculations by Fast Computing Machines\",\n        \"Multilevel Monte Carlo Path Simulation\",\n        \"A Hierarchical Multilevel Markov Chain Monte Carlo Algorithm with Applications to Uncertainty Quantification in Subsurface Flow\",\n        \"Multilevel Delayed Acceptance MCMC with an Adaptive Error Model in PyMC3\",\n        \"Complexity Analysis of Accelerated MCMC Methods for Bayesian Inversion\",\n        \"Multilevel Dimension-Independent Likelihood-Informed MCMC for Large-Scale Inverse Problems\",\n        \"Multilevel Delayed Acceptance MCMC\",\n        \"A Multilevel Stochastic Collocation Method for Partial Differential Equations with Random Input Data\",\n        \"A Multi-Index Markov Chain Monte Carlo Method\",\n        \"Comparing Multi-Index Stochastic Collocation and Multi-Fidelity Stochastic Radial Basis Functions for Forward Uncertainty Quantification of Ship Resistance\",\n        \"Adaptive multi-index collocation for uncertainty quantification and sensitivity analysis\",\n        \"It4innovations/hyperqueue: v0.16.0\",\n        \"Singularity: Scientific containers for mobility of compute\",\n        \"Docker: lightweight linux containers for consistent development and deployment\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Democratizing Uncertainty Quantification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}