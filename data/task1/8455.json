{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Automatic Gradient Descent:11Deep Learning without Hyperparameters\n\nPaper Abstract: Abstract The architecture of a deep neural network is defined explicitly in terms of the number of layers, the width of each layer and the general network topology. Existing optimisation frameworks neglect this information in favour of implicit architectural information (e.g. second-order methods) or architecture-agnostic distance functions (e.g. mirror descent). Meanwhile, the most popular optimiser in practice—Adam—is based on heuristics. This paper builds a new framework for deriving optimisation algorithms that explicitly leverage neural architecture. The theory extends mirror descent to non-convex composite objective functions: the idea is to transform a Bregman divergence to account for the non-linear structure of neural architecture. Working through the details for deep fully-connected networks yields automatic gradient descent: a first-order optimiser without any hyperparameters. Automatic gradient descent trains both fully-connected and convolutional networks out-of-the-box and at ImageNet scale. A PyTorch implementation is available at https://github.com/jxbz/agd and also in Appendix B. Overall, the paper supplies a rigorous theoretical foundation for a next-generation of architecture-dependent optimisers that work automatically and without hyperparameters.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Finding approximate local minima faster than gradient descent\",\n        \"Second-order stochastic optimization for machine learning in linear time\",\n        \"Theano: A Python framework for fast computation of mathematical expressions\",\n        \"Natural gradient works efficiently in learning\",\n        \"Stochastic gradient/mirror descent: Minimax optimality and implicit regularization\",\n        \"Optimisation & Generalisation in Networks of Neurons\",\n        \"On the distance between two neural networks and the stability of learning\",\n        \"Numerical Methods for Least Squares Problems\",\n        \"Optimization methods for large-scale machine learning\",\n        \"The relaxation method of finding the common point of convex sets and its application to the solution of problems in convex programming\",\n        \"High-performance large-scale image recognition without normalization\",\n        \"Layer rotation: A surprisingly simple indicator of generalization in deep networks?\",\n        \"Gradient descent on neural networks typically occurs at the edge of stability\",\n        \"Exploring the role of loss functions in multiclass classification\",\n        \"ImageNet: A large-scale hierarchical image database\",\n        \"Matrix nearness problems with Bregman divergences\",\n        \"Investigating generalization by controlling normalized margin\",\n        \"Deep Learning\",\n        \"Deep residual learning for image recognition\",\n        \"Deep reinforcement learning that matters\",\n        \"Evaluation of neural architectures trained with square loss vs. cross-entropy in classification tasks\",\n        \"Neural tangent kernel: Convergence and generalization in neural networks\",\n        \"Fantastic generalization measures and where to find them\",\n        \"Perturbation Theory for Linear Operators\",\n        \"Adam: A method for stochastic optimization\",\n        \"Learning multiple layers of features from tiny images\",\n        \"MM Optimization Algorithms\",\n        \"Wide neural networks of any depth evolve as linear models under gradient descent\",\n        \"Loss landscapes and optimization in over-parameterized non-linear systems and neural networks\",\n        \"Train CIFAR-10 with PyTorch\",\n        \"Multiplicative dynamics underlie the emergence of the log-normal distribution of spine sizes in the neocortex in vivo\",\n        \"Are GANs created equal? A large-scale study\",\n        \"Problem complexity and method efficiency in optimization\",\n        \"Cubic regularization of Newton method and its global performance\",\n        \"Numerical Optimization\",\n        \"ICML 2020 tutorial on parameter-free online optimization\",\n        \"Revisiting natural gradient for deep networks\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"The exploding gradient problem demystified\",\n        \"Learning representations by back-propagating errors\",\n        \"Descending through a crowded valley—benchmarking deep learning optimizers\",\n        \"The cost of training NLP models: A concise overview\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Perturbation of the SVD in the presence of small singular values\",\n        \"Mirror descent maximizes generalized margin and can be implemented efficiently\",\n        \"Attention is all you need\",\n        \"Das asymptotische Verteilungsgesetz der Eigenwerte linearer partieller Differentialgleichungen (mit einer Anwendung auf die Theorie der Hohlraumstrahlung)\",\n        \"Tensor programs IV: Feature learning in infinite-width neural networks\",\n        \"Tuning large neural networks via zero-shot hyperparameter transfer\",\n        \"Scaling SGD batch size to 32K for ImageNet training\",\n        \"Why gradient clipping accelerates training: A theoretical justification for adaptivity\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Automatic Gradient Descent:11Deep Learning without Hyperparameters, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}