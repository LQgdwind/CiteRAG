{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On-policy Distillation of Language Models: Learning from Self-Generated Mistakes\n\nPaper Abstract: Abstract Knowledge distillation (KD) is widely used for compressing a teacher model to reduce its inference cost and memory footprint, by training a smaller student model. However, current KD methods for auto-regressive sequence models suffer from distribution mismatch between output sequences seen during training and those generated by the student during inference. To address this issue, we introduce Generalized Knowledge Distillation (GKD). Instead of solely relying on a fixed set of output sequences, GKD trains the student on its self-generated output sequences by leveraging feedback from the teacher on such sequences. Unlike supervised KD approaches, GKD also offers the flexibility to employ alternative loss functions between the student and teacher, which may be useful when the student lacks the expressivity to mimic the teacher’s distribution. Furthermore, GKD facilitates the seamless integration of distillation with RL fine-tuning of language models. We demonstrate the efficacy of GKD for distilling auto-regressive T5 language models for task-specific distillation on summarization, translation, and reasoning tasks, and task-agnostic distillation for instruction tuning.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Reincarnating reinforcement learning: Reusing prior computation to accelerate progress\",\n        \"Why exposure bias matters: An imitation learning perspective of error accumulation in language generation\",\n        \"Scheduled sampling for sequence prediction with recurrent neural networks\",\n        \"Findings of the 2014 workshop on statistical machine translation\",\n        \"Model compression\",\n        \"Relating neural text degeneration to exposure bias\",\n        \"Palm: Scaling language modeling with pathways\",\n        \"Scaling instruction-finetuned language models\",\n        \"Training verifiers to solve math word problems\",\n        \"Knowledge distillation of large language models\",\n        \"Exposure bias versus self-recovery: Are distortions really incremental for autoregressive text generation?\",\n        \"Distilling the knowledge in a neural network\",\n        \"Large language models are reasoning teachers\",\n        \"Distilling step-by-step! outperforming larger language models with less training data and smaller model sizes\",\n        \"How (not) to train your generative model: Scheduled sampling, likelihood, adversary?\",\n        \"Tinybert: Distilling bert for natural language understanding\",\n        \"Scaling laws for neural language models\",\n        \"Hg-dagger: Interactive imitation learning with human experts\",\n        \"Sequence-level knowledge distillation\",\n        \"Reverse vs forward kl, December 2017.\",\n        \"Explanations from large language models make small reasoners better\",\n        \"Autoregressive knowledge distillation through imitation learning\",\n        \"Rouge: A package for automatic evaluation of summaries\",\n        \"Online speculative decoding\",\n        \"Teaching small language models to reason\",\n        \"Orca: Progressive learning from complex explanation traces of gpt-4\",\n        \"Don’t give me the details, just the summary! topic-aware convolutional neural networks for extreme summarization\",\n        \"Show your work: Scratchpads for intermediate computation with language models\",\n        \"Training language models to follow instructions with human feedback\",\n        \"Actor-mimic: Deep multitask and transfer reinforcement learning\",\n        \"Efficient training of artificial neural networks for autonomous navigation\",\n        \"Robust speech recognition via large-scale weak supervision\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Sequence level training with recurrent neural networks\",\n        \"Factually consistent summarization via reinforcement learning with textual entailment feedback\",\n        \"Efficient reductions for imitation learning\",\n        \"A reduction of imitation learning and structured prediction to no-regret online learning\",\n        \"Distilbert, a distilled version of bert: smaller, faster, cheaper and lighter\",\n        \"Adafactor: Adaptive learning rates with sublinear memory cost\",\n        \"Beyond human data: Scaling self-training for problem-solving with language models\",\n        \"Phenaki: Variable length video generation from open domain textual description\",\n        \"Minilm: Deep self-attention distillation for task-agnostic compression of pre-trained transformers\",\n        \"Chain of thought prompting elicits reasoning in large language models\",\n        \"f-divergence minimization for sequence-level knowledge distillation\",\n        \"A study of reinforcement learning for neural machine translation\",\n        \"A gift from knowledge distillation: Fast optimization, network minimization and transfer learning\",\n        \"Scaling autoregressive models for content-rich text-to-image generation\",\n        \"Bridging the gap between training and inference for neural machine translation\",\n        \"Distillspec: Improving speculative decoding via knowledge distillation\",\n        \"Texygen: A benchmarking platform for text generation models\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in On-policy Distillation of Language Models: Learning from Self-Generated Mistakes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}