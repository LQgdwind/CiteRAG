{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 53 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Strided Difference Bound Matrices\n\nPaper Abstract: Abstract A wide range of symbolic analysis and optimization problems can be formalized using polyhedra. Sub-classes of polyhedra, also known as sub-polyhedral domains, are sought for their lower space and time complexity. We introduce the Strided Difference Bound Matrix (SDBM) domain, which represents a sweet spot in the context of optimizing compilers. Its expressiveness and efficient algorithms are particularly well suited to the construction of machine learning compilers. We present decision algorithms, abstract domain operators and computational complexity proofs for SDBM. We also conduct an empirical study with the MLIR compiler framework to validate the domain’s practical applicability. We characterize a sub-class of SDBMs that frequently occurs in practice, and demonstrate even faster algorithms on this sub-class.\n\n{retrieved_text}\n\nGenerate exactly 53 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 53\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Optimizing Compilers for Modern Architectures: A Dependence-based Approach\",\n        \"Timed automata\",\n        \"A theory of timed automata\",\n        \"Precise widening operators for convex polyhedra\",\n        \"Smt-based translation validation for machine learning compiler\",\n        \"Uppaal — a tool suite for automatic verification of real-time systems\",\n        \"An enumerative approach for analyzing time petri nets\",\n        \"A static analyzer for large safety-critical software\",\n        \"Abstract Interpretation and Abstract Domains\",\n        \"Rodinia: A benchmark suite for heterogeneous computing\",\n        \"TVM: An automated End-to-End optimizing compiler for deep learning\",\n        \"Generating long sequences with sparse transformers\",\n        \"End-to-end translation validation for the halide language\",\n        \"Improving abstract interpretations by combining domains\",\n        \"Sensitivity theorems in integer linear programming\",\n        \"Introduction to Algorithms, Third Edition\",\n        \"The reduced product of abstract domains and the combination of decision procedures\",\n        \"Automatic discovery of linear restraints among variables of a program\",\n        \"A new approach to dynamic all pairs shortest paths\",\n        \"Timing assumptions and verification of finite-state concurrent systems\",\n        \"Mlir as hardware compiler infrastructure\",\n        \"A fresh look at zones and octagons\",\n        \"Static analysis of arithmetical congruences\",\n        \"Static analysis of linear congruence equalities among variables of a program\",\n        \"The theory of hybrid automata\",\n        \"Monotonizing linear programs with up to two nonzeroes per column\",\n        \"Applications and efficient algorithms for integer programming problems on monotone constraints\",\n        \"Simple and fast algorithms for linear and integer programs with two variables per inequality\",\n        \"Incremental closure for systems of two variables per inequality\",\n        \"Apron: A library of numerical abstract domains for static analysis\",\n        \"Mlir-based code generation for gpu tensor cores\",\n        \"Combinatorial Optimization: Theory and Algorithms\",\n        \"The computational complexity of simultaneous diophantine approximation problems\",\n        \"Mlir: Scaling compiler infrastructure for domain specific computation\",\n        \"Tinyiree: An ml execution environment for embedded systems from compilation to deployment\",\n        \"Optimizing neural networks with kronecker-factored approximate curvature\",\n        \"Array abstractions using semantic analysis of trapezoid congruences\",\n        \"A new numerical abstract domain based on difference-bound matrices\",\n        \"The octagon abstract domain\",\n        \"Polygeist: Raising c to polyhedral mlir\",\n        \"High-performance gpu-to-cpu transpilation and optimization via high-level parallel constructs\",\n        \"The general chinese remainder theorem\",\n        \"Fpl: Fast presburger arithmetic through transprecision\",\n        \"Polybench/c 4.2.1\",\n        \"Formal semantics for the halide language\",\n        \"Fast polyhedra abstract domain\",\n        \"Triton: an intermediate language and compiler for tiled neural network computations\",\n        \"Sub-polyhedral scheduling using (unit-)two-variable-per-inequality polyhedra\",\n        \"isl: An integer set library for the polyhedral model\",\n        \"Polyhedral parallel code generation for cuda\",\n        \"Schedule trees\",\n        \"Xla: Accelerated linear algebra\",\n        \"Phism: Polyhedral high-level synthesis in MLIR\"\n    ],\n    \"reasoning\": \"Selected these 53 references because they represent foundational work and recent advances in Strided Difference Bound Matrices, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}