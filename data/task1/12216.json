{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Cluster Editing on Cographs and Related Classes\n\nPaper Abstract: Abstract In the Cluster Editing problem, sometimes known as (unweighted) Correlation Clustering, we must insert and delete a minimum number of edges to achieve a graph in which every connected component is a clique. Owing to its applications in computational biology, social network analysis, machine learning, and others, this problem has been widely studied for decades and is still undergoing active research. There exist several parameterized algorithms for general graphs, but little is known about the complexity of the problem on specific classes of graphs. Among the few important results in this direction, if only deletions are allowed, the problem can be solved in polynomial time on cographs, which are the P4P_{4}-free graphs. However, the complexity of the broader editing problem on cographs is still open. We show that even on a very restricted subclass of cographs, the problem is NP-hard, W[1]-hard when parameterized by the number pp of desired clusters, and that time no​(p/log⁡p)n^{o(p/\\log p)} is forbidden under the ETH. This shows that the editing variant is substantially harder than the deletion-only case, and that hardness holds for the many superclasses of cographs (including graphs of clique-width at most 22, perfect graphs, circle graphs, permutation graphs). On the other hand, we provide an almost tight upper bound of time nO​(p)n^{O(p)}, which is a consequence of a more general nO​(c​w⋅p)n^{O(cw\\cdot p)} time algorithm, where c​wcw is the clique-width. Given that forbidding P4P_{4}s maintains NP-hardness, we look at {P4,C4}\\{P_{4},C_{4}\\}-free graphs, also known as trivially perfect graphs, and provide a cubic-time algorithm for this class.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A greedy heuristic for cluster editing with vertex splitting\",\n        \"Cluster editing with overlapping communities\",\n        \"Correlation clustering\",\n        \"A survey of correlation clustering\",\n        \"A PTAS for the cluster editing problem on planar graphs\",\n        \"A golden ratio parameterized algorithm for cluster editing\",\n        \"Going weighted: Parameterized algorithms for cluster editing\",\n        \"Even faster parameterized cluster deletion and cluster editing\",\n        \"Complexity of the cluster deletion problem on subclasses of chordal graphs\",\n        \"Fast quasi-threshold editing\",\n        \"Cluster editing: Kernelization based on edge cuts\",\n        \"Clustering with qualitative information\",\n        \"A 2kk kernel for the cluster editing problem\",\n        \"A linear recognition algorithm for cographs\",\n        \"Upper bounds to the clique width of graphs\",\n        \"Image segmentation using k-means clustering algorithm and subtractive clustering algorithm\",\n        \"Deciding clique-width for graphs of bounded tree-width\",\n        \"A comprehensive survey of clustering algorithms: State-of-the-art machine learning applications, taxonomy, challenges, and future research prospects\",\n        \"Tight bounds for parameterized complexity of cluster editing with a small number of clusters\",\n        \"Parameterized algorithms for modular-width\",\n        \"The cluster deletion problem for cographs\",\n        \"Computers and Intractability: A Guide to the Theory of NP-Completeness\",\n        \"Correlation clustering with a fixed number of clusters\",\n        \"Graph-modeled data clustering: Fixed-parameter algorithms for clique generation\",\n        \"Automated generation of search tree algorithms for hard graph modification problems\",\n        \"A more effective linear kernelization for cluster editing\",\n        \"Directed NLC-width\",\n        \"Linear-time certifying algorithms for recognizing trivially perfect graphs\",\n        \"Orthology relations, symbolic ultrametrics, and cographs\",\n        \"Phylogenomics with paralogs\",\n        \"Structural parameterization of cluster deletion\",\n        \"Bin packing with fixed number of bins revisited\",\n        \"Defining and identifying cograph communities in complex networks\",\n        \"Clique-decomposition, NLC-decomposition, and modular decomposition-relationships and results for random graphs\",\n        \"Cluster editing with locally bounded modifications\",\n        \"Cluster deletion on interval graphs and split related graphs\",\n        \"NP-hard problems in hierarchical-tree clustering\",\n        \"Orthology and paralogy constraints: satisfiability and consistency\",\n        \"Parameterized complexity of domination problems using restricted modular partitions\",\n        \"Accurate prediction of orthologs in the presence of divergence after duplication\",\n        \"Cluster editing problem for points on the real line: A polynomial time algorithm\",\n        \"Familial groups in social networks\",\n        \"Cluster Deletion on Unit Disk Graphs\",\n        \"Colorful orthology clustering in bounded-degree similarity graphs\",\n        \"Cluster graph modification problems\",\n        \"A correlation clustering framework for community detection\",\n        \"Approximating symmetric relations by equivalence relations\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Cluster Editing on Cographs and Related Classes, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}