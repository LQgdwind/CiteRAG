{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RHNAS: Realizable Hardware and Neural Architecture Search\n\nPaper Abstract: Abstract The rapidly evolving field of Artificial Intelligence necessitates automated approaches to co-design neural network architecture and neural accelerators to maximize system efficiency and address productivity challenges. To enable joint optimization of this vast space, there has been growing interest in differentiable NN-HW co-design. Fully differentiable co-design has reduced the resource requirements for discovering optimized NN-HW configurations, but fail to adapt to general hardware accelerator search spaces. This is due to the existence of non-synthesizable (invalid) designs in the search space of many hardware accelerators. To enable efficient and realizable co-design of configurable hardware accelerators with arbitrary neural network search spaces, we introduce RHNAS. RHNAS is a method that combines reinforcement learning for hardware optimization with differentiable neural architecture search. RHNAS discovers realizable NN-HW designs with 1.84×\\mathbf{1.84\\times} lower latency and 1.86×\\mathbf{1.86\\times} lower energy-delay product (EDP) on ImageNet and 2.81×\\mathbf{2.81\\times} lower latency and 3.30×\\mathbf{3.30\\times} lower EDP on CIFAR-10 over the default hardware accelerator design.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Darts: Differentiable architecture search\",\n        \"Dsnas: Direct neural architecture search without parameter retraining\",\n        \"Proxylessnas: Direct neural architecture search on target task and hardware\",\n        \"Gamma: Automating the hw mapping of dnn models on accelerators via genetic algorithm\",\n        \"Confuciux: Autonomous hardware resource assignment for dnn accelerators using reinforcement learning\",\n        \"Neural-hardware architecture search\",\n        \"Best of both worlds: Automl codesign of a cnn and its hardware accelerator\",\n        \"Accuracy vs. efficiency: Achieving both through fpga-implementation aware neural architecture search\",\n        \"Co-exploration of neural architectures and heterogeneous asic accelerator designs targeting multiple tasks\",\n        \"Dna: Differentiable network-accelerator co-search\",\n        \"Dance: Differentiable accelerator/network co-exploration\",\n        \"The carbon impact of artificial intelligence\",\n        \"Proximal policy optimization algorithms\",\n        \"Asynchronous methods for deep reinforcement learning\",\n        \"Playing atari with deep reinforcement learning\",\n        \"Searching for mobilenetv3\",\n        \"Mnasnet: Platform-aware neural architecture search for mobile\",\n        \"Efficientnet: Rethinking model scaling for convolutional neural networks\",\n        \"Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search\",\n        \"Snas: Stochastic neural architecture search\",\n        \"Latency-aware differentiable neural architecture search\",\n        \"Fast hardware-aware neural architecture search\",\n        \"Eie: Efficient inference engine on compressed deep neural network\",\n        \"Finn\",\n        \"Logicnets: Co-designed neural networks and circuits for extreme-throughput applications\",\n        \"Eyeriss v2: A flexible accelerator for emerging deep neural networks on mobile devices\",\n        \"Tetris: Scalable and efficient neural network acceleration with 3d memory\",\n        \"Diannao: A small-footprint high-throughput accelerator for ubiquitous machine-learning\",\n        \"Marvel: A data-centric compiler for dnn operators on spatial accelerators\",\n        \"On neural architecture search for resource-constrained hardware platforms\",\n        \"A hardware-software blueprint for flexible deep learning specialization\",\n        \"Tvm: An automated end-to-end optimizing compiler for deep learning\",\n        \"Chisel: constructing hardware in a scala embedded language\",\n        \"Learning to optimize tensor programs\",\n        \"Scikit-learn: Machine learning in Python\",\n        \"A new measure of rank correlation\",\n        \"Stable baselines3\",\n        \"ImageNet: A Large-Scale Hierarchical Image Database\",\n        \"Learning multiple layers of features from tiny images\",\n        \"torchvision.models https://pytorch.org/vision/stable/models.html.\",\n        \"Making a science of model search: Hyperparameter optimization in hundreds of dimensions for vision architectures\",\n        \"Algorithms for hyper-parameter optimization\",\n        \"Optuna: A next-generation hyperparameter optimization framework\",\n        \"22ffl technology\",\n        \"Dark memory and accelerator-rich system optimization in the dark silicon era\",\n        \"Adam: A method for stochastic optimization\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in RHNAS: Realizable Hardware and Neural Architecture Search, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}