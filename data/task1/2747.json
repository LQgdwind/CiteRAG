{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Explore User Neighborhood for Real-time E-commerce Recommendation\n\nPaper Abstract: Abstract Recommender systems play a vital role in modern online services, such as Amazon and Taobao. Traditional personalized methods, which focus on user-item (UI) relations, have been widely applied in industrial settings, owing to their efficiency and effectiveness. Despite their success, we argue that these approaches ignore local information hidden in similar users. To tackle this problem, user-based methods exploit similar user relations to make recommendations in a local perspective. Nevertheless, traditional user-based methods, like userKNN and matrix factorization, are intractable to be deployed in the real-time applications since such transductive models have to be recomputed or retrained with any new interaction. To overcome this challenge, we propose a framework called self-complementary collaborative filtering (SCCF) which can make recommendations with both global and local information in real time. On the one hand, it utilizes UI relations and user neighborhood to capture both global and local information. On the other hand, it can identify similar users for each user in real time by inferring user representations on the fly with an inductive model. The proposed framework can be seamlessly incorporated into existing inductive UI approach and benefit from user neighborhood with little additional computation. It is also the first attempt to apply user-based methods in real-time settings. The effectiveness and efficiency of SCCF are demonstrated through extensive offline experiments on four public datasets, as well as a large scale online A/B test in Taobao. ††∗Corresponding author.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Beyond greedy ranking: Slate optimization via list-cvae\",\n        \"Multi-interest network with dynamic routing for recommendation at tmall\",\n        \"SDM: sequential deep matching model for online large-scale recommender system\",\n        \"What’s next? a recommendation system for industrial training\",\n        \"Deep learning for user interest and response prediction in online display advertising\",\n        \"Hybrid followee recommendation in microblogging systems\",\n        \"Phrase-based hashtag recommendation for microblog posts\",\n        \"Don’t waste your bits! squeeze activations and gradients for deep neural networks via tinyscript\",\n        \"Cuwide: Towards efficient flow-based training for sparse wide models on gpus\",\n        \"Deep neural networks for youtube recommendations\",\n        \"Performance of recommender algorithms on top-n recommendation tasks\",\n        \"Item-based collaborative filtering recommendation algorithms\",\n        \"Amazon.com recommendations: Item-to-item collaborative filtering\",\n        \"Slim: Sparse linear methods for top-n recommender systems\",\n        \"Fism: Factored item similarity models for top-n recommender systems\",\n        \"Factorization meets the neighborhood: A multifaceted collaborative filtering model\",\n        \"An algorithmic framework for performing collaborative filtering\",\n        \"On the effectiveness of linear models for one-class collaborative filtering\",\n        \"Practical linear models for large-scale one-class collaborative filtering\",\n        \"Local latent space models for top-n recommendation\",\n        \"Application of dimensionality reduction in recommender system-a case study\",\n        \"Collaborative memory network for recommendation systems\",\n        \"Self-attentive sequential recommendation\",\n        \"Billion-scale similarity search with gpus\",\n        \"Item-based top-n recommendation algorithms\",\n        \"Two decades of recommender systems at amazon.com\",\n        \"The youtube video recommendation system\",\n        \"The netflix recommender system: Algorithms, business value, and innovation\",\n        \"Local item-item models for top-n recommendation\",\n        \"Item2vec: Neural item embedding for collaborative filtering\",\n        \"Distributed representations of words and phrases and their compositionality\",\n        \"Specializing joint representations for the task of product recommendation\",\n        \"One-class collaborative filtering\",\n        \"Mind the gaps: Weighting the unknown in large-scale one-class collaborative filtering\",\n        \"Learning classifiers from only positive and unlabeled data\",\n        \"Probabilistic matrix factorization\",\n        \"Improving regularized singular value decomposition for collaborative filtering\",\n        \"Neural collaborative filtering\",\n        \"Nais: Neural attentive item similarity model for recommendation\",\n        \"Deep matrix factorization models for recommender systems\",\n        \"Attentive collaborative filtering: Multimedia recommendation with item- and component-level attention\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Session-based recommendations with recurrent neural networks\",\n        \"Bert4rec: Sequential recommendation with bidirectional encoder representations from transformer\",\n        \"Personalized top-n sequential recommendation via convolutional sequence embedding\",\n        \"Improving top-k recommendation via joint collaborative autoencoders\",\n        \"Memory networks\",\n        \"Attention is all you need\",\n        \"Adam: A method for stochastic optimization\",\n        \"The movielens datasets: History and context\",\n        \"Image-based recommendations on styles and substitutes\",\n        \"Translation-based recommendation\",\n        \"Introduction to recommender systems handbook\",\n        \"Bpr: Bayesian personalized ranking from implicit feedback\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Explore User Neighborhood for Real-time E-commerce Recommendation, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}