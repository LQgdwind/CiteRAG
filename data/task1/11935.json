{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Inducing Semi-Structured Sparsity by Masking for Efficient Model Inference in Convolutional Networks\n\nPaper Abstract: Abstract The crucial role of convolutional models, both as standalone vision models and backbones in foundation models, necessitates effective acceleration techniques. This paper proposes a novel method to learn semi-structured sparsity patterns for convolution kernels in the form of maskings enabling the utilization of readily available hardware accelerations. The approach accelerates convolutional models more than two-fold during inference without decreasing model performance. At the same time, the original model weights and structure remain unchanged keeping the model thus easily updatable. Beyond the immediate practical use, the effect of maskings on prediction is easily quantifiable. Therefore, guarantees on model predictions under maskings are derived showing stability bounds for learned maskings even after updating the original underlying model.111Code available at github.com/ddanhofer/Semi-Structured-Sparsity-CNNs\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"PyTorch 2: Faster Machine Learning Through Dynamic Python Bytecode Transformation and Graph Compilation\",\n        \"What is the state of neural network pruning?\",\n        \"Language Models are Few-Shot Learners\",\n        \"Parallel Sparse Matrix-Matrix Multiplication and Indexing: Implementation and Experiments\",\n        \"Deep learning in computer vision: A critical review of emerging techniques and application scenarios\",\n        \"Randaugment: Practical automated data augmentation with a reduced search space\",\n        \"Compute and Energy Consumption Trends in Deep Learning Inference\",\n        \"The state of sparsity in deep neural networks\",\n        \"Understanding the difficulty of training deep feedforward neural networks\",\n        \"Accelerating Deep Neural Networks via Semi-Structured Activation Sparsity\",\n        \"Statistical Theory of Extreme Values and Some Practical Applications: A Series of Lectures, volume 33\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Deep residual learning for image recognition\",\n        \"Sparsity in deep learning: Pruning and growth for efficient inference and training in neural networks\",\n        \"The hardware lottery\",\n        \"LoRA: Low-Rank Adaptation of Large Language Models\",\n        \"Pruning Large Language Models with Semi-Structural Adaptive Sparse Training\",\n        \"Accelerated sparse neural training: A provable and efficient method to find n: M transposable masks\",\n        \"How Well Do Sparse ImageNet Models Transfer?\",\n        \"Categorical Reparameterization with Gumbel-Softmax\",\n        \"Predicting the Computational Cost of Deep Learning Models\",\n        \"Evaluating the Energy Efficiency of Deep Convolutional Neural Networks on CPUs and GPUs\",\n        \"Pruning Filters for Efficient ConvNets\",\n        \"Dynamic Model Pruning with Feedback\",\n        \"A ConvNet for the 2020s\",\n        \"Rethinking the Value of Network Pruning\",\n        \"Decoupled Weight Decay Regularization\",\n        \"Exploring the Granularity of Sparsity in Convolutional Neural Networks\",\n        \"Exploring the Regularity of Sparse Structure in Convolutional Neural Networks\",\n        \"Efficient Deep Learning: A Survey on Making Deep Learning Models Smaller, Faster, and Better\",\n        \"Pruning Convolutional Neural Networks for Resource Efficient Inference\",\n        \"Gradient-free structured pruning with unlabeled data\",\n        \"Apex (A PyTorch Extension) â€” Apex 0.1.0 documentation\",\n        \"DALI (nvidia-dali-cudaX.X)\",\n        \"Deep Learning Inference in Facebook Data Centers: Characterization, Performance Optimizations and Hardware Implications\",\n        \"Accelerating Inference with Sparsity Using the NVIDIA Ampere Architecture and NVIDIA TensorRT\",\n        \"Channel Permutations for N:M Sparsity\",\n        \"Learning Transferable Visual Models From Natural Language Supervision\",\n        \"ImageNet Large Scale Visual Recognition Challenge\",\n        \"The Computational Limits of Deep Learning\",\n        \"Learning structured sparsity in deep neural networks\",\n        \"Drawing Early-Bird Tickets: Towards More Efficient Training of Deep Networks\",\n        \"Cutmix: Regularization strategy to train strong classifiers with localizable features\",\n        \"Fast sparse matrix multiplication\",\n        \"Mixup: Beyond empirical risk minimization\",\n        \"Advancing model pruning via bi-level optimization\",\n        \"Random erasing data augmentation\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Inducing Semi-Structured Sparsity by Masking for Efficient Model Inference in Convolutional Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}