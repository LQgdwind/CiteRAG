{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: FAB: An FPGA-based Accelerator for Bootstrappable Fully Homomorphic Encryption\n\nPaper Abstract: Abstract Fully Homomorphic Encryption (FHE) offers protection to private data on third-party cloud servers by allowing computations on the data in encrypted form. However, to support general-purpose encrypted computations, all existing FHE schemes require an expensive operation known as “bootstrapping”. Unfortunately, the computation cost and the memory bandwidth required for bootstrapping add significant overhead to FHE-based computations, limiting the practical use of FHE. In this work, we propose FAB, an FPGA-based accelerator for bootstrappable FHE. Prior FPGA-based FHE accelerators have proposed hardware acceleration of basic FHE primitives for impractical parameter sets without support for bootstrapping. FAB, for the first time ever, accelerates bootstrapping (along with basic FHE primitives) on an FPGA for a secure and practical parameter set. Prior hardware implementations of FHE that included bootstrapping are heavily memory bound, leading to large execution times and wasted compute resources. The key contribution of our work is to architect a balanced FAB design, which is not memory bound. To this end, we leverage recent algorithms for bootstrapping while being cognizant of the compute and memory constraints of our FPGA. To architect a balanced FAB design, we use a minimal number of functional units for computing, operate at a low frequency, leverage high data rates to and from main memory, utilize the limited on-chip memory effectively, and perform operation scheduling carefully. We evaluate FAB using a single Xilinx Alveo U280280280 FPGA and by scaling it to a multi-FPGA system consisting of eight such FPGAs. For bootstrapping a fully-packed ciphertext, while operating at 300300300 MHz, FAB outperforms existing state-of-the-art CPU and GPU implementations by 213×213\\times and 1.5×1.5\\times respectively. Our target FHE application is training a logistic regression model over encrypted data. For logistic regression model training scaled to 888 FPGAs on the cloud, FAB outperforms a CPU and GPU by 456×456\\times and 6.5×6.5\\times, and provides competitive performance when compared to the state-of-the-art ASIC design at a fraction of the cost.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Nfllib: Ntt-based fast lattice library\",\n        \"High-performance fv somewhat homomorphic encryption on gpus: An implementation using cuda\",\n        \"On the concrete hardness of learning with errors\",\n        \"Implementing the Rivest-Shamir-Adleman public key encryption algorithm on a standard digital signal processor\",\n        \"Efficient bootstrapping for approximate homomorphic encryption with non-sparse keys\",\n        \"Fully homomorphic encryption without modulus switching from classical gapsvp\",\n        \"(Leveled) fully homomorphic encryption without bootstrapping\",\n        \"Efficient fully homomorphic encryption from (standard) LWE\",\n        \"Improved bootstrapping for approximate homomorphic encryption\",\n        \"Bootstrapping for approximate homomorphic encryption\",\n        \"A full RNS variant of approximate homomorphic encryption\",\n        \"Homomorphic encryption for arithmetic of approximate numbers\",\n        \"Tfhe: fast fully homomorphic encryption over the torus\",\n        \"cuhe: A homomorphic encryption accelerator library\",\n        \"Does fully homomorphic encryption need compute acceleration?\",\n        \"The mnist database of handwritten digit images for machine learning research [best of the web]\",\n        \"Fhew: bootstrapping homomorphic encryption in less than a second\",\n        \"Somewhat practical fully homomorphic encryption\",\n        \"A fully homomorphic encryption scheme\",\n        \"Ring switching in bgv-style homomorphic encryption\",\n        \"Accelerating number theoretic transform in gpu platform for fully homomorphic encryption\",\n        \"Memfhe: End-to-end computing with fully homomorphic encryption in memory\",\n        \"Algorithms in helib\",\n        \"An improved rns variant of the bfv homomorphic encryption scheme\",\n        \"Improved homomorphic discrete fourier transforms and fhe bootstrapping\",\n        \"Efficient logistic regression on large encrypted data\",\n        \"Better bootstrapping for approximate homomorphic encryption\",\n        \"Guide to elliptic curve cryptography\",\n        \"Open source (release 2.2.1)\",\n        \"Packing messages and optimizing bootstrapping in gsw-fhe\",\n        \"Over 100x faster bootstrapping in fully homomorphic encryption through memory-centric optimization with gpus\",\n        \"A survey on reconfigurable accelerators for cloud computing\",\n        \"HEAAN\",\n        \"Accelerating number theoretic transformations for bootstrappable homomorphic encryption on GPUs\",\n        \"Bts: An accelerator for bootstrappable fully homomorphic encryption\",\n        \"Lattigo 1.3.0\",\n        \"The opencl specification\",\n        \"Parallelization and performance analysis of the cooley? tukey fft algorithm for shared-memory architectures\",\n        \"Heax: An architecture for computing on encrypted data\",\n        \"On data banks and privacy homomorphisms\",\n        \"F1: A fast and programmable accelerator for fully homomorphic encryption\",\n        \"Microsoft SEAL (release 3.7)\",\n        \"PALISADE library\",\n        \"Computing mod without mod\",\n        \"Accelerating Encrypted Computing on Intel GPUs\",\n        \"{{{MArk}}}: Exploiting cloud services for {{{Cost-Effective}}},{{{SLO-Aware}}} machine learning inference serving\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in FAB: An FPGA-based Accelerator for Bootstrappable Fully Homomorphic Encryption, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}