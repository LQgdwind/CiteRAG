{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Model Checking Recursive Probabilistic Programs with Conditioning\n\nPaper Abstract: Abstract We address the problem of model checking temporal logic specifications for probabilistic programs with recursive procedures, nested queries, and conditioning expressed with observe statements. We introduce probabilistic Operator Precedence Automata (pOPA), a new class of probabilistic pushdown automata suitable to model constructs and behaviors of probabilistic programs. We develop a model checking algorithm that can verify requirements expressed in a fragment of Precedence Oriented Temporal Logic (POTLùí≥fsubscriptsuperscriptabsentùëìùí≥{}^{f}_{\\mathcal{X}}) on a pOPA in single EXPTIME. POTLùí≥fsubscriptsuperscriptabsentùëìùí≥{}^{f}_{\\mathcal{X}} is a temporal logic based on Operator Precedence Languages, which features modalities that interact with the context-free structure of program traces, matching procedure calls with returns or observe statements. We provide the first probabilistic model checking implementation of context-free language properties for probabilistic pushdown systems.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"First-order and temporal logics for nested words\",\n        \"Model checking procedural programs\",\n        \"A temporal logic of nested calls and returns\",\n        \"Visibly pushdown languages\",\n        \"Adding nesting structure to words\",\n        \"Principles of Model Checking\",\n        \"Markov chains and unambiguous automata\",\n        \"Probabilistic relational reasoning for differential privacy\",\n        \"Pattern recognition and machine learning, 5th Edition\",\n        \"Analyzing probabilistic pushdown automata\",\n        \"Some algebraic and geometric computations in PSPACE\",\n        \"Unambiguous B√ºchi automata\",\n        \"A model checker for operator precedence languages\",\n        \"Model-checking structured context-free languages\",\n        \"A first-order complete temporal logic for structured context-free languages\",\n        \"The complexity of probabilistic verification\",\n        \"An optimal automata approach to LTL model checking of probabilistic systems\",\n        \"Operator precedence and the visibly pushdown property\",\n        \"Model checking probabilistic systems against pushdown specifications\",\n        \"Model checking probabilistic pushdown automata\",\n        \"Recursive markov chains, stochastic grammars, and monotone systems of nonlinear equations\",\n        \"Model checking of recursive probabilistic systems\",\n        \"Modeling agents with probabilistic programs\",\n        \"Syntactic analysis and operator precedence\",\n        \"Probabilistic machine learning and artificial intelligence\",\n        \"Church: a language for generative models\",\n        \"The design and implementation of probabilistic programming languages\",\n        \"Probabilistic programming\",\n        \"Branching processes: variation, growth, and extinction of populations\",\n        \"Quicksort\",\n        \"Paradoxes of probabilistic programming: and how to condition on events of measure zero with infinitesimal probabilities\",\n        \"Operator precedence languages: Their automata-theoretic and logic characterization\",\n        \"Generalizing input-driven languages: Theoretical and practical benefits\",\n        \"An introduction to probabilistic programming\",\n        \"Randomized Algorithms\",\n        \"Z3: an efficient SMT solver\",\n        \"Conditioning in probabilistic programming\",\n        \"The temporal logic of programs\",\n        \"Verification of programs with exceptions through operator precedence automata\",\n        \"On the computational complexity and geometry of the first-order theory of the reals, parts I‚ÄìIII\",\n        \"The Strategy of Conflict\",\n        \"Reasoning about reasoning by nested conditioning: Modeling theory of mind with probabilistic programs\",\n        \"Design and implementation of probabilistic programming language anglican\",\n        \"Reasoning about infinite computations\",\n        \"Backward deterministic B√ºchi automata on infinite words\",\n        \"Model checking temporal properties of recursive probabilistic programs\",\n        \"Certificates for probabilistic pushdown automata via optimistic value iteration\",\n        \"On certificates, expected runtimes, and termination in probabilistic pushdown automata\",\n        \"PReMo: An analyzer for probabilistic recursive models\",\n        \"A new approach to probabilistic programming inference\",\n        \"Checking LTL properties of recursive Markov chains\",\n        \"Reasoning about ‚Äúreasoning about reasoning‚Äù: semantics and contextual equivalence for probabilistic programs with nested queries and recursion\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Model Checking Recursive Probabilistic Programs with Conditioning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}