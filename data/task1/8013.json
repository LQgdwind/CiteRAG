{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: 1 Introduction\n\nPaper Abstract: Abstract As privacy protection receives much attention, unlearning the effect of a specific node from a pre-trained graph learning model has become equally important. However, due to the node dependency in the graph-structured data, representation unlearning in Graph Neural Networks (GNNs) is challenging and less well explored. In this paper, we fill in this gap by first studying the unlearning problem in linear-GNNs, and then introducing its extension to non-linear structures. Given a set of nodes to unlearn, we propose Projector that unlearns by projecting the weight parameters of the pre-trained model onto a subspace that is irrelevant to features of the nodes to be forgotten. Projector could overcome the challenges caused by node dependency and enjoys a perfect data removal, i.e., the unlearned model parameters do not contain any information about the unlearned node features which is guaranteed by algorithmic construction. Empirical results on real-world datasets illustrate the effectiveness and efficiency of Projector. [Code].\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Coded machine unlearning\",\n        \"Graph convolutional matrix completion\",\n        \"Machine unlearning\",\n        \"Convex optimization\",\n        \"Machine unlearning for random forests\",\n        \"Incremental and decremental support vector machine learning\",\n        \"Recommendation unlearning\",\n        \"Graph unlearning\",\n        \"Certified graph unlearning\",\n        \"Warm start for parameter selection of linear classifiers\",\n        \"On provable benefits of depth in training graph convolutional networks\",\n        \"Svm incremental learning, adaptation and optimization\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Knowledge removal in sampling-based bayesian inference\",\n        \"Implementation issues of an incremental and decremental svm\",\n        \"Making ai forget you: Data deletion in machine learning\",\n        \"Mixed-privacy forgetting in deep networks\",\n        \"Eternal sunshine of the spotless net: Selective forgetting in deep networks\",\n        \"Matrix computations\",\n        \"Certified data removal from machine learning models\",\n        \"Inductive representation learning on large graphs\",\n        \"Deepobliviate: A powerful charm for erasing data residual memory in deep neural networks\",\n        \"Approximate data deletion from machine learning models\",\n        \"Multiple incremental decremental learning of support vector machines\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Incremental support vector learning: Analysis, implementation and applications\",\n        \"Descent-to-delete: Gradient-based methods for machine unlearning\",\n        \"Markov chain monte carlo-based machine unlearning: Unlearning what needs to be forgotten\",\n        \"Membership inference attack on graph neural networks\",\n        \"Sequential minimal optimization: A fast algorithm for training support vector machines\",\n        \"Learn locally, correct globally: A distributed algorithm for training graph neural networks\",\n        \"Remember what you want to forget: Algorithms for machine unlearning\",\n        \"Pegasos: Primal estimated sub-gradient solver for svm\",\n        \"On the necessity of auditable algorithmic definitions for machine unlearning\",\n        \"Incremental and decremental training for linear classification\",\n        \"Machine unlearning via algorithmic stability\",\n        \"Graph attention networks\",\n        \"Knowledge-aware graph neural networks with label smoothness regularization for recommender systems\",\n        \"KGAT: knowledge graph attention network for recommendation\",\n        \"How powerful are spectral graph neural networks\",\n        \"Bag of tricks for node classification with graph neural networks\",\n        \"Puma: Performance unchanged model augmentation for training data removal\",\n        \"Deltagrad: Rapid retraining of machine learning models\",\n        \"Priu: A provenance-based approach for incrementally updating regression models\",\n        \"How powerful are graph neural networks?\",\n        \"Deep graph neural networks with shallow subgraph samplers\",\n        \"Decoupling the depth and scope of graph neural networks\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in 1 Introduction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}