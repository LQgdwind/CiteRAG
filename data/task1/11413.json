{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 43 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: SHA-256 Collision Attack with Programmatic SAT\n\nPaper Abstract: Abstract Cryptographic hash functions play a crucial role in ensuring data security, generating fixed-length hashes from variable-length inputs. The hash function SHA-256 is trusted for data security due to its resilience after over twenty years of intense scrutiny. One of its critical properties is collision resistance, meaning that it is infeasible to find two different inputs with the same hash. Currently, the best SHA-256 collision attacks use differential cryptanalysis to find collisions in simplified versions of SHA-256 that are reduced to have fewer steps, making it feasible to find collisions. In this paper, we use a satisfiability (SAT) solver as a tool to search for step-reduced SHA-256 collisions, and dynamically guide the solver with the aid of a computer algebra system (CAS) used to detect inconsistencies and deduce information that the solver would otherwise not detect on its own. Our hybrid SAT + CAS solver significantly outperformed a pure SAT approach, enabling us to find collisions in step-reduced SHA-256 with significantly more steps. Using SAT + CAS, we find a 38-step collision of SHA-256 with a modified initialization vector‚Äîsomething first found by a highly sophisticated search tool of Mendel, Nad, and Schl√§ffer. Conversely, a pure SAT approach could find collisions for no more than 28 steps. However, our work only uses the SAT solver CaDiCaL and its programmatic interface IPASIR-UP.\n\n{retrieved_text}\n\nGenerate exactly 43 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 43\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"How to break MD5 and other hash functions\",\n        \"The first collision for full SHA-1\",\n        \"Federal Information Processing Standards Publication: Secure Hash Standard\",\n        \"Finding Collisions in the Full SHA-1\",\n        \"Bitcoin: A peer-to-peer electronic cash system\",\n        \"SHA-3 standard: Permutation-based hash and extendable-output functions\",\n        \"Improving local collisions: new attacks on reduced SHA-256\",\n        \"A practical colliding message pair for 31-step SHA-256\",\n        \"New Records in Collision Attacks on SHA-2\",\n        \"Differential cryptanalysis with SAT solvers\",\n        \"CDCL(Crypto) SAT solvers for cryptanalysis\",\n        \"When satisfiability solving meets symbolic computation\",\n        \"Cryptanalysis of the hash functions MD4 and RIPEMD\",\n        \"Secure Hash Standard\",\n        \"Finding SHA-2 characteristics: searching through a minefield of contradictions\",\n        \"Finding SHA-1 characteristics: General results and applications\",\n        \"Handbook of Satisfiability\",\n        \"Building bridges between symbolic computation and satisfiability checking\",\n        \"MathCheck: A Math Assistant via a Combination of Computer Algebra Systems and SAT Solvers\",\n        \"Satisfiability checking and symbolic computation\",\n        \"Verifying large multipliers by combining SAT and computer algebra\",\n        \"Automated Reasoning for Knot Semigroups and œÄùúã\\\\pi-orbifold Groups of Knots\",\n        \"Projection and quantifier elimination using non-uniform cylindrical algebraic decomposition\",\n        \"SAT and lattice reduction for integer factorization\",\n        \"SC-Square: Overview to 2021\",\n        \"Lynx: A Programmatic SAT Solver for the RNA-Folding Problem\",\n        \"MathCheck2: A SAT+CAS verifier for combinatorial conjectures\",\n        \"IPASIR-UP: User propagators for CDCL\",\n        \"Security analysis of SHA-256 and sisters\",\n        \"Analysis of step-reduced SHA-256\",\n        \"New collision attacks against up to 24-step SHA-2\",\n        \"Collisions for step-reduced SHA-256\",\n        \"On the Complexity of Derivation in Propositional Calculus\",\n        \"Multiple-valued minimization for PLA optimization\",\n        \"Knowledge Compilation with Empowerment\",\n        \"Automatic Generation of Propagation Complete SAT Encodings\",\n        \"On unit-refutation complete formulae with existentially quantified variables\",\n        \"Linear Propagation of Information in Differential Collision Attacks\",\n        \"CaDiCaL_vivinst, IsaSAT, Gimsatul, Kissat, and TabularaSAT entering the SAT competition 2023\",\n        \"Compute Canada: Advancing computational research\",\n        \"Differential Cryptanalysis of Symmetric Primitives\",\n        \"Extending SAT Solvers to Cryptographic Problems\",\n        \"Inverting 43-step MD4 via cube-and-conquer\"\n    ],\n    \"reasoning\": \"Selected these 43 references because they represent foundational work and recent advances in SHA-256 Collision Attack with Programmatic SAT, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}