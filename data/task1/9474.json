{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 56 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Automated Polynomial Filter Learning for Graph Neural Networks\n\nPaper Abstract: Abstract. Polynomial graph filters have been widely used as guiding principles in the design of Graph Neural Networks (GNNs). Recently, the adaptive learning of the polynomial graph filters has demonstrated promising performance for modeling graph signals on both homophilic and heterophilic graphs, owning to their flexibility and expressiveness. In this work, we conduct a novel preliminary study to explore the potential and limitations of polynomial graph filter learning approaches, revealing a severe overfitting issue. To improve the effectiveness of polynomial graph filters, we propose Auto-Polynomial, a novel and general automated polynomial graph filter learning framework that efficiently learns better filters capable of adapting to various complex graph signals. Comprehensive experiments and ablation studies demonstrate significant and consistent performance improvements on both homophilic and heterophilic graphs across multiple learning settings considering various labeling ratios, which unleashes the potential of polynomial filter learning.\n\n{retrieved_text}\n\nGenerate exactly 56 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 56\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mixhop: Higher-order graph convolutional architectures via sparsified neighborhood mixing\",\n        \"Graph neural networks with convolutional arma filters\",\n        \"Simple and deep graph convolutional networks\",\n        \"Adaptive universal generalized pagerank graph neural network\",\n        \"Homophily and missing links in citation networks\",\n        \"Autoaugment: Learning augmentation policies from data\",\n        \"Randaugment: Practical Automated Data Augmentation With a Reduced Search Space\",\n        \"Convolutional neural networks on graphs with fast localized spectral filtering\",\n        \"A fair comparison of graph neural networks for graph classification\",\n        \"Hyperparameter optimization\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Bilevel programming for hyperparameter optimization and meta-learning\",\n        \"Graphnas: Graph neural architecture search with reinforcement learning\",\n        \"Graph neural architecture search\",\n        \"Autoattend: Automated attention representation search\",\n        \"Graph Representation Learning\",\n        \"Bernnet: Learning arbitrary graph spectral filters via bernstein approximation\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Automated machine learning: methods, systems, challenges\",\n        \"Graph neural network for traffic forecasting: A survey\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Cayleynets: Graph convolutional neural networks with complex rational spectral filters\",\n        \"Darts: Differentiable architecture search\",\n        \"Optimizing Millions of Hyperparameters by Implicit Differentiation\",\n        \"Fgnas: Fpga-aware graph neural architecture search\",\n        \"Is Homophily a Necessity for Graph Neural Networks?\",\n        \"Deep Learning on Graphs\",\n        \"Image-based recommendations on styles and substitutes\",\n        \"Query-driven active surveying for collective classification\",\n        \"Revisiting Graph Neural Networks: All We Have is Low-Pass Filters\",\n        \"Neural architecture search in graph neural networks\",\n        \"Graph neural networks exponentially lose expressive power for node classification\",\n        \"Geom-gcn: Geometric graph convolutional networks\",\n        \"Multi-scale attributed node embedding\",\n        \"Collective classification in network data\",\n        \"Evolutionary architecture search for graph neural networks\",\n        \"Autone: Hyperparameter optimization for massive network embedding\",\n        \"Simplifying graph convolutional networks\",\n        \"Graph neural networks in recommender systems: a survey\",\n        \"Graph convolutional networks with markov random field reasoning for social spammer detection\",\n        \"Graph Wavelet Neural Network\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Design space for graph neural networks\",\n        \"Link prediction based on graph neural networks\",\n        \"Efficient graph neural architecture search\",\n        \"User Recommendations in Reciprocal and Bipartite Social Networksâ€“An Online Dating Case Study\",\n        \"Learned low precision graph neural networks\",\n        \"Probabilistic dual network architecture search on graphs\",\n        \"Auto-gnn: Neural architecture search of graph neural networks\",\n        \"Graph neural networks with heterophily\",\n        \"Beyond homophily in graph neural networks: Current limitations and effective designs\",\n        \"Generalizing graph neural networks beyond homophily\",\n        \"Interpreting and Unifying Graph Neural Networks with An Optimization Framework\",\n        \"Neural architecture search with reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 56 references because they represent foundational work and recent advances in Automated Polynomial Filter Learning for Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}