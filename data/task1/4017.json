{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 62 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: BigGraphVis: Leveraging Streaming Algorithms and GPU Acceleration for Visualizing Big Graphs\n\nPaper Abstract: Abstract Graph layouts are key to exploring massive graphs. An enormous number of nodes and edges do not allow network analysis software to produce meaningful visualization of the pervasive networks. Long computation time, memory and display limitations encircle the softwareâ€™s ability to explore massive graphs. This paper introduces BigGraphVis, a new parallel graph visualization method that uses GPU parallel processing and community detection algorithm to visualize graph communities. We combine parallelized streaming community detection algorithm and probabilistic data structure to leverage parallel processing of Graphics Processing Unit (GPU). To the best of our knowledge, this is the first attempt to combine the power of streaming algorithms coupled with GPU computing to tackle big graph visualization challenges. Our method extracts community information in a few passes on the edge list, and renders the community structures using the ForceAtlas2 algorithm. Our experiment with massive real-life graphs indicates that about 70 to 95 percent speedup can be achieved by visualizing graph communities, and the visualization appears to be meaningful and reliable. The biggest graph that we examined contains above 3 million nodes and 34 million edges, and the layout computation took about five minutes. We also observed that the BigGraphVis coloring strategy can be successfully applied to produce a more informative ForceAtlas2 layout.\n\n{retrieved_text}\n\nGenerate exactly 62 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 62\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A distributed multilevel force-directed algorithm\",\n        \"Improved efficiency of spring embedders: taking advantage of gpu programming\",\n        \"Group formation in large social networks: membership, growth, and evolution\",\n        \"Voronoi treemaps for the visualization of software metrics\",\n        \"A community computational challenge to predict the activity of pairs of compounds\",\n        \"A hierarchical o (n log n) force-calculation algorithm\",\n        \"Gephi: an open source software for exploring and manipulating networks\",\n        \"Fast unfolding of communities in large networks\",\n        \"Graph summarization\",\n        \"Colorbrewer 2.0\",\n        \"Exploiting gpus for fast force-directed visualization of large-scale networks\",\n        \"An efficient cuda implementation of the tree-based barnes hut n-body algorithm\",\n        \"Approximating data with the count-min data structure\",\n        \"A heuristic for graph drawing\",\n        \"Zame: Interactive large-scale graph visualization\",\n        \"Application driven graph partitioning\",\n        \"Adaptive parallel louvain community detection on a multicore platform\",\n        \"Community detection in graphs\",\n        \"Multi-level graph layout on the gpu\",\n        \"Graph drawing by force-directed placement\",\n        \"A fast parametric maximum flow algorithm and applications\",\n        \"Graph drawing by stress majorization\",\n        \"Discovering large dense subgraphs in massive graphs\",\n        \"Rapid multipole graph drawing on the gpu\",\n        \"Drawing large graphs with a potential-field-based multilevel algorithm\",\n        \"Evaluating the readability of force directed graph layouts: A deep learning approach\",\n        \"A linear streaming algorithm for community detection in very large networks\",\n        \"Forceatlas2, a continuous graph layout algorithm for handy network visualization designed for the gephi software\",\n        \"Visualization of large graphs using gpu computing\",\n        \"An algorithm for drawing general undirected graphs\",\n        \"Network community detection: A review and visual survey\",\n        \"Nvidia cuda software and gpu parallel computing architecture\",\n        \"Spring embedders and force directed graph drawing algorithms\",\n        \"What would a graph look like in this layout? A machine learning approach to large graph visualization\",\n        \"Community detection algorithms: a comparative analysis\",\n        \"Graphtsne: A visualization technique for graph-structured data\",\n        \"Sampling from large graphs\",\n        \"Predicting positive and negative links in online social networks\",\n        \"Signed networks in social media\",\n        \"Graphs over time: densification laws, shrinking diameters and possible explanations\",\n        \"Snap datasets: Stanford large network dataset collection\",\n        \"Community structure in large networks: Natural cluster sizes and the absence of large well-defined clusters\",\n        \"Weighted graph clustering for community detection of large social networks\",\n        \"Graph summarization methods and applications: A survey\",\n        \"Image labeling on a network: using social-network metadata for image classification\",\n        \"Interactive graph layout of a million nodes\",\n        \"Fast parallel community detection algorithm based on modularity\",\n        \"Algorithms for hierarchical clustering: an overview, ii\",\n        \"Graphmaps: Browsing large graphs as interactive maps\",\n        \"Fast algorithm for detecting community structure in networks\",\n        \"Modularity and community structure in networks\",\n        \"On spectral clustering: Analysis and an algorithm\",\n        \"Parallel community detection for massive graphs\",\n        \"Graph summarization with quality guarantees\",\n        \"The network data repository with interactive graph analytics and visualization\",\n        \"Graph processing on gpus: A survey\",\n        \"Arnetminer: extraction and mining of academic social networks\",\n        \"Visual analysis of large graphs: state-of-the-art and future research challenges\",\n        \"A multilevel algorithm for force-directed graph drawing\",\n        \"Defining and evaluating network communities based on ground-truth\",\n        \"Graph thumbnails: Identifying and comparing multiple graphs at a glance\",\n        \"Scalable force directed graph layout algorithms using fast multipole methods\"\n    ],\n    \"reasoning\": \"Selected these 62 references because they represent foundational work and recent advances in BigGraphVis: Leveraging Streaming Algorithms and GPU Acceleration for Visualizing Big Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}