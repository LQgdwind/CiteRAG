{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: RED: Effective Trajectory Representation Learning with Comprehensive Information\n\nPaper Abstract: Abstract. Trajectory representation learning (TRL) maps trajectories to vectors that can then be used for various downstream tasks, including trajectory similarity computation, trajectory classification, and travel-time estimation. However, existing TRL methods often produce vectors that, when used in downstream tasks, yield insufficiently accurate results. A key reason is that they fail to utilize the comprehensive information encompassed by trajectories. We propose a self-supervised TRL framework, called RED, which effectively exploits multiple types of trajectory information. Overall, RED adopts the Transformer as the backbone model and masks the constituting paths in trajectories to train a masked autoencoder (MAE). In particular, RED considers the moving patterns of trajectories by employing a Road-aware masking strategy that retains key paths of trajectories during masking, thereby preserving crucial information of the trajectories. RED also adopts a spatial-temporal-user joint Embedding scheme to encode comprehensive information when preparing the trajectories as model inputs. To conduct training, RED adopts Dual-objective task learning: the Transformer encoder predicts the next segment in a trajectory, and the Transformer decoder reconstructs the entire trajectory. RED also considers the spatial-temporal correlations of trajectories by modifying the attention mechanism of the Transformer. We compare RED with 9 state-of-the-art TRL methods for 4 downstream tasks on 3 real-world datasets, finding that RED can usually improve the accuracy of the best-performing baseline by over 5%.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Computational Geometry of Comparing Shapes\",\n        \"Computing the Fr√©chet distance between two polygonal curves\",\n        \"Using Dynamic Time Warping to Find Patterns in Time Series\",\n        \"Review and perspective for distance based trajectory clustering\",\n        \"Random Forests\",\n        \"Contrastive Trajectory Similarity Learning with Dual-Feature Attention\",\n        \"Recurrent neural networks for multivariate time series with missing values\",\n        \"On The Marriage of Lp-norms and Edit Distance\",\n        \"Robust and Fast Similarity Search for Moving Object Trajectories\",\n        \"Robust Road Network Representation Learning: When Traffic Patterns Meet Traveling Semantics\",\n        \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\",\n        \"E22{}^{\\\\mbox{2}}DTC: An End to End Deep Trajectory Clustering Framework via Self-Training\",\n        \"Trembr: Exploring road networks for trajectory representation learning\",\n        \"Self-supervised representation learning for trip recommendation\",\n        \"node2vec: Scalable Feature Learning for Networks\",\n        \"A Graph-based Approach for Trajectory Similarity Computation in Spatial Networks\",\n        \"Masked Autoencoders Are Scalable Vision Learners\",\n        \"Support vector machines\",\n        \"Long Short-Term Memory\",\n        \"Self-supervised Trajectory Representation Learning with Temporal Regularities and Travel Semantics\",\n        \"Time2vec: Learning a vector representation of time\",\n        \"BERT-Trip: Effective and Scalable Trip Representation using Attentive Contrast Learning\",\n        \"Deep Representation Learning for Trajectory Similarity Computation\",\n        \"TrajFormer: Efficient Trajectory Classification with Transformers\",\n        \"Modeling Trajectories with Neural Ordinary Differential Equations\",\n        \"Unified route representation learning for multi-modal transportation recommendation with spatiotemporal pre-training\",\n        \"Uncertainty-Aware Probabilistic Travel Time Prediction for On-Demand Ride-Hailing at DiDi\",\n        \"Spatio-Temporal GRU for Trajectory Classification\",\n        \"Online anomalous trajectory detection with deep generative sequence modeling\",\n        \"Decoupled Weight Decay Regularization\",\n        \"Jointly contrastive representation learning on road network and trajectory\",\n        \"Efficient Estimation of Word Representations in Vector Space\",\n        \"Fast stochastic routing under time-varying uncertainty\",\n        \"Attention is All you Need\",\n        \"Graph Attention Networks\",\n        \"Discovering Similar Multidimensional Trajectories\",\n        \"Spatio-Temporal Hypergraph Learning for Next POI Recommendation\",\n        \"Towards Efficient Selection of Activity Trajectories based on Diversity and Coverage\",\n        \"Fast map matching, an algorithm integrating hidden Markov model with precomputation\",\n        \"GETNext: Trajectory Flow Map Enhanced Transformer for Next POI Recommendation\",\n        \"Unsupervised Path Representation Learning with Curriculum Negative Sampling\",\n        \"Weakly-supervised Temporal Path Representation Learning with Contrastive Curriculum Learning\",\n        \"LightPath: Lightweight and Scalable Path Representation Learning\",\n        \"TrajGAT: A Graph-based Long-term Dependency Modeling Approach for Trajectory Similarity Computation\",\n        \"Trajectory clustering via deep representation learning\",\n        \"Trajectory Similarity Learning with Auxiliary Supervision and Optimal Matching\",\n        \"Online Anomalous Subtrajectory Detection on Road Networks with Deep Reinforcement Learning\",\n        \"Where to Go Next: A Spatio-Temporal Gated Network for Next POI Recommendation\",\n        \"Dynamic Hypergraph Structure Learning for Traffic Flow Forecasting\",\n        \"GeoLife: A Collaborative Social Networking Service among User, Location and Trajectory\",\n        \"GRLSTM: Trajectory Similarity Computation with Graph-Based Residual LSTM\",\n        \"What to Do Next: Modeling User Behaviors by Time-LSTM\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in RED: Effective Trajectory Representation Learning with Comprehensive Information, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}