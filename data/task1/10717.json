{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: EBFT: Effective and Block-Wise Fine-Tuning for Sparse LLMs\n\nPaper Abstract: Abstract Existing methods for fine-tuning sparse LLMs often suffer from resource-intensive requirements and high retraining costs. Additionally, many fine-tuning methods often rely on approximations or heuristic optimization strategies, which may lead to suboptimal solutions. To address these issues, we propose an efficient and fast framework for fine-tuning sparse LLMs based on minimizing reconstruction error. Our approach involves sampling a small dataset for calibration and utilizing backpropagation to iteratively optimize block-wise reconstruction error, on a block-by-block basis, aiming for optimal solutions. Extensive experiments on various benchmarks consistently demonstrate the superiority of our method over other baselines. For instance, on the Wikitext2 dataset with LlamaV1-7B at 70%percent7070\\% sparsity, our proposed EBFT achieves a perplexity of 16.88, surpassing the state-of-the-art DSnoT with a perplexity of 75.14. Moreover, with a structured sparsity ratio of 26%percent2626\\%, EBFT achieves a perplexity of 16.27, outperforming LoRA (perplexity 16.44). Furthermore, the fine-tuning process of EBFT for LlamaV1-7B only takes approximately 30 minutes, and the entire framework can be executed on a single 16GB GPU. The source code is available at https://github.com/sunggo/EBFT.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Fluctuation-based adaptive structured pruning for large language models\",\n        \"Slicegpt: Compress large language models by deleting rows and columns\",\n        \"Piqa: Reasoning about physical commonsense in natural language\",\n        \"Fast and optimal weight update for pruned large language models\",\n        \"Language models are few-shot learners\",\n        \"Boolq: Exploring the surprising difficulty of natural yes/no questions\",\n        \"Think you have solved question answering? try arc, the ai2 reasoning challenge\",\n        \"Redpajama: an open dataset for training large language models\",\n        \"Beyond size: How gradients shape pruning decisions in large language models\",\n        \"Bert: Pre-training of deep bidirectional transformers for language understanding\",\n        \"The lottery ticket hypothesis: Finding sparse, trainable neural networks\",\n        \"Sparsegpt: Massive language models can be accurately pruned in one-shot\",\n        \"Gptq: Accurate post-training quantization for generative pre-trained transformers\",\n        \"Compresso: Structured pruning with collaborative prompting learns compact large language models\",\n        \"Automatic network pruning via hilbert-schmidt independence criterion lasso under information bottleneck principle\",\n        \"Learning both weights and connections for efficient neural network\",\n        \"Optimal brain surgeon and general network pruning\",\n        \"Distilling step-by-step! outperforming larger language models with less training data and smaller model sizes\",\n        \"Lora: Low-rank adaptation of large language models\",\n        \"Accelerated sparse neural training: A provable and efficient method to find n: m transposable masks\",\n        \"A fast post-training pruning framework for transformers\",\n        \"Pruning filters for efficient convnets\",\n        \"Losparse: Structured compression of large language models based on low-rank and sparse approximation\",\n        \"Awq: Activation-aware weight quantization for llm compression and acceleration\",\n        \"Learning sparse neural networks through l‚Äã_‚Äã0ùëô_0l_0 regularization\",\n        \"Llm-pruner: On the structural pruning of large language models\",\n        \"Pointer sentinel mixture models\",\n        \"Lsdsem 2017 shared task: The story cloze test\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Winogrande: An adversarial winograd schema challenge at scale\",\n        \"Movement pruning: Adaptive sparsity by fine-tuning\",\n        \"A simple and effective pruning approach for large language models\",\n        \"Prune and tune: Improving efficient pruning techniques for massive language models\",\n        \"Stanford alpaca: an instruction-following llama model (2023)\",\n        \"The information bottleneck method\",\n        \"Deep learning and the information bottleneck principle\",\n        \"Llama: Open and efficient foundation language models\",\n        \"Llama 2: Open foundation and fine-tuned chat models\",\n        \"Attention is all you need\",\n        \"Structured pruning of large language models\",\n        \"Backpropagation through time: what it does and how to do it\",\n        \"Sheared llama: Accelerating language model pre-training via structured pruning\",\n        \"Structured pruning learns compact and accurate models\",\n        \"Hellaswag: Can a machine really finish your sentence?\",\n        \"Pruning meets low-rank parameter-efficient fine-tuning\",\n        \"Learning best combination for efficient n: M sparsity\",\n        \"Lottery jackpots exist in pre-trained models\",\n        \"Bi-directional masks for efficient n: M sparse training\",\n        \"Dynamic sparse no training: Training-free fine-tuning for sparse llms\",\n        \"Learning n: m fine-grained structured sparse neural networks from scratch\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in EBFT: Effective and Block-Wise Fine-Tuning for Sparse LLMs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}