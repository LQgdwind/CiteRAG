{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 54 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Rouser: Robust SNN training using adaptive threshold learning\n\nPaper Abstract: Abstract In Spiking Neural Networks (SNNs), learning rules are based on neuron spiking behavior, that is, if and when spikes are generated due to a neuron’s membrane potential exceeding that neuron’s firing threshold, and this spike timing encodes vital information. However, the threshold is generally treated as a hyperparameter, and incorrect selection can lead to neurons that do not spike for large portions of the training process, hindering the effective rate of learning. Inspired by homeostatic mechanisms in biological neurons, this work (Rouser) presents a study to rouse training-inactive neurons and improve the SNN training by using an in-loop adaptive threshold learning mechanism. Rouser’s adaptive threshold allows for dynamic adjustments based on input data and network hyperparameters, influencing spike timing and improving training. This study focuses primarily on investigating the significance of learning neuron thresholds alongside weights in SNNs. We evaluate the performance of Rouser on the spatiotemporal datasets NMNIST, DVS128 and Spiking Heidelberg Digits (SHD), compare our results with state-of-the-art SNN training techniques, and discuss the strengths and limitations of our approach. Our results suggest that promoting threshold from a hyperparameter to a parameter can effectively address the issue of dead neurons during training, resulting in a more robust training algorithm that leads to improved training convergence, increased test accuracy, and substantial reductions in the number of training epochs needed to achieve viable accuracy. Rouser achieves up to 70% lower training latency while providing up to 2% higher accuracy over state-of-the-art SNNs with similar network architecture on the neuromorphic datasets NMNIST, DVS128 and SHD.\n\n{retrieved_text}\n\nGenerate exactly 54 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 54\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"The Silicon Retina\",\n        \"Improved implementation of the silicon cochlea\",\n        \"Supervised learning using spike-timing-dependent plasticity of memristive synapses\",\n        \"Sparse coding with memristor networks\",\n        \"The missing memristor found\",\n        \"Truenorth: Design and tool flow of a 65 mw 1 million neuron programmable neurosynaptic chip\",\n        \"The spinnaker 2 processing element architecture for hybrid digital neuromorphic computing\",\n        \"Loihi: A neuromorphic manycore processor with on-chip learning\",\n        \"Akida Neural Processor\",\n        \"Nengo and low-power ai hardware for robust, embedded neurorobotics\",\n        \"Event-based vision: A survey\",\n        \"Estimation of vehicle speed based on asynchronous data from a silicon retina optical sensor\",\n        \"Neuromorphic computing hardware and neural architectures for robotics\",\n        \"Spiking neural network on neuromorphic hardware for energy-efficient unidimensional slam\",\n        \"Hebbian learning and spiking neurons\",\n        \"Competitive hebbian learning through spike-timing-dependent synaptic plasticity\",\n        \"Unsupervised learning of digit recognition using spike-timing-dependent plasticity\",\n        \"Unsupervised feature learning with winner-takes-all based stdp\",\n        \"Learning in spiking neural networks by reinforcement of stochastic synaptic transmission\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Spiking deep convolutional neural networks for energy-efficient object recognition\",\n        \"Fast-classifying, high-accuracy spiking deep networks through weight and threshold balancing\",\n        \"Diet-snn: A low-latency spiking neural network with direct input encoding and leakage and threshold optimization\",\n        \"Going deeper in spiking neural networks: Vgg and residual architectures\",\n        \"Sparse spiking gradient descent\",\n        \"Spikeprop: backpropagation for networks of spiking neurons\",\n        \"Slayer: Spike layer error reassignment in time\",\n        \"Superspike: Supervised learning in multilayer spiking neural networks\",\n        \"Training deep spiking neural networks using backpropagation\",\n        \"Synaptic plasticity dynamics for deep continuous local learning (decolle)\",\n        \"Surrogate gradient learning in spiking neural networks: Bringing the power of gradient-based optimization to spiking neural networks\",\n        \"The remarkable robustness of surrogate gradient learning for instilling complex function in spiking neural networks\",\n        \"The forward-forward algorithm: Some preliminary investigations\",\n        \"Homeostatic plasticity in the developing nervous system\",\n        \"Effective and efficient computation with multiple-timescale spiking recurrent neural networks\",\n        \"An adaptive threshold neuron for recurrent spiking neural networks with nanodevice hardware implementation\",\n        \"Long short-term memory and learning-to-learn in networks of spiking neurons\",\n        \"Spike frequency adaptation supports network computations on temporally dispersed information\",\n        \"The fine line between dead neurons and sparsity in binarized spiking neural networks\",\n        \"Ltmd: learning improvement of spiking neural networks with learnable thresholding neurons and moderate dropout\",\n        \"Incorporating learnable membrane time constant to enhance learning of spiking neural networks\",\n        \"Lapicque’s introduction of the integrate-and-fire model neuron (1907)\",\n        \"A novel spike distance\",\n        \"Neuromorphic silicon neuron circuits\",\n        \"Efficient event-driven simulation of large networks of spiking neurons and dynamical synapses\",\n        \"Adam: A method for stochastic optimization\",\n        \"Neural networks for machine learning lecture 6a overview of mini-batch gradient descent\",\n        \"Converting static image datasets to spiking neuromorphic datasets using saccades\",\n        \"A low power, fully event-based gesture recognition system\",\n        \"The heidelberg spiking data sets for the systematic evaluation of spiking neural networks\",\n        \"Skimming digits: neuromorphic classification of spike-encoded images\",\n        \"Dart: distribution aware retinal transform for event-based cameras\",\n        \"Lava software framework\",\n        \"Weight normalization: A simple reparameterization to accelerate training of deep neural networks\"\n    ],\n    \"reasoning\": \"Selected these 54 references because they represent foundational work and recent advances in Rouser: Robust SNN training using adaptive threshold learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}