{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 57 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: DeHIN: A Decentralized Framework for Embedding Large-scale Heterogeneous Information Networks\n\nPaper Abstract: Abstract Modeling heterogeneity by extraction and exploitation of high-order information from heterogeneous information networks (HINs) has been attracting immense research attention in recent times. Such heterogeneous network embedding (HNE) methods effectively harness the heterogeneity of small-scale HINs. However, in the real world, the size of HINs grow exponentially with the continuous introduction of new nodes and different types of links, making it a billion-scale network. Learning node embeddings on such HINs creates a performance bottleneck for existing HNE methods that are commonly centralized, i.e., complete data and the model are both on a single machine. To address large-scale HNE tasks with strong efficiency and effectiveness guarantee, we present Decentralized Embedding Framework for Heterogeneous Information Network (DeHIN) in this paper. In DeHIN, we generate a distributed parallel pipeline that utilizes hypergraphs in order to infuse parallelization into the HNE task. DeHIN presents a context preserving partition mechanism that innovatively formulates a large HIN as a hypergraph, whose hyperedges connect semantically similar nodes. Our framework then adopts a decentralized strategy to efficiently partition HINs by adopting a tree-like pipeline. Then, each resulting subnetwork is assigned to a distributed worker, which employs the deep information maximization theorem to locally learn node embeddings from the partition it receives. We further devise a novel embedding alignment scheme to precisely project independently learned node embeddings from all subnetworks onto a common vector space, thus allowing for downstream tasks like link prediction and node classification. As shown from our experimental results, DeHIN significantly improves the efficiency and accuracy of existing HNE models as well as outperforms the large-scale graph embedding frameworks by efficiently scaling up to large-scale HINs.\n\n{retrieved_text}\n\nGenerate exactly 57 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 57\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Translating embeddings for modeling multi-relational data\",\n        \"Representation learning for attributed multiplex heterogeneous network\",\n        \"Pme: projected metric embedding on heterogeneous networks for link prediction\",\n        \"Exploiting centrality information with graph convolutions for network representation learning\",\n        \"DDHH: A Decentralized Deep Learning Framework for Large-scale Heterogeneous Networks\",\n        \"A survey on network embedding\",\n        \"metapath2vec: Scalable representation learning for heterogeneous networks\",\n        \"Convolutional 2d knowledge graph embeddings\",\n        \"Hypergraph neural networks\",\n        \"Hin2vec: Explore meta-paths in heterogeneous information networks for representation learning\",\n        \"Magnn: Metapath aggregated graph neural network for heterogeneous graph embedding\",\n        \"Learning vertex representations for bipartite networks\",\n        \"Bine: Bipartite network embedding\",\n        \"Guided learning for role discovery (glrd) framework, algorithms, and applications\",\n        \"Generalized procrustes analysis\",\n        \"Heterogeneous graph transformer\",\n        \"Biane: Bipartite attributed network embedding\",\n        \"Exploiting social networks of twitter in altmetrics big data\",\n        \"Decentralized embedding framework for large-scale networks\",\n        \"Dynamic hypergraph neural networks\",\n        \"Multilevel hypergraph partitioning: applications in vlsi domain\",\n        \"Variational graph auto-encoders\",\n        \"PyTorch-BigGraph: A Large-scale Graph Embedding System\",\n        \"Mile: A multi-level framework for scalable graph embedding\",\n        \"Divergence measures based on the shannon entropy\",\n        \"Learning word vectors for sentiment analysis\",\n        \"Deepwalk: Online learning of social representations\",\n        \"The wdc training dataset and gold standard for large-scale product matching\",\n        \"Modeling relational data with graph convolutional networks\",\n        \"Heterogeneous information network embedding for recommendation\",\n        \"A survey of heterogeneous information network analysis\",\n        \"Frog: Asynchronous graph processing on gpu with hybrid coloring model\",\n        \"Easing embedding learning by comprehensive transcription of heterogeneous information networks\",\n        \"Reasoning with neural tensor networks for knowledge base completion\",\n        \"Some new properties of the lagrange function and its applications\",\n        \"Mining heterogeneous information networks: principles and methodologies\",\n        \"Pte: Predictive text embedding through large-scale heterogeneous text networks\",\n        \"Line: Large-scale information network embedding\",\n        \"Arnetminer: extraction and mining of academic social networks\",\n        \"Orthogonal procrustes rotation for two or more matrices\",\n        \"Scaling up stochastic dual coordinate ascent\",\n        \"Complex embeddings for simple link prediction\",\n        \"Scalable motif-aware graph clustering\",\n        \"An eigendecomposition approach to weighted graph matching problems\",\n        \"Deep graph infomax\",\n        \"LIBLINEAR: A library for large linear classification\",\n        \"Heterogeneous graph attention network\",\n        \"Heterogeneous network representation learning: Survey, benchmark, evaluation, and beyond\",\n        \"Embedding entities and relations for learning and inference in knowledge bases\",\n        \"Graph transformer networks\",\n        \"Fastgcn: fast learning with graph convolutional networks via importance sampling\",\n        \"Heterogeneous graph neural network\",\n        \"Network representation learning: A survey\",\n        \"Cosine: Compressive network embedding on large-scale information networks\",\n        \"Learning with hypergraphs: Clustering, classification, and embedding\",\n        \"Graphvite: A high-performance cpu-gpu hybrid system for node embedding\",\n        \"Neural graph collaborative filtering\"\n    ],\n    \"reasoning\": \"Selected these 57 references because they represent foundational work and recent advances in DeHIN: A Decentralized Framework for Embedding Large-scale Heterogeneous Information Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}