{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: COIN: Communication-Aware In-Memory Acceleration for Graph Convolutional Networks\n\nPaper Abstract: Abstract Graph convolutional networks (GCNs) have shown remarkable learning capabilities when processing graph-structured data found inherently in many application areas. GCNs distribute the outputs of neural networks embedded in each vertex over multiple iterations to take advantage of the relations captured by the underlying graphs. Consequently, they incur a significant amount of computation and irregular communication overheads, which call for GCN-specific hardware accelerators. To this end, this paper presents a communication-aware in-memory computing architecture (COIN) for GCN hardware acceleration. Besides accelerating the computation using custom compute elements (CE) and in-memory computing, COIN aims at minimizing the intra- and inter-CE communication in GCN operations to optimize the performance and energy efficiency. Experimental evaluations with widely used datasets show up to 105×\\times improvement in energy consumption compared to state-of-the-art GCN accelerator.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Learning steady-states of iterative algorithms over graphs\",\n        \"Graph attention convolution for point cloud semantic segmentation\",\n        \"Learning scheduling algorithms for data processing clusters\",\n        \"Pytorch-biggraph: A large-scale graph embedding system\",\n        \"Graph nets library\",\n        \"Application data prefetching on the ibm blue gene/q supercomputer\",\n        \"Citeseer: An automatic citation indexing system\",\n        \"Inductive representation learning on large graphs\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"PCGCN: Partition-Centric Processing for Accelerating Graph Convolutional Network\",\n        \"A Framework for General Sparse Matrix–Matrix Multiplication on GPUs and Heterogeneous Processors\",\n        \"Hygcn: A gcn accelerator with hybrid architecture\",\n        \"AWB-GCN: A Graph Convolutional Network Accelerator with Runtime Workload Rebalancing\",\n        \"ReGraphX: NoC-enabled 3D Heterogeneous ReRAM Architecture for Training Graph Neural Networks\",\n        \"Engn: A high-throughput and energy-efficient accelerator for large graph neural networks\",\n        \"Computing’s Energy Problem (and What We Can Do About It)\",\n        \"Pipelayer: A Pipelined ReRAM-based Accelerator for Deep Learning\",\n        \"GraphR: Accelerating Graph Processing using ReRAM\",\n        \"GraphS: A graph Processing Accelerator Leveraging SOT-MRAM\",\n        \"Grip: A graph neural network acceleratorarchitecture\",\n        \"Rubik: A hierarchical architecture for efficient graph learning\",\n        \"Computing Graph Neural Networks: A Survey from Algorithms to Accelerators\",\n        \"Atomlayer: A Universal ReRAM-based CNN Accelerator with Atomic Layer Computation\",\n        \"A latency-optimized reconfigurable noc for in-memory acceleration of dnns\",\n        \"Impact of On-chip Interconnect on In-memory Acceleration of Deep Neural Networks\",\n        \"SIAM: Chiplet-based Scalable In-Memory Acceleration with Mesh for Deep Neural Networks\",\n        \"Interconnect-aware area and energy optimization for in-memory acceleration of dnns\",\n        \"GNN-PIM: A Processing-in-Memory Architecture for Graph Neural Networks\",\n        \"Crossbar based Processing in Memory Accelerator Architecture for Graph Convolutional Networks\",\n        \"Energy-Efficient Networks-on-Chip Architectures: Design and Run-Time Optimization\",\n        \"Heterogeneous Manycore Architectures Enabled by Processing-in-Memory for Deep Learning: From CNNs to GNNs:(ICCAD Special Session Paper)\",\n        \"Memory Devices and Applications for In-memory Computing\",\n        \"In-memory Computing with Resistive Switching Devices\",\n        \"Toward an architecture for never-ending language learning\",\n        \"A detailed and flexible cycle-accurate network-on-chip simulator\",\n        \"A New Polynomial-time Algorithm for Linear Programming\",\n        \"Automating the construction of internet portals with machine learning\",\n        \"Deep gaussian embedding of graphs: Unsupervised inductive learning via ranking\",\n        \"Interconnect-centric benchmarking of in-memory acceleration for dnns\",\n        \"Neurosim: A circuit-level macro model for benchmarking neuro-inspired architectures in online learning\",\n        \"New Generation of Predictive Technology Model for Sub-45 nm Early Design Exploration\",\n        \"Communication-Aware In-Memory Acceleration for Graph Convolutional Networks: An Open Source Release\",\n        \"Deep graph library: Towards efficient and scalable deep learning on graphs.\",\n        \"ISAAC: A Convolutional Neural Network Accelerator with In-Situ Analog Arithmetic in Crossbars\",\n        \"Nvidia quadro rtx 8000\",\n        \"Performance and Accuracy Tradeoffs for Training Graph Neural Networks on ReRAM-Based Architectures\",\n        \"Scaling Equations for the Accurate Prediction of CMOS Device Performance from 180 nm to 7 nm\",\n        \"DeepScaleTool: A Tool for the Accurate Estimation of Technology Scaling in the Deep-Submicron Era\",\n        \"Convex Optimization\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in COIN: Communication-Aware In-Memory Acceleration for Graph Convolutional Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}