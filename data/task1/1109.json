{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Coded Distributed Computing with Partial Recovery\n\nPaper Abstract: Abstract Coded computation techniques provide robustness against straggling workers in distributed computing. However, most of the existing schemes require exact provisioning of the straggling behavior and ignore the computations carried out by straggling workers. Moreover, these schemes are typically designed to recover the desired computation results accurately, while in many machine learning and iterative optimization algorithms, faster approximate solutions are known to result in an improvement in the overall convergence time. In this paper, we first introduce a novel coded matrix-vector multiplication scheme, called coded computation with partial recovery (CCPR), which benefits from the advantages of both coded and uncoded computation schemes, and reduces both the computation time and the decoding complexity by allowing a trade-off between the accuracy and the speed of computation. We then extend this approach to distributed implementation of more general computation tasks by proposing a coded communication scheme with partial recovery, where the results of subtasks computed by the workers are coded before being communicated. Numerical simulations on a large linear regression task confirm the benefits of the proposed scheme in terms of the trade-off between the computation accuracy and latency.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Near-optimal straggler mitigation for distributed gradient methods\",\n        \"Anytime stochastic gradient descent: A time to hear from all the workers\",\n        \"Computation scheduling for distributed machine learning with straggling workers\",\n        \"On the effect of task-to-worker assignment in distributed computing systems with stragglers\",\n        \"Revisiting distributed synchronous SGD\",\n        \"Straggler mitigation at scale\",\n        \"Efficient straggler replication in large-scale parallel computing\",\n        \"Gradient coding: Avoiding stragglers in distributed learning\",\n        \"Communication-computation efficient gradient coding\",\n        \"Improving distributed gradient descent using reed-solomon codes\",\n        \"Gradient coding with clustering and multi-message communication\",\n        \"Straggler mitigation with tiered gradient codes\",\n        \"Multi-message gradient coding for utilizing non-persistent stragglers\",\n        \"Weighted gradient coding with leverage score sampling\",\n        \"Speeding up distributed machine learning using codes\",\n        \"Hierarchical coded computation\",\n        \"Robust gradient descent via moment encoding and ldpc codes\",\n        \"Polynomially coded regression: Optimal straggler mitigation via data encoding\",\n        \"Speeding up distributed gradient descent by utilizing non-persistent stragglers\",\n        \"On the optimal recovery threshold of coded matrix multiplication\",\n        \"Polynomial codes: an optimal design for high-dimensional coded matrix multiplication\",\n        \"Hierarchical coding for distributed computing\",\n        \"Rateless codes for near-perfect load balancing in distributed matrix-vector multiplication\",\n        \"Exploitation of stragglers in coded computation\",\n        \"C3les: Codes for coded computation that leverage stragglers\",\n        \"Distributed gradient descent with coded partial gradient computations\",\n        \"Straggler-resilient and communication-efficient distributed iterative linear solver\",\n        \"Heterogeneity-aware gradient coding for straggler tolerance\",\n        \"Coded matrix multiplication on a group-based model\",\n        \"Coded elastic computing\",\n        \"Straggler mitigation in distributed matrix multiplication: Fundamental limits and optimal coding\",\n        \"A unified coded deep neural network training strategy based on generalized polydot codes\",\n        \"Dual entangled polynomial code: Three-dimensional coding for distributed matrix multiplication\",\n        \"Irregular product coded computation for high-dimensional matrix multiplication\",\n        \"Heterogeneous coded computation across heterogeneous workers\",\n        \"Timely-throughput optimal coded computing over cloud networks\",\n        \"Timely distributed computation with stragglers\",\n        \"Bivariate polynomial coding for efficient distributed matrix multiplication\",\n        \"Private and rateless adaptive coded matrix-vector multiplication\",\n        \"Stochastic gradient coding for straggler mitigation in distributed learning\",\n        \"Erasurehead: Distributed gradient descent without delays using approximate gradient coding\",\n        \"Fundamental limits of approximate gradient coding\",\n        \"Straggler-aware distributed learning: Communication computation latency trade-off\",\n        \"Donâ€™t decay the learning rate, increase the batch size\",\n        \"Accelerating stochastic gradient descent using predictive variance reduction\",\n        \"Age-based coded computation for bias reduction in distributed learning\",\n        \"LT codes\",\n        \"An optimal partial decoding algorithm for rateless codes\",\n        \"Distributed stochastic gradient descent using ldgm codes\",\n        \"Design and analysis of lt codes with decreasing ripple size\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Coded Distributed Computing with Partial Recovery, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}