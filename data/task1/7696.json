{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Accurate, Low-latency, Efficient SAR Automatic Target Recognition on FPGA\n\nPaper Abstract: Abstract Synthetic aperture radar (SAR) automatic target recognition (ATR) is the key technique for remote-sensing image recognition. The state-of-the-art convolutional neural networks (CNNs) for SAR ATR suffer from high computation cost and large memory footprint, making them unsuitable to be deployed on resource-limited platforms, such as small/micro satellites. In this paper, we propose a comprehensive GNN-based model-architecture co-design on FPGA to address the above issues. Model design: we design a novel graph neural network (GNN) for SAR ATR. The proposed GNN model incorporates GraphSAGE layer operators and attention mechanism, achieving comparable accuracy as the state-of-the-art work with near 1/10011001/100 computation cost. Then, we propose a pruning approach including weight pruning and input pruning. While weight pruning through lasso regression reduces most parameters without accuracy drop, input pruning eliminates most input pixels with negligible accuracy drop. Architecture design: to fully unleash the computation parallelism within the proposed model, we develop a novel unified hardware architecture that can execute various computation kernels (feature aggregation, feature transformation, graph pooling). The proposed hardware design adopts the Scatter-Gather paradigm to efficiently handle the irregular computation patterns of various computation kernels. We deploy the proposed design on an embedded FPGA (AMD Xilinx ZCU104) and evaluate the performance using MSTAR dataset. Compared with the state-of-the-art CNNs, the proposed GNN achieves comparable accuracy with 1/3258132581/3258 computation cost and 1/831831/83 model size. Compared with the state-of-the-art CPU/GPU, our FPGA accelerator achieves 14.8×14.8\\times/2.5×2.5\\times speedup (latency) and is 62×62\\times/39×39\\times more energy efficient.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Flood mapping based on synthetic aperture radar: An assessment of established approaches\",\n        \"An automated rice mapping method based on flooding signals in synthetic aperture radar time series\",\n        \"Characterizing ancient channel of the yellow river from spaceborne sar: Case study of chinese gaofen-3 satellite\",\n        \"Hyperli-net: A hyper-light deep learning network for high-accurate and high-speed ship detection from synthetic aperture radar imagery\",\n        \"Convolutional neural network with attention mechanism for sar automatic target recognition\",\n        \"Deep convolutional neural networks for atr from sar imagery\",\n        \"Squeeze-and-excitation networks\",\n        \"Sar automatic target recognition based on multiview deep learning framework\",\n        \"Tai-sarnet: Deep transferred atrous-inception cnn for small samples sar atr\",\n        \"Integration between ground based and satellite sar data in landslide mapping: The san fratello case study\",\n        \"Simulation-based energy balance analysis of sar micro-satellite\",\n        \"Newly developed x-band sar system onboard japanese small satellite “asnaro-2”\",\n        \"Parallel-plate slot array antenna for deployable sar antenna onboard small satellite\",\n        \"Development of 1kw high power x-band sar installed on small satellite for on-demand observation\",\n        \"Target classification from sar imagery based on the pixel grayscale decline by graph convolutional neural network\",\n        \"How powerful are graph neural networks?\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Inductive representation learning on large graphs\",\n        \"Graph attention networks\",\n        \"Structure-based protein function prediction using graph convolutional networks\",\n        \"Convsppis: identifying protein-protein interaction sites by an ensemble convolutional neural network with feature graph\",\n        \"Identifying drug–target interactions based on graph convolutional network and deep neural network\",\n        \"Pointnet: Deep learning on point sets for 3d classification and segmentation\",\n        \"Pointnet++: Deep hierarchical feature learning on point sets in a metric space\",\n        \"Semi-supervised locality preserving dense graph neural network with arma filters and context-aware learning for hyperspectral image classification\",\n        \"Graph sample and aggregate-attention network for hyperspectral image classification\",\n        \"Modular graph transformer networks for multi-label image classification\",\n        \"Xilinx dpu.\",\n        \"Hygcn: A gcn accelerator with hybrid architecture\",\n        \"Boostgcn: A framework for optimizing gcn inference on fpga\",\n        \"Hp-gnn: Generating high throughput gnn training implementation on cpu-fpga heterogeneous platform\",\n        \"Graphact: Accelerating gcn training on cpu-fpga heterogeneous platforms\",\n        \"Hardware acceleration of large scale gcn inference\",\n        \"Efficient neighbor-sampling-based gnn training on cpu-fpga heterogeneous platform\",\n        \"Model-architecture co-design for high performance temporal gnn inference on fpga\",\n        \"Link prediction based on graph neural networks\",\n        \"Hierarchical graph representation learning with differentiable pooling\",\n        \"Mstar dataset.\",\n        \"Cbam: Convolutional block attention module\",\n        \"Regression shrinkage and selection via the lasso\",\n        \"Hbm connect: High-performance hls interconnect for fpga hbm\",\n        \"Implementation and optimization of the accelerator based on fpga hardware for lstm network\",\n        \"Awb-gcn: A graph convolutional network accelerator with runtime workload rebalancing\",\n        \"On the minimization of the makespan subject to flowtime optimality\",\n        \"Fast graph representation learning with PyTorch Geometric\",\n        \"Powertop.\",\n        \"nvidia-smi.\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Accurate, Low-latency, Efficient SAR Automatic Target Recognition on FPGA, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}