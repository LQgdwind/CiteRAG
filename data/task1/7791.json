{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Synthesis with Explicit Dependencies To be appeared at DATE 2023. Manthan3 is available open-sourced at https://github.com/meelgroup/manthan.\n\nPaper Abstract: Abstract Quantified Boolean Formulas (QBF) extend propositional logic with quantification ∀,∃for-all\\forall,\\exists. In QBF, an existentially quantified variable is allowed to depend on all universally quantified variables in its scope. Dependency Quantified Boolean Formulas (DQBF) restrict the dependencies of existentially quantified variables. In DQBF, existentially quantified variables have explicit dependencies on a subset of universally quantified variables, called Henkin dependencies. Given a Boolean specification between the set of inputs and outputs, the problem of Henkin synthesis is to synthesize each output variable as a function of its Henkin dependencies such that the specification is met. Henkin synthesis has wide-ranging applications, including verification of partial circuits, controller synthesis, and circuit realizability. This work proposes a data-driven approach for Henkin synthesis called Manthan3. On an extensive evaluation of over 563 instances arising from past DQBF solving competitions, we demonstrate that Manthan3 is competitive with state-of-the-art tools. Furthermore, Manthan3 could synthesize Henkin functions for 26 benchmarks for which none of the state-of-the-art techniques could synthesize.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"QBF solver evaluation portal 2020\",\n        \"sklearn.tree.decisiontreeclassifier\",\n        \"Knowledge compilation for boolean functional synthesis\",\n        \"What’s hard about boolean functional synthesis?\",\n        \"Towards parallel boolean functional synthesis\",\n        \"Henkin quantifiers and boolean formulae: A certification perspective of dqbf\",\n        \"Resolution proofs and skolem functions in QBF evaluation and applications\",\n        \"PicoSAT essentials\",\n        \"Sat-based synthesis methods for safety specs\",\n        \"Distributed synthesis for ltl fragments\",\n        \"ProCount: Weighted projected model counting with graded project-join trees\",\n        \"BDD-based boolean functional synthesis\",\n        \"A dpll algorithm for solving dqbf\",\n        \"idq: Instantiation-based DQBF solving\",\n        \"A guide to the theory of np-completeness\",\n        \"Equivalence checking of partial designs using dependency quantified boolean formulae\",\n        \"Solving dqbf through quantifier elimination\",\n        \"Manthan: A data-driven approach for Boolean function synthesis\",\n        \"Engineering an efficient boolean functional synthesis engine\",\n        \"Designing samplers is easy: The boon of testers\",\n        \"WAPS: Weighted and projected sampling\",\n        \"Some remarks on infinitely long formulas, infinitistic methods\",\n        \"Efficient extraction of skolem functions from QRAT proofs\",\n        \"Portfolio-based algorithm selection for circuit qbfs\",\n        \"Circuit-based search space pruning in qbf\",\n        \"Towards generalization in qbf solving via machine learning\",\n        \"Quantifier elimination via functional composition\",\n        \"Engineering change order for combinational and sequential design rectification\",\n        \"Skolem functions for factored formulas\",\n        \"Henkin quantifiers\",\n        \"ABC: A system for sequential synthesis and verification\",\n        \"DepQBF: A dependency-aware QBF solver\",\n        \"Depqbf 6.0: A search-based QBF solver beyond traditional QCDCL\",\n        \"Open-WBO: A modular MaxSAT solver\",\n        \"Lower bounds for multiplayer noncooperative games of incomplete information\",\n        \"Induction of decision trees\",\n        \"Incremental determinization for quantifier elimination and functional synthesis\",\n        \"CAQE: A certifying QBF solver\",\n        \"Understanding and extending incremental determinization for 2QBF\",\n        \"Certified DQBF solving by definition extraction\",\n        \"Interpolation-based semantic gate extraction and its applications to QBF preprocessing\",\n        \"DQBDD: an efficient BDD-based DQBF solver\",\n        \"Clausal abstraction for DQBF\",\n        \"Skolem functions for QBF\",\n        \"Hqspre–an effective preprocessor for QBF and DQBF\",\n        \"Satzilla: portfolio-based algorithm selection for SAT\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Synthesis with Explicit Dependencies To be appeared at DATE 2023. Manthan3 is available open-sourced at https://github.com/meelgroup/manthan., providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}