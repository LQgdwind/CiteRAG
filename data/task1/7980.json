{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 59 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Complete Expressiveness Hierarchy for Subgraph GNNs via Subgraph Weisfeiler-Lehman Tests\n\nPaper Abstract: Abstract Recently, subgraph GNNs have emerged as an important direction for developing expressive graph neural networks (GNNs). While numerous architectures have been proposed, so far there is still a limited understanding of how various design paradigms differ in terms of expressive power, nor is it clear what design principle achieves maximal expressiveness with minimal architectural complexity. To address these fundamental questions, this paper conducts a systematic study of general node-based subgraph GNNs through the lens of Subgraph Weisfeiler-Lehman Tests (SWL). Our central result is to build a complete hierarchy of SWL with strictly growing expressivity. Concretely, we prove that any node-based subgraph GNN falls into one of the six SWL equivalence classes, among which ùñ≤ùñ≤ùñ∂ùñ´ùñ≤ùñ≤ùñ∂ùñ´\\mathsf{SSWL} achieves the maximal expressive power. We also study how these equivalence classes differ in terms of their practical expressiveness such as encoding graph distance and biconnectivity. Furthermore, we give a tight expressivity upper bound of all SWL algorithms by establishing a close relation with localized versions of WL and Folklore WL (FWL) tests. Our results provide insights into the power of existing subgraph GNNs, guide the design of new architectures, and point out their limitations by revealing an inherent gap with the 2-FWL test. Finally, experiments demonstrate that ùñ≤ùñ≤ùñ∂ùñ´ùñ≤ùñ≤ùñ∂ùñ´\\mathsf{SSWL}-inspired subgraph GNNs can significantly outperform prior architectures on multiple benchmarks despite great simplicity.\n\n{retrieved_text}\n\nGenerate exactly 59 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 59\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"On weisfeiler-leman invariance: Subgraph counts and related graph properties\",\n        \"Expressive power of invariant and equivariant graph neural networks\",\n        \"Breaking the limits of message passing graph neural networks\",\n        \"Graph neural networks with local graph parameters\",\n        \"Equivariant subgraph aggregation networks\",\n        \"Weisfeiler and lehman go cellular: CW networks\",\n        \"Weisfeiler and lehman go topological: Message passing simplicial networks\",\n        \"Improving graph neural network expressivity via subgraph isomorphism counting\",\n        \"An optimal lower bound on the number of variables for graph identification\",\n        \"The electrical resistance of a graph captures its commute and cover times\",\n        \"Structure-aware transformer for graph representation learning\",\n        \"Can graph neural networks count substructures?\",\n        \"Principal neighbourhood aggregation for graph nets\",\n        \"Reconstruction for powerful graph representations\",\n        \"Eigenspaces of graphs\",\n        \"Benchmarking graph neural networks\",\n        \"An application of games to the completeness problem for formalized theories\",\n        \"Fast graph representation learning with pytorch geometric\",\n        \"Sur quelques classifications des syst√®mes de relations\",\n        \"Understanding and extending subgraph gnns by rethinking their symmetries\",\n        \"Weisfeiler-lehman refinement requires at least a linear number of iterations\",\n        \"On the combinatorial power of the weisfeiler-lehman algorithm\",\n        \"Expressiveness and approximation properties of graph neural networks\",\n        \"Neural message passing for quantum chemistry\",\n        \"Inductive representation learning on large graphs\",\n        \"Open graph benchmark: Datasets for machine learning on graphs\",\n        \"Boosting the cycle counting power of graph neural networks with i2-gnns\",\n        \"Describing graphs: A first-order approach to graph canonization\",\n        \"Batch normalization: Accelerating deep network training by reducing internal covariate shift\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Rethinking graph transformers with spectral attention\",\n        \"Asam: Adaptive sharpness-aware minimization for scale-invariant learning of deep neural networks\",\n        \"Distance encoding: design provably more powerful neural networks for graph representation learning\",\n        \"Sign and basis invariant networks for spectral graph representation learning\",\n        \"Your transformer may not be as powerful as you expect\",\n        \"Provably powerful graph networks\",\n        \"Invariant and equivariant graph networks\",\n        \"On the universality of invariant networks\",\n        \"Weisfeiler and leman go neural: Higher-order graph neural networks\",\n        \"Weisfeiler and leman go sparse: towards scalable higher-order graph embeddings\",\n        \"Speqnets: Sparsity-aware permutation-equivariant graph networks\",\n        \"A theoretical comparison of graph neural network extensions\",\n        \"Dropgnn: random dropouts increase the expressiveness of graph neural networks\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Equivariant polynomials for graph neural networks\",\n        \"Ordered subgraph aggregation networks\",\n        \"Recipe for a general, powerful, scalable graph transformer\",\n        \"Graph attention networks\",\n        \"Building powerful and equivariant graph neural networks with structural message-passing\",\n        \"The reduction of a graph to canonical form and the algebra which appears therein\",\n        \"How powerful are graph neural networks?\",\n        \"Do transformers really perform badly for graph representation?\",\n        \"Position-aware graph neural networks\",\n        \"Identity-aware graph neural networks\",\n        \"Rethinking the expressive power of gnns via graph biconnectivity\",\n        \"Nested graph neural networks\",\n        \"From stars to subgraphs: Uplifting any gnn with local structure awareness\",\n        \"A practical, progressively-expressive GNN\"\n    ],\n    \"reasoning\": \"Selected these 59 references because they represent foundational work and recent advances in A Complete Expressiveness Hierarchy for Subgraph GNNs via Subgraph Weisfeiler-Lehman Tests, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}