{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Boolean Matrix Logic Programming\n\nPaper Abstract: Abstract We describe a datalog query evaluation approach based on efficient and composable boolean matrix manipulation modules. We first define an overarching problem, Boolean Matrix Logic Programming (BMLP), which uses boolean matrices as an alternative computation to evaluate datalog programs. We develop two novel BMLP modules for bottom-up inferences on linear dyadic recursive datalog programs, and show how additional modules can extend this capability to compute both linear and non-linear recursive datalog programs of arity two. Our empirical results demonstrate that these modules outperform general-purpose and specialised systems by factors of 30x and 9x, respectively, when evaluating large programs with millions of facts. This boolean matrix approach significantly enhances the efficiency of datalog querying to support logic programming techniques.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Linearisability on datalog programs\",\n        \"Universality of data retrieval languages\",\n        \"An amateurâ€™s introduction to recursive query processing strategies\",\n        \"On the power of magic\",\n        \"What you always wanted to know about Datalog (and never dared to ask)\",\n        \"A relational model of data for large shared data banks\",\n        \"TensorLog: A Probabilistic Database Implemented Using Deep-Learning Infrastructure\",\n        \"Matrix Development of the Calculus of Relations\",\n        \"Matrix multiplication via arithmetic progressions\",\n        \"Inductive Logic Programming at 30\",\n        \"Logical reduction of metarules\",\n        \"Logical Vision: One-Shot Meta-Interpretive Learning from Real Images\",\n        \"Abductive Knowledge Induction from Raw Data\",\n        \"Complexity and Expressive Power of Logic Programming\",\n        \"Semirings and Formal Power Series\",\n        \"Learning Explanatory Rules from Noisy Data\",\n        \"Boolean matrix multiplication and transitive closure\",\n        \"SWI Prolog Reference Manual\",\n        \"Undecidable optimization problems for database logic programs\",\n        \"Clingo = ASP + Control: Preliminary Report\",\n        \"The Stable Model Semantics for Logic Programming\",\n        \"Towards a Formal Distributional Semantics: Simulating Logical Calculi with Tensors\",\n        \"Possible Worlds Explorer: Datalog and Answer Set Programming for the Rest of Us\",\n        \"Modular materialisation of Datalog programs\",\n        \"On the Computation of the Transitive Closure of Relational Operators\",\n        \"Towards an algebraic theory of recursion\",\n        \"Inductive Logic Programming\",\n        \"Hypothesizing an algorithm from one example: the role of specificity\",\n        \"Meta-interpretive learning of higher-order dyadic datalog: predicate invention revisited\",\n        \"A three-way model for collective learning on multi-relational data\",\n        \"Collected Papers of Charles Sanders Peirce, Volumes II\",\n        \"End-to-end Differentiable Proving\",\n        \"Injecting Logical Background Knowledge into Embeddings for Relation Extraction\",\n        \"Embedding Tarskian Semantics in Vector Spaces\",\n        \"A linear algebraic approach to datalog evaluation\",\n        \"Abducing Relations in Continuous Spaces\",\n        \"On fast large-scale program analysis in Datalog\",\n        \"A lattice-theoretical fixpoint theorem and its applications\",\n        \"More efficient datalog queries: subsumptive tabling beats magic sets\",\n        \"Observed versus latent features for knowledge base and text inference\",\n        \"Horn Clause Computability\",\n        \"Search-Based Regular Expression Inference on a GPU\",\n        \"Recursive axioms in deductive databases: The query/subquery approach\",\n        \"SWI-Prolog\",\n        \"Differentiable Learning of Logical Rules for Knowledge Base Reasoning\",\n        \"The language features and architecture of B-Prolog\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Boolean Matrix Logic Programming, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}