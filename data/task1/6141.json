{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Dissecting Tensor Cores via Microbenchmarks: Latency, Throughput and Numeric Behaviors\n\nPaper Abstract: Abstract Tensor Cores have been an important unit to accelerate Fused Matrix Multiplication Accumulation (MMA) in all NVIDIA GPUs since Volta Architecture. To program Tensor Cores, users have to use either legacy wmma APIs or current mma APIs. Legacy wmma APIs are more easy-to-use but can only exploit limited features and power of Tensor Cores. Specifically, wmma APIs support fewer operand shapes and can not leverage the new sparse matrix multiplication feature of the newest Ampere Tensor Cores. However, the performance of current programming interface has not been well explored. Furthermore, the computation numeric behaviors of low-precision floating points (TF32, BF16, and FP16) supported by the newest Ampere Tensor Cores are also mysterious. In this paper, we explore the throughput and latency of current programming APIs. We also intuitively study the numeric behaviors of Tensor Cores MMA and profile the intermediate operations including multiplication, addition of inner product, and accumulation. All codes used in this work can be found in https://github.com/sunlex0717/DissectingTensorCores.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Balanced hashing and efficient gpu sparse general matrix-matrix multiplication\",\n        \"Analyzing cuda workloads using a detailed gpu simulator\",\n        \"Performance-aware model for sparse matrix-matrix multiplication on the sunway taihulight supercomputer\",\n        \"Optimizing sparse matrixâ€”matrix multiplication for the gpu\",\n        \"Multithreaded sparse matrix-matrix multiplication for many-core and gpu architectures\",\n        \"Numerical behavior of nvidia tensor cores\",\n        \"Egemm-tc: Accelerating scientific computing on tensor cores with extended precision\",\n        \"Apnn-tc: Accelerating arbitrary precision neural networks on ampere gpu tensor cores\",\n        \"Xilinx adaptive compute acceleration platform: Versaltm architecture\",\n        \"Harnessing gpu tensor cores for fast fp16 arithmetic to speed up mixed-precision iterative refinement solvers\",\n        \"Intel nervana neural network processor-t (nnp-t) fused floating point many-term dot product\",\n        \"Accelerated sparse neural training: A provable and efficient method to find n: m transposable masks\",\n        \"Dissecting the nvidia turing t4 gpu via microbenchmarking\",\n        \"Dissecting the nvidia volta gpu architecture via microbenchmarking\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"Programming massively parallel processors: a hands-on approach\",\n        \"On improving performance of sparse matrix-matrix multiplication on gpus\",\n        \"Fast algorithms for convolutional neural networks\",\n        \"Optimization of gpu-based sparse matrix multiplication for large sparse networks\",\n        \"Evaluating modern gpu interconnect: Pcie, nvlink, nv-sli, nvswitch and gpudirect\",\n        \"Accelerating binarized neural networks via bit-tensor-cores in turing gpus\",\n        \"Optimizing winograd-based convolution with tensor cores\",\n        \"Nvidia tensor core programmability, performance & precision\",\n        \"Benchmarking the nvidia v100 gpu and tensor cores\",\n        \"Dissecting gpu memory hierarchy through microbenchmarking\",\n        \"Mixed precision training\",\n        \"Tilespgemm: a tiled algorithm for parallel sparse general matrix-matrix multiplication on gpus\",\n        \"Nvidia volta architecture white paper\",\n        \"Nvidia turing architecture white paper\",\n        \"Nvidia ampere architecture white paper\",\n        \"Nvidia ampere ga102 gpu architecture\",\n        \"cublas\",\n        \"Cutlass\",\n        \"Developing cuda kernels to push tensor cores to the absolute limit on nvidia a100\",\n        \"Nvidia hopper architecture white paper\",\n        \"Nvidia nsight\",\n        \"Ptx isa\",\n        \"speck: accelerating gpu sparse matrix-matrix multiplication through lightweight analysis\",\n        \"Modeling deep learning accelerator enabled gpus\",\n        \"Dominosearch: Find layer-wise fine-grained n: M sparse schemes from dense neural networks\",\n        \"Tc-gnn: Accelerating sparse graph neural network computation via dense tensor core on gpus\",\n        \"Adaptive sparse matrix-matrix multiplication on the gpu\",\n        \"Demystifying gpu microarchitecture through microbenchmarking\",\n        \"A pattern-based spgemm library for multi-core and many-core architectures\",\n        \"Demystifying tensor cores to optimize half-precision matrix multiply\",\n        \"Optimizing batched winograd convolution on gpus\",\n        \"Understanding the gpu microarchitecture to achieve bare-metal performance tuning\",\n        \"Learning n: m fine-grained structured sparse neural networks from scratch\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Dissecting Tensor Cores via Microbenchmarks: Latency, Throughput and Numeric Behaviors, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}