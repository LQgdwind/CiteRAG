{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Rethinking the Optimization of Average Precision: Only Penalizing Negative Instances before Positive Ones is Enough\n\nPaper Abstract: Abstract Optimizing the approximation of Average Precision (AP) has been widely studied for image retrieval. Limited by the definition of AP, such methods consider both negative and positive instances ranking before each positive instance. However, we claim that only penalizing negative instances before positive ones is enough, because the loss only comes from these negative instances. To this end, we propose a novel loss, namely Penalizing Negative instances before Positive ones (PNP), which can directly minimize the number of negative instances before each positive one. In addition, AP-based methods adopt a fixed and sub-optimal gradient assignment strategy. Therefore, we systematically investigate different gradient assignment solutions via constructing derivative functions of the loss, resulting in PNP-I with increasing derivative functions and PNP-D with decreasing ones. PNP-I focuses more on the hard positive instances by assigning larger gradients to them and tries to make all relevant instances closer. In contrast, PNP-D pays less attention to such instances and slowly corrects them. For most real-world data, one class usually contains several local clusters. PNP-I blindly gathers these clusters while PNP-D keeps them as they were. Therefore, PNP-D is more superior. Experiments on three standard retrieval datasets show consistent results with the above analysis. Extensive evaluations demonstrate that PNP-D achieves the state-of-the-art performance. Code is available at https://github.com/interestingzhuo/PNPloss\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Deep Image Retrieval: Learning Global Representations for Image Search\",\n        \"All About VLAD\",\n        \"NetVLAD: CNN Architecture for Weakly Supervised Place Recognition\",\n        \"Neural Codes for Image Retrieval\",\n        \"MIC: Mining Interclass Characteristics for Improved Metric Learning\",\n        \"Smooth-AP: Smoothing the Path Towards Large-Scale Image Retrieval\",\n        \"Deep Metric Learning to Rank\",\n        \"Unifying Deep Local and Global Features for Image Search\",\n        \"SoDeep: A Sorting Deep Net to Learn Ranking Loss Surrogates\",\n        \"Deep Metric Learning with Self-Supervised Ranking\",\n        \"Proxy Synthesis: Learning with Synthetic Classes for Deep Metric Learning\",\n        \"Learning to rank with SoftRank and Gaussian processes\",\n        \"Dimensionality Reduction by Learning an Invariant Mapping\",\n        \"Hashing as Tie-Aware Learning to Rank\",\n        \"Local Descriptors Optimized for Average Precision\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"Cross-Domain Image Retrieval with Attention Modeling\",\n        \"Aggregating local descriptors into a compact image representation\",\n        \"RankMI: A Mutual Information Maximizing Ranking Loss\",\n        \"Multi-level Distance Regularization for Deep Metric Learnin\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Deep Relative Distance Learning: Tell the Difference Between Similar Vehicles\",\n        \"Sampling Matters in Deep Embedding Learning\",\n        \"DiVA: Diverse Visual Feature Aggregation for Deep Metric Learning\",\n        \"Sharing Matters for Generalization in Deep Metric Learning\",\n        \"A Two-Stage Triplet Network Training Framework for Image Retrieval\",\n        \"Efficient Optimization for Rank-Based Loss Functions\",\n        \"Large-scale image retrieval with compressed Fisher vectors\",\n        \"SoftTriple Loss: Deep Metric Learning Without Triplet Sampling\",\n        \"CNN Image Retrieval Learns from BoW: Unsupervised Fine-Tuning with Hard Examples\",\n        \"Fine-tuning CNN Image Retrieval with No Human Annotation\",\n        \"Learning With Average Precision: Training Image Retrieval With a Listwise Loss\",\n        \"Optimizing Rank-Based Metrics With Blackbox Differentiation\",\n        \"Revisiting training strategies and generalization performance in deep metric learning\",\n        \"Divide and Conquer the Embedding Space for Metric Learning\",\n        \"FaceNet: A unified embedding for face recognition and clustering\",\n        \"Introduction to information retrieval, volume 39\",\n        \"Improved deep metric learning with multi-class n-pair loss objective\",\n        \"Deep metric learning via lifted structured feature embedding\",\n        \"Circle Loss: A Unified Perspective of Pair Similarity Optimization\",\n        \"ProxyNCA++: Revisiting and Revitalizing Proxy Neighborhood Component Analysis\",\n        \"Learning and Aggregating Deep Local Descriptors for Instance-Level Recognition\",\n        \"Learning Deep Embeddings with Histogram Loss\",\n        \"The inaturalist species classification and detection dataset\",\n        \"Learning Fine-Grained Image Similarity with Deep Ranking\",\n        \"Cross-Batch Memory for Embedding Learning\",\n        \"No Fuss Distance Metric Learning Using Proxies\",\n        \"Deep Compositional Metric Learning\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Rethinking the Optimization of Average Precision: Only Penalizing Negative Instances before Positive Ones is Enough, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}