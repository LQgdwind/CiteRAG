{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Interpretable and Explainable Logical Policies via Neurally Guided Symbolic Abstraction\n\nPaper Abstract: Abstract The limited priors required by neural networks make them the dominating choice to encode and learn policies using reinforcement learning (RL). However, they are also black-boxes, making it hard to understand the agent‚Äôs behaviour, especially when working on the image level. Therefore, neuro-symbolic RL aims at creating policies that are interpretable in the first place. Unfortunately, interpretability is not explainability. To achieve both, we introduce Neurally gUided Differentiable loGic policiEs (NUDGE). NUDGE exploits trained neural network-based agents to guide the search of candidate-weighted logic rules, then uses differentiable logic to train the logic agents. Our experimental evaluation demonstrates that NUDGE agents can induce interpretable and explainable policies while outperforming purely neural ones and showing good flexibility to environments of different initial states and problem sizes.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"GALOIS: boosting deep reinforcement learning via generalizable logic synthesis\",\n        \"Inductive logic programming at 30\",\n        \"Soft-DTW: a differentiable loss function for time-series\",\n        \"Adaptive rational activations to boost deep reinforcement learning\",\n        \"Boosting object representation learning via motion and object continuity\",\n        \"Ocatari: Object-centric atari 2600 reinforcement learning environments\",\n        \"Deep object-centric representations for generalizable robot learning\",\n        \"Relational reinforcement learning\",\n        \"Learning explanatory rules from noisy data\",\n        \"STRIPS: A new approach to the application of theorem proving to problem solving\",\n        \"PDDL2.1: an extension to PDDL for expressing temporal planning domains\",\n        \"Neural logic reinforcement learning\",\n        \"Non-parametric policy gradients: a unified treatment of propositional and relational domains\",\n        \"Bellman goes relational\",\n        \"Neuro-symbolic reinforcement learning with first-order logic\",\n        \"Actor-critic algorithms\",\n        \"Discovering symbolic policies with deep reinforcement learning\",\n        \"Exploration in relational domains for model-based reinforcement learning\",\n        \"SPACE: unsupervised object-oriented scene representation via spatial attention and decomposition\",\n        \"SDRL: interpretable and data-efficient deep reinforcement learning leveraging symbolic planning\",\n        \"Explainable reinforcement learning through a causal lens\",\n        \"A simple neural attentive meta-learner\",\n        \"Human-level control through deep reinforcement learning\",\n        \"Asynchronous methods for deep reinforcement learning\",\n        \"Measuring sample efficiency and generalization in reinforcement learning benchmarks: Neurips 2020 procgen benchmark\",\n        \"Inverse Entailment and Progol\",\n        \"Meta-interpretive learning of higher-order dyadic datalog: predicate invention revisited\",\n        \"Foundations of Inductive Logic Programming\",\n        \"Robust adversarial reinforcement learning\",\n        \"You only look once: Unified, real-time object detection\",\n        \"Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems\",\n        \"Logical neural networks\",\n        \"Stop explaining black box machine learning models for high stakes decisions and use interpretable models instead\",\n        \"Artificial intelligence - a modern approach, 2nd Edition\",\n        \"Proximal policy optimization algorithms\",\n        \"Differentiable inductive logic programming for structured examples\",\n        \"Œ±ùõº\\\\alphailp: thinking visual scenes as differentiable logic programs\",\n        \"Program Synthesis by Sketching\",\n        \"Right for the right concept: Revising neuro-symbolic concepts by interacting with their explanations\",\n        \"Program guided agent\",\n        \"Axiomatic attribution for deep networks\",\n        \"Explanatory interactive machine learning\",\n        \"Deep reinforcement learning with double q-learning\",\n        \"Programmatically interpretable reinforcement learning\",\n        \"Simple statistical gradient-following algorithms for connectionist reinforcement learning\",\n        \"Mutual alignment transfer learning\",\n        \"Interpretable model-based hierarchical reinforcement learning using inductive logic programming\",\n        \"Relational deep reinforcement learning\",\n        \"Kogun: Accelerating deep reinforcement learning via integrating human suboptimal knowledge\",\n        \"Symbolic visual reinforcement learning: A scalable framework with object-level abstraction and differentiable expression search\",\n        \"An inductive synthesis framework for verifiable reinforcement learning\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Interpretable and Explainable Logical Policies via Neurally Guided Symbolic Abstraction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}