{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 51 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Evaluating and Optimizing Educational Content with Large Language Model Judgments\n\nPaper Abstract: Abstract Creating effective educational materials generally requires expensive and time-consuming studies of student learning outcomes. To overcome this barrier, one idea is to build computational models of student learning and use them to optimize instructional materials. However, it is difficult to model the cognitive processes of learning dynamics. We propose an alternative approach that uses Language Models (LMs) as educational experts to assess the impact of various instructions on learning outcomes. Specifically, we use GPT-3.5 to evaluate the overall effect of instructional materials on different student groups and find that it can replicate well-established educational findings such as the Expertise Reversal Effect and the Variability Effect. This demonstrates the potential of LMs as reliable evaluators of educational content. Building on this insight, we introduce an instruction optimization approach in which one LM generates instructional materials using the judgments of another LM as a reward function. We apply this approach to create math word problem worksheets aimed at maximizing student learning gains. Human teachers’ evaluations of these LM-generated worksheets show a significant alignment between the LM judgments and human teacher preferences. We conclude by discussing potential divergences between human and LM opinions and the resulting pitfalls of automating instructional design.\n\n{retrieved_text}\n\nGenerate exactly 51 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 51\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gpt-4 technical report\",\n        \"Using large language models to simulate multiple humans and replicate human subject studies\",\n        \"Cognitive tutors: Lessons learned\",\n        \"Out of one, many: Using language models to simulate human samples\",\n        \"Constitutional ai: Harmlessness from ai feedback\",\n        \"Sparks of artificial general intelligence: Early experiments with gpt-4\",\n        \"Can we trust ai-generated educational content? comparative analysis of human and ai-generated learning resources\",\n        \"Student modelling: the key to individualized knowledge-based instruction, volume 125\",\n        \"Solving math word problems by combining language models with symbolic solvers\",\n        \"Large language models as simulated economic agents: What can we learn from homo silicus?\",\n        \"teach ai how to code: Using large language models as teachable agents for programming education\",\n        \"Cgmi: Configurable general multi-agent interaction framework\",\n        \"Expertise reversal effect and its implications for learner-tailored instruction\",\n        \"The expertise reversal effect\",\n        \"Measuring knowledge to optimize cognitive load factors during instruction\",\n        \"Eric/avcr annual review paper: An imbalance of product quantity and instructional quality: The imperative of empiricism\",\n        \"Math education with large language models: Peril or promise?\",\n        \"Improving interpersonal communication by simulating audiences with language models\",\n        \"Hypocompass: Large-language-model-based tutor for hypothesis construction in debugging for novices\",\n        \"Self-refine: Iterative refinement with self-feedback\",\n        \"Gpteach: Interactive ta training with gpt based students\",\n        \"Evaluating a simulated student using real students data for training and testing\",\n        \"Learning by teaching simstudent: Technical accomplishments and an initial use with students\",\n        \"Using a simulated student for instructional design\",\n        \"Large language models for in-context student modeling: Synthesizing student’s behavior in visual programming from one-shot observation\",\n        \"Formative evaluation in educational design research\",\n        \"The cognitive complexity of learning and doing arithmetic\",\n        \"Do language models exhibit the same cognitive biases in problem solving as human learners?\",\n        \"Variability of worked examples and transfer of geometrical problem-solving skills: A cognitive-load approach\",\n        \"Large language models (gpt) for automating feedback on programming assignments\",\n        \"Learning gain differences between chatgpt and human tutor generated algebra hints\",\n        \"Generative agents: Interactive simulacra of human behavior\",\n        \"Social simulacra: Creating populated prototypes for social computing systems\",\n        \"Automating human tutor-style programming feedback: Leveraging gpt-4 tutor model for hint generation and gpt-3.5 student model for hint validation\",\n        \"Comparing different approaches to generating mathematics explanations using large language models\",\n        \"Automatic prompt optimization with gradient descent and beam search\",\n        \"Physics on autopilot: exploring the use of an ai assistant for independent problem-solving practice\",\n        \"Automatic generation of programming exercises and code explanations using large language models\",\n        \"Ruffle&riley: Towards the automated induction of conversational tutoring systems\",\n        \"Rehearsal: Simulating conflict to teach conflict resolution\",\n        \"Instructional design\",\n        \"Cognitive architecture and instructional design: 20 years later\",\n        \"A comparison of cognitive load associated with discovery learning and worked examples\",\n        \"Applications of simulated students: An exploration\",\n        \"Is chatgpt a good teacher coach? measuring zero-shot performance for scoring and providing actionable insights on classroom instruction\",\n        \"Step-by-step remediation of students’ mathematical mistakes\",\n        \"Towards human-like educational question generation with large language models\",\n        \"How do instructional designers evaluate? a qualitative study of evaluation in practice\",\n        \"Large language models as optimizers\",\n        \"Self-taught optimizer (stop): Recursively self-improving code generation\",\n        \"Generating and evaluating tests for k-12 students with language model simulations: A case study on sentence reading efficiency\"\n    ],\n    \"reasoning\": \"Selected these 51 references because they represent foundational work and recent advances in Evaluating and Optimizing Educational Content with Large Language Model Judgments, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}