{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Less is More: Optimizing Function Calling for LLM Execution on Edge Devices\n\nPaper Abstract: Abstract The advanced function-calling capabilities of foundation models open up new possibilities for deploying agents to perform complex API tasks. However, managing large amounts of data and interacting with numerous APIs makes function calling hardware-intensive and costly, especially on edge devices. Current Large Language Models (LLMs) struggle with function calling at the edge because they cannot handle complex inputs or manage multiple tools effectively. This results in low task-completion accuracy, increased delays, and higher power consumption. In this work, we introduce Less-is-More, a novel fine-tuning-free function-calling scheme for dynamic tool selection. Our approach is based on the key insight that selectively reducing the number of tools available to LLMs significantly improves their function-calling performance, execution time, and power efficiency on edge devices. Experimental results with state-of-the-art LLMs on edge hardware show agentic success rate improvements, with execution time reduced by up to 70% and power consumption by up to 40%.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Gorilla: Large language model connected with massive apis\",\n        \"Pythia: An edge first agent for state prediction in high-dimensional environments\",\n        \"Llm inference unveiled: Survey and roofline model insights\",\n        \"Function calling documentation\",\n        \"ReAct: Synergizing reasoning and acting in language models\",\n        \"Single-path nas: Designing hardware-efficient convnets in less than 4 hours\",\n        \"Phi-3 technical report: A highly capable language model locally on your phone\",\n        \"Function calling\",\n        \"Tool support\",\n        \"Tinyagent: Function calling at the edge\",\n        \"Berkeley function calling leaderboard\",\n        \"Geollm-engine: A realistic environment for building geospatial copilots\",\n        \"Nvidia jetson agx orin series\",\n        \"Qlora: Efficient finetuning of quantized llms\",\n        \"Llm-pruner: On the structural pruning of large language models\",\n        \"Efficient memory management for large language model serving with pagedattention\",\n        \"MiniLLM: Knowledge distillation of large language models\",\n        \"Llmlingua: Compressing prompts for accelerated inference of large language models\",\n        \"Llm in a flash: Efficient large language model inference with limited memory\",\n        \"The breakthrough memory solutions for improved performance on llm inference\",\n        \"Specinfer: Accelerating large language model serving with tree-based speculative inference and verification\",\n        \"Llm inference serving: Survey of recent advances and opportunities\",\n        \"Edge-llm: Enabling efficient large language model adaptation on edge devices via unified compression and adaptive layer voting\",\n        \"Routerbench: A benchmark for multi-llm routing system\",\n        \"Frugalgpt: How to use large language models while reducing cost and improving performance\",\n        \"Visualwebarena: Evaluating multimodal agents on realistic visual web tasks\",\n        \"Llm-dcache: Improving tool-augmented llms with gpt-driven localized data caching\",\n        \"Memserve: Context caching for disaggregated llm serving with elastic memory pool\",\n        \"ToolLLM: Facilitating large language models to master 16000+ real-world APIs\",\n        \"Octopus: On-device language model for function calling of software apis\",\n        \"An llm compiler for parallel function calling\",\n        \"An llm-tool compiler for fused parallel function calling\",\n        \"Balancing throughput and fair execution of multi-dnn workloads on heterogeneous embedded devices\",\n        \"Geckopt: Llm system efficiency via intent-based tool selection\",\n        \"Mapformer: Attention-based multi-dnn manager for throughout & power co-optimization on embedded devices\",\n        \"Contextual retrieval\",\n        \"Mpnet: Masked and permuted pre-training for language understanding\",\n        \"Toolqa: A dataset for llm question answering with external tools\",\n        \"Agglomerative clustering\",\n        \"The faiss library\",\n        \"Evaluating tool-augmented agents in remote sensing platforms\",\n        \"Hermes-2-pro-llama-3-8b\",\n        \"The llama 3 herd of models\",\n        \"Mistral 7b\",\n        \"Qwen2 technical report\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Less is More: Optimizing Function Calling for LLM Execution on Edge Devices, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}