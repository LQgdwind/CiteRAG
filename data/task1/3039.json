{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Comparing the Benefit of Synthetic Training Data for Various Automatic Speech Recognition Architectures\n\nPaper Abstract: Abstract Recent publications on automatic-speech-recognition (ASR) have a strong focus on attention encoder-decoder (AED) architectures which tend to suffer from over-fitting in low resource scenarios. One solution to tackle this issue is to generate synthetic data with a trained text-to-speech system (TTS) if additional text is available. This was successfully applied in many publications with AED systems, but only very limited in the context of other ASR architectures. We investigate the effect of varying pre-processing, the speaker embedding and input encoding of the TTS system w.r.t. the effectiveness of the synthesized data for AED-ASR training. Additionally, we also consider internal language model subtraction for the first time, resulting in up to 38% relative improvement. We compare the AED results to a state-of-the-art hybrid ASR system, a monophone based system using connectionist-temporal-classification (CTC) and a monotonic transducer based system. We show that for the later systems the addition of synthetic data has no relevant effect, but they still outperform the AED systems on LibriSpeech-100h. We achieve a final word-error-rate of 3.3%/10.0% with a hybrid system on the clean/noisy test-sets, surpassing any previous state-of-the-art systems on Librispeech-100h that do not include unlabeled audio data.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"End-to-end ASR: from supervised to semi-supervised learning with modern architectures\",\n        \"SpecAugment: A simple data augmentation method for automatic speech recognition\",\n        \"A comparative study on transformer vs RNN in speech applications\",\n        \"RWTH ASR systems for librispeech: Hybrid vs attention\",\n        \"Connectionist temporal classification: Labelling unsegmented sequence data with recurrent neural networks\",\n        \"Towards end-to-end speech recognition with recurrent neural networks\",\n        \"Sequence transduction with recurrent neural networks\",\n        \"Contextnet: Improving convolutional neural networks for automatic speech recognition with global context\",\n        \"Improved noisy student training for automatic speech recognition\",\n        \"Single headed attention based sequence-to-sequence model for state-of-the-art results on switchboard-300\",\n        \"Semi-supervised sequence-to-sequence ASR using unpaired speech and text\",\n        \"Speech recognition with augmented synthesized speech\",\n        \"Generating synthetic audio data for attention-based speech recognition systems\",\n        \"You do not need more data: Improving end-to-end speech recognition by text-to-speech data augmentation\",\n        \"Eat: Enhanced ASR-TTS for self-supervised speech recognition\",\n        \"Self-training for end-to-end speech recognition\",\n        \"Natural TTS synthesis by conditioning wavenet on MEL spectrogram predictions\",\n        \"Librispeech: An asr corpus based on public domain audio books.\",\n        \"LibriTTS: A corpus derived from librispeech for text-to-speech\",\n        \"Teacher-student training for robust tacotron-based TTS\",\n        \"Non-attentive tacotron: Robust and controllable neural TTS synthesis including unsupervised duration modeling\",\n        \"Developing RNN-t models surpassing high-performance hybrid models with customization capability\",\n        \"Synthasr: Unlocking synthetic data for speech recognition\",\n        \"A density ratio approach to language model fusion in end-to-end automatic speech recognition\",\n        \"Hybrid autoregressive transducer (HAT)\",\n        \"Internal language model estimation for domain-adaptive end-to-end speech recognition\",\n        \"Investigating methods to improve language model integration for attention-based encoder-decoder asr models\",\n        \"Librispeech transducer model with internal language model prior correction\",\n        \"Returnn: The RWTH extensible training framework for universal recurrent neural networks\",\n        \"RASR/NN: The RWTH neural network toolkit for speech recognition\",\n        \"Sisyphus, a workflow manager designed for machine translation and automatic speech recognition\",\n        \"Long short-term memory\",\n        \"Improved training of end-to-end attention models for speech recognition\",\n        \"A comparison of transformer and lstm encoder decoder models for asr\",\n        \"Dropout: A simple way to prevent neural networks from overfitting\",\n        \"Zoneout: Regularizing RNNs by randomly preserving hidden activations\",\n        \"Neural machine translation of rare words with subword units\",\n        \"The general use of tying in phoneme-based HMM speech recognisers\",\n        \"Phoneme based neural transducer for large vocabulary speech recognition\",\n        \"Language modeling with deep transformers\",\n        \"Speech synthesis from short-time fourier transform magnitude and its application to speech processing\",\n        \"Joint-sequence models for grapheme-to-phoneme conversion\",\n        \"Style tokens: Unsupervised style modeling, control and transfer in end-to-end speech synthesis\",\n        \"slimIPL: Language-model-free iterative pseudo-labeling\",\n        \"Rnn-transducer with stateless prediction network\",\n        \"X-vectors: Robust dnn embeddings for speaker recognition\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Comparing the Benefit of Synthetic Training Data for Various Automatic Speech Recognition Architectures, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}