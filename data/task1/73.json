{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: A Closer Look at Lightweight Graph Reordering\n\nPaper Abstract: Abstract Graph analytics power a range of applications in areas as diverse as finance, networking and business logistics. A common property of graphs used in the domain of graph analytics is a power-law distribution of vertex connectivity, wherein a small number of vertices are responsible for a high fraction of all connections in the graph. These richly-connected (hot) vertices inherently exhibit high reuse. However, their sparse distribution in memory leads to a severe underutilization of on-chip cache capacity. Prior works have proposed lightweight skew-aware vertex reordering that places hot vertices adjacent to each other in memory, reducing the cache footprint of hot vertices and thus improving cache efficiency. However, in doing so, they may inadvertently destroy the inherent community structure within the graph, which may negate the performance gains achieved from the reduced footprint of hot vertices. In this work, we study existing reordering techniques and demonstrate the inherent tension between reducing the cache footprint of hot vertices and preserving original graph structure. We quantify the potential performance loss due to disruption in graph structure for different graph datasets. We further show that reordering techniques that employ fine-grain reordering significantly increase misses in the higher level caches, even when they reduce misses in the last level cache. To overcome the limitations of existing reordering techniques, we propose Degree-Based Grouping (DBG), a novel lightweight reordering technique that employs a coarse-grain reordering to largely preserve graph structure while reducing the cache footprint of hot vertices. Our evaluation on 40 combinations of various graph applications and datasets shows that, compared to a baseline with no reordering, DBG yields an average application speed-up of 16.8% vs 11.6% for the best-performing existing lightweight technique.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Locality Exists in Graph Processing: Workload Characterization on an Ivy Bridge Server\",\n        \"IMP: Indirect Memory Prefetcher\",\n        \"Graph Prefetching Using Data Structure Knowledge\",\n        \"Speedup Graph Processing by Graph Ordering\",\n        \"Making Caches Work for Graph Analytics\",\n        \"When is Graph Reordering an Optimization? Studying the Effect of Lightweight Graph Reordering Across Applications and Input Graphs\",\n        \"Emergence of Scaling in Random Networks\",\n        \"On Power-law Relationships of the Internet Topology\",\n        \"PowerGraph: Distributed Graph-parallel Computation on Natural Graphs\",\n        \"Community structure in social and biological networks\",\n        \"Statistical Properties of Community Structure in Large Social and Information Networks\",\n        \"Ligra: A Lightweight Graph Processing Framework for Shared Memory\",\n        \"A Lightweight Infrastructure for Graph Analytics\",\n        \"The GAP Benchmark Suite\",\n        \"GraphMat: High Performance Graph Analytics Made Productive\",\n        \"GraphLab: A New Framework For Parallel Machine Learning\",\n        \"GraphChi: Large-scale Graph Computation on Just a PC\",\n        \"Rabbit Order: Just-in-Time Parallel Reordering for Fast Graph Analysis\",\n        \"ReCALL: Reordered Cache Aware Locality Based Graph Processing\",\n        \"Streaming Graph Partitioning for Large Distributed Graphs\",\n        \"Multilevel k-way Partitioning Scheme for Irregular Graphs\",\n        \"Beyond ’Caveman Communities’: Hubs and Spokes for Graph Compression and Mining\",\n        \"Reducing the Bandwidth of Sparse Symmetric Matrices\",\n        \"Clustering a DAG for CAD databases\",\n        \"The PageRank Citation Ranking: Bringing Order to the Web\",\n        \"Fast Computation of Empirically Tight Bounds for the Diameter of Massive Graphs\",\n        \"Intel Xeon Processor E5-2630 v4\",\n        \"Web Data Commons - Hyperlink Graphs\",\n        \"What is Twitter, a Social Network or a News Media?\",\n        \"SNAP Datasets: Stanford Large Network Dataset Collection\",\n        \"Wikipedia, English network dataset – KONECT\",\n        \"Friendster network dataset – KONECT\",\n        \"Twitter (MPI) network dataset – KONECT\",\n        \"Scalable SIMD-Efficient Graph Processing on GPUs\",\n        \"The Network Data Repository with Interactive Graph Analytics and Visualization\",\n        \"R-MAT: A Recursive Model for Graph Mining\",\n        \"Exploiting Locality in Graph Analytics through Hardware-Accelerated Traversal Scheduling\",\n        \"Graphicionado: A High-Performance and Energy-Efficient Accelerator for Graph Analytics\",\n        \"SHiP: Signature-based Hit Predictor for High Performance Caching\",\n        \"Sampling Dead Block Prediction for Last-Level Caches\",\n        \"Back to the Future: Leveraging Belady’s Algorithm for Improved Cache Replacement\",\n        \"Perceptron Learning for Reuse Prediction\",\n        \"Leeway: Addressing Variability in Dead-Block Prediction for Last-Level Caches\",\n        \"POSTER: Domain-Specialized Cache Management for Graph Analytics\",\n        \"Layered Label Propagation: A Multiresolution Coordinate-free Ordering for Compressing Social Networks\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in A Closer Look at Lightweight Graph Reordering, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}