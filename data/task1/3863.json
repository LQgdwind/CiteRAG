{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 41 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: On the Evaluation of Commit Message Generation Models: An Experimental Study\n\nPaper Abstract: Abstract Commit messages are natural language descriptions of code changes, which are important for program understanding and maintenance. However, writing commit messages manually is time-consuming and laborious, especially when the code is updated frequently. Various approaches utilizing generation or retrieval techniques have been proposed to automatically generate commit messages. To achieve a better understanding of how the existing approaches perform in solving this problem, this paper conducts a systematic and in-depth analysis of the state-of-the-art models and datasets. We find that: (1) Different variants of the BLEU metric are used in previous works, which affects the evaluation and understanding of existing methods. (2) Most existing datasets are crawled only from Java repositories while repositories in other programming languages are not sufficiently explored. (3) Dataset splitting strategies can influence the performance of existing models by a large margin. Some models show better performance when the datasets are split by commit, while other models perform better when the datasets are split by timestamp or by project. Based on our findings, we conduct a human evaluation and find the BLEU metric that best correlates with the human scores for the task. We also collect a large-scale, information-rich, and multi-language commit message dataset MCMD and evaluate existing models on this dataset. Furthermore, we conduct extensive experiments under different dataset splitting strategies and suggest the suitable models under different scenarios. Based on the experimental results and findings, we provide feasible suggestions for comprehensively evaluating commit message generation models and discuss possible future research directions. We believe this work can help practitioners and researchers better evaluate and select models for automatic commit message generation. Our source code and data are available at https://github.com/DeepSoftwareAnalytics/CommitMsgEmpirical.\n\n{retrieved_text}\n\nGenerate exactly 41 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 41\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Automatic classication of large changes into maintenance categories\",\n        \"The relationship between commit message detail and defect proneness in java projects on github\",\n        \"Recommending refactorings via commit message analysis\",\n        \"ATOM: commit message generation based on abstract syntax tree and hybrid ranking\",\n        \"Changescribe: A tool for automatically generating commit messages\",\n        \"Automatically documenting program changes\",\n        \"On automatically generating commit messages via summarization of source code changes\",\n        \"Neural-machine-translation-based commit message generation: how far are we?\",\n        \"Learning human-written commit messages to document code changes\",\n        \"Automatically generating commit messages from diffs using neural machine translation\",\n        \"Content aware source code change description generation\",\n        \"A neural architecture for generating natural language descriptions from source code changes\",\n        \"Generating commit messages from diffs using pointer-generator network\",\n        \"Get to the point: Summarization with pointer-generator networks\",\n        \"Commit message generation for source code changes\",\n        \"Nematus: a toolkit for neural machine translation\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Effective approaches to attention-based neural machine translation\",\n        \"Christopher d. manning, prabhakar raghavan, and hinrich schütze: Introduction to information retrieval - cambridge university press, cambridge, england, 2008, 482 pp, ISBN: 978-0-521-86571-5\",\n        \"Cc2vec: distributed representations of code changes\",\n        \"Towards automatic generation of short summaries of commits\",\n        \"Bleu: a method for automatic evaluation of machine translation\",\n        \"METEOR: an automatic metric for MT evaluation with improved correlation with human judgments\",\n        \"ROUGE: A package for automatic evaluation of summaries\",\n        \"Cider: Consensus-based image description evaluation\",\n        \"Cocogum: Contextual code summarization with multi-relational gnn on umls\",\n        \"Deep API learning\",\n        \"Retrieval-based neural source code summarization\",\n        \"Moses: Open source toolkit for statistical machine translation\",\n        \"Automatic evaluation of machine translation quality using longest common subsequence and skip-bigram statistics\",\n        \"Steven bird, evan klein and edward loper. Natural Language Processing with Python. o’reilly media, inc 2009. ISBN: 978-0-596-51649-9\",\n        \"A systematic comparison of smoothing techniques for sentence-level BLEU\",\n        \"code2seq: Generating sequences from structured representations of code\",\n        \"Automatic generation of pull request descriptions\",\n        \"Asking and answering questions during a programming change task\",\n        \"Best practices for the human evaluation of automatically generated text\",\n        \"Answering the call for a standard reliability measure for coding data\",\n        \"The treatment of ties in ranking problems\",\n        \"Results of the WMT19 metrics shared task: Segment-level and strong MT systems pose big challenges\",\n        \"CRC standard probability and statistics tables and formulae\",\n        \"Recommendations for datasets for source code summarization\"\n    ],\n    \"reasoning\": \"Selected these 41 references because they represent foundational work and recent advances in On the Evaluation of Commit Message Generation Models: An Experimental Study, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}