{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 55 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Software Testing for Machine Learning\n\nPaper Abstract: Abstract Machine learning has become prevalent across a wide variety of applications. Unfortunately, machine learning has also shown to be susceptible to deception, leading to errors, and even fatal failures. This circumstance calls into question the widespread use of machine learning, especially in safety-critical applications, unless we are able to assure its correctness and trustworthiness properties. Software verification and testing are established technique for assuring such properties, for example by detecting errors. However, software testing challenges for machine learning are vast and profuse - yet critical to address. This summary talk discusses the current state-of-the-art of software testing for machine learning. More specifically, it discusses six key challenge areas for software testing of machine learning systems, examines current approaches to these challenges and highlights their limitations. The paper provides a research agenda with elaborated directions for making progress toward advancing the state-of-the-art on testing of machine learning.\n\n{retrieved_text}\n\nGenerate exactly 55 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 55\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Software engineering for machine learning: A case study\",\n        \"Measuring neural net robustness with constraints\",\n        \"Towards evaluating the robustness of neural networks\",\n        \"Audio adversarial examples: Targeted attacks on speech-to-text\",\n        \"Hidden voice commands\",\n        \"The robot’s dilemma\",\n        \"Formal verification of ethical choices in autonomous systems\",\n        \"Deepcruiser: Automated guided testing for stateful deep learning systems\",\n        \"Identifying implementation bugs in machine learning based image classifiers using metamorphic testing\",\n        \"Analysis of classifiers’ robustness to adversarial perturbations\",\n        \"cleverhans v0.1: an adversarial machine learning library\",\n        \"Explaining and harnessing adversarial examples\",\n        \"Formal guarantees on the robustness of a classifier against adversarial manipulation\",\n        \"Testing of autonomous systems – challenges and current state-of-the-art\",\n        \"Safety verification of deep neural networks\",\n        \"Robustness testing of autonomy software\",\n        \"Adversarial examples for evaluating reading comprehension systems\",\n        \"Reluplex: An efficient smt solver for verifying deep neural networks\",\n        \"An experimental evaluation of the assumption of independence in multiversion programming\",\n        \"Adversarial attacks and defences competition\",\n        \"Structural coverage criteria for neural networks could be misleading\",\n        \"Deepgauge: Multi-granularity testing criteria for deep learning systems\",\n        \"Deepmutation: Mutation testing of deep learning systems\",\n        \"Combinatorial testing for deep learning systems\",\n        \"Practical selective regression testing with effective redundancy in interleaved tests\",\n        \"Challenges of testing machine learning based systems\",\n        \"A learning algorithm for optimizing continuous integration development and testing practice\",\n        \"Universal adversarial perturbations\",\n        \"Deepfool: A simple and accurate method to fool deep neural networks\",\n        \"An approach to software testing of machine learning applications\",\n        \"Tensorfuzz: Debugging neural networks with coverage-guided fuzzing\",\n        \"Distillation as a defense to adversarial perturbations against deep neural networks\",\n        \"Deepxplore: Automated whitebox testing of deep learning systems\",\n        \"Foolbox v0.8.0: A python toolbox to benchmark the robustness of machine learning models\",\n        \"Reachability analysis of deep neural networks with provable guarantees\",\n        \"Interpretable adversarial perturbation in input embedding space for text\",\n        \"Munn: Mutation analysis of neural networks\",\n        \"Deepgini: Prioritizing massive tests to reduce labeling cost\",\n        \"Certifiable distributional robustness with principled adversarial training\",\n        \"Constructing unrestricted adversarial examples with generative models\",\n        \"Concolic testing for deep neural networks\",\n        \"Structural test coverage criteria for deep neural networks\",\n        \"Testing deep neural networks\",\n        \"Intriguing properties of neural networks\",\n        \"Deeptest: Automated testing of deep-neural-network-driven autonomous cars\",\n        \"Ensemble adversarial training: Attacks and defenses\",\n        \"Generating certification evidence for autonomous unmanned aircraft using model checking and simulation\",\n        \"On testing non-testable programs\",\n        \"Feature-guided black-box safety testing of deep neural networks\",\n        \"Generating adversarial examples with adversarial networks\",\n        \"Adversarial examples for semantic segmentation and object detection\",\n        \"Coverage-guided fuzzing for deep neural networks\",\n        \"Testing and validating machine learning classififiers by metamorphic testing\",\n        \"Adversarial examples: Attacks and defenses for deep learning\",\n        \"Deeproad: Gan-based metamorphic testing and input validation framework for autonomous driving systems\"\n    ],\n    \"reasoning\": \"Selected these 55 references because they represent foundational work and recent advances in Software Testing for Machine Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}