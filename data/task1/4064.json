{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Noisy Channel Language Model Prompting for Few-Shot Text Classification\n\nPaper Abstract: Abstract We introduce a noisy channel approach for language model prompting in few-shot text classification. Instead of computing the likelihood of the label given the input (referred as direct models), channel models compute the conditional probability of the input given the label, and are thereby required to explain every word in the input. We use channel models for recently proposed few-shot learning methods with no or very limited updates to the language model parameters, via either in-context demonstration or prompt tuning. Our experiments show that, for both methods, channel models significantly outperform their direct counterparts, which we attribute to their stability, i.e., lower variance and higher worst-case accuracy. We also present extensive ablations that provide recommendations for when to use channel prompt tuning instead of other competitive methods (e.g., direct head tuning): channel prompt tuning is preferred when the number of training examples is small, labels in the training data are imbalanced, or generalization to unseen labels is required.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Using machine learning algorithms for breast cancer risk prediction and diagnosis\",\n        \"Self-supervised meta-learning for few-shot natural language classification tasks\",\n        \"The mathematics of statistical machine translation: Parameter estimation\",\n        \"Language models are few-shot learners\",\n        \"MixText: Linguistically-informed interpolation of hidden space for semi-supervised text classification\",\n        \"Semi-supervised sequence modeling with cross-view training\",\n        \"Latent-variable generative models for data-efficient text classification\",\n        \"Model-agnostic meta-learning for fast adaptation of deep networks\",\n        \"Making pre-trained language models better few-shot learners\",\n        \"On calibration of modern neural networks\",\n        \"Surface form competition: Why the highest probability answer isn’t always right\",\n        \"Parameter-efficient transfer learning for nlp\",\n        \"Mining and summarizing customer reviews\",\n        \"Natural language to structured query generation via meta-learning\",\n        \"How can we know what language models know?\",\n        \"Adam: A method for stochastic optimization\",\n        \"Statistical phrase-based translation\",\n        \"How many data points is a prompt worth?\",\n        \"Dbpedia–a large-scale, multilingual knowledge base extracted from wikipedia\",\n        \"The power of scale for parameter-efficient prompt tuning\",\n        \"Generative question answering: Learning to answer the whole question\",\n        \"Prefix-tuning: Optimizing continuous prompts for generation\",\n        \"Gpt understands, too\",\n        \"Cutting down on prompts and parameters: Simple few-shot learning with language models\",\n        \"Fantastically ordered prompts and where to find them: Overcoming few-shot prompt order sensitivity\",\n        \"Hidden factors and hidden topics: understanding rating dimensions with review text\",\n        \"Adversarial training methods for semi-supervised text classification\",\n        \"On discriminative vs. generative classifiers: A comparison of logistic regression and naive bayes\",\n        \"A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts\",\n        \"Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"True few-shot learning with language models\",\n        \"Learning how to ask: Querying lms with mixtures of soft prompts\",\n        \"Language models are unsupervised multitask learners\",\n        \"Learning multiple visual domains with residual adapters\",\n        \"A mathematical theory of communication\",\n        \"Autoprompt: Eliciting knowledge from language models with automatically generated prompts\",\n        \"Recursive deep models for semantic compositionality over a sentiment treebank\",\n        \"Improving and simplifying pattern exploiting training\",\n        \"Building a question answering test collection\",\n        \"Transformers: State-of-the-art natural language processing\",\n        \"Unsupervised data augmentation for consistency training\",\n        \"A syntax-based statistical translation model\",\n        \"Simple and effective noisy channel modeling for neural machine translation\",\n        \"Generative and discriminative text classification with recurrent neural networks\",\n        \"The neural noisy channel\",\n        \"Character-level convolutional networks for text classification\",\n        \"Calibrate before use: Improving few-shot performance of language models\",\n        \"Factual probing is [mask]: Learning vs. learning to recall\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Noisy Channel Language Model Prompting for Few-Shot Text Classification, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}