{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Progressive Generation of Long Text with Pretrained Language Models\n\nPaper Abstract: Abstract Large-scale language models (LMs) pretrained on massive corpora of text, such as GPT-2, are powerful open-domain text generators. However, as our systematic examination reveals, it is still challenging for such models to generate coherent long passages of text (e.g., 1000 tokens), especially when the models are fine-tuned to the target domain on a small corpus. Previous planning-then-generation methods also fall short of producing such long text in various domains. To overcome the limitations, we propose a simple but effective method of generating text in a progressive manner, inspired by generating images from low to high resolution. Our method first produces domain-specific content keywords and then progressively refines them into complete passages in multiple stages. The simple design allows our approach to take advantage of pretrained LMs at each stage and effectively adapt to any target domain given only a small set of examples. We conduct a comprehensive empirical study with a broad set of evaluation metrics, and show that our approach significantly improves upon the fine-tuned large LMs and various planning-then-generation methods in terms of quality and sample efficiency. Human evaluation also validates that our model generations are more coherent.111Code available at https://github.com/tanyuqian/progressive-generation\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Discourse-aware neural rewards for coherent text generation\",\n        \"Language models are few-shot learners\",\n        \"KERMIT: Generative insertion-based modeling for sequences\",\n        \"Rethinking attention with performers\",\n        \"Transformer-XL: Attentive language models beyond a fixed-length context\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Hierarchical neural story generation\",\n        \"Strategies for structuring story generation\",\n        \"The importance of generation order in language modeling\",\n        \"A robot wrote this entire article. are you scared yet, human?\",\n        \"Insertion-based decoding with automatically inferred generation order\",\n        \"Teaching machines to read and comprehend\",\n        \"The curious case of neural text degeneration\",\n        \"Sentence-level content planning and style specification for neural text generation\",\n        \"PAIR: Planning and iterative refinement in pre-trained transformers for long text generation\",\n        \"Non-autoregressive machine translation with disentangled context transformer\",\n        \"Deterministic non-autoregressive neural sequence modeling by iterative refinement\",\n        \"BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension\",\n        \"Generating wikipedia by summarizing long sequences\",\n        \"A generalized framework of sequence generation with application to undirected sequence models\",\n        \"Gpt-3 exposed: Behind the smoke and mirrors\",\n        \"Jointly measuring diversity and quality in text generation models\",\n        \"Step-by-step: Separating planning from realization in neural data-to-text generation\",\n        \"Iterative refinement for machine translation\",\n        \"Data-to-text generation with content selection and planning\",\n        \"Back to the future: Unsupervised backprop-based decoding for counterfactual and abductive commonsense reasoning\",\n        \"Language models are unsupervised multitask learners\",\n        \"Sequence level training with recurrent neural networks\",\n        \"PlotMachines: Outline-conditioned generation with dynamic plot state tracking\",\n        \"Building applied natural language generation systems\",\n        \"Automatic keyword extraction from individual documents\",\n        \"Introduction to modern information retrieval\",\n        \"Do massively pretrained language models make better storytellers?\",\n        \"Towards generating long and coherent text with multi-level latent variable models\",\n        \"Blank language models\",\n        \"Toward diverse text generation with inverse reinforcement learning\",\n        \"Insertion transformer: Flexible sequence generation via insertion operations\",\n        \"Connecting the dots between mle and rl for sequence generation\",\n        \"Attention is all you need\",\n        \"Linformer: Self-attention with linear complexity\",\n        \"Non-monotonic sequential text generation\",\n        \"Data noising as smoothing in neural network language models\",\n        \"MEGATRON-CNTRL: Controllable story generation with external knowledge using large-scale language models\",\n        \"Plan-and-write: Towards better automatic storytelling\",\n        \"Towards implicit content-introducing for generative short-text conversation systems\",\n        \"POINTER: Constrained progressive text generation via insertion-based generative pre-training\",\n        \"Graph-based multi-hop reasoning for long text generation\",\n        \"Text infilling\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Progressive Generation of Long Text with Pretrained Language Models, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}