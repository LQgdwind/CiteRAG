{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 58 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Data-driven Forecasting of Deep Learning Performance on GPUs\n\nPaper Abstract: Abstract. Deep learning kernels exhibit predictable memory accesses and compute patterns, making GPUs’ parallel architecture well-suited for their execution. Software and runtime systems for GPUs are optimized to better utilize the stream multiprocessors, on-chip cache, and off-chip high-bandwidth memory. As deep learning models and GPUs evolve, access to newer GPUs is often limited, raising questions about the performance of new model architectures on existing GPUs, existing models on new GPUs, and new model architectures on new GPUs. To address these questions, we introduce NeuSight, a framework to predict the performance of various deep learning models, for both training and inference, on unseen GPUs without requiring actual execution. The framework leverages both GPU hardware behavior and software library optimizations to estimate end-to-end performance. Previous work uses regression models (Isaev et al., 2023; Li et al., 2023) that capture linear trends or multilayer perceptrons (Yu et al., 2021) to predict the overall latency of deep learning kernels on GPUs. These approaches suffer from higher error percentages when forecasting performance on unseen models and new GPUs. Instead, NeuSight decomposes the prediction problem into smaller problems, bounding the prediction through fundamental performance laws. NeuSight decomposes a single deep learning kernel prediction into smaller working sets called tiles, which are executed independently on the GPU. Tile-granularity predictions are determined using a machine learning approach and aggregated to estimate end-to-end latency. NeuSight outperforms prior work across various deep learning workloads and the latest GPUs. It reduces the percentage error from 198% and 19.7% to 3.8% in predicting the latency of GPT3 model for training and inference on H100, compared to state-of-the-art prior works (Yu et al., 2021; Li et al., 2023), where both GPT3 and H100 were not used to train the framework.\n\n{retrieved_text}\n\nGenerate exactly 58 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 58\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Calculon: a methodology and tool for high-level co-design of systems and large language models\",\n        \"Path forward beyond simulators: Fast and accurate GPU execution time prediction for DNN workloads\",\n        \"Habitat: A Runtime-Based computational performance predictor for deep neural network training\",\n        \"NVIDIA cuDNN\",\n        \"Cutlass: Fast linear algebra in cuda c++\",\n        \"Nvidia dgx platform\",\n        \"AMD Instinct HPC Solutions\",\n        \"NVIDIA Data Center GPUs\",\n        \"AMD Instinct Accelerators\",\n        \"Imagenet classification with deep convolutional neural networks\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"BERT: Pre-training of deep bidirectional transformers for language understanding\",\n        \"Language models are unsupervised multitask learners\",\n        \"Exploring the limits of transfer learning with a unified text-to-text transformer\",\n        \"Language models are few-shot learners\",\n        \"Using deepspeed and megatron to train megatron-turing nlg 530b, a large-scale generative language model\",\n        \"Meta To Build Open-Source Artificial General Intelligence For All, Zuckerberg Says\",\n        \"Tpu v4: An optically reconfigurable supercomputer for machine learning with hardware support for embeddings\",\n        \"From High-Level Deep Neural Models to FPGAs\",\n        \"Tabla: A unified template-based framework for accelerating statistical machine learning\",\n        \"In-rdbms hardware acceleration of advanced analytics\",\n        \"A configurable cloud-scale dnn processor for real-time ai\",\n        \"Eyeriss v2: A Flexible Accelerator for Emerging Deep Neural Networks on Mobile Devices\",\n        \"Sunstone: A Scalable and Versatile Scheduler for Mapping Tensor Algebra on Spatial Accelerators\",\n        \"Understanding reuse, performance, and hardware cost of DNN dataflows: A data-centric approach\",\n        \"Analyzing CUDA workloads using a detailed GPU simulator\",\n        \"Accel-sim: An extensible simulation framework for validated GPU modeling\",\n        \"Principal kernel analysis: A tractable methodology to simulate scaled GPU workloads\",\n        \"AMD Instinct™ MI250X Accelerators\",\n        \"PyTorch\",\n        \"TensorFlow\",\n        \"Daydream: Accurately estimating the efficacy of optimizations for DNN training\",\n        \"Pipedream: generalized pipeline parallelism for dnn training\",\n        \"GPipe: Efficient Training of Giant Neural Networks using Pipeline Parallelism\",\n        \"Megatron-lm\",\n        \"Nvlink\",\n        \"Data-driven offline optimization for architecting hardware accelerators\",\n        \"An analytical model for a GPU architecture with memory-level and thread-level parallelism awareness\",\n        \"PALEO: A PERFORMANCE MODEL FOR DEEP NEURAL NETWORKS\",\n        \"Stargazer: Automated regression-based GPU design space exploration\",\n        \"GPGPU performance and power estimation using machine learning\",\n        \"HALWPE: Hardware-assisted light weight performance estimation for GPUs\",\n        \"Prediction of the resource consumption of distributed deep learning systems\",\n        \"Cross-architecture performance prediction (XAPP) using CPU code to predict GPU performance\",\n        \"FlashAttention: Fast and memory-efficient exact attention with IO-awareness\",\n        \"TVM: An automated end-to-end optimizing compiler for deep learning\",\n        \"GPU Performance Background\",\n        \"Roofline: an insightful visual performance model for multicore architectures\",\n        \"NVIDIA H100 Tensor Core GPU Architecture\",\n        \"NVIDIA Blackwell Architecture Technical Brief\",\n        \"torch.fx-PyTorch 2.2 documentation\",\n        \"TopoOpt: Co-optimizing network topology and parallelization strategy for distributed training jobs\",\n        \"Astra-sim: Enabling sw/hw co-design exploration for distributed dl training platforms\",\n        \"Memory-efficient pipeline-parallel DNN training\",\n        \"A better measure of relative prediction accuracy for model selection and model estimation\",\n        \"PyTorch Profiler\",\n        \"Introduction to torch.compile\",\n        \"NVIDIA DGX H100\"\n    ],\n    \"reasoning\": \"Selected these 58 references because they represent foundational work and recent advances in Data-driven Forecasting of Deep Learning Performance on GPUs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}