{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Clenshaw Graph Neural Networks\n\nPaper Abstract: Abstract. Graph Convolutional Networks (GCNs), which use a message-passing paradigm with stacked convolution layers, are foundational methods for learning graph representations. Recent GCN models use various residual connection techniques to alleviate the model degradation problem such as over-smoothing and gradient vanishing. Existing residual connection techniques, however, fail to make extensive use of underlying graph structure as in the graph spectral domain, which is critical for obtaining satisfactory results on heterophilic graphs. In this paper, we introduce ClenshawGCN, a GNN model that employs the Clenshaw Summation Algorithm to enhance the expressiveness of the GCN model. ClenshawGCN equips the standard GCN model with two straightforward residual modules: the adaptive initial residual connection and the negative second-order residual connection. We show that by adding these two residual modules, ClenshawGCN implicitly simulates a polynomial filter under the Chebyshev basis, giving it at least as much expressive power as polynomial spectral GNNs. In addition, we conduct comprehensive experiments to demonstrate the superiority of our model over spatial and spectral GNN models.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Mixhop: Higher-order graph convolutional architectures via sparsified neighborhood mixing\",\n        \"Optuna: A next-generation hyperparameter optimization framework\",\n        \"Graph neural networks with convolutional arma filters\",\n        \"The Laplacian pyramid as a compact image code\",\n        \"Grand: Graph neural diffusion\",\n        \"Simple and deep graph convolutional networks\",\n        \"Adaptive Universal Generalized PageRank Graph Neural Network\",\n        \"Learning to extract symbolic knowledge from the World Wide Web\",\n        \"Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering\",\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"Graph neural networks for social recommendation\",\n        \"Deep Residual Learning for Image Recognition\",\n        \"BernNet: Learning Arbitrary Graph Spectral Filters via Bernstein Approximation\",\n        \"Convolutional Neural Networks on Graphs with Chebyshev Approximation, Revisited\",\n        \"XXI. A new method of solving numerical equations of all orders, by continuous approximation\",\n        \"Densenet: Implementing efficient convnet descriptor pyramids\",\n        \"Adam: A method for stochastic optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Predict then propagate: Graph neural networks meet personalized pagerank\",\n        \"Diffusion improves graph learning\",\n        \"DeepGCNs: Can GCNs Go as Deep as CNNs?\",\n        \"Deeper insights into graph convolutional networks for semi-supervised learning\",\n        \"Large Scale Learning on Non-Homophilous Graphs: New Benchmarks and Strong Simple Methods\",\n        \"Graph Neural Networks with Adaptive Residual\",\n        \"Is Heterophily A Real Nightmare For Graph Neural Networks To Do Node Classification?\",\n        \"Birds of a feather: Homophily in social networks\",\n        \"Signal processing techniques for interpolation in graph structured data\",\n        \"Local laplacian filters: edge-aware image processing with a laplacian pyramid\",\n        \"Geom-GCN: Geometric Graph Convolutional Networks\",\n        \"Discovering communities and anomalies in attributed graphs: Interactive visual exploration and summarization\",\n        \"DropEdge: Towards Deep Graph Convolutional Networks on Node Classification\",\n        \"E (n) equivariant graph neural networks\",\n        \"Interpreting graph neural networks for nlp with differentiable edge masking\",\n        \"Collective classification in network data\",\n        \"Vertex-Frequency Analysis on Graphs\",\n        \"On the importance of initialization and momentum in deep learning\",\n        \"Social influence analysis in large-scale networks\",\n        \"Improving graph attention networks with large margin-based constraints\",\n        \"How Powerful are Spectral Graph Neural Networks\",\n        \"Graph neural networks for natural language processing: A survey\",\n        \"Graph neural networks in recommender systems: a survey\",\n        \"Representation Learning on Graphs with Jumping Knowledge Networks\",\n        \"Difference Residual Graph Neural Networks\",\n        \"Revisiting semi-supervised learning with graph embeddings\",\n        \"Model Degradation Hinders Deep Graph Neural Networks\",\n        \"Adaptive Diffusion in Graph Neural Networks\",\n        \"Graph neural networks for graphs with heterophily: A survey\",\n        \"Beyond homophily in graph neural networks: Current limitations and effective designs\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Clenshaw Graph Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}