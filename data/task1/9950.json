{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: ChainForge: A Visual Toolkit for Prompt Engineering and LLM Hypothesis Testing\n\nPaper Abstract: Abstract. Evaluating outputs of large language models (LLMs) is challenging, requiring making—and making sense of—many responses. Yet tools that go beyond basic prompting tend to require knowledge of programming APIs, focus on narrow domains, or are closed-source. We present ChainForge, an open-source visual toolkit for prompt engineering and on-demand hypothesis testing of text generation LLMs. ChainForge provides a graphical interface for comparison of responses across models and prompt variations. Our system was designed to support three tasks: model selection, prompt template design, and hypothesis testing (e.g., auditing). We released ChainForge early in its development and iterated on its design with academics and online users. Through in-lab and interview studies, we find that a range of people could use ChainForge to investigate hypotheses that matter to them, including in real-world settings. We identify three modes of prompt engineering and LLM hypothesis testing: opportunistic exploration, limited evaluation, and iterative refinement.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"langchain 0.0.288\",\n        \"Aleph-Alpha\",\n        \"Grounded copilot: How programmers interact with code-generating models\",\n        \"Prompting is programming: A query language for large language models\",\n        \"Global reconstruction of language models with linguistic rules–Explainable AI for online consumer reviews\",\n        \"Promptify: Text-to-Image Generation through Interactive Prompt Exploration with Large Language Models\",\n        \"Jailbreaker: Automated Jailbreak Across Multiple Large Language Model Chatbots\",\n        \"FlowiseAI Build LLMs Apps Easily\",\n        \"Nat.Dev\",\n        \"Structure mapping in analogy and similarity\",\n        \"Usability evaluation considered harmful (some of the time)\",\n        \"Designing machine learning systems\",\n        \"Jest\",\n        \"Promptmaker: Prompt-based prototyping with large language models\",\n        \"Graphologue: Exploring Large Language Model Responses with Interactive Diagrams\",\n        \"Intermodulation: improvisation and collaborative art practice for hci\",\n        \"Cells, Generators, and Lenses: Design Framework for Object-Oriented Interaction with Large Language Models\",\n        \"Model Sketching: Centering Concepts in Early-Stage Machine Learning Model Design\",\n        \"Evaluation strategies for HCI toolkit research\",\n        \"Designing for responsible trust in AI systems: A communication perspective\",\n        \"CodeHelp: Using Large Language Models with Guardrails for Scalable Support in Programming Classes\",\n        \"LangFlow\",\n        \"Necessary conditions of learning\",\n        \"Prompt flow\",\n        \"PromptAid: Prompt Exploration, Perturbation, Testing and Iteration using Visual Analytics for Large Language Models\",\n        \"Zeno GPT Machine Translation Report\",\n        \"Beyond Amazon: Social Justice and Ethical Considerations for Research Compensation\",\n        \"Evaluating user interface systems research\",\n        \"OpenAI Playground\",\n        \"openai/evals\",\n        \"Standardizing reporting of participant compensation in HCI: A systematic literature review and recommendations for the field\",\n        \"Ignore Previous Prompt: Attack Techniques For Language Models\",\n        \"promptfoo Test your prompts\",\n        \"Supporting Human-AI Collaboration in Auditing LLMs with LLMs\",\n        \"Prompt Space Optimizing Few-shot Reasoning Success with Large Language Models\",\n        \"Interactive and visual prompt engineering for ad-hoc task adaptation with large language models\",\n        \"Sensecape: Enabling Multilevel Exploration and Sensemaking with Large Language Models\",\n        \"Black-box tuning for language-model-as-a-service\",\n        \"trulens Evaluate and Track LLM Applications\",\n        \"Vellum The dev platform for production LLM apps\",\n        \"Vercel Deveop.Preview.Ship\",\n        \"Weights and Biases Docs: Prompts for LLMs\",\n        \"Promptchainer: Chaining large language model prompts through visual programming\",\n        \"Ai chains: Transparent and controllable human-ai interaction by chaining large language model prompts\",\n        \"Why Johnny Can’t Prompt: How Non-AI Experts Try (and Fail) to Design LLM Prompts\",\n        \"Large language models are human-level prompt engineers\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in ChainForge: A Visual Toolkit for Prompt Engineering and LLM Hypothesis Testing, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}