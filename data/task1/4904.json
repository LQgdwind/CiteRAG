{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 49 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Kraken: An Efficient Engine with a Uniform Dataflow for Deep Neural Networks\n\nPaper Abstract: Abstract Deep neural networks (DNNs) have been successfully employed in a multitude of applications with remarkable performance. As such performance is achieved at a significant computational cost, several embedded applications demand fast and efficient hardware accelerators for DNNs. Previously proposed application specific integrated circuit (ASIC) architectures strive to utilize arrays of hundreds of processing elements (PEs) and reduce power-hungry DRAM accesses using multiple dataflows requiring complex PE architectures. These consume significant area and reduce the maximum clock frequency. This paper introduces the Kraken architecture, which optimally processes the convolutional layers, fully-connected layers, and matrix products of any DNN through a hardware-friendly uniform dataflow. This enables maximal data reuse of weights, inputs, and outputs, with a bare-bones PE design and on-the-fly dynamic reconfiguration. Kraken, implemented in 65-nm CMOS technology at 400 MHz, packs 672 PEs in 7.3 mm2, with a peak performance of 537.6 Gops. Kraken processes the convolutional layers of AlexNet, VGG-16, and ResNet-50 at 336.6, 17.5, and 64.2 frames/s, respectively, hence outperforming the state-of-the-art ASIC architectures in terms of overall performance efficiency, DRAM accesses, arithmetic intensity, and throughput, with 5.8×\\times more Gops/mm2 and 1.6×\\times more Gops/W.\n\n{retrieved_text}\n\nGenerate exactly 49 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 49\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"A survey of the recent architectures of deep convolutional neural networks\",\n        \"ImageNet Large Scale Visual Recognition Challenge\",\n        \"EIE: Efficient Inference Engine on Compressed Deep Neural Network\",\n        \"Survey of Machine Learning Accelerators\",\n        \"Efficient Processing of Deep Neural Networks\",\n        \"An Updated Survey of Efficient Hardware Architectures for Accelerating Deep Convolutional Neural Networks\",\n        \"Research on NVIDIA Deep Learning Accelerator\",\n        \"In-datacenter performance analysis of a tensor processing unit\",\n        \"NeuFlow: A runtime reconfigurable dataflow processor for vision\",\n        \"A massively parallel coprocessor for convolutional neural networks\",\n        \"A 1 . 93TOPS/W Scalable Deep Learning / Inference Processor with Tetra-Parallel MIMD Architecture for Big-Data Applications\",\n        \"A dynamically configurable coprocessor for convolutional neural networks\",\n        \"Towards an embedded biologically-inspired machine vision processor\",\n        \"Cambricon-X: An accelerator for sparse neural networks\",\n        \"Origami: A 803-GOp/s/W Convolutional Network Accelerator\",\n        \"SCNN: An accelerator for compressed-sparse convolutional neural networks\",\n        \"DaDianNao: A Machine-Learning Supercomputer\",\n        \"DianNao: A Small-Footprint High-Throughput Accelerator for Ubiquitous Machine-Learning\",\n        \"Optimizing FPGA-based accelerator design for deep convolutional neural networks\",\n        \"A 0.3-2.6 TOPS/W precision-scalable processor for real-time large-scale ConvNets\",\n        \"ShiDianNao: Shifting vision processing closer to the sensor\",\n        \"Deep Learning with Limited Numerical Precision\",\n        \"DianNao family: Energy-efficient hardware accelerators for machine learning\",\n        \"Deep Convolutional Neural Network Architecture with Reconfigurable Computation Patterns\",\n        \"Eyeriss: A Spatial Architecture for Energy-Efficient Dataflow for Convolutional Neural Networks\",\n        \"Eyeriss: An Energy-Efficient Reconfigurable Accelerator for Deep Convolutional Neural Networks\",\n        \"DSIP: A Scalable Inference Accelerator for Convolutional Neural Networks\",\n        \"An Architecture to Accelerate Convolution in Deep Neural Networks\",\n        \"Multi-Mode Inference Engine for Convolutional Neural Networks\",\n        \"Fast and Efficient Convolutional Accelerator for Edge Computing\",\n        \"An Energy-Efficient Accelerator Architecture with Serial Accumulation Dataflow for Deep CNNs\",\n        \"CARLA: A Convolution Accelerator with a Reconfigurable and Low-Energy Architecture\",\n        \"Eyeriss v2: A Flexible Accelerator for Emerging Deep Neural Networks on Mobile Devices\",\n        \"Cnvlutin: Ineffectual-Neuron-Free Deep Neural Network Computing\",\n        \"Energy-efficient ConvNets through approximate computing\",\n        \"An Energy-Efficient Precision-Scalable ConvNet Processor in 40-nm CMOS\",\n        \"ENVISION: A 0.26-to-10TOPS/W Subword-Parallel Dynamic-Voltage-Accuracy-Frequency-Scalable Convolutional Neural Network Processor in 28nm FDSOI\",\n        \"DNPU: An 8.1TOPS/W reconfigurable CNN-RNN processor for general-purpose deep neural networks\",\n        \"RF-rate hybrid CNN accelerator based on analog-CMOS and Xilinx RFSoC\",\n        \"Attention Is All You Need\",\n        \"ImageNet classification with deep convolutional neural networks\",\n        \"Very deep convolutional networks for large-scale image recognition\",\n        \"Deep residual learning for image recognition\",\n        \"Quantization and Training of Neural Networks for Efficient Integer-Arithmetic-Only Inference\",\n        \"TensorFlow Lite 8-bit quantization specification.\",\n        \"Quantization — PyTorch 1.10.0 documentation.\",\n        \"Ristretto: A Framework for Empirical Study of Resource-Efficient Inference in Convolutional Neural Networks\",\n        \"alexforencich: Verilog AXI stream components.\",\n        \"Optimizing LPDDR4 Performance and Power with Multi-Channel Architectures.\"\n    ],\n    \"reasoning\": \"Selected these 49 references because they represent foundational work and recent advances in Kraken: An Efficient Engine with a Uniform Dataflow for Deep Neural Networks, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}