{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Secure Your Ride: Real-time Matching Success Rate Prediction for Passenger-Driver Pairs\n\nPaper Abstract: Abstract In recent years, online ride-hailing platforms, such as Uber and Didi, have become an indispensable part of urban transportation and make our lives more convenient. After a passenger is matched up with a driver by the platform, both the passenger and the driver have the freedom to simply accept or cancel a ride with one click. Hence, accurately predicting whether a passenger-driver pair is a good match, i.e., its matching success rate (MSR), turns out to be crucial for ride-hailing platforms to devise instant strategies such as order assignment. However, since the users of ride-hailing platforms consist of two parties, decision-making needs to simultaneously account for the dynamics from both the driver and the passenger sides. This makes it more challenging than traditional online advertising tasks that predict a user’s response towards an object, e.g., click-through rate prediction for advertisements. Moreover, the amount of available data is severely imbalanced across different cities, creating difficulties for training an accurate model for smaller cities with scarce data. Though a sophisticated neural network architecture can help improve the prediction accuracy under data scarcity, the overly complex design will impede the model’s capacity of delivering timely predictions in a production environment. In the paper, to accurately predict the MSR of passenger-driver, we propose the Multi-View model (MV) which comprehensively learns the interactions among the dynamic features of the passenger, driver, trip order, as well as the context. Regarding the data imbalance problem, we further design the Knowledge Distillation framework (KD) to supplement the model’s predictive power for smaller cities using the knowledge from cities with denser data, and also generate a simple model to support efficient deployment. Finally, we conduct extensive experiments on real-world datasets from several different cities, which demonstrates the superiority of our solution.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Product-based neural networks for user response prediction\",\n        \"Learning deep structured semantic models for web search using clickthrough data\",\n        \"Functional zone based hierarchical demand prediction for bike system expansion\",\n        \"Deep spatio-temporal residual networks for citywide crowd flows prediction\",\n        \"A unified framework with multi-source data for predicting passenger demands of ride services\",\n        \"Learning from multiple cities: A meta-learning approach for spatial-temporal prediction\",\n        \"Crowd flow prediction by deep spatio-temporal transfer learning\",\n        \"Dynamic heterogeneous graph neural network for real-time event prediction\",\n        \"Deepfm: A factorization-machine based neural network for ctr prediction\",\n        \"Field-aware factorization machines for ctr prediction\",\n        \"A latent semantic model with convolutional-pooling structure for information retrieval\",\n        \"A multi-view deep learning approach for cross domain user modeling in recommendation systems\",\n        \"Neural factorization machines for sparse predictive analytics\",\n        \"Xdeepfm: Combining explicit and implicit feature interactions for recommender systems\",\n        \"Semantic modelling with long-short-term memory for information retrieval\",\n        \"Multi-rate deep learning for temporal recommendation\",\n        \"Sequence-aware factorization machines for temporal predictive analystics\",\n        \"Hybrid computing using a neural network with dynamic external memory\",\n        \"Neural turing machine\",\n        \"Do deep nets really need to be deep?\",\n        \"Distilling the knowledge in a neural network\",\n        \"Apprentice: Using knowledge distillation techniques to improve low-precision network accuracy\",\n        \"Long short-term memory\",\n        \"Learning phrase representations using rnn encoder-decoder for statistical machine translation\",\n        \"Gated self-matching networks for reading comprehension and question answering.\",\n        \"Adam: A method for stochastic optimization\",\n        \"Deep interest network for click-through rate prediction\",\n        \"Deep andcross network for ad click predictions\",\n        \"Wide and deep learning for recommender systems\",\n        \"Deep crossing: Web-scale modeling without manually crafted combinatorial features\",\n        \"Interpretable click-through rate prediction through hierarchical attention\",\n        \"Autoint: Automatic feature interaction learning via self-attentive neural networks\",\n        \"Zest: a hybrid model on predicting passenger demand for chauffeured car service\",\n        \"Traffic speed prediction and congestion source exploration: A deep learning method\",\n        \"The simpler the better: a unified approach to predicting original taxi demands based on large-scale online platforms\",\n        \"Deepmove: Predicting human mobility with attentional recurrent networks\",\n        \"Deep multi-view spatial-temporal network for taxi demand prediction\",\n        \"Origin-destination matrix prediction via graph convolution: a new perspective of passenger demand modeling\",\n        \"Adaptive dynamic bipartite graph matching: A reinforcement learning approach\",\n        \"Learning to assign: Towards fair task assignment in large-scale ride hailing\",\n        \"Two-sided online micro-task assignment in spatial crowdsourcing\",\n        \"Online mobile micro-task allocation in spatial crowdsourcing\",\n        \"Online minimum matching in real-time spatial data: experiments and analysis\",\n        \"Product-based neural networks for user response prediction over multi-field categorical data\",\n        \"Factorization machines\",\n        \"Attentional factorization machines: Learning the weight of feature interactions via attention networks\",\n        \"Ranking distillation: Learning compact ranking models with high performance for recommender system\",\n        \"Next point-of-interest recommendation on resource-constrained mobile devices\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Secure Your Ride: Real-time Matching Success Rate Prediction for Passenger-Driver Pairs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}