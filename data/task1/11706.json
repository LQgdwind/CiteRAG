{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 52 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Symbolic Regression with a Learned Concept Library\n\nPaper Abstract: Abstract We present a novel method for symbolic regression (SR), the task of searching for compact programmatic hypotheses that best explain a dataset. The problem is commonly solved using genetic algorithms; we show that we can enhance such methods by inducing a library of abstract textual concepts. Our algorithm, called LaSR, uses zero-shot queries to a large language model (LLM) to discover and evolve concepts occurring in known high-performing hypotheses. We discover new hypotheses using a mix of standard evolutionary steps and LLM-guided steps (obtained through zero-shot LLM queries) conditioned on discovered concepts. Once discovered, hypotheses are used in a new round of concept abstraction and evolution. We validate LaSR on the Feynman equations, a popular SR benchmark, as well as a set of synthetic tasks. On these benchmarks, LaSR substantially outperforms a variety of state-of-the-art SR approaches based on deep learning and evolutionary algorithms. Moreover, we show that LaSR can be used to discover a novel and powerful scaling law for LLMs.\n\n{retrieved_text}\n\nGenerate exactly 52 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 52\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Revisiting neural scaling laws in language and vision\",\n        \"Emerging materials intelligence ecosystems propelled by machine learning\",\n        \"Top-down synthesis for library learning\",\n        \"Language models are few-shot learners\",\n        \"Broken neural scaling laws\",\n        \"Neurosymbolic programming\",\n        \"Evaluating large language models trained on code\",\n        \"Spreadsheetcoder: Formula prediction from semi-structured context\",\n        \"Interpretable machine learning for science with pysr and symbolicregression. jl\",\n        \"Discovering symbolic models from deep learning with inductive biases\",\n        \"Discovery of a planar black hole mass scaling relation for spiral galaxies\",\n        \"Robustfill: Neural program learning under noisy I/O\",\n        \"Learning libraries of subroutines for neurallyâ€“guided Bayesian program induction\",\n        \"Dreamcoder: Growing generalizable, interpretable knowledge with wake-sleep Bayesian program learning\",\n        \"Beyond the imitation game: Quantifying and extrapolating the capabilities of language models\",\n        \"The llama 3 herd of models\",\n        \"Information processing, data inferences, and scientific generalization\",\n        \"Lilo: Learning interpretable libraries by compressing and documenting code\",\n        \"Data-driven equation discovery of a cloud cover parameterization\",\n        \"Visual programming: Compositional visual reasoning without training\",\n        \"Fast, accurate, and transferable many-body interatomic potentials by symbolic regression\",\n        \"Training compute-optimal large language models\",\n        \"Introduction to automata theory, languages, and computation, 3rd Edition\",\n        \"Efficient memory management for large language model serving with pagedattention\",\n        \"Contemporary symbolic regression methods and their relative performance\",\n        \"Human-level concept learning through probabilistic program induction\",\n        \"A unified framework for deep symbolic regression\",\n        \"Bacon: A production system that discovers empirical laws\",\n        \"Rediscovering orbital mechanics with machine learning\",\n        \"Starcoder: may the source be with you!\",\n        \"Competition-level code generation with alphacode\",\n        \"Interpretable scientific discovery with symbolic regression: a review\",\n        \"In-context symbolic regression: Leveraging language models for function discovery\",\n        \"Neural sketch learning for conditional program generation\",\n        \"Srbench symbolic solution\",\n        \"Deep symbolic regression: Recovering mathematical expressions from data via risk-seeking policy gradients\",\n        \"Regularized evolution for image classifier architecture search\",\n        \"Mathematical discoveries from program search with large language models\",\n        \"Distilling free-form natural laws from experimental data\",\n        \"Age-fitness pareto optimization\",\n        \"Learning differentiable programs with admissible neural heuristics\",\n        \"Program synthesis and semantic parsing with learned code idioms\",\n        \"Llm-sr: Scientific equation discovery via programming with large language models\",\n        \"Scaling llm test-time compute optimally can be more effective than scaling model parameters\",\n        \"gplearn: Genetic programming in python, with a scikit-learn inspired api\",\n        \"Vipergpt: Visual inference via python execution for reasoning\",\n        \"Ai feynman: A physics-inspired method for symbolic regression\",\n        \"Machine learning the gravity equation for international trade\",\n        \"Machine learning for the prediction of pseudorealistic pediatric abdominal phantoms for radiation dose reconstruction\",\n        \"The unreasonable effectiveness of mathematics in the natural sciences\",\n        \"Leveraging language to learn program abstractions and search heuristics\",\n        \"Parsel: Algorithmic reasoning with language models by composing decompositions\"\n    ],\n    \"reasoning\": \"Selected these 52 references because they represent foundational work and recent advances in Symbolic Regression with a Learned Concept Library, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}