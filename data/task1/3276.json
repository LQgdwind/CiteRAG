{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 46 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Neural Graph Matching based Collaborative Filtering\n\nPaper Abstract: Abstract. User and item attributes are essential side-information; their interactions (i.e., their co-occurrence in the sample data) can significantly enhance prediction accuracy in various recommender systems. We identify two different types of attribute interactions, inner interactions and cross interactions: inner interactions are those between only user attributes or those between only item attributes; cross interactions are those between user attributes and item attributes. Existing models do not distinguish these two types of attribute interactions, which may not be the most effective way to exploit the information carried by the interactions. To address this drawback, we propose a neural Graph Matching based Collaborative Filtering model (GMCF), which effectively captures the two types of attribute interactions through modeling and aggregating attribute interactions in a graph matching structure for recommendation. In our model, the two essential recommendation procedures, characteristic learning and preference matching, are explicitly conducted through graph learning (based on inner interactions) and node matching (based on cross interactions), respectively. Experimental results show that our model outperforms state-of-the-art models. Further studies verify the effectiveness of GMCF in improving the accuracy of recommendation.\n\n{retrieved_text}\n\nGenerate exactly 46 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 46\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Incorporating Side Information in Probabilistic Matrix Factorization with Gaussian Processes\",\n        \"SimGNN: A Neural Network Approach to Fast Graph Similarity Computation\",\n        \"Interaction Networks for Learning about Objects, Relations and Physics\",\n        \"Latent Cross: Making Use of Context in Recurrent Recommender Systems\",\n        \"Signature Verification Using a ”Siamese” Time Delay Neural Network\",\n        \"A Compositional Object-based Approach to Learning Physical Dynamics\",\n        \"Wide & Deep Learning for Recommender Systems\",\n        \"Graph Matching Algorithms for Business Process Model Similarity Search\",\n        \"Convolutional networks on graphs for learning molecular fingerprints\",\n        \"Neural Message Passing for Quantum Chemistry\",\n        \"DeepFM: a Factorization-Machine based Neural Network for CTR prediction\",\n        \"The Movielens Datasets: History and Context\",\n        \"Neural Factorization Machines for Sparse Predictive Analytics\",\n        \"Neural Collaborative Filtering\",\n        \"CARL: Aggregated Search with Context-Aware Module Embedding Learning\",\n        \"Marginalized kernels between labeled graphs\",\n        \"Adam: A Method for Stochastic Optimization\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Matrix Factorization Techniques for Recommender Systems\",\n        \"Graph Matching Networks for Learning the Similarity of Graph Structured Objects\",\n        \"Fi-GNN: Modeling Feature Interactions via Graph Neural Networks for CTR Prediction\",\n        \"AutoFIS: Automatic Feature Interaction Selection in Factorization Models for Click-Through Rate Prediction\",\n        \"Graph Pooling via Coarsened Graph Infomax\",\n        \"Rascal: Calculation of Graph Similarity Using Maximum Common Edge Subgraphs\",\n        \"Factorization Machines\",\n        \"Fast Subtree Kernels on Graphs\",\n        \"Efficient Graphlet Kernels for Large Graph Comparison\",\n        \"Autoint: Automatic Feature Interaction Learning via Self-attentive Neural Networks\",\n        \"MMF: Attribute Interpretable Collaborative Filtering\",\n        \"Detecting Beneficial Feature Interactions for Recommender Systems\",\n        \"Graph Convolutional Matrix Completion\",\n        \"Graph Kernels\",\n        \"Knowledge-Aware Graph Neural Networks with Label Smoothness Regularization for Recommender Systems\",\n        \"Kgat: Knowledge Graph Attention Network for Recommendation\",\n        \"Neural Graph Collaborative Filtering\",\n        \"Combating Selection Biases in Recommender Systems with a Few Unbiased Ratings\",\n        \"Chemical Similarity Searching\",\n        \"Reinforcement Knowledge Graph Reasoning for Explainable Recommendation\",\n        \"Attentional Factorization Machines: Learning the Weight of Feature Interactions via Attention Networks\",\n        \"How Powerful are Graph Neural Networks?\",\n        \"Substructure Similarity Search in Graph Databases\",\n        \"Collaborative Knowledge base Embedding for Recommender Systems\",\n        \"WGCN: Graph Convolutional Networks with Weighted Structural Features\",\n        \"Deep Interest Network for Click-through Rate Prediction\",\n        \"Improving Recommendation Lists Through Topic Diversification\",\n        \"Joseph A Konstan\"\n    ],\n    \"reasoning\": \"Selected these 46 references because they represent foundational work and recent advances in Neural Graph Matching based Collaborative Filtering, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}