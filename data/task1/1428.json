{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Scaling Distributed Deep Learning Workloads beyond the Memory Capacity with KARMA\n\nPaper Abstract: Abstract The dedicated memory of hardware accelerators can be insufficient to store all weights and/or intermediate states of large deep learning models. Although model parallelism is a viable approach to reduce the memory pressure issue, significant modification of the source code and considerations for algorithms are required. An alternative solution is to use out-of-core methods instead of, or in addition to, data parallelism. We propose a performance model based on the concurrency analysis of out-of-core training behavior, and derive a strategy that combines layer swapping and redundant recomputing. We achieve an average of 1.52x speedup in six different models over the state-of-the-art out-of-core methods. We also introduce the first method to solve the challenging problem of out-of-core multi-node training by carefully pipelining gradient exchanges and performing the parameter updates on the host. Our data parallel out-of-core solution can outperform complex hybrid model parallelism in training large models, e.g. Megatron-LM and Turning-NLG.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Integrated model, batch, and domain parallelism in training neural networks\",\n        \"Deep residual learning for image recognition\",\n        \"Megatron-lm: Training multi-billion parameter language models using model parallelism\",\n        \"Zero: Memory optimization towards training a trillion parameter models\",\n        \"Cosmoflow: Using deep learning to learn the universe at scale\",\n        \"Imagenet: A large-scale hierarchical image database\",\n        \"Channel and Filter Parallelism for Large-Scale CNN Training\",\n        \"GPipe: Efficient Training of Giant Neural Networks using Pipeline Parallelism\",\n        \"Oc-dnn: Exploiting advanced unified memory capabilities in cuda 9 and volta gpus for out-of-core dnn training\",\n        \"Dynamic memory management for gpu-based training of deep neural networks\",\n        \"ooc_cudnn: Accommodating convolutional neural networks over GPU memory capacity\",\n        \"Superneurons: Dynamic gpu memory management for training deep neural networks\",\n        \"Profiling based out-of-core hybrid method for large neural networks: poster\",\n        \"Capuchin: Tensor-based gpu memory management for deep learning\",\n        \"Pytorch: An imperative style, high-performance deep learning library\",\n        \"Training deep nets with sublinear memory cost\",\n        \"Device placement optimization with reinforcement learning\",\n        \"Beyond Data and Model Parallelism for Deep Neural Networks\",\n        \"A graph theoretic framework of recomputation algorithms for memory-efficient backpropagation\",\n        \"Breaking the memory wall with optimal tensor rematerialization\",\n        \"Integrated model, batch and domain parallelism in training neural networks\",\n        \"Exploring hidden dimensions in parallelizing convolutional neural networks\",\n        \"Supporting very large models using automatic dataflow graph partitioning\",\n        \"The tensorflow partitioning and scheduling problem: It‚Äôs the critical path!\",\n        \"Fault tolerance in iterative-convergent machine learning\",\n        \"What does fault tolerant deep learning need from mpi?\",\n        \"A survey of techniques for optimizing deep learning on gpus\",\n        \"Fast algorithm using summed area tables with unified layer performing convolution and average pooling\",\n        \"Long short-term memory\",\n        \"Neural machine translation by jointly learning to align and translate\",\n        \"Benanza: Automatic Œºùúá\\\\mathbf{\\\\mu}benchmark generation to compute ‚Äùlower-bound‚Äù latency and inform optimizations of deep learning models on gpus\",\n        \"vdnn: Virtualized deep neural networks for scalable, memory-efficient neural network design\",\n        \"Dynamic clustering using combinatorial particle swarm optimization\",\n        \"Yet another accelerated sgd: Resnet-50 training on imagenet in 74.7 seconds\",\n        \"Aluminum: An asynchronous, gpu-aware communication library optimized for large-scale training of deep neural networks on hpc systems\",\n        \"Mg-wfbp: Efficient data communication for distributed synchronous sgd algorithms\",\n        \"Extended ant colony optimization for non-convex mixed integer nonlinear programming\",\n        \"Midaco 6.0: Mixed integer distributed ant colony optimization\",\n        \"Very Deep Convolutional Networks for Large-Scale Image Recognition\",\n        \"Wide residual networks\",\n        \"Learning multiple layers of features from tiny images\",\n        \"U-net: Convolutional networks for biomedical image segmentation\",\n        \"serial section transmission electron microscopy (sstem) dataset\",\n        \"openwebtext dataset\",\n        \"Language models are unsupervised multitask learners\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Scaling Distributed Deep Learning Workloads beyond the Memory Capacity with KARMA, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}