{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 59 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Certifying Phase Abstraction\n\nPaper Abstract: Abstract Certification helps to increase trust in formal verification of safety-critical systems which require assurance on their correctness. In hardware model checking, a widely used formal verification technique, phase abstraction is considered one of the most commonly used preprocessing techniques. We present an approach to certify an extended form of phase abstraction using a generic certificate format. As in earlier works our approach involves constructing a witness circuit with an inductive invariant property that certifies the correctness of the entire model checking process, which is then validated by an independent certificate checker. We have implemented and evaluated the proposed approach including certification for various preprocessing configurations on hardware model checking competition benchmarks. As an improvement on previous work in this area, the proposed method is able to efficiently complete certification with an overhead of a fraction of model checking time.\n\n{retrieved_text}\n\nGenerate exactly 59 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 59\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"H.: Programming a symbolic model checker in a fully expansive theorem prover. In: TPHOLs. Lecture Notes in Computer Science\",\n        \"Programming a symbolic model checker in a fully expansive theorem prover\",\n        \"Principles of model checking\",\n        \"Proceedings of SAT Competition 2016 – Solver and Benchmark Descriptions\",\n        \"Generating and exploiting automated reasoning proof certificates\",\n        \"Flexible proof production in an industrial-strength SMT solver\",\n        \"Model checking the IBM gigahertz processor: An abstraction algorithm for high-performance netlists\",\n        \"An abstraction algorithm for the verification of level-sensitive latch-based netlists\",\n        \"Bridging hardware and software analysis with Btor2C: A word-level-circuit-to-C translator\",\n        \"Correctness witnesses: Exchanging verification results between verifiers\",\n        \"Verification witnesses\",\n        \"Bounded model checking\",\n        \"Consistency checking of all different constraints over bit-vectors within a SAT solver\",\n        \"Hardware model checking competition 2010\",\n        \"AIGER 1.9 and beyond\",\n        \"Stratified certification for k-induction\",\n        \"Automatic generalized phase abstraction for formal verification\",\n        \"SAT-based model checking without unrolling\",\n        \"ABC: An academic industrial-strength verification tool\",\n        \"Approximate reachability with combined symbolic and ternary simulation\",\n        \"Enhanced verification by temporal decomposition\",\n        \"Certifaiger\",\n        \"Model checking, 2nd Edition\",\n        \"Handbook of Model Checking\",\n        \"Equality reasoning in sequent-based calculi\",\n        \"Efficient implementation of property directed reachability\",\n        \"Exploiting functional dependencies in finite state machine verification\",\n        \"A fully verified executable LTL model checker\",\n        \"Mining definitions in Kissat with Kittens\",\n        \"Sat competition 2020\",\n        \"Toward unification of synthesis and verification in topologically constrained logic design\",\n        \"Certifying proofs for LTL model checking\",\n        \"Certifying proofs for SAT-based model checking\",\n        \"Efficient, verified checking of propositional proofs\",\n        \"Proofs of unsatisfiability\",\n        \"Proofs for satisfiability problems\",\n        \"A simple proof format for SMT\",\n        \"Practical algebraic calculus and nullstellensatz with the checkers pacheck and pastèque and nuss-checker\",\n        \"Robust boolean reasoning for equivalence checking and functional property verification\",\n        \"Increasing confidence in liveness model checking results with proofs\",\n        \"Definability for model counting\",\n        \"Efficient verified (UN)SAT certificate checking\",\n        \"Proof certificates for SMT-based model checkers for infinite-state systems\",\n        \"Dag-aware AIG rewriting a fresh look at combinational logic synthesis\",\n        \"Improvements to combinational equivalence checking\",\n        \"FRAIGs: A unifying representation for logic synthesis and verification\",\n        \"Exploiting constraints in transformation-based verification\",\n        \"Certifying model checkers\",\n        \"Isabelle/HOL: a proof assistant for higher-order logic\",\n        \"Essai d’une théorie algébrique des nombres entiers, précédé d’une introduction logique à une theorie déductive quelconque\",\n        \"The sledgehammer: Let automatic theorem provers write your isabelle scripts\",\n        \"Alethe: Towards a generic SMT proof format (extended abstract)\",\n        \"Formal verification by symbolic evaluation of partially-ordered trajectories\",\n        \"Interpolation-based semantic gate extraction and its applications to QBF preprocessing\",\n        \"A verified model checker for the modal μ-calculus in Coq\",\n        \"On the complexity of derivation in propositional calculus\",\n        \"Progress in certifying hardware model checking results\",\n        \"Towards compositional hardware model checking certification\",\n        \"On subsumption removal and on-the-fly CNF simplification\"\n    ],\n    \"reasoning\": \"Selected these 59 references because they represent foundational work and recent advances in Certifying Phase Abstraction, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}