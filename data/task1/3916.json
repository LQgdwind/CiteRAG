{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Compressed Monte Carlo with application in particle filtering\n\nPaper Abstract: Abstract Bayesian models have become very popular over the last years in several fields such as signal processing, statistics, and machine learning. Bayesian inference requires the approximation of complicated integrals involving posterior distributions. For this purpose, Monte Carlo (MC) methods, such as Markov Chain Monte Carlo and importance sampling algorithms, are often employed. In this work, we introduce the theory and practice of a Compressed MC (C-MC) scheme to compress the statistical information contained in a set of random samples. In its basic version, C-MC is strictly related to the stratification technique, a well-known method used for variance reduction purposes. Deterministic C-MC schemes are also presented, which provide very good performance. The compression problem is strictly related to the moment matching approach applied in different filtering techniques, usually called as Gaussian quadrature rules or sigma-point methods. C-MC can be employed in a distributed Bayesian inference framework when cheap and fast communications with a central processor are required. Furthermore, C-MC is useful within particle filtering and adaptive IS algorithms, as shown by three novel schemes introduced in this work. Six numerical results confirm the benefits of the introduced schemes, outperforming the corresponding benchmark methods. A related code is also provided.111The code is provided at http://www.lucamartino.altervista.org/CMC_CODE_pub_EX1.zip\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Cubature Kalman filters\",\n        \"Exofit: orbital parameters of extrasolar planets from radial velocities\",\n        \"Resampling algorithms and architectures for distributed particle filters\",\n        \"Adaptive importance sampling: The past, the present, and the future\",\n        \"Adaptive importance sampling in general mixture classes\",\n        \"Population Monte Carlo\",\n        \"Distributed fusion in sensor networks\",\n        \"Particle weight approximation with clustering for gossip- based distributed particle filters\",\n        \"Stein Points\",\n        \"Super-samples from kernel herding\",\n        \"Multiple particle filtering\",\n        \"Sequential Monte Carlo Methods in Practice\",\n        \"Fast particle smoothing: If I had a million particles\",\n        \"Set-membership constrained particle filter: distributed adaptation for sensor networks\",\n        \"Using random Quasi-Monte Carlo within particle filters, with application to financial time series\",\n        \"Sequential quasi Monte Carlo\",\n        \"Consensus-based distributed particle filtering with distributed proposal adaptation\",\n        \"Optimally-weighted herding is Bayesian quadrature\",\n        \"Nonparametric belief propagation for self-localization of sensor networks\",\n        \"Efficient multiscale sampling from products of Gaussian Mixtures\",\n        \"Unscented filtering and nonlinear estimation\",\n        \"Gaussian particle filtering\",\n        \"Gaussian sum particle filtering\",\n        \"Sequential kernel herding: Frank-Wolfe optimization for particle filtering\",\n        \"Resampling methods for particle filtering: classification, implementation, and strategies\",\n        \"Deterministic resampling: Unbiased sampling to avoid sample impoverishment in particle filters\",\n        \"Monte Carlo Strategies in Scientific Computing\",\n        \"Efficiency improvement and variance reduction\",\n        \"Projected support points: a new method for high-dimensional data reduction\",\n        \"Support points\",\n        \"Group Importance Sampling for Particle Filtering and MCMC\",\n        \"Weighting a resampled particle in Sequential Monte Carlo\",\n        \"Layered adaptive importance sampling\",\n        \"A multi-point Metropolis scheme with generic weight functions\",\n        \"Cooperative parallel particle filters for on-line model selection and applications to urban mobility\",\n        \"A proof of uniform convergence over time for a distributed particle filter\",\n        \"Diffusive particle filtering for distributed multisensor estimation\",\n        \"Asymptotically exact, embarrassingly parallel MCMC\",\n        \"Random Number Generation and Quasi-Monte Carlo Methods\",\n        \"Asynchronous distributed particle filter via decentralized evaluation of gaussian products\",\n        \"Monte Carlo theory, methods and examples\",\n        \"Minimax and maximin space-filling designs: some properties and methods for construction\",\n        \"A distributed particle filter for nonlinear tracking in wireless sensor networks\",\n        \"Monte Carlo Statistical Methods\",\n        \"Bayesian Filtering and Smoothing\",\n        \"Markov Chain Importance Sampling - a highly efficient estimator for MCMC\",\n        \"Bayes and big data: The consensus Monte Carlo algorithm\",\n        \"On parallel implementation of sequential Monte Carlo methods: the island particle model\",\n        \"Variance reduction techniques for digital simulation\",\n        \"A numerical-integration perspective on Gaussian filters\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Compressed Monte Carlo with application in particle filtering, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}