{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 45 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Zoomer: Boosting Retrieval on Web-scale Graphs by Regions of Interest\n\nPaper Abstract: Abstract We introduce Zoomer, a system deployed at Taobao, the largest e-commerce platform in China, for training and serving GNN-based recommendations over web-scale graphs. Zoomer is designed for tackling two challenges presented by the massive user data at Taobao: low training/serving efficiency due to the huge scale of the graphs, and low recommendation quality due to the information overload which distracts the recommendation model from specific user intentions. Zoomer achieves this by introducing a key concept, Region of Interests (ROI) in GNNs for recommendations, i.e., a neighborhood region in the graph with significant relevance to a strong user intention. Zoomer narrows the focus from the whole graph and “zooms in” on the more relevant ROIs, thereby reducing the training/serving cost and mitigating the information overload at the same time. With carefully designed mechanisms, Zoomer identifies the interest expressed by each recommendation request, constructs an ROI subgraph by sampling with respect to the interest, and guides the GNN to reweigh different parts of the ROI towards the interest by a multi-level attention module. Deployed as a large-scale distributed system, Zoomer supports graphs with billions of nodes for training and thousands of requests per second for serving. Zoomer achieves up to 14x speedup when downsizing sampling scales with comparable (even better) AUC performance than baseline methods. Besides, both the offline evaluation and online A/B test demonstrate the effectiveness of Zoomer.\n\n{retrieved_text}\n\nGenerate exactly 45 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 45\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Graph neural networks in recommender systems: a survey\",\n        \"Basket recommendation with multi-intent translation graph neural network\",\n        \"Geometric deep learning: progress, applications and challenges\",\n        \"Aligraph: A comprehensive graph neural network platform\",\n        \"Deep graph library: A graph-centric, highly-performant package for graph neural networks\",\n        \"Graph convolutional neural networks for web-scale recommender systems\",\n        \"Multisage: Empowering gcn with contextualized multi-embeddings on web-scale multipartite networks\",\n        \"Search-based user interest modeling with lifelong sequential behavior data for click-through rate prediction\",\n        \"One trillion edges: Graph processing at facebook-scale\",\n        \"Towards efficient allocation of graph convolutional networks on hybrid computation-in-memory architecture\",\n        \"Graph attention multi-layer perceptron\",\n        \"Node dependent local smoothing for scalable graph learning\",\n        \"Rod: reception-aware online distillation for sparse graphs\",\n        \"Degnn: Improving graph neural networks with graph decomposition\",\n        \"Semi-supervised classification with graph convolutional networks\",\n        \"Graph convolutional matrix completion\",\n        \"Star-gcn: Stacked and reconstructed graph convolutional networks for recommender systems\",\n        \"Graph attention networks\",\n        \"Kgat: Knowledge graph attention network for recommendation\",\n        \"Hyperbolic graph attention network\",\n        \"Program enhanced fact verification with verbalization and graph attention network\",\n        \"Probabilistic graph attention network with conditional kernels for pixel-wise prediction\",\n        \"Inductive representation learning on large graphs\",\n        \"E-graphsage: A graph neural network based intrusion detection system\",\n        \"Ad click prediction: a view from the trenches\",\n        \"Mixed negative sampling for learning two-tower neural networks in recommendations\",\n        \"Fastgcn: fast learning with graph convolutional networks via importance sampling\",\n        \"Large-scale learnable graph convolutional networks\",\n        \"Beyond random walk and metropolis-hastings samplers: why you should not backtrack for unbiased graph sampling\",\n        \"Preserving minority structures in graph sampling\",\n        \"Pinnersage: Multi-modal user embedding framework for recommendations at pinterest\",\n        \"On random walk based graph sampling\",\n        \"Deepwalk: Online learning of social representations\",\n        \"Pixie: A system for recommending 3+ billion items to 200+ million users in real-time\",\n        \"Data processing platform\",\n        \"Distributed graph contruct and storage system\",\n        \"Alias method\",\n        \"Distributed graph learning framework\",\n        \"Online graph support\",\n        \"Global context enhanced graph neural networks for session-based recommendation\",\n        \"Factor graph neural network\",\n        \"Stamp: short-term attention/memory priority model for session-based recommendation\",\n        \"Multi-component graph convolutional collaborative filtering\",\n        \"Heterogeneous graph attention network\",\n        \"Openbox: A generalized black-box optimization service\"\n    ],\n    \"reasoning\": \"Selected these 45 references because they represent foundational work and recent advances in Zoomer: Boosting Retrieval on Web-scale Graphs by Regions of Interest, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}