{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 48 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Deep Incubation: Training Large Models by Divide-and-Conquering\n\nPaper Abstract: Abstract Recent years have witnessed a remarkable success of large deep learning models. However, training these models is challenging due to high computational costs, painfully slow convergence, and overfitting issues. In this paper, we present Deep Incubation, a novel approach that enables the efficient and effective training of large models by dividing them into smaller sub-modules which can be trained separately and assembled seamlessly. A key challenge for implementing this idea is to ensure the compatibility of the independently trained sub-modules. To address this issue, we first introduce a global, shared meta model, which is leveraged to implicitly link all the modules together, and can be designed as an extremely small network with negligible computational overhead. Then we propose a module incubation algorithm, which trains each sub-module to replace the corresponding component of the meta model and accomplish a given learning task. Despite the simplicity, our approach effectively encourages each sub-module to be aware of its role in the target large model, such that the finally-learned sub-modules can collaborate with each other smoothly after being assembled. Empirically, our method outperforms end-to-end (E2E) training in terms of both final accuracy and training efficiency. For example, on top of ViT-Huge, it improves the accuracy by 2.7% on ImageNet or achieves similar performance with 4Ã—\\times less training time. Notably, the gains are significant for downstream tasks as well (e.g., object detection and image segmentation on COCO and ADE20K). Code is available at https://github.com/LeapLabTHU/Deep-Incubation.\n\n{retrieved_text}\n\nGenerate exactly 48 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 48\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Lifted neural networks\",\n        \"Revisiting model stitching to compare neural representations\",\n        \"Greedy layerwise learning can scale to imagenet\",\n        \"Decoupled greedy learning of cnns\",\n        \"How auto-encoders could provide credit assignment in deep networks via target propagation\",\n        \"Dota 2 with large scale deep reinforcement learning\",\n        \"On the opportunities and risks of foundation models\",\n        \"Language models are few-shot learners\",\n        \"A simple framework for contrastive learning of visual representations\",\n        \"Similarity and matching of neural network representations\",\n        \"Understanding synthetic gradients and decoupled neural interfaces\",\n        \"Coatnet: Marrying convolution and attention for all data sizes\",\n        \"An image is worth 16x16 words: Transformers for image recognition at scale\",\n        \"Vision transformers with patch diversification\",\n        \"Masked autoencoders are scalable vision learners\",\n        \"Mask r-cnn\",\n        \"Distilling the knowledge in a neural network\",\n        \"Decoupled parallel backpropagation with convergence guarantee\",\n        \"Decoupled neural interfaces using synthetic gradients\",\n        \"Scaling laws for neural language models\",\n        \"Learning multiple layers of features from tiny images\",\n        \"Difference target propagation\",\n        \"Understanding image representations by measuring their equivariance and equivalence\",\n        \"Lifted proximal operator machines\",\n        \"Random feedback weights support learning in deep neural networks\",\n        \"Microsoft coco: Common objects in context\",\n        \"A convnet for the 2020s\",\n        \"Memory-efficient pipeline-parallel dnn training\",\n        \"Direct feedback alignment provides learning in deep neural networks\",\n        \"Language models are unsupervised multitask learners\",\n        \"Zero: Memory optimizations toward training trillion parameter models\",\n        \"Zero-infinity: Breaking the gpu memory wall for extreme scale deep learning\",\n        \"Fitnets: Hints for thin deep nets\",\n        \"Imagenet large scale visual recognition challenge\",\n        \"Progressive network grafting for few-shot knowledge distillation\",\n        \"Mastering chess and shogi by self-play with a general reinforcement learning algorithm\",\n        \"Training neural networks without gradients: A scalable admm approach\",\n        \"Training data-efficient image transformers & distillation through attention\",\n        \"Going deeper with image transformers\",\n        \"Revisiting locally supervised learning: an alternative to end-to-end training\",\n        \"Unified perceptual parsing for scene understanding\",\n        \"Deep model reassembly\",\n        \"Large batch optimization for deep learning: Training bert in 76 minutes\",\n        \"Florence: A new foundation model for computer vision\",\n        \"Scaling vision transformers\",\n        \"Convergent block coordinate descent for training tikhonov regularized deep neural networks\",\n        \"Semantic understanding of scenes through the ade20k dataset\",\n        \"Deepvit: Towards deeper vision transformer\"\n    ],\n    \"reasoning\": \"Selected these 48 references because they represent foundational work and recent advances in Deep Incubation: Training Large Models by Divide-and-Conquering, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}