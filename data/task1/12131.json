{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 47 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Recognizing 2-Layer and Outer ùëò-Planar Graphs\n\nPaper Abstract: Abstract The crossing number of a graph is the least number of crossings over all drawings of the graph in the plane. Computing the crossing number of a given graph is \\NP-hard, but fixed-parameter tractable (\\FPT) with respect to the natural parameter. Two well-known variants of the problem are 2-layer crossing minimization and circular crossing minimization, where every vertex must lie on one of two layers, namely two parallel lines, or a circle, respectively. In both cases, edges are drawn as straight-line segments. Both variants are \\NP-hard, but admit \\FPT-algorithms with respect to the natural parameter. In recent years, in the context of beyond-planar graphs, a local version of the crossing number has also received considerable attention. A graph is kk-planar if it admits a drawing with at most kk crossings per edge. In contrast to the crossing number, recognizing kk-planar graphs is \\NP-hard even if k=1k=1 and hence not likely to be \\FPT with respect to the natural parameter kk. In this paper, we consider the two above variants in the local setting. The kk-planar graphs that admit a straight-line drawing with vertices on two layers or on a circle are called 2-layer kk-planar and outer kk-planar graphs, respectively. We study the parameterized complexity of the two recognition problems with respect to the natural parameter kk. For k=0k=0, the two classes of graphs are exactly the caterpillars and outerplanar graphs, respectively, which can be recognized in linear time. Two groups of researchers independently showed that outer 11-planar graphs can also be recognized in linear time [Algorithmica 2015/2016]. One group asked explicitly whether outer 2-planar graphs can be recognized in polynomial time. Our main contribution consists of \\XP-algorithms for recognizing 2-layer kk-planar graphs and outer kk-planar graphs, which implies that both recognition problems can be solved in polynomial time for every fixed kk. We complement these results by showing that recognizing 2-layer kk-planar graphs is XNLP-complete and that recognizing outer kk-planar graphs is XNLP-hard. This implies that both problems are \\W[t][t]-hard for every tt and that it is unlikely that they admit \\FPT-algorithms. On the other hand, we present an \\FPT-algorithm for recognizing 2-layer kk-planar graphs where the order of the vertices on one layer is specified.\n\n{retrieved_text}\n\nGenerate exactly 47 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 47\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Eliminating crossings in ordered graphs\",\n        \"Edge Partitions of Complete Geometric Graphs\",\n        \"2-Layer kk-planar graphs: Density, crossing lemma, relationships and pathwidth\",\n        \"Outer 1-planar graphs\",\n        \"Parameterized complexity of 1-planarity\",\n        \"Crossing minimization for 1-page and 2-page drawings of graphs with bounded treewidth\",\n        \"Crossing reduction in circular layouts\",\n        \"Parameterized algorithms for book embedding problems\",\n        \"Min-kk-planar drawings of graphs\",\n        \"Constrained and ordered level planarity parameterized by the number of levels\",\n        \"Parameterized complexity of bandwidth of caterpillars and weighted path emulation\",\n        \"XNLP-completeness for parameterized problems on graphs with a linear structure\",\n        \"On the complexity of problems on tree-structured graphs\",\n        \"Parameterized problems complete for nondeterministic FPT time and logarithmic space\",\n        \"Adding one edge to planar graphs makes crossing number and 1-planarity hard\",\n        \"Product structure of graph classes with bounded treewidth\",\n        \"Beyond outerplanarity\",\n        \"Parameterized Algorithms\",\n        \"A note on the complexity of one-sided crossing minimization of trees, 2023.\",\n        \"Fundamentals of Parameterized Complexity\",\n        \"Hardness results for approximating the bandwidth\",\n        \"On the space and circuit complexity of parameterized problems: Classes and completeness\",\n        \"Bounding the treewidth of outer kk-planar graphs via triangulations\",\n        \"Parameterized Complexity Theory\",\n        \"Crossing number is NP-complete\",\n        \"Computers and Intractability: A Guide to the Theory of NP-Completeness\",\n        \"Algorithms for graphs embeddable with few crossings per edge\",\n        \"Computing crossing numbers in quadratic time\",\n        \"A linear-time algorithm for testing outer-1-planarity\",\n        \"A linear-time algorithm for testing full outer-2-planarity\",\n        \"The book thickness of a graph. II.\",\n        \"Computing crossing number in linear time\",\n        \"An improved fixed-parameter algorithm for one-page crossing minimization\",\n        \"A fast and simple subexponential fixed parameter algorithm for one-sided crossing minimization\",\n        \"A faster fixed parameter algorithm for two-layer crossing minimization\",\n        \"Parameterized algorithms for fixed-order book drawing with bounded number of crossings per edge\",\n        \"On parameterized algorithms for fixed-order book thickness with respect to the pathwidth of the vertex ordering\",\n        \"One sided crossing minimization is NP-hard for sparse graphs\",\n        \"Graphs drawn with few crossings per edge\",\n        \"On space efficiency of algorithms working on structural decompositions of graphs\",\n        \"Graph drawing aesthetics ‚Äì created by users, not algorithms\",\n        \"Dynamic-programming algorithms for recognizing small-bandwidth graphs in polynomial time\",\n        \"The graph crossing number and its variants: A survey\",\n        \"On bipartite drawings and the linear arrangement problem\",\n        \"Methods for visual understanding of hierarchical system structures\",\n        \"Testing gap kk-planarity is NP-complete\",\n        \"Parameterized analysis and crossing minimization problems\"\n    ],\n    \"reasoning\": \"Selected these 47 references because they represent foundational work and recent advances in Recognizing 2-Layer and Outer ùëò-Planar Graphs, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}