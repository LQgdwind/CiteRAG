{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 44 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: AritPIM: High-Throughput In-Memory Arithmetic\n\nPaper Abstract: Abstract Digital processing-in-memory (PIM) architectures are rapidly emerging to overcome the memory-wall bottleneck by integrating logic within memory elements. Such architectures provide vast computational power within the memory itself in the form of parallel bitwise logic operations. We develop novel algorithmic techniques for PIM that, combined with new perspectives on computer arithmetic, extend this bitwise parallelism to the four fundamental arithmetic operations (addition, subtraction, multiplication, and division), for both fixed-point and floating-point numbers, and using both bit-serial and bit-parallel approaches. We propose a state-of-the-art suite of arithmetic algorithms, demonstrating the first algorithm in the literature of digital PIM for a majority of cases – including cases previously considered impossible for digital PIM, such as floating-point addition. Through a case study on memristive PIM, we compare the proposed algorithms to an NVIDIA RTX 3070 GPU and demonstrate significant throughput and energy improvements.\n\n{retrieved_text}\n\nGenerate exactly 44 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 44\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Computing’s energy problem (and what we can do about it)\",\n        \"In-memory stateful logic computing using memristors: Gate, calculation, and application\",\n        \"A case for intelligent RAM\",\n        \"Logic design within memristive memories using memristor-aided logic (MAGIC)\",\n        \"RACER: Bit-pipelined processing using resistive memory\",\n        \"SIMDRAM: A framework for bit-serial SIMD processing using DRAM\",\n        \"ComputeDRAM: In-memory compute using off-the-shelf DRAMs\",\n        \"Associative computing: a programming paradigm for massively parallel computers\",\n        \"A 28-nm compute SRAM with bit-serial logic/arithmetic operations for programmable in-memory vector computing\",\n        \"FELIX: Fast and energy-efficient logic in memory\",\n        \"'Memristive' switches enable 'stateful' logic operations via material implication\",\n        \"Efficient in-memory processing using spintronics\",\n        \"Using spin-hall MTJs to build an energy-efficient in-memory computation platform\",\n        \"Ambit: In-memory accelerator for bulk bitwise operations using commodity DRAM technology\",\n        \"Ultra-efficient processing in-memory for data intensive applications\",\n        \"A novel in-memory wallace tree multiplier architecture using majority logic\",\n        \"Simple magic: Synthesis and in-memory mapping of logic execution for memristor-aided logic\",\n        \"In-memory processing on the spintronic CRAM: From hardware design to application mapping\",\n        \"Efficient algorithms for in-memory fixed point multiplication using MAGIC\",\n        \"SIMPLER MAGIC: Synthesis and mapping of in-memory logic executed in a single row to improve throughput\",\n        \"FloatPIM: In-memory acceleration of deep neural network training with high precision\",\n        \"Neural cache: Bit-serial in-cache acceleration of deep neural networks\",\n        \"General structure for computational random access memory (CRAM)\",\n        \"RIME: A scalable and energy-efficient processing-in-memory architecture for floating-point operations\",\n        \"MultPIM: Fast stateful multiplication for processing-in-memory\",\n        \"PartitionPIM: Practical memristive partitions for fast processing-in-memory\",\n        \"DRISA: A DRAM-based reconfigurable in-situ accelerator\",\n        \"Multiplication of many-digital numbers by automatic computers\",\n        \"Computer Arithmetic: Algorithms and Hardware Designs\",\n        \"A regular layout for parallel adders\",\n        \"An augmented iterative array for high-speed binary division\",\n        \"Arithmetic and logic in computer systems\",\n        \"Logic computing with stateful neural networks of resistive switches\",\n        \"Compute caches\",\n        \"Pinatubo: A processing-in-memory architecture for bulk bitwise operations in emerging non-volatile memories\",\n        \"Ferroelectric FET technology and applications: From devices to systems\",\n        \"Computing in memory with FeFETs\",\n        \"Accelerating force-directed graph layout with processing-in-memory architecture\",\n        \"Practical integer division with Karatsuba complexity\",\n        \"ReHy: A ReRAM-based digital/analog hybrid PIM architecture for accelerating CNN training\",\n        \"1 Mb 0.41 µm² 2T-2R cell nonvolatile TCAM with two-bit encoding and clocked self-referenced sensing\",\n        \"A fast serial-parallel binary multiplier\",\n        \"Analyzing the effects of interconnect parasitics in the STT CRAM in-memory computational platform\",\n        \"PyTorch: An imperative style, high-performance deep learning library\"\n    ],\n    \"reasoning\": \"Selected these 44 references because they represent foundational work and recent advances in AritPIM: High-Throughput In-Memory Arithmetic, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}