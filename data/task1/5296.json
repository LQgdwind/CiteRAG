{
  "messages": [
    {
      "role": "system",
      "content": "You are a professional academic reference prediction expert. Your task is to predict the most likely references for a given academic paper based on its title, abstract, and retrieved relevant papers.\n\nRETRIEVER INTERFACE:\n- Input: paper title + abstract\n- Output: {top_r} retrieved papers with title and abstract\n- Format: List of dictionaries with 'title' and 'abstract' fields\n\nREQUIREMENTS:\n1. Analyze the paper's title and abstract to understand its research area and focus\n2. Consider the retrieved papers as potential references (when available)\n3. Generate a list of predicted reference titles that would be most relevant and likely to be cited\n4. Provide reasoning for each prediction to prevent hallucination\n5. Output format: JSON object with \"titles\" array and \"reasoning\" string\n6. Generate exactly 50 most relevant reference titles (this should be at least 40 to cover all evaluation metrics)\n7. Ensure titles are realistic and appropriate for the research area\n8. Consider citation patterns in the field\n9. CRITICAL: Each title must be unique - never repeat the same title multiple times\n\nEXAMPLE:\nInput:\nTitle: \"Question Type Classification Methods Comparison\"\nAbstract: \"The paper presents a comparative study of state-of-the-art approaches for question classification task: Logistic Regression, Convolutional Neural Networks (CNN), Long Short-Term Memory Network (LSTM) and Quasi-Recurrent Neural Networks (QRNN). All models use pre-trained GLoVe word embeddings and trained on human-labeled data. The best accuracy is achieved using CNN model with five convolutional layers and various kernel sizes stacked in parallel, followed by one fully connected layer. The model reached 90.7% accuracy on TREC 10 test set.\"\n\nRetrieved papers ({top_r}):\n1. Title: Convolutional Neural Networks for Sentence Classification\n   Abstract: We report on a series of experiments with convolutional neural networks trained on top of pre-trained word vectors for sentence-level classification tasks.\n\n2. Title: Glove: Global vectors for word representation\n   Abstract: We present a new global log-bilinear regression model that combines the advantages of the two major model families in the literature.\n\nOutput:\n{\n  \"titles\": [\n    \"Convolutional Neural Networks for Sentence Classification\",\n    \"Glove: Global vectors for word representation\",\n    \"Quasi-Recurrent Neural Networks\",\n    \"A Comparative Study of Neural Network Models for Sentence Classification\",\n    \"Deep lstm based feature mapping for query classification\"\n  ],\n  \"reasoning\": \"Based on the paper's focus on question classification using neural networks, I predict these references because: 1) CNN paper is directly relevant to the convolutional approach used; 2) GloVe embeddings are mentioned as pre-trained features; 3) QRNN is one of the compared methods; 4) Comparative study papers are common in this field; 5) LSTM-based query classification is closely related to question classification. Additional references cover related neural network architectures, NLP applications, deep learning methodologies, optimization techniques, and advanced neural network methods that would be relevant for this research area.\"\n}\n\nReturn JSON object only."
    },
    {
      "role": "user",
      "content": "Paper Title: Learning Synthetic Environments and Reward Networks for Reinforcement Learning\n\nPaper Abstract: Abstract We introduce Synthetic Environments (SEs) and Reward Networks (RNs), represented by neural networks, as proxy environment models for training Reinforcement Learning (RL) agents. We show that an agent, after being trained exclusively on the SE, is able to solve the corresponding real environment. While an SE acts as a full proxy to a real environment by learning about its state dynamics and rewards, an RN is a partial proxy that learns to augment or replace rewards. We use bi-level optimization to evolve SEs and RNs: the inner loop trains the RL agent, and the outer loop trains the parameters of the SE / RN via an evolution strategy. We evaluate our proposed new concept on a broad range of RL algorithms and classic control environments. In a one-to-one comparison, learning an SE proxy requires more interactions with the real environment than training agents only on the real environment. However, once such an SE has been learned, we do not need any interactions with the real environment to train new agents. Moreover, the learned SE proxies allow us to train agents with fewer interactions while maintaining the original task performance. Our empirical results suggest that SEs achieve this result by learning informed representations that bias the agents towards relevant states. Moreover, we find that these proxies are robust against hyperparameter variation and can also transfer to unseen agents.\n\n{retrieved_text}\n\nGenerate exactly 50 most likely reference titles for this paper. Focus on papers that are directly related to the research topic, provide foundational background, present similar methodologies, or address related problems.\n\nCRITICAL: Each title must appear exactly once. Do not repeat any title.\n\nIMPORTANT: You must respond with ONLY valid JSON in this exact format:\n{\n    \"titles\": [\n        \"Reference Title 1\",\n        \"Reference Title 2\",\n        \"Reference Title 3\",\n        \"Reference Title 4\",\n        \"Reference Title 50\"\n    ],\n    \"reasoning\": \"Explain why you chose these specific references based on the paper's title, abstract, and retrieved papers. This helps prevent hallucination and ensures relevance.\"\n}\n\nDo not include any text before or after the JSON. Do not include authors, venues, or years - only the paper titles. The reasoning field is required to explain your prediction logic."
    },
    {
      "role": "assistant",
      "content": "{\n    \"titles\": [\n        \"Unifying count-based exploration and intrinsic motivation\",\n        \"Fully differentiable procedural content generation through generative playing networks\",\n        \"OpenAI Gym\",\n        \"Reinforcement learning from demonstration through shaping\",\n        \"Large-scale study of curiosity-driven learning\",\n        \"Leveraging procedural generation to benchmark reinforcement learning\",\n        \"Emergent complexity and zero-shot transfer via unsupervised environment design\",\n        \"BOHB: Robust and efficient hyperparameter optimization at scale\",\n        \"Evolving rewards to automate reinforcement learning\",\n        \"Addressing Function Approximation Error in Actor-Critic Methods\",\n        \"World models\",\n        \"Learning to utilize shaping rewards: A new approach of reward shaping\",\n        \"Automated Machine Learning: Methods, Systems, Challenges\",\n        \"Reward learning from human preferences and demonstrations in atari\",\n        \"Fairness in reinforcement learning\",\n        \"Human-level performance in 3d multiplayer games with population-based reinforcement learning\",\n        \"Categorical reparameterization with gumbel-softmax\",\n        \"Training a performant object detection ML model on synthetic data using Unity Perception tools\",\n        \"Imitation learning with demonstrations and shaping rewards\",\n        \"Teacher-student curriculum learning\",\n        \"Understanding and correcting pathologies in the training of learned optimizers\",\n        \"Model-based reinforcement learning: A survey\",\n        \"Policy invariance under reward transformations: Theory and application to reward shaping\",\n        \"PyTorch: An imperative style, high-performance deep learning library\",\n        \"Curiosity-driven exploration by self-supervised prediction\",\n        \"Evolutionsstrategie: Optimierung technischer systeme nach prinzipien der biologischen evolution. frommann-holzbog, stuttgart, 1973\",\n        \"On-line Q-learning using connectionist systems, volume 37\",\n        \"Evolution strategies as a scalable alternative to reinforcement learning\",\n        \"Proximal policy optimization algorithms\",\n        \"Procedural content generation in games\",\n        \"Mastering the game of go without human knowledge\",\n        \"Intrinsically motivated reinforcement learning: An evolutionary perspective\",\n        \"An analysis of model-based interval estimation for markov decision processes\",\n        \"Generative teaching networks: Accelerating neural architecture search by learning to generate synthetic training data\",\n        \"Integrated architectures for learning, planning, and reacting based on approximating dynamic programming\",\n        \"Reinforcement learning: An introduction\",\n        \"Policy gradient methods for reinforcement learning with function approximation\",\n        \"#exploration: A study of count-based exploration for deep reinforcement learning\",\n        \"Domain randomization for transferring deep neural networks from simulation to the real world\",\n        \"Mujoco: A physics engine for model-based control\",\n        \"Search-based procedural content generation: A taxonomy and survey\",\n        \"Deep reinforcement learning with double q-learning\",\n        \"Evolving mario levels in the latent space of a deep convolutional generative adversarial network\",\n        \"Paired open-ended trailblazer (poet): Endlessly generating increasingly complex and diverse learning environments and their solutions\",\n        \"Dueling network architectures for deep reinforcement learning\",\n        \"Learning from delayed rewards\",\n        \"Natural evolution strategies\",\n        \"On learning intrinsic rewards for policy gradient methods\",\n        \"What can learned intrinsic rewards capture?\",\n        \"Reward shaping via meta-learning\"\n    ],\n    \"reasoning\": \"Selected these 50 references because they represent foundational work and recent advances in Learning Synthetic Environments and Reward Networks for Reinforcement Learning, providing essential background knowledge and methodological foundations relevant to this research.\"\n}"
    }
  ],
  "format": "chatml"
}